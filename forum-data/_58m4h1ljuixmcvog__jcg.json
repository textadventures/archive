{
  "Topic": {
    "TopicId": "_58m4h1ljuixmcvog__jcg",
    "ForumId": "10",
    "Title": "Checking for object and amounts",
    "LastUpdated": "2017-08-09T09:22:47.5725896Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b933b8c7-c5cc-46ea-9bef-81a89537599d",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I have a command in my game that needs to check the player's entire inventory and all child inventory within, for a specific object; a \"Small Stick\".\r\n\r\nThen it needs to check how many of these items the player is carrying (via clones) to see if they have enough to let's say build a fire, for example. \r\n\r\nWould that be something like...\r\n```\r\nif  (Got(Small Stick)) {\r\n if (Small Stick.count >3) {\r\n }\r\nelse {\r\n }\r\n}\r\n```\r\n\r\nThanks in advance you guys, I greatly appreciate the help.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So I have a command in my game that needs to check the player's entire inventory and all child inventory within, for a specific object; a \"Small Stick\".</p>\n<p>Then it needs to check how many of these items the player is carrying (via clones) to see if they have enough to let's say build a fire, for example.</p>\n<p>Would that be something like...</p>\n<pre><code>if  (Got(Small Stick)) {\n if (Small Stick.count &gt;3) {\n }\nelse {\n }\n}\n</code></pre>\n<p>Thanks in advance you guys, I greatly appreciate the help.</p>\n\n",
      "PostDate": "2017-08-09T09:22:47.5725896Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "34d95492-8cc1-4757-8f02-5783ee1db3a3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you got a bunch of clones, they need an identifier/flag for them, for example:\r\n\r\n```\r\n<object name=\"potion\">\r\n  <attr name=\"type_of_in_game_item\" type=\"string\">potion</attr>\r\n</object>\r\n\r\n<object name=\"elixer\">\r\n  <attr name=\"type_of_in_game_item\" type=\"string\">elixer</attr>\r\n</object>\r\n\r\n// when you clone this Object, the clones will have the 'type_of_in_game_item\" String Attribute with its Value as 'potion', which you can 'if check' for.\r\n\r\n// scripting example:\r\n\r\npotion_count = 0\r\nforeach (object_variable, NAME_OF_OBJECT.NAME_OF_OBJECT_LIST_ATTRIBUTE) {\r\n  if (GetString (object_variable, \"type_of_in_game_item\") = \"potion\") {\r\n    potion_count = potion_count + 1\r\n  }\r\n}\r\nif (potion_count > 4) {\r\n  msg (\"blah blah blah\")\r\n}\r\n```\r\n\r\n-----------------------\r\n\r\nthe problem however is in whether you got container Objects in your 'player' Player Object, that your searching-for Object is within those container Objects.\r\n\r\nthere's ways of handling it... some more messy than others...\r\n\r\n-------------------- \r\n\r\nthe best method though is to handle the clones up front, so you don't have a bunch of clones (have a single container Object instead of a bunch of clones with an Integer Attribute for the quantity of them) ... basically: Sora's Stackable library, lol.\r\n\r\nPixie can probably help, as I think he implemented this design into his combat library code, and/or he (or maybe it was someone else) also updated Sora's Stackable Library to the current version of quest and its syntax.... at least I thought I saw someone doing this not too long back.",
      "EditableFormat": "markdown",
      "HTML": "<p>if you got a bunch of clones, they need an identifier/flag for them, for example:</p>\n<pre><code>&lt;object name=\"potion\"&gt;\n  &lt;attr name=\"type_of_in_game_item\" type=\"string\"&gt;potion&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"elixer\"&gt;\n  &lt;attr name=\"type_of_in_game_item\" type=\"string\"&gt;elixer&lt;/attr&gt;\n&lt;/object&gt;\n\n// when you clone this Object, the clones will have the 'type_of_in_game_item\" String Attribute with its Value as 'potion', which you can 'if check' for.\n\n// scripting example:\n\npotion_count = 0\nforeach (object_variable, NAME_OF_OBJECT.NAME_OF_OBJECT_LIST_ATTRIBUTE) {\n  if (GetString (object_variable, \"type_of_in_game_item\") = \"potion\") {\n    potion_count = potion_count + 1\n  }\n}\nif (potion_count &gt; 4) {\n  msg (\"blah blah blah\")\n}\n</code></pre>\n<hr>\n<p>the problem however is in whether you got container Objects in your 'player' Player Object, that your searching-for Object is within those container Objects.</p>\n<p>there's ways of handling it... some more messy than others...</p>\n<hr>\n<p>the best method though is to handle the clones up front, so you don't have a bunch of clones (have a single container Object instead of a bunch of clones with an Integer Attribute for the quantity of them) ... basically: Sora's Stackable library, lol.</p>\n<p>Pixie can probably help, as I think he implemented this design into his combat library code, and/or he (or maybe it was someone else) also updated Sora's Stackable Library to the current version of quest and its syntax.... at least I thought I saw someone doing this not too long back.</p>\n\n",
      "PostDate": "2017-08-09T11:42:22.1417078Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "293123b3-2eab-44ee-83ff-510fad0f987e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Use GetAllChildObjects to get objects in containers too. scopeInventory probably does that too for open containets which may ne better.\r\n\r\nUse FilterByAttribute on the list to get the ones you want. You could filter by alias i would guess.",
      "EditableFormat": "markdown",
      "HTML": "<p>Use GetAllChildObjects to get objects in containers too. scopeInventory probably does that too for open containets which may ne better.</p>\n<p>Use FilterByAttribute on the list to get the ones you want. You could filter by alias i would guess.</p>\n\n",
      "PostDate": "2017-08-09T21:17:50.1190338Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d7f5804-9171-441e-bee1-dbb877039f75",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How might that look in code? \r\n```\r\nGetScopeInventory()\r\nGetAllChildObjects\r\nif  (Got(Small Stick)) {\r\n if (Small Stick.count >3) {\r\n }\r\nelse {\r\n }\r\n}\r\n```\r\nI appreciate the replies so far!",
      "EditableFormat": "markdown",
      "HTML": "<p>How might that look in code?</p>\n<pre><code>GetScopeInventory()\nGetAllChildObjects\nif  (Got(Small Stick)) {\n if (Small Stick.count &gt;3) {\n }\nelse {\n }\n}\n</code></pre>\n<p>I appreciate the replies so far!</p>\n\n",
      "PostDate": "2017-08-09T21:49:54.2698345Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1a976f3b-130f-4a7c-9b3b-98924c90b60d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oops, forgot about 'GetAllChildObjects', thanks Pixie!\r\n\r\n--------\r\n\r\n```\r\ncount_integer_variable = 0\r\nforeach (object_variable, GetAllChildObjects (player)) {\r\n  if (StartsWith (object_variable.name, \"Small Stick\")) { // using the 'StartsWith' as this way you don't have to create an Attribute for its identification, instead of the use of the 'GetString' in my previous post's code\r\n    count_integer_variable = count_integer_variable + 1\r\n  }\r\n}\r\nif (count_integer_variable > 3) {\r\n  // scripting\r\n}\r\n// optionally:\r\nelse {\r\n  // scripting\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>oops, forgot about 'GetAllChildObjects', thanks Pixie!</p>\n<hr>\n<pre><code>count_integer_variable = 0\nforeach (object_variable, GetAllChildObjects (player)) {\n  if (StartsWith (object_variable.name, \"Small Stick\")) { // using the 'StartsWith' as this way you don't have to create an Attribute for its identification, instead of the use of the 'GetString' in my previous post's code\n    count_integer_variable = count_integer_variable + 1\n  }\n}\nif (count_integer_variable &gt; 3) {\n  // scripting\n}\n// optionally:\nelse {\n  // scripting\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-09T23:43:20.69484Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "862055dc-31ce-4ee4-80c8-9a8ffa423b1c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure this would work for my game. I'd have to ask Pixie.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure this would work for my game. I'd have to ask Pixie.</p>\n\n",
      "PostDate": "2017-08-12T01:32:39.3731224Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c9a9ebfb-a286-4a86-9ee5-b352345e2ea0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, Anonynn!\r\n\r\nPlugging your object's name into HK's example, which utilizes Pixie's suggestion:\r\n\r\n```\r\nstick_count = NewObjectList()\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"Small Stick\")) {\r\n    //msg (\"Found a stick!\") // for testing\r\n    //msg (o.parent)  // for testing\r\n    list add (stick_count, o)\r\n  }\r\n}\r\nsticks = ListCount(stick_count)\r\nif (sticks > 3) {\r\n  msg (\"You have more than 3 sticks. In fact, you have \" + sticks + \" sticks.\") // replace this with your script(s)\r\n}\r\nelse {\r\n  msg (\"\") // replace this with your script(s)\r\n  msg (\"Not enough sticks.\")  // replace this with your script(s)\r\n}\r\n```\r\n\r\n\r\n\r\nExample game code:\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Anonynn's Small Stick\">\r\n    <gameid>3b90cdd4-5cfd-4f44-976b-ab5609765cc7</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <start type=\"script\">\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[This is a test game.<br/><br/>Enter {command:STICKME:STICKME} or {command:STICKCOUNT:STICKCOUNT}<br/><br/><br/>OR:<br/><br/>{command:childinventory:childinventory}]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"bag\">\r\n        <inherit name=\"editor_object\" />\r\n        <object name=\"pouch\">\r\n          <inherit name=\"editor_object\" />\r\n          <object name=\"box\">\r\n            <inherit name=\"editor_object\" />\r\n            <object name=\"Small Stick\">\r\n              <inherit name=\"editor_object\" />\r\n            </object>\r\n          </object>\r\n        </object>\r\n      </object>\r\n    </object>\r\n    <turnscript>\r\n      <enabled />\r\n      <script>\r\n        HandleSingleCommand (\"look\")\r\n      </script>\r\n    </turnscript>\r\n  </object>\r\n  <command>\r\n    <pattern>stickme</pattern>\r\n    <script>\r\n      CloneObjectAndMove (Small Stick, player)\r\n      CloneObjectAndMove (Small Stick, pouch)\r\n      CloneObjectAndMove (Small Stick, box)\r\n      CloneObjectAndMove (Small Stick, bag)\r\n    </script>\r\n  </command>\r\n  <command>\r\n    <pattern>stickcount</pattern>\r\n    <script><![CDATA[\r\n      stick_count = NewObjectList()\r\n      foreach (o, GetAllChildObjects(player)) {\r\n        if (StartsWith(o.name, \"Small Stick\")) {\r\n          msg (\"Found a stick!\")\r\n          msg (o.parent)\r\n          list add (stick_count, o)\r\n        }\r\n      }\r\n      sticks = ListCount(stick_count)\r\n      if (sticks > 3) {\r\n        msg (\"You have more than 3 sticks. In fact, you have \" + sticks + \" sticks.\")\r\n      }\r\n      else {\r\n        msg (\"\")\r\n        msg (\"Not enough sticks.\")\r\n      }\r\n    ]]></script>\r\n  </command>\r\n  <command>\r\n    <script>\r\n      foreach (o, GetAllChildObjects(player)) {\r\n        msg (o.name + \": is in \" + o.parent.name)\r\n      }\r\n    </script>\r\n    <pattern>childinventory</pattern>\r\n  </command>\r\n</asl>\r\n```\r\n\r\n\r\nExample game:\r\n\r\n\r\nhttp://textadventures.co.uk/games/view/93e62fqi80kssodjqo9hhg/anonynns-small-stick",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, Anonynn!</p>\n<p>Plugging your object's name into HK's example, which utilizes Pixie's suggestion:</p>\n<pre><code>stick_count = NewObjectList()\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"Small Stick\")) {\n    //msg (\"Found a stick!\") // for testing\n    //msg (o.parent)  // for testing\n    list add (stick_count, o)\n  }\n}\nsticks = ListCount(stick_count)\nif (sticks &gt; 3) {\n  msg (\"You have more than 3 sticks. In fact, you have \" + sticks + \" sticks.\") // replace this with your script(s)\n}\nelse {\n  msg (\"\") // replace this with your script(s)\n  msg (\"Not enough sticks.\")  // replace this with your script(s)\n}\n</code></pre>\n<p>Example game code:</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Anonynn's Small Stick\"&gt;\n    &lt;gameid&gt;3b90cdd4-5cfd-4f44-976b-ab5609765cc7&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[This is a test game.&lt;br/&gt;&lt;br/&gt;Enter {command:STICKME:STICKME} or {command:STICKCOUNT:STICKCOUNT}&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;OR:&lt;br/&gt;&lt;br/&gt;{command:childinventory:childinventory}]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"bag\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;object name=\"pouch\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;object name=\"box\"&gt;\n            &lt;inherit name=\"editor_object\" /&gt;\n            &lt;object name=\"Small Stick\"&gt;\n              &lt;inherit name=\"editor_object\" /&gt;\n            &lt;/object&gt;\n          &lt;/object&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;turnscript&gt;\n      &lt;enabled /&gt;\n      &lt;script&gt;\n        HandleSingleCommand (\"look\")\n      &lt;/script&gt;\n    &lt;/turnscript&gt;\n  &lt;/object&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;stickme&lt;/pattern&gt;\n    &lt;script&gt;\n      CloneObjectAndMove (Small Stick, player)\n      CloneObjectAndMove (Small Stick, pouch)\n      CloneObjectAndMove (Small Stick, box)\n      CloneObjectAndMove (Small Stick, bag)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;stickcount&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      stick_count = NewObjectList()\n      foreach (o, GetAllChildObjects(player)) {\n        if (StartsWith(o.name, \"Small Stick\")) {\n          msg (\"Found a stick!\")\n          msg (o.parent)\n          list add (stick_count, o)\n        }\n      }\n      sticks = ListCount(stick_count)\n      if (sticks &gt; 3) {\n        msg (\"You have more than 3 sticks. In fact, you have \" + sticks + \" sticks.\")\n      }\n      else {\n        msg (\"\")\n        msg (\"Not enough sticks.\")\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command&gt;\n    &lt;script&gt;\n      foreach (o, GetAllChildObjects(player)) {\n        msg (o.name + \": is in \" + o.parent.name)\n      }\n    &lt;/script&gt;\n    &lt;pattern&gt;childinventory&lt;/pattern&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>Example game:</p>\n<p>http://textadventures.co.uk/games/view/93e62fqi80kssodjqo9hhg/anonynns-small-stick</p>\n\n",
      "PostDate": "2017-08-12T03:04:22.163385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a59ac5da-9f75-45d3-b15a-d77c06a84169",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay. I think I might get it.  The game has to check for two different item types and amounts so that the player can proceed to construct what they want to construct. The two items are: _large_sticks_ and _small_sticks_\r\n\r\nWould this work?\r\n\r\n```\r\nsmall_stick_count = NewObjectList()\r\nlarge_stick_count = NewObjectList()\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\r\n    list add (small_stick_count, o)\r\n    list add (large_stick_count, o)\r\n  }\r\n}\r\nsmall_stick_count = ListCount(stick_count)\r\nif (small_sticks > 3) {\r\n   if (large_sticks > 3) {\r\n   msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n }\r\n  else {\r\n  msg (\"Unfortunately, you don't have enough large sticks for this project.\") \r\n }\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```\r\nAnd thank you so much for all your help so far guys, I appreciate this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay. I think I might get it.  The game has to check for two different item types and amounts so that the player can proceed to construct what they want to construct. The two items are: <em>large_sticks</em> and <em>small_sticks</em></p>\n<p>Would this work?</p>\n<pre><code>small_stick_count = NewObjectList()\nlarge_stick_count = NewObjectList()\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\n    list add (small_stick_count, o)\n    list add (large_stick_count, o)\n  }\n}\nsmall_stick_count = ListCount(stick_count)\nif (small_sticks &gt; 3) {\n   if (large_sticks &gt; 3) {\n   msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n }\n  else {\n  msg (\"Unfortunately, you don't have enough large sticks for this project.\") \n }\nelse {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n<p>And thank you so much for all your help so far guys, I appreciate this.</p>\n\n",
      "PostDate": "2017-08-12T10:28:49.406845Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0c922d59-d4f6-4e7d-8ffe-7c3f0f85729f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "almost...\r\n\r\n(there's no reason to use Lists, unless you need to for whatever reason, such as get/move/remove/use them for something)\r\n(and if you do need to use Lists, then you'd want to use List Attributes, so you can preserve and use them elsewhere, and not as List Variables, which are destroyed upon the scripting completing)\r\n\r\n```\r\n// for tallying the counts of each item type (these are local Variable VARIABLES, they're destroyed upon the completion of the scripting, if you need to preserve their amounts, then you need to store their values into Attribute VARIABLES, or just use Attribute VARIABLES to begin within instead of these Variable VARIABLES):\r\n\r\nsmall_stick_count = 0\r\nlarge_stick_count = 0\r\n\r\n// iterate/search through your inventory (and any sub containers in your inventory), looking for any Object that has either the \"small_stick\" or \"large_stiack\" in the front of its name (the clones and original of these will indeed have this at the front of their names), and when found, add one to that item types' local count Variable:\r\n\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    small_stick_count = small_stick_count + 1\r\n  } else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\n\r\n// checking if you have enough of each item type to do your fire/shelter/etc scripting or not:\r\n\r\nif (small_stick_count > 3) {\r\n  if (large_stick_count > 3) {\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    // scripting for your construction of the fire/shelter/trap\r\n    // if you want something somewhere else to do the needed scripting, then you need to store the Values into Attributes:\r\n    // game.small_stick_count = small_stick_count\r\n    // game.large_stick_count = large_stick_count\r\n  } else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\") \r\n  }\r\n} else {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>almost...</p>\n<p>(there's no reason to use Lists, unless you need to for whatever reason, such as get/move/remove/use them for something)<br>\n(and if you do need to use Lists, then you'd want to use List Attributes, so you can preserve and use them elsewhere, and not as List Variables, which are destroyed upon the scripting completing)</p>\n<pre><code>// for tallying the counts of each item type (these are local Variable VARIABLES, they're destroyed upon the completion of the scripting, if you need to preserve their amounts, then you need to store their values into Attribute VARIABLES, or just use Attribute VARIABLES to begin within instead of these Variable VARIABLES):\n\nsmall_stick_count = 0\nlarge_stick_count = 0\n\n// iterate/search through your inventory (and any sub containers in your inventory), looking for any Object that has either the \"small_stick\" or \"large_stiack\" in the front of its name (the clones and original of these will indeed have this at the front of their names), and when found, add one to that item types' local count Variable:\n\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    small_stick_count = small_stick_count + 1\n  } else if (StartsWith(o.name, \"large_stick\")) {\n    large_stick_count = large_stick_count + 1\n  }\n}\n\n// checking if you have enough of each item type to do your fire/shelter/etc scripting or not:\n\nif (small_stick_count &gt; 3) {\n  if (large_stick_count &gt; 3) {\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    // scripting for your construction of the fire/shelter/trap\n    // if you want something somewhere else to do the needed scripting, then you need to store the Values into Attributes:\n    // game.small_stick_count = small_stick_count\n    // game.large_stick_count = large_stick_count\n  } else {\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\") \n  }\n} else {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-12T13:27:21.2797221Z",
      "LastEditDate": "2017-08-12T13:37:56.4103908Z",
      "link": null
    },
    {
      "PostId": "150f35b8-dc48-4b7a-81aa-73825d4ade4c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK\r\n\r\nThat's pretty slick!\r\n\r\n(Apparently I've been list-happy ever since I learned how to use them a little! I just went back through my recent scripts, and there are quite a few unnecessary lists I can remove. Awesome!)\r\n\r\n---\r\n@Anonynn\r\n\r\nHK's script is spot on!\r\n\r\nThe difference between his and yours:\r\n\r\n```\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\r\n    list add (small_stick_count, o)\r\n    list add (large_stick_count, o)\r\n  }\r\n}\r\n```\r\n\r\nThis would only find strings beginning with ```small_stick;large_stick```, rather than searching for either.\r\n\r\nEven if it did run the script when finding either size stick, it would add an object onto both lists each time it found either the small stick OR the large stick.\r\n\r\n---\r\nLet's switch it over to HK's way (removing my unnecessary lists and plugging in the codes to increase the counts by 1) and examine it:\r\n```\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\r\n   small_stick_count = small_stick_count + 1\r\n   large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\n```\r\n\r\nNow, picture that written a little differently, but performing the same task:\r\n```\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    if (StartsWith(o.name, \"large_stick\")) {\r\n       small_stick_count = small_stick_count + 1\r\n       large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n}\r\n```\r\nThis would increase the count of both sticks any time either stick was found.\r\n\r\n---\r\n\r\n\r\nHK separated them, so each size stick's count is increased with a separate ```IF...``` statement:\r\n\r\n```\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    small_stick_count = small_stick_count + 1\r\n  } \r\n  else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\n```\r\n\r\n---\r\nSo, here's HK's solution again (minus the notes; formatted in the style you'll see in Quest's Code View):\r\n\r\n```\r\nsmall_stick_count = 0\r\nlarge_stick_count = 0\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    small_stick_count = small_stick_count + 1\r\n  }\r\n  else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\nif (small_stick_count > 3) {\r\n  if (large_stick_count > 3) {\r\n    msg (\"SUCCESS!!!\")\r\n    msg (\"\")\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n  }\r\n  else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```\r\n\r\n---\r\n>... if you do need to use Lists, then you'd want to use List Attributes, so you can preserve and use them elsewhere, and not as List Variables, which are destroyed upon the scripting completing.\r\n\r\n**List** (deleted once script completes) :\r\n```stick_list  = NewObjectList()```\r\n\r\n**List as an Attribute** (this is not deleted, and can be referenced throughout game-play):\r\n```game.stick_list = NewObjectList()``` or  ```player.stick_list = NewObjectList()```\r\n\r\n(I don't know if it would be better to set the attribute to the game or to the player... Would it matter either way, HK?)\r\n\r\n\r\n---\r\n@HK\r\n\r\nYou're the man!!!\r\n\r\n<p style=\"color:white;background:white\">I CAN TOO POST THIS HERE!!! JUST WATCH!!! This is invisible.</p>",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK</p>\n<p>That's pretty slick!</p>\n<p>(Apparently I've been list-happy ever since I learned how to use them a little! I just went back through my recent scripts, and there are quite a few unnecessary lists I can remove. Awesome!)</p>\n<hr>\n<p>@Anonynn</p>\n<p>HK's script is spot on!</p>\n<p>The difference between his and yours:</p>\n<pre><code>foreach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\n    list add (small_stick_count, o)\n    list add (large_stick_count, o)\n  }\n}\n</code></pre>\n<p>This would only find strings beginning with <code>small_stick;large_stick</code>, rather than searching for either.</p>\n<p>Even if it did run the script when finding either size stick, it would add an object onto both lists each time it found either the small stick OR the large stick.</p>\n<hr>\n<p>Let's switch it over to HK's way (removing my unnecessary lists and plugging in the codes to increase the counts by 1) and examine it:</p>\n<pre><code>foreach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\n   small_stick_count = small_stick_count + 1\n   large_stick_count = large_stick_count + 1\n  }\n}\n</code></pre>\n<p>Now, picture that written a little differently, but performing the same task:</p>\n<pre><code>foreach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    if (StartsWith(o.name, \"large_stick\")) {\n       small_stick_count = small_stick_count + 1\n       large_stick_count = large_stick_count + 1\n    }\n  }\n}\n</code></pre>\n<p>This would increase the count of both sticks any time either stick was found.</p>\n<hr>\n<p>HK separated them, so each size stick's count is increased with a separate <code>IF...</code> statement:</p>\n<pre><code>foreach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    small_stick_count = small_stick_count + 1\n  } \n  else if (StartsWith(o.name, \"large_stick\")) {\n    large_stick_count = large_stick_count + 1\n  }\n}\n</code></pre>\n<hr>\n<p>So, here's HK's solution again (minus the notes; formatted in the style you'll see in Quest's Code View):</p>\n<pre><code>small_stick_count = 0\nlarge_stick_count = 0\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    small_stick_count = small_stick_count + 1\n  }\n  else if (StartsWith(o.name, \"large_stick\")) {\n    large_stick_count = large_stick_count + 1\n  }\n}\nif (small_stick_count &gt; 3) {\n  if (large_stick_count &gt; 3) {\n    msg (\"SUCCESS!!!\")\n    msg (\"\")\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n  }\n  else {\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n  }\n}\nelse {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n<hr>\n<blockquote>\n<p>... if you do need to use Lists, then you'd want to use List Attributes, so you can preserve and use them elsewhere, and not as List Variables, which are destroyed upon the scripting completing.</p>\n</blockquote>\n<p><strong>List</strong> (deleted once script completes) :<br>\n<code>stick_list = NewObjectList()</code></p>\n<p><strong>List as an Attribute</strong> (this is not deleted, and can be referenced throughout game-play):<br>\n<code>game.stick_list = NewObjectList()</code> or  <code>player.stick_list = NewObjectList()</code></p>\n<p>(I don't know if it would be better to set the attribute to the game or to the player... Would it matter either way, HK?)</p>\n<hr>\n<p>@HK</p>\n<p>You're the man!!!</p>\n<p style=\"color: white; background: white\">I CAN TOO POST THIS HERE!!! JUST WATCH!!! This is invisible.</p>\n\n",
      "PostDate": "2017-08-12T14:20:36.2576875Z",
      "LastEditDate": "2017-08-12T14:42:39.6058236Z",
      "link": null
    },
    {
      "PostId": "4d690e92-5cff-438b-adbe-c6135aaf8e31",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi. I played around a bit with this.\r\n\r\nI made a small game and a command for this.\r\n\r\nThis is what the start script looks like:\r\n\r\nplayer.small_stick_count = NewObjectList()\r\nplayer.large_stick_count = NewObjectList()\r\nplayer.small_stick_count = 0\r\nplayer.large_stick_count = 0\r\n\r\nAnd this is what the code for the command looks like:\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    player.small_stick_count = player.small_stick_count + 1\r\n  }\r\n  else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = player.large_stick_count + 1\r\n  }\r\n}\r\nif (player.small_stick_count > 3) {\r\n  if (player.large_stick_count > 3) {\r\n    msg (\"SUCCESS!!!\")\r\n    msg (\"\")\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n  }\r\n  else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n\r\nI named the command Stick count and it has a pattern of \"stick #object#\".\r\n\r\nThen I ended up making a \"small_stick\". (1) It comes up with the message \"Not enough small sticks.\"\r\n\r\nI got to say, I'm not used to code like this! The code seems to work fine, though.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi. I played around a bit with this.</p>\n<p>I made a small game and a command for this.</p>\n<p>This is what the start script looks like:</p>\n<p>player.small_stick_count = NewObjectList()<br>\nplayer.large_stick_count = NewObjectList()<br>\nplayer.small_stick_count = 0<br>\nplayer.large_stick_count = 0</p>\n<p>And this is what the code for the command looks like:<br>\nforeach (o, GetAllChildObjects(player)) {<br>\nif (StartsWith(o.name, \"small_stick\")) {<br>\nplayer.small_stick_count = player.small_stick_count + 1<br>\n}<br>\nelse if (StartsWith(o.name, \"large_stick\")) {<br>\nlarge_stick_count = player.large_stick_count + 1<br>\n}<br>\n}<br>\nif (player.small_stick_count &gt; 3) {<br>\nif (player.large_stick_count &gt; 3) {<br>\nmsg (\"SUCCESS!!!\")<br>\nmsg (\"\")<br>\nmsg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")<br>\n}<br>\nelse {<br>\nmsg (\"Unfortunately, you don't have enough large sticks for this project.\")<br>\n}<br>\n}<br>\nelse {<br>\nmsg (\"Not enough small sticks.\")<br>\n}</p>\n<p>I named the command Stick count and it has a pattern of \"stick #object#\".</p>\n<p>Then I ended up making a \"small_stick\". (1) It comes up with the message \"Not enough small sticks.\"</p>\n<p>I got to say, I'm not used to code like this! The code seems to work fine, though.</p>\n\n",
      "PostDate": "2017-08-12T15:16:33.382314Z",
      "LastEditDate": "2017-08-12T15:17:11.9245796Z",
      "link": null
    },
    {
      "PostId": "de8af29a-2518-491b-938e-7d54e57795b6",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@jmnevil54\r\n\r\nI had the list in there because I was printing out testing messages throughout the script, one of which printed each stick's name and it's parent object.\r\n\r\n---\r\n>This is what the start script looks like:\r\n>>    player.small_stick_count = NewObjectList()\r\n    player.large_stick_count = NewObjectList()\r\n    player.small_stick_count = 0\r\n    player.large_stick_count = 0\r\n\r\n---\r\nThe following two lines set up these two attributes/variables as object lists. (I was using this method initially, but it's no longer being used anywhere.)\r\n\r\n```\r\nplayer.small_stick_count = NewObjectList()\r\nplayer.large_stick_count = NewObjectList()\r\n```\r\n\r\nThen this next bit turns those same attributes/variables into integers. (It does this last in your script, and integers is what you want, so it still works.)\r\n```\r\nplayer.small_stick_count = 0\r\nplayer.large_stick_count = 0\r\n```\r\n\r\nSo, to ease unnecessary load on Quest, change your start script to this:\r\n\r\n\r\n**Start Script**:\r\n```\r\nplayer.small_stick_count = 0\r\nplayer.large_stick_count = 0\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>@jmnevil54</p>\n<p>I had the list in there because I was printing out testing messages throughout the script, one of which printed each stick's name and it's parent object.</p>\n<hr>\n<blockquote>\n<p>This is what the start script looks like:</p>\n<blockquote>\n<p>player.small_stick_count = NewObjectList()<br>\nplayer.large_stick_count = NewObjectList()<br>\nplayer.small_stick_count = 0<br>\nplayer.large_stick_count = 0</p>\n</blockquote>\n</blockquote>\n<hr>\n<p>The following two lines set up these two attributes/variables as object lists. (I was using this method initially, but it's no longer being used anywhere.)</p>\n<pre><code>player.small_stick_count = NewObjectList()\nplayer.large_stick_count = NewObjectList()\n</code></pre>\n<p>Then this next bit turns those same attributes/variables into integers. (It does this last in your script, and integers is what you want, so it still works.)</p>\n<pre><code>player.small_stick_count = 0\nplayer.large_stick_count = 0\n</code></pre>\n<p>So, to ease unnecessary load on Quest, change your start script to this:</p>\n<p><strong>Start Script</strong>:</p>\n<pre><code>player.small_stick_count = 0\nplayer.large_stick_count = 0\n</code></pre>\n\n",
      "PostDate": "2017-08-12T15:58:18.9025353Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ede3dea-a8f2-429e-9f7d-36911123d82f",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nsmall_stick_count = 0\r\nlarge_stick_count = 0\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    small_stick_count = small_stick_count + 1\r\n  }\r\n  else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\nif (small_stick_count > 3) {\r\n  if (large_stick_count > 3) {\r\n    msg (\"SUCCESS!!!\")\r\n    msg (\"\")\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n  }\r\n  else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```\r\n\r\nI tried this but no message is showing up. I'm wondering if it's because it isn't accounting for the sticks that the player might already have in their inventory. Either that or it's not recognizing the items inside of the containers within the player's inventory. OR which is more likely the case --- it might not be recognizing that all the items it is looking for are clones of the originals. Maybe finding the object alias' would be better?",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>small_stick_count = 0\nlarge_stick_count = 0\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    small_stick_count = small_stick_count + 1\n  }\n  else if (StartsWith(o.name, \"large_stick\")) {\n    large_stick_count = large_stick_count + 1\n  }\n}\nif (small_stick_count &gt; 3) {\n  if (large_stick_count &gt; 3) {\n    msg (\"SUCCESS!!!\")\n    msg (\"\")\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n  }\n  else {\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n  }\n}\nelse {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n<p>I tried this but no message is showing up. I'm wondering if it's because it isn't accounting for the sticks that the player might already have in their inventory. Either that or it's not recognizing the items inside of the containers within the player's inventory. OR which is more likely the case --- it might not be recognizing that all the items it is looking for are clones of the originals. Maybe finding the object alias' would be better?</p>\n\n",
      "PostDate": "2017-08-12T22:40:41.9072348Z",
      "LastEditDate": "2017-08-12T23:04:27.34694Z",
      "link": null
    },
    {
      "PostId": "2f4c5f63-d2cd-40e9-bdfa-dc5a500fda2e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\n\r\nWhat's the name of the small stick in the game?\r\n\r\nIs it ```Small Stick```, ```small_stick``` or ```small_sticks```? (I just noticed that we have it written all three ways in different places.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>What's the name of the small stick in the game?</p>\n<p>Is it <code>Small Stick</code>, <code>small_stick</code> or <code>small_sticks</code>? (I just noticed that we have it written all three ways in different places.)</p>\n\n",
      "PostDate": "2017-08-12T23:19:01.4874942Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d3c03c13-c341-4db3-8650-de6c8e804f0d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Easy... (non object method)\r\n.>get stick\r\nplayer.stick=player.stick+1\r\nIn the UI, do not have \"add stick to inventory\"\r\nHide, or delete the stick.\r\nmsg(\"You now have \" + player.stick + \" sticks.\")\r\nYou could add a check to see if there is a large stick or a small stick.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Easy... (non object method)<br>\n.&gt;get stick<br>\nplayer.stick=player.stick+1<br>\nIn the UI, do not have \"add stick to inventory\"<br>\nHide, or delete the stick.<br>\nmsg(\"You now have \" + player.stick + \" sticks.\")<br>\nYou could add a check to see if there is a large stick or a small stick.</p>\n\n",
      "PostDate": "2017-08-12T23:26:10.4560926Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "10d9d790-ad84-45c8-a731-6ad406c55765",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello again!\r\n\r\n---\r\nYou can test this out online.\r\n\r\nIt's the same stickcount script you posted last, but I included an extra testing command to check and see where all the sticks are.\r\n\r\nNOTE: All 4 commands are displayed as links when you 'LOOK'.\r\n\r\n\r\nhttp://play2.textadventures.co.uk/Play.aspx?id=93e62fqi80kssodjqo9hhg\r\n\r\n\r\n<details><summary>Code View</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Anonynn's sticks\">\r\n    <gameid>3b90cdd4-5cfd-4f44-976b-ab5609765cc7</gameid>\r\n    <version>0.1</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <start type=\"script\">\r\n    </start>\r\n    <roomenter type=\"script\">\r\n    </roomenter>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[{command:smallstickme:smallstickme}<br/>{command:largestickme:largestickme}<br/>{command:stickcount:stickcount}<br/>{command:childinventory:childinventory}<br/>]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <inherit name=\"namedmale\" />\r\n      <object name=\"pouch\">\r\n        <inherit name=\"editor_object\" />\r\n        <object name=\"bag\">\r\n          <inherit name=\"editor_object\" />\r\n          <object name=\"box\">\r\n            <inherit name=\"editor_object\" />\r\n          </object>\r\n        </object>\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <command>\r\n    <pattern>smallstickme</pattern>\r\n    <script>\r\n      CloneObjectAndMove (small_stick, player)\r\n      CloneObjectAndMove (small_stick, pouch)\r\n      CloneObjectAndMove (small_stick, box)\r\n      CloneObjectAndMove (small_stick, bag)\r\n    </script>\r\n  </command>\r\n  <command>\r\n    <pattern>stickcount</pattern>\r\n    <script><![CDATA[\r\n      small_stick_count = 0\r\n      large_stick_count = 0\r\n      foreach (o, GetAllChildObjects(player)) {\r\n        if (StartsWith(o.name, \"small_stick\")) {\r\n          small_stick_count = small_stick_count + 1\r\n        }\r\n        else if (StartsWith(o.name, \"large_stick\")) {\r\n          large_stick_count = large_stick_count + 1\r\n        }\r\n      }\r\n      if (small_stick_count > 3) {\r\n        if (large_stick_count > 3) {\r\n          msg (\"SUCCESS!!!\")\r\n          msg (\"\")\r\n          msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n        }\r\n        else {\r\n          msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"Not enough small_sticks.\")\r\n      }\r\n    ]]></script>\r\n  </command>\r\n  <command>\r\n    <pattern>childinventory</pattern>\r\n    <script>\r\n      foreach (o, GetAllChildObjects(player)) {\r\n        msg (o.name + \": is in \" + o.parent.name)\r\n      }\r\n    </script>\r\n  </command>\r\n  <object name=\"small_stick\">\r\n    <inherit name=\"editor_object\" />\r\n  </object>\r\n  <command>\r\n    <script>\r\n      CloneObjectAndMove (large_stick, player)\r\n      CloneObjectAndMove (large_stick, pouch)\r\n      CloneObjectAndMove (large_stick, box)\r\n      CloneObjectAndMove (large_stick, bag)\r\n    </script>\r\n    <pattern>largestickme</pattern>\r\n  </command>\r\n  <object name=\"large_stick\">\r\n    <inherit name=\"editor_object\" />\r\n    <take />\r\n    <ontake type=\"script\">\r\n      CloneObjectAndMove (large_stick, room)\r\n    </ontake>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello again!</p>\n<hr>\n<p>You can test this out online.</p>\n<p>It's the same stickcount script you posted last, but I included an extra testing command to check and see where all the sticks are.</p>\n<p>NOTE: All 4 commands are displayed as links when you 'LOOK'.</p>\n<p>http://play2.textadventures.co.uk/Play.aspx?id=93e62fqi80kssodjqo9hhg</p>\n<details><summary>Code View</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Anonynn's sticks\"&gt;\n    &lt;gameid&gt;3b90cdd4-5cfd-4f44-976b-ab5609765cc7&lt;/gameid&gt;\n    &lt;version&gt;0.1&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n    &lt;/start&gt;\n    &lt;roomenter type=\"script\"&gt;\n    &lt;/roomenter&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[{command:smallstickme:smallstickme}&lt;br/&gt;{command:largestickme:largestickme}&lt;br/&gt;{command:stickcount:stickcount}&lt;br/&gt;{command:childinventory:childinventory}&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;inherit name=\"namedmale\" /&gt;\n      &lt;object name=\"pouch\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;object name=\"bag\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;object name=\"box\"&gt;\n            &lt;inherit name=\"editor_object\" /&gt;\n          &lt;/object&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;smallstickme&lt;/pattern&gt;\n    &lt;script&gt;\n      CloneObjectAndMove (small_stick, player)\n      CloneObjectAndMove (small_stick, pouch)\n      CloneObjectAndMove (small_stick, box)\n      CloneObjectAndMove (small_stick, bag)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;stickcount&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      small_stick_count = 0\n      large_stick_count = 0\n      foreach (o, GetAllChildObjects(player)) {\n        if (StartsWith(o.name, \"small_stick\")) {\n          small_stick_count = small_stick_count + 1\n        }\n        else if (StartsWith(o.name, \"large_stick\")) {\n          large_stick_count = large_stick_count + 1\n        }\n      }\n      if (small_stick_count &gt; 3) {\n        if (large_stick_count &gt; 3) {\n          msg (\"SUCCESS!!!\")\n          msg (\"\")\n          msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n        }\n        else {\n          msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n        }\n      }\n      else {\n        msg (\"Not enough small_sticks.\")\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;childinventory&lt;/pattern&gt;\n    &lt;script&gt;\n      foreach (o, GetAllChildObjects(player)) {\n        msg (o.name + \": is in \" + o.parent.name)\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=\"small_stick\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n  &lt;/object&gt;\n  &lt;command&gt;\n    &lt;script&gt;\n      CloneObjectAndMove (large_stick, player)\n      CloneObjectAndMove (large_stick, pouch)\n      CloneObjectAndMove (large_stick, box)\n      CloneObjectAndMove (large_stick, bag)\n    &lt;/script&gt;\n    &lt;pattern&gt;largestickme&lt;/pattern&gt;\n  &lt;/command&gt;\n  &lt;object name=\"large_stick\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;take /&gt;\n    &lt;ontake type=\"script\"&gt;\n      CloneObjectAndMove (large_stick, room)\n    &lt;/ontake&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-08-12T23:35:55.3926013Z",
      "LastEditDate": "2017-08-13T22:23:25.8316744Z",
      "link": null
    },
    {
      "PostId": "3476dfd4-1c51-4005-b7e5-32f678969aae",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I clone a object then check to see if im carrying it in inventory, if not I add stick to inventory, remove [this](for cloned object) and +1 sticks.volume . Volume is a built in feature that works with the inventory as well so meaning you can carry so many types of objects and a certain volume in your inventory. Then i check if sticks.volume >= 3 then {Make Club} and so on, then subtract 3 from volume and check if volume is = 0 move stick to a storage room. I make those into functions so it can be called when ever, this is from my survival game  i have been working on and this is just what works well for me so far but i also only do gui editor coding so theirs always better ways.\r\n\r\nThis is on the \"Take\" Object on inventory tab\r\n```\r\nif (Got(sticks)) {\r\n  IncreaseObjectCounter (sticks, \"volume\")\r\n  RemoveObject (this)\r\n}\r\nelse if (not Got(sticks)) {\r\n    RemoveObject (this)\r\n    AddToInventory (sticks)\r\n  }\r\n    otherwise {\r\n      RemoveObject (this)\r\n      AddToInventory (sticks)\r\n      IncreaseObjectCounter (sticks, \"volume\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNow on the on \"Drop\" \r\n\r\n```\r\nif (Got(sticks)) {\r\n  if (GetInt(sticks, \"volume\") >= 2) {\r\n    DecreaseObjectCounter (sticks, \"volume\")\r\n    CloneObjectAndMove (sticks, player.parent)\r\n  }\r\n  else if (GetInt(sticks, \"volume\") = 1) {\r\n    DecreaseObjectCounter (sticks, \"volume\")\r\n    MoveObject (sticks, StorageRoom)\r\n    CloneObjectAndMove (sticks, player.parent)\r\n  }\r\n}\r\n```\r\n\r\nThen if I want to craft a small campfire here is the function for that\r\n\r\n```\r\nmsg (\"Type in the number you wish to craft. EX: 1, 3, or 5\")\r\nget input {\r\n  s = ToInt(result)\r\n  for (i, 1, s) {\r\n    if (Got(sticks)) {\r\n      if (GetInt(sticks, \"volume\") >= 6) {\r\n        sticks.volume = sticks.volume - 6\r\n        CloneObjectAndMove (campfire, player)\r\n        CheckResourceValue\r\n      }\r\n      else {\r\n        msg (\"You need to be carrying more sticks before making a small campfire.\")\r\n      }\r\n    }\r\n    else {\r\n      msg (\"You need to be carrying sticks before making a small campfire.\")\r\n    }\r\n  }\r\n}\r\n```\r\nI start by asking for a number and make it a variable, then run a loop foreach one I can make while checking how many resources I have each time.\r\n\r\n\r\nThe \"CheckResourceValue\" is a function that does exactly that \r\n\r\n```\r\nif (GetInt(sticks, \"volume\") <= 0) {\r\n  MoveObject (sticks, StorageRoom)\r\n  sticks.volume = 0  <-----------//here im resetting the volume to ensure it stays correct//\r\n}\r\n```\r\nAnd in that function above you can add all your resources as I did mine just didn't want a even bigger post but that is how I do mine hope it helps. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I clone a object then check to see if im carrying it in inventory, if not I add stick to inventory, remove [this](for cloned object) and +1 sticks.volume . Volume is a built in feature that works with the inventory as well so meaning you can carry so many types of objects and a certain volume in your inventory. Then i check if sticks.volume &gt;= 3 then {Make Club} and so on, then subtract 3 from volume and check if volume is = 0 move stick to a storage room. I make those into functions so it can be called when ever, this is from my survival game  i have been working on and this is just what works well for me so far but i also only do gui editor coding so theirs always better ways.</p>\n<p>This is on the \"Take\" Object on inventory tab</p>\n<pre><code>if (Got(sticks)) {\n  IncreaseObjectCounter (sticks, \"volume\")\n  RemoveObject (this)\n}\nelse if (not Got(sticks)) {\n    RemoveObject (this)\n    AddToInventory (sticks)\n  }\n    otherwise {\n      RemoveObject (this)\n      AddToInventory (sticks)\n      IncreaseObjectCounter (sticks, \"volume\")\n    }\n  }\n}\n</code></pre>\n<p>Now on the on \"Drop\"</p>\n<pre><code>if (Got(sticks)) {\n  if (GetInt(sticks, \"volume\") &gt;= 2) {\n    DecreaseObjectCounter (sticks, \"volume\")\n    CloneObjectAndMove (sticks, player.parent)\n  }\n  else if (GetInt(sticks, \"volume\") = 1) {\n    DecreaseObjectCounter (sticks, \"volume\")\n    MoveObject (sticks, StorageRoom)\n    CloneObjectAndMove (sticks, player.parent)\n  }\n}\n</code></pre>\n<p>Then if I want to craft a small campfire here is the function for that</p>\n<pre><code>msg (\"Type in the number you wish to craft. EX: 1, 3, or 5\")\nget input {\n  s = ToInt(result)\n  for (i, 1, s) {\n    if (Got(sticks)) {\n      if (GetInt(sticks, \"volume\") &gt;= 6) {\n        sticks.volume = sticks.volume - 6\n        CloneObjectAndMove (campfire, player)\n        CheckResourceValue\n      }\n      else {\n        msg (\"You need to be carrying more sticks before making a small campfire.\")\n      }\n    }\n    else {\n      msg (\"You need to be carrying sticks before making a small campfire.\")\n    }\n  }\n}\n</code></pre>\n<p>I start by asking for a number and make it a variable, then run a loop foreach one I can make while checking how many resources I have each time.</p>\n<p>The \"CheckResourceValue\" is a function that does exactly that</p>\n<pre><code>if (GetInt(sticks, \"volume\") &lt;= 0) {\n  MoveObject (sticks, StorageRoom)\n  sticks.volume = 0  &lt;-----------//here im resetting the volume to ensure it stays correct//\n}\n</code></pre>\n<p>And in that function above you can add all your resources as I did mine just didn't want a even bigger post but that is how I do mine hope it helps.</p>\n\n",
      "PostDate": "2017-08-13T00:36:00.6911351Z",
      "LastEditDate": "2017-08-13T11:26:07.5783142Z",
      "link": null
    },
    {
      "PostId": "0db9f3c6-0921-4b44-a55a-2951d723a604",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ onimike\r\n\r\nThat is brilliant!",
      "EditableFormat": "markdown",
      "HTML": "<p>@ onimike</p>\n<p>That is brilliant!</p>\n\n",
      "PostDate": "2017-08-13T00:44:26.6399859Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b50d2453-7068-4df2-847c-c44fe8796b3d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ Anonynn:\r\n\r\nwhat's the error message you get during game play? Or, are you NOT able to open into the GUI/Editor and/or play your game? What's the error message that given which prevent you from opening into the GUI/Editor and/or when trying to play your game?\r\n\r\n--------\r\n\r\nthe most likely cause is that the naming/labeling isn't being matched up, make sure that you're using the same names as you're using in your game for your Objects and their clones, and for their Attributes.\r\n\r\nor, if you're doing the this coding directly in code, then it's common to forget to add the 'cdata' tags for your use of the 'greater than/lesser than/greater than or equal to/lesser than or equal to' symbols in your scripting.\r\n\r\n-----------\r\n\r\nthis:\r\n\r\n```\r\nif (StartsWith(o.name, \"small_stick;large_stick\")) {}\r\n```\r\n\r\nis likely a syntax error. I don't think you can do this: \"small_stick;large_stick\", as it's looking literally for this in your name: small_stick;large_stick, or it's a flat-out syntax error: it doesn't work at all.\r\n\r\nyou can't combine them, they have to be separate:\r\n\r\nif (StartsWith (o.name, \"small_stick\")) {} // this looks/checks for an Object that starts with \"small_stick\" in its name, which would be the original 'small_stick' Object and its clones: 'small_stick1', 'small_stick2', 'small_stick3', etc etc etc\r\n\r\nelse if (StartsWith (o.name, \"large_stick\")) {} // this looks/checks for an Object that starts with \"large_stick\" in its name, which would be the original 'large_stick' Object and its clones: 'large_stick1', 'large_stick2', 'large_stick3', etc etc etc\r\n\r\nso, what you're doing is this:\r\n\r\nis it the 'small_stick' original Object or one of its clones: if yes, add to the 'small_stick_count'\r\n\r\nif it's not, then: is it the 'large_stick' original Object or one of its clones: if yes, add to the 'large_stick_count'\r\n\r\nif not, then do nothing: move onto the next Object in the inventory\r\n\r\n------\r\n\r\nso, also your logic of this (pretending that there wasn't a syntax error with it) is very wrong:\r\n\r\n```\r\n  if (StartsWith(o.name, \"small_stick;large_stick\")) {\r\n    list add (small_stick_count, o) // or: small_stick_count = small_stick_count + 1\r\n    list add (large_stick_count, o)  // or: large_stick_count = small_stick_count + 1\r\n  }\r\n```\r\n\r\nif this would work as you mis-intended, this is what would happen:\r\n\r\n'small_stick2' clone Object in inventory would add to BOTH 'small_stick_count' and 'large_stick_count', which you don't want\r\n\r\n'large_stick2' clone Object in inventory would add to BOTH 'small_stick_count' and 'large_stick_count', which you don't want\r\n\r\nso, when you're suppose to have this:\r\n\r\nsmall_stick_count = 1\r\nlarge_stick_count = 1\r\n\r\nyou have this:\r\n\r\nsmall_stick_count = 2\r\nlarge_stick_count = 2\r\n\r\neven though you only had one 'small_stick' clone Object and one 'large_stick' clone Object in your inventory",
      "EditableFormat": "markdown",
      "HTML": "<p>@ Anonynn:</p>\n<p>what's the error message you get during game play? Or, are you NOT able to open into the GUI/Editor and/or play your game? What's the error message that given which prevent you from opening into the GUI/Editor and/or when trying to play your game?</p>\n<hr>\n<p>the most likely cause is that the naming/labeling isn't being matched up, make sure that you're using the same names as you're using in your game for your Objects and their clones, and for their Attributes.</p>\n<p>or, if you're doing the this coding directly in code, then it's common to forget to add the 'cdata' tags for your use of the 'greater than/lesser than/greater than or equal to/lesser than or equal to' symbols in your scripting.</p>\n<hr>\n<p>this:</p>\n<pre><code>if (StartsWith(o.name, \"small_stick;large_stick\")) {}\n</code></pre>\n<p>is likely a syntax error. I don't think you can do this: \"small_stick;large_stick\", as it's looking literally for this in your name: small_stick;large_stick, or it's a flat-out syntax error: it doesn't work at all.</p>\n<p>you can't combine them, they have to be separate:</p>\n<p>if (StartsWith (o.name, \"small_stick\")) {} // this looks/checks for an Object that starts with \"small_stick\" in its name, which would be the original 'small_stick' Object and its clones: 'small_stick1', 'small_stick2', 'small_stick3', etc etc etc</p>\n<p>else if (StartsWith (o.name, \"large_stick\")) {} // this looks/checks for an Object that starts with \"large_stick\" in its name, which would be the original 'large_stick' Object and its clones: 'large_stick1', 'large_stick2', 'large_stick3', etc etc etc</p>\n<p>so, what you're doing is this:</p>\n<p>is it the 'small_stick' original Object or one of its clones: if yes, add to the 'small_stick_count'</p>\n<p>if it's not, then: is it the 'large_stick' original Object or one of its clones: if yes, add to the 'large_stick_count'</p>\n<p>if not, then do nothing: move onto the next Object in the inventory</p>\n<hr>\n<p>so, also your logic of this (pretending that there wasn't a syntax error with it) is very wrong:</p>\n<pre><code>  if (StartsWith(o.name, \"small_stick;large_stick\")) {\n    list add (small_stick_count, o) // or: small_stick_count = small_stick_count + 1\n    list add (large_stick_count, o)  // or: large_stick_count = small_stick_count + 1\n  }\n</code></pre>\n<p>if this would work as you mis-intended, this is what would happen:</p>\n<p>'small_stick2' clone Object in inventory would add to BOTH 'small_stick_count' and 'large_stick_count', which you don't want</p>\n<p>'large_stick2' clone Object in inventory would add to BOTH 'small_stick_count' and 'large_stick_count', which you don't want</p>\n<p>so, when you're suppose to have this:</p>\n<p>small_stick_count = 1<br>\nlarge_stick_count = 1</p>\n<p>you have this:</p>\n<p>small_stick_count = 2<br>\nlarge_stick_count = 2</p>\n<p>even though you only had one 'small_stick' clone Object and one 'large_stick' clone Object in your inventory</p>\n\n",
      "PostDate": "2017-08-13T01:09:24.7440856Z",
      "LastEditDate": "2017-08-13T01:12:38.640157Z",
      "link": null
    },
    {
      "PostId": "d42ace1c-0d5a-49d0-96f1-7c9e8adf1d4e",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**What's the name of the small stick in the game?\r\nIs it Small Stick, small_stick or small_sticks? (I just noticed that we have it written all three ways in different places.)**\r\n\r\nThey are: \r\n_small_stick_ with an alias of _Small Stick_\r\n_large_stick_ with an alias of _Large Stick_\r\n\r\n**What's the error message you get during game play? Or, are you NOT able to open into the GUI/Editor and/or play your game? What's the error message that given which prevent you from opening into the GUI/Editor and/or when trying to play your game?**\r\n\r\nThe game is running perfectly fine and no error messages are popping up when trying to use the previous script. It just wasn't showing anything, which I'm sure is because we're looking for the original object instead of the object's clone's alias. \r\n\r\nI do like the idea and simplicity of this...\r\n```\r\nsmall_stick_count = 0\r\nlarge_stick_count = 0\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (StartsWith(o.name, \"small_stick\")) {\r\n    small_stick_count = small_stick_count + 1\r\n  }\r\n  else if (StartsWith(o.name, \"large_stick\")) {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\nif (small_stick_count > 3) {\r\n  if (large_stick_count > 3) {\r\n    msg (\"SUCCESS!!!\")\r\n    msg (\"\")\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n  }\r\n  else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```\r\nI just need it to find obj.alias (because of clones) rather than the original object itself in both the small_stick and the large_stick. Is there a way to alter the code above to look for the object alias'?\r\n\r\n((Sorry about my late response too I went camping last night for one night)). \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>What's the name of the small stick in the game?<br>\nIs it Small Stick, small_stick or small_sticks? (I just noticed that we have it written all three ways in different places.)</strong></p>\n<p>They are:<br>\n<em>small_stick</em> with an alias of <em>Small Stick</em><br>\n<em>large_stick</em> with an alias of <em>Large Stick</em></p>\n<p><strong>What's the error message you get during game play? Or, are you NOT able to open into the GUI/Editor and/or play your game? What's the error message that given which prevent you from opening into the GUI/Editor and/or when trying to play your game?</strong></p>\n<p>The game is running perfectly fine and no error messages are popping up when trying to use the previous script. It just wasn't showing anything, which I'm sure is because we're looking for the original object instead of the object's clone's alias.</p>\n<p>I do like the idea and simplicity of this...</p>\n<pre><code>small_stick_count = 0\nlarge_stick_count = 0\nforeach (o, GetAllChildObjects(player)) {\n  if (StartsWith(o.name, \"small_stick\")) {\n    small_stick_count = small_stick_count + 1\n  }\n  else if (StartsWith(o.name, \"large_stick\")) {\n    large_stick_count = large_stick_count + 1\n  }\n}\nif (small_stick_count &gt; 3) {\n  if (large_stick_count &gt; 3) {\n    msg (\"SUCCESS!!!\")\n    msg (\"\")\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n  }\n  else {\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n  }\n}\nelse {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n<p>I just need it to find obj.alias (because of clones) rather than the original object itself in both the small_stick and the large_stick. Is there a way to alter the code above to look for the object alias'?</p>\n<p>((Sorry about my late response too I went camping last night for one night)).</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2017-08-13T20:55:53.4714846Z",
      "LastEditDate": "2017-08-13T20:56:28.8360795Z",
      "link": null
    },
    {
      "PostId": "a7cdad1d-e155-40bb-81bb-750094a3c5d2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the 'StartsWith' Function/code handles the clones' names, so this will work for you. You don't need to use  the 'alias' Attribute if you're using the 'StartsWith' Function/code.\r\n\r\n--------\r\n\r\nif you do want to use the 'alias' instead:\r\n\r\n(there can be other/more issues/problems with using the 'alias' instead, whereas the 'StartsWith' will always work)\r\n\r\n```\r\nsmall_stick_count = 0\r\nlarge_stick_count = 0\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (o.alias = \"Small Stick\") { // or: if (GetString (o, \"alias\") = \"Small Stick\") {\r\n    small_stick_count = small_stick_count + 1\r\n  }\r\n  else if (o.alias = \"Large Stick\") { // or: else if (GetString (o, \"alias\") = \"Large Stick\") {\r\n    large_stick_count = large_stick_count + 1\r\n  }\r\n}\r\nif (small_stick_count > 3) {\r\n  if (large_stick_count > 3) {\r\n    msg (\"SUCCESS!!!\")\r\n    msg (\"\")\r\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n  }\r\n  else {\r\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n  }\r\n}\r\nelse {\r\n  msg (\"Not enough small sticks.\")\r\n}\r\n```\r\n\r\n--------------------\r\n\r\nto only get the clones (and NOT the original Object), you need some additional coding:\r\n\r\n(all clones have a longer name than the original Object, as contigious numbers are added to each created-clone's name)\r\n\r\n```\r\n<![CDATA[\r\n  small_stick_count = 0\r\n  large_stick_count = 0\r\n  foreach (o, GetAllChildObjects(player)) {\r\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      small_stick_count = small_stick_count + 1\r\n    }\r\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n]]>\r\n```\r\n\r\n-----------\r\n\r\nif you want to use the 'alias', here:\r\n\r\n```\r\n<![CDATA[\r\n  small_stick_count = 0\r\n  large_stick_count = 0\r\n  foreach (o, GetAllChildObjects(player)) {\r\n    if (o.alias = \"Small Stick\"  and LengthOf (o.name) > LengthOf (\"small_stick\")) { // or: if (GetString (o, \"alias\") = \"Small Stick\"  and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      small_stick_count = small_stick_count + 1\r\n    }\r\n    else if (o.alias = \"Large Stick\"  and LengthOf (o.name) > LengthOf (\"large_stick\")) { // or: else if (GetString (o, \"alias\") = \"Large Stick\" and LengthOf (o.name) > LengthOf (\"large_stick\")) {\r\n      large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n]]>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the 'StartsWith' Function/code handles the clones' names, so this will work for you. You don't need to use  the 'alias' Attribute if you're using the 'StartsWith' Function/code.</p>\n<hr>\n<p>if you do want to use the 'alias' instead:</p>\n<p>(there can be other/more issues/problems with using the 'alias' instead, whereas the 'StartsWith' will always work)</p>\n<pre><code>small_stick_count = 0\nlarge_stick_count = 0\nforeach (o, GetAllChildObjects(player)) {\n  if (o.alias = \"Small Stick\") { // or: if (GetString (o, \"alias\") = \"Small Stick\") {\n    small_stick_count = small_stick_count + 1\n  }\n  else if (o.alias = \"Large Stick\") { // or: else if (GetString (o, \"alias\") = \"Large Stick\") {\n    large_stick_count = large_stick_count + 1\n  }\n}\nif (small_stick_count &gt; 3) {\n  if (large_stick_count &gt; 3) {\n    msg (\"SUCCESS!!!\")\n    msg (\"\")\n    msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n  }\n  else {\n    msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n  }\n}\nelse {\n  msg (\"Not enough small sticks.\")\n}\n</code></pre>\n<hr>\n<p>to only get the clones (and NOT the original Object), you need some additional coding:</p>\n<p>(all clones have a longer name than the original Object, as contigious numbers are added to each created-clone's name)</p>\n<pre><code>&lt;![CDATA[\n  small_stick_count = 0\n  large_stick_count = 0\n  foreach (o, GetAllChildObjects(player)) {\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      small_stick_count = small_stick_count + 1\n    }\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      large_stick_count = large_stick_count + 1\n    }\n  }\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n]]&gt;\n</code></pre>\n<hr>\n<p>if you want to use the 'alias', here:</p>\n<pre><code>&lt;![CDATA[\n  small_stick_count = 0\n  large_stick_count = 0\n  foreach (o, GetAllChildObjects(player)) {\n    if (o.alias = \"Small Stick\"  and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) { // or: if (GetString (o, \"alias\") = \"Small Stick\"  and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      small_stick_count = small_stick_count + 1\n    }\n    else if (o.alias = \"Large Stick\"  and LengthOf (o.name) &gt; LengthOf (\"large_stick\")) { // or: else if (GetString (o, \"alias\") = \"Large Stick\" and LengthOf (o.name) &gt; LengthOf (\"large_stick\")) {\n      large_stick_count = large_stick_count + 1\n    }\n  }\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n]]&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-14T01:46:17.3581892Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40e23e7f-7694-4435-bb79-04aff8bcf7f3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is the player technically carrying the parent object of *small_stick* and *large_stick*?\r\n\r\n- player\r\n    - container\r\n        - small_stick\r\n        - large_stick\r\n\r\nor\r\n\r\n- player\r\n    - container\r\n        - container\r\n            - container\r\n                - small_stick\r\n                - large_stick\r\n\r\n\r\n\r\n\r\nE.g., If the sticks are in a wheelbarrow, and the player is not ```wheelbarrow.parent``` (or if the player is not the parent object of whatever contains the sticks), this wouldn't work.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is the player technically carrying the parent object of <em>small_stick</em> and <em>large_stick</em>?</p>\n<ul>\n<li>player\n<ul>\n<li>container\n<ul>\n<li>small_stick</li>\n<li>large_stick</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>or</p>\n<ul>\n<li>player\n<ul>\n<li>container\n<ul>\n<li>container\n<ul>\n<li>container\n<ul>\n<li>small_stick</li>\n<li>large_stick</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>E.g., If the sticks are in a wheelbarrow, and the player is not <code>wheelbarrow.parent</code> (or if the player is not the parent object of whatever contains the sticks), this wouldn't work.</p>\n\n",
      "PostDate": "2017-08-14T03:35:37.4489809Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "676372ba-06a3-407f-858b-7922d2a3fdb3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The 'GetAllChildObjects' is suppose to work (it gets ALL Objects within the inputted Object, regardless of their nested layer).",
      "EditableFormat": "markdown",
      "HTML": "<p>The 'GetAllChildObjects' is suppose to work (it gets ALL Objects within the inputted Object, regardless of their nested layer).</p>\n\n",
      "PostDate": "2017-08-14T03:57:50.4156466Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "13fded55-7326-4e56-980a-037709e86b9f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">The 'GetAllChildObjects' is suppose to work (it gets ALL Objects within the inputted Object, regardless of their nested layer).\r\n\r\nYes, sir. It definitely works, I'm using the very same code Anonynn posted last in my example game, and it works.\r\n\r\n...but, in our minds, whatever the sticks are in eventually leads up to the player in the parent chain, so we have this: ```foreach (o, GetAllChildObjects(player)) {```\r\n\r\n\r\nBUT the sticks may not be child objects of anything concerning the player.\r\n\r\nLike if there were a wheelbarrow the player moved from room to room, **or** if there were an elaborate inventory system, which I believe Anonynn may be using.\r\n\r\nIt was just one of those thoughts that hit me out of nowhere...\r\n\r\n@Anonynn\r\n\r\nIs there a special ```take``` script for the sticks by any chance?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The 'GetAllChildObjects' is suppose to work (it gets ALL Objects within the inputted Object, regardless of their nested layer).</p>\n</blockquote>\n<p>Yes, sir. It definitely works, I'm using the very same code Anonynn posted last in my example game, and it works.</p>\n<p>...but, in our minds, whatever the sticks are in eventually leads up to the player in the parent chain, so we have this: <code>foreach (o, GetAllChildObjects(player)) {</code></p>\n<p>BUT the sticks may not be child objects of anything concerning the player.</p>\n<p>Like if there were a wheelbarrow the player moved from room to room, <strong>or</strong> if there were an elaborate inventory system, which I believe Anonynn may be using.</p>\n<p>It was just one of those thoughts that hit me out of nowhere...</p>\n<p>@Anonynn</p>\n<p>Is there a special <code>take</code> script for the sticks by any chance?</p>\n\n",
      "PostDate": "2017-08-14T04:43:30.8148713Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "04abc86e-8338-4cf6-a091-677dac0956a0",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Is there a special take script for the sticks by any chance?**\r\n\r\nYup, Pixie and I have completely converted the game's objects (not rooms) to finding alias'. Here is the take (listed below). And yes, the sticks go into the players inventory in a submenu, still nested on the player. \r\n```\r\nif (this.alias = null) {\r\n  this.alias = this.name\r\n}\r\ncontainer = this.stackparent\r\nthis.parent = container\r\nSetStack (container)\r\nif (this.takemsg = null) {\r\n  msg (DynamicTemplate(\"TakeSuccessful\", object))\r\n}\r\nelse {\r\n  msg (this.takemsg)\r\n}\r\n```\r\nSo I tried this (the code below) and nothing showed up again when I clicked the option that had the code in it. No messages and no errors. \r\n```\r\n  small_stick_count = 0\r\n  large_stick_count = 0\r\n  foreach (o, GetAllChildObjects(player)) {\r\n    if (o.alias = \"Small Stick\"  and LengthOf (o.name) > LengthOf (\"small_stick\")) { // or: if (GetString (o, \"alias\") = \"Small Stick\"  and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      small_stick_count = small_stick_count + 1\r\n    }\r\n    else if (o.alias = \"Large Stick\"  and LengthOf (o.name) > LengthOf (\"large_stick\")) { // or: else if (GetString (o, \"alias\") = \"Large Stick\" and LengthOf (o.name) > LengthOf (\"large_stick\")) {\r\n      large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n```\r\n\r\n**BUT** this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. \r\n```\r\n  small_stick_count = 0\r\n  large_stick_count = 0\r\n  foreach (o, GetAllChildObjects(player)) {\r\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      small_stick_count = small_stick_count + 1\r\n    }\r\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Is there a special take script for the sticks by any chance?</strong></p>\n<p>Yup, Pixie and I have completely converted the game's objects (not rooms) to finding alias'. Here is the take (listed below). And yes, the sticks go into the players inventory in a submenu, still nested on the player.</p>\n<pre><code>if (this.alias = null) {\n  this.alias = this.name\n}\ncontainer = this.stackparent\nthis.parent = container\nSetStack (container)\nif (this.takemsg = null) {\n  msg (DynamicTemplate(\"TakeSuccessful\", object))\n}\nelse {\n  msg (this.takemsg)\n}\n</code></pre>\n<p>So I tried this (the code below) and nothing showed up again when I clicked the option that had the code in it. No messages and no errors.</p>\n<pre><code>  small_stick_count = 0\n  large_stick_count = 0\n  foreach (o, GetAllChildObjects(player)) {\n    if (o.alias = \"Small Stick\"  and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) { // or: if (GetString (o, \"alias\") = \"Small Stick\"  and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      small_stick_count = small_stick_count + 1\n    }\n    else if (o.alias = \"Large Stick\"  and LengthOf (o.name) &gt; LengthOf (\"large_stick\")) { // or: else if (GetString (o, \"alias\") = \"Large Stick\" and LengthOf (o.name) &gt; LengthOf (\"large_stick\")) {\n      large_stick_count = large_stick_count + 1\n    }\n  }\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n</code></pre>\n<p><strong>BUT</strong> this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others.</p>\n<pre><code>  small_stick_count = 0\n  large_stick_count = 0\n  foreach (o, GetAllChildObjects(player)) {\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      small_stick_count = small_stick_count + 1\n    }\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      large_stick_count = large_stick_count + 1\n    }\n  }\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n</code></pre>\n\n",
      "PostDate": "2017-08-14T08:12:59.8706513Z",
      "LastEditDate": "2017-08-14T08:30:37.6663291Z",
      "link": null
    },
    {
      "PostId": "5cf62da9-1877-45b5-8a42-c1ccf97e008d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you're using a different Object as the (root) storage Object (instead of the Player Object), then you'd just input that into the 'GetAllchildObjects' Function:\r\n\r\n```\r\n  small_stick_count = 0\r\n  large_stick_count = 0\r\n  foreach (o, GetAllChildObjects(NAME_OF_ROOT_STORAGE_OBJECT)) {\r\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      small_stick_count = small_stick_count + 1\r\n    }\r\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) > LengthOf (\"small_stick\")) {\r\n      large_stick_count = large_stick_count + 1\r\n    }\r\n  }\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n```\r\n\r\nfor example:\r\n\r\n```\r\n<object name=\"storage_object\">\r\n  <object name=\"item_storage_object\">\r\n    <object name=\"consumable_item_storage_object\">\r\n      <object name=\"life_potion_object\">\r\n      </object>\r\n    </object>\r\n    <object name=\"battle_item_storage_object\">\r\n      <object name=\"motolov_coctail_object\">\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <object name=\"equipment_storage_object\">\r\n    <object name=\"weapon_storage_object\">\r\n      <object name=\"sword_storage_object\">\r\n        <object name=\"katana_sword_object\">\r\n          <attr name=\"type_of_object_string_attribute\" type=\"string\">sword</attr>\r\n        </object>\r\n        <object name=\"claymore_sword_object\">\r\n          <attr name=\"type_of_object_string_attribute\" type=\"string\">sword</attr>\r\n        </object>\r\n      </object>\r\n      <object name=\"axe_storage_object\">\r\n        <object name=\"tomahawk_axe_object\">\r\n          <attr name=\"type_of_object_string_attribute\" type=\"string\">axe</attr>\r\n        </object>\r\n        <object name=\"hatchet_axe_object\">\r\n          <attr name=\"type_of_object_string_attribute\" type=\"string\">axe</attr>\r\n        </object>\r\n      </object>\r\n    </object>\r\n    <object name=\"armor_storage_object\">\r\n      <object name=\"torso_storage_object\">\r\n        <object name=\"chain_mail_Object\">\r\n        </object>\r\n      </object>\r\n      <object name=\"hand_storage_object\">\r\n        <object name=\"gauntlet_Object\">\r\n        </object>\r\n      </object>\r\n    </object>\r\n    <object name=\"clothing_storage_object\">\r\n      <object name=\"torso_storage_object\">\r\n        <object name=\"shirt_Object\">\r\n        </object>\r\n      </object>\r\n      <object name=\"hand_storage_object\">\r\n        <object name=\"glove_Object\">\r\n        </object>\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <object name=\"spell_storage_object\">\r\n    <object name=\"fire_storage_object\">\r\n      <object name=\"fireball_object\">\r\n      </object>\r\n    </object>\r\n    <object name=\"earth_storage_object\">\r\n      <object name=\"earthquake_object\">\r\n      </object>\r\n    </object>\r\n  </object>\r\n</object>\r\n\r\n// just an example of/for seeing the Function Call/Use:\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" type=\"script\">\r\n    example_function (storage_object)\r\n  </attr>\r\n</game>\r\n\r\n// adjusted for my Objects above:\r\n\r\n<function name=\"example_function\" parameters=\"root_object_parameter\">\r\n  <![CDATA[\r\n    sword_count_integer_variable = 0\r\n    axe_count_integer_variable = 0\r\n    foreach (object_variable, GetAllChildObjects (root_object_parameter)) {\r\n      if (GetString (object_variable, \"type_of_object_string_attribute\") = \"sword\") {\r\n        sword_count_integer_variable = sword_count_integer_variable + 1\r\n      } else if (GetString (object_variable, \"type_of_object_string_attribute\") = \"axe\") {\r\n        axe_count_integer_variable = axe_count_integer_variable + 1\r\n      }\r\n    }\r\n    if (sword_count_integer_variable > 3) {\r\n      if (axe_count_integer_variable > 3) {\r\n        // blah scripting\r\n      } else {\r\n        msg (\"Unfortunately, you don't have enough axes for this project.\")\r\n      }\r\n    } else {\r\n      msg (\"Not enough swords.\")\r\n    }\r\n  ]]>\r\n</function>\r\n```\r\n\r\n--------------------------\r\n\r\nif you don't have a (single) root storage Object, you should (as it simplifies and make the coding more efficient: less operations as it doesn't have to search and handle multiple root Objects). Have all of your individual storage Objects be nested or via 'parent'-ed into a single (root) storage Object.",
      "EditableFormat": "markdown",
      "HTML": "<p>if you're using a different Object as the (root) storage Object (instead of the Player Object), then you'd just input that into the 'GetAllchildObjects' Function:</p>\n<pre><code>  small_stick_count = 0\n  large_stick_count = 0\n  foreach (o, GetAllChildObjects(NAME_OF_ROOT_STORAGE_OBJECT)) {\n    if (StartsWith(o.name, \"small_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      small_stick_count = small_stick_count + 1\n    }\n    else if (StartsWith(o.name, \"large_stick\") and LengthOf (o.name) &gt; LengthOf (\"small_stick\")) {\n      large_stick_count = large_stick_count + 1\n    }\n  }\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n</code></pre>\n<p>for example:</p>\n<pre><code>&lt;object name=\"storage_object\"&gt;\n  &lt;object name=\"item_storage_object\"&gt;\n    &lt;object name=\"consumable_item_storage_object\"&gt;\n      &lt;object name=\"life_potion_object\"&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"battle_item_storage_object\"&gt;\n      &lt;object name=\"motolov_coctail_object\"&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"equipment_storage_object\"&gt;\n    &lt;object name=\"weapon_storage_object\"&gt;\n      &lt;object name=\"sword_storage_object\"&gt;\n        &lt;object name=\"katana_sword_object\"&gt;\n          &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;sword&lt;/attr&gt;\n        &lt;/object&gt;\n        &lt;object name=\"claymore_sword_object\"&gt;\n          &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;sword&lt;/attr&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"axe_storage_object\"&gt;\n        &lt;object name=\"tomahawk_axe_object\"&gt;\n          &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;axe&lt;/attr&gt;\n        &lt;/object&gt;\n        &lt;object name=\"hatchet_axe_object\"&gt;\n          &lt;attr name=\"type_of_object_string_attribute\" type=\"string\"&gt;axe&lt;/attr&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"armor_storage_object\"&gt;\n      &lt;object name=\"torso_storage_object\"&gt;\n        &lt;object name=\"chain_mail_Object\"&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hand_storage_object\"&gt;\n        &lt;object name=\"gauntlet_Object\"&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"clothing_storage_object\"&gt;\n      &lt;object name=\"torso_storage_object\"&gt;\n        &lt;object name=\"shirt_Object\"&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=\"hand_storage_object\"&gt;\n        &lt;object name=\"glove_Object\"&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"spell_storage_object\"&gt;\n    &lt;object name=\"fire_storage_object\"&gt;\n      &lt;object name=\"fireball_object\"&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"earth_storage_object\"&gt;\n      &lt;object name=\"earthquake_object\"&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n// just an example of/for seeing the Function Call/Use:\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    example_function (storage_object)\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n// adjusted for my Objects above:\n\n&lt;function name=\"example_function\" parameters=\"root_object_parameter\"&gt;\n  &lt;![CDATA[\n    sword_count_integer_variable = 0\n    axe_count_integer_variable = 0\n    foreach (object_variable, GetAllChildObjects (root_object_parameter)) {\n      if (GetString (object_variable, \"type_of_object_string_attribute\") = \"sword\") {\n        sword_count_integer_variable = sword_count_integer_variable + 1\n      } else if (GetString (object_variable, \"type_of_object_string_attribute\") = \"axe\") {\n        axe_count_integer_variable = axe_count_integer_variable + 1\n      }\n    }\n    if (sword_count_integer_variable &gt; 3) {\n      if (axe_count_integer_variable &gt; 3) {\n        // blah scripting\n      } else {\n        msg (\"Unfortunately, you don't have enough axes for this project.\")\n      }\n    } else {\n      msg (\"Not enough swords.\")\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>if you don't have a (single) root storage Object, you should (as it simplifies and make the coding more efficient: less operations as it doesn't have to search and handle multiple root Objects). Have all of your individual storage Objects be nested or via 'parent'-ed into a single (root) storage Object.</p>\n\n",
      "PostDate": "2017-08-14T16:35:12.6656624Z",
      "LastEditDate": "2017-08-14T17:19:16.3911456Z",
      "link": null
    },
    {
      "PostId": "b4b08889-7246-4030-99cd-72960c12ae56",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if this is correct:\r\n\r\n\"BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)\"\r\n\r\nthen make sure that everything in code, matches up with this (or whatever you have it has --- check to make sure that indeed your original Object's name is 'large_stick' and its 'alias' is \"Large Stick\"):\r\n\r\n(especially check for accidental more/less spaces than intended... as these are really nasty typos/coping-pasting mistakes...)\r\n\r\n```\r\nlarge_stick.alias = \"Large Stick\"\r\n\r\n<object name=\"large_stick\">\r\n  <attr name=\"alias\" type=\"string\">Large Stick</attr>\r\n</object>",
      "EditableFormat": "markdown",
      "HTML": "<p>if this is correct:</p>\n<p>\"BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)\"</p>\n<p>then make sure that everything in code, matches up with this (or whatever you have it has --- check to make sure that indeed your original Object's name is 'large_stick' and its 'alias' is \"Large Stick\"):</p>\n<p>(especially check for accidental more/less spaces than intended... as these are really nasty typos/coping-pasting mistakes...)</p>\n<pre><code>large_stick.alias = \"Large Stick\"\n\n&lt;object name=\"large_stick\"&gt;\n  &lt;attr name=\"alias\" type=\"string\"&gt;Large Stick&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-08-14T16:58:38.1899543Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6505a40f-1c16-4201-96f9-7f2717e28047",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting this edited post, updated/posted)\r\n\r\n-----------------------\r\n\r\nwait... what do you mean by this:\r\n\r\n\"BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again **with the correct amount and absolutely no sticks of either kind**, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)\"\r\n\r\n???\r\n\r\n----------\r\n\r\nif your game code wasn't so massive... it'd be very easy for you to just post/pm your entire game code, so we can see what you're doing... well... I guess you could do that... it'd just take us more time to scour through your massive game code, seeing what you did and fixing it up so it works and explaining it to you (why it didn't work and why it now works with the/our fixes to it).\r\n\r\n---------\r\n\r\n**actually... you should just post or pm us your entire game code, as that'd probably actually be faster than indirectly via: you and us trying to communicate via these postingss we're doing now and figure out what's the issues with your code, as seeing your entire game code, we can directly scour through it and fix up the mistakes in it for you, it'd just take a bit of time based on how large your game code is, lol**\r\n\r\n**though, we'd need to see Pixie's library code too... as we need to know the Objects/Attributes/Functions/ETC that his library is using, for us to make sure your code and/or our fixes to it, match up and thus work with Pixie's library code, which you're using for your game**",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting this edited post, updated/posted)</p>\n<hr>\n<p>wait... what do you mean by this:</p>\n<p>\"BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again <strong>with the correct amount and absolutely no sticks of either kind</strong>, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)\"</p>\n<p>???</p>\n<hr>\n<p>if your game code wasn't so massive... it'd be very easy for you to just post/pm your entire game code, so we can see what you're doing... well... I guess you could do that... it'd just take us more time to scour through your massive game code, seeing what you did and fixing it up so it works and explaining it to you (why it didn't work and why it now works with the/our fixes to it).</p>\n<hr>\n<p><strong>actually... you should just post or pm us your entire game code, as that'd probably actually be faster than indirectly via: you and us trying to communicate via these postingss we're doing now and figure out what's the issues with your code, as seeing your entire game code, we can directly scour through it and fix up the mistakes in it for you, it'd just take a bit of time based on how large your game code is, lol</strong></p>\n<p><strong>though, we'd need to see Pixie's library code too... as we need to know the Objects/Attributes/Functions/ETC that his library is using, for us to make sure your code and/or our fixes to it, match up and thus work with Pixie's library code, which you're using for your game</strong></p>\n\n",
      "PostDate": "2017-08-14T17:02:23.7148125Z",
      "LastEditDate": "2017-08-14T17:11:07.6838383Z",
      "link": null
    },
    {
      "PostId": "ff1c2eae-beeb-4cc8-92d7-b43ae1daa186",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**if you're using a different Object as the (root) storage Object (instead of the Player Object), then you'd just input that into the 'GetAllchildObjects' Function**\r\n\r\nI have the Player Inventory, then within the inventory once a specific object gets taken it creates a specialized sub-container within the Player's Inventory called \"Survival Inv\". All of the survival items like the _small_stick_ and the _large_stick_ are stored there. I figured _Get ScopeInventory(GetAllChildObjects)_ would work, but I guess not, huh?\r\n\r\n**BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)**\r\n\r\nWhat I meant by that was, I tried that code with one small_stick in my inventory and it showed the \"not enough small_sticks\" message. Afterward, I tried it with the correct amount of sticks needed (over 3) and nothing happened when I tried to run the script. Then I tried the code with absolutely 0 small_sticks in the inventory and nothing happened when I tried to run the script. \r\n\r\n**actually... you should just post or pm us your entire game code, as that'd probably actually be faster than indirectly via: you and us trying to communicate via these postingss we're doing now and figure out what's the issues with your code, as seeing your entire game code, we can directly scour through it and fix up the mistakes in it for you, it'd just take a bit of time based on how large your game code is, lol**\r\n\r\nI can't PM the entire code. There is a limit to how much you can post in PMs, unfortunately. I tried posting the details of the Command (not the code but the notes for it) in a PM and couldn't even fit all of that. But yeah, my game is like 42-45,000 loc now (I haven't checked in a couple of weeks).",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>if you're using a different Object as the (root) storage Object (instead of the Player Object), then you'd just input that into the 'GetAllchildObjects' Function</strong></p>\n<p>I have the Player Inventory, then within the inventory once a specific object gets taken it creates a specialized sub-container within the Player's Inventory called \"Survival Inv\". All of the survival items like the <em>small_stick</em> and the <em>large_stick</em> are stored there. I figured <em>Get ScopeInventory(GetAllChildObjects)</em> would work, but I guess not, huh?</p>\n<p><strong>BUT this code (the one listed below) showed the \"Not enough small sticks\" --- but when I tested it again with the correct amount and absolutely no sticks of either kind, it didn't print any message or errors. So this one might just be tracking one small_stick but not any of the others. (Anonynn)</strong></p>\n<p>What I meant by that was, I tried that code with one small_stick in my inventory and it showed the \"not enough small_sticks\" message. Afterward, I tried it with the correct amount of sticks needed (over 3) and nothing happened when I tried to run the script. Then I tried the code with absolutely 0 small_sticks in the inventory and nothing happened when I tried to run the script.</p>\n<p><strong>actually... you should just post or pm us your entire game code, as that'd probably actually be faster than indirectly via: you and us trying to communicate via these postingss we're doing now and figure out what's the issues with your code, as seeing your entire game code, we can directly scour through it and fix up the mistakes in it for you, it'd just take a bit of time based on how large your game code is, lol</strong></p>\n<p>I can't PM the entire code. There is a limit to how much you can post in PMs, unfortunately. I tried posting the details of the Command (not the code but the notes for it) in a PM and couldn't even fit all of that. But yeah, my game is like 42-45,000 loc now (I haven't checked in a couple of weeks).</p>\n\n",
      "PostDate": "2017-08-14T17:34:43.5393252Z",
      "LastEditDate": "2017-08-14T17:37:41.64244Z",
      "link": null
    },
    {
      "PostId": "ca332fb1-69de-4c61-af0f-4f898b87d77b",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Last time, I just e-mailed the entire game file to The Pixie.\r\nOther alternatives include putting the code on another website like deviantart or something.\r\nBut yeah, just PM the Pix and he should give you his e-mail or at least offer to help.",
      "EditableFormat": "markdown",
      "HTML": "<p>Last time, I just e-mailed the entire game file to The Pixie.<br>\nOther alternatives include putting the code on another website like deviantart or something.<br>\nBut yeah, just PM the Pix and he should give you his e-mail or at least offer to help.</p>\n\n",
      "PostDate": "2017-08-14T18:18:21.6539136Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "192c89ea-df1e-4e73-abd4-35dc59f22183",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/FBcxPJRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Last time, I just e-mailed the entire game file to The Pixie.\r\nOther alternatives include putting the code on another website like deviantart or something.\r\nBut yeah, just PM the Pix and he should give you his e-mail or at least offer to help.**\r\n\r\nPixie's actually on vacation at the moment which is good cause he's been busting his/her butt! Also, there's no way in hell I would post my game's code on a public website xD But I do trust a couple of individuals on here to take a look at it. HK for example, Pertex, Pixie, K.V, onimike, Jay, Xan to name a few. ",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Last time, I just e-mailed the entire game file to The Pixie.<br>\nOther alternatives include putting the code on another website like deviantart or something.<br>\nBut yeah, just PM the Pix and he should give you his e-mail or at least offer to help.</strong></p>\n<p>Pixie's actually on vacation at the moment which is good cause he's been busting his/her butt! Also, there's no way in hell I would post my game's code on a public website xD But I do trust a couple of individuals on here to take a look at it. HK for example, Pertex, Pixie, K.V, onimike, Jay, Xan to name a few.</p>\n\n",
      "PostDate": "2017-08-14T18:26:52.8575408Z",
      "LastEditDate": "2017-08-14T18:28:13.5824108Z",
      "link": null
    },
    {
      "PostId": "b8b13fd7-eeb8-4fff-8c0e-a024d01d8498",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ya, forgot about the pm character limit, indeed, have to use some other means...\r\n\r\nand ya, you'd want to pm those you trust, as you don't want to make your game code public (via posting it)... I was just making a generalized comment of 'pm or post', but for you specifically, it'd jsut be 'pm', lol. --- But, I forgot the pm character limit, so, no pm ether, lol.\r\n\r\nI don't want to give out my email... there's other sites that you can post onto it, and it uses a random unique url, so that works pretty well for keeping it private, as you'd just pm that url to the person who'll look at your code, and thus no one else would know the url and non-censentually see your game code. But that's still kind of a hassle.\r\n\r\nPersonally, if you can wait on getting this fixed up for your game, I'd just wait until Pixie comes back and get pixie's help and email Pixie your game code, as he's already been helping you, and thus is familiar a bit with your game code already, as well as obviously being familiar with his own library that you're using for your game.\r\n\r\n---------\r\n\r\nah, okay, so your sub-root storage Object in within your (root storage of the) Player Object. The 'GetAllChildObjects' and the rest of the code, aka the code, should work...\r\n\r\n--------\r\n\r\n\"What I meant by that was, I tried that code with one small_stick in my inventory and it showed the \"not enough small_sticks\" message. Afterward, I tried it with the correct amount of sticks needed (over 3) and nothing happened when I tried to run the script. Then I tried the code with absolutely 0 small_sticks in the inventory and nothing happened when I tried to run the script. (Anonynn)\"\r\n\r\n```\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n```\r\n\r\nthis (the above code) should be giving you a message no matter what:\r\n\r\nif small sticks less than 4: msg (\"Not enough small sticks.\")\r\n\r\nif small sticks greater than 3, but large sticks less than 4: msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n\r\nif small sticks greater than 3 and large sticks greater than 3:\r\nmsg (\"SUCCESS!!!\")\r\nmsg (\"\")\r\nmsg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n\r\n------------\r\n\r\nmaybe you got the nesting/indenting of the 'if' blocks wrong... make sure you got it correct... (post this part of your code for us, and we'll check it for you)\r\n\r\n-----------\r\n\r\nyou could also just try this code and let us know if it works or not:\r\n\r\n(as this will narrow down the issue/problem/error, you're getting, to the handling of the Objects involved, which is the part of code removed from the below code for you to try)\r\n\r\n```\r\n  small_stick_count = 0 // test it by changing its value\r\n  large_stick_count = 0 // test it by changing its value\r\n  if (small_stick_count > 3) {\r\n    if (large_stick_count > 3) {\r\n      msg (\"SUCCESS!!!\")\r\n      msg (\"\")\r\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\r\n    }\r\n    else {\r\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\r\n    }\r\n  }\r\n  else {\r\n    msg (\"Not enough small sticks.\")\r\n  }\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>ya, forgot about the pm character limit, indeed, have to use some other means...</p>\n<p>and ya, you'd want to pm those you trust, as you don't want to make your game code public (via posting it)... I was just making a generalized comment of 'pm or post', but for you specifically, it'd jsut be 'pm', lol. --- But, I forgot the pm character limit, so, no pm ether, lol.</p>\n<p>I don't want to give out my email... there's other sites that you can post onto it, and it uses a random unique url, so that works pretty well for keeping it private, as you'd just pm that url to the person who'll look at your code, and thus no one else would know the url and non-censentually see your game code. But that's still kind of a hassle.</p>\n<p>Personally, if you can wait on getting this fixed up for your game, I'd just wait until Pixie comes back and get pixie's help and email Pixie your game code, as he's already been helping you, and thus is familiar a bit with your game code already, as well as obviously being familiar with his own library that you're using for your game.</p>\n<hr>\n<p>ah, okay, so your sub-root storage Object in within your (root storage of the) Player Object. The 'GetAllChildObjects' and the rest of the code, aka the code, should work...</p>\n<hr>\n<p>\"What I meant by that was, I tried that code with one small_stick in my inventory and it showed the \"not enough small_sticks\" message. Afterward, I tried it with the correct amount of sticks needed (over 3) and nothing happened when I tried to run the script. Then I tried the code with absolutely 0 small_sticks in the inventory and nothing happened when I tried to run the script. (Anonynn)\"</p>\n<pre><code>  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n</code></pre>\n<p>this (the above code) should be giving you a message no matter what:</p>\n<p>if small sticks less than 4: msg (\"Not enough small sticks.\")</p>\n<p>if small sticks greater than 3, but large sticks less than 4: msg (\"Unfortunately, you don't have enough large sticks for this project.\")</p>\n<p>if small sticks greater than 3 and large sticks greater than 3:<br>\nmsg (\"SUCCESS!!!\")<br>\nmsg (\"\")<br>\nmsg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")</p>\n<hr>\n<p>maybe you got the nesting/indenting of the 'if' blocks wrong... make sure you got it correct... (post this part of your code for us, and we'll check it for you)</p>\n<hr>\n<p>you could also just try this code and let us know if it works or not:</p>\n<p>(as this will narrow down the issue/problem/error, you're getting, to the handling of the Objects involved, which is the part of code removed from the below code for you to try)</p>\n<pre><code>  small_stick_count = 0 // test it by changing its value\n  large_stick_count = 0 // test it by changing its value\n  if (small_stick_count &gt; 3) {\n    if (large_stick_count &gt; 3) {\n      msg (\"SUCCESS!!!\")\n      msg (\"\")\n      msg (\"You have enough to construct this fire/shelter/trap! And proceed to do so.\")\n    }\n    else {\n      msg (\"Unfortunately, you don't have enough large sticks for this project.\")\n    }\n  }\n  else {\n    msg (\"Not enough small sticks.\")\n  }\n</code></pre>\n\n",
      "PostDate": "2017-08-14T23:18:12.5251343Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
