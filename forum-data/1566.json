{
  "Topic": {
    "TopicId": "1566",
    "ForumId": "10",
    "Title": "Object default get message",
    "LastUpdated": "2007-01-19T17:55:45+00:00",
    "ReplyCount": 11
  },
  "Posts": [
    {
      "PostId": "12222",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Hey, folks.\n\n[code:2e2sqc8o]gain &#123;\n\n\t\t\tmsg &lt;    You stick your hand inside the wet, loamy soil&#46;  After digging around with your fingers, you pull up a long, glittering chain&#46;  It is a necklace&#46;&gt;\n\t\t\tremove &lt;Vestigian_Forest_0_-10_0_glitter&gt;\n\t\t\thide &lt;Vestigian_Forest_0_-10_0_glitter&gt;\n\t\t\thide &lt;Vestigian_Forest_0_-10_0_soil&gt;\t\t\t\n\t\t\tmove &lt;it_cl_necklace01; inventory&gt;\n\t\t\tshow &lt;it_cl_necklace01&gt;\n&#125;[/code:2e2sqc8o]\n\nThe only problem with this is the default message for getting an object still appears:\n\n[quote:2e2sqc8o]You pick it up.\n    You stick your hand inside the wet, loamy soil.  After digging around with your fingers, you pull up a long, glittering chain.  It is a necklace.[/quote:2e2sqc8o]\n\nHow would I temporarily switch off the default get message?\n\nI can do this with by creating my own &quot;get&quot; command, but this causes problems with disambiguation.  ('command &lt;get #@object#&gt;' will disambiguate two local widgets, even if one of them is in your inventory. ie. you already have one of them, so it shouldn't disambiguate.)",
      "EditableFormat": "bbcode",
      "HTML": "Hey, folks.<br/><br/><pre><code>gain &#123;<br/><br/>\t\t\tmsg &lt;    You stick your hand inside the wet, loamy soil&#46;  After digging around with your fingers, you pull up a long, glittering chain&#46;  It is a necklace&#46;&gt;<br/>\t\t\tremove &lt;Vestigian_Forest_0_-10_0_glitter&gt;<br/>\t\t\thide &lt;Vestigian_Forest_0_-10_0_glitter&gt;<br/>\t\t\thide &lt;Vestigian_Forest_0_-10_0_soil&gt;\t\t\t<br/>\t\t\tmove &lt;it_cl_necklace01; inventory&gt;<br/>\t\t\tshow &lt;it_cl_necklace01&gt;<br/>&#125;</code></pre><br/><br/>The only problem with this is the default message for getting an object still appears:<br/><br/><blockquote><p>You pick it up.<br/>    You stick your hand inside the wet, loamy soil.  After digging around with your fingers, you pull up a long, glittering chain.  It is a necklace.</p></blockquote><br/><br/>How would I temporarily switch off the default get message?<br/><br/>I can do this with by creating my own &quot;get&quot; command, but this causes problems with disambiguation.  ('command &lt;get #@object#&gt;' will disambiguate two local widgets, even if one of them is in your inventory. ie. you already have one of them, so it shouldn't disambiguate.)",
      "PostDate": "2007-01-17T21:29:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12227",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "take doaction &lt;it_cl_necklace01;gain&gt;\n\nI think that should work..\n\n[code:2vrjb3sv]or take &lt;|xn&gt;[/code:2vrjb3sv]\n\n..This may probably have more success than the first one.",
      "EditableFormat": "bbcode",
      "HTML": "take doaction &lt;it_cl_necklace01;gain&gt;<br/><br/>I think that should work..<br/><br/><pre><code>or take &lt;|xn&gt;</code></pre><br/><br/>..This may probably have more success than the first one.",
      "PostDate": "2007-01-17T22:58:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12230",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Oh yeah.  I'm an idiot.  Thanks.\n\nI actually solved this using verbs, instead.  (More round-about, I know.)  I created a get verb.  This is essentially the same as creating a get command, and here is where my other problem persists:  disambiguation.\n\nOne of the reason's why I want to have my own get command is so that I can alter the default messages somewhat.  I'd like to indent them.  Around 4 spaces or so - you cannot add those 4 spaces with the error tag because they get clipped.  By creating a command, I can msg out the errors and add my leading spaces (indents).  This, however, causes a problem.  Typing 'get widget' disambiguates widget objects both in the room and in my inventory.  I of course don't want to get something I already possess!\n\nAny suggestions?",
      "EditableFormat": "bbcode",
      "HTML": "Oh yeah.  I'm an idiot.  Thanks.<br/><br/>I actually solved this using verbs, instead.  (More round-about, I know.)  I created a get verb.  This is essentially the same as creating a get command, and here is where my other problem persists:  disambiguation.<br/><br/>One of the reason's why I want to have my own get command is so that I can alter the default messages somewhat.  I'd like to indent them.  Around 4 spaces or so - you cannot add those 4 spaces with the error tag because they get clipped.  By creating a command, I can msg out the errors and add my leading spaces (indents).  This, however, causes a problem.  Typing 'get widget' disambiguates widget objects both in the room and in my inventory.  I of course don't want to get something I already possess!<br/><br/>Any suggestions?",
      "PostDate": "2007-01-17T23:58:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12235",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "Which reminds me.\n\nSuppose I have a 'push' command or verb.  It is used to push objects around.  There is a rock in the current room, and I need to push it, so I type 'push rock'.  The problem is I have a little rock in my pocket, which happens to have 'rock' in it's alt property.  Quest now disambiguates between the rock in the room and the one in my pocket.  I patently do not want to push the rock in my pocket!\n\nI could fix this by changing the command from 'command &lt;push #@object#&gt;' to 'command &lt;push #object#&gt;'.  The second command would loop through only the objects in the room to find one that matched.  Three problems with that, though:  \n\n1) slow-down, if there are many objects in the room\n2) I can't read the alt property to scan for appropriate items\n3) I'd have to create my own disambiguation routine for similarly-named objects that do exist in the room\n\nAny thoughts on this, guys?",
      "EditableFormat": "bbcode",
      "HTML": "Which reminds me.<br/><br/>Suppose I have a 'push' command or verb.  It is used to push objects around.  There is a rock in the current room, and I need to push it, so I type 'push rock'.  The problem is I have a little rock in my pocket, which happens to have 'rock' in it's alt property.  Quest now disambiguates between the rock in the room and the one in my pocket.  I patently do not want to push the rock in my pocket!<br/><br/>I could fix this by changing the command from 'command &lt;push #@object#&gt;' to 'command &lt;push #object#&gt;'.  The second command would loop through only the objects in the room to find one that matched.  Three problems with that, though:  <br/><br/>1) slow-down, if there are many objects in the room<br/>2) I can't read the alt property to scan for appropriate items<br/>3) I'd have to create my own disambiguation routine for similarly-named objects that do exist in the room<br/><br/>Any thoughts on this, guys?",
      "PostDate": "2007-01-18T15:31:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12237",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "Just check to make sure the object is not in the room Inventory?",
      "EditableFormat": "bbcode",
      "HTML": "Just check to make sure the object is not in the room Inventory?",
      "PostDate": "2007-01-18T16:30:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12244",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "So verbs will come up with this error too?\n\nI thought verb's might be slightly more intelligent and only prompt the user is more than one object has the verb... Perhaps not... I haven't used/tested them yet.\n\nThere's the old obsolete function &quot;getobjectname&quot;.. This way, you could check to see if there were objects in your inventory, and move them out to a temporary hidden room (I say move rather than hide because the object is still in the room - and more than one object with this alt will probably still cause disambiguation)..\n\nI suppose you could also have a combination of the two - a command and a verb - although I don't know which is processed first (I'll experiment in a few mins).. If it's the command - you could get rid of the inventory, setting a flag. Then execute the command in 'normal' mode.. which should hit the verb... Then in the after-turn,  check for the flag and return all objects in the hidden room to the inventory.",
      "EditableFormat": "bbcode",
      "HTML": "So verbs will come up with this error too?<br/><br/>I thought verb's might be slightly more intelligent and only prompt the user is more than one object has the verb... Perhaps not... I haven't used/tested them yet.<br/><br/>There's the old obsolete function &quot;getobjectname&quot;.. This way, you could check to see if there were objects in your inventory, and move them out to a temporary hidden room (I say move rather than hide because the object is still in the room - and more than one object with this alt will probably still cause disambiguation)..<br/><br/>I suppose you could also have a combination of the two - a command and a verb - although I don't know which is processed first (I'll experiment in a few mins).. If it's the command - you could get rid of the inventory, setting a flag. Then execute the command in 'normal' mode.. which should hit the verb... Then in the after-turn,  check for the flag and return all objects in the hidden room to the inventory.",
      "PostDate": "2007-01-18T20:56:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12246",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:akqaem7z]Just check to make sure the object is not in the room Inventory?[/quote:akqaem7z]\n\nRight.  But.  I think Quest disambiguates before any code is run in either the command script or the verb action script.  I just don't have a chance to make that check before the disambiguation window pops up.  Hence why I thought maybe excluding the @ from the command.  That disables the disambiguation.\n\n[quote:akqaem7z]I thought verb's might be slightly more intelligent and only prompt the user is more than one object has the verb [/quote:akqaem7z] \n\nI'm gonna' test that hypothesis right now.\n\nLet me know what you all come up with.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Just check to make sure the object is not in the room Inventory?</p></blockquote><br/><br/>Right.  But.  I think Quest disambiguates before any code is run in either the command script or the verb action script.  I just don't have a chance to make that check before the disambiguation window pops up.  Hence why I thought maybe excluding the @ from the command.  That disables the disambiguation.<br/><br/><blockquote><p>I thought verb's might be slightly more intelligent and only prompt the user is more than one object has the verb </p></blockquote> <br/><br/>I'm gonna' test that hypothesis right now.<br/><br/>Let me know what you all come up with.",
      "PostDate": "2007-01-18T21:21:18+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12248",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "A verb disambiguates identically to a command, checking both your inventory and the current room.  Because it disambiguates before any code is run, I think temporarily moving the inventory objects elsewhere won't work.  It'll disambiguate [i:7dhlol15]before[/i:7dhlol15] you get a chance to execute that sneaky manoeuvre.",
      "EditableFormat": "bbcode",
      "HTML": "A verb disambiguates identically to a command, checking both your inventory and the current room.  Because it disambiguates before any code is run, I think temporarily moving the inventory objects elsewhere won't work.  It'll disambiguate <span style=\"font-style:italic;\">before</span> you get a chance to execute that sneaky manoeuvre.",
      "PostDate": "2007-01-18T21:30:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12263",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "There's beforeturn.\n\nThis should allow you to move them out before hand...\n\nDo you know if commands are executed before verbs?",
      "EditableFormat": "bbcode",
      "HTML": "There's beforeturn.<br/><br/>This should allow you to move them out before hand...<br/><br/>Do you know if commands are executed before verbs?",
      "PostDate": "2007-01-19T10:27:50+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12267",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:1v3u5aga]There's beforeturn.[/quote:1v3u5aga]\n\nOh, yeah.  I could check the status of the last command, then move the inventory items.  Thanks.  May use that.\n\n[quote:1v3u5aga]Do you know if commands are executed before verbs?[/quote:1v3u5aga]\n\nLet me test...\n\nIt seems that verbs override commands with the same name.  \n\n[code:1v3u5aga]verb &lt;push; shove&gt; msg &lt;    You can't push that&#46;&gt;\ncommand &lt;push&gt; &#123;\n\t\t\n\t\tmsg &lt;  Cmd push fired&#46;&gt;\n\t\n&#125;[/code:1v3u5aga]\n\nand \n\n[code:1v3u5aga]verb &lt;push; shove&gt; msg &lt;    You can't push that&#46;&gt;\ncommand &lt;shove&gt; &#123;\n\t\t\n\t\tmsg &lt;  Cmd push fired&#46;&gt;\n\t\n&#125;[/code:1v3u5aga]\n\nboth result in the verb activity, but not in the command activity at all.  That is, it isn't the case that they both fire - only the verb does.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>There's beforeturn.</p></blockquote><br/><br/>Oh, yeah.  I could check the status of the last command, then move the inventory items.  Thanks.  May use that.<br/><br/><blockquote><p>Do you know if commands are executed before verbs?</p></blockquote><br/><br/>Let me test...<br/><br/>It seems that verbs override commands with the same name.  <br/><br/><pre><code>verb &lt;push; shove&gt; msg &lt;    You can't push that&#46;&gt;<br/>command &lt;push&gt; &#123;<br/>\t\t<br/>\t\tmsg &lt;  Cmd push fired&#46;&gt;<br/>\t<br/>&#125;</code></pre><br/><br/>and <br/><br/><pre><code>verb &lt;push; shove&gt; msg &lt;    You can't push that&#46;&gt;<br/>command &lt;shove&gt; &#123;<br/>\t\t<br/>\t\tmsg &lt;  Cmd push fired&#46;&gt;<br/>\t<br/>&#125;</code></pre><br/><br/>both result in the verb activity, but not in the command activity at all.  That is, it isn't the case that they both fire - only the verb does.",
      "PostDate": "2007-01-19T13:22:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12270",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "Are you testing for each object in #quest.currentroom#? If that doesn't ignore objects in a player's inventory you could also give each object a property of location with a value of the name of the room they are in. Then refine your search for each object in #quest.currentroom# &amp; $objectproperty(location; #quest.currentroom#)$ as an object in the inventory would contain a location property of $name(player%userid%)$.",
      "EditableFormat": "bbcode",
      "HTML": "Are you testing for each object in #quest.currentroom#? If that doesn't ignore objects in a player's inventory you could also give each object a property of location with a value of the name of the room they are in. Then refine your search for each object in #quest.currentroom# &amp; $objectproperty(location; #quest.currentroom#)$ as an object in the inventory would contain a location property of $name(player%userid%)$.",
      "PostDate": "2007-01-19T17:48:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "12273",
      "UserId": 0,
      "Username": "Overcat",
      "UserAvatar": null,
      "UserGravatar": "3958f867d73b44faed6e01f35e74c093",
      "EditableText": "[quote:1hkaxhm1]Are you testing for each object in #quest.currentroom#? [/quote:1hkaxhm1]\n\nYes.  If I use the command &lt;push #object#&gt;.  The problem there is I cannot reference the alt property for valid objects in the current room that may need disambiguation.\n\nI am currently using the command &lt;push #@object#&gt;, but in the beforeturn script I put:\n\n[code:1hkaxhm1]if &#40;$left&#40;#quest&#46;command#; 4&#41;$ = push&#41; then &#123;\n\t\t\t\n\t\t\tfor each object in &lt;inventory&gt; &#123;\n\t\t\t\tmove &lt;#quest&#46;thing#; inventory-swapout&gt;\n\t\t\t&#125;\n\t\t\tproperty &lt;PC; SwapInventory&gt;\t\t\t\t\n&#125;[/code:1hkaxhm1]\n\nand in the afterturn script I put:\n\n[code:1hkaxhm1]if property &lt;PC; SwapInventory&gt; then &#123;\n\t\t\tfor each object in &lt;inventory-swapout&gt; &#123;\n\t\t\t\tmove &lt;#quest&#46;thing#; inventory&gt;\n\t\t\t&#125;\n\t\t\tproperty &lt;PC; not SwapInventory&gt;\n&#125;[/code:1hkaxhm1]\n\n[quote:1hkaxhm1]If that doesn't ignore objects in a player's inventory...[/quote:1hkaxhm1]\n\nIt does ignore the inventory.  Fortunately, I don't need to use the command &lt;push #object#&gt;.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Are you testing for each object in #quest.currentroom#? </p></blockquote><br/><br/>Yes.  If I use the command &lt;push #object#&gt;.  The problem there is I cannot reference the alt property for valid objects in the current room that may need disambiguation.<br/><br/>I am currently using the command &lt;push #@object#&gt;, but in the beforeturn script I put:<br/><br/><pre><code>if &#40;$left&#40;#quest&#46;command#; 4&#41;$ = push&#41; then &#123;<br/>\t\t\t<br/>\t\t\tfor each object in &lt;inventory&gt; &#123;<br/>\t\t\t\tmove &lt;#quest&#46;thing#; inventory-swapout&gt;<br/>\t\t\t&#125;<br/>\t\t\tproperty &lt;PC; SwapInventory&gt;\t\t\t\t<br/>&#125;</code></pre><br/><br/>and in the afterturn script I put:<br/><br/><pre><code>if property &lt;PC; SwapInventory&gt; then &#123;<br/>\t\t\tfor each object in &lt;inventory-swapout&gt; &#123;<br/>\t\t\t\tmove &lt;#quest&#46;thing#; inventory&gt;<br/>\t\t\t&#125;<br/>\t\t\tproperty &lt;PC; not SwapInventory&gt;<br/>&#125;</code></pre><br/><br/><blockquote><p>If that doesn't ignore objects in a player's inventory...</p></blockquote><br/><br/>It does ignore the inventory.  Fortunately, I don't need to use the command &lt;push #object#&gt;.",
      "PostDate": "2007-01-19T17:55:45+00:00",
      "LastEditDate": null
    }
  ]
}
