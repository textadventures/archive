{
  "Topic": {
    "TopicId": "5705",
    "ForumId": "18",
    "Title": "the IF block",
    "LastUpdated": "2015-12-09T06:24:24+00:00",
    "ReplyCount": 7
  },
  "Posts": [
    {
      "PostId": "39295",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "HK Note:\n\nstill a work in progress, need to finish it up first, and then go back and format~organize~section it nicely, for it being easier to read by people\n\n(I'm trying to: ~ &quot;if you're going to do~teach this, then do~teach it right&quot;, as Pixie made me aware of, so that, is what I'm now trying to do, to the best of my ability and current, hopefully at least somewhat correct, knowledge~understanding of things) \n\n------------------------------------\n\nfirst, some background Programming~Computer~Physics~Electronics information:\n\n(as best as I currently understand it, lol)\n\nComputers use electricty, and they have circuitry 'switches' which are lit 'on' or 'off' (via high/low voltages and~or +/- charged currents ~ I'm still a bit confused in regards to the electrical-electronic physics of it). Somehow (this is still a total mystery to me~magical), this 'physical layer' is converted (and also vice-versa) into the binary (zeros and ones) 'logical layer', and thus is called 'machine language' (this is the lowest of the low level, aka computer-friendly, of programming languages). All code, all programming, must be converted into machine language, into binary (zeroes and ones) for the computer ~ CPU ~ processor. Luckily, this is done for us, and we only have to learn the high level (human-friendly) programming languages like C++, Java, Python, HTML, JS, Ruby, Basic, MS-DoS and various modern 'Shell' languages, AppleScript, C#, etc etc etc, and~or similar but unique game engine languages like Quest's code language.\n\njust for (pretend) example only (I hope to eventually learn into the low level languages, learning assembly language and maybe even a bit of machine language):\n\nquest's high level language &lt;-----&gt; machine language (lowest low level language)\nmsg (&quot;hi, my name is HK&quot;) &lt;------&gt; 010111000110000011000010001101110001001\n\nmachine language wiki link: <!-- m --><a class=\"postlink\" href=\"https://en.wikipedia.org/wiki/Machine_code?sa=X&amp;ved=0ahUKEwj9g8nEz-fJAhUIKWMKHXB3CR0Q9QEIGTAA\">https://en.wikipedia.org/wiki/Machine_c ... 0Q9QEIGTAA</a><!-- m -->\n\nSo, why the information above, for the topic of the 'if' block?\n\nbecause, this is actually how conditionals and booleans work\n\na boolean's 'true' and 'false' values are human-friendly, but underneath the user level, 'true' is converted into '1' (technically it's any number except 0, but 1 is the convention used and to keep this simple too for people) and 'false' is converted into '0', this is binary.\n\nso, for example, in concept (not sure if this actually works in quest):\n\n'if (true)' is the same as 'if (1)'\n'if (false)' is the same as 'if (0)'\n\nand let's expand the concept a bit further:\n\n(I'm still a bit confused on 'if (FALSE)' concept, as 'unary' or non-comparison conditionals are confusing for me, so if any of this confuses you, ignore it)\n\n(comparison conditionals make much more sense to me: if (true = true), if (false = false), if (true = false), if (false = true), lol)\n\nif (player.strength = 100)\n// let's say: player.strength = 100 \n// if (100 = 100) -&gt; TRUE: the scripts will be run\n// if (TRUE == 100 = 100) -&gt; TRUE: the scripts will be run\n// if (TRUE)\n// if (1)\n\nif (player.strength = 100)\n// let's say: player.strength = 0\n// if (0 = 100) -&gt; FALSE: the scripts will NOT be run\n// if (TRUE =/= 0 = 100) -&gt; FALSE: the scripts will NOT be run\n// if (FALSE)\n// if (0)\n\nif (not player.strength = 100)\n// let's say: player.strength = 0\n// if (0 =/= 100) -&gt; TRUE: the scripts will be run\n// if (TRUE == 0 =/= 100) -&gt; TRUE: the scripts will be run\n// if (TRUE)\n// if (1)\n\nif (not player.strength = 100)\n// let's say: player.strength = 100\n// if (100 =/= 100) -&gt; FALSE: the scripts will NOT be run\n// if (TRUE =/= 100 == 100) -&gt; FALSE: the scripts will NOT be run\n// if (FALSE)\n// if (0)\n\nand now, we can finally address the 'if' block:\n\n(I'll get to this, but not now, I'm tired)",
      "EditableFormat": "bbcode",
      "HTML": "HK Note:<br/><br/>still a work in progress, need to finish it up first, and then go back and format~organize~section it nicely, for it being easier to read by people<br/><br/>(I'm trying to: ~ &quot;if you're going to do~teach this, then do~teach it right&quot;, as Pixie made me aware of, so that, is what I'm now trying to do, to the best of my ability and current, hopefully at least somewhat correct, knowledge~understanding of things) <br/><br/>------------------------------------<br/><br/>first, some background Programming~Computer~Physics~Electronics information:<br/><br/>(as best as I currently understand it, lol)<br/><br/>Computers use electricty, and they have circuitry 'switches' which are lit 'on' or 'off' (via high/low voltages and~or +/- charged currents ~ I'm still a bit confused in regards to the electrical-electronic physics of it). Somehow (this is still a total mystery to me~magical), this 'physical layer' is converted (and also vice-versa) into the binary (zeros and ones) 'logical layer', and thus is called 'machine language' (this is the lowest of the low level, aka computer-friendly, of programming languages). All code, all programming, must be converted into machine language, into binary (zeroes and ones) for the computer ~ CPU ~ processor. Luckily, this is done for us, and we only have to learn the high level (human-friendly) programming languages like C++, Java, Python, HTML, JS, Ruby, Basic, MS-DoS and various modern 'Shell' languages, AppleScript, C#, etc etc etc, and~or similar but unique game engine languages like Quest's code language.<br/><br/>just for (pretend) example only (I hope to eventually learn into the low level languages, learning assembly language and maybe even a bit of machine language):<br/><br/>quest's high level language &lt;-----&gt; machine language (lowest low level language)<br/>msg (&quot;hi, my name is HK&quot;) &lt;------&gt; 010111000110000011000010001101110001001<br/><br/>machine language wiki link: <!-- m --><a class=\"postlink\" href=\"https://en.wikipedia.org/wiki/Machine_code?sa=X&amp;ved=0ahUKEwj9g8nEz-fJAhUIKWMKHXB3CR0Q9QEIGTAA\">https://en.wikipedia.org/wiki/Machine_c ... 0Q9QEIGTAA</a><!-- m --><br/><br/>So, why the information above, for the topic of the 'if' block?<br/><br/>because, this is actually how conditionals and booleans work<br/><br/>a boolean's 'true' and 'false' values are human-friendly, but underneath the user level, 'true' is converted into '1' (technically it's any number except 0, but 1 is the convention used and to keep this simple too for people) and 'false' is converted into '0', this is binary.<br/><br/>so, for example, in concept (not sure if this actually works in quest):<br/><br/>'if (true)' is the same as 'if (1)'<br/>'if (false)' is the same as 'if (0)'<br/><br/>and let's expand the concept a bit further:<br/><br/>(I'm still a bit confused on 'if (FALSE)' concept, as 'unary' or non-comparison conditionals are confusing for me, so if any of this confuses you, ignore it)<br/><br/>(comparison conditionals make much more sense to me: if (true = true), if (false = false), if (true = false), if (false = true), lol)<br/><br/>if (player.strength = 100)<br/>// let's say: player.strength = 100 <br/>// if (100 = 100) -&gt; TRUE: the scripts will be run<br/>// if (TRUE == 100 = 100) -&gt; TRUE: the scripts will be run<br/>// if (TRUE)<br/>// if (1)<br/><br/>if (player.strength = 100)<br/>// let's say: player.strength = 0<br/>// if (0 = 100) -&gt; FALSE: the scripts will NOT be run<br/>// if (TRUE =/= 0 = 100) -&gt; FALSE: the scripts will NOT be run<br/>// if (FALSE)<br/>// if (0)<br/><br/>if (not player.strength = 100)<br/>// let's say: player.strength = 0<br/>// if (0 =/= 100) -&gt; TRUE: the scripts will be run<br/>// if (TRUE == 0 =/= 100) -&gt; TRUE: the scripts will be run<br/>// if (TRUE)<br/>// if (1)<br/><br/>if (not player.strength = 100)<br/>// let's say: player.strength = 100<br/>// if (100 =/= 100) -&gt; FALSE: the scripts will NOT be run<br/>// if (TRUE =/= 100 == 100) -&gt; FALSE: the scripts will NOT be run<br/>// if (FALSE)<br/>// if (0)<br/><br/>and now, we can finally address the 'if' block:<br/><br/>(I'll get to this, but not now, I'm tired)",
      "PostDate": "2015-12-08T01:11:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39306",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Rather than:\n[code:1k51hwgl]msg (&quot;HK&quot;)\nif (flag = true) {\n  msg (&quot;hi&quot;)\n}\nelse if (flag = false) {\n  msg (&quot;bye&quot;)\n}\nmsg (&quot;HegemonKhan&quot;)[/code:1k51hwgl]\nDo this:\n[code:1k51hwgl]msg (&quot;HK&quot;)\nif (flag) {\n  msg (&quot;hi&quot;)\n}\nelse {\n  msg (&quot;bye&quot;)\n}\nmsg (&quot;HegemonKhan&quot;)[/code:1k51hwgl]",
      "EditableFormat": "bbcode",
      "HTML": "Rather than:<br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag = true) {<br/>  msg (&quot;hi&quot;)<br/>}<br/>else if (flag = false) {<br/>  msg (&quot;bye&quot;)<br/>}<br/>msg (&quot;HegemonKhan&quot;)</code></pre><br/>Do this:<br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag) {<br/>  msg (&quot;hi&quot;)<br/>}<br/>else {<br/>  msg (&quot;bye&quot;)<br/>}<br/>msg (&quot;HegemonKhan&quot;)</code></pre>",
      "PostDate": "2015-12-08T10:02:34+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39309",
      "UserId": 0,
      "Username": "OurJud",
      "UserAvatar": "7473_1417206896.jpg",
      "UserGravatar": "7892e1059c02a91b34ffd60deb7402ff",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:y0yp4l22]\nnow, let's add a bit of complexity to it, multiple 'if' blocks:\n\n[code:y0yp4l22]msg (&quot;HK&quot;)\nif (flag = true) {\n  msg (&quot;hi&quot;)\n}\nmsg (&quot;bye&quot;)\n\nif (flag = false) {\n  msg (&quot;bye&quot;)\n}\nmsg (&quot;hi&quot;)[/code:y0yp4l22]\n\nlet's say I set: flag = false, what happens?\n\nAnswer, outputs:\n\nHK\nbye\nbye\nhi\n[/quote:y0yp4l22]\n\nI don't get this. If flag is false, then why isn't the output just:\n\nHK\nbye\nhi\n\nThis script, to me, is saying, &quot;print 'HK' &quot; (regardless of flags because it comes before any 'ifs') and then if flag is false say the following: 'bye' and 'hi'.\n\nSo why is the output:\n\nHK\nbye\nbye\nhi\n\n?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite><br/>now, let's add a bit of complexity to it, multiple 'if' blocks:<br/><br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag = true) {<br/>  msg (&quot;hi&quot;)<br/>}<br/>msg (&quot;bye&quot;)<br/><br/>if (flag = false) {<br/>  msg (&quot;bye&quot;)<br/>}<br/>msg (&quot;hi&quot;)</code></pre><br/><br/>let's say I set: flag = false, what happens?<br/><br/>Answer, outputs:<br/><br/>HK<br/>bye<br/>bye<br/>hi<br/></blockquote><br/><br/>I don't get this. If flag is false, then why isn't the output just:<br/><br/>HK<br/>bye<br/>hi<br/><br/>This script, to me, is saying, &quot;print 'HK' &quot; (regardless of flags because it comes before any 'ifs') and then if flag is false say the following: 'bye' and 'hi'.<br/><br/>So why is the output:<br/><br/>HK<br/>bye<br/>bye<br/>hi<br/><br/>",
      "PostDate": "2015-12-08T15:59:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39312",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "The if and else only apply to the block inside the curly braces. If flag is false, only one line is skipped.\n[code:3ktgj08e]msg (&quot;HK&quot;)\nif (flag = true) {\n  msg (&quot;hi&quot;)          // only this line skipped\n}\nmsg (&quot;bye&quot;)           // first &quot;bye&quot;\n\nif (flag = false) {\n  msg (&quot;bye&quot;)         // second &quot;bye&quot;\n}\nmsg (&quot;hi&quot;)[/code:3ktgj08e]",
      "EditableFormat": "bbcode",
      "HTML": "The if and else only apply to the block inside the curly braces. If flag is false, only one line is skipped.<br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag = true) {<br/>  msg (&quot;hi&quot;)          // only this line skipped<br/>}<br/>msg (&quot;bye&quot;)           // first &quot;bye&quot;<br/><br/>if (flag = false) {<br/>  msg (&quot;bye&quot;)         // second &quot;bye&quot;<br/>}<br/>msg (&quot;hi&quot;)</code></pre>",
      "PostDate": "2015-12-08T17:36:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39316",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;The Pixie&quot;:3q549vln]Rather than:\n[code:3q549vln]msg (&quot;HK&quot;)\nif (flag = true) {\n  msg (&quot;hi&quot;)\n}\nelse if (flag = false) {\n  msg (&quot;bye&quot;)\n}\nmsg (&quot;HegemonKhan&quot;)[/code:3q549vln]\nDo this:\n[code:3q549vln]msg (&quot;HK&quot;)\nif (flag) {\n  msg (&quot;hi&quot;)\n}\nelse {\n  msg (&quot;bye&quot;)\n}\nmsg (&quot;HegemonKhan&quot;)[/code:3q549vln][/quote:3q549vln]\n\nI'm explaining the 'if~else if' here, NOT the 'if~else' situation. Yes, my example is bad design (I know: extra un-needed operations by using 'else if' instead of 'else' as it checks the condition: flag=false, when it shouldn't~doesn't have to), but it's very simple, and thus makes it easy for people to understand how the 'if~if else' works, which is the point here. This thread is NOT about explaining (deeper programming understanding of) code efficiency, though I will add these comments about efficiency into this thread, as well. I've just been working on the combinations of the IF block, I'll get to commenting about the efficiency and etc stuff after I got all of the combinations done for people to look at and understand. I will also use this thread to dive into trying to explain how the conditionals are actually working (the user level of booleans:true~false, and the underneath of booleans, of ints: zero vs non-zero), but this is a bit more deep~advanced, so I'm not doing it until the end. I want them to understand the concept of the STRING COMPARISON, using the extremely simple 'flag(true/false) = true/false' expression, even if it's poor design.\n\nif (flag:true=true)\nif (flag:false=false)\n\nthe above makes more sense (at least it did to me when I began learning to program using quest 2-3 years ago) then, the more efficient-proper-true:\n\nif (flag:true)\nif (flag:false)\n\nwhich is what is taking place underneath (and further underneath is the zero vs non-zero of ints, of course)\n\n------------\n\nI want to keep my explanations uniform to help people, and the simpliest and easiest to understand uniform expression for people I could think of is 'flag=true/false'",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite>Rather than:<br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag = true) {<br/>  msg (&quot;hi&quot;)<br/>}<br/>else if (flag = false) {<br/>  msg (&quot;bye&quot;)<br/>}<br/>msg (&quot;HegemonKhan&quot;)</code></pre><br/>Do this:<br/><pre><code>msg (&quot;HK&quot;)<br/>if (flag) {<br/>  msg (&quot;hi&quot;)<br/>}<br/>else {<br/>  msg (&quot;bye&quot;)<br/>}<br/>msg (&quot;HegemonKhan&quot;)</code></pre></blockquote><br/><br/>I'm explaining the 'if~else if' here, NOT the 'if~else' situation. Yes, my example is bad design (I know: extra un-needed operations by using 'else if' instead of 'else' as it checks the condition: flag=false, when it shouldn't~doesn't have to), but it's very simple, and thus makes it easy for people to understand how the 'if~if else' works, which is the point here. This thread is NOT about explaining (deeper programming understanding of) code efficiency, though I will add these comments about efficiency into this thread, as well. I've just been working on the combinations of the IF block, I'll get to commenting about the efficiency and etc stuff after I got all of the combinations done for people to look at and understand. I will also use this thread to dive into trying to explain how the conditionals are actually working (the user level of booleans:true~false, and the underneath of booleans, of ints: zero vs non-zero), but this is a bit more deep~advanced, so I'm not doing it until the end. I want them to understand the concept of the STRING COMPARISON, using the extremely simple 'flag(true/false) = true/false' expression, even if it's poor design.<br/><br/>if (flag:true=true)<br/>if (flag:false=false)<br/><br/>the above makes more sense (at least it did to me when I began learning to program using quest 2-3 years ago) then, the more efficient-proper-true:<br/><br/>if (flag:true)<br/>if (flag:false)<br/><br/>which is what is taking place underneath (and further underneath is the zero vs non-zero of ints, of course)<br/><br/>------------<br/><br/>I want to keep my explanations uniform to help people, and the simpliest and easiest to understand uniform expression for people I could think of is 'flag=true/false'",
      "PostDate": "2015-12-08T19:19:39+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39318",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@ OurJud:\n\nPixie already explained, but let me jsut do so as well:\n\nnotice that there's a 'msg(&quot;bye&quot;)' between the two 'if' blocks, just as there's a 'msg (&quot;HK&quot;)' at the top of the code and a 'msg (&quot;hi&quot;)' at the bottom of the code\n\nthese three messages are always run, the 'ifs' may or may not be, hence why the 'if' expressions (and some other expressions) true name is: CONDITIONAL expressions.\n\n--- I should go back and re-label all of the msg scripts to be unique, so you know which msgs are displaying and which aren't... I didn't realize this until after I posted... I'll go back and change them sometime soon...",
      "EditableFormat": "bbcode",
      "HTML": "@ OurJud:<br/><br/>Pixie already explained, but let me jsut do so as well:<br/><br/>notice that there's a 'msg(&quot;bye&quot;)' between the two 'if' blocks, just as there's a 'msg (&quot;HK&quot;)' at the top of the code and a 'msg (&quot;hi&quot;)' at the bottom of the code<br/><br/>these three messages are always run, the 'ifs' may or may not be, hence why the 'if' expressions (and some other expressions) true name is: CONDITIONAL expressions.<br/><br/>--- I should go back and re-label all of the msg scripts to be unique, so you know which msgs are displaying and which aren't... I didn't realize this until after I posted... I'll go back and change them sometime soon...",
      "PostDate": "2015-12-08T19:27:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39319",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:3l3xpbcz]I'm explaining the 'if~else if' here, NOT the 'if~else' situation. Yes, my example is bad design (I know: extra un-needed operations by using 'else if' instead of 'else' as it checks the condition: flag=false, when it shouldn't~doesn't have to), but it's very simple, and thus makes it easy for people to understand how the 'if~if else' works, which is the point here. ...[/quote:3l3xpbcz]\nIf you are teaching people, you should be teaching them to do it right. Find an example that is good design.\n\nIf you are doing &quot;if/else if&quot; then you need two different conditions, not one condition and its negative. If you have one condition and its negative, you do &quot;if/else&quot;, and not &quot;if/else if&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>I'm explaining the 'if~else if' here, NOT the 'if~else' situation. Yes, my example is bad design (I know: extra un-needed operations by using 'else if' instead of 'else' as it checks the condition: flag=false, when it shouldn't~doesn't have to), but it's very simple, and thus makes it easy for people to understand how the 'if~if else' works, which is the point here. ...</blockquote><br/>If you are teaching people, you should be teaching them to do it right. Find an example that is good design.<br/><br/>If you are doing &quot;if/else if&quot; then you need two different conditions, not one condition and its negative. If you have one condition and its negative, you do &quot;if/else&quot;, and not &quot;if/else if&quot;.",
      "PostDate": "2015-12-08T19:46:59+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39363",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "sighs, after my finals, when I have the free time needed, I'll edit up my post, making it better, thought out on its design, what examples to use, etc, and organized hopefully well, as a teaching guide on the IF block, so I'm &quot;teaching them to do it right&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "sighs, after my finals, when I have the free time needed, I'll edit up my post, making it better, thought out on its design, what examples to use, etc, and organized hopefully well, as a teaching guide on the IF block, so I'm &quot;teaching them to do it right&quot;.",
      "PostDate": "2015-12-09T06:24:24+00:00",
      "LastEditDate": null
    }
  ]
}
