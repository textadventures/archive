{
  "Topic": {
    "TopicId": "l2kguxg7ne_bpmdxks4zdq",
    "ForumId": "10",
    "Title": "Polymorph commands? (i.e. one word, two separate commands)",
    "LastUpdated": "2018-04-26T05:28:14.3347578Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "afa6458e-e3c4-4700-aa7c-48609a7bdfec",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is there a mechanism by which we can use one word for two separate commands?\r\n\r\nI'm translating Quest, and the problem I have is this: in Greek, we use the same word for Swich On and Open (\"anoikse\"), as well as Swich Off and Close (\"klise\"). I need \"anoikse\" to work as either Swich On or Open, depending on the context, that is depending on the object on which it is used. \r\nIs it possible?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is there a mechanism by which we can use one word for two separate commands?</p>\n<p>I'm translating Quest, and the problem I have is this: in Greek, we use the same word for Swich On and Open (\"anoikse\"), as well as Swich Off and Close (\"klise\"). I need \"anoikse\" to work as either Swich On or Open, depending on the context, that is depending on the object on which it is used.<br>\nIs it possible?</p>\n\n",
      "PostDate": "2018-04-26T05:28:14.3347578Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9a16ea20-9910-40aa-89d9-898ee611cf84",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, should be easy. Verbs are great for doing exactly this.\r\n\r\nSet up a new verb, anoikse. If an object is an openable object, have the verb script do:\r\n```\r\nTryOpenClose(true, this)\r\n```\r\nIf it is a switch, do this:\r\n```\r\ndo(this, \"turnon\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, should be easy. Verbs are great for doing exactly this.</p>\n<p>Set up a new verb, anoikse. If an object is an openable object, have the verb script do:</p>\n<pre><code>TryOpenClose(true, this)\n</code></pre>\n<p>If it is a switch, do this:</p>\n<pre><code>do(this, \"turnon\")\n</code></pre>\n\n",
      "PostDate": "2018-04-26T07:26:04.3880502Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c980a90-f911-49dd-baa1-c3d643e5da0b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm looking at this, and I'm thinking it might be more complex than it should be.\r\n\r\nMy first thought was to create a new command that checks for the \"openable\" and \"switchable\" types, and tries to do the right thing accordingly.\r\n\r\nSo:\r\n```\r\n<command name=\"anoikse\">\r\n  <pattern>anoikse #object#</pattern>\r\n  <script>\r\n    if (HasScript (object, \"turnon\")) {\r\n      do (object, \"turnon\")\r\n    }\r\n    else {\r\n      TryOpenClose (object, true)\r\n    }\r\n  </script>\r\n</command>\r\n\r\n<command name=\"klise\">\r\n  <pattern>klise #object#</pattern>\r\n  <script>\r\n    if (HasScript (object, \"turnoff\")) {\r\n      do (object, \"turnoff\")\r\n    }\r\n    else {\r\n      TryOpenClose (object, false)\r\n    }\r\n  </script>\r\n</command>\r\n\r\n  <template name=\"Open\">Anoikse</template>\r\n  <template name=\"Close\">Klise</template>\r\n  <template name=\"SwitchOn\">Anoikse</template>\r\n  <template name=\"SwitchOff\">Klise</template>\r\n```\r\n\r\nI *think* this should work. The four templates at the end are added to the displayverbs list by the \"openable\" and \"switchable\" types. I wouldn't include the verbtemplates \"open\", \"close\", \"turnon\", or \"turnoff\".\r\n\r\nThis way, the \"open\" and \"close\" commands will still have their patterns set in English (so a player can type \"open\" if they want), but setting an item as \"openable\" or \"switchable\" in the editor will add displayverbs corresponding to the new commands.\r\n\r\n(Does that make sense? My blood sugar is rather low this morning so I might not be thinking clearly)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm looking at this, and I'm thinking it might be more complex than it should be.</p>\n<p>My first thought was to create a new command that checks for the \"openable\" and \"switchable\" types, and tries to do the right thing accordingly.</p>\n<p>So:</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n  &lt;pattern&gt;anoikse #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasScript (object, \"turnon\")) {\n      do (object, \"turnon\")\n    }\n    else {\n      TryOpenClose (object, true)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=\"klise\"&gt;\n  &lt;pattern&gt;klise #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasScript (object, \"turnoff\")) {\n      do (object, \"turnoff\")\n    }\n    else {\n      TryOpenClose (object, false)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n  &lt;template name=\"Open\"&gt;Anoikse&lt;/template&gt;\n  &lt;template name=\"Close\"&gt;Klise&lt;/template&gt;\n  &lt;template name=\"SwitchOn\"&gt;Anoikse&lt;/template&gt;\n  &lt;template name=\"SwitchOff\"&gt;Klise&lt;/template&gt;\n</code></pre>\n<p>I <em>think</em> this should work. The four templates at the end are added to the displayverbs list by the \"openable\" and \"switchable\" types. I wouldn't include the verbtemplates \"open\", \"close\", \"turnon\", or \"turnoff\".</p>\n<p>This way, the \"open\" and \"close\" commands will still have their patterns set in English (so a player can type \"open\" if they want), but setting an item as \"openable\" or \"switchable\" in the editor will add displayverbs corresponding to the new commands.</p>\n<p>(Does that make sense? My blood sugar is rather low this morning so I might not be thinking clearly)</p>\n\n",
      "PostDate": "2018-04-26T10:21:11.3909171Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8fc52dc9-4381-43af-a048-403754a75d5a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(Noting that I didn't test if the object is openable in that command; if the object is neither openable nor switchable, then we can rely on TryOpenClose to display the CantOpen message, which I assume would be suitable for something that can neither be opened nor switched)",
      "EditableFormat": "markdown",
      "HTML": "<p>(Noting that I didn't test if the object is openable in that command; if the object is neither openable nor switchable, then we can rely on TryOpenClose to display the CantOpen message, which I assume would be suitable for something that can neither be opened nor switched)</p>\n\n",
      "PostDate": "2018-04-26T10:25:25.4280441Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "544c1ce1-202a-4501-944c-ef09a889a38a",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the input, guys.\r\n\r\nI'm still not sure how to use it inside the language file.  Commands in there use the CDATA syntax, will your example work, mrangel? Also, I'm using Greek characters, so  I cannot use them for an object's name.\r\n\r\nCan you please write the language file syntax?\r\n\r\nStill learning this... :}",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the input, guys.</p>\n<p>I'm still not sure how to use it inside the language file.  Commands in there use the CDATA syntax, will your example work, mrangel? Also, I'm using Greek characters, so  I cannot use them for an object's name.</p>\n<p>Can you please write the language file syntax?</p>\n<p>Still learning this... :}</p>\n\n",
      "PostDate": "2018-04-26T20:41:16.4037839Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6506e1a6-b8ac-4352-a438-52e0a7bf3882",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as I understand it, you can't use Greek characters in the name, but you can in the pattern and in the templates. You'd just need to make sure that those match each other.\r\n\r\nIf Quest follows XML best practices, CDATA should be optional unless the script contains the characters `&`, `<`, or `>`.\r\nIf it doesn't work, then it might be necessary to change the `<script>` and `</script>` to `<script><![CDATA[` and `]]></script>` respectively.\r\n\r\nI don't think there should be a problem with including commands in the language file. The language file is a library like any other, and I'm sure I've seen in some of the others that they change some functions where necessary.\r\nI don't have the desktop version of Quest though, so can't actually test my code.",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as I understand it, you can't use Greek characters in the name, but you can in the pattern and in the templates. You'd just need to make sure that those match each other.</p>\n<p>If Quest follows XML best practices, CDATA should be optional unless the script contains the characters <code>&amp;</code>, <code>&lt;</code>, or <code>&gt;</code>.<br>\nIf it doesn't work, then it might be necessary to change the <code>&lt;script&gt;</code> and <code>&lt;/script&gt;</code> to <code>&lt;script&gt;&lt;![CDATA[</code> and <code>]]&gt;&lt;/script&gt;</code> respectively.</p>\n<p>I don't think there should be a problem with including commands in the language file. The language file is a library like any other, and I'm sure I've seen in some of the others that they change some functions where necessary.<br>\nI don't have the desktop version of Quest though, so can't actually test my code.</p>\n\n",
      "PostDate": "2018-04-26T22:50:40.3052896Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d8e853b1-b340-4c1c-b280-45e23344f495",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Bummer. No luck.\r\n\r\nThe Pixie, can you be a bit more detailed how to setup the verb, together with its script, in the Language file?\r\n\r\nmrangel, your commands work when I enter them through the desktop interface, but not when I include them in the Language file. For some reason, in the latter case, is matches \"anoikse #object#\" LITERALLY, not e.g. \"anoikse door\", i.e. #object# is not assigned to the particular object.\r\n(btw it is TryOpenClose (true, object) and not TryOpenClose (object, true))\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Bummer. No luck.</p>\n<p>The Pixie, can you be a bit more detailed how to setup the verb, together with its script, in the Language file?</p>\n<p>mrangel, your commands work when I enter them through the desktop interface, but not when I include them in the Language file. For some reason, in the latter case, is matches \"anoikse #object#\" LITERALLY, not e.g. \"anoikse door\", i.e. #object# is not assigned to the particular object.<br>\n(btw it is TryOpenClose (true, object) and not TryOpenClose (object, true))</p>\n\n",
      "PostDate": "2018-05-01T03:39:20.0933667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "82607076-ed6b-4578-bc8f-417652c258a1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to do this in a language file, mrangel's way is best.\r\n\r\nLooking at the first command, you would keep the name is Latin alphabet, but change the pattern\r\n```\r\n<command name=\"anoikse\">\r\n  <pattern>ανοιξε #object#</pattern>\r\n  <script>\r\n    if (HasScript (object, \"turnon\")) {\r\n      do (object, \"turnon\")\r\n    }\r\n    else {\r\n      TryOpenClose (object, true)\r\n    }\r\n  </script>\r\n</command>\r\n```\r\nIf it needs CDATA (and itshould not), then it would start:\r\n```\r\n<command name=\"anoikse\">\r\n  <pattern><![CDATA[ανοιξε #object#]]></pattern>\r\n  <script>\r\n```\r\nApologies if the Greek is wrong",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to do this in a language file, mrangel's way is best.</p>\n<p>Looking at the first command, you would keep the name is Latin alphabet, but change the pattern</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n  &lt;pattern&gt;ανοιξε #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasScript (object, \"turnon\")) {\n      do (object, \"turnon\")\n    }\n    else {\n      TryOpenClose (object, true)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>If it needs CDATA (and itshould not), then it would start:</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n  &lt;pattern&gt;&lt;![CDATA[ανοιξε #object#]]&gt;&lt;/pattern&gt;\n  &lt;script&gt;\n</code></pre>\n<p>Apologies if the Greek is wrong</p>\n\n",
      "PostDate": "2018-05-01T06:58:33.6103557Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "71d9cf44-9fda-4118-9c2c-ca439829d395",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I did that, and the output in both cases is this: (I figured the Greek characters issue, so in \"Greeklish\")\r\n\r\n    > anoikse door\r\n    ---> UnrecognisedCommand\r\n    > anoikse #object#\r\n    (nothing)\r\n    >\r\n\r\nSo the problem is it doesn't match #object# to an actual object.",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I did that, and the output in both cases is this: (I figured the Greek characters issue, so in \"Greeklish\")</p>\n<pre><code>&gt; anoikse door\n---&gt; UnrecognisedCommand\n&gt; anoikse #object#\n(nothing)\n&gt;\n</code></pre>\n<p>So the problem is it doesn't match #object# to an actual object.</p>\n\n",
      "PostDate": "2018-05-01T07:59:31.7799617Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d31efca2-07f6-4042-92de-4c2342e4429d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, I wasn't paying too much attention there.\r\n\r\nThe pattern should be a regular expression: `^anoikse (?<object>.*)$`\r\nOr possibly `^(?:ανοιξε|anoikse) (?<object>.*)$` if you want to allow the player to type it either way.\r\n\r\n(If you enter `anoikse #object#` in the editor, Quest will convert it to the regular expression above when you play or publish the game. I'm not sure how it determines whether a pattern needs converting or is already a regex)",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, I wasn't paying too much attention there.</p>\n<p>The pattern should be a regular expression: <code>^anoikse (?&lt;object&gt;.*)$</code><br>\nOr possibly <code>^(?:ανοιξε|anoikse) (?&lt;object&gt;.*)$</code> if you want to allow the player to type it either way.</p>\n<p>(If you enter <code>anoikse #object#</code> in the editor, Quest will convert it to the regular expression above when you play or publish the game. I'm not sure how it determines whether a pattern needs converting or is already a regex)</p>\n\n",
      "PostDate": "2018-05-01T08:52:04.4785295Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "021becde-9ec0-453d-8e99-266b789143ee",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, seems we are getting somewhere. With the regex, the command gets matched. \r\nThe script, though, is not run. I tried this as a test\r\n\r\n    <command name=\"anoikse\">\r\n    <pattern><![CDATA[^άνοιξε (?<object>.*)$]]></pattern>\r\n    <script>\r\n        <![CDATA[msg (\"kkkk\")]]>\r\n    </script>\r\n    </command>\r\n\r\nand it prints nothing at all.\r\nI also tried msg (\"kkk\") in the script, without CDATA, still no luck.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, seems we are getting somewhere. With the regex, the command gets matched.<br>\nThe script, though, is not run. I tried this as a test</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n&lt;pattern&gt;&lt;![CDATA[^άνοιξε (?&lt;object&gt;.*)$]]&gt;&lt;/pattern&gt;\n&lt;script&gt;\n    &lt;![CDATA[msg (\"kkkk\")]]&gt;\n&lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>and it prints nothing at all.<br>\nI also tried msg (\"kkk\") in the script, without CDATA, still no luck.</p>\n\n",
      "PostDate": "2018-05-01T13:30:52.6832584Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "abefb583-9706-493d-934d-42f0c9980399",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nYou could try opening your debugger and look at the currentcommand stuff listed under the player object after entering the command to be sure Quest is matching the pattern:\r\n\r\n<details>\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/39476657-5ed9abf4-4d22-11e8-9f4c-1a5aefeffeb2.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>You could try opening your debugger and look at the currentcommand stuff listed under the player object after entering the command to be sure Quest is matching the pattern:</p>\n<details>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/39476657-5ed9abf4-4d22-11e8-9f4c-1a5aefeffeb2.png\" alt=\"image\"></p>\n\n</details>",
      "PostDate": "2018-05-01T14:32:13.100601Z",
      "LastEditDate": "2018-05-01T17:46:57.1541915Z",
      "link": null
    },
    {
      "PostId": "a621e74e-9dd6-44e4-9243-9be9e7570a15",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I realised I had the parameters for TryOpenClose the wrong way round, but this works for me:\r\n```\r\n<command name=\"anoikse\">\r\n  <pattern>ανοιξε #object#</pattern>\r\n  <script>\r\n    if (HasScript (object, \"turnon\")) {\r\n      do (object, \"turnon\")\r\n    }\r\n    else {\r\n      TryOpenClose (object, true)\r\n    }\r\n  </script>\r\n</command>\r\n```\r\nThen:\r\n> &gt; ανοιξε box\r\nIt is already open.",
      "EditableFormat": "markdown",
      "HTML": "<p>I realised I had the parameters for TryOpenClose the wrong way round, but this works for me:</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n  &lt;pattern&gt;ανοιξε #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (HasScript (object, \"turnon\")) {\n      do (object, \"turnon\")\n    }\n    else {\n      TryOpenClose (object, true)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>Then:</p>\n<blockquote>\n<p>&gt; ανοιξε box<br>\nIt is already open.</p>\n</blockquote>\n\n",
      "PostDate": "2018-05-01T14:50:08.3203304Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "10329580-8283-4917-ade8-b6c7a24d83b0",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "K.V. thanks for the info, I will be using the debugger. Yes, it matches the command.\r\n\r\nThe Pixie: It works if I enter a command through the interface, but it doesn't work when I try to incorporate it in the language file. I tried inserting the above in the English language file, no luck.\r\n\r\nApparently there is an issue with how the <script> part is handled...?",
      "EditableFormat": "markdown",
      "HTML": "<p>K.V. thanks for the info, I will be using the debugger. Yes, it matches the command.</p>\n<p>The Pixie: It works if I enter a command through the interface, but it doesn't work when I try to incorporate it in the language file. I tried inserting the above in the English language file, no luck.</p>\n<p>Apparently there is an issue with how the </p>",
      "PostDate": "2018-05-01T15:12:12.8636972Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6632db7-86f2-4f73-9320-f17b437a8f8c",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Apparently there is an issue with how the       < script>  part is handled through the Language file???",
      "EditableFormat": "markdown",
      "HTML": "<p>Apparently there is an issue with how the       &lt; script&gt;  part is handled through the Language file???</p>\n\n",
      "PostDate": "2018-05-01T15:32:21.9292673Z",
      "LastEditDate": "2018-05-01T15:33:27.9864173Z",
      "link": null
    },
    {
      "PostId": "624e1750-d957-48ce-b2b3-ea098308a84a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I cannot check right now, but changing the third line to this might work:\r\n```\r\n  <script type=\"script\">\r\n```\r\nSomewhere there is code telling Quest some default types for certain attrributes, and it might be because language files are loaded before that.",
      "EditableFormat": "markdown",
      "HTML": "<p>I cannot check right now, but changing the third line to this might work:</p>\n<pre><code>  &lt;script type=\"script\"&gt;\n</code></pre>\n<p>Somewhere there is code telling Quest some default types for certain attrributes, and it might be because language files are loaded before that.</p>\n\n",
      "PostDate": "2018-05-01T16:39:51.2197251Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af325b52-e40d-43e7-b2bb-bb296e610eee",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think it should be different in a language file, as the language file is just a library.\r\n\r\n(I could be wrong; I don't have Windows, so I'm trying to follow how it works by going through the code in my head)\r\n\r\nHow about if you use the implicit script form?\r\n```\r\n<command name=\"anoikse\" pattern=\"^(?:άνοιξε|anoikse) (?<object>.*)$\">\r\n  <![CDATA[\r\n    if (HasScript (object, \"turnon\")) {\r\n      do (object, \"turnon\")\r\n    }\r\n    else {\r\n      TryOpenClose (true, object)\r\n    }\r\n  ]]>\r\n</command>\r\n```\r\nDoes that work any better?",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think it should be different in a language file, as the language file is just a library.</p>\n<p>(I could be wrong; I don't have Windows, so I'm trying to follow how it works by going through the code in my head)</p>\n<p>How about if you use the implicit script form?</p>\n<pre><code>&lt;command name=\"anoikse\" pattern=\"^(?:άνοιξε|anoikse) (?&lt;object&gt;.*)$\"&gt;\n  &lt;![CDATA[\n    if (HasScript (object, \"turnon\")) {\n      do (object, \"turnon\")\n    }\n    else {\n      TryOpenClose (true, object)\n    }\n  ]]&gt;\n&lt;/command&gt;\n</code></pre>\n<p>Does that work any better?</p>\n\n",
      "PostDate": "2018-05-01T16:50:57.3463302Z",
      "LastEditDate": "2018-05-01T16:51:32.6272609Z",
      "link": null
    },
    {
      "PostId": "f384eccc-c348-4e32-bf79-6723b1f137a7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<s>I'm no good with languages other than American English, but...\r\n\r\n> I tried inserting the above in the English language file, no luck.\r\n\r\nIs English.aslx where that should be added to test it in Greek?</s>\r\n\r\n---\r\nThis is what works for me:\r\n\r\n```\r\n  <command name=\"anoikse\">\r\n    <pattern type=\"string\"><![CDATA[^(άνοιξε|anoikse) (?<object>.*)$]]></pattern>\r\n    <script>\r\n      if (HasScript (object, \"turnon\")) {\r\n        do (object, \"turnon\")\r\n      }\r\n      else {\r\n        TryOpenClose (true, object)\r\n      }\r\n    </script>\r\n  </command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p><s>I'm no good with languages other than American English, but...</s></p><s>\n<blockquote>\n<p>I tried inserting the above in the English language file, no luck.</p>\n</blockquote>\n</s><p><s>Is English.aslx where that should be added to test it in Greek?</s></p>\n<hr>\n<p>This is what works for me:</p>\n<pre><code>  &lt;command name=\"anoikse\"&gt;\n    &lt;pattern type=\"string\"&gt;&lt;![CDATA[^(άνοιξε|anoikse) (?&lt;object&gt;.*)$]]&gt;&lt;/pattern&gt;\n    &lt;script&gt;\n      if (HasScript (object, \"turnon\")) {\n        do (object, \"turnon\")\n      }\n      else {\n        TryOpenClose (true, object)\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-01T17:45:55.9329912Z",
      "LastEditDate": "2018-05-01T17:53:24.7647296Z",
      "link": null
    },
    {
      "PostId": "0f6a15d1-8a7d-472f-ad5b-8d55d4276a99",
      "UserId": 339977,
      "Username": "thanos",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9c35eed21321227222cd2ae31913ba08?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, Pixie, that's it! < script type=\"script\">, paradoxically, did it!\r\n\r\nHere is the code:\r\n\r\n    <command name=\"anoikse\">\r\n      <pattern><![CDATA[^anoikse (?<object>.*)$]]></pattern>\r\n      <script type=\"script\">\r\n        if (HasScript (object, \"turnon\")) {\r\n          do (object, \"turnon\")\r\n        }\r\n        else {\r\n           TryOpenClose (true, object)\r\n        }\r\n    </script>\r\n    </command>\r\n\r\nSo the output now, is a sweety:\r\n\r\n    You are in a room.\r\n    You can see a box and a diakoptis.\r\n\r\n    > anoikse box\r\n    You open it.\r\n\r\n    > anoikse diakoptis\r\n    You switch it on.\r\n\r\nThank you all, guys!",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, Pixie, that's it! &lt; script type=\"script\"&gt;, paradoxically, did it!</p>\n<p>Here is the code:</p>\n<pre><code>&lt;command name=\"anoikse\"&gt;\n  &lt;pattern&gt;&lt;![CDATA[^anoikse (?&lt;object&gt;.*)$]]&gt;&lt;/pattern&gt;\n  &lt;script type=\"script\"&gt;\n    if (HasScript (object, \"turnon\")) {\n      do (object, \"turnon\")\n    }\n    else {\n       TryOpenClose (true, object)\n    }\n&lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>So the output now, is a sweety:</p>\n<pre><code>You are in a room.\nYou can see a box and a diakoptis.\n\n&gt; anoikse box\nYou open it.\n\n&gt; anoikse diakoptis\nYou switch it on.\n</code></pre>\n<p>Thank you all, guys!</p>\n\n",
      "PostDate": "2018-05-01T17:50:21.4726096Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "caf711ca-1315-4463-be64-f95ce681765c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It didn't understand until I set the pattern's type to string:\r\n\r\n```\r\n<pattern type=\"string\"><![CDATA[^(άνοιξε|anoikse) (?<object>.*)$]]></pattern>\r\n```\r\n\r\n\r\n...and (extra paradoxically) I don't need to declare the type of the script.  It's just ```<script>```, and it works for me (with everything set to English).\r\n\r\n\r\n---\r\n### anoikse\r\n\r\nYou are in a room.\r\nYou can see a box and a lamp.\r\n\r\n\\> anoikse box\r\nYou open it.\r\n\r\n\\> anoikse lamp\r\nYou switch it on.",
      "EditableFormat": "markdown",
      "HTML": "<p>It didn't understand until I set the pattern's type to string:</p>\n<pre><code>&lt;pattern type=\"string\"&gt;&lt;![CDATA[^(άνοιξε|anoikse) (?&lt;object&gt;.*)$]]&gt;&lt;/pattern&gt;\n</code></pre>\n<p>...and (extra paradoxically) I don't need to declare the type of the script.  It's just <code>&lt;script&gt;</code>, and it works for me (with everything set to English).</p>\n<hr>\n<h3>anoikse</h3>\n<p>You are in a room.<br>\nYou can see a box and a lamp.</p>\n<p>&gt; anoikse box<br>\nYou open it.</p>\n<p>&gt; anoikse lamp<br>\nYou switch it on.</p>\n\n",
      "PostDate": "2018-05-01T17:54:26.0422579Z",
      "LastEditDate": "2018-05-01T17:57:27.414958Z",
      "link": null
    }
  ]
}
