{
  "Topic": {
    "TopicId": "eol_xfehjeoc2ex5j7bkgw",
    "ForumId": "10",
    "Title": "Objects inside/on another object",
    "LastUpdated": "2017-07-31T13:46:20.8550496Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b2aa887b-1bb9-4cd1-b6ef-64c24611eafd",
      "UserId": 317929,
      "Username": "banditoÂ¼",
      "AvatarUrl": "https://secure.gravatar.com/avatar/67f67f08cc651e2957ece3c1182ab344?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi\r\nSo here's what I want to have but I can't figure out.\r\n\r\nYou enter a room. There's a statue. The statue has a children object called \"hand\". This object should be examined *only* after you typed \"watch/look statue\" or \"examine statue\". Basically, you can't examine the hand without going first near the statue. I don't want to make another room for this since it'd be super annoying and the project would clutter pretty quickly\r\n\r\nContainers? Yeah, they work fine when I use \"hide children until looked at\" but once you looked once, the items inside can still be looked at even without going/watching the parent first\r\n\r\nI hope this is making sense, thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi<br>\nSo here's what I want to have but I can't figure out.</p>\n<p>You enter a room. There's a statue. The statue has a children object called \"hand\". This object should be examined <em>only</em> after you typed \"watch/look statue\" or \"examine statue\". Basically, you can't examine the hand without going first near the statue. I don't want to make another room for this since it'd be super annoying and the project would clutter pretty quickly</p>\n<p>Containers? Yeah, they work fine when I use \"hide children until looked at\" but once you looked once, the items inside can still be looked at even without going/watching the parent first</p>\n<p>I hope this is making sense, thanks.</p>\n\n",
      "PostDate": "2017-07-31T13:46:20.8550496Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dda63475-d15f-4611-acdb-90df3a7de794",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Only way I can come up with easily is put statue as container, check can be open and closed and when looked at run script to open statue and start timer reveling hand for X seconds then in timer add close statue and stop timer. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Only way I can come up with easily is put statue as container, check can be open and closed and when looked at run script to open statue and start timer reveling hand for X seconds then in timer add close statue and stop timer.</p>\n\n",
      "PostDate": "2017-07-31T14:28:57.7463737Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9a861c8a-fd80-408f-9583-2fc62235de7e",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<del>I always just give up, put the object in the room with the statue, make the object scenery, and fool the player with the descriptions and responses.</del>\r\n\r\n<del>>The statue is here.\r\nThere is a doo-hickey on it.</del>\r\n\r\n<del>>\\>take doo-hickey\r\nYou can't, its part of the statue.</del>\r\n\r\n<del>>\\>examine doo-hickey\r\nThe doo-hickey, which is part of the statue, blah blah blah...</del>\r\n\r\n---\r\nSorry. I didn't read the question correctly!\r\n\r\n---\r\n\r\nThis example may help.\r\n\r\nThe hand isn't in scope until you examine the statue.\r\n\r\nI made it so the hand 'disappears' back to the statue once examined, but you can change that around.\r\n\r\nHere's just the bit with the statue and the hand:\r\n\r\n```\r\n  <object name=\"statue\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"It looks like a statue.\")\r\n        if (hand.parent = statue) {\r\n          statue.hand_on = true\r\n          msg (\"It has a hand.\")\r\n          MoveObjectHere (hand)\r\n        }\r\n      </look>\r\n      <object name=\"hand\">\r\n        <inherit name=\"editor_object\" />\r\n        <look type=\"script\">\r\n          msg (\"It's a hand.\")\r\n          if (HasAttribute(statue, \"hand_on\")) {\r\n            if (statue.hand_on) {\r\n              msg (\"It's part of the statue right now.\")\r\n              statue.hand_on = false\r\n              MoveObject (hand, statue)\r\n            }\r\n          }\r\n        </look>\r\n      </object>\r\n  </object>\r\n```\r\n\r\nHere's what happens:\r\n\r\n>You are in a room.\r\nYou can see a statue.\r\n\r\n>\\> x hand\r\nI can't see that.\r\n\r\n>\\> x statue\r\nIt looks like a statue.\r\nIt has a hand.\r\n\r\n>\\> x hand\r\nIt's a hand.\r\nIt's part of the statue right now.\r\n\r\n>\\> x hand\r\nI can't see that.\r\n\r\n>\\> x statue\r\nIt looks like a statue.\r\nIt has a hand.\r\n\r\n>\\> x hand\r\nIt's a hand.\r\nIt's part of the statue right now.\r\n\r\n>\\> x hand\r\nI can't see that.\r\n\r\n\r\n---\r\n\r\nHere the entire example game.\r\n\r\n<details><summary>CLICK TO  VIEW LONG CODE</summary>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"tester\">\r\n    <gameid>858dcb43-f0d5-4224-8091-79a12850810e</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description type=\"script\">\r\n    </description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"statue\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"It looks like a statue.\")\r\n        if (hand.parent = statue) {\r\n          statue.hand_on = true\r\n          msg (\"It has a hand.\")\r\n          MoveObjectHere (hand)\r\n        }\r\n      </look>\r\n      <object name=\"hand\">\r\n        <inherit name=\"editor_object\" />\r\n        <look type=\"script\">\r\n          msg (\"It's a hand.\")\r\n          if (HasAttribute(statue, \"hand_on\")) {\r\n            if (statue.hand_on) {\r\n              msg (\"It's part of the statue right now.\")\r\n              statue.hand_on = false\r\n              MoveObject (hand, statue)\r\n            }\r\n          }\r\n        </look>\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n</details>\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p><del>I always just give up, put the object in the room with the statue, make the object scenery, and fool the player with the descriptions and responses.</del></p>\n<p><del>&gt;The statue is here.<br>\nThere is a doo-hickey on it.</del></p>\n<p><del>&gt;&gt;take doo-hickey<br>\nYou can't, its part of the statue.</del></p>\n<p><del>&gt;&gt;examine doo-hickey<br>\nThe doo-hickey, which is part of the statue, blah blah blah...</del></p>\n<hr>\n<p>Sorry. I didn't read the question correctly!</p>\n<hr>\n<p>This example may help.</p>\n<p>The hand isn't in scope until you examine the statue.</p>\n<p>I made it so the hand 'disappears' back to the statue once examined, but you can change that around.</p>\n<p>Here's just the bit with the statue and the hand:</p>\n<pre><code>  &lt;object name=\"statue\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"It looks like a statue.\")\n        if (hand.parent = statue) {\n          statue.hand_on = true\n          msg (\"It has a hand.\")\n          MoveObjectHere (hand)\n        }\n      &lt;/look&gt;\n      &lt;object name=\"hand\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look type=\"script\"&gt;\n          msg (\"It's a hand.\")\n          if (HasAttribute(statue, \"hand_on\")) {\n            if (statue.hand_on) {\n              msg (\"It's part of the statue right now.\")\n              statue.hand_on = false\n              MoveObject (hand, statue)\n            }\n          }\n        &lt;/look&gt;\n      &lt;/object&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>Here's what happens:</p>\n<blockquote>\n<p>You are in a room.<br>\nYou can see a statue.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nI can't see that.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x statue<br>\nIt looks like a statue.<br>\nIt has a hand.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nIt's a hand.<br>\nIt's part of the statue right now.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nI can't see that.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x statue<br>\nIt looks like a statue.<br>\nIt has a hand.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nIt's a hand.<br>\nIt's part of the statue right now.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nI can't see that.</p>\n</blockquote>\n<hr>\n<p>Here the entire example game.</p>\n<details><summary>CLICK TO  VIEW LONG CODE</summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"tester\"&gt;\n    &lt;gameid&gt;858dcb43-f0d5-4224-8091-79a12850810e&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description type=\"script\"&gt;\n    &lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"statue\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"It looks like a statue.\")\n        if (hand.parent = statue) {\n          statue.hand_on = true\n          msg (\"It has a hand.\")\n          MoveObjectHere (hand)\n        }\n      &lt;/look&gt;\n      &lt;object name=\"hand\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look type=\"script\"&gt;\n          msg (\"It's a hand.\")\n          if (HasAttribute(statue, \"hand_on\")) {\n            if (statue.hand_on) {\n              msg (\"It's part of the statue right now.\")\n              statue.hand_on = false\n              MoveObject (hand, statue)\n            }\n          }\n        &lt;/look&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-07-31T14:36:59.1896888Z",
      "LastEditDate": "2017-07-31T15:09:02.9368756Z",
      "link": null
    },
    {
      "PostId": "e964a21e-cc16-40a6-b143-8a86cacf643c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's a few ways to do it:\r\n\r\n1. the 'scenery' or 'visible' built-in Boolean Attributes\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/scenery.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/visible.html\r\n\r\nwithin your 'look/watch/examine' Verb, you toggle these Boolean Attributes (using 'visible' for my example below):\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"pearl\">\r\n</object>\r\n\r\n<object name=\"statue\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\r\n    hand.visible = true\r\n  </attr>\r\n<object>\r\n\r\n<object name=\"hand\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"visible\" type=\"boolean\">false</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\r\n    pearl.parent = player\r\n    hand.visible = false\r\n  </attr>\r\n</object>\r\n```\r\n\r\n2. using the built-in 'parent' Object reference/pointer Attribute:\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/parent.html\r\n\r\n(having the 'hand' Object not within the room, and moving it within the room, and then back out of the room)\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"pearl\">\r\n</object>\r\n\r\n<object name=\"statue\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\r\n    hand.parent = room\r\n  </attr>\r\n<object>\r\n\r\n<object name=\"hand\">\r\n  <attr name=\"parent\" type=\"object\">null</attr>\r\n  <attr name=\"visible\" type=\"boolean\">false</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\r\n    pearl.parent = player\r\n    hand.parent = null\r\n  </attr>\r\n</object>\r\n```\r\n\r\n3. having the 'hand' be a Verb, and adding/removing it from the built-in 'displayverbs' or 'inventoryverbs' Stringlist Attributes:\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/using_lists.html\r\nhttp://docs.textadventures.co.uk/quest/using_lists.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/displayverbs.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/inventoryverbs.html\r\nhttp://docs.textadventures.co.uk/quest/guides/display_verbs.html\r\n\r\n```\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\n<object name=\"pearl\">\r\n</object>\r\n\r\n<object name=\"statue\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"displayverbs\" type=\"simplestringlist\">look</attr>\r\n  <attr name=\"look\" type=\"script\">\r\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\r\n    list add (statue.displayverbs, \"hand\")\r\n  </attr>\r\n  <attr name=\"hand\" type=\"script\">\r\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\r\n    pearl.parent = player\r\n    list remove (statue.displayverbs, \"hand\")\r\n  </attr>\r\n<object>\r\n```\r\n\r\n4. using the 'openable' or 'container_closed' Object Types / Types:\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/openable.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/container_closed.html\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom for the various 'container' Object Types / Types)\r\nhttp://docs.textadventures.co.uk/quest/attributes/isopen.html\r\n\r\n(if you need a code example, let me know --- I'm lazy/tired, so not doing it already lol, unless you let me know you need it)\r\n\r\njust to finish it off: you'd close (via the 'statue.isopen=false' built-in Boolean Attribute) the 'statue' container parent Object when done, so you can't see its 'hand' child Object within it",
      "EditableFormat": "markdown",
      "HTML": "<p>there's a few ways to do it:</p>\n<ol>\n<li>the 'scenery' or 'visible' built-in Boolean Attributes</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/attributes/scenery.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/visible.html</p>\n<p>within your 'look/watch/examine' Verb, you toggle these Boolean Attributes (using 'visible' for my example below):</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pearl\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"statue\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\n    hand.visible = true\n  &lt;/attr&gt;\n&lt;object&gt;\n\n&lt;object name=\"hand\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"visible\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\n    pearl.parent = player\n    hand.visible = false\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<ol start=\"2\">\n<li>using the built-in 'parent' Object reference/pointer Attribute:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/attributes/parent.html</p>\n<p>(having the 'hand' Object not within the room, and moving it within the room, and then back out of the room)</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pearl\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"statue\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\n    hand.parent = room\n  &lt;/attr&gt;\n&lt;object&gt;\n\n&lt;object name=\"hand\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n  &lt;attr name=\"visible\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\n    pearl.parent = player\n    hand.parent = null\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<ol start=\"3\">\n<li>having the 'hand' be a Verb, and adding/removing it from the built-in 'displayverbs' or 'inventoryverbs' Stringlist Attributes:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/guides/using_lists.html<br>\nhttp://docs.textadventures.co.uk/quest/using_lists.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/displayverbs.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/inventoryverbs.html<br>\nhttp://docs.textadventures.co.uk/quest/guides/display_verbs.html</p>\n<pre><code>&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"pearl\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"statue\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"displayverbs\" type=\"simplestringlist\"&gt;look&lt;/attr&gt;\n  &lt;attr name=\"look\" type=\"script\"&gt;\n    msg (\"You look at the statue, and particularly take notice of its hand, something is strange about it\")\n    list add (statue.displayverbs, \"hand\")\n  &lt;/attr&gt;\n  &lt;attr name=\"hand\" type=\"script\"&gt;\n    msg (\"You look at the hand, noticing it's holding a small pearl, which you take\")\n    pearl.parent = player\n    list remove (statue.displayverbs, \"hand\")\n  &lt;/attr&gt;\n&lt;object&gt;\n</code></pre>\n<ol start=\"4\">\n<li>using the 'openable' or 'container_closed' Object Types / Types:</li>\n</ol>\n<p>http://docs.textadventures.co.uk/quest/attributes/openable.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/container_closed.html<br>\nhttp://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom for the various 'container' Object Types / Types)<br>\nhttp://docs.textadventures.co.uk/quest/attributes/isopen.html</p>\n<p>(if you need a code example, let me know --- I'm lazy/tired, so not doing it already lol, unless you let me know you need it)</p>\n<p>just to finish it off: you'd close (via the 'statue.isopen=false' built-in Boolean Attribute) the 'statue' container parent Object when done, so you can't see its 'hand' child Object within it</p>\n\n",
      "PostDate": "2017-07-31T18:10:10.705865Z",
      "LastEditDate": "2017-07-31T18:24:26.6278731Z",
      "link": null
    },
    {
      "PostId": "9346eeee-847b-4ae8-8d0f-c134be6058e2",
      "UserId": 317929,
      "Username": "banditoÂ¼",
      "AvatarUrl": "https://secure.gravatar.com/avatar/67f67f08cc651e2957ece3c1182ab344?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem with all the examples is this\r\n\r\n-x statue\r\n-Ok, you see a hand\r\n\r\n-x something else\r\n-You see something else\r\n\r\n-x hand\r\n-I can see the hand\r\n\r\nThe last part should say \"No visible hand\" because you're not examining the statue anymore, but you are near something else (x something else).\r\n\r\nI was wondering if there's a way to do \"if lastcommand == x statue\" ?\r\n\r\n(Timer solution might work, but it's a bit too complex considering I might want to do this for a lot of objs)",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem with all the examples is this</p>\n<p>-x statue<br>\n-Ok, you see a hand</p>\n<p>-x something else<br>\n-You see something else</p>\n<p>-x hand<br>\n-I can see the hand</p>\n<p>The last part should say \"No visible hand\" because you're not examining the statue anymore, but you are near something else (x something else).</p>\n<p>I was wondering if there's a way to do \"if lastcommand == x statue\" ?</p>\n<p>(Timer solution might work, but it's a bit too complex considering I might want to do this for a lot of objs)</p>\n\n",
      "PostDate": "2017-08-01T16:22:01.5839196Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d92f6e74-e9f0-4341-81fc-db450ab0acfd",
      "UserId": 317929,
      "Username": "banditoÂ¼",
      "AvatarUrl": "https://secure.gravatar.com/avatar/67f67f08cc651e2957ece3c1182ab344?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found this code in libraries (end of post).\r\nNow, how would I add the condition to put the boolean back to true? I'll make an easier example.\r\nThere's a sink filled with water. Normally, you can't drink the water or examine or anything: it doesn't exist until you examine the sink. So, to drink the water, you need to examine the sink, and then the water becomes visible. If you do anything else after examining the sink, the water turns back to invisible.\r\n\r\n``` <command name=\"lookat\" template=\"lookat\">\r\n    <![CDATA[\r\n    if (GetBoolean(object, \"hidechildren\")) {\r\n      object.hidechildren = false\r\n    }\r\n    ",
      "EditableFormat": "markdown",
      "HTML": "<p>I found this code in libraries (end of post).<br>\nNow, how would I add the condition to put the boolean back to true? I'll make an easier example.<br>\nThere's a sink filled with water. Normally, you can't drink the water or examine or anything: it doesn't exist until you examine the sink. So, to drink the water, you need to examine the sink, and then the water becomes visible. If you do anything else after examining the sink, the water turns back to invisible.</p>\n<pre><code>    &lt;![CDATA[\n    if (GetBoolean(object, \"hidechildren\")) {\n      object.hidechildren = false\n    }\n    \n</code></pre>\n\n",
      "PostDate": "2017-08-01T16:57:43.0447101Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8e457027-0bec-4c09-a173-c056432dbf32",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I changed most of it. Now it uses a turn script.\r\n\r\nNOTE: It will print \"You can't see that\" if you don't X HAND in the 1 turn following examining the statue.\r\nANOTHER NOTE: This statue (in my example) is not a container. Its children will be hidden by default.\r\n\r\n```\r\n<object name=\"statue\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"It looks like a statue.\")\r\n        if (hand.parent = statue) {\r\n          statue.hand_on = true\r\n          msg (\"It has a hand.\")\r\n          MoveObjectHere (hand)\r\n          SetTurnTimeout (2) {\r\n            MoveObject (hand, statue)\r\n          }\r\n        }\r\n      </look>\r\n      <object name=\"hand\">\r\n        <inherit name=\"editor_object\" />\r\n        <look type=\"script\">\r\n          msg (\"It's a hand.\")\r\n        </look>\r\n      </object>\r\n    </object>\r\n    <object name=\"distraction\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n```\r\n\r\n\r\nHere's the code for the entire example game:\r\n\r\n<details><summary>CLICK HERE TO VIEW THE CODE<br/></summary>\r\n\r\n\r\n``` xml\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"tester\">\r\n    <gameid>858dcb43-f0d5-4224-8091-79a12850810e</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description type=\"script\">\r\n    </description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"statue\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        msg (\"It looks like a statue.\")\r\n        if (hand.parent = statue) {\r\n          statue.hand_on = true\r\n          msg (\"It has a hand.\")\r\n          MoveObjectHere (hand)\r\n          SetTurnTimeout (2) {\r\n            MoveObject (hand, statue)\r\n          }\r\n        }\r\n      </look>\r\n      <object name=\"hand\">\r\n        <inherit name=\"editor_object\" />\r\n        <look type=\"script\">\r\n          msg (\"It's a hand.\")\r\n        </look>\r\n      </object>\r\n    </object>\r\n    <object name=\"distraction\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n</asl>\r\n\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I changed most of it. Now it uses a turn script.</p>\n<p>NOTE: It will print \"You can't see that\" if you don't X HAND in the 1 turn following examining the statue.<br>\nANOTHER NOTE: This statue (in my example) is not a container. Its children will be hidden by default.</p>\n<pre><code>&lt;object name=\"statue\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"It looks like a statue.\")\n        if (hand.parent = statue) {\n          statue.hand_on = true\n          msg (\"It has a hand.\")\n          MoveObjectHere (hand)\n          SetTurnTimeout (2) {\n            MoveObject (hand, statue)\n          }\n        }\n      &lt;/look&gt;\n      &lt;object name=\"hand\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look type=\"script\"&gt;\n          msg (\"It's a hand.\")\n        &lt;/look&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"distraction\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>Here's the code for the entire example game:</p>\n<details><summary>CLICK HERE TO VIEW THE CODE<br></summary>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"tester\"&gt;\n    &lt;gameid&gt;858dcb43-f0d5-4224-8091-79a12850810e&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description type=\"script\"&gt;\n    &lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"statue\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        msg (\"It looks like a statue.\")\n        if (hand.parent = statue) {\n          statue.hand_on = true\n          msg (\"It has a hand.\")\n          MoveObjectHere (hand)\n          SetTurnTimeout (2) {\n            MoveObject (hand, statue)\n          }\n        }\n      &lt;/look&gt;\n      &lt;object name=\"hand\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;look type=\"script\"&gt;\n          msg (\"It's a hand.\")\n        &lt;/look&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"distraction\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n\n</code></pre>\n\n</details>",
      "PostDate": "2017-08-01T20:24:49.9990182Z",
      "LastEditDate": "2017-08-01T20:36:58.2224946Z",
      "link": null
    },
    {
      "PostId": "e6a52a97-cf64-4144-a829-6ac594795793",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I was wondering if there's a way to do \"if lastcommand == x statue\" ?\r\n\r\n\r\nYou'd need to put this line in the game's scripts under EVERY TURN:\r\n#### **(make sure you click '***Enabled when the game begins***'!)**\r\n\r\n```\r\nplayer.lastcommand = player.currentcommand\r\n```\r\n\r\n\r\nThen, this would be the syntax for the bit you asked about:\r\n\r\n```\r\nif (player.lastcommand = \"x statue\") {\r\n  msg (\"The last command was examining the statue.\")\r\n}\r\n```\r\n\r\nOf course, that only works for X STATUE, not examine statue or any of these:\r\n\r\n```\r\nlook at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#\r\n```\r\n\r\nYou'd need an ```else if``` for each one, or perhaps a ```switch```, unless you know .NET style Regular Expressions...\r\n\r\n---\r\n### So, these two scripts are much less work:\r\n\r\nLOOK Script for statue:\r\n\r\n```\r\nmsg (\"It looks like a statue.\")\r\n        if (hand.parent = statue) {\r\n          statue.hand_on = true\r\n          msg (\"It has a hand.\")\r\n          MoveObjectHere (hand)\r\n          SetTurnTimeout (2) {\r\n            MoveObject (hand, statue)\r\n          }\r\n        }\r\n```\r\n\r\nLOOK script for hand:\r\n\r\n```\r\nmsg (\"It's a hand.\")\r\n```\r\n\r\n---\r\n#### Update\r\n\r\nI found the ```EndsWith``` function.\r\n\r\nThis adds to the fun:\r\n\r\n``` \r\nplayer.lastcommand = player.currentcommand\r\nif (player.lastcommand = \"x statue\") {\r\n  msg (\"The last command was 'x statue'.\")\r\n}\r\nplayer.lastcommand = player.currentcommand\r\nif (EndsWith (player.lastcommand, \"statue\")) {\r\n  msg (\"The last command ended with 'statue'.\")\r\n}\r\n```\r\n\r\n---\r\n**This yields:**\r\n\r\n---\r\n>\\> x statue\r\nIt looks like a statue.\r\nIt has a hand.\r\nThe last command was 'x statue'.\r\nThe last command ended with 'statue'.\r\n\r\n>\\> kill statue\r\nYou can't kill it.\r\nThe last command ended with 'statue'.\r\n\r\n> x hand\r\nI can't see that.\r\n\r\n>\\> x statue\r\nIt looks like a statue.\r\nIt has a hand.\r\nThe last command was 'x statue'.\r\nThe last command ended with 'statue'.\r\n\r\n>\\> x hand\r\nIt's a hand.\r\n\r\n---\r\nOne Regular Expression could probably cover it (I ***think***)...\r\n\r\nPerhaps a master of RegEx will help us out.\r\n\r\n(I shall research it further. (I've already learned two neat things while playing around with this one!))",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I was wondering if there's a way to do \"if lastcommand == x statue\" ?</p>\n</blockquote>\n<p>You'd need to put this line in the game's scripts under EVERY TURN:</p>\n<h4><strong>(make sure you click '<strong><em>Enabled when the game begins</em></strong>'!)</strong></h4>\n<pre><code>player.lastcommand = player.currentcommand\n</code></pre>\n<p>Then, this would be the syntax for the bit you asked about:</p>\n<pre><code>if (player.lastcommand = \"x statue\") {\n  msg (\"The last command was examining the statue.\")\n}\n</code></pre>\n<p>Of course, that only works for X STATUE, not examine statue or any of these:</p>\n<pre><code>look at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#\n</code></pre>\n<p>You'd need an <code>else if</code> for each one, or perhaps a <code>switch</code>, unless you know .NET style Regular Expressions...</p>\n<hr>\n<h3>So, these two scripts are much less work:</h3>\n<p>LOOK Script for statue:</p>\n<pre><code>msg (\"It looks like a statue.\")\n        if (hand.parent = statue) {\n          statue.hand_on = true\n          msg (\"It has a hand.\")\n          MoveObjectHere (hand)\n          SetTurnTimeout (2) {\n            MoveObject (hand, statue)\n          }\n        }\n</code></pre>\n<p>LOOK script for hand:</p>\n<pre><code>msg (\"It's a hand.\")\n</code></pre>\n<hr>\n<h4>Update</h4>\n<p>I found the <code>EndsWith</code> function.</p>\n<p>This adds to the fun:</p>\n<pre><code>player.lastcommand = player.currentcommand\nif (player.lastcommand = \"x statue\") {\n  msg (\"The last command was 'x statue'.\")\n}\nplayer.lastcommand = player.currentcommand\nif (EndsWith (player.lastcommand, \"statue\")) {\n  msg (\"The last command ended with 'statue'.\")\n}\n</code></pre>\n<hr>\n<p><strong>This yields:</strong></p>\n<hr>\n<blockquote>\n<p>&gt; x statue<br>\nIt looks like a statue.<br>\nIt has a hand.<br>\nThe last command was 'x statue'.<br>\nThe last command ended with 'statue'.</p>\n</blockquote>\n<blockquote>\n<p>&gt; kill statue<br>\nYou can't kill it.<br>\nThe last command ended with 'statue'.</p>\n</blockquote>\n<blockquote>\n<p>x hand<br>\nI can't see that.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x statue<br>\nIt looks like a statue.<br>\nIt has a hand.<br>\nThe last command was 'x statue'.<br>\nThe last command ended with 'statue'.</p>\n</blockquote>\n<blockquote>\n<p>&gt; x hand<br>\nIt's a hand.</p>\n</blockquote>\n<hr>\n<p>One Regular Expression could probably cover it (I <strong><em>think</em></strong>)...</p>\n<p>Perhaps a master of RegEx will help us out.</p>\n<p>(I shall research it further. (I've already learned two neat things while playing around with this one!))</p>\n\n",
      "PostDate": "2017-08-01T20:36:14.0941241Z",
      "LastEditDate": "2017-08-01T20:53:51.6801233Z",
      "link": null
    },
    {
      "PostId": "cb012b6f-bba3-4a68-8040-f1ca687ab6e2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Excellent job Richard... it's frightening/depressing how fast you're learning to code... there's some really smart and/or hard-working people out there, like you Richard, sighs.\r\n\r\n-------------------------------\r\n\r\n@ Richard:\r\n\r\nya, the 'String Manipulation Functions', are extremely powerful/useful:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/ (go to the 'String Functions' section/part)\r\n\r\nStartsWith, EndsWith, Mid, Instr, InstrRev, UCase, LCase, etc etc etc",
      "EditableFormat": "markdown",
      "HTML": "<p>Excellent job Richard... it's frightening/depressing how fast you're learning to code... there's some really smart and/or hard-working people out there, like you Richard, sighs.</p>\n<hr>\n<p>@ Richard:</p>\n<p>ya, the 'String Manipulation Functions', are extremely powerful/useful:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/ (go to the 'String Functions' section/part)</p>\n<p>StartsWith, EndsWith, Mid, Instr, InstrRev, UCase, LCase, etc etc etc</p>\n\n",
      "PostDate": "2017-08-01T23:26:08.1033651Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "71a53960-88d0-4d64-bca1-d9831732e145",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">... it's frightening/depressing how fast you're learning to code ...\r\n\r\nI'm just copying & pasting stuff...\r\n\r\nThe only tricks I've got up my sleeve are the resources this site provides (a LOT of which is provided by HK) and a whole lot of free time!\r\n\r\nI do appreciate the kind words, though!\r\n\r\n...but, make no mistake: I'm just an anal-retentive researcher. (Plus, at my age, for every seventh thing I learn, I forget one thing I learned before. It's akin to memorizing spells in the Enchanter games.)\r\n\r\n---\r\nAnyway, do you know of an equivalent to ```if string includes 'statue'```? Or is StartsWith and EndsWith the best way to go (without fooling with RegEx)?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>... it's frightening/depressing how fast you're learning to code ...</p>\n</blockquote>\n<p>I'm just copying &amp; pasting stuff...</p>\n<p>The only tricks I've got up my sleeve are the resources this site provides (a LOT of which is provided by HK) and a whole lot of free time!</p>\n<p>I do appreciate the kind words, though!</p>\n<p>...but, make no mistake: I'm just an anal-retentive researcher. (Plus, at my age, for every seventh thing I learn, I forget one thing I learned before. It's akin to memorizing spells in the Enchanter games.)</p>\n<hr>\n<p>Anyway, do you know of an equivalent to <code>if string includes 'statue'</code>? Or is StartsWith and EndsWith the best way to go (without fooling with RegEx)?</p>\n\n",
      "PostDate": "2017-08-02T02:52:50.5789164Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ee81f6f0-319b-4389-bcc9-d954538e5dc2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's:\r\n\r\n'StartsWith', 'EndsWith', 'Mid', 'Instr', \"InstrRev', and etc\r\n\r\nthe one you want to use is 'Mid' (if I understand it correctly):\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/string/mid.html\r\n\r\nfor an example:\r\n\r\n```\r\nstring_variable = \"Hegemon_Khan_String\"\r\n\r\n// (1) H (2) e (3) g (4) e (5) m (6) o (7) n (8) _ (9) K\r\n\r\n// (1) K (2) h (3) a (4) n\r\n\r\ngetting_Khan_string_variable = Mid (string_variable, 9, 4)\r\n// getting_Khan_string_variable = \"Khan\"\r\n\r\nand there's lots of other techniques that you can do too, for example:\r\n\r\nif (StartsWith (string_variable, \"Hegemon_\") and EndsWith (string_variable, \"_String\") {\r\n  getting_Khan_string_variable = Mid (string_variable, LengthOf (\"Hegemon_\") + 1, LengthOf (\"Khan\"))\r\n  // getting_Khan_string_variable = \"Khan\"\r\n}\r\n```\r\n\r\n------------\r\n\r\nyou can also use the 'Instr' and 'InstrRev' too, but these are just like the 'HasXXX' Functions: if returns '0', then the sub-string is not within the string. Else: you can then use the returned index number (via with/within the 'Mid' Function) for getting the sub-string.\r\n\r\nfor example:\r\n\r\n```\r\nstring_variable = \"Hegemon_Khan_String\"\r\n\r\ninteger_variable = Instr (string_variable, \"Khan\")\r\nif (integer_variable = 0) {\r\n  msg (\"the 'Khan' sub-string is not found within the 'Hegemon_Khan_String' string\")\r\n} else {\r\n  getting_Khan_string_variable = Mid (string_variable, integer_variable, 4)\r\n}\r\n```\r\n\r\n------------\r\n\r\nthis probably works with quest:\r\n\r\nthe manual way: iterating through the string:\r\n\r\n(I had to think of how the 'Mid/Instr/InstrRev' Functions are done underneath on my own, lol ... so probably a better way of doing it: see the 'Mid/Instr/InstrRev' Function's scripting, lol, meh)\r\n\r\n```\r\nstring_variable = \"H;e;g;e;m;o;n;_;K;h;a;n;_;S;t;r;i;n;g\"\r\n\r\nstringlist_variable = split (string_variable, \";\")\r\n\r\nsub_string_variable = \"\"\r\n\r\nindex_integer_variable = 0\r\n\r\nterminator_boolean_variable = false\r\n\r\nwhile (not terminator_boolean_variable and index_integer_variable + 3 < ListCount (stringlist_variable)) {\r\n  for (current_index_integer_variable, index_integer_variable, index_integer_variable + 3, 1) {\r\n    sub_string_variable = sub_string_variable + StringListItem (stringlist_variable, current_index_integer_variable)\r\n  }\r\n  if (sub_string_variable = \"Khan\") {\r\n    terminator_boolean_variable = true\r\n    game.sub_string_attribute = sub_string_variable\r\n  } else {\r\n    sub_string_variable = \"\"\r\n    index_integer_variable = index_integer_variable + 1\r\n  }\r\n}\r\nif (not terminator_boolean_variable) {\r\n  msg (\"The 'Khan' sub-string was not found in the 'Hegemon_Khan_String' string\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>there's:</p>\n<p>'StartsWith', 'EndsWith', 'Mid', 'Instr', \"InstrRev', and etc</p>\n<p>the one you want to use is 'Mid' (if I understand it correctly):</p>\n<p>http://docs.textadventures.co.uk/quest/functions/string/mid.html</p>\n<p>for an example:</p>\n<pre><code>string_variable = \"Hegemon_Khan_String\"\n\n// (1) H (2) e (3) g (4) e (5) m (6) o (7) n (8) _ (9) K\n\n// (1) K (2) h (3) a (4) n\n\ngetting_Khan_string_variable = Mid (string_variable, 9, 4)\n// getting_Khan_string_variable = \"Khan\"\n\nand there's lots of other techniques that you can do too, for example:\n\nif (StartsWith (string_variable, \"Hegemon_\") and EndsWith (string_variable, \"_String\") {\n  getting_Khan_string_variable = Mid (string_variable, LengthOf (\"Hegemon_\") + 1, LengthOf (\"Khan\"))\n  // getting_Khan_string_variable = \"Khan\"\n}\n</code></pre>\n<hr>\n<p>you can also use the 'Instr' and 'InstrRev' too, but these are just like the 'HasXXX' Functions: if returns '0', then the sub-string is not within the string. Else: you can then use the returned index number (via with/within the 'Mid' Function) for getting the sub-string.</p>\n<p>for example:</p>\n<pre><code>string_variable = \"Hegemon_Khan_String\"\n\ninteger_variable = Instr (string_variable, \"Khan\")\nif (integer_variable = 0) {\n  msg (\"the 'Khan' sub-string is not found within the 'Hegemon_Khan_String' string\")\n} else {\n  getting_Khan_string_variable = Mid (string_variable, integer_variable, 4)\n}\n</code></pre>\n<hr>\n<p>this probably works with quest:</p>\n<p>the manual way: iterating through the string:</p>\n<p>(I had to think of how the 'Mid/Instr/InstrRev' Functions are done underneath on my own, lol ... so probably a better way of doing it: see the 'Mid/Instr/InstrRev' Function's scripting, lol, meh)</p>\n<pre><code>string_variable = \"H;e;g;e;m;o;n;_;K;h;a;n;_;S;t;r;i;n;g\"\n\nstringlist_variable = split (string_variable, \";\")\n\nsub_string_variable = \"\"\n\nindex_integer_variable = 0\n\nterminator_boolean_variable = false\n\nwhile (not terminator_boolean_variable and index_integer_variable + 3 &lt; ListCount (stringlist_variable)) {\n  for (current_index_integer_variable, index_integer_variable, index_integer_variable + 3, 1) {\n    sub_string_variable = sub_string_variable + StringListItem (stringlist_variable, current_index_integer_variable)\n  }\n  if (sub_string_variable = \"Khan\") {\n    terminator_boolean_variable = true\n    game.sub_string_attribute = sub_string_variable\n  } else {\n    sub_string_variable = \"\"\n    index_integer_variable = index_integer_variable + 1\n  }\n}\nif (not terminator_boolean_variable) {\n  msg (\"The 'Khan' sub-string was not found in the 'Hegemon_Khan_String' string\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-08-02T06:40:57.0234418Z",
      "LastEditDate": "2017-08-02T06:56:00.2481338Z",
      "link": null
    }
  ]
}
