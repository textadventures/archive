{
  "Topic": {
    "TopicId": "ismsg-scaees9ed8vzbtxq",
    "ForumId": "10",
    "Title": "Advanced Examine Self",
    "LastUpdated": "2017-06-19T14:10:34.2606542Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8647ffb2-eb84-4be8-a842-5c41ab3a51ec",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all, thanks for all the brilliant help lately! Things are coming along great.\r\n\r\nNow, another one of my many questions. I want to chance Look at self, or examine self, to something a bit more custom. \r\n\r\nI already rooted out the little String for player.pov_look and attempted to type something into it.\r\n\r\n```You're a (player.sex) in their later teens, or maybe early twenties. Your eyes are a sparkling and bright (player.eyecolour) while your hair is (player.haircolour). They go well with your (player.skincolour).```\r\n\r\nAnd of course, it just types out exactly like that. My things are not getting summoned. I'm assuming it's a simple fix somewhere, but I did try using <> instead of brackets. Where could I be going wrong?",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all, thanks for all the brilliant help lately! Things are coming along great.</p>\n<p>Now, another one of my many questions. I want to chance Look at self, or examine self, to something a bit more custom.</p>\n<p>I already rooted out the little String for player.pov_look and attempted to type something into it.</p>\n<p><code>You're a (player.sex) in their later teens, or maybe early twenties. Your eyes are a sparkling and bright (player.eyecolour) while your hair is (player.haircolour). They go well with your (player.skincolour).</code></p>\n<p>And of course, it just types out exactly like that. My things are not getting summoned. I'm assuming it's a simple fix somewhere, but I did try using &lt;&gt; instead of brackets. Where could I be going wrong?</p>\n\n",
      "PostDate": "2017-06-19T14:10:34.2606542Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ea3cfbe-5c3a-4fad-b5cc-601e3a985dc2",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Figured it out! Change it to a script, print message \r\n\r\n```You're a {player.sex} in their later teens, or maybe early twenties. Your eyes are a sparkling and bright {player.eyecolour} while your hair is {player.haircolour}. They go well with your {player.skincolour}```",
      "EditableFormat": "markdown",
      "HTML": "<p>Figured it out! Change it to a script, print message</p>\n<p><code>You're a {player.sex} in their later teens, or maybe early twenties. Your eyes are a sparkling and bright {player.eyecolour} while your hair is {player.haircolour}. They go well with your {player.skincolour}</code></p>\n\n",
      "PostDate": "2017-06-19T14:12:39.2223582Z",
      "LastEditDate": "2017-06-19T14:35:34.8519761Z",
      "link": null
    },
    {
      "PostId": "e669f936-9027-4934-9476-7623fcbc40bb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n1. The 'look' Attribute is used when/for any non-room Object that's NOT currently controlled by you. This is found under/in the 'setup' Tab of Objects\r\n2. The 'pov_look' Attribute is used when/for any non-room Object that IS currently controlled by you. This is found under/in the 'Player' Tab of Objects. You got to first toggle on this Tab's displayment, then you got to make you toggle on your Object to be the 'can be a player object' option.\r\n3. The pattern (input format/syntax) for the 'look' Command is: look at #object_parameter#, for example, you'd type in during playing the game (pretending/assuming you're in a room with a dragon): look at dragon\r\n4. The 'description' Attribute is used when/for any Room Object.\r\n\r\nthe 'look/description' Attributes can be either: a Script Attribute or a String Attribute. There's not really too much difference between them. If you change/set it to being a Script Attribute, then you got the full 'normal' scripting capabilities/funtionality at your disposal. If you change/set it to being a String Attribute, then you got to use the 'text processor commands' to do any of the scripting that you might want to do for it.\r\n\r\nduring game play you can do these quick inputs (they're built-in to be connected to the above stuff) too:\r\n\r\nx NAME_OF_OBJECT // displays/runs the 'look/description' Attribute for your typed-in inputted object\r\nlook // displays/runs the 'description' Attribute for the Room Object you're within\r\nlook at NAME_OF_OBJECT // displays/runs the 'look/description' Attribute for your typed-in inputted object\r\n\r\n---------\r\n\r\nyour issue in your OP wasn't the Attribute Type (String vs Script), but that you just did the wrong syntax for the text processor commands:\r\n\r\nwrong syntax example: (player.sex)\r\n\r\ninstead of the correct syntax (example): {player.sex}\r\n\r\n-------\r\n\r\nalso note for the GUI/Editor's 'print a message' Script, about the differences between its script options:\r\n\r\n1. [MESSAGE]\r\n\r\nthis ONLY ALLOWS: TEXT\r\n\r\nexamples:\r\n\r\nprint [MESSAGE] Hi, my name is HK, said HK to the npc next to him.\r\n// output: Hi, my name is HK, said HK to the npc next to him.\r\n// NO error\r\n\r\nprint [MESSAGE] \"Hi, my name is HK,\" said HK to the npc next to him. \r\n// output: \"Hi, my name is HK,\" aid HK to the npc next to him.\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [MESSAGE] Hi, my name is {player.alias}, said {player.alias} to the npc next to him. \r\n// ERROR! (I think anyways... maybe using the text process command doesn't cause an error, meh)\r\n\r\n// player.alias = \"HK\"\r\nprint [MESSAGE] \"Hi, my name is \" + player.alias + \", said \" + player.alias + \" to the npc next to him.\"\r\n// ERROR!\r\n\r\n2. [EXPRESSION]\r\n\r\nyou can do: just TEXT, just VARIABLE(S), and/or TEXT + VARIABLES\r\n\r\nexamples:\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"Hi, my name is {player.alias}, said {player.alias} to the npc next to him.\"\r\n// output: Hi, my name is HK, said HK to the NPC next to him.\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"Hi, my name is \" + player.alias + \", said \" + player.alias + \" to the npc next to him.\"\r\n// output: Hi, my name is HK, said HK to the npc next to him.\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"\\\"Hi, my name is \" + player.alias + \",\\\" said \" + player.alias + \" to the npc next to him.\"\r\n// output: \"Hi, my name is HK,\" said HK to the npc next to him.\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"\\\"Hi, my name is {player.alias},\\\" said {player.alias} to the npc next to him.\"\r\n// output: \"Hi, my name is HK,\" said HK to the NPC next to him.\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"hi\"\r\n// output: hi\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] hi\r\n// ERROR!\r\n\r\nprint [EXPRESSION] \"\\\"hi\\\"\"\r\n// output: \"hi\"\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] player.alias\r\n// output: HK\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] \"{player.alias}\"\r\n// output: HK\r\n// NO error\r\n\r\n// player.alias = \"HK\"\r\nprint [EXPRESSION] {player.alias}\r\n// output: HK\r\n// ERROR! (I think ... but maybe not)\r\n```\r\n\r\n---------\r\n\r\nif you code scripting in anything directly in code, it follows the rules of the [EXPRESSION]'s rules, all textual parts MUST BE within double quotes, to make it be textual (String)\r\n\r\n----------\r\n\r\nask if you need any help with anything or need anything explained",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>1. The 'look' Attribute is used when/for any non-room Object that's NOT currently controlled by you. This is found under/in the 'setup' Tab of Objects\n2. The 'pov_look' Attribute is used when/for any non-room Object that IS currently controlled by you. This is found under/in the 'Player' Tab of Objects. You got to first toggle on this Tab's displayment, then you got to make you toggle on your Object to be the 'can be a player object' option.\n3. The pattern (input format/syntax) for the 'look' Command is: look at #object_parameter#, for example, you'd type in during playing the game (pretending/assuming you're in a room with a dragon): look at dragon\n4. The 'description' Attribute is used when/for any Room Object.\n\nthe 'look/description' Attributes can be either: a Script Attribute or a String Attribute. There's not really too much difference between them. If you change/set it to being a Script Attribute, then you got the full 'normal' scripting capabilities/funtionality at your disposal. If you change/set it to being a String Attribute, then you got to use the 'text processor commands' to do any of the scripting that you might want to do for it.\n\nduring game play you can do these quick inputs (they're built-in to be connected to the above stuff) too:\n\nx NAME_OF_OBJECT // displays/runs the 'look/description' Attribute for your typed-in inputted object\nlook // displays/runs the 'description' Attribute for the Room Object you're within\nlook at NAME_OF_OBJECT // displays/runs the 'look/description' Attribute for your typed-in inputted object\n\n---------\n\nyour issue in your OP wasn't the Attribute Type (String vs Script), but that you just did the wrong syntax for the text processor commands:\n\nwrong syntax example: (player.sex)\n\ninstead of the correct syntax (example): {player.sex}\n\n-------\n\nalso note for the GUI/Editor's 'print a message' Script, about the differences between its script options:\n\n1. [MESSAGE]\n\nthis ONLY ALLOWS: TEXT\n\nexamples:\n\nprint [MESSAGE] Hi, my name is HK, said HK to the npc next to him.\n// output: Hi, my name is HK, said HK to the npc next to him.\n// NO error\n\nprint [MESSAGE] \"Hi, my name is HK,\" said HK to the npc next to him. \n// output: \"Hi, my name is HK,\" aid HK to the npc next to him.\n// NO error\n\n// player.alias = \"HK\"\nprint [MESSAGE] Hi, my name is {player.alias}, said {player.alias} to the npc next to him. \n// ERROR! (I think anyways... maybe using the text process command doesn't cause an error, meh)\n\n// player.alias = \"HK\"\nprint [MESSAGE] \"Hi, my name is \" + player.alias + \", said \" + player.alias + \" to the npc next to him.\"\n// ERROR!\n\n2. [EXPRESSION]\n\nyou can do: just TEXT, just VARIABLE(S), and/or TEXT + VARIABLES\n\nexamples:\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"Hi, my name is {player.alias}, said {player.alias} to the npc next to him.\"\n// output: Hi, my name is HK, said HK to the NPC next to him.\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"Hi, my name is \" + player.alias + \", said \" + player.alias + \" to the npc next to him.\"\n// output: Hi, my name is HK, said HK to the npc next to him.\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"\\\"Hi, my name is \" + player.alias + \",\\\" said \" + player.alias + \" to the npc next to him.\"\n// output: \"Hi, my name is HK,\" said HK to the npc next to him.\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"\\\"Hi, my name is {player.alias},\\\" said {player.alias} to the npc next to him.\"\n// output: \"Hi, my name is HK,\" said HK to the NPC next to him.\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"hi\"\n// output: hi\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] hi\n// ERROR!\n\nprint [EXPRESSION] \"\\\"hi\\\"\"\n// output: \"hi\"\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] player.alias\n// output: HK\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] \"{player.alias}\"\n// output: HK\n// NO error\n\n// player.alias = \"HK\"\nprint [EXPRESSION] {player.alias}\n// output: HK\n// ERROR! (I think ... but maybe not)\n</code></pre>\n<hr>\n<p>if you code scripting in anything directly in code, it follows the rules of the [EXPRESSION]'s rules, all textual parts MUST BE within double quotes, to make it be textual (String)</p>\n<hr>\n<p>ask if you need any help with anything or need anything explained</p>\n\n",
      "PostDate": "2017-06-19T16:07:56.5481453Z",
      "LastEditDate": "2017-06-19T17:04:32.1719774Z",
      "link": null
    }
  ]
}
