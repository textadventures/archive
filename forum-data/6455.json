{
  "Topic": {
    "TopicId": "6455",
    "ForumId": "10",
    "Title": "Undo Glitch",
    "LastUpdated": "2016-06-25T08:57:41+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "43748",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "Um, I seem to have found a bit of a glitch in the Quest Editor that deals with turn scripts and the &quot;undo&quot; function. If you type a command not recognized by Quest (such as just typing gibberish), it will still consider that a &quot;turn,&quot; and so turn scripts will still function. However, &quot;undo&quot; ignores these types of commands, so that can result in the &quot;undo&quot; command taking the player back more turns than intended.\n\nI doubt this can be fixed using the Quest Editor, but I feel the issue should be brought up nonetheless.",
      "EditableFormat": "bbcode",
      "HTML": "Um, I seem to have found a bit of a glitch in the Quest Editor that deals with turn scripts and the &quot;undo&quot; function. If you type a command not recognized by Quest (such as just typing gibberish), it will still consider that a &quot;turn,&quot; and so turn scripts will still function. However, &quot;undo&quot; ignores these types of commands, so that can result in the &quot;undo&quot; command taking the player back more turns than intended.<br/><br/>I doubt this can be fixed using the Quest Editor, but I feel the issue should be brought up nonetheless.",
      "PostDate": "2016-06-25T08:17:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43749",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "What you really want is to stop the turnscripts getting done in those cases, and you can do that in the editor. On the game object, create a script attribute called &quot;unresolvedcommandhandler&quot;. This will get called for those non-turns. Have it set a flag on the game object. Then in your turnscripts, have them only do anything if the flag is not set. Finally, in your last turnscript, unset the flag. Personally I would have a single turnscript that does everything, so you know which is last.\n\nArguably this should be the default behaviour, and so should be built in to Quest, because, as you point out, it is a bug. You migt want to log it on the bug tracker; there is a link at the bottom of the front page of the forum.",
      "EditableFormat": "bbcode",
      "HTML": "What you really want is to stop the turnscripts getting done in those cases, and you can do that in the editor. On the game object, create a script attribute called &quot;unresolvedcommandhandler&quot;. This will get called for those non-turns. Have it set a flag on the game object. Then in your turnscripts, have them only do anything if the flag is not set. Finally, in your last turnscript, unset the flag. Personally I would have a single turnscript that does everything, so you know which is last.<br/><br/>Arguably this should be the default behaviour, and so should be built in to Quest, because, as you point out, it is a bug. You migt want to log it on the bug tracker; there is a link at the bottom of the front page of the forum.",
      "PostDate": "2016-06-25T08:41:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43750",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "any clicking on something and/or something typed in into the command bar at the bottom (type in something and then hitting the '[enter]' key on your keyboard) is an internal turn. As Pixie mentioned, you can restrict your scriptings from being activated upon an internal turn change/incrementing, via blocking that scripting/script(s) off using an 'if'/conditional scripting in the various places involved with internal turns (anything that is clickable with mouse and/or uses typed in input into the command box).\n\nhere's how Pixie is doing it for/with/through a Turnscript&#058;\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=6269&amp;p=42530&amp;hilit=notarealturn#p42497\">viewtopic.php?f=10&amp;t=6269&amp;p=42530&amp;hilit=notarealturn#p42497</a><!-- l -->\n\nbut you're not limited to doing it through a Turnscript, as I believe for example, if you can work with the internal code, you can alter the 'Command's handling scripting' to have that 'if boolean' Scripting to prevent Commands from activating your scriptings in them, upon an internal turn (change/incrementing).",
      "EditableFormat": "bbcode",
      "HTML": "any clicking on something and/or something typed in into the command bar at the bottom (type in something and then hitting the '[enter]' key on your keyboard) is an internal turn. As Pixie mentioned, you can restrict your scriptings from being activated upon an internal turn change/incrementing, via blocking that scripting/script(s) off using an 'if'/conditional scripting in the various places involved with internal turns (anything that is clickable with mouse and/or uses typed in input into the command box).<br/><br/>here's how Pixie is doing it for/with/through a Turnscript&#058;<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=6269&amp;p=42530&amp;hilit=notarealturn#p42497\">viewtopic.php?f=10&amp;t=6269&amp;p=42530&amp;hilit=notarealturn#p42497</a><!-- l --><br/><br/>but you're not limited to doing it through a Turnscript, as I believe for example, if you can work with the internal code, you can alter the 'Command's handling scripting' to have that 'if boolean' Scripting to prevent Commands from activating your scriptings in them, upon an internal turn (change/incrementing).",
      "PostDate": "2016-06-25T08:57:41+01:00",
      "LastEditDate": null
    }
  ]
}
