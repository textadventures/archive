{
  "Topic": {
    "TopicId": "yizejfucr0kuh-3vejl9ra",
    "ForumId": "18",
    "Title": "look/description/etc-like-responses handling",
    "LastUpdated": "2016-12-30T21:33:14.1914819Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "85c951e3-6cd1-4692-ac00-82340b7d222e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "assuming this works perfectly (hadn't tested it yet) ... here's a possible design (probably/likely not the best of course)\r\n\r\n(and I don't like my labeling/naming of things, as 'response' is usually more associated with dialogue/conversation responses)\r\n\r\nthis actually reduces the work greatly (assuming it works perfectly, lol), as this is really versatile. If you want, you can just add default responses to the 'response_object' Object's 'default_response_stringlist_attribute' Stringlist Attribute. Or, you can add terms (what someone would type in for the 'response #text#', our 'look/examine' custom 'response_command' Command) to the Room Object's 'response_stringdictionary_attribute' Stringdictionary Attribute, and add in the response for those terms, as well. Lastly, you can have your Objects within the Room Object have the same as the prior sentence. You can decide on how much detail (how many Objects and/or layer of Objects have info/details/descriptions/responses/default-repsonses to them). Also, I can add/adjust my code for also being able to do the same for the 'response_object' Object, having a Stringdictionary Attribute with terms and their responses, if you only want to deal with a single Object to handle all of the possible terms one playing the game might try or that you mention about as terms they can get more details (or a default response) about.\r\n\r\n```\r\n<command name=\"response_command\">\r\n  <pattern>response #text#</pattern>\r\n  <script>\r\n    if (Contains (game.pov.parent, text)) {\r\n      object_variable = GetObject (text)\r\n      if (HasAttribute (object_variable, \"look\")) {\r\n        if (TypeOf (object_variable, \"look\") = \"string\") {\r\n          msg (object_variable.look)\r\n        } else if (TypeOf (object_variable, \"look\") = \"script\") {\r\n          invoke (object_variable.look)\r\n        }\r\n      } else if (HasAttribute (object_variable, \"description\")) {\r\n        if (TypeOf (object_variable, \"description\") = \"string\") {\r\n          msg (object_variable.description)\r\n        } else if (TypeOf (object_variable, \"description\") = \"script\") {\r\n          invoke (object_variable.description)\r\n        }\r\n      } else {\r\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\r\n      }\r\n    } else if (HasAttribute (game.pov.parent, response_stringdictionary_attribute)) {\r\n      if (DictionaryContains (game.pov.parent, response_stringdictionary_attribute, text)) {\r\n        msg (StringDictionaryItem (game.pov.parent.response_stringdictionary_attribute, text))\r\n      } else {\r\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\r\n      }\r\n    } else {\r\n      boolean_variable = true\r\n      foreach (object_placeholder_variable, GetDirectChildren (game.pov.parent)) {\r\n        if (HasAttribute (object_placeholder_variable, response_stringdictionary_attribute)) {\r\n          if (DictionaryContains (object_placeholder_variable, response_stringdictionary_attribute, text)) {\r\n            boolean_variable = false\r\n            msg (StringDictionaryItem (object_placeholder_variable.response_stringdictionary_attribute, text))\r\n          }\r\n        }\r\n      }\r\n      if (boolean_variable) {\r\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\r\n      }\r\n    }\r\n  </script>\r\n</command>\r\n\r\n<object name=\"response_object\">\r\n  <attr name=\"default_response_stringlist_attribute\" type=\"list\">\r\n    <value>YOUR_CREATIVE_DEFAULT_RESPONSE_1</value>\r\n    <value>YOUR_CREATIVE_DEFAULT_RESPONSE_2</value>\r\n    // etc <values>\r\n  </attr>\r\n</object>\r\n\r\n// your various Objects (if desired for them) would need a 'response_stringdictionary_attribute' Stringdictionary Attribute. I can try to explain how to set up and how they work and what they do, if you need help on using Dictionary Attributes. The various 'text' inputs would be your 'keys' for the Dictionary Attribute, and then you give them their responses as the 'values' for each of those 'keys'\r\n\r\n// I can include code for handling the use of a Scriptdictionary Attribute as well, if interested\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>assuming this works perfectly (hadn't tested it yet) ... here's a possible design (probably/likely not the best of course)</p>\n<p>(and I don't like my labeling/naming of things, as 'response' is usually more associated with dialogue/conversation responses)</p>\n<p>this actually reduces the work greatly (assuming it works perfectly, lol), as this is really versatile. If you want, you can just add default responses to the 'response_object' Object's 'default_response_stringlist_attribute' Stringlist Attribute. Or, you can add terms (what someone would type in for the 'response #text#', our 'look/examine' custom 'response_command' Command) to the Room Object's 'response_stringdictionary_attribute' Stringdictionary Attribute, and add in the response for those terms, as well. Lastly, you can have your Objects within the Room Object have the same as the prior sentence. You can decide on how much detail (how many Objects and/or layer of Objects have info/details/descriptions/responses/default-repsonses to them). Also, I can add/adjust my code for also being able to do the same for the 'response_object' Object, having a Stringdictionary Attribute with terms and their responses, if you only want to deal with a single Object to handle all of the possible terms one playing the game might try or that you mention about as terms they can get more details (or a default response) about.</p>\n<pre><code>&lt;command name=\"response_command\"&gt;\n  &lt;pattern&gt;response #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (Contains (game.pov.parent, text)) {\n      object_variable = GetObject (text)\n      if (HasAttribute (object_variable, \"look\")) {\n        if (TypeOf (object_variable, \"look\") = \"string\") {\n          msg (object_variable.look)\n        } else if (TypeOf (object_variable, \"look\") = \"script\") {\n          invoke (object_variable.look)\n        }\n      } else if (HasAttribute (object_variable, \"description\")) {\n        if (TypeOf (object_variable, \"description\") = \"string\") {\n          msg (object_variable.description)\n        } else if (TypeOf (object_variable, \"description\") = \"script\") {\n          invoke (object_variable.description)\n        }\n      } else {\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\n      }\n    } else if (HasAttribute (game.pov.parent, response_stringdictionary_attribute)) {\n      if (DictionaryContains (game.pov.parent, response_stringdictionary_attribute, text)) {\n        msg (StringDictionaryItem (game.pov.parent.response_stringdictionary_attribute, text))\n      } else {\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\n      }\n    } else {\n      boolean_variable = true\n      foreach (object_placeholder_variable, GetDirectChildren (game.pov.parent)) {\n        if (HasAttribute (object_placeholder_variable, response_stringdictionary_attribute)) {\n          if (DictionaryContains (object_placeholder_variable, response_stringdictionary_attribute, text)) {\n            boolean_variable = false\n            msg (StringDictionaryItem (object_placeholder_variable.response_stringdictionary_attribute, text))\n          }\n        }\n      }\n      if (boolean_variable) {\n        msg (StringListItem (response_object.default_response_stringlist_attribute, GetRandomInt (0, ListCount (response_object.default_response_stringlist_attribute) - 1)))\n      }\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;object name=\"response_object\"&gt;\n  &lt;attr name=\"default_response_stringlist_attribute\" type=\"list\"&gt;\n    &lt;value&gt;YOUR_CREATIVE_DEFAULT_RESPONSE_1&lt;/value&gt;\n    &lt;value&gt;YOUR_CREATIVE_DEFAULT_RESPONSE_2&lt;/value&gt;\n    // etc &lt;values&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n// your various Objects (if desired for them) would need a 'response_stringdictionary_attribute' Stringdictionary Attribute. I can try to explain how to set up and how they work and what they do, if you need help on using Dictionary Attributes. The various 'text' inputs would be your 'keys' for the Dictionary Attribute, and then you give them their responses as the 'values' for each of those 'keys'\n\n// I can include code for handling the use of a Scriptdictionary Attribute as well, if interested\n</code></pre>\n\n",
      "PostDate": "2016-12-30T21:33:14.1914819Z",
      "LastEditDate": "2016-12-30T21:34:45.0292023Z"
    },
    {
      "PostId": "85152e60-8117-482b-8f84-60c3cd95eaa2",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Failed to load game.\r\nThe following errors occurred:\r\nError: Error adding script attribute 'script' to element 'response_command': Function not found: ''",
      "EditableFormat": "markdown",
      "HTML": "<p>Failed to load game.<br>\nThe following errors occurred:<br>\nError: Error adding script attribute 'script' to element 'response_command': Function not found: ''</p>\n\n",
      "PostDate": "2016-12-30T21:42:00.2384301Z",
      "LastEditDate": null
    },
    {
      "PostId": "306a0b53-958d-4589-ac4d-30dae16eb3e8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "hmm... that's a strange error... as it seems to be talking about this:\r\n\r\n```\r\n<command name=\"xxx\">\r\n  <script>\r\n    // scripting\r\n  </script>\r\n</command>\r\n```\r\n\r\nwhich is correct... there shouldn't be an error... (unless this command is over-riding/writing a built-in Command, using 'response' probably wasn't the best idea... as there's probably built-in stuff using 'response'), otehrwise, I've no idea what this error is refering to, hmm....",
      "EditableFormat": "markdown",
      "HTML": "<p>hmm... that's a strange error... as it seems to be talking about this:</p>\n<pre><code>&lt;command name=\"xxx\"&gt;\n  &lt;script&gt;\n    // scripting\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>which is correct... there shouldn't be an error... (unless this command is over-riding/writing a built-in Command, using 'response' probably wasn't the best idea... as there's probably built-in stuff using 'response'), otehrwise, I've no idea what this error is refering to, hmm....</p>\n\n",
      "PostDate": "2016-12-30T21:49:13.5977314Z",
      "LastEditDate": null
    },
    {
      "PostId": "795f5e1c-c489-4aaa-a57d-f660a3f06953",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've probably done it wrong.\r\n\r\n• I created a new game.\r\n• Added a new command in Game\r\n• I put **response_command** in the Name field\r\n• I put **response #text#** in the Command pattern filed\r\n• Then I put the rest in the script.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've probably done it wrong.</p>\n<ul>\n<li>I created a new game.</li>\n<li>Added a new command in Game</li>\n<li>I put <strong>response_command</strong> in the Name field</li>\n<li>I put <strong>response #text#</strong> in the Command pattern filed</li>\n<li>Then I put the rest in the script.</li>\n</ul>\n\n",
      "PostDate": "2016-12-30T21:57:47.2141059Z",
      "LastEditDate": null
    }
  ]
}
