{
  "Topic": {
    "TopicId": "zpnziwoqzkocsvhtm4eorq",
    "ForumId": "10",
    "Title": "Question on Get Input and If Result",
    "LastUpdated": "2017-06-27T23:15:57.7931105Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b899304e-2368-4bc0-8d73-236d14afec6e",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nTrying to make conversation between NPCs.  Right now, I'm trying to work with a system where it's a little like those open world RPGs, i.e Mass Effect where you get a couple of dialogue options or ways of approaching a scenario. I'm still not 100% sure how to put together this in a neat manner, so ideas are totally welcome. I have been considering making it a menu, I know roughly how they work now.\r\n\r\nBut at the moment my system is the player is greeted by an NPC and they type their response. Not word for words, of course, but the game will set out say, three or four consistent approaches. **Hard**, **Kind**, **Mischevious** or **Sarcastic**. While I can make those work, I don't know how to make it so a ```Get input``` and ```if result =``` can deal with multiple ways of the same thing.\r\n\r\nWow, worded that great.\r\n\r\nSay it will get 'Sarcastic' but not 'sarcastic' or 'sarc' or 'Sarc' or even just 's' or 'S'. Ideally all of them would make suitable responses, as each word starts with a different letter. How can I make it accept multiple inputs for the same result?\r\n\r\nAlso, is there a neater or easier alternative to the menu for dialogue? So I could have four hyperlinks pop up, say for one dialogue being ```Hard, Kind, Mischevious or Sarcastic.``` and for another ```Hard, Sexy, Mischevious or Silent```or ```Rude, Polite, Silent, Weird```. \r\n\r\nOf course, it's not impossible for me to make a menu every time I want the player to have to speak to every individual NPC about every individual thing, probably not even that time consuming, but I am guessing there's others with more experience in multiple choice dialogue than me that  could chip in. \r\n\r\n\r\nEdit: Oh! Further question!\r\n\r\nWhen I have menu options, do I _have_ to use them in a menu? Is there a way to use \r\n```\r\nmenulist = NewStringList()\r\n            list add (menulist, \"male\")\r\n```\r\nAnd have something along the lines of.\r\n\r\n\"Are you {menulist, \"male\"} or {menulist, \"female\"}\"\r\n\r\nSo I don't have to have a printed menu with numbers each time, but still use the same system? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Trying to make conversation between NPCs.  Right now, I'm trying to work with a system where it's a little like those open world RPGs, i.e Mass Effect where you get a couple of dialogue options or ways of approaching a scenario. I'm still not 100% sure how to put together this in a neat manner, so ideas are totally welcome. I have been considering making it a menu, I know roughly how they work now.</p>\n<p>But at the moment my system is the player is greeted by an NPC and they type their response. Not word for words, of course, but the game will set out say, three or four consistent approaches. <strong>Hard</strong>, <strong>Kind</strong>, <strong>Mischevious</strong> or <strong>Sarcastic</strong>. While I can make those work, I don't know how to make it so a <code>Get input</code> and <code>if result =</code> can deal with multiple ways of the same thing.</p>\n<p>Wow, worded that great.</p>\n<p>Say it will get 'Sarcastic' but not 'sarcastic' or 'sarc' or 'Sarc' or even just 's' or 'S'. Ideally all of them would make suitable responses, as each word starts with a different letter. How can I make it accept multiple inputs for the same result?</p>\n<p>Also, is there a neater or easier alternative to the menu for dialogue? So I could have four hyperlinks pop up, say for one dialogue being <code>Hard, Kind, Mischevious or Sarcastic.</code> and for another <code>Hard, Sexy, Mischevious or Silent</code>or <code>Rude, Polite, Silent, Weird</code>.</p>\n<p>Of course, it's not impossible for me to make a menu every time I want the player to have to speak to every individual NPC about every individual thing, probably not even that time consuming, but I am guessing there's others with more experience in multiple choice dialogue than me that  could chip in.</p>\n<p>Edit: Oh! Further question!</p>\n<p>When I have menu options, do I <em>have</em> to use them in a menu? Is there a way to use</p>\n<pre><code>menulist = NewStringList()\n            list add (menulist, \"male\")\n</code></pre>\n<p>And have something along the lines of.</p>\n<p>\"Are you {menulist, \"male\"} or {menulist, \"female\"}\"</p>\n<p>So I don't have to have a printed menu with numbers each time, but still use the same system?</p>\n\n",
      "PostDate": "2017-06-27T23:15:57.7931105Z",
      "LastEditDate": "2017-06-27T23:21:22.7829348Z",
      "link": null
    },
    {
      "PostId": "2e9f46c9-9702-43bc-b1a4-4d6048909349",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think if I'm understanding what you want, there's the 'inline' (hypertext: clickable links in the left big text box during game play):\r\n\r\nthe 'ShowMenu(xxx)' Function\r\n(not to be confused with the popup window menu function: the 'show menu (xxx)' Function)\r\n\r\n```\r\ngame.sex_list = split (\"male;female\", \";\")\r\n\r\nShowMenu (\"Are you a \", game.sex_list, false) {\r\n  player.sex = result\r\n}\r\n```\r\n\r\n-----------\r\n\r\na simple way of handling multiple inputs (if there's not too many of them):\r\n\r\n```\r\nget input {\r\n  if (result = \"Hard\" or result = \"Kind\" or result = \"Mischievious\" or result = \"Sarcastic\") {\r\n    player.personality = TYPE_1_PERSONALITY\r\n  } else if (result = \"Sympathetic\" or result = \"Angry\" or result = \"Flirtatious\" or result = \"Sad\") {\r\n    player.personality = TYPE_2_PERSONALITY\r\n  }\r\n}\r\n```\r\n\r\n---------------\r\n\r\nhowever, when you got:\r\n\r\nHard/Kind/Mischevious/Sarcastic\r\nand\r\nHard/Sexy/Mischevious/Silent\r\n\r\nyou can NOT do this as they got the same inputs (hard, mischievious), it's just NOT logically/parser-wise possible\r\n\r\nonly if each of them is a single string (a single item in a list) can it be done:\r\n\r\nString/Item_1: Hard, Kind, Mischevious, and Sarcastic\r\nString/Item_2: Hard, Sexy, Mischevious, and Silent\r\n\r\n```\r\ngame.personality_type_list = split (\"Hard, Kind, Mischevious, and Sarcastic; Hard, Sexy, Mischevious, and Silent\", \";\")\r\n\r\nShowMenu (\"Are you \", game.personality_type_list, false) {\r\n  player.personality_type_string_attribute = result\r\n}\r\n\r\n// the list's 2 items (and their displayment) are:\r\n// Hard, Kind, Mischevious, and Sarcastic\r\n// Hard, Sexy, Mischevious, and Silent\r\n\r\n// and your player attribute will be:\r\n// player.personality_type_string_attribute = \"Hard, Kind, Mischevious, and Sarcastic\"\r\n// or\r\n// player.personality_type_string_attribute = \"Hard, Sexy, Mischevious, and Silent\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I think if I'm understanding what you want, there's the 'inline' (hypertext: clickable links in the left big text box during game play):</p>\n<p>the 'ShowMenu(xxx)' Function<br>\n(not to be confused with the popup window menu function: the 'show menu (xxx)' Function)</p>\n<pre><code>game.sex_list = split (\"male;female\", \";\")\n\nShowMenu (\"Are you a \", game.sex_list, false) {\n  player.sex = result\n}\n</code></pre>\n<hr>\n<p>a simple way of handling multiple inputs (if there's not too many of them):</p>\n<pre><code>get input {\n  if (result = \"Hard\" or result = \"Kind\" or result = \"Mischievious\" or result = \"Sarcastic\") {\n    player.personality = TYPE_1_PERSONALITY\n  } else if (result = \"Sympathetic\" or result = \"Angry\" or result = \"Flirtatious\" or result = \"Sad\") {\n    player.personality = TYPE_2_PERSONALITY\n  }\n}\n</code></pre>\n<hr>\n<p>however, when you got:</p>\n<p>Hard/Kind/Mischevious/Sarcastic<br>\nand<br>\nHard/Sexy/Mischevious/Silent</p>\n<p>you can NOT do this as they got the same inputs (hard, mischievious), it's just NOT logically/parser-wise possible</p>\n<p>only if each of them is a single string (a single item in a list) can it be done:</p>\n<p>String/Item_1: Hard, Kind, Mischevious, and Sarcastic<br>\nString/Item_2: Hard, Sexy, Mischevious, and Silent</p>\n<pre><code>game.personality_type_list = split (\"Hard, Kind, Mischevious, and Sarcastic; Hard, Sexy, Mischevious, and Silent\", \";\")\n\nShowMenu (\"Are you \", game.personality_type_list, false) {\n  player.personality_type_string_attribute = result\n}\n\n// the list's 2 items (and their displayment) are:\n// Hard, Kind, Mischevious, and Sarcastic\n// Hard, Sexy, Mischevious, and Silent\n\n// and your player attribute will be:\n// player.personality_type_string_attribute = \"Hard, Kind, Mischevious, and Sarcastic\"\n// or\n// player.personality_type_string_attribute = \"Hard, Sexy, Mischevious, and Silent\"\n</code></pre>\n\n",
      "PostDate": "2017-06-28T01:15:14.4928224Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dc61d0bf-7297-4fcf-a461-ee7b5589a056",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nforgot the question about handling different spellings for inputs:\r\n\r\n```\r\ngame.sarcastic_list = split (\"s;sarc;sarcastic\", \";\")\r\n\r\n// HOWEVER, do note that you can NOT do this if you got another word with (some of) the same spelling, such as: sad, as they'll both have the 's' spelling option, and thus which did the person mean: 'sad' or 'sarcastic' ??? hence, it's logically impossible. You can't have any shortened spellings which are not unique, as you'll run into this logic parsing issue. 'sarcastic' and 'sad' are unique (distinguishable), but 'sa' (short for sarcastic) and 'sa' (short for sad) are not unique, nor is 's' (short for sarcastic) and 's' (short for sad) unique.\r\n\r\nget input {\r\n  foreach (item, game.sarcastic_list) {\r\n    if (LCase (result) = item) {\r\n      player.personality = \"sarcastic\"\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>forgot the question about handling different spellings for inputs:</p>\n<pre><code>game.sarcastic_list = split (\"s;sarc;sarcastic\", \";\")\n\n// HOWEVER, do note that you can NOT do this if you got another word with (some of) the same spelling, such as: sad, as they'll both have the 's' spelling option, and thus which did the person mean: 'sad' or 'sarcastic' ??? hence, it's logically impossible. You can't have any shortened spellings which are not unique, as you'll run into this logic parsing issue. 'sarcastic' and 'sad' are unique (distinguishable), but 'sa' (short for sarcastic) and 'sa' (short for sad) are not unique, nor is 's' (short for sarcastic) and 's' (short for sad) unique.\n\nget input {\n  foreach (item, game.sarcastic_list) {\n    if (LCase (result) = item) {\n      player.personality = \"sarcastic\"\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2017-06-28T01:26:56.0589012Z",
      "LastEditDate": "2017-06-28T01:51:05.6230607Z",
      "link": null
    },
    {
      "PostId": "4fbbda2c-dcee-4855-a81b-af3d510c0426",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this stuff as you can see, involves using List/Dictionary Attributes and iteration (foreach/for) through the List/Dictionary Attribute's items. The 'alt' (alternative names) text box in the GUI/Editor, is in fact a built-in Stringlist Attribute.\r\n\r\nso, you may want to try to understand these more advanced List/Dictionary Attributes (90% of game making is possible through the basic Attributes: booleans/strings/integers/doubles/objects, and the 'if' Script usage. Lists/Dictionaries make up 5% to 9% of the remaining 10% of game making, so if you can, it's really helpful to learn to use Lists/Dictionaries and their iteration), if you don't already understand them, which I try to help with:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\n\r\nand here's a test game on a system that doesn't use Exits to move around (you got to first 'explore' to discover areas, that you can then select as a 'travel' destination), but do note that this was back when I was first learning this stuff, so the code has some mistakes and flaws in it:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk\r\n\r\n-----\r\n\r\nask if you got any questions on anything",
      "EditableFormat": "markdown",
      "HTML": "<p>this stuff as you can see, involves using List/Dictionary Attributes and iteration (foreach/for) through the List/Dictionary Attribute's items. The 'alt' (alternative names) text box in the GUI/Editor, is in fact a built-in Stringlist Attribute.</p>\n<p>so, you may want to try to understand these more advanced List/Dictionary Attributes (90% of game making is possible through the basic Attributes: booleans/strings/integers/doubles/objects, and the 'if' Script usage. Lists/Dictionaries make up 5% to 9% of the remaining 10% of game making, so if you can, it's really helpful to learn to use Lists/Dictionaries and their iteration), if you don't already understand them, which I try to help with:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk</p>\n<p>and here's a test game on a system that doesn't use Exits to move around (you got to first 'explore' to discover areas, that you can then select as a 'travel' destination), but do note that this was back when I was first learning this stuff, so the code has some mistakes and flaws in it:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk</p>\n<hr>\n<p>ask if you got any questions on anything</p>\n\n",
      "PostDate": "2017-06-28T04:32:11.0724163Z",
      "LastEditDate": "2017-06-28T04:57:11.8982501Z",
      "link": null
    },
    {
      "PostId": "e71e4c08-268b-42ce-a64b-591639b46e30",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is not trivial, and it would be worth considering going down the menu route (which is what Mass Effect does). However, this guide will tell you how to get Quest to recognise phrases in text the player types.\r\nhttps://github.com/ThePix/quest/wiki/Ask-a-Question",
      "EditableFormat": "markdown",
      "HTML": "<p>This is not trivial, and it would be worth considering going down the menu route (which is what Mass Effect does). However, this guide will tell you how to get Quest to recognise phrases in text the player types.<br>\nhttps://github.com/ThePix/quest/wiki/Ask-a-Question</p>\n\n",
      "PostDate": "2017-06-28T07:58:47.0923364Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fe230c2b-7492-4898-aa3d-c094693d9372",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yay, I'm now finally understanding this stuff !!! ...  I just need to learn it and memorize/get-used-to the regex commands/symbols. This is defiantely something I need to learn, to improve my quest/game-making abilities, as it's very useful stuff: string parsing controls/handling\r\n\r\n(great guide Pixie, especially now that I'm finally able to understand this stuff !! laughs)",
      "EditableFormat": "markdown",
      "HTML": "<p>yay, I'm now finally understanding this stuff !!! ...  I just need to learn it and memorize/get-used-to the regex commands/symbols. This is defiantely something I need to learn, to improve my quest/game-making abilities, as it's very useful stuff: string parsing controls/handling</p>\n<p>(great guide Pixie, especially now that I'm finally able to understand this stuff !! laughs)</p>\n\n",
      "PostDate": "2017-06-28T13:51:13.1870175Z",
      "LastEditDate": "2017-06-28T13:52:16.660823Z",
      "link": null
    },
    {
      "PostId": "436645b0-7b86-4ad1-ac6c-b959b66bf967",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Regexes are used in most languages and the format seems very similar across them all. Quest uses the .NET version, so is the same as Visual Basic and C# among others.\r\n\r\nYou can try them out here. Try putting `^put (?<object1>.*) (on|in) (?<object2>.*)$` and see what player input will get matched.\r\nhttp://regexstorm.net/tester",
      "EditableFormat": "markdown",
      "HTML": "<p>Regexes are used in most languages and the format seems very similar across them all. Quest uses the .NET version, so is the same as Visual Basic and C# among others.</p>\n<p>You can try them out here. Try putting <code>^put (?&lt;object1&gt;.*) (on|in) (?&lt;object2&gt;.*)$</code> and see what player input will get matched.<br>\nhttp://regexstorm.net/tester</p>\n\n",
      "PostDate": "2017-06-28T14:52:26.1709957Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d8e4451-d25b-4975-893b-4f3fcddcd536",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "awesome, thanks Pixe!",
      "EditableFormat": "markdown",
      "HTML": "<p>awesome, thanks Pixe!</p>\n\n",
      "PostDate": "2017-06-29T03:56:30.1222394Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
