{
  "Topic": {
    "TopicId": "3700",
    "ForumId": "10",
    "Title": "Combat",
    "LastUpdated": "2013-07-27T05:10:52+01:00",
    "ReplyCount": 16
  },
  "Posts": [
    {
      "PostId": "24781",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "I want to have combat in a game I'm making, but I don't know how and I don't want to use code (don't know how <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> ). All I need to know is how to make it choose one of a set number of possibilities, as I can work with it from there. Plz and thx in advance.",
      "EditableFormat": "bbcode",
      "HTML": "I want to have combat in a game I'm making, but I don't know how and I don't want to use code (don't know how <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> ). All I need to know is how to make it choose one of a set number of possibilities, as I can work with it from there. Plz and thx in advance.",
      "PostDate": "2013-05-26T02:38:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24782",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "There's an RPG library over in the Library sub-forum here, and some tutorials on making a combat system over on the wiki. The RPG library looks old though so I don't know if it's complete, and not sure if the wiki's system is more than you want. \n\nWhen you say all you need is how to choose from a set of possibilities, do you mean combat like this:\n\n[quote:3ado14m6]\nThe nasty orc swings his scimitar at your head. Do you:\n\n1) duck and swing with your weapon.\n2) leap over the swing and bash the brute in the head.\n3) barrel into the orc stopping him mid-swing?\n\n&gt; 2\n[/quote:3ado14m6]",
      "EditableFormat": "bbcode",
      "HTML": "There's an RPG library over in the Library sub-forum here, and some tutorials on making a combat system over on the wiki. The RPG library looks old though so I don't know if it's complete, and not sure if the wiki's system is more than you want. <br/><br/>When you say all you need is how to choose from a set of possibilities, do you mean combat like this:<br/><br/><blockquote><p><br/>The nasty orc swings his scimitar at your head. Do you:<br/><br/>1) duck and swing with your weapon.<br/>2) leap over the swing and bash the brute in the head.<br/>3) barrel into the orc stopping him mid-swing?<br/><br/>&gt; 2<br/></p></blockquote>",
      "PostDate": "2013-05-26T03:32:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24784",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "Actually, I have found out how to make it have a certain chance of doing something, so all I need now is to have some way of doing something like this;\n=============================================================================================================\nYou enter combat with the nasty orc. Do you:\nSwing up?\nSwing down?\nSwing left?\nSwing right?\nBlock?\n=============================================================================================================\nThen player would pick one (hyperlinked). It wouldn't make a difference which one they picked, as each one would just have an &quot;If&quot; script stuck to it and that &quot;If&quot; script would be set to random chance. I don't actually want each fight to always be preset, because if people want to play the game a second time they would know which one to pick. I am just giving it a feel of involvement, even if the involving part is not actually there.\nP.S. I'm doing all this as a verb for each enemy, would there be an easier way to implement the combat mechanic? I mean can I use a menu or something just to have some hyperlinks on-screen, so exactly like the above except the options would be hyperlinked?\nP.P.S. I don't understand menus!  <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> How do I implement them using GUI and what do they do? <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> \nP.P.P.S. I can't use code, just GUI, but still keep posting code solutions if you want, because other people might be able to use that kind of stuff.\nThx again, Zepeus.",
      "EditableFormat": "bbcode",
      "HTML": "Actually, I have found out how to make it have a certain chance of doing something, so all I need now is to have some way of doing something like this;<br/>=============================================================================================================<br/>You enter combat with the nasty orc. Do you:<br/>Swing up?<br/>Swing down?<br/>Swing left?<br/>Swing right?<br/>Block?<br/>=============================================================================================================<br/>Then player would pick one (hyperlinked). It wouldn't make a difference which one they picked, as each one would just have an &quot;If&quot; script stuck to it and that &quot;If&quot; script would be set to random chance. I don't actually want each fight to always be preset, because if people want to play the game a second time they would know which one to pick. I am just giving it a feel of involvement, even if the involving part is not actually there.<br/>P.S. I'm doing all this as a verb for each enemy, would there be an easier way to implement the combat mechanic? I mean can I use a menu or something just to have some hyperlinks on-screen, so exactly like the above except the options would be hyperlinked?<br/>P.P.S. I don't understand menus!  <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> How do I implement them using GUI and what do they do? <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> <br/>P.P.P.S. I can't use code, just GUI, but still keep posting code solutions if you want, because other people might be able to use that kind of stuff.<br/>Thx again, Zepeus.",
      "PostDate": "2013-05-26T06:34:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24796",
      "UserId": 0,
      "Username": "Sora574",
      "UserAvatar": null,
      "UserGravatar": "5691c27a3aa3e56e879a3f8545b28ef2",
      "EditableText": "You can use [url=http&#58;//quest5&#46;net/wiki/ShowMenu:24rwwbnr]ShowMenu[/url:24rwwbnr] to give the player a list of options. If you want to make the list random, you could do something like\n[code:24rwwbnr]menulist = NewStringList()\nfightvariation = GetRandomInt(0, 1)\nif (fightvariation = 0) {\n  list add (menulist, &quot;Swing up&quot;)\n  fightvariation = GetRandomInt(0, 1)\n  if (fightvariation = 0) {\n    list add (menulist, &quot;Swing down&quot;)\n    fightvariation = GetRandomInt(0, 1)\n    if (fightvariation = 0) {\n      list add (menulist, &quot;Swing left&quot;)\n      fightvariation = GetRandomInt(0, 1)\n      if (fightvariation = 0) {\n        list add (menulist, &quot;Swing right&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing right&quot;)\n      }\n    }\n    else {\n      list add (menulist, &quot;Swing right&quot;)\n      fightvariation = GetRandomInt(1, 2)\n      if (fightvariation = 1) {\n        list add (menulist, &quot;Swing left&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing left&quot;)\n      }\n    }\n  }\n  else {\n    list add (menulist, &quot;Swing left&quot;)\n    fightvariation = GetRandomInt(1, 2)\n    if (fightvariation = 1) {\n      list add (menulist, &quot;Swing down&quot;)\n      fightvariation = GetRandomInt(1, 2)\n      if (fightvariation = 1) {\n        list add (menulist, &quot;Swing right&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing right&quot;)\n      }\n    }\n    else {\n      list add (menulist, &quot;Swing right&quot;)\n      fightvariation = GetRandomInt(2, 3)\n      if (fightvariation = 2) {\n        list add (menulist, &quot;Swing down&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing down&quot;)\n      }\n    }\n  }\n}\nelse {\n  list add (menulist, &quot;Swing down&quot;)\n  fightvariation = GetRandomInt(1, 2)\n  if (fightvariation = 1) {\n    list add (menulist, &quot;Swing up&quot;)\n    fightvariation = GetRandomInt(1, 2)\n    if (fightvariation = 1) {\n      list add (menulist, &quot;Swing left&quot;)\n      fightvariation = GetRandomInt(1, 2)\n      if (fightvariation = 1) {\n        list add (menulist, &quot;Swing right&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing right&quot;)\n      }\n    }\n    else {\n      list add (menulist, &quot;Swing right&quot;)\n      fightvariation = GetRandomInt(3, 4)\n      if (fightvariation = 3) {\n        list add (menulist, &quot;Swing left&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing left&quot;)\n      }\n    }\n  }\n  else {\n    list add (menulist, &quot;Swing left&quot;)\n    fightvariation = GetRandomInt(2, 3)\n    if (fightvariation = 2) {\n      list add (menulist, &quot;Swing up&quot;)\n      fightvariation = GetRandomInt(2, 3)\n      if (fightvariation = 2) {\n        list add (menulist, &quot;Swing right&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing right&quot;)\n      }\n    }\n    else {\n      list add (menulist, &quot;Swing right&quot;)\n      fightvariation = GetRandomInt(3, 4)\n      if (fightvariation = 3) {\n        list add (menulist, &quot;Swing up&quot;)\n        list add (menulist, &quot;Block&quot;)\n      }\n      else {\n        list add (menulist, &quot;Block&quot;)\n        list add (menulist, &quot;Swing up&quot;)\n      }\n    }\n  }\n}[/code:24rwwbnr]\nThen use\n[code:24rwwbnr]ShowMenu (&quot;You are in combat&#46;&quot;, menulist, false) {\n  if (result = &quot;Swing up&quot;) {\n    // Do something\n  }\n  if (result = &quot;Swing down&quot;) {\n    // Do something\n  }\n  // etc&#46;&#46;&#46;\n}[/code:24rwwbnr]\n\nP.S. There's probably an easier and more efficient way to make a list random, but that was the first idea that came to mind. The problem with my way is you have to add more numbers to get it completely random. With 2 numbers, the options will still stay in the general area, but they won't be exactly in the same place as any other time.",
      "EditableFormat": "bbcode",
      "HTML": "You can use <a href=\"http&#58;//quest5&#46;net/wiki/ShowMenu\" rel=\"nofollow\">ShowMenu</a> to give the player a list of options. If you want to make the list random, you could do something like<br/><pre><code>menulist = NewStringList()<br/>fightvariation = GetRandomInt(0, 1)<br/>if (fightvariation = 0) {<br/>  list add (menulist, &quot;Swing up&quot;)<br/>  fightvariation = GetRandomInt(0, 1)<br/>  if (fightvariation = 0) {<br/>    list add (menulist, &quot;Swing down&quot;)<br/>    fightvariation = GetRandomInt(0, 1)<br/>    if (fightvariation = 0) {<br/>      list add (menulist, &quot;Swing left&quot;)<br/>      fightvariation = GetRandomInt(0, 1)<br/>      if (fightvariation = 0) {<br/>        list add (menulist, &quot;Swing right&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing right&quot;)<br/>      }<br/>    }<br/>    else {<br/>      list add (menulist, &quot;Swing right&quot;)<br/>      fightvariation = GetRandomInt(1, 2)<br/>      if (fightvariation = 1) {<br/>        list add (menulist, &quot;Swing left&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing left&quot;)<br/>      }<br/>    }<br/>  }<br/>  else {<br/>    list add (menulist, &quot;Swing left&quot;)<br/>    fightvariation = GetRandomInt(1, 2)<br/>    if (fightvariation = 1) {<br/>      list add (menulist, &quot;Swing down&quot;)<br/>      fightvariation = GetRandomInt(1, 2)<br/>      if (fightvariation = 1) {<br/>        list add (menulist, &quot;Swing right&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing right&quot;)<br/>      }<br/>    }<br/>    else {<br/>      list add (menulist, &quot;Swing right&quot;)<br/>      fightvariation = GetRandomInt(2, 3)<br/>      if (fightvariation = 2) {<br/>        list add (menulist, &quot;Swing down&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing down&quot;)<br/>      }<br/>    }<br/>  }<br/>}<br/>else {<br/>  list add (menulist, &quot;Swing down&quot;)<br/>  fightvariation = GetRandomInt(1, 2)<br/>  if (fightvariation = 1) {<br/>    list add (menulist, &quot;Swing up&quot;)<br/>    fightvariation = GetRandomInt(1, 2)<br/>    if (fightvariation = 1) {<br/>      list add (menulist, &quot;Swing left&quot;)<br/>      fightvariation = GetRandomInt(1, 2)<br/>      if (fightvariation = 1) {<br/>        list add (menulist, &quot;Swing right&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing right&quot;)<br/>      }<br/>    }<br/>    else {<br/>      list add (menulist, &quot;Swing right&quot;)<br/>      fightvariation = GetRandomInt(3, 4)<br/>      if (fightvariation = 3) {<br/>        list add (menulist, &quot;Swing left&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing left&quot;)<br/>      }<br/>    }<br/>  }<br/>  else {<br/>    list add (menulist, &quot;Swing left&quot;)<br/>    fightvariation = GetRandomInt(2, 3)<br/>    if (fightvariation = 2) {<br/>      list add (menulist, &quot;Swing up&quot;)<br/>      fightvariation = GetRandomInt(2, 3)<br/>      if (fightvariation = 2) {<br/>        list add (menulist, &quot;Swing right&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing right&quot;)<br/>      }<br/>    }<br/>    else {<br/>      list add (menulist, &quot;Swing right&quot;)<br/>      fightvariation = GetRandomInt(3, 4)<br/>      if (fightvariation = 3) {<br/>        list add (menulist, &quot;Swing up&quot;)<br/>        list add (menulist, &quot;Block&quot;)<br/>      }<br/>      else {<br/>        list add (menulist, &quot;Block&quot;)<br/>        list add (menulist, &quot;Swing up&quot;)<br/>      }<br/>    }<br/>  }<br/>}</code></pre><br/>Then use<br/><pre><code>ShowMenu (&quot;You are in combat&#46;&quot;, menulist, false) {<br/>  if (result = &quot;Swing up&quot;) {<br/>    // Do something<br/>  }<br/>  if (result = &quot;Swing down&quot;) {<br/>    // Do something<br/>  }<br/>  // etc&#46;&#46;&#46;<br/>}</code></pre><br/><br/>P.S. There's probably an easier and more efficient way to make a list random, but that was the first idea that came to mind. The problem with my way is you have to add more numbers to get it completely random. With 2 numbers, the options will still stay in the general area, but they won't be exactly in the same place as any other time.",
      "PostDate": "2013-05-26T21:31:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24823",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "Don't understand code.  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "EditableFormat": "bbcode",
      "HTML": "Don't understand code.  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->",
      "PostDate": "2013-05-27T08:33:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24824",
      "UserId": 0,
      "Username": "Sora574",
      "UserAvatar": null,
      "UserGravatar": "5691c27a3aa3e56e879a3f8545b28ef2",
      "EditableText": "Err...\n\nOkay. I'll see if I can get to my computer and explain it with words later, but not right now.\nUnless someone beats me to it...",
      "EditableFormat": "bbcode",
      "HTML": "Err...<br/><br/>Okay. I'll see if I can get to my computer and explain it with words later, but not right now.<br/>Unless someone beats me to it...",
      "PostDate": "2013-05-27T12:37:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24825",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm unclear at exactly what you want, and combat is probably one of the most coding intensive and extensive aspects of game making. But here's a guess by me at what you want, lol.\n\nsince you're using the GUI~Editor mode, you probably don't want to make Verbs for every monster object of yours, so I'm going to show you how to make and use a Command (and functions, and parameters, too, as the command &quot;calls upon&quot; it).\n\nThough, feel free to make verbs too, all you got to do is for their script&#058; use &quot;call function&quot; -&gt; type in: fight_function and add parameters: game.pov and this (err, you may need to use: GetObject (this) in your verb code, ask someone on how to do it) \n\n-------------------------------------\n\nNote 1: This is for v5.4, so let me know if anything doesn't work if you're using v5.4.1\n\n&quot;Fight&quot; Command:\n\nNote: when playing the game, you type in the command pattern, which is: fight (monster_object), for example, type in: fight orc\n\ntop of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, and choose &quot;Command&quot;\n\n[b:2pgov89c]Command:[/b:2pgov89c]\nCommand (Tab)\nPattern: [Command Pattern]\nfight #object#\nName: fight_command\nUnresolved object text: \nScript&#058; Add new script -&gt; Scripts -&gt; Call function -&gt; Call function fight_function with parameters (Add, repeat): (1) game.pov and (2) object\n\n&quot;Fight&quot; Function:\n\ntop of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, choose &quot;Function&quot;, and name it: fight_function\n\nFunction (Tab)\nName: fight_function\nReturn Type: [NONE]\nParameters (Add, repeat): (1) self and (2) monster\nScript&#058; Add new script -&gt; \n\nargh... I had to do a lot of coding... it'll take too much time for me to try to explain~translate it to the GUI~Editor for you, so here's the game code, feel free to try it out (ask someone if you don't know how to do this), and examine it.\n\n******************************************************************\n\n[b:2pgov89c][u:2pgov89c][size=150:2pgov89c]MY GAME CODE[/size:2pgov89c][/u:2pgov89c][/b:2pgov89c]:\n\n[code:2pgov89c]&lt;!--Saved by Quest 5&#46;4&#46;4840&#46;17608--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n\t&lt;start type=&quot;script&quot;&gt;\n\t  msg (&quot;Type in&#58; fight orc&quot;)\n\t  wait {\n\t  }\n\t&lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;defaultplayer&quot; /&gt;\n      &lt;inherit name=&quot;character_type&quot; /&gt;\n      &lt;current_hit_points type=&quot;int&quot;&gt;999&lt;/current_hit_points&gt;\n      &lt;statusattributes type=&quot;stringdictionary&quot;&gt;\n        &lt;item&gt;\n          &lt;key&gt;current_hit_points&lt;/key&gt;\n          &lt;value&gt;HP&#58; !&lt;/value&gt;\n        &lt;/item&gt;\n      &lt;/statusattributes&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;monster_1&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;character_type&quot; /&gt;\n      &lt;alias&gt;orc&lt;/alias&gt;\n      &lt;physical_damage type=&quot;int&quot;&gt;100&lt;/physical_damage&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;fight_command&quot;&gt;\n    &lt;pattern&gt;fight #object#&lt;/pattern&gt;\n    &lt;script&gt;\n      fight_function (game&#46;pov,object)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;type name=&quot;character_type&quot;&gt;\n    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n    &lt;current_hit_points type=&quot;int&quot;&gt;0&lt;/current_hit_points&gt;\n    &lt;physical_damage type=&quot;int&quot;&gt;0&lt;/physical_damage&gt;\n  &lt;/type&gt;\n  &lt;function name=&quot;fight_function&quot; parameters=&quot;self, monster&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (monster = null) {\n      foreach (obj, AllObjects()) {\n        if (obj&#46;alias=monster) {\n          monster = obj\n        }\n        else {\n          msg (&quot;There's no &quot; + monster + &quot;in the vicinity&#46;&quot;)\n        }\n      }\n\t} else if (not Doesinherit (monster,&quot;character_type&quot;)) {\n      msg (&quot;You can not battle that!&quot;)\n    } else if (monster&#46;dead = true) {\n\t  msg (monster&#46;alias + &quot; is already dead&#46;&quot;)\n\t} else {\n      show menu (&quot;You enter combat with the nasty &quot; + monster&#46;alias +&quot;, what do you do?&quot;, split(&quot;Swing_Up;Swing_Down;Swing_Left;Swing_Right;Block&quot;,&quot;;&quot;), false) {\n        switch (result) {\n          case (&quot;Swing_Up&quot;) {\n            result = 1\n          }\n          case (&quot;Swing_Down&quot;) {\n            result = 2\n          }\n          case (&quot;Swing_Left&quot;) {\n            result = 3\n          }\n          case (&quot;Swing_Right&quot;) {\n            result = 4\n          }\n          case (&quot;Block&quot;) {\n            result = 5\n          }\n\t    }\n        value = GetRandomInt (1,5)\n        if (value = result) {\n          if (result=1) {\n            msg (&quot;You Swing_Up and kill the &quot; + monster&#46;alias +&quot;!&quot;)\n\t\t    monster&#46;dead = true\n          } else if (result=2) {\n            msg (&quot;You Swing_Down and kill the &quot; + monster&#46;alias +&quot;!&quot;)\n\t\t    monster&#46;dead = true\n          } else if (result=3) {\n            msg (&quot;You Swing_Left and kill the &quot; + monster&#46;alias +&quot;!&quot;)\n\t\t    monster&#46;dead = true\n          } else if (result=4) {\n            msg (&quot;You Swing_Right and kill the &quot; + monster&#46;alias +&quot;!&quot;)\n\t\t    monster&#46;dead = true\n          } else if (result=5) {\n            msg (&quot;You Block the &quot; + monster&#46;alias +&quot;'s attack!&quot;)\n            fight_function (self,monster)\n          }\n        } else if (result=5) {\n\t\t  msg (&quot;You fail to block the &quot; + monster&#46;alias +&quot;'s attack!&quot;)\n          self&#46;current_hit_points = self&#46;current_hit_points - monster&#46;physical_damage\n          msg (&quot;The &quot; + monster&#46;alias + &quot; hit you for &quot; + monster&#46;physical_damage + &quot; damage!&quot;)\n          if (self&#46;current_hit_points &lt;= 0) {\n            msg (monster&#46;alias + &quot; has killed you&#46;&quot;)\n\t\t    finish\n          } else {\n            fight_function (self,monster)\n          }\n\t\t} else {\n\t\t  msg (&quot;You miss with your attack!&quot;)\n          self&#46;current_hit_points = self&#46;current_hit_points - monster&#46;physical_damage\n          msg (&quot;The &quot; + monster&#46;alias + &quot; hit you for &quot; + monster&#46;physical_damage + &quot; damage!&quot;)\n          if (self&#46;current_hit_points &lt;= 0) {\n            msg (monster&#46;alias + &quot; has killed you&#46;&quot;)\n\t\t    finish\n          } else {\n            fight_function (self,monster)\n          }\n\t\t}\n      }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n&lt;/asl&gt;[/code:2pgov89c]\n\n*************************************************\n\nenjoy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\ntry making another monster object (you have to add in the inherited attribute: character_type, for you to be able to fight it, and you'll have to add in a &quot;physical_damage&quot; attribute amount for it to damage you, as the default value is otherwise zero), and type: fight (your monster's name or alias)",
      "EditableFormat": "bbcode",
      "HTML": "I'm unclear at exactly what you want, and combat is probably one of the most coding intensive and extensive aspects of game making. But here's a guess by me at what you want, lol.<br/><br/>since you're using the GUI~Editor mode, you probably don't want to make Verbs for every monster object of yours, so I'm going to show you how to make and use a Command (and functions, and parameters, too, as the command &quot;calls upon&quot; it).<br/><br/>Though, feel free to make verbs too, all you got to do is for their script&#058; use &quot;call function&quot; -&gt; type in: fight_function and add parameters: game.pov and this (err, you may need to use: GetObject (this) in your verb code, ask someone on how to do it) <br/><br/>-------------------------------------<br/><br/>Note 1: This is for v5.4, so let me know if anything doesn't work if you're using v5.4.1<br/><br/>&quot;Fight&quot; Command:<br/><br/>Note: when playing the game, you type in the command pattern, which is: fight (monster_object), for example, type in: fight orc<br/><br/>top of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, and choose &quot;Command&quot;<br/><br/><span style=\"font-weight:bold;\">Command:</span><br/>Command (Tab)<br/>Pattern: [Command Pattern]<br/>fight #object#<br/>Name: fight_command<br/>Unresolved object text: <br/>Script&#058; Add new script -&gt; Scripts -&gt; Call function -&gt; Call function fight_function with parameters (Add, repeat): (1) game.pov and (2) object<br/><br/>&quot;Fight&quot; Function:<br/><br/>top of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, choose &quot;Function&quot;, and name it: fight_function<br/><br/>Function (Tab)<br/>Name: fight_function<br/>Return Type: [NONE]<br/>Parameters (Add, repeat): (1) self and (2) monster<br/>Script&#058; Add new script -&gt; <br/><br/>argh... I had to do a lot of coding... it'll take too much time for me to try to explain~translate it to the GUI~Editor for you, so here's the game code, feel free to try it out (ask someone if you don't know how to do this), and examine it.<br/><br/>******************************************************************<br/><br/><span style=\"font-weight:bold;\"><span style=\"text-decoration:underline;\"><span style=\"font-size:150\">MY GAME CODE</span></span></span>:<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4840&#46;17608--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>\t&lt;start type=&quot;script&quot;&gt;<br/>\t  msg (&quot;Type in&#58; fight orc&quot;)<br/>\t  wait {<br/>\t  }<br/>\t&lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;defaultplayer&quot; /&gt;<br/>      &lt;inherit name=&quot;character_type&quot; /&gt;<br/>      &lt;current_hit_points type=&quot;int&quot;&gt;999&lt;/current_hit_points&gt;<br/>      &lt;statusattributes type=&quot;stringdictionary&quot;&gt;<br/>        &lt;item&gt;<br/>          &lt;key&gt;current_hit_points&lt;/key&gt;<br/>          &lt;value&gt;HP&#58; !&lt;/value&gt;<br/>        &lt;/item&gt;<br/>      &lt;/statusattributes&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;monster_1&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;character_type&quot; /&gt;<br/>      &lt;alias&gt;orc&lt;/alias&gt;<br/>      &lt;physical_damage type=&quot;int&quot;&gt;100&lt;/physical_damage&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;fight_command&quot;&gt;<br/>    &lt;pattern&gt;fight #object#&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      fight_function (game&#46;pov,object)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;type name=&quot;character_type&quot;&gt;<br/>    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>    &lt;current_hit_points type=&quot;int&quot;&gt;0&lt;/current_hit_points&gt;<br/>    &lt;physical_damage type=&quot;int&quot;&gt;0&lt;/physical_damage&gt;<br/>  &lt;/type&gt;<br/>  &lt;function name=&quot;fight_function&quot; parameters=&quot;self, monster&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (monster = null) {<br/>      foreach (obj, AllObjects()) {<br/>        if (obj&#46;alias=monster) {<br/>          monster = obj<br/>        }<br/>        else {<br/>          msg (&quot;There's no &quot; + monster + &quot;in the vicinity&#46;&quot;)<br/>        }<br/>      }<br/>\t} else if (not Doesinherit (monster,&quot;character_type&quot;)) {<br/>      msg (&quot;You can not battle that!&quot;)<br/>    } else if (monster&#46;dead = true) {<br/>\t  msg (monster&#46;alias + &quot; is already dead&#46;&quot;)<br/>\t} else {<br/>      show menu (&quot;You enter combat with the nasty &quot; + monster&#46;alias +&quot;, what do you do?&quot;, split(&quot;Swing_Up;Swing_Down;Swing_Left;Swing_Right;Block&quot;,&quot;;&quot;), false) {<br/>        switch (result) {<br/>          case (&quot;Swing_Up&quot;) {<br/>            result = 1<br/>          }<br/>          case (&quot;Swing_Down&quot;) {<br/>            result = 2<br/>          }<br/>          case (&quot;Swing_Left&quot;) {<br/>            result = 3<br/>          }<br/>          case (&quot;Swing_Right&quot;) {<br/>            result = 4<br/>          }<br/>          case (&quot;Block&quot;) {<br/>            result = 5<br/>          }<br/>\t    }<br/>        value = GetRandomInt (1,5)<br/>        if (value = result) {<br/>          if (result=1) {<br/>            msg (&quot;You Swing_Up and kill the &quot; + monster&#46;alias +&quot;!&quot;)<br/>\t\t    monster&#46;dead = true<br/>          } else if (result=2) {<br/>            msg (&quot;You Swing_Down and kill the &quot; + monster&#46;alias +&quot;!&quot;)<br/>\t\t    monster&#46;dead = true<br/>          } else if (result=3) {<br/>            msg (&quot;You Swing_Left and kill the &quot; + monster&#46;alias +&quot;!&quot;)<br/>\t\t    monster&#46;dead = true<br/>          } else if (result=4) {<br/>            msg (&quot;You Swing_Right and kill the &quot; + monster&#46;alias +&quot;!&quot;)<br/>\t\t    monster&#46;dead = true<br/>          } else if (result=5) {<br/>            msg (&quot;You Block the &quot; + monster&#46;alias +&quot;'s attack!&quot;)<br/>            fight_function (self,monster)<br/>          }<br/>        } else if (result=5) {<br/>\t\t  msg (&quot;You fail to block the &quot; + monster&#46;alias +&quot;'s attack!&quot;)<br/>          self&#46;current_hit_points = self&#46;current_hit_points - monster&#46;physical_damage<br/>          msg (&quot;The &quot; + monster&#46;alias + &quot; hit you for &quot; + monster&#46;physical_damage + &quot; damage!&quot;)<br/>          if (self&#46;current_hit_points &lt;= 0) {<br/>            msg (monster&#46;alias + &quot; has killed you&#46;&quot;)<br/>\t\t    finish<br/>          } else {<br/>            fight_function (self,monster)<br/>          }<br/>\t\t} else {<br/>\t\t  msg (&quot;You miss with your attack!&quot;)<br/>          self&#46;current_hit_points = self&#46;current_hit_points - monster&#46;physical_damage<br/>          msg (&quot;The &quot; + monster&#46;alias + &quot; hit you for &quot; + monster&#46;physical_damage + &quot; damage!&quot;)<br/>          if (self&#46;current_hit_points &lt;= 0) {<br/>            msg (monster&#46;alias + &quot; has killed you&#46;&quot;)<br/>\t\t    finish<br/>          } else {<br/>            fight_function (self,monster)<br/>          }<br/>\t\t}<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>*************************************************<br/><br/>enjoy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>try making another monster object (you have to add in the inherited attribute: character_type, for you to be able to fight it, and you'll have to add in a &quot;physical_damage&quot; attribute amount for it to damage you, as the default value is otherwise zero), and type: fight (your monster's name or alias)",
      "PostDate": "2013-05-27T13:30:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24862",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "<!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->",
      "EditableFormat": "bbcode",
      "HTML": "<!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->",
      "PostDate": "2013-05-28T06:34:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24863",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "Sorry about me not understanding this stuff, I haven't had much experience in the area of coding except I sometimes play around on a little app for the iPad called Codea... I've only had Quest for less than a month, and I haven't got much time for Quest during the week, so I'm [i:2opahkxk]a little bit[/i:2opahkxk]* daunted by all this stuff. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->\n*massively\nP.S. I've just gone up into high school this year, so don't make your expectations of me [i:2opahkxk]too[/i:2opahkxk] big.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry about me not understanding this stuff, I haven't had much experience in the area of coding except I sometimes play around on a little app for the iPad called Codea... I've only had Quest for less than a month, and I haven't got much time for Quest during the week, so I'm <span style=\"font-style:italic;\">a little bit</span>* daunted by all this stuff. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --><br/>*massively<br/>P.S. I've just gone up into high school this year, so don't make your expectations of me <span style=\"font-style:italic;\">too</span> big.",
      "PostDate": "2013-05-28T06:39:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24864",
      "UserId": 0,
      "Username": "Sora574",
      "UserAvatar": null,
      "UserGravatar": "5691c27a3aa3e56e879a3f8545b28ef2",
      "EditableText": "[quote=&quot;Zepeus&quot;:34rmg46e]P.S. I've just gone up into high school this year, so don't make your expectations of me [i:34rmg46e]too[/i:34rmg46e] big.[/quote:34rmg46e]\n*cough*.\n[quote=&quot;Zepeus&quot;:34rmg46e]Sorry about me not understanding this stuff, I haven't had much experience in the area of coding except I sometimes play around on a little app for the iPad called Codea... I've only had Quest for less than a month, and I haven't got much time for Quest during the week, so I'm [i:34rmg46e]a little bit[/i:34rmg46e]* daunted by all this stuff. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? -->\n*massively[/quote:34rmg46e]\nHonestly, Quest has one of the easier languages to learn...\nAt least, compared to this\n[code:34rmg46e]function echoMessage (message) {\n    $('#messageOutput')&#46;innerHTML = message;\n}[/code:34rmg46e]\nAnd then that needs to be linked to an HTML object with the ID 'messageOutput', which should probably be linked to other stuff...\nThen you have to use the function eventually.\nQuest does this automatically, to where all you have to do to show a message is\n[code:34rmg46e]msg (&quot;Hi&#46;&quot;)[/code:34rmg46e]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Zepeus wrote:</cite>P.S. I've just gone up into high school this year, so don't make your expectations of me <span style=\"font-style:italic;\">too</span> big.</blockquote><br/>*cough*.<br/><blockquote><cite>Zepeus wrote:</cite>Sorry about me not understanding this stuff, I haven't had much experience in the area of coding except I sometimes play around on a little app for the iPad called Codea... I've only had Quest for less than a month, and I haven't got much time for Quest during the week, so I'm <span style=\"font-style:italic;\">a little bit</span>* daunted by all this stuff. <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --><br/>*massively</blockquote><br/>Honestly, Quest has one of the easier languages to learn...<br/>At least, compared to this<br/><pre><code>function echoMessage (message) {<br/>    $('#messageOutput')&#46;innerHTML = message;<br/>}</code></pre><br/>And then that needs to be linked to an HTML object with the ID 'messageOutput', which should probably be linked to other stuff...<br/>Then you have to use the function eventually.<br/>Quest does this automatically, to where all you have to do to show a message is<br/><pre><code>msg (&quot;Hi&#46;&quot;)</code></pre>",
      "PostDate": "2013-05-28T07:00:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24886",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "np (no problem), I was totally new to quest some time ago myself and knew nothing of coding at all, and I'm well past my high school days... laughs. At least you know how to use all these ipads, ipods, tablets, and etc, lol. I don't, I can barely even use a cell phone! (Enjoy 4 years of hot highschool girls, or guys if you're a girl lol, hehe).\n\ncreate a new quest game, then at the top, find the button that looks like a piece of notepaper, it's between the &quot;play&quot; and &quot;? (help)&quot; buttons. This notepaper button, is a toggle (able to go back and forth via pressing it again and again) between the GUI~Editor (graphical user interface ~ Editor, ie the noob-friendly mode with stuff to click on and choose with drop down menus and etc) mode and the Code View (code) mode. In the Code View mode, highlight everything (ctrl+A), delete it, then paste (ctrl+V) into your now blank Code View mode, my game code in my previous post (by clicking the &quot;select all&quot; button and then copying it, via ctrl+C), save the game, and then start it up, and play with it (you can see what the code~stuff looks like in the GUI~Editor, which you'll see is a lot of work, whereas writing code, is so much easier and quicker, it's not really too hard to learn quest's code, and I'd be glad to help you with it, just let me know).\n\nI have it set up so that you choose the action, via the &quot;show menu&quot;, and then I randomly assign an &quot;A.I.&quot; action choice too, if your choice matches up with the &quot;A.I.&quot; 's choice, then you succeed (kill the monster, if it's one of the 4 attacks, or if it's the block, then the monster doesn't damage you, and the fight continues~repeats). You can look at the code of it, and~or you can look at it in the GUI~Editor, and hopefully start to learn it. Though, if you still need help to incorporate it into your own game, then let me know. Also, if this isn't what you wanted, then let me know, and explain what you want, so I can work on it for you.\n\n----------------\n\nyou can also view and edit the game directly in code, via simply opening up the file with notepad, wordpad, or notepad++\n\nI strongly recommend downloading notepad++ as it can really help you in trying to learn and write code, should~when ever you decide to do so, hehe.\n\nhere's the link: <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/news/notepad-6.3.3-release.html\">http://notepad-plus-plus.org/news/notep ... lease.html</a><!-- m -->\n\nenjoy! <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\n---------------\n\ndoes this make some sense to you, at least? :\n\nGUI-Editor Step-By-Step Instructions:\n\n&quot;Fight&quot; Command:\n\nNote: when playing the game, you type in the command pattern, which is: fight (monster_object), for example, type in: fight orc\n\ntop of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, and choose &quot;Command&quot;\n\nCommand:\nCommand (Tab)\nPattern: [Command Pattern]\nfight #object#\nName: fight_command\nUnresolved object text: \nScript&#058; Add new script -&gt; Scripts -&gt; Call function -&gt; Call function fight_function with parameters (Add, repeat): (1) game.pov and (2) object\n\nand this is the exact same thing, but it's in code...\n\nCode Step-By-Step Instructions:\n\n[code:1orvod6w]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,object)\n  &lt;/script&gt;\n&lt;/command&gt;[/code:1orvod6w]\n\ndo you see how the GUI-Editor stuff translates~matches~up to the Code stuff, and vice-versa?",
      "EditableFormat": "bbcode",
      "HTML": "np (no problem), I was totally new to quest some time ago myself and knew nothing of coding at all, and I'm well past my high school days... laughs. At least you know how to use all these ipads, ipods, tablets, and etc, lol. I don't, I can barely even use a cell phone! (Enjoy 4 years of hot highschool girls, or guys if you're a girl lol, hehe).<br/><br/>create a new quest game, then at the top, find the button that looks like a piece of notepaper, it's between the &quot;play&quot; and &quot;? (help)&quot; buttons. This notepaper button, is a toggle (able to go back and forth via pressing it again and again) between the GUI~Editor (graphical user interface ~ Editor, ie the noob-friendly mode with stuff to click on and choose with drop down menus and etc) mode and the Code View (code) mode. In the Code View mode, highlight everything (ctrl+A), delete it, then paste (ctrl+V) into your now blank Code View mode, my game code in my previous post (by clicking the &quot;select all&quot; button and then copying it, via ctrl+C), save the game, and then start it up, and play with it (you can see what the code~stuff looks like in the GUI~Editor, which you'll see is a lot of work, whereas writing code, is so much easier and quicker, it's not really too hard to learn quest's code, and I'd be glad to help you with it, just let me know).<br/><br/>I have it set up so that you choose the action, via the &quot;show menu&quot;, and then I randomly assign an &quot;A.I.&quot; action choice too, if your choice matches up with the &quot;A.I.&quot; 's choice, then you succeed (kill the monster, if it's one of the 4 attacks, or if it's the block, then the monster doesn't damage you, and the fight continues~repeats). You can look at the code of it, and~or you can look at it in the GUI~Editor, and hopefully start to learn it. Though, if you still need help to incorporate it into your own game, then let me know. Also, if this isn't what you wanted, then let me know, and explain what you want, so I can work on it for you.<br/><br/>----------------<br/><br/>you can also view and edit the game directly in code, via simply opening up the file with notepad, wordpad, or notepad++<br/><br/>I strongly recommend downloading notepad++ as it can really help you in trying to learn and write code, should~when ever you decide to do so, hehe.<br/><br/>here's the link: <!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/news/notepad-6.3.3-release.html\">http://notepad-plus-plus.org/news/notep ... lease.html</a><!-- m --><br/><br/>enjoy! <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>---------------<br/><br/>does this make some sense to you, at least? :<br/><br/>GUI-Editor Step-By-Step Instructions:<br/><br/>&quot;Fight&quot; Command:<br/><br/>Note: when playing the game, you type in the command pattern, which is: fight (monster_object), for example, type in: fight orc<br/><br/>top of screen (File ~ Edit ~ Add ~ Tools ~ Help), click on &quot;Add&quot;, and choose &quot;Command&quot;<br/><br/>Command:<br/>Command (Tab)<br/>Pattern: [Command Pattern]<br/>fight #object#<br/>Name: fight_command<br/>Unresolved object text: <br/>Script&#058; Add new script -&gt; Scripts -&gt; Call function -&gt; Call function fight_function with parameters (Add, repeat): (1) game.pov and (2) object<br/><br/>and this is the exact same thing, but it's in code...<br/><br/>Code Step-By-Step Instructions:<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;</code></pre><br/><br/>do you see how the GUI-Editor stuff translates~matches~up to the Code stuff, and vice-versa?",
      "PostDate": "2013-05-29T03:56:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24921",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "Yeah, I guess... So anyway, tell me how the commands work, because I know how to use commands like &quot;sleep&quot; or &quot;kill self&quot;, but I don't know about using commands for [i:25gs7sqv]all[/i:25gs7sqv] the monsters and enemies in the game.\nThx, Zepeus <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Yeah, I guess... So anyway, tell me how the commands work, because I know how to use commands like &quot;sleep&quot; or &quot;kill self&quot;, but I don't know about using commands for <span style=\"font-style:italic;\">all</span> the monsters and enemies in the game.<br/>Thx, Zepeus <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-05-31T06:24:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24925",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "So a verb is a special type of command that only works on objects that you set it to work on. i.e. you add the verb to the verb list of and object and write a specific script for each individual object.\n\nCommands on the other hand are more universal. You write a script for the command itself and that same script runs every time you use it. You've already said you know how to write commands that don't require objects, but you can write a script that does incorporate objects, usually by associating the script with objects that have a certain attribute. I'll give an example to illustrate what I mean.\n\nLet's say there are two types of enemies in your game, human soldiers, and fire throwing demons. You have a different combat system for each one, because they fight differently. Let's says you create a function for each one that governs the fighting but you want to use the same command (fight soldier or fight demon) to initiate the sequence. You would create a command using a command pattern like:\n\nfight #object#; attack #object#; kill #object#\n\nNow you need a script to direct what happens for any object that might be used in that command, whether it be &quot;fight demon&quot; or something nonsensical like &quot;attack flowers.&quot; First you need to define what objects can be fought within the game. So on every demon you create a boolean attribute called &quot;isdemon&quot; and set it to true. On every soldier you create an attribute called &quot;issoldier&quot; and set it to true. \n\nTo write the script, you just need to use the word object in place of any object, so you would write something like:\n\nif [expression] object.isdemon\n...then Call Function [fightdemon]\nelse it [expression] object.issoldier\n...then Call Function [fightsoldier]\nelse\n...Print Message &quot;There's no need to attack that.&quot;\n\n\nNote the use of the word &quot;object&quot; within the script. It's a placeholder for any object that the player enters in conjunction with the words &quot;fight,&quot; &quot;kill,&quot; or &quot;attack.&quot; If an object is not a solider or a demon, it won't let you attack it, if it is a soldier or a demon, it calls the appropriate combat script.\n\nNow this is a relatively simple example, as you could achieve the same thing by creating a verb &quot;fight&quot; for every demon and soldier. But hopefully it illustrates the concept of slotting the object into the command script, rather than the way verbs slot the script into an object.\n\nYou can also have multiple objects in the command pattern, you just need to differentiate them between the #hashes#. e.g.\n\nfight #object1# using #object2#\n\nAll you need to do is use object1 and object2 in the script to refer to them and define the conditions for each.\n\nAs things get more complicated and you have multiple attributes you want to add for different kinds of enemies, you can see how this way becomes much more efficient. This is especially true when used in conjunction with object types, which are an easy way of setting multiple attributes across many objects that will be similar in a particular way.\n\nI'll give you another example of a command script from my game, although credit goes to sonic102 for explaining how to do it when I was first getting to grips with commands. In Quest, you can set a container to be lockable and also select an object as the key for it. Although you can set it to unlock automatically if you have the key, or use the command &quot;unlock object,&quot; you can't use the phrase &quot;unlock object with key.&quot; Quest prints an error saying it can't see an object called &quot;object with key.&quot; This command lets you use that phrase.\n\nCommand Pattern:\nunlock #object_unlock# with #object2#; unlock #object_unlock# using #object2#\n\n[code:2q2orp0w]if (HasAttribute (object_unlock, &quot;locked&quot;)) {\n  if (object_unlock&#46;key = object2) {\n    set (object_unlock, &quot;locked&quot;, False)\n    msg (object_unlock&#46;unlockmessage)\n    do (object_unlock, &quot;onunlock&quot;)\n  }\n  else {\n    msg (object2&#46;article + &quot; doesn't fit in the keyhole&#46;&quot;)\n  }\n}\nelse {\n  msg (object_unlock&#46;article + &quot; is not locked&#46;&quot;)\n}[/code:2q2orp0w]\n\nIn this example there are two objects. The locked object referred to as &quot;object_unlock&quot; and the key, referred to as &quot;object2.&quot; Lets say the player types &quot;unlock box using silver key&quot;. \n\nFirst it checks if the object you're trying to unlock is indeed locked.\n[code:2q2orp0w]if (HasAttribute (object_unlock, &quot;locked&quot;))[/code:2q2orp0w]\nIf it's not, it prints a message you tell you so. Let's say &quot;box&quot; is locked.\n\nIt then checks if the second object in the sentence to see if it's the correct key.\n[code:2q2orp0w]if (object_unlock&#46;key = object2)[/code:2q2orp0w]\nSo the object_unlock &quot;box&quot; does have an attribute called key which corresponds to the object2, &quot;silver key.&quot; Because this is true then the regular script for unlocking an object is run.\n\nThis is much more efficient than adding a verb that requires an object on every locked box, because make a box lockable and choosing a key sets the attributes that are used by the script. No hassle finding every object it needs to apply to, because it applies universally to all objects in the game and does different things based on their attributes.",
      "EditableFormat": "bbcode",
      "HTML": "So a verb is a special type of command that only works on objects that you set it to work on. i.e. you add the verb to the verb list of and object and write a specific script for each individual object.<br/><br/>Commands on the other hand are more universal. You write a script for the command itself and that same script runs every time you use it. You've already said you know how to write commands that don't require objects, but you can write a script that does incorporate objects, usually by associating the script with objects that have a certain attribute. I'll give an example to illustrate what I mean.<br/><br/>Let's say there are two types of enemies in your game, human soldiers, and fire throwing demons. You have a different combat system for each one, because they fight differently. Let's says you create a function for each one that governs the fighting but you want to use the same command (fight soldier or fight demon) to initiate the sequence. You would create a command using a command pattern like:<br/><br/>fight #object#; attack #object#; kill #object#<br/><br/>Now you need a script to direct what happens for any object that might be used in that command, whether it be &quot;fight demon&quot; or something nonsensical like &quot;attack flowers.&quot; First you need to define what objects can be fought within the game. So on every demon you create a boolean attribute called &quot;isdemon&quot; and set it to true. On every soldier you create an attribute called &quot;issoldier&quot; and set it to true. <br/><br/>To write the script, you just need to use the word object in place of any object, so you would write something like:<br/><br/>if [expression] object.isdemon<br/>...then Call Function [fightdemon]<br/>else it [expression] object.issoldier<br/>...then Call Function [fightsoldier]<br/>else<br/>...Print Message &quot;There's no need to attack that.&quot;<br/><br/><br/>Note the use of the word &quot;object&quot; within the script. It's a placeholder for any object that the player enters in conjunction with the words &quot;fight,&quot; &quot;kill,&quot; or &quot;attack.&quot; If an object is not a solider or a demon, it won't let you attack it, if it is a soldier or a demon, it calls the appropriate combat script.<br/><br/>Now this is a relatively simple example, as you could achieve the same thing by creating a verb &quot;fight&quot; for every demon and soldier. But hopefully it illustrates the concept of slotting the object into the command script, rather than the way verbs slot the script into an object.<br/><br/>You can also have multiple objects in the command pattern, you just need to differentiate them between the #hashes#. e.g.<br/><br/>fight #object1# using #object2#<br/><br/>All you need to do is use object1 and object2 in the script to refer to them and define the conditions for each.<br/><br/>As things get more complicated and you have multiple attributes you want to add for different kinds of enemies, you can see how this way becomes much more efficient. This is especially true when used in conjunction with object types, which are an easy way of setting multiple attributes across many objects that will be similar in a particular way.<br/><br/>I'll give you another example of a command script from my game, although credit goes to sonic102 for explaining how to do it when I was first getting to grips with commands. In Quest, you can set a container to be lockable and also select an object as the key for it. Although you can set it to unlock automatically if you have the key, or use the command &quot;unlock object,&quot; you can't use the phrase &quot;unlock object with key.&quot; Quest prints an error saying it can't see an object called &quot;object with key.&quot; This command lets you use that phrase.<br/><br/>Command Pattern:<br/>unlock #object_unlock# with #object2#; unlock #object_unlock# using #object2#<br/><br/><pre><code>if (HasAttribute (object_unlock, &quot;locked&quot;)) {<br/>  if (object_unlock&#46;key = object2) {<br/>    set (object_unlock, &quot;locked&quot;, False)<br/>    msg (object_unlock&#46;unlockmessage)<br/>    do (object_unlock, &quot;onunlock&quot;)<br/>  }<br/>  else {<br/>    msg (object2&#46;article + &quot; doesn't fit in the keyhole&#46;&quot;)<br/>  }<br/>}<br/>else {<br/>  msg (object_unlock&#46;article + &quot; is not locked&#46;&quot;)<br/>}</code></pre><br/><br/>In this example there are two objects. The locked object referred to as &quot;object_unlock&quot; and the key, referred to as &quot;object2.&quot; Lets say the player types &quot;unlock box using silver key&quot;. <br/><br/>First it checks if the object you're trying to unlock is indeed locked.<br/><pre><code>if (HasAttribute (object_unlock, &quot;locked&quot;))</code></pre><br/>If it's not, it prints a message you tell you so. Let's say &quot;box&quot; is locked.<br/><br/>It then checks if the second object in the sentence to see if it's the correct key.<br/><pre><code>if (object_unlock&#46;key = object2)</code></pre><br/>So the object_unlock &quot;box&quot; does have an attribute called key which corresponds to the object2, &quot;silver key.&quot; Because this is true then the regular script for unlocking an object is run.<br/><br/>This is much more efficient than adding a verb that requires an object on every locked box, because make a box lockable and choosing a key sets the attributes that are used by the script. No hassle finding every object it needs to apply to, because it applies universally to all objects in the game and does different things based on their attributes.",
      "PostDate": "2013-05-31T09:19:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24936",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;Zepeus&quot;:2n136tv1]Yeah, I guess... So anyway, tell me how the commands work, because I know how to use commands like &quot;sleep&quot; or &quot;kill self&quot;, but I don't know about using commands for [i:2n136tv1]all[/i:2n136tv1] the monsters and enemies in the game.\nThx, Zepeus <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:2n136tv1]\n\nTHIS IS MOSTLY THEORY, trying to explain so you hopefully start to understand what, how, and~or why is going on with what you're doing.\n\nAt the very bottom, I'll give you the actual code (correct format and syntax) of stuff that you can copy, paste, and use within your games.\n\ncommands (and functions too) is(are) often used as a general term(s), which is very confusing for people new to coding. So, don't confuse these generalized usages of &quot;commands&quot; (and &quot;functions&quot;) with the actual COMMANDS (and FUNCTIONS) in quest.\n\nas stated~explained by Liam:\n\nVERBS act upon only that object. This individual usage is known as &quot;local&quot;-ness. (You've probably come across &quot;local&quot; variables or attributes in your readings on here. This means that they only apply to the script that they are within. To make a variable or attribute &quot;universal&quot;, to be able to still use it outside of the script that it was made within, you must attach~assign it to something permanent, such as objects ~ well objects that don't get removed or destroyed, lol). So, if you want to do an action beyond a single individual object, you create...\n\nCOMMANDS are &quot;universal&quot; verbs, they require extra coding in order for them to operate on whatever you want them to do so. Also, unlike Verbs, Commands are only activated by the game player~user literally typing in its &quot;pattern&quot;, there's no buttons or hyperlinks to click on for Commands. In the GUI~Editor, you access (i.e. create~add) commands via the very top bar of: File ~ ??? ~ Add ~ ??? ~ Help, through the &quot;Add&quot; option. Commands are not attributes attached to an object, like verbs are as~via a tab you click on for that specific and only object in the GUI~Editor. Commands are coding~script, script blocks, like Functions.\n\n----------------\n\nI personally like to keep my Commands without the script blocks directly inside of them, instead using Functions for containing the huge script blocks (as functions are powerful too; good for doing complex stuff). Hopefully I can explain this so that it will make sense for you as you're still new to quest, and especially with coding (I'm going to use code, as it's just a lot easier and faster in trying to explain than with the GUI~Editor, that takes a lot of work, which I'd be glad to do for you, though when I've got the time to do so, which isn't right now, lol). And, by using functions for the script blocks, I can keep my Command's patterns (what you the user~player in game has to type in to activate the command) very short, as I hate writing~typing out more than I have too, lol.\n\nso this is how I do this stuff, for examples:\n\nCommands (in Code form):\n\n[code:2n136tv1]&lt;command name=&quot;help_command&quot;&gt;\n  &lt;pattern&gt;help&lt;/pattern&gt;\n  &lt;script&gt;\n    help_function\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;fight #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text) // or&#58; fight_function (game&#46;pov,object)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;equip_command&quot;&gt;\n  &lt;pattern&gt;equip #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;equip #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    equip_function (text) // or&#58; equip_function (object)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;goto_command&quot;&gt;\n  &lt;pattern&gt;goto #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;goto #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    goto_function (text) // or&#58; goto_function (object)\n  &lt;/script&gt;\n&lt;/command&gt;\n\netc etc etc commands[/code:2n136tv1]\n\nextremely useful coding (means of organization:note making) stuff in general:\n\nIf you used any libraries, you've probably noticed this coding~scripting stuff:\n\nthe ' // ' tells the game engine, that everything to the right of this are your comments (which will show up in the GUI~Editor as green text; uber sweet!), and is not coding for it to execute~do~run.\n\n' &lt;!-- (your comments) --&gt; ' this does the same thing as the ' // ', but unfortunately, it does not show up in your GUI~Editor.\n\nand it can also be done in this format too:\n\n&lt;!--\n(your comments)\n--&gt;\n\nabout the Command in code form:\n\n&lt;command name=&quot;(its name)&quot;&gt; // the name of the Command; NAME attributes are used for the game engine to identify it. Think of NAME attributes as a car's license plate or your SS# or Driver's ID card, and the game engine is the government which uses these things to identify you as you (or not as you, lol).\n\n&lt;pattern&gt;(your &quot;pattern&quot;)&lt;/pattern&gt; // this is how (and what operation) that the game player~user must type in, in order to activate the command. for example for: ' &lt;pattern&gt;fight #text#&lt;/pattern&gt; ' the game player~user has to type in: fight orc, in this case, the &quot;orc&quot; input is recognized as &quot;text&quot; by the game engine (due to your use of, #text#, in the pattern). If #object# is used instead, than the &quot;orc&quot; would be recognized as an object by the game engine. I'll explain this further later on, as there's a very big difference.\n\n&lt;script&gt; // what you put below this (&lt;script&gt;), is what is done by the command. In my examples, I'm choosing to just using a single script line, call function (as it is known in the GUI~Editor choice), which is done in code, by simple typing in the NAME attribute of the function, which for my examples are, ' help_function ' or ' fight_function ' or ' equip_function ' or ' goto_function ', as my~those functions will contain the actual full script stuff of what and how I want my commands to do their stuff.\n\n&lt;/script&gt; // this tells the game engine that, that script has come to an end\n\n&lt;/command&gt; // this tells the game engine that, that command has come to an end\n\nnow, about the command pattern's choices, between #text# or #object# :\n\nas mention: #text# tells the game engine that whatever the game player~user types in, it is to be recognized as text (a string) and #object# tells the game engine that whatever the game player~user types in, it is to be recognized as an object.\n\nThis matters greatly, as if you use #object#, whatever is typed in, must be an actual (existing) object in the game, as that is what the game engine will be searching for: an object with that NAME attribute that the game player~user types in, such as my example of: orc. So, if there's no actual object NAMED &quot;orc&quot;, the command will not be able to do what you made it for doing. If you use #text#, then likewise, if you want your Command to act upon an object, it won't be able to as well, as remember that the game engine will search for text (a string) called &quot;orc&quot;, but it won't ever actually GET the actual object (as it's not looking for an object) for you to do your action~stuff~command~function~script upon it. The game engine must actually GET the OBJECT, for it to then do stuff to the object. This may not be the best analogy, but think of it in terms of copy and paste. If you don't COPY (GET~STORE~SAVE~HAVE) the text, then the computer can't then paste (an action on) it. Well the same is true with quest's objects, you have to have the quest game engine GET the object, for it to be able to do an action upon that object. Text (a string) is not an object. So, if quest is searching (GETTING) for text (#text#), it's not searching for an object (#object#).\n\nNow, that I've confused you deeply, lol, here's an example of it in action and how to deal with it:\n\n[code:2n136tv1]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;\n  enemy=GetObject(text)\n&lt;/function&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;inherited name=&quot;editor_object&quot;/&gt;\n&lt;/object&gt;[/code:2n136tv1]\n\nwe dealt with this by using this added script~code line: enemy=GetObject(text)\n\nand here's it explained step by step:\n\n1. the game player~user types in: fight orc\n2. the command, fight_command, 's pattern of, fight #text#, tells the game engine to search (GET) for &quot;orc&quot; as TEXT (STRING)\n3. but even if there was an &quot;orc&quot; as text (string), the command (and function) would be useless.\n4. so we have to tell the game engine to get the OBJECT, which is done by: enemy=GetObject(text). The ' GetObject ' code, tells the game engine to search (GET) for an OBJECT (whereas it was priorly searching for text, a string, from the command's pattern's #text#). The (text) is what thing that the game engine will search (and GET, if it exists) for as its OBJECT, which is the &quot;orc&quot;. So, now it utilizes the command's searching for the text of &quot;orc&quot;, so the command's searching for the text wasn't actually pointless, to find what will be its OBJECT. The game engine finds the &quot;orc&quot; text (string) in: &lt;object name=&quot;orc&quot;&gt;, as the, =&quot;orc&quot;, is a text (string) type of attribute. Then, it finally sets the OBJECT.ORC as &quot;enemy&quot;, and being an actual GOTTEN OBJECT, the unwritten~missing (,so the, pretending,) rest of the coding~scripting by me lol, can now act upon it.\n\nnow, if we used #object#, then we wouldn't need the, GetObject(text), as the #object# does the same thing as the &quot;GetObject&quot;\n\nYou may be asking then why ever use the #text#, well there's many cases of why this can be useful and~or needed too. One example is with dialogue (such as conversation topics). Though, it's a bit too hard to explain, why else you might or need to use #text#, and I'm already writing so much already, lol. But, most often, you'll just want to use #object#, do to actions upon objects.\n\nhopefully, you can understand functions in code, a bit now, as they're far too extensive to even begin to try to explain everything (all the coding) that they can do, lol.\n\nhowever, you may have noticed the ' fight_function (game.pov,object or text) ' in the command ' fight_command ', and the ' parameters=&quot;game.pov,text or object&quot; in the function ' fight_function ', so on to explaining parameters:\n\nparameters are what things you acting upon, for example:\n\n[code:2n136tv1]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text or object)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;\n  enemy=GetObject(text)\n&lt;/function&gt;[/code:2n136tv1]\n\nin the Command: two things will be used: (game.pov) and (text or object)\n\n&quot;game.pov&quot; GETS &quot;you&quot; (the currently controlled Player Object), such as the (default) &quot;player&quot; Player Object, and SETS it as &quot;THING_#1&quot;\n\nthe &lt;pattern&gt;(its pattern)&lt;/pattern&gt; SETS what is typed in by the game player~user as the &quot;text&quot; or &quot;object&quot;, which then the...\n\n&quot;text or object&quot; GETS, such as my example of &quot;orc&quot;, and SETS it as &quot;THING_#2&quot;\n\nnow about parameters' format~syntax:\n\n&quot;THING_#1,THING_#2,THING_#3,etc&quot;\n\nthis does not change, from the Command's parameter's in its script line ' fight_function (game.pov,text or object) ', to the Function's parameter's script line ' &lt;function name=&quot;fight_function&quot; parameters=&quot;game.pov,text or object&quot;&gt; '.\n\nthe &quot;orc&quot; (as text or object) is SET as THING_#1, due to it's position as first. After the initial~first parameter setting in the Command, the labels for the parameters don't matter.\n\nlet me explain by direct example:\n\n[code:2n136tv1]default player object is currently controlled\ngame player~user types in&#58; fight orc\n\n&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (player,orc)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;player,orc&quot;&gt;\n  enemy_object_orc=GetObject(parameter_label_orc)\n  object_name_player=parameter_label_player\n&lt;/function&gt;[/code:2n136tv1]\n\nnow, let's change the non-initial parameter labels, but it results (things) still doesn't change: player and orc\n\n[code:2n136tv1]default player object is currently controlled\ngame player~user types in&#58; fight orc\n\n&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text or object)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;self,target&quot;&gt;\n  enemy_object_orc=GetObject(parameter_label_target)\n  object_name_player=parameter_label_self\n  fight_function_2\n&lt;/function&gt;\n\nand still no change, for the CALLED, fight_function_2&#58;\n\n&lt;function name=&quot;fight_function_two&quot; parameters=&quot;target,self&quot;&gt;\n  enemy_object_orc=GetObject(parameter_label_self)\n  object_name_player=parameter_label_target\n&lt;/function&gt;[/code:2n136tv1]\n\nso, only the POSITION~ORDER (&quot;THING_#1,THING_#2,THING_#3,etc&quot;) is transfered from one parameter stringlist to another parameter stringlist.\n\nparameter stringlist 1 = fight_function (THING_#1,THING_#2,THING_#3,etc)\nparameter stringlist 2 = &lt;function name=&quot;fight_function&quot; paramaters=&quot;THING_#1,THING_#2,THING_#3,etc&quot;\nparameter stringlist 3 = &lt;function name=&quot;fight_function_2&quot; paramaters=&quot;THING_#1,THING_#2,THING_#3,etc&quot;\n\nthe leftmost item in the parameter stringlists is ALWAYS &quot;THING_#1&quot;, which in my example is: game.pov\nthe rightmost item (thing_#2, as we've only got two items in my example) is ALWAYS &quot;THING_#2&quot;, which in my example is: orc\n\nIn parameter stringlists 2 and 3, I can label the &quot;thing_#1&quot; and &quot;thing_02&quot; as whatever I want (for each of the 2 stringlists), but that has no effect on the game engine in having~setting~using that position 1 is game.pov and position 2 is orc\n\nhowever, the parameter stringlist 1 (and in this case, the command's pattern too), DOES SET what are the actual items to be used throughout the transfer of them from parameter stringlist to parameter stringlist.\n\n-------------------\n\nunfortunately, we're still not done yet, with commands, lol.\n\nan entirely different problem is that &quot;GETTING AN OBJECT&quot;, does so, only via its NAME attribute.\n\nso, for example, here's a problem case:\n\n[code:2n136tv1]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;\n  enemy=GetObject(text)\n&lt;/function&gt;\n\n&lt;object name=&quot;red_orc_1&quot;&gt;\n  &lt;inherited name=&quot;editor_object&quot;/&gt;\n  &lt;alias&gt;orc&lt;/alias&gt;\n&lt;/object&gt;[/code:2n136tv1]\n\nthe ' GetObject ' will fail, because the game player~user sees the object's ALIAS, &quot;orc&quot;, which he~she will type in: fight orc. But, the ' GetObject ' code tells the game engine to search for a NAME attribute of &quot;orc&quot;. Notice that there's no NAME attribute of &quot;orc&quot;, and so it fails to GET the orc object, because the orc object's NAME is &quot;red_orc_1&quot; and not &quot;orc&quot;. So, to fix the problem of using ALIASES, we've got to add these code~script lines in:\n\nnull = game engine couldn't find it (though this isn't the only usage or meaning of &quot;null&quot;)\n\n[code:2n136tv1]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;\n  enemy=GetObject(text)\n  if enemy=null {\n    foreach (obj,AllObjects()) {\n      if (obj&#46;alias=text) {\n        enemy = obj\n      }\n    }\n  }\n&lt;/function&gt;\n\n&lt;object name=&quot;red_orc_1&quot;&gt;\n  &lt;inherited name=&quot;editor_object&quot;/&gt;\n  &lt;alias&gt;orc&lt;/alias&gt;\n&lt;/object&gt;[/code:2n136tv1]\n\ndid you spot the new code lines?\n\nthey're:\n\n[code:2n136tv1]  if enemy=null {\n    foreach (obj,AllObjects()) {\n      if (obj&#46;alias=text) {\n        enemy = obj\n      }\n    }\n  }[/code:2n136tv1]\n\nthis is what is going on here:\n\n1. if there's no found object with the NAME of &quot;orc&quot;, then...\n2. search through all of the objects in the entire game, and &quot;For Each&quot; of those objects (labeled as &quot;obj&quot;)...\n3. if the object &quot;obj&quot; (i.e. any and each object from the searching of the entire game for all of its objects) 's ALIAS is &quot;orc&quot;, then...\n4. set that &quot;obj&quot; as~to &quot;enemy&quot; (the game engine will now finally recognize any usage of &quot;enemy&quot; as the &quot;red_orc_1&quot; object)\n\n-----------------------------------------------\n\nhere's an example of &quot;my&quot; (ALL Credit goes to Pertex as I used his~her code structure, it's not really my code, lol) combat code (cleaned up by Pertex), it will be very daunting for you (and was very daunting for me, wow did I get a HIGH when I finally got it to work, hehe), but maybe if I've done well in explaining all this stuff, you might be able to understand at least some parts of it, lol. And feel free to use (or play, lol) it too!\n\nit's old, so it's v5.3, and it may need some tinkering, to get it to work for 5.4, ask anyone who knows the changes to 5.4 and~or how to code well here, and it probably won't be too hard for them to convert it to being usable with v5.4 for you. The very least change is simply to change the first line of ' &lt;asl version=&quot;530&quot;&gt; ' to ' &lt;asl version=&quot;540&quot;&gt; '\n\n[code:2n136tv1]    &lt;asl version=&quot;530&quot;&gt;\n      &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n      &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n      &lt;game name=&quot;Test&quot;&gt;\n        &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n        &lt;version&gt;1&#46;0&lt;/version&gt;\n        &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;\n        &lt;start type=&quot;script&quot;&gt;\n          cc\n        &lt;/start&gt;\n        &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n        &lt;statusattributes type=&quot;stringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;\n      &lt;/game&gt;\n      &lt;object name=&quot;room&quot;&gt;\n        &lt;inherit name=&quot;editor_room&quot; /&gt;\n        &lt;object name=&quot;player&quot;&gt;\n          &lt;inherit name=&quot;defaultplayer&quot; /&gt;\n          &lt;inherit name=&quot;pc&quot; /&gt;\n          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;\n          &lt;str type=&quot;int&quot;&gt;100&lt;/str&gt;\n          &lt;end type=&quot;int&quot;&gt;100&lt;/end&gt;\n          &lt;dex type=&quot;int&quot;&gt;100&lt;/dex&gt;\n          &lt;agi type=&quot;int&quot;&gt;100&lt;/agi&gt;\n          &lt;spd type=&quot;int&quot;&gt;100&lt;/spd&gt;\n          &lt;hc type=&quot;int&quot;&gt;100&lt;/hc&gt;\n          &lt;pd type=&quot;int&quot;&gt;100&lt;/pd&gt;\n          &lt;pr type=&quot;int&quot;&gt;100&lt;/pr&gt;\n        &lt;/object&gt;\n        &lt;object name=&quot;orc1&quot;&gt;\n          &lt;inherit name=&quot;editor_object&quot; /&gt;\n          &lt;inherit name=&quot;npc&quot; /&gt;\n          &lt;hostile type=&quot;boolean&quot;&gt;true&lt;/hostile&gt;\n          &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n          &lt;alias&gt;orc&lt;/alias&gt;\n          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;\n          &lt;str type=&quot;int&quot;&gt;25&lt;/str&gt;\n          &lt;end type=&quot;int&quot;&gt;25&lt;/end&gt;\n          &lt;dex type=&quot;int&quot;&gt;25&lt;/dex&gt;\n          &lt;agi type=&quot;int&quot;&gt;25&lt;/agi&gt;\n          &lt;spd type=&quot;int&quot;&gt;25&lt;/spd&gt;\n          &lt;hc type=&quot;int&quot;&gt;25&lt;/hc&gt;\n          &lt;pd type=&quot;int&quot;&gt;25&lt;/pd&gt;\n          &lt;pr type=&quot;int&quot;&gt;25&lt;/pr&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;turnscript name=&quot;game_turns&quot;&gt;\n        &lt;enabled /&gt;\n        &lt;script&gt;\n          sa\n          game&#46;turns = game&#46;turns + 1\n        &lt;/script&gt;\n      &lt;/turnscript&gt;\n      &lt;command name=&quot;fight&quot;&gt;\n        &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n        &lt;script&gt;\n          battle_system (game&#46;pov,text)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;type name=&quot;char&quot;&gt;\n        &lt;cur_hp type=&quot;int&quot;&gt;0&lt;/cur_hp&gt;\n        &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;\n        &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n        &lt;max_hp type=&quot;int&quot;&gt;0&lt;/max_hp&gt;\n        &lt;str type=&quot;int&quot;&gt;0&lt;/str&gt;\n        &lt;end type=&quot;int&quot;&gt;0&lt;/end&gt;\n        &lt;dex type=&quot;int&quot;&gt;0&lt;/dex&gt;\n        &lt;agi type=&quot;int&quot;&gt;0&lt;/agi&gt;\n        &lt;spd type=&quot;int&quot;&gt;0&lt;/spd&gt;\n        &lt;hp type=&quot;int&quot;&gt;0&lt;/hp&gt;\n        &lt;hc type=&quot;int&quot;&gt;0&lt;/hc&gt;\n        &lt;pd type=&quot;int&quot;&gt;0&lt;/pd&gt;\n        &lt;pr type=&quot;int&quot;&gt;0&lt;/pr&gt;\n      &lt;/type&gt;\n      &lt;type name=&quot;pc&quot;&gt;\n        &lt;inherit name=&quot;char&quot; /&gt;\n        &lt;statusattributes type=&quot;stringdictionary&quot;&gt;hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = &lt;/statusattributes&gt;\n      &lt;/type&gt;\n      &lt;type name=&quot;npc&quot;&gt;\n        &lt;inherit name=&quot;char&quot; /&gt;\n        &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n        &lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n        &lt;displayverbs type=&quot;list&quot;&gt;Look at; Talk; Fight&lt;/displayverbs&gt;\n      &lt;/type&gt;\n      &lt;function name=&quot;cc&quot;&gt;\n        msg (&quot;What is your name?&quot;)\n        get input {\n          game&#46;pov&#46;alias = result\n          msg (&quot; - &quot; + game&#46;pov&#46;alias)\n          show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {\n            game&#46;pov&#46;gender = result\n            show menu (&quot;What is your race?&quot;, split (&quot;human;dwarf;elf&quot; , &quot;;&quot;), false) {\n              game&#46;pov&#46;race = result\n              show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {\n                game&#46;pov&#46;class = result\n                msg (game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class + &quot;&#46;&quot;)\n                wait {\n                  ClearScreen\n\t\t\t\t  \n                }\n              }\n            }\n          }\n        }\n      &lt;/function&gt;\n      &lt;function name=&quot;sa&quot;&gt;\n        game&#46;pov&#46;hp = game&#46;pov&#46;cur_hp + &quot; / &quot; + game&#46;pov&#46;max_hp\n      &lt;/function&gt;\n      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;\n        enemy = GetObject (text)\n        if (enemy = null) {\n          foreach (obj,AllObjects()) {\n            if (obj&#46;alias=text) {\n              enemy = obj\n            }\n          }\n        }\n        if (enemy = null) {\n          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)\n        }\n        else if (not Doesinherit (enemy,&quot;npc&quot;)) {\n          msg (&quot;You can not battle that!&quot;)\n        }\n        else if (not npc_reachable (enemy)) {\n          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)\n        }\n        else {\n\t\t\tbattle_sequence (self,enemy)\n    \t} \n\n      &lt;/function&gt;\n      &lt;function name=&quot;battle_sequence&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif (enemy&#46;dead = false) {\n\t\t\tplayerfirst=false\n\t\t\tif (GetInt (self,&quot;spd&quot;) &gt; GetInt (enemy,&quot;spd&quot;)) {\n\t\t\t\tplayerfirst=true\n\t\t\t} else if (GetInt (self,&quot;spd&quot;) = GetInt (enemy,&quot;spd&quot;) and RandomChance (50)) {\n\t\t\t\tplayerfirst=true\n\t\t\t}   \t\t  \n\t\t\t\n\t\t\tif (playerfirst) {\n\t\t\t   msg (&quot;You get to go first for this round&quot;)\n\t\t\t   self_battle_turn (self,enemy) \n\t\t\t   on ready {\n\t\t\t\t if (not enemy&#46;dead){\n\t\t\t\t   enemy_battle_turn (self,enemy) \n\t\t\t\t }\n\t\t\t   }\n\t\t\t} else {\n\t\t\t   msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)\n\t\t\t\tenemy_battle_turn (self,enemy) \n\t\t\t\tmsg (&quot;It is now your turn&#46;&quot;)\n\t\t\t\tself_battle_turn (self,enemy) \n\t\t\t}\n\t\t\ton ready {\n\t\t\t\tmsg (&quot;The round has ended&#46;&quot;)\n\t\t\t\tmsg(&quot;&quot;)  \n\t\t\t\tbattle_sequence (self,enemy)\t\n\t\t\t}\t\n        } \telse { \n\t\t\t\tmsg (&quot;The battle is over&#46;&quot;)\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;self_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tmsg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n        wait {\n          show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {\n            switch (result) {\n              case (&quot;Attack&quot;) {\n                fourth_value = false\n                if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;spd&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;evaded your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;Dex&quot;) - GetInt (self,&quot;agi&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;parried your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;dex&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;blocked your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;spd&quot;)) = false) {\n                  msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;pr&quot;) - GetInt (self,&quot;hc&quot;)) = true) {\n                  msg (&quot;Your attack got resisted by &quot; + enemy&#46;alias +&quot;!&quot;)\n                  fourth_value = true\n                }\n                else if (fourth_value = false) {\n                  if (self&#46;defending = true and enemy&#46;defending = true) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                    self&#46;defending = false\n                  }\n                  else if (self&#46;defending = true and enemy&#46;defending = false) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                    self&#46;defending = false\n                  }\n                  else if (self&#46;defending = false and enemy&#46;defending = true) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                  }\n                  else if (self&#46;defending = false and enemy&#46;defending = false) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                  }\n                }\n              }\n              case (&quot;Defend&quot;) {\n                if (self&#46;defending = false) {\n                  self&#46;defending = true\n                }\n              }\n              case (&quot;Cast&quot;) {\n                self&#46;defending = false\n              }\n              case (&quot;Item&quot;) {\n                self&#46;defending = false\n              }\n              case (&quot;Run&quot;) {\n                self&#46;defending = false\n              }\n            }\n            if (GetInt (enemy,&quot;cur_hp&quot;) &gt; 0) {\n\t\t\t  if ( RandomChance (GetInt (self,&quot;spd&quot;) - GetInt (enemy,&quot;spd&quot;))= true) {\n                msg (&quot;You get an extra battle turn!&quot;)\n                self_battle_turn (self,enemy)\n              }\n              else {\n                msg (&quot;Your battle turn is over&#46;&quot;)\n              }\n            }\n            else if (GetInt (enemy,&quot;cur_hp&quot;) &lt;= 0) {\n              msg (enemy&#46;alias + &quot; is dead&#46;&quot;)\n              msg (&quot;You have won the battle!&quot;)\n              enemy&#46;defending = false\n              enemy&#46;dead = true\n              }\n\n          }\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;enemy_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n        result = GetRandomInt (1,3)\n        switch (result) {\n          case (1) {\n            sixth_value = false\n            if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;spd&quot;)) = true) {\n              msg (&quot;You have evaded the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;agi&quot;)) = true) {\n              msg (&quot;You have parried the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;dex&quot;)) = true) {\n              msg (&quot;You have blocked the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (enemy,&quot;dex&quot;) - GetInt (self,&quot;spd&quot;)) = false) {\n              msg (enemy&#46;alias +&quot;'s attack missed!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;pr&quot;) - GetInt (enemy,&quot;hc&quot;)) = true) {\n              msg (&quot;You resisted the attack!&quot;)\n              sixth_value = true\n            }\n            else if (sixth_value = false) {\n              if (enemy&#46;defending = true and self&#46;defending = true) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n                enemy&#46;defending = false\n              }\n              else if (enemy&#46;defending = true and self&#46;defending = false) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n                enemy&#46;defending = false\n              }\n              else if (enemy&#46;defending = false and self&#46;defending = true) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n              }\n              else if (enemy&#46;defending = false and self&#46;defending = false) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n              }\n            }\n          }\n          case (2) {\n            if (enemy&#46;defending = false) {\n              msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)\n              enemy&#46;defending = true\n            }\n          }\n          case (3) {\n            enemy&#46;defending = false\n            msg (&quot;Cast&quot;)\n          }\n        }\n        if (GetInt (self,&quot;cur_hp&quot;) &gt; 0) {\n          if (RandomChance (GetInt (enemy,&quot;spd&quot;) - GetInt (self,&quot;spd&quot;)) = true) {\n            msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)\n            wait {\n              enemy_battle_turn (self,enemy)\n            }\n          }\n          else {\n            msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)\n          }\n        }\n        else if (GetInt (self,&quot;cur_hp&quot;) &lt;= 0) {\n          msg (self&#46;alias + &quot; has died&#46;&quot;)\n          msg (&quot;GAME OVER&quot;)\n          finish\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;npc_reachable&quot; parameters=&quot;object&quot; type=&quot;boolean&quot;&gt;\n        value = false\n        foreach (x,ScopeReachableNotHeld ()) {\n          if (x=object) {\n            value = true\n          }\n        }\n        return (value)\n      &lt;/function&gt;\n      &lt;function name=&quot;crit_hit&quot; parameters=&quot;object&quot; type=&quot;int&quot;&gt;\n        if (RandomChance (GetInt (object,&quot;luck&quot;)) = true) {\n          value = 2\n        }\n        else {\n          value = 1\n        }\n        return (value)\n      &lt;/function&gt;\n    &lt;/asl&gt;[/code:2n136tv1]\n\n----------------------------------\n\nP.S.\n\nLastly, another thing that Liam was explaining, is all of the &quot;checks&quot; that're needed with commands (or their used functions), to make the game engine understand what you want from it, here's my &quot;checks&quot; for my combat system:\n\n[code:2n136tv1]      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;\n        enemy = GetObject (text)\n        if (enemy = null) {\n          foreach (obj,AllObjects()) {\n            if (obj&#46;alias=text) {\n              enemy = obj\n            }\n          }\n        }\n        if (enemy = null) {\n          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)\n        }\n        else if (not Doesinherit (enemy,&quot;npc&quot;)) {\n          msg (&quot;You can not battle that!&quot;)\n        }\n        else if (not npc_reachable (enemy)) {\n          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)\n        }\n        else {\n         battle_sequence (self,enemy)\n       } \n\n      &lt;/function&gt;[/code:2n136tv1]\n\ncan you understand any of them?\n\nbased upon the game player~user being able to type in anything, I have to account for all of the possibilities, so the game engine responds in the correct ways with what was typed in.\n\n1. you can't fight an &quot;input (what the game player~user typed in)&quot; if it doesn't exist\n2. you can't fight a non-npc (npc=non-playable character) type of object, such as a &quot;room&quot; type of object or &quot;flowers&quot; object, lol\n(I'm not distinguishing a &quot;monster&quot; type of object, as instead I'm implementing a &quot;hostility&quot; system instead, any &quot;npc&quot; can be friend or foe, depending on whether you've angered or pleased them, hehe)\n3. you can't fight something that you haven't noticed (i.e. made accessible), for example, pretend that there's an orc inside of a box, well you can't fight the orc until you open the box up (and thus become aware of the orc and also make the orc within your &quot;vicinity&quot;, as maybe you can see the orc, but you shouldn't be able to reach the orc, and so, shouldn't be able to fight the orc, as for example, you see the orc up on the mountain ledge above you, but you can't get up to that ledge).\n4. you can't fight what is already dead.\n5. you can't fight a non-hostile (i.e. neutral or ally) npc.\n\n------------------\n\nP.S.S.\n\nwith this desire:\n\n[quote=&quot;Zepeus&quot;:2n136tv1]... but I don't know about using commands for all the monsters and enemies in the game.\nThx, Zepeus[/quote:2n136tv1]\n\nand thus here's a big challenge for you (hehe):\n\ncan you now build your own fight (or whatever) command that can work on all and any of your monsters~enemies in your game? (using what I gave you here, you do have all that you need in order to do so, well except on how to use OBJECT TYPES, i.e. &quot;inherited&quot; attributes, and then being able to know -hint- to set the needed attributes on your monsters~enemies directly and~or via from your OBJECT TYPES having your needed attributes. Main attributes for monsters~enemies: &quot;fightable due to not being dead / fightable due to being alive&quot;, &quot;fightable due to being a monster~enemy&quot;, and &quot;fightable due to the environment~scenero~conditions&quot;)",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Zepeus wrote:</cite>Yeah, I guess... So anyway, tell me how the commands work, because I know how to use commands like &quot;sleep&quot; or &quot;kill self&quot;, but I don't know about using commands for <span style=\"font-style:italic;\">all</span> the monsters and enemies in the game.<br/>Thx, Zepeus <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>THIS IS MOSTLY THEORY, trying to explain so you hopefully start to understand what, how, and~or why is going on with what you're doing.<br/><br/>At the very bottom, I'll give you the actual code (correct format and syntax) of stuff that you can copy, paste, and use within your games.<br/><br/>commands (and functions too) is(are) often used as a general term(s), which is very confusing for people new to coding. So, don't confuse these generalized usages of &quot;commands&quot; (and &quot;functions&quot;) with the actual COMMANDS (and FUNCTIONS) in quest.<br/><br/>as stated~explained by Liam:<br/><br/>VERBS act upon only that object. This individual usage is known as &quot;local&quot;-ness. (You've probably come across &quot;local&quot; variables or attributes in your readings on here. This means that they only apply to the script that they are within. To make a variable or attribute &quot;universal&quot;, to be able to still use it outside of the script that it was made within, you must attach~assign it to something permanent, such as objects ~ well objects that don't get removed or destroyed, lol). So, if you want to do an action beyond a single individual object, you create...<br/><br/>COMMANDS are &quot;universal&quot; verbs, they require extra coding in order for them to operate on whatever you want them to do so. Also, unlike Verbs, Commands are only activated by the game player~user literally typing in its &quot;pattern&quot;, there's no buttons or hyperlinks to click on for Commands. In the GUI~Editor, you access (i.e. create~add) commands via the very top bar of: File ~ ??? ~ Add ~ ??? ~ Help, through the &quot;Add&quot; option. Commands are not attributes attached to an object, like verbs are as~via a tab you click on for that specific and only object in the GUI~Editor. Commands are coding~script, script blocks, like Functions.<br/><br/>----------------<br/><br/>I personally like to keep my Commands without the script blocks directly inside of them, instead using Functions for containing the huge script blocks (as functions are powerful too; good for doing complex stuff). Hopefully I can explain this so that it will make sense for you as you're still new to quest, and especially with coding (I'm going to use code, as it's just a lot easier and faster in trying to explain than with the GUI~Editor, that takes a lot of work, which I'd be glad to do for you, though when I've got the time to do so, which isn't right now, lol). And, by using functions for the script blocks, I can keep my Command's patterns (what you the user~player in game has to type in to activate the command) very short, as I hate writing~typing out more than I have too, lol.<br/><br/>so this is how I do this stuff, for examples:<br/><br/>Commands (in Code form):<br/><br/><pre><code>&lt;command name=&quot;help_command&quot;&gt;<br/>  &lt;pattern&gt;help&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    help_function<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;fight #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text) // or&#58; fight_function (game&#46;pov,object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;equip_command&quot;&gt;<br/>  &lt;pattern&gt;equip #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;equip #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    equip_function (text) // or&#58; equip_function (object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;goto_command&quot;&gt;<br/>  &lt;pattern&gt;goto #text#&lt;/pattern&gt; // or you can use this too~instead&#58; &lt;pattern&gt;goto #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    goto_function (text) // or&#58; goto_function (object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>etc etc etc commands</code></pre><br/><br/>extremely useful coding (means of organization:note making) stuff in general:<br/><br/>If you used any libraries, you've probably noticed this coding~scripting stuff:<br/><br/>the ' // ' tells the game engine, that everything to the right of this are your comments (which will show up in the GUI~Editor as green text; uber sweet!), and is not coding for it to execute~do~run.<br/><br/>' &lt;!-- (your comments) --&gt; ' this does the same thing as the ' // ', but unfortunately, it does not show up in your GUI~Editor.<br/><br/>and it can also be done in this format too:<br/><br/>&lt;!--<br/>(your comments)<br/>--&gt;<br/><br/>about the Command in code form:<br/><br/>&lt;command name=&quot;(its name)&quot;&gt; // the name of the Command; NAME attributes are used for the game engine to identify it. Think of NAME attributes as a car's license plate or your SS# or Driver's ID card, and the game engine is the government which uses these things to identify you as you (or not as you, lol).<br/><br/>&lt;pattern&gt;(your &quot;pattern&quot;)&lt;/pattern&gt; // this is how (and what operation) that the game player~user must type in, in order to activate the command. for example for: ' &lt;pattern&gt;fight #text#&lt;/pattern&gt; ' the game player~user has to type in: fight orc, in this case, the &quot;orc&quot; input is recognized as &quot;text&quot; by the game engine (due to your use of, #text#, in the pattern). If #object# is used instead, than the &quot;orc&quot; would be recognized as an object by the game engine. I'll explain this further later on, as there's a very big difference.<br/><br/>&lt;script&gt; // what you put below this (&lt;script&gt;), is what is done by the command. In my examples, I'm choosing to just using a single script line, call function (as it is known in the GUI~Editor choice), which is done in code, by simple typing in the NAME attribute of the function, which for my examples are, ' help_function ' or ' fight_function ' or ' equip_function ' or ' goto_function ', as my~those functions will contain the actual full script stuff of what and how I want my commands to do their stuff.<br/><br/>&lt;/script&gt; // this tells the game engine that, that script has come to an end<br/><br/>&lt;/command&gt; // this tells the game engine that, that command has come to an end<br/><br/>now, about the command pattern's choices, between #text# or #object# :<br/><br/>as mention: #text# tells the game engine that whatever the game player~user types in, it is to be recognized as text (a string) and #object# tells the game engine that whatever the game player~user types in, it is to be recognized as an object.<br/><br/>This matters greatly, as if you use #object#, whatever is typed in, must be an actual (existing) object in the game, as that is what the game engine will be searching for: an object with that NAME attribute that the game player~user types in, such as my example of: orc. So, if there's no actual object NAMED &quot;orc&quot;, the command will not be able to do what you made it for doing. If you use #text#, then likewise, if you want your Command to act upon an object, it won't be able to as well, as remember that the game engine will search for text (a string) called &quot;orc&quot;, but it won't ever actually GET the actual object (as it's not looking for an object) for you to do your action~stuff~command~function~script upon it. The game engine must actually GET the OBJECT, for it to then do stuff to the object. This may not be the best analogy, but think of it in terms of copy and paste. If you don't COPY (GET~STORE~SAVE~HAVE) the text, then the computer can't then paste (an action on) it. Well the same is true with quest's objects, you have to have the quest game engine GET the object, for it to be able to do an action upon that object. Text (a string) is not an object. So, if quest is searching (GETTING) for text (#text#), it's not searching for an object (#object#).<br/><br/>Now, that I've confused you deeply, lol, here's an example of it in action and how to deal with it:<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>&lt;/function&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;inherited name=&quot;editor_object&quot;/&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>we dealt with this by using this added script~code line: enemy=GetObject(text)<br/><br/>and here's it explained step by step:<br/><br/>1. the game player~user types in: fight orc<br/>2. the command, fight_command, 's pattern of, fight #text#, tells the game engine to search (GET) for &quot;orc&quot; as TEXT (STRING)<br/>3. but even if there was an &quot;orc&quot; as text (string), the command (and function) would be useless.<br/>4. so we have to tell the game engine to get the OBJECT, which is done by: enemy=GetObject(text). The ' GetObject ' code, tells the game engine to search (GET) for an OBJECT (whereas it was priorly searching for text, a string, from the command's pattern's #text#). The (text) is what thing that the game engine will search (and GET, if it exists) for as its OBJECT, which is the &quot;orc&quot;. So, now it utilizes the command's searching for the text of &quot;orc&quot;, so the command's searching for the text wasn't actually pointless, to find what will be its OBJECT. The game engine finds the &quot;orc&quot; text (string) in: &lt;object name=&quot;orc&quot;&gt;, as the, =&quot;orc&quot;, is a text (string) type of attribute. Then, it finally sets the OBJECT.ORC as &quot;enemy&quot;, and being an actual GOTTEN OBJECT, the unwritten~missing (,so the, pretending,) rest of the coding~scripting by me lol, can now act upon it.<br/><br/>now, if we used #object#, then we wouldn't need the, GetObject(text), as the #object# does the same thing as the &quot;GetObject&quot;<br/><br/>You may be asking then why ever use the #text#, well there's many cases of why this can be useful and~or needed too. One example is with dialogue (such as conversation topics). Though, it's a bit too hard to explain, why else you might or need to use #text#, and I'm already writing so much already, lol. But, most often, you'll just want to use #object#, do to actions upon objects.<br/><br/>hopefully, you can understand functions in code, a bit now, as they're far too extensive to even begin to try to explain everything (all the coding) that they can do, lol.<br/><br/>however, you may have noticed the ' fight_function (game.pov,object or text) ' in the command ' fight_command ', and the ' parameters=&quot;game.pov,text or object&quot; in the function ' fight_function ', so on to explaining parameters:<br/><br/>parameters are what things you acting upon, for example:<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text or object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>&lt;/function&gt;</code></pre><br/><br/>in the Command: two things will be used: (game.pov) and (text or object)<br/><br/>&quot;game.pov&quot; GETS &quot;you&quot; (the currently controlled Player Object), such as the (default) &quot;player&quot; Player Object, and SETS it as &quot;THING_#1&quot;<br/><br/>the &lt;pattern&gt;(its pattern)&lt;/pattern&gt; SETS what is typed in by the game player~user as the &quot;text&quot; or &quot;object&quot;, which then the...<br/><br/>&quot;text or object&quot; GETS, such as my example of &quot;orc&quot;, and SETS it as &quot;THING_#2&quot;<br/><br/>now about parameters' format~syntax:<br/><br/>&quot;THING_#1,THING_#2,THING_#3,etc&quot;<br/><br/>this does not change, from the Command's parameter's in its script line ' fight_function (game.pov,text or object) ', to the Function's parameter's script line ' &lt;function name=&quot;fight_function&quot; parameters=&quot;game.pov,text or object&quot;&gt; '.<br/><br/>the &quot;orc&quot; (as text or object) is SET as THING_#1, due to it's position as first. After the initial~first parameter setting in the Command, the labels for the parameters don't matter.<br/><br/>let me explain by direct example:<br/><br/><pre><code>default player object is currently controlled<br/>game player~user types in&#58; fight orc<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (player,orc)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;player,orc&quot;&gt;<br/>  enemy_object_orc=GetObject(parameter_label_orc)<br/>  object_name_player=parameter_label_player<br/>&lt;/function&gt;</code></pre><br/><br/>now, let's change the non-initial parameter labels, but it results (things) still doesn't change: player and orc<br/><br/><pre><code>default player object is currently controlled<br/>game player~user types in&#58; fight orc<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text or object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text or object)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;self,target&quot;&gt;<br/>  enemy_object_orc=GetObject(parameter_label_target)<br/>  object_name_player=parameter_label_self<br/>  fight_function_2<br/>&lt;/function&gt;<br/><br/>and still no change, for the CALLED, fight_function_2&#58;<br/><br/>&lt;function name=&quot;fight_function_two&quot; parameters=&quot;target,self&quot;&gt;<br/>  enemy_object_orc=GetObject(parameter_label_self)<br/>  object_name_player=parameter_label_target<br/>&lt;/function&gt;</code></pre><br/><br/>so, only the POSITION~ORDER (&quot;THING_#1,THING_#2,THING_#3,etc&quot;) is transfered from one parameter stringlist to another parameter stringlist.<br/><br/>parameter stringlist 1 = fight_function (THING_#1,THING_#2,THING_#3,etc)<br/>parameter stringlist 2 = &lt;function name=&quot;fight_function&quot; paramaters=&quot;THING_#1,THING_#2,THING_#3,etc&quot;<br/>parameter stringlist 3 = &lt;function name=&quot;fight_function_2&quot; paramaters=&quot;THING_#1,THING_#2,THING_#3,etc&quot;<br/><br/>the leftmost item in the parameter stringlists is ALWAYS &quot;THING_#1&quot;, which in my example is: game.pov<br/>the rightmost item (thing_#2, as we've only got two items in my example) is ALWAYS &quot;THING_#2&quot;, which in my example is: orc<br/><br/>In parameter stringlists 2 and 3, I can label the &quot;thing_#1&quot; and &quot;thing_02&quot; as whatever I want (for each of the 2 stringlists), but that has no effect on the game engine in having~setting~using that position 1 is game.pov and position 2 is orc<br/><br/>however, the parameter stringlist 1 (and in this case, the command's pattern too), DOES SET what are the actual items to be used throughout the transfer of them from parameter stringlist to parameter stringlist.<br/><br/>-------------------<br/><br/>unfortunately, we're still not done yet, with commands, lol.<br/><br/>an entirely different problem is that &quot;GETTING AN OBJECT&quot;, does so, only via its NAME attribute.<br/><br/>so, for example, here's a problem case:<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>&lt;/function&gt;<br/><br/>&lt;object name=&quot;red_orc_1&quot;&gt;<br/>  &lt;inherited name=&quot;editor_object&quot;/&gt;<br/>  &lt;alias&gt;orc&lt;/alias&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>the ' GetObject ' will fail, because the game player~user sees the object's ALIAS, &quot;orc&quot;, which he~she will type in: fight orc. But, the ' GetObject ' code tells the game engine to search for a NAME attribute of &quot;orc&quot;. Notice that there's no NAME attribute of &quot;orc&quot;, and so it fails to GET the orc object, because the orc object's NAME is &quot;red_orc_1&quot; and not &quot;orc&quot;. So, to fix the problem of using ALIASES, we've got to add these code~script lines in:<br/><br/>null = game engine couldn't find it (though this isn't the only usage or meaning of &quot;null&quot;)<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;game&#46;pov,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>  if enemy=null {<br/>    foreach (obj,AllObjects()) {<br/>      if (obj&#46;alias=text) {<br/>        enemy = obj<br/>      }<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;object name=&quot;red_orc_1&quot;&gt;<br/>  &lt;inherited name=&quot;editor_object&quot;/&gt;<br/>  &lt;alias&gt;orc&lt;/alias&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>did you spot the new code lines?<br/><br/>they're:<br/><br/><pre><code>  if enemy=null {<br/>    foreach (obj,AllObjects()) {<br/>      if (obj&#46;alias=text) {<br/>        enemy = obj<br/>      }<br/>    }<br/>  }</code></pre><br/><br/>this is what is going on here:<br/><br/>1. if there's no found object with the NAME of &quot;orc&quot;, then...<br/>2. search through all of the objects in the entire game, and &quot;For Each&quot; of those objects (labeled as &quot;obj&quot;)...<br/>3. if the object &quot;obj&quot; (i.e. any and each object from the searching of the entire game for all of its objects) 's ALIAS is &quot;orc&quot;, then...<br/>4. set that &quot;obj&quot; as~to &quot;enemy&quot; (the game engine will now finally recognize any usage of &quot;enemy&quot; as the &quot;red_orc_1&quot; object)<br/><br/>-----------------------------------------------<br/><br/>here's an example of &quot;my&quot; (ALL Credit goes to Pertex as I used his~her code structure, it's not really my code, lol) combat code (cleaned up by Pertex), it will be very daunting for you (and was very daunting for me, wow did I get a HIGH when I finally got it to work, hehe), but maybe if I've done well in explaining all this stuff, you might be able to understand at least some parts of it, lol. And feel free to use (or play, lol) it too!<br/><br/>it's old, so it's v5.3, and it may need some tinkering, to get it to work for 5.4, ask anyone who knows the changes to 5.4 and~or how to code well here, and it probably won't be too hard for them to convert it to being usable with v5.4 for you. The very least change is simply to change the first line of ' &lt;asl version=&quot;530&quot;&gt; ' to ' &lt;asl version=&quot;540&quot;&gt; '<br/><br/><pre><code>    &lt;asl version=&quot;530&quot;&gt;<br/>      &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>      &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>      &lt;game name=&quot;Test&quot;&gt;<br/>        &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;<br/>        &lt;version&gt;1&#46;0&lt;/version&gt;<br/>        &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;<br/>        &lt;start type=&quot;script&quot;&gt;<br/>          cc<br/>        &lt;/start&gt;<br/>        &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>        &lt;statusattributes type=&quot;stringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;<br/>      &lt;/game&gt;<br/>      &lt;object name=&quot;room&quot;&gt;<br/>        &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>        &lt;object name=&quot;player&quot;&gt;<br/>          &lt;inherit name=&quot;defaultplayer&quot; /&gt;<br/>          &lt;inherit name=&quot;pc&quot; /&gt;<br/>          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;<br/>          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;<br/>          &lt;str type=&quot;int&quot;&gt;100&lt;/str&gt;<br/>          &lt;end type=&quot;int&quot;&gt;100&lt;/end&gt;<br/>          &lt;dex type=&quot;int&quot;&gt;100&lt;/dex&gt;<br/>          &lt;agi type=&quot;int&quot;&gt;100&lt;/agi&gt;<br/>          &lt;spd type=&quot;int&quot;&gt;100&lt;/spd&gt;<br/>          &lt;hc type=&quot;int&quot;&gt;100&lt;/hc&gt;<br/>          &lt;pd type=&quot;int&quot;&gt;100&lt;/pd&gt;<br/>          &lt;pr type=&quot;int&quot;&gt;100&lt;/pr&gt;<br/>        &lt;/object&gt;<br/>        &lt;object name=&quot;orc1&quot;&gt;<br/>          &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>          &lt;inherit name=&quot;npc&quot; /&gt;<br/>          &lt;hostile type=&quot;boolean&quot;&gt;true&lt;/hostile&gt;<br/>          &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>          &lt;alias&gt;orc&lt;/alias&gt;<br/>          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;<br/>          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;<br/>          &lt;str type=&quot;int&quot;&gt;25&lt;/str&gt;<br/>          &lt;end type=&quot;int&quot;&gt;25&lt;/end&gt;<br/>          &lt;dex type=&quot;int&quot;&gt;25&lt;/dex&gt;<br/>          &lt;agi type=&quot;int&quot;&gt;25&lt;/agi&gt;<br/>          &lt;spd type=&quot;int&quot;&gt;25&lt;/spd&gt;<br/>          &lt;hc type=&quot;int&quot;&gt;25&lt;/hc&gt;<br/>          &lt;pd type=&quot;int&quot;&gt;25&lt;/pd&gt;<br/>          &lt;pr type=&quot;int&quot;&gt;25&lt;/pr&gt;<br/>        &lt;/object&gt;<br/>      &lt;/object&gt;<br/>      &lt;turnscript name=&quot;game_turns&quot;&gt;<br/>        &lt;enabled /&gt;<br/>        &lt;script&gt;<br/>          sa<br/>          game&#46;turns = game&#46;turns + 1<br/>        &lt;/script&gt;<br/>      &lt;/turnscript&gt;<br/>      &lt;command name=&quot;fight&quot;&gt;<br/>        &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>        &lt;script&gt;<br/>          battle_system (game&#46;pov,text)<br/>        &lt;/script&gt;<br/>      &lt;/command&gt;<br/>      &lt;type name=&quot;char&quot;&gt;<br/>        &lt;cur_hp type=&quot;int&quot;&gt;0&lt;/cur_hp&gt;<br/>        &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;<br/>        &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>        &lt;max_hp type=&quot;int&quot;&gt;0&lt;/max_hp&gt;<br/>        &lt;str type=&quot;int&quot;&gt;0&lt;/str&gt;<br/>        &lt;end type=&quot;int&quot;&gt;0&lt;/end&gt;<br/>        &lt;dex type=&quot;int&quot;&gt;0&lt;/dex&gt;<br/>        &lt;agi type=&quot;int&quot;&gt;0&lt;/agi&gt;<br/>        &lt;spd type=&quot;int&quot;&gt;0&lt;/spd&gt;<br/>        &lt;hp type=&quot;int&quot;&gt;0&lt;/hp&gt;<br/>        &lt;hc type=&quot;int&quot;&gt;0&lt;/hc&gt;<br/>        &lt;pd type=&quot;int&quot;&gt;0&lt;/pd&gt;<br/>        &lt;pr type=&quot;int&quot;&gt;0&lt;/pr&gt;<br/>      &lt;/type&gt;<br/>      &lt;type name=&quot;pc&quot;&gt;<br/>        &lt;inherit name=&quot;char&quot; /&gt;<br/>        &lt;statusattributes type=&quot;stringdictionary&quot;&gt;hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = &lt;/statusattributes&gt;<br/>      &lt;/type&gt;<br/>      &lt;type name=&quot;npc&quot;&gt;<br/>        &lt;inherit name=&quot;char&quot; /&gt;<br/>        &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>        &lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>        &lt;displayverbs type=&quot;list&quot;&gt;Look at; Talk; Fight&lt;/displayverbs&gt;<br/>      &lt;/type&gt;<br/>      &lt;function name=&quot;cc&quot;&gt;<br/>        msg (&quot;What is your name?&quot;)<br/>        get input {<br/>          game&#46;pov&#46;alias = result<br/>          msg (&quot; - &quot; + game&#46;pov&#46;alias)<br/>          show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {<br/>            game&#46;pov&#46;gender = result<br/>            show menu (&quot;What is your race?&quot;, split (&quot;human;dwarf;elf&quot; , &quot;;&quot;), false) {<br/>              game&#46;pov&#46;race = result<br/>              show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {<br/>                game&#46;pov&#46;class = result<br/>                msg (game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class + &quot;&#46;&quot;)<br/>                wait {<br/>                  ClearScreen<br/>\t\t\t\t  <br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;sa&quot;&gt;<br/>        game&#46;pov&#46;hp = game&#46;pov&#46;cur_hp + &quot; / &quot; + game&#46;pov&#46;max_hp<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;<br/>        enemy = GetObject (text)<br/>        if (enemy = null) {<br/>          foreach (obj,AllObjects()) {<br/>            if (obj&#46;alias=text) {<br/>              enemy = obj<br/>            }<br/>          }<br/>        }<br/>        if (enemy = null) {<br/>          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)<br/>        }<br/>        else if (not Doesinherit (enemy,&quot;npc&quot;)) {<br/>          msg (&quot;You can not battle that!&quot;)<br/>        }<br/>        else if (not npc_reachable (enemy)) {<br/>          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)<br/>        }<br/>        else {<br/>\t\t\tbattle_sequence (self,enemy)<br/>    \t} <br/><br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;battle_sequence&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif (enemy&#46;dead = false) {<br/>\t\t\tplayerfirst=false<br/>\t\t\tif (GetInt (self,&quot;spd&quot;) &gt; GetInt (enemy,&quot;spd&quot;)) {<br/>\t\t\t\tplayerfirst=true<br/>\t\t\t} else if (GetInt (self,&quot;spd&quot;) = GetInt (enemy,&quot;spd&quot;) and RandomChance (50)) {<br/>\t\t\t\tplayerfirst=true<br/>\t\t\t}   \t\t  <br/>\t\t\t<br/>\t\t\tif (playerfirst) {<br/>\t\t\t   msg (&quot;You get to go first for this round&quot;)<br/>\t\t\t   self_battle_turn (self,enemy) <br/>\t\t\t   on ready {<br/>\t\t\t\t if (not enemy&#46;dead){<br/>\t\t\t\t   enemy_battle_turn (self,enemy) <br/>\t\t\t\t }<br/>\t\t\t   }<br/>\t\t\t} else {<br/>\t\t\t   msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)<br/>\t\t\t\tenemy_battle_turn (self,enemy) <br/>\t\t\t\tmsg (&quot;It is now your turn&#46;&quot;)<br/>\t\t\t\tself_battle_turn (self,enemy) <br/>\t\t\t}<br/>\t\t\ton ready {<br/>\t\t\t\tmsg (&quot;The round has ended&#46;&quot;)<br/>\t\t\t\tmsg(&quot;&quot;)  <br/>\t\t\t\tbattle_sequence (self,enemy)\t<br/>\t\t\t}\t<br/>        } \telse { <br/>\t\t\t\tmsg (&quot;The battle is over&#46;&quot;)<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;self_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tmsg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        wait {<br/>          show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {<br/>            switch (result) {<br/>              case (&quot;Attack&quot;) {<br/>                fourth_value = false<br/>                if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;spd&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;evaded your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;Dex&quot;) - GetInt (self,&quot;agi&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;parried your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;dex&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;blocked your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;spd&quot;)) = false) {<br/>                  msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;pr&quot;) - GetInt (self,&quot;hc&quot;)) = true) {<br/>                  msg (&quot;Your attack got resisted by &quot; + enemy&#46;alias +&quot;!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (fourth_value = false) {<br/>                  if (self&#46;defending = true and enemy&#46;defending = true) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                    self&#46;defending = false<br/>                  }<br/>                  else if (self&#46;defending = true and enemy&#46;defending = false) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                    self&#46;defending = false<br/>                  }<br/>                  else if (self&#46;defending = false and enemy&#46;defending = true) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                  }<br/>                  else if (self&#46;defending = false and enemy&#46;defending = false) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                  }<br/>                }<br/>              }<br/>              case (&quot;Defend&quot;) {<br/>                if (self&#46;defending = false) {<br/>                  self&#46;defending = true<br/>                }<br/>              }<br/>              case (&quot;Cast&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>              case (&quot;Item&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>              case (&quot;Run&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>            }<br/>            if (GetInt (enemy,&quot;cur_hp&quot;) &gt; 0) {<br/>\t\t\t  if ( RandomChance (GetInt (self,&quot;spd&quot;) - GetInt (enemy,&quot;spd&quot;))= true) {<br/>                msg (&quot;You get an extra battle turn!&quot;)<br/>                self_battle_turn (self,enemy)<br/>              }<br/>              else {<br/>                msg (&quot;Your battle turn is over&#46;&quot;)<br/>              }<br/>            }<br/>            else if (GetInt (enemy,&quot;cur_hp&quot;) &lt;= 0) {<br/>              msg (enemy&#46;alias + &quot; is dead&#46;&quot;)<br/>              msg (&quot;You have won the battle!&quot;)<br/>              enemy&#46;defending = false<br/>              enemy&#46;dead = true<br/>              }<br/><br/>          }<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;enemy_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        result = GetRandomInt (1,3)<br/>        switch (result) {<br/>          case (1) {<br/>            sixth_value = false<br/>            if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;spd&quot;)) = true) {<br/>              msg (&quot;You have evaded the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;agi&quot;)) = true) {<br/>              msg (&quot;You have parried the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;dex&quot;)) = true) {<br/>              msg (&quot;You have blocked the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (enemy,&quot;dex&quot;) - GetInt (self,&quot;spd&quot;)) = false) {<br/>              msg (enemy&#46;alias +&quot;'s attack missed!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;pr&quot;) - GetInt (enemy,&quot;hc&quot;)) = true) {<br/>              msg (&quot;You resisted the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (sixth_value = false) {<br/>              if (enemy&#46;defending = true and self&#46;defending = true) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                enemy&#46;defending = false<br/>              }<br/>              else if (enemy&#46;defending = true and self&#46;defending = false) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                enemy&#46;defending = false<br/>              }<br/>              else if (enemy&#46;defending = false and self&#46;defending = true) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>              }<br/>              else if (enemy&#46;defending = false and self&#46;defending = false) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>              }<br/>            }<br/>          }<br/>          case (2) {<br/>            if (enemy&#46;defending = false) {<br/>              msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)<br/>              enemy&#46;defending = true<br/>            }<br/>          }<br/>          case (3) {<br/>            enemy&#46;defending = false<br/>            msg (&quot;Cast&quot;)<br/>          }<br/>        }<br/>        if (GetInt (self,&quot;cur_hp&quot;) &gt; 0) {<br/>          if (RandomChance (GetInt (enemy,&quot;spd&quot;) - GetInt (self,&quot;spd&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)<br/>            wait {<br/>              enemy_battle_turn (self,enemy)<br/>            }<br/>          }<br/>          else {<br/>            msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)<br/>          }<br/>        }<br/>        else if (GetInt (self,&quot;cur_hp&quot;) &lt;= 0) {<br/>          msg (self&#46;alias + &quot; has died&#46;&quot;)<br/>          msg (&quot;GAME OVER&quot;)<br/>          finish<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;npc_reachable&quot; parameters=&quot;object&quot; type=&quot;boolean&quot;&gt;<br/>        value = false<br/>        foreach (x,ScopeReachableNotHeld ()) {<br/>          if (x=object) {<br/>            value = true<br/>          }<br/>        }<br/>        return (value)<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;crit_hit&quot; parameters=&quot;object&quot; type=&quot;int&quot;&gt;<br/>        if (RandomChance (GetInt (object,&quot;luck&quot;)) = true) {<br/>          value = 2<br/>        }<br/>        else {<br/>          value = 1<br/>        }<br/>        return (value)<br/>      &lt;/function&gt;<br/>    &lt;/asl&gt;</code></pre><br/><br/>----------------------------------<br/><br/>P.S.<br/><br/>Lastly, another thing that Liam was explaining, is all of the &quot;checks&quot; that're needed with commands (or their used functions), to make the game engine understand what you want from it, here's my &quot;checks&quot; for my combat system:<br/><br/><pre><code>      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;<br/>        enemy = GetObject (text)<br/>        if (enemy = null) {<br/>          foreach (obj,AllObjects()) {<br/>            if (obj&#46;alias=text) {<br/>              enemy = obj<br/>            }<br/>          }<br/>        }<br/>        if (enemy = null) {<br/>          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)<br/>        }<br/>        else if (not Doesinherit (enemy,&quot;npc&quot;)) {<br/>          msg (&quot;You can not battle that!&quot;)<br/>        }<br/>        else if (not npc_reachable (enemy)) {<br/>          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)<br/>        }<br/>        else {<br/>         battle_sequence (self,enemy)<br/>       } <br/><br/>      &lt;/function&gt;</code></pre><br/><br/>can you understand any of them?<br/><br/>based upon the game player~user being able to type in anything, I have to account for all of the possibilities, so the game engine responds in the correct ways with what was typed in.<br/><br/>1. you can't fight an &quot;input (what the game player~user typed in)&quot; if it doesn't exist<br/>2. you can't fight a non-npc (npc=non-playable character) type of object, such as a &quot;room&quot; type of object or &quot;flowers&quot; object, lol<br/>(I'm not distinguishing a &quot;monster&quot; type of object, as instead I'm implementing a &quot;hostility&quot; system instead, any &quot;npc&quot; can be friend or foe, depending on whether you've angered or pleased them, hehe)<br/>3. you can't fight something that you haven't noticed (i.e. made accessible), for example, pretend that there's an orc inside of a box, well you can't fight the orc until you open the box up (and thus become aware of the orc and also make the orc within your &quot;vicinity&quot;, as maybe you can see the orc, but you shouldn't be able to reach the orc, and so, shouldn't be able to fight the orc, as for example, you see the orc up on the mountain ledge above you, but you can't get up to that ledge).<br/>4. you can't fight what is already dead.<br/>5. you can't fight a non-hostile (i.e. neutral or ally) npc.<br/><br/>------------------<br/><br/>P.S.S.<br/><br/>with this desire:<br/><br/><blockquote><cite>Zepeus wrote:</cite>... but I don't know about using commands for all the monsters and enemies in the game.<br/>Thx, Zepeus</blockquote><br/><br/>and thus here's a big challenge for you (hehe):<br/><br/>can you now build your own fight (or whatever) command that can work on all and any of your monsters~enemies in your game? (using what I gave you here, you do have all that you need in order to do so, well except on how to use OBJECT TYPES, i.e. &quot;inherited&quot; attributes, and then being able to know -hint- to set the needed attributes on your monsters~enemies directly and~or via from your OBJECT TYPES having your needed attributes. Main attributes for monsters~enemies: &quot;fightable due to not being dead / fightable due to being alive&quot;, &quot;fightable due to being a monster~enemy&quot;, and &quot;fightable due to the environment~scenero~conditions&quot;)",
      "PostDate": "2013-06-01T08:23:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "24945",
      "UserId": 0,
      "Username": "sonic102",
      "UserAvatar": null,
      "UserGravatar": "fd0d4fb0d4f66001ed8c262e48930d07",
      "EditableText": "A tip: You don't need to know anything about Quest code. You hit the notepaper button and paste the code somewhere. Nobody here actually reads the code that they get.  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nYou can try to learn it, however. It's very useful.",
      "EditableFormat": "bbcode",
      "HTML": "A tip: You don't need to know anything about Quest code. You hit the notepaper button and paste the code somewhere. Nobody here actually reads the code that they get.  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>You can try to learn it, however. It's very useful.",
      "PostDate": "2013-06-04T05:38:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25587",
      "UserId": 0,
      "Username": "Zepeus",
      "UserAvatar": "6869_1369550389.png",
      "UserGravatar": "9090962d09a904c57f2b903229a7acb5",
      "EditableText": "Are there any sites or anything where you can be taught Quest code? If there are, I'm willing to give it a go, because I really want to learn how to do more complex stuff on quest than you can with the gui. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> Thx again.",
      "EditableFormat": "bbcode",
      "HTML": "Are there any sites or anything where you can be taught Quest code? If there are, I'm willing to give it a go, because I really want to learn how to do more complex stuff on quest than you can with the gui. <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> Thx again.",
      "PostDate": "2013-07-27T04:22:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25588",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you can do a lot of complex stuff in the GUI~Editor, but you got to understand how to do it (ie how to do the stuff in the &quot;code logic&quot; way), such as the simple example that many noobs ask about&#058; &quot;how do I add, decrease, or make a counter with using attributes&quot;, as it's not that clear when you're trying to use the GUI~Editor and when without any coding knowledge. You got to be able to know the GUI~Editor's stuff along with how to use them together, to get the more complex stuff from using the GUI-Editor.\n\n---------------\n\nright here, this site, provides a lot of help for learning it's own quest coding, as well as all of us to help you with learning it. I personally would love to help you learn to code (as it helps me too with getting better at coding, hehe), when I've got the time though. I'd be glad to help you step by step in slowly learning to code when I'm not busy with real life stuff, argh, sighs, laughs\n\nprobably one of the most important things that will help you with coding is this:\n\n(get the newest release download)\n\n<!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m -->\n\nwrite (or paste your code into this program, after you started~opened it up, of course), as it'll color code it for you, making it much easier to read, spot errors, write game code, write library code, and understand the coding itself too. just choose for the &quot;language&quot; at the top of the screen: XML\n\nAlso, if you want to (I think that it can be useful, seeing another total noob's, me~HK, progression in trying to learn to code):\n\nyou can check my thread, &quot;HK noob help me thread&quot; (or something like this, it has like ~1,000 ~ I think ~ posts in it), to see my own progression in learning quest's coding, as I started from zero programming knowledge.\n\nhere's the link (you can see how I started from nothing, struggled asking what are now such stupid-embarrassing questions, having a horrible time just trying to make sense of all the terminology and etc, hehe):\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk%27s+noob+help+me\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk%27s+noob+help+me</a><!-- l -->\n\nand, here's the steps I used (to slowly build up my quest coding knowledge to what it now):\n\n1. go through the tutorial fully (and fully do everything, successfuly).\n2. start with the &quot;character_creation&quot; script block in trying to understand it (and then try to write it entirely on your own ~ I must of done it so many times over and over in the beginning, as I got it remembered by heart pretty quickly back then, lol)\n3. slowly, take someone else's code (one the libraries) and a simple one at that, and work on at least understanding them, then trying to do (write) them on your own too. just do one code thing at a time, slowly you'll build up your understanding of coding, the mental-logic that code writing uses for its structure~pattern (it takes awhile to think &quot;in-coding&quot;, with the &quot;if&quot; conditionals and how to do stuff with the attributes, as it's not intuitive to &quot;normal&quot; thinking that you get from your liberal arts school subjects, you got to think of how to &quot;write&quot; for the quest engine to understand what you're trying to tell it to do or whatever else). Slowly, from simple code blocks, you'll start to learn to code, and be able to move onto harder code blocks, just keep at it, as it's a slow process, but you'll start to see results, you'll start to actual understand code, and slowly grow in your ability to code.\n4. try to help others as much as you can, it's good practice for you, it gets you to think of how to code things, as you try to figure out how to do something for someone, hehe. (and it's really cool when someone who knows coding well, says that what you said to do ~ or rather the code that you created, is the same that they would do, hehe. As it means you must be actually learning to code, hehe)\n5. especially work at trouble-shooting your (or others') code, as it is very satisfying if you can do so (especially if you got a bunch of errors that you had to fix, lol), and &quot;HK: if you can trouble-shoot, then you're definately learning to code!&quot;, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nextremely important too:\n\nX. Slowly, work on building up your knowledge base of the things that you can do (and how to do them):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\nXX. While a bit time consuming, do stuff in the GUI~Editor, and then go into the Code View to see what that stuff you did in the GUI~Editor in how it looks~translates to in-code, this can help you with understanding code, though again it's a bit time-consuming, and also, the format~structure of things being done in-code vs the GUI~Editor, can be confusing, it might confuse you more, and so, if this is the case, you may just have to try to solely work with the coding to learn it.\n\n-------------------\n\nP.S.\n\ngetting the message format~structure~syntax at the end of the character creation script right is a [cursing diatribe] HASSLE !!\n\nnot correct format on purpose: msg (&quot;game.pov.alias + is a + game.pov.gender + game.pov.race + game.pov.class +.&quot;)\n\nbut, once you can finally understand how to do it correctly, you're already making huge progress, lol.\n\n(It took me forever to get it right, laughs, and I still got trouble with it now and then too, laughs, HK GROWLES more curses!)\n\noh, and make sure you bloody remember to put the ending &quot;/&gt;&quot; on your scripts (LOL).\n\nHK has quick a few common simple forgetful or typo mistakes that are a pain to track down in trouble-shooting... GRR <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "you can do a lot of complex stuff in the GUI~Editor, but you got to understand how to do it (ie how to do the stuff in the &quot;code logic&quot; way), such as the simple example that many noobs ask about&#058; &quot;how do I add, decrease, or make a counter with using attributes&quot;, as it's not that clear when you're trying to use the GUI~Editor and when without any coding knowledge. You got to be able to know the GUI~Editor's stuff along with how to use them together, to get the more complex stuff from using the GUI-Editor.<br/><br/>---------------<br/><br/>right here, this site, provides a lot of help for learning it's own quest coding, as well as all of us to help you with learning it. I personally would love to help you learn to code (as it helps me too with getting better at coding, hehe), when I've got the time though. I'd be glad to help you step by step in slowly learning to code when I'm not busy with real life stuff, argh, sighs, laughs<br/><br/>probably one of the most important things that will help you with coding is this:<br/><br/>(get the newest release download)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --><br/><br/>write (or paste your code into this program, after you started~opened it up, of course), as it'll color code it for you, making it much easier to read, spot errors, write game code, write library code, and understand the coding itself too. just choose for the &quot;language&quot; at the top of the screen: XML<br/><br/>Also, if you want to (I think that it can be useful, seeing another total noob's, me~HK, progression in trying to learn to code):<br/><br/>you can check my thread, &quot;HK noob help me thread&quot; (or something like this, it has like ~1,000 ~ I think ~ posts in it), to see my own progression in learning quest's coding, as I started from zero programming knowledge.<br/><br/>here's the link (you can see how I started from nothing, struggled asking what are now such stupid-embarrassing questions, having a horrible time just trying to make sense of all the terminology and etc, hehe):<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk%27s+noob+help+me\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk%27s+noob+help+me</a><!-- l --><br/><br/>and, here's the steps I used (to slowly build up my quest coding knowledge to what it now):<br/><br/>1. go through the tutorial fully (and fully do everything, successfuly).<br/>2. start with the &quot;character_creation&quot; script block in trying to understand it (and then try to write it entirely on your own ~ I must of done it so many times over and over in the beginning, as I got it remembered by heart pretty quickly back then, lol)<br/>3. slowly, take someone else's code (one the libraries) and a simple one at that, and work on at least understanding them, then trying to do (write) them on your own too. just do one code thing at a time, slowly you'll build up your understanding of coding, the mental-logic that code writing uses for its structure~pattern (it takes awhile to think &quot;in-coding&quot;, with the &quot;if&quot; conditionals and how to do stuff with the attributes, as it's not intuitive to &quot;normal&quot; thinking that you get from your liberal arts school subjects, you got to think of how to &quot;write&quot; for the quest engine to understand what you're trying to tell it to do or whatever else). Slowly, from simple code blocks, you'll start to learn to code, and be able to move onto harder code blocks, just keep at it, as it's a slow process, but you'll start to see results, you'll start to actual understand code, and slowly grow in your ability to code.<br/>4. try to help others as much as you can, it's good practice for you, it gets you to think of how to code things, as you try to figure out how to do something for someone, hehe. (and it's really cool when someone who knows coding well, says that what you said to do ~ or rather the code that you created, is the same that they would do, hehe. As it means you must be actually learning to code, hehe)<br/>5. especially work at trouble-shooting your (or others') code, as it is very satisfying if you can do so (especially if you got a bunch of errors that you had to fix, lol), and &quot;HK: if you can trouble-shoot, then you're definately learning to code!&quot;, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>extremely important too:<br/><br/>X. Slowly, work on building up your knowledge base of the things that you can do (and how to do them):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>XX. While a bit time consuming, do stuff in the GUI~Editor, and then go into the Code View to see what that stuff you did in the GUI~Editor in how it looks~translates to in-code, this can help you with understanding code, though again it's a bit time-consuming, and also, the format~structure of things being done in-code vs the GUI~Editor, can be confusing, it might confuse you more, and so, if this is the case, you may just have to try to solely work with the coding to learn it.<br/><br/>-------------------<br/><br/>P.S.<br/><br/>getting the message format~structure~syntax at the end of the character creation script right is a [cursing diatribe] HASSLE !!<br/><br/>not correct format on purpose: msg (&quot;game.pov.alias + is a + game.pov.gender + game.pov.race + game.pov.class +.&quot;)<br/><br/>but, once you can finally understand how to do it correctly, you're already making huge progress, lol.<br/><br/>(It took me forever to get it right, laughs, and I still got trouble with it now and then too, laughs, HK GROWLES more curses!)<br/><br/>oh, and make sure you bloody remember to put the ending &quot;/&gt;&quot; on your scripts (LOL).<br/><br/>HK has quick a few common simple forgetful or typo mistakes that are a pain to track down in trouble-shooting... GRR <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2013-07-27T05:10:52+01:00",
      "LastEditDate": null
    }
  ]
}
