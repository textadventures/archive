{
  "Topic": {
    "TopicId": "azuoxzisnkuun2z3yvcnlg",
    "ForumId": "24",
    "Title": "Can I force scrolling to the top after a new section?",
    "LastUpdated": "2021-04-21T04:37:46.4463335Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "eab176f0-4648-4e0d-816a-12e614b6c602",
      "UserId": 541611,
      "Username": "eaj",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've got a bunch of JS code printing images and text, but my page automatically scrolls down and doesn't give me time to read anything.\r\n\r\n```\r\n[[JScode]]:\r\n    // prints a bunch text\r\n    squiffy.story.go(\"continue\");\r\n\r\n[[continue]]:\r\n[[Proceed]](nextsection)\r\n```\r\n\r\nIs there any way I can prevent this, or force it to scroll back to the top? ",
      "EditableFormat": "markdown",
      "HTML": "<p>I've got a bunch of JS code printing images and text, but my page automatically scrolls down and doesn't give me time to read anything.</p>\n<pre><code>[[JScode]]:\n    // prints a bunch text\n    squiffy.story.go(\"continue\");\n\n[[continue]]:\n[[Proceed]](nextsection)\n</code></pre>\n<p>Is there any way I can prevent this, or force it to scroll back to the top?</p>\n\n",
      "PostDate": "2021-04-21T04:37:46.4463335Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5461ae77-811a-45c4-aa4c-53d79f890a52",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI don't know how or why, but Squiffy only scrolls down like that when you run the game in the editor.  If you build the game and try it from the browser, it shouldn't scroll down past the beginning of the new text.\r\n\r\nIf this is not the case, let us know.  I just tested it on Windows 10 with the desktop version of Squiffy and with both the Firefox and Chrome browsers, but that doesn't mean it works the same way cross-platform and/or cross-browser.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I don't know how or why, but Squiffy only scrolls down like that when you run the game in the editor.  If you build the game and try it from the browser, it shouldn't scroll down past the beginning of the new text.</p>\n<p>If this is not the case, let us know.  I just tested it on Windows 10 with the desktop version of Squiffy and with both the Firefox and Chrome browsers, but that doesn't mean it works the same way cross-platform and/or cross-browser.</p>\n\n",
      "PostDate": "2021-04-21T05:00:50.471869Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "84a4fed9-911e-4428-a08f-28c8cfbc9f87",
      "UserId": 541611,
      "Username": "eaj",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, sorry for the late reply...\r\n\r\nI'm on Linux Mint and tested four different browsers (Firefox, Chrome, Opera, Brave) and they all scroll down when I preview and when I publish the game as well.\r\n\r\nI thought maybe this was happening because I'm forcing the game to go to a new section at the end of my JS code, and that section prints something on the screen. I have a section that puts a lot of stuff on the screen but that's it, it doesn't go to another section, and it doesn't scroll down.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, sorry for the late reply...</p>\n<p>I'm on Linux Mint and tested four different browsers (Firefox, Chrome, Opera, Brave) and they all scroll down when I preview and when I publish the game as well.</p>\n<p>I thought maybe this was happening because I'm forcing the game to go to a new section at the end of my JS code, and that section prints something on the screen. I have a section that puts a lot of stuff on the screen but that's it, it doesn't go to another section, and it doesn't scroll down.</p>\n\n",
      "PostDate": "2021-04-25T02:40:03.3645882Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "de7f40dc-2ec8-4ea4-a804-1fccf3c38142",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I missed that detail.  It probably is because you are forcing the new section.  I think we can still make it behave like you want it to behave.\r\n\r\n<s>First, though: How are you using Squiffy?  Online? The GUI editor? Or squiffy-cli?</s> You said \"preview\", so I'm going to assume you're not using squiffy-cli.",
      "EditableFormat": "markdown",
      "HTML": "<p>I missed that detail.  It probably is because you are forcing the new section.  I think we can still make it behave like you want it to behave.</p>\n<p><s>First, though: How are you using Squiffy?  Online? The GUI editor? Or squiffy-cli?</s> You said \"preview\", so I'm going to assume you're not using squiffy-cli.</p>\n\n",
      "PostDate": "2021-04-25T15:56:34.1415188Z",
      "LastEditDate": "2021-04-25T16:39:16.4863182Z",
      "link": null
    },
    {
      "PostId": "777db3a8-7320-45cb-83c1-9d8386e4284b",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### **NOTE**\r\n\r\nWhen I try to run [Squiffy 5.1.3 for Linux](https://textadventures.co.uk/squiffy) on Linux Mint 20.1, it won't open.  I get this error:\r\n\r\n<div style=\"color:white;background:black;font-family:monospace;\">\r\n<b><span style=\"color:limegreen;\">kv@lip100</span>:<span style=\"color:skyblue;\">~/Downloads/Squiffy-linux-x64$</span></b> ./Squiffy \r\n\r\n(Squiffy:3318): Pango-<span style=\"color:red;\">ERROR</span> **: <span style=\"color:blue;\">11:02:50.252</span>: Harfbuzz version too old (1.4.2)\r\n\r\nFailed to get crash dump id.\r\nReport Id: \r\nTrace/breakpoint trap (core dumped)</div>\r\n\r\n---\r\nSo, I had to download the Squiffy editor's source code from GitHub and change the version of Electron to 4.2.12 to get the editor to run.  That's all I did, though. So, it shouldn't effect the way Squiffy itself behaves.\r\n\r\n---\r\nAnyway, I just partially recreated what I think is this part of your game, but I omitted the ```squiffy.story.go``` part.\r\n\r\nI used ```squiffy.ui.write``` to print more than a screen-full of text, and it scrolled down (just as you describe) -- without using ```squiffy.story.go```.\r\n\r\nHrmm...\r\n\r\nStill looking into this.\r\n\r\nHere are the two functions involved:\r\n\r\n```js\r\n   squiffy.ui.write = function(text) {\r\n        screenIsClear = false;\r\n        scrollPosition = squiffy.ui.output.height();\r\n        currentSection.append(jQuery('<div/>').html(squiffy.ui.processText(text)));\r\n        squiffy.ui.scrollToEnd();\r\n    };\r\n```\r\n\r\n```js\r\n    squiffy.ui.scrollToEnd = function() {\r\n        var scrollTo, currentScrollTop, distance, duration;\r\n        if (squiffy.ui.settings.scroll === 'element') {\r\n            scrollTo = squiffy.ui.output[0].scrollHeight - squiffy.ui.output.height();\r\n            currentScrollTop = squiffy.ui.output.scrollTop();\r\n            if (scrollTo > currentScrollTop) {\r\n                distance = scrollTo - currentScrollTop;\r\n                duration = distance / 0.4;\r\n                squiffy.ui.output.stop().animate({ scrollTop: scrollTo }, duration);\r\n            }\r\n        }\r\n        else {\r\n            scrollTo = scrollPosition;\r\n            currentScrollTop = Math.max(jQuery('body').scrollTop(), jQuery('html').scrollTop());\r\n            if (scrollTo > currentScrollTop) {\r\n                var maxScrollTop = jQuery(document).height() - jQuery(window).height();\r\n                if (scrollTo > maxScrollTop) scrollTo = maxScrollTop;\r\n                distance = scrollTo - currentScrollTop;\r\n                duration = distance / 0.5;\r\n                jQuery('body,html').stop().animate({ scrollTop: scrollTo }, duration);\r\n            }\r\n        }\r\n    };\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<h3><strong>NOTE</strong></h3>\n<p>When I try to run <a href=\"https://textadventures.co.uk/squiffy\">Squiffy 5.1.3 for Linux</a> on Linux Mint 20.1, it won't open.  I get this error:</p>\n<div style=\"color: white; background: black; font-family: monospace\">\n<b><span style=\"color: limegreen\">kv@lip100</span>:<span style=\"color: skyblue\">~/Downloads/Squiffy-linux-x64$</span></b> ./Squiffy \n<p>(Squiffy:3318): Pango-<span style=\"color: red\">ERROR</span> **: <span style=\"color: blue\">11:02:50.252</span>: Harfbuzz version too old (1.4.2)</p>\n<p>Failed to get crash dump id.<br>\nReport Id:<br>\nTrace/breakpoint trap (core dumped)</p></div><p></p>\n<hr>\n<p>So, I had to download the Squiffy editor's source code from GitHub and change the version of Electron to 4.2.12 to get the editor to run.  That's all I did, though. So, it shouldn't effect the way Squiffy itself behaves.</p>\n<hr>\n<p>Anyway, I just partially recreated what I think is this part of your game, but I omitted the <code>squiffy.story.go</code> part.</p>\n<p>I used <code>squiffy.ui.write</code> to print more than a screen-full of text, and it scrolled down (just as you describe) -- without using <code>squiffy.story.go</code>.</p>\n<p>Hrmm...</p>\n<p>Still looking into this.</p>\n<p>Here are the two functions involved:</p>\n<pre><code>   squiffy.ui.write = function(text) {\n        screenIsClear = false;\n        scrollPosition = squiffy.ui.output.height();\n        currentSection.append(jQuery('&lt;div/&gt;').html(squiffy.ui.processText(text)));\n        squiffy.ui.scrollToEnd();\n    };\n</code></pre>\n<pre><code>    squiffy.ui.scrollToEnd = function() {\n        var scrollTo, currentScrollTop, distance, duration;\n        if (squiffy.ui.settings.scroll === 'element') {\n            scrollTo = squiffy.ui.output[0].scrollHeight - squiffy.ui.output.height();\n            currentScrollTop = squiffy.ui.output.scrollTop();\n            if (scrollTo &gt; currentScrollTop) {\n                distance = scrollTo - currentScrollTop;\n                duration = distance / 0.4;\n                squiffy.ui.output.stop().animate({ scrollTop: scrollTo }, duration);\n            }\n        }\n        else {\n            scrollTo = scrollPosition;\n            currentScrollTop = Math.max(jQuery('body').scrollTop(), jQuery('html').scrollTop());\n            if (scrollTo &gt; currentScrollTop) {\n                var maxScrollTop = jQuery(document).height() - jQuery(window).height();\n                if (scrollTo &gt; maxScrollTop) scrollTo = maxScrollTop;\n                distance = scrollTo - currentScrollTop;\n                duration = distance / 0.5;\n                jQuery('body,html').stop().animate({ scrollTop: scrollTo }, duration);\n            }\n        }\n    };\n</code></pre>\n\n",
      "PostDate": "2021-04-25T16:37:49.5166025Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "844d8d3e-209a-4144-8292-38e07ecf685d",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know.  This is beyond me.\r\n\r\nWhen I put the extra-long text in a section so it prints normally, it doesn't scroll down after building the game.\r\n\r\nThat part is the second section that prints in the game, because the first action I take is clicking to print that part.  So, that part, in my test build, has the element id \"squiffy-section-2\".  (This will undoubtedly be different in the actual game.)\r\n\r\nAnyway, when I just add my text to Squiffy normally and it doesn't scroll to the end, by \"squiffy-section-2\" element is like this:\r\n\r\n```\r\n<div id=\"squiffy-section-2>\r\n  <div>\r\n    <p>...</p> [overflow]\r\n  </div>\r\n</div>\r\n```\r\n\r\n---\r\nWhen using ```squiffy.ui.write``` to print the long text:\r\n\r\n```\r\n<div id=\"squiffy-section-2>\r\n  <div>...</div> [overflow]\r\n  <div></div> [overflow]\r\n</div>\r\n```\r\n\r\n---\r\nSeeing that, I thought maybe wrapping the long text with ```<p>``` before saving it as a JS string might solve the scrolling-to-end issue.  Nope.  Same behavior.  It just has the extra paragraph element nested in there, too:\r\n\r\n```\r\n<div id=\"squiffy-section-2>\r\n  <div>\r\n    <p>...</p> [overflow]\r\n  </div>\r\n  <div></div> [overflow]\r\n</div>\r\n```\r\n\r\n\r\n---\r\nWhen using ```squiffy.ui.write()```, it calls ```squiffy.ui.scrollToEnd()```, and that seems to add an empty ```<div>``` element after the text?\r\n\r\nWe need someone else to help.  Fooling around with the way the scrolling behaves is beyond me.\r\n\r\nHere's my test code:\r\n\r\n<pre id\"code-div\" style=\"max-height:300px;overflow:auto;max-width:1054px;\"><code style=\"white-space: pre;\">    var s = \"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vehicula molestie urna, eu ullamcorper dolor mollis ac. Mauris fringilla a sem vitae viverra. Nulla sed ipsum ut ante varius pharetra. Integer at nunc nisl. Nulla non luctus neque. Ut vel sapien in dolor convallis semper. Aenean efficitur tellus eu luctus blandit. Donec vulputate porta nibh, ut placerat metus eleifend vel. Vestibulum congue ultrices eros quis tincidunt.<br/><br/>Phasellus at justo sagittis, laoreet nisl ut, sagittis metus. Praesent ut vehicula neque, a aliquet neque. Fusce non mauris nunc. Mauris porttitor ligula cursus, faucibus odio vitae, egestas lacus. Sed et fringilla ex. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In euismod odio in odio ultrices accumsan. Mauris eget commodo metus. Phasellus nisl libero, vehicula nec sem ac, facilisis convallis neque. Nam accumsan in ipsum quis blandit. Phasellus tellus mi, hendrerit quis dui vel, auctor varius tellus. Vivamus gravida ac arcu sed feugiat. Vivamus a porta risus. Nulla maximus arcu eget orci rhoncus, eu tristique lectus ultricies. Vivamus in pulvinar nisi. Sed eu imperdiet nulla.<br/><br/>Fusce sagittis lacinia sapien in placerat. Etiam quis lacinia nisl, a mollis mi. Curabitur nisi justo, euismod vel placerat et, ornare eu nisl. Ut faucibus urna leo, a maximus ante elementum vitae. Aenean eget pharetra tellus. Integer quis elit aliquet, lacinia nisl ut, commodo purus. In consectetur ex sit amet hendrerit tempor. Quisque id sollicitudin massa, vehicula sagittis ex.<br/><br/>Vivamus ut lobortis arcu. Cras sollicitudin elit erat, nec molestie erat finibus id. Donec viverra ante eu quam tincidunt vestibulum. Nunc efficitur mattis nisl ac tristique. Nullam viverra convallis augue suscipit elementum. Proin auctor eleifend libero in sollicitudin. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi dui nulla, consequat at nisl quis, blandit aliquam massa. Vivamus congue fringilla nisl, sodales euismod leo malesuada eget. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec nec arcu varius, iaculis lorem a, ornare mauris. In lacinia, nibh finibus auctor ullamcorper, neque lacus imperdiet nisi, eget hendrerit massa nulla ac mauris. Sed cursus blandit mi convallis viverra. In placerat arcu sem. Nunc porttitor, quam hendrerit varius sollicitudin, metus elit cursus elit, eget consequat est felis id eros</p>\";\r\n    squiffy.set(\"loremIpsum\", s)\r\n    \r\nHello, world.\r\n\r\n[[test]]\r\n\r\n[[test]]:\r\n    squiffy.ui.write(squiffy.get(\"loremIpsum\"));\r\n    \r\n\r\n\r\n[[continue]]:\r\nProceed to next section . . .\r\n</code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know.  This is beyond me.</p>\n<p>When I put the extra-long text in a section so it prints normally, it doesn't scroll down after building the game.</p>\n<p>That part is the second section that prints in the game, because the first action I take is clicking to print that part.  So, that part, in my test build, has the element id \"squiffy-section-2\".  (This will undoubtedly be different in the actual game.)</p>\n<p>Anyway, when I just add my text to Squiffy normally and it doesn't scroll to the end, by \"squiffy-section-2\" element is like this:</p>\n<pre><code>&lt;div id=\"squiffy-section-2&gt;\n  &lt;div&gt;\n    &lt;p&gt;...&lt;/p&gt; [overflow]\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<hr>\n<p>When using <code>squiffy.ui.write</code> to print the long text:</p>\n<pre><code>&lt;div id=\"squiffy-section-2&gt;\n  &lt;div&gt;...&lt;/div&gt; [overflow]\n  &lt;div&gt;&lt;/div&gt; [overflow]\n&lt;/div&gt;\n</code></pre>\n<hr>\n<p>Seeing that, I thought maybe wrapping the long text with <code>&lt;p&gt;</code> before saving it as a JS string might solve the scrolling-to-end issue.  Nope.  Same behavior.  It just has the extra paragraph element nested in there, too:</p>\n<pre><code>&lt;div id=\"squiffy-section-2&gt;\n  &lt;div&gt;\n    &lt;p&gt;...&lt;/p&gt; [overflow]\n  &lt;/div&gt;\n  &lt;div&gt;&lt;/div&gt; [overflow]\n&lt;/div&gt;\n</code></pre>\n<hr>\n<p>When using <code>squiffy.ui.write()</code>, it calls <code>squiffy.ui.scrollToEnd()</code>, and that seems to add an empty <code>&lt;div&gt;</code> element after the text?</p>\n<p>We need someone else to help.  Fooling around with the way the scrolling behaves is beyond me.</p>\n<p>Here's my test code:</p>\n<pre style=\"max-height: 300px; overflow: auto; max-width: 1054px\"><code style=\"white-space: pre\">    var s = \"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vehicula molestie urna, eu ullamcorper dolor mollis ac. Mauris fringilla a sem vitae viverra. Nulla sed ipsum ut ante varius pharetra. Integer at nunc nisl. Nulla non luctus neque. Ut vel sapien in dolor convallis semper. Aenean efficitur tellus eu luctus blandit. Donec vulputate porta nibh, ut placerat metus eleifend vel. Vestibulum congue ultrices eros quis tincidunt.<br><br>Phasellus at justo sagittis, laoreet nisl ut, sagittis metus. Praesent ut vehicula neque, a aliquet neque. Fusce non mauris nunc. Mauris porttitor ligula cursus, faucibus odio vitae, egestas lacus. Sed et fringilla ex. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In euismod odio in odio ultrices accumsan. Mauris eget commodo metus. Phasellus nisl libero, vehicula nec sem ac, facilisis convallis neque. Nam accumsan in ipsum quis blandit. Phasellus tellus mi, hendrerit quis dui vel, auctor varius tellus. Vivamus gravida ac arcu sed feugiat. Vivamus a porta risus. Nulla maximus arcu eget orci rhoncus, eu tristique lectus ultricies. Vivamus in pulvinar nisi. Sed eu imperdiet nulla.<br><br>Fusce sagittis lacinia sapien in placerat. Etiam quis lacinia nisl, a mollis mi. Curabitur nisi justo, euismod vel placerat et, ornare eu nisl. Ut faucibus urna leo, a maximus ante elementum vitae. Aenean eget pharetra tellus. Integer quis elit aliquet, lacinia nisl ut, commodo purus. In consectetur ex sit amet hendrerit tempor. Quisque id sollicitudin massa, vehicula sagittis ex.<br><br>Vivamus ut lobortis arcu. Cras sollicitudin elit erat, nec molestie erat finibus id. Donec viverra ante eu quam tincidunt vestibulum. Nunc efficitur mattis nisl ac tristique. Nullam viverra convallis augue suscipit elementum. Proin auctor eleifend libero in sollicitudin. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi dui nulla, consequat at nisl quis, blandit aliquam massa. Vivamus congue fringilla nisl, sodales euismod leo malesuada eget. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec nec arcu varius, iaculis lorem a, ornare mauris. In lacinia, nibh finibus auctor ullamcorper, neque lacus imperdiet nisi, eget hendrerit massa nulla ac mauris. Sed cursus blandit mi convallis viverra. In placerat arcu sem. Nunc porttitor, quam hendrerit varius sollicitudin, metus elit cursus elit, eget consequat est felis id eros</p>\";\n    squiffy.set(\"loremIpsum\", s)\n    \nHello, world.\n\n[[test]]\n\n[[test]]:\n    squiffy.ui.write(squiffy.get(\"loremIpsum\"));\n    \n\n\n[[continue]]:\nProceed to next section . . .\n</code></pre>\n\n",
      "PostDate": "2021-04-25T17:09:57.1028086Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b75771f0-ad65-42db-b178-315d5549a1a4",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It doesn't seem to be the fault of ```squiffy.ui.scrollToEnd()```.  I disabled that, and it still scrolls to the end when printing a long bit of text via ```squiffy.ui.write()```.\r\n\r\nOne \"fix\" is give the first element you're printing with JS an id and use ```scrollIntoView()```.\r\n\r\n```\r\n    var s = \"<p id='scroll-to-me1'>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vehicula molestie urna, eu ullamcorper dolor mollis ac. Mauris fringilla a sem vitae viverra. Nulla sed ipsum ut ante varius pharetra. Integer at nunc nisl. Nulla non luctus neque. Ut vel sapien in dolor convallis semper. Aenean efficitur tellus eu luctus blandit. Donec vulputate porta nibh, ut placerat metus eleifend vel. Vestibulum congue ultrices eros quis tincidunt.<br/><br/>Phasellus at justo sagittis, laoreet nisl ut, sagittis metus. Praesent ut vehicula neque, a aliquet neque. Fusce non mauris nunc. Mauris porttitor ligula cursus, faucibus odio vitae, egestas lacus. Sed et fringilla ex. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In euismod odio in odio ultrices accumsan. Mauris eget commodo metus. Phasellus nisl libero, vehicula nec sem ac, facilisis convallis neque. Nam accumsan in ipsum quis blandit. Phasellus tellus mi, hendrerit quis dui vel, auctor varius tellus. Vivamus gravida ac arcu sed feugiat. Vivamus a porta risus. Nulla maximus arcu eget orci rhoncus, eu tristique lectus ultricies. Vivamus in pulvinar nisi. Sed eu imperdiet nulla.<br/><br/>Fusce sagittis lacinia sapien in placerat. Etiam quis lacinia nisl, a mollis mi. Curabitur nisi justo, euismod vel placerat et, ornare eu nisl. Ut faucibus urna leo, a maximus ante elementum vitae. Aenean eget pharetra tellus. Integer quis elit aliquet, lacinia nisl ut, commodo purus. In consectetur ex sit amet hendrerit tempor. Quisque id sollicitudin massa, vehicula sagittis ex.<br/><br/>Vivamus ut lobortis arcu. Cras sollicitudin elit erat, nec molestie erat finibus id. Donec viverra ante eu quam tincidunt vestibulum. Nunc efficitur mattis nisl ac tristique. Nullam viverra convallis augue suscipit elementum. Proin auctor eleifend libero in sollicitudin. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi dui nulla, consequat at nisl quis, blandit aliquam massa. Vivamus congue fringilla nisl, sodales euismod leo malesuada eget. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec nec arcu varius, iaculis lorem a, ornare mauris. In lacinia, nibh finibus auctor ullamcorper, neque lacus imperdiet nisi, eget hendrerit massa nulla ac mauris. Sed cursus blandit mi convallis viverra. In placerat arcu sem. Nunc porttitor, quam hendrerit varius sollicitudin, metus elit cursus elit, eget consequat est felis id eros</p>\";\r\n    squiffy.set(\"loremIpsum\", s)\r\n    \r\nHello, world.\r\n\r\n[[test]]\r\n\r\n[[test]]:\r\n    squiffy.ui.write(squiffy.get(\"loremIpsum\"));\r\n    setTimeout(function(){\r\n        document.getElementById(\"scroll-to-me1\").scrollIntoView();\r\n    },1000);\r\n\r\n\r\n[[continue]]:\r\nProceed to next section . . .\r\n```\r\n\r\n---\r\nIf I make the time out less than 1 second, it doesn't have enough time to work.  It might need 2 or 3 seconds when playing online.\r\n\r\nEven with the 1 second delay, it is off-putting -- even when I know it's going to do it.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>It doesn't seem to be the fault of <code>squiffy.ui.scrollToEnd()</code>.  I disabled that, and it still scrolls to the end when printing a long bit of text via <code>squiffy.ui.write()</code>.</p>\n<p>One \"fix\" is give the first element you're printing with JS an id and use <code>scrollIntoView()</code>.</p>\n<pre><code>    var s = \"&lt;p id='scroll-to-me1'&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vehicula molestie urna, eu ullamcorper dolor mollis ac. Mauris fringilla a sem vitae viverra. Nulla sed ipsum ut ante varius pharetra. Integer at nunc nisl. Nulla non luctus neque. Ut vel sapien in dolor convallis semper. Aenean efficitur tellus eu luctus blandit. Donec vulputate porta nibh, ut placerat metus eleifend vel. Vestibulum congue ultrices eros quis tincidunt.&lt;br/&gt;&lt;br/&gt;Phasellus at justo sagittis, laoreet nisl ut, sagittis metus. Praesent ut vehicula neque, a aliquet neque. Fusce non mauris nunc. Mauris porttitor ligula cursus, faucibus odio vitae, egestas lacus. Sed et fringilla ex. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In euismod odio in odio ultrices accumsan. Mauris eget commodo metus. Phasellus nisl libero, vehicula nec sem ac, facilisis convallis neque. Nam accumsan in ipsum quis blandit. Phasellus tellus mi, hendrerit quis dui vel, auctor varius tellus. Vivamus gravida ac arcu sed feugiat. Vivamus a porta risus. Nulla maximus arcu eget orci rhoncus, eu tristique lectus ultricies. Vivamus in pulvinar nisi. Sed eu imperdiet nulla.&lt;br/&gt;&lt;br/&gt;Fusce sagittis lacinia sapien in placerat. Etiam quis lacinia nisl, a mollis mi. Curabitur nisi justo, euismod vel placerat et, ornare eu nisl. Ut faucibus urna leo, a maximus ante elementum vitae. Aenean eget pharetra tellus. Integer quis elit aliquet, lacinia nisl ut, commodo purus. In consectetur ex sit amet hendrerit tempor. Quisque id sollicitudin massa, vehicula sagittis ex.&lt;br/&gt;&lt;br/&gt;Vivamus ut lobortis arcu. Cras sollicitudin elit erat, nec molestie erat finibus id. Donec viverra ante eu quam tincidunt vestibulum. Nunc efficitur mattis nisl ac tristique. Nullam viverra convallis augue suscipit elementum. Proin auctor eleifend libero in sollicitudin. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi dui nulla, consequat at nisl quis, blandit aliquam massa. Vivamus congue fringilla nisl, sodales euismod leo malesuada eget. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Donec nec arcu varius, iaculis lorem a, ornare mauris. In lacinia, nibh finibus auctor ullamcorper, neque lacus imperdiet nisi, eget hendrerit massa nulla ac mauris. Sed cursus blandit mi convallis viverra. In placerat arcu sem. Nunc porttitor, quam hendrerit varius sollicitudin, metus elit cursus elit, eget consequat est felis id eros&lt;/p&gt;\";\n    squiffy.set(\"loremIpsum\", s)\n    \nHello, world.\n\n[[test]]\n\n[[test]]:\n    squiffy.ui.write(squiffy.get(\"loremIpsum\"));\n    setTimeout(function(){\n        document.getElementById(\"scroll-to-me1\").scrollIntoView();\n    },1000);\n\n\n[[continue]]:\nProceed to next section . . .\n</code></pre>\n<hr>\n<p>If I make the time out less than 1 second, it doesn't have enough time to work.  It might need 2 or 3 seconds when playing online.</p>\n<p>Even with the 1 second delay, it is off-putting -- even when I know it's going to do it.</p>\n\n",
      "PostDate": "2021-04-25T18:13:52.040597Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ba11ddde-4cd8-443d-9dec-5a82965adb36",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`squiffy.ui.write` is used to add any text to the output. It records the current height of the text, adds the new text to the end, and then calls `squiffy.ui.scrollToEnd` to scroll to the position it noted; or to the end.\r\n\r\nThis means that whenever you add text (usually once per section/passage) it will attempt to either scroll the start of that text to the top of the screen, or scroll to the end (depending on the value of `squiffy.ui.settings.scroll` - which I assume you can set somewhere in the editor.\r\n\r\nIf you want to disable scrolling completely, you could replace that function:\r\n```\r\n    squiffy.ui.write = function(text) {\r\n        $('#'+squiffy.get('_output-section')).append($('<div>').html(text));\r\n    }\r\n```\r\n\r\nThat should disable automatic scrolling; but that's probably not such a good solution in general. Both because the player would need to scroll manually, and because it would only work from the section where you put the code, until the window is closed (resuming a saved game would restore the default behaviour).",
      "EditableFormat": "markdown",
      "HTML": "<p><code>squiffy.ui.write</code> is used to add any text to the output. It records the current height of the text, adds the new text to the end, and then calls <code>squiffy.ui.scrollToEnd</code> to scroll to the position it noted; or to the end.</p>\n<p>This means that whenever you add text (usually once per section/passage) it will attempt to either scroll the start of that text to the top of the screen, or scroll to the end (depending on the value of <code>squiffy.ui.settings.scroll</code> - which I assume you can set somewhere in the editor.</p>\n<p>If you want to disable scrolling completely, you could replace that function:</p>\n<pre><code>    squiffy.ui.write = function(text) {\n        $('#'+squiffy.get('_output-section')).append($('&lt;div&gt;').html(text));\n    }\n</code></pre>\n<p>That should disable automatic scrolling; but that's probably not such a good solution in general. Both because the player would need to scroll manually, and because it would only work from the section where you put the code, until the window is closed (resuming a saved game would restore the default behaviour).</p>\n\n",
      "PostDate": "2021-04-25T18:32:18.0728648Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c4db01b5-8422-449e-964e-0d8fd087d2e2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah, I guess you're ahead of me on this one",
      "EditableFormat": "markdown",
      "HTML": "<p>ah, I guess you're ahead of me on this one</p>\n\n",
      "PostDate": "2021-04-25T18:34:15.3801499Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f1b625fe-ba88-4642-94b2-88892adc3dab",
      "UserId": 541611,
      "Username": "eaj",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, thanks for the replies.\r\n\r\n@K.V., that works, but the only problem is that the amount of text printed varies a lot, because I'm also showing a lot of images with all the players still alive and what happened to them every round. It can take anywhere from 1 to 6 seconds to get to the bottom with the auto scrolling. So at the beginning of the game it takes a long time to scroll down, and this time gets lower after each round and at the end that isn't a problem at all. Is there a way to change/get the scrolling speed, and something like how many lines were printed/current line so my code can estimate how long to wait before scrolling back up?\r\n\r\nI could also make a \"Scroll to Top\" section and let the player choose if they want to do so, but the problem is that the \"Proceed\" button then becomes unclickable and I can't seem to make a Scroll to Top passage work, only section.\r\n\r\nFor some context, I'm trying to make something similar to this: https://brantsteele.net/hungergames/reaping.php\r\nbut without some of its limitations and a lot more options .\r\n\r\n\r\n@mrangel, I don't think disabling the auto scrolling completely would be a problem for me. But I can't figure out how tocentralize my text, I was using this before:\r\n````\r\n    squiffy.set(\"text\", sometext);\r\n    squiffy.ui.write(\"<div style='text-align: center'> <span>{text}</span><br></div>\");\r\n````\r\nBut replacing the function as in your post this doesn't work anymore, it just writes \"{text}\" instead. And for some reason my images aren't being printed anymore. I was calling a new section to do so, but after replacing the function it just prints empty images, even though it doesn't even use the ```squiffy.ui.write``` command.\r\n````\r\n[[pics]]:\r\n<p style=\" text-align: center; margin-bottom: 0.5em;\">\r\n<img src=\"{img}\" width=\"100\" height=\"100\"> </p>\r\n````\r\nAlso, what does ```squiffy.ui.settings.scroll``` do? Couldn't find anything on it.\r\n\r\nP.S.: I'm using the online editor btw.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, thanks for the replies.</p>\n<p>@K.V., that works, but the only problem is that the amount of text printed varies a lot, because I'm also showing a lot of images with all the players still alive and what happened to them every round. It can take anywhere from 1 to 6 seconds to get to the bottom with the auto scrolling. So at the beginning of the game it takes a long time to scroll down, and this time gets lower after each round and at the end that isn't a problem at all. Is there a way to change/get the scrolling speed, and something like how many lines were printed/current line so my code can estimate how long to wait before scrolling back up?</p>\n<p>I could also make a \"Scroll to Top\" section and let the player choose if they want to do so, but the problem is that the \"Proceed\" button then becomes unclickable and I can't seem to make a Scroll to Top passage work, only section.</p>\n<p>For some context, I'm trying to make something similar to this: https://brantsteele.net/hungergames/reaping.php<br>\nbut without some of its limitations and a lot more options .</p>\n<p>@mrangel, I don't think disabling the auto scrolling completely would be a problem for me. But I can't figure out how tocentralize my text, I was using this before:</p>\n<pre><code>    squiffy.set(\"text\", sometext);\n    squiffy.ui.write(\"&lt;div style='text-align: center'&gt; &lt;span&gt;{text}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;\");\n</code></pre>\n<p>But replacing the function as in your post this doesn't work anymore, it just writes \"{text}\" instead. And for some reason my images aren't being printed anymore. I was calling a new section to do so, but after replacing the function it just prints empty images, even though it doesn't even use the <code>squiffy.ui.write</code> command.</p>\n<pre><code>[[pics]]:\n&lt;p style=\" text-align: center; margin-bottom: 0.5em;\"&gt;\n&lt;img src=\"{img}\" width=\"100\" height=\"100\"&gt; &lt;/p&gt;\n</code></pre>\n<p>Also, what does <code>squiffy.ui.settings.scroll</code> do? Couldn't find anything on it.</p>\n<p>P.S.: I'm using the online editor btw.</p>\n\n",
      "PostDate": "2021-04-26T02:41:18.8412543Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "78f05af5-ead0-4ad5-93c8-7bf0faea4d67",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, that was me being careless. I missed out the call to `squiffy.ui.processText`.\r\nSo it should be:\r\n```\r\n    squiffy.ui.write = function(text) {\r\n        $('#'+squiffy.get('_output-section')).append($('<div>').html(squiffy.ui.processText(text)));\r\n    }\r\n```\r\n\r\nYou could also make a copy of the original function, if you want to have some form of auto-scrolling. For example:\r\n```\r\n    if (!squiffy.ui.writeAndScroll) {\r\n        squiffy.ui.writeAndScroll = squiffy.ui.write;\r\n        squiffy.ui.write = function(text) {\r\n            $('#'+squiffy.get('_output-section')).append($('<div>').html(text));\r\n        }\r\n    }\r\n```\r\nIn this case, you could then use `squiffy.ui.writeAndScroll` instead of just `write` at the start of each turn. Then you could have it scroll down to the start of each turn, but not scroll for the remainder of the output.\r\n\r\nAs far as making it work in a saved game goes, you could put the function in the master section. Checking for the existence of `writeAndScroll` in this modified version means that it will only run once, and I think that would be sufficient to make it work.\r\n\r\nHope there's not anything else I've missed there.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, that was me being careless. I missed out the call to <code>squiffy.ui.processText</code>.<br>\nSo it should be:</p>\n<pre><code>    squiffy.ui.write = function(text) {\n        $('#'+squiffy.get('_output-section')).append($('&lt;div&gt;').html(squiffy.ui.processText(text)));\n    }\n</code></pre>\n<p>You could also make a copy of the original function, if you want to have some form of auto-scrolling. For example:</p>\n<pre><code>    if (!squiffy.ui.writeAndScroll) {\n        squiffy.ui.writeAndScroll = squiffy.ui.write;\n        squiffy.ui.write = function(text) {\n            $('#'+squiffy.get('_output-section')).append($('&lt;div&gt;').html(text));\n        }\n    }\n</code></pre>\n<p>In this case, you could then use <code>squiffy.ui.writeAndScroll</code> instead of just <code>write</code> at the start of each turn. Then you could have it scroll down to the start of each turn, but not scroll for the remainder of the output.</p>\n<p>As far as making it work in a saved game goes, you could put the function in the master section. Checking for the existence of <code>writeAndScroll</code> in this modified version means that it will only run once, and I think that would be sufficient to make it work.</p>\n<p>Hope there's not anything else I've missed there.</p>\n\n",
      "PostDate": "2021-04-26T11:12:38.578199Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "170811c0-6bfd-464c-aa25-6331f4d987f0",
      "UserId": 541611,
      "Username": "eaj",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh it works now, thanks a lot!",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh it works now, thanks a lot!</p>\n\n",
      "PostDate": "2021-04-27T06:38:54.532593Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
