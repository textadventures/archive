{
  "Topic": {
    "TopicId": "0ctxnoga9ekku2wjotdnxa",
    "ForumId": "24",
    "Title": "yet another question about random number generating",
    "LastUpdated": "2020-01-16T00:44:22.6866199Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "22207715-2668-4104-ac06-46c192d78836",
      "UserId": 29244,
      "Username": "PrototypeC3V3",
      "AvatarUrl": "https://secure.gravatar.com/avatar/eaa9c65acfdddaad70deeb86c665be9f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\n\r\nI'm currently designing a small combat system for my story, and I regularly have to generate random numbers (for values, rolls and text variants).\r\n\r\nFor that I am using a which someone showed on this forum (I don't remember who it was but thank you!), but I'm wondering if it's really necessary to repeat the \"var randomnumber=function bla bla bla\" before every roll? I tried removing all but the first ones and it seemed to work but I'd rather be sure I'm not missing anything important.\r\n<br>\r\n\r\n```\r\n\r\n    var randomnumber = function rng(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    set (\"text_roll_A\", randomnumber(1,5));\r\n    \r\n    var randomnumber = function rng(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    set (\"ambushed\", randomnumber(1,21));\r\n    \r\n    var randomnumber = function rng(min, max) {\r\n      return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    set (\"01_enemy\", randomnumber(1,3));\r\n\r\n```\r\n<br>\r\nAlso I found if I want to throw a d20 (c.f. above \"ambushed\"), I have to type \"randomnumber(1,21), else it never lands on a 20. Is this normal?\r\n\r\n<br>\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>I'm currently designing a small combat system for my story, and I regularly have to generate random numbers (for values, rolls and text variants).</p>\n<p>For that I am using a which someone showed on this forum (I don't remember who it was but thank you!), but I'm wondering if it's really necessary to repeat the \"var randomnumber=function bla bla bla\" before every roll? I tried removing all but the first ones and it seemed to work but I'd rather be sure I'm not missing anything important.<br>\n<br></p>\n<pre><code>\n    var randomnumber = function rng(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    set (\"text_roll_A\", randomnumber(1,5));\n    \n    var randomnumber = function rng(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    set (\"ambushed\", randomnumber(1,21));\n    \n    var randomnumber = function rng(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    set (\"01_enemy\", randomnumber(1,3));\n\n</code></pre>\n<br>\nAlso I found if I want to throw a d20 (c.f. above \"ambushed\"), I have to type \"randomnumber(1,21), else it never lands on a 20. Is this normal?\n<br>\nThanks!\n\n",
      "PostDate": "2020-01-16T00:44:22.6866199Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b3d0eae-4713-4efd-8d31-3ce60a56233b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, the off-by-one error is usual. The function `Math.random` generates a number which is less that 1.0, and greater than or equal to 0.0. So the range in that function includes the min value but not the max.\r\n\r\nYou shouldn't need to repeat the function. I don't know how Squiffy handles javascript scope, but unless it's doing something really weird the function should continue to be available once it's been set.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, the off-by-one error is usual. The function <code>Math.random</code> generates a number which is less that 1.0, and greater than or equal to 0.0. So the range in that function includes the min value but not the max.</p>\n<p>You shouldn't need to repeat the function. I don't know how Squiffy handles javascript scope, but unless it's doing something really weird the function should continue to be available once it's been set.</p>\n\n",
      "PostDate": "2020-01-16T10:05:03.1880697Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "430fbf8d-3f56-4d13-830e-862966a4f648",
      "UserId": 29244,
      "Username": "PrototypeC3V3",
      "AvatarUrl": "https://secure.gravatar.com/avatar/eaa9c65acfdddaad70deeb86c665be9f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok thanks for the help!\r\nIt does need to be set for every section, though, right?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok thanks for the help!<br>\nIt does need to be set for every section, though, right?</p>\n\n",
      "PostDate": "2020-01-17T20:00:29.0575705Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4c5c0926-f90c-4ae9-8804-6dd6b4c4e418",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> It does need to be set for every section, though, right?\r\n\r\nI don't know. With `var` in front of it, it'll be limited to the current scope frame. It's probably safe to assume Squiffy has one frame per section, but there are other ways it could be implemented, so it might be worth testing that.\r\n\r\nFrom my javascript experience (a long time ago), I would have made the code something like:\r\n```\r\n    window.randomnumber = function(min, max) {\r\n      return Math.floor(Math.random() * (max + 1 - min)) + min;\r\n    };\r\n```\r\n(which lets 'max' be the highest number generated so it's more intuitive to use, and explicitly makes randomnumber a global function so you can carry on using it until the page is reloaded)\r\n\r\nI don't have the Squiffy experience; and the developers could have done something to stop `window.` working like that, but I can't see why they would.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It does need to be set for every section, though, right?</p>\n</blockquote>\n<p>I don't know. With <code>var</code> in front of it, it'll be limited to the current scope frame. It's probably safe to assume Squiffy has one frame per section, but there are other ways it could be implemented, so it might be worth testing that.</p>\n<p>From my javascript experience (a long time ago), I would have made the code something like:</p>\n<pre><code>    window.randomnumber = function(min, max) {\n      return Math.floor(Math.random() * (max + 1 - min)) + min;\n    };\n</code></pre>\n<p>(which lets 'max' be the highest number generated so it's more intuitive to use, and explicitly makes randomnumber a global function so you can carry on using it until the page is reloaded)</p>\n<p>I don't have the Squiffy experience; and the developers could have done something to stop <code>window.</code> working like that, but I can't see why they would.</p>\n\n",
      "PostDate": "2020-01-17T22:33:18.0106084Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
