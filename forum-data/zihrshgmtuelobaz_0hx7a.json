{
  "Topic": {
    "TopicId": "zihrshgmtuelobaz_0hx7a",
    "ForumId": "10",
    "Title": "Beginner needs help with object-presence conditional commands (Solved)",
    "LastUpdated": "2022-02-20T07:50:18.8711534Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0c1bf7b1-9293-4861-b968-78187cfe8907",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://secure.gravatar.com/avatar/966b35c30e692659ec8945e9c0e9403d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I have a question about either Scope, or If conditions, depending on how it is easiest to implement:\r\n\r\nI would like to have 2 Commands - 'Light' and 'Sleep'\r\n\r\nThe Light command is simple:\r\n-Only allow the Player to Light #object# (switch on object) if the Player's Inventory contains an Object with the Attribute 'ISaIGNITER', and if the target object has Attribute 'ISaBURNER'\r\n\r\nI would like the Sleep Command to have 2 outputs, making it a little trickier:\r\n\r\n1) If the player is in a room which contains a reachable object with the Attribute 'ISaBED' - the output will be 'You sleep comfortably' with say, 3 HP gained.\r\n2) If the player is in any room that does not contain an Object with Attribute 'ISaBED', I want output 'You sleep poorly' and a gain of only say, 1 HP.\r\n\r\nNote: I may want the possibility of an inventory object which also has 'ISaBED' (bedroll, etc) - which probably wont need to be dropped or anything, just present in inventory.\r\n\r\nI hope that is not too sloppily described, any help would be much appreciated, this is my first time using Quest or making any kind of Text Adventure!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I have a question about either Scope, or If conditions, depending on how it is easiest to implement:</p>\n<p>I would like to have 2 Commands - 'Light' and 'Sleep'</p>\n<p>The Light command is simple:<br>\n-Only allow the Player to Light #object# (switch on object) if the Player's Inventory contains an Object with the Attribute 'ISaIGNITER', and if the target object has Attribute 'ISaBURNER'</p>\n<p>I would like the Sleep Command to have 2 outputs, making it a little trickier:</p>\n<ol>\n<li>If the player is in a room which contains a reachable object with the Attribute 'ISaBED' - the output will be 'You sleep comfortably' with say, 3 HP gained.</li>\n<li>If the player is in any room that does not contain an Object with Attribute 'ISaBED', I want output 'You sleep poorly' and a gain of only say, 1 HP.</li>\n</ol>\n<p>Note: I may want the possibility of an inventory object which also has 'ISaBED' (bedroll, etc) - which probably wont need to be dropped or anything, just present in inventory.</p>\n<p>I hope that is not too sloppily described, any help would be much appreciated, this is my first time using Quest or making any kind of Text Adventure!</p>\n\n",
      "PostDate": "2022-02-20T07:50:18.8711534Z",
      "LastEditDate": "2022-02-20T12:33:30.4271509Z",
      "link": null
    },
    {
      "PostId": "baac6681-4b69-4225-be0e-b28c2a210390",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm realising that what I really wish is that there were IF options such as:\r\n\r\n- Reachable has Attribute\r\n- Visible has Attribute\r\n- Inventory contains Attribute",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm realising that what I really wish is that there were IF options such as:</p>\n<ul>\n<li>Reachable has Attribute</li>\n<li>Visible has Attribute</li>\n<li>Inventory contains Attribute</li>\n</ul>\n\n",
      "PostDate": "2022-02-20T09:11:06.0480618Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "93ef4a04-fc02-407f-83d9-d87c5696f8fb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> * Reachable has Attribute\r\n> * Visible has Attribute\r\n> * Inventory contains Attribute\r\n\r\nYou can write all of these expressions using the functions `FilterByAttribute` and `FilterByNotAttribute`.\r\n\r\nThe various Scope commands mostly return a list of objects. You can then use the Filter commands to filter this list of objects down to the ones you want; and `ListCount` to check if there are any objects in the list.\r\n\r\n* `ScopeReachableInventory()` gives all the reachable objects in your inventory\r\n* `FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)` gives all objects in the inventory whose ISaIGNITER attribute has the value `true`\r\n* `ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true))` gives the number of items\r\n* `ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)) > 0` gives `true` if the player has one\r\n\r\nSo your \"light #object#\" script might look like:\r\n```\r\nif (not GetBoolean (object, \"ISaBURNER\")) {\r\n  msg (\"That's not something you can light.\")\r\n}\r\nelse if (ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)) = 0) {\r\n  msg (\"You don't have anything to light it with.\")\r\n}\r\nelse {\r\n  // code to light it goes here\r\n}\r\n```\r\n\r\nNote that this is assuming those attributes will have the value `true`. If you want to just test that the attribute *exists*, then you would check if it matches the special \"no such attribute\" value, `null`. Like this:\r\n<pre><code>if (not <b style=\"color: blue\">HasAttribute</b> (object, \"ISaBURNER\")) {\r\n  msg (\"That's not something you can light.\")\r\n}\r\nelse if (ListCount (FilterBy<b style=\"color: blue\">Not</b>Attribute (ScopeReachableInventory(), \"ISaIGNITER\", <b style=\"color: blue\">null</b>)) = 0) {\r\n  msg (\"You don't have anything to light it with.\")\r\n}\r\nelse {\r\n  // code to light it goes here\r\n}</code></pre>\r\n\r\nAnd your sleep command should also be pretty simple:\r\n```\r\nif (ListCount (FilterByNotAttribute (ScopeReachable(), \"ISaBED\", null)) > 0) {\r\n  msg (\"You sleep comfortably.\")\r\n  // increase HP by 3\r\n}\r\nelse {\r\n  msg (\"You sleep poorly.\")\r\n  // increase HP by 1\r\n}\r\n```\r\n(I used `ScopeReachable` here; which includes objects both in the room and in the inventory. If you don't want to allow a bed in the inventory, you could use `ScopeReachableNotHeld` instead)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<ul>\n<li>Reachable has Attribute</li>\n<li>Visible has Attribute</li>\n<li>Inventory contains Attribute</li>\n</ul>\n</blockquote>\n<p>You can write all of these expressions using the functions <code>FilterByAttribute</code> and <code>FilterByNotAttribute</code>.</p>\n<p>The various Scope commands mostly return a list of objects. You can then use the Filter commands to filter this list of objects down to the ones you want; and <code>ListCount</code> to check if there are any objects in the list.</p>\n<ul>\n<li><code>ScopeReachableInventory()</code> gives all the reachable objects in your inventory</li>\n<li><code>FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)</code> gives all objects in the inventory whose ISaIGNITER attribute has the value <code>true</code></li>\n<li><code>ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true))</code> gives the number of items</li>\n<li><code>ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)) &gt; 0</code> gives <code>true</code> if the player has one</li>\n</ul>\n<p>So your \"light #object#\" script might look like:</p>\n<pre><code>if (not GetBoolean (object, \"ISaBURNER\")) {\n  msg (\"That's not something you can light.\")\n}\nelse if (ListCount (FilterByAttribute (ScopeReachableInventory(), \"ISaIGNITER\", true)) = 0) {\n  msg (\"You don't have anything to light it with.\")\n}\nelse {\n  // code to light it goes here\n}\n</code></pre>\n<p>Note that this is assuming those attributes will have the value <code>true</code>. If you want to just test that the attribute <em>exists</em>, then you would check if it matches the special \"no such attribute\" value, <code>null</code>. Like this:</p>\n<pre><code>if (not <b style=\"color: blue\">HasAttribute</b> (object, \"ISaBURNER\")) {\n  msg (\"That's not something you can light.\")\n}\nelse if (ListCount (FilterBy<b style=\"color: blue\">Not</b>Attribute (ScopeReachableInventory(), \"ISaIGNITER\", <b style=\"color: blue\">null</b>)) = 0) {\n  msg (\"You don't have anything to light it with.\")\n}\nelse {\n  // code to light it goes here\n}</code></pre>\n<p>And your sleep command should also be pretty simple:</p>\n<pre><code>if (ListCount (FilterByNotAttribute (ScopeReachable(), \"ISaBED\", null)) &gt; 0) {\n  msg (\"You sleep comfortably.\")\n  // increase HP by 3\n}\nelse {\n  msg (\"You sleep poorly.\")\n  // increase HP by 1\n}\n</code></pre>\n<p>(I used <code>ScopeReachable</code> here; which includes objects both in the room and in the inventory. If you don't want to allow a bed in the inventory, you could use <code>ScopeReachableNotHeld</code> instead)</p>\n\n",
      "PostDate": "2022-02-20T10:45:11.2315786Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6309e588-f0c1-4e0a-8253-6179a085c230",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, I have put in an IF (via GUI, not Code) which looks like:\r\n\r\nIF: [ expression ] [ listcount (filterbyattribute (scopereachable(), \"ISaBED\", true)) > 0 ]\r\n     ^Then:\r\n     Print [ message ] etcetcetcetc\r\n     etcetcetc\r\n\r\nBut when I use the Sleep command, I get the error:\r\n\r\n> sleep\r\nError running script: Error compiling expression 'listcount (filterbyattribute (scopereachable \"ISaBED\", true)) > 0': Unknown object or variable 'scopereachable'\r\n\r\nIf I swap the scopereachable and filterbyattribute in the expression above, it gives the same error but with:\r\nUnknown object or variable 'filterbyattribute'\r\n\r\nwhich makes it look like a problem with syntax or something... any ideas?",
      "EditableFormat": "markdown",
      "HTML": "<p>So, I have put in an IF (via GUI, not Code) which looks like:</p>\n<p>IF: [ expression ] [ listcount (filterbyattribute (scopereachable(), \"ISaBED\", true)) &gt; 0 ]<br>\n^Then:<br>\nPrint [ message ] etcetcetcetc<br>\netcetcetc</p>\n<p>But when I use the Sleep command, I get the error:</p>\n<blockquote>\n<p>sleep<br>\nError running script: Error compiling expression 'listcount (filterbyattribute (scopereachable \"ISaBED\", true)) &gt; 0': Unknown object or variable 'scopereachable'</p>\n</blockquote>\n<p>If I swap the scopereachable and filterbyattribute in the expression above, it gives the same error but with:<br>\nUnknown object or variable 'filterbyattribute'</p>\n<p>which makes it look like a problem with syntax or something... any ideas?</p>\n\n",
      "PostDate": "2022-02-20T11:47:49.9425278Z",
      "LastEditDate": "2022-02-20T11:48:22.118606Z",
      "link": null
    },
    {
      "PostId": "cbe634fc-062f-404d-a585-831a12e7a659",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I redid the command using your filterbynotattribute method as you exampled above, and it works fine, but im still curious why the opposing version didn't work if you can tell me.",
      "EditableFormat": "markdown",
      "HTML": "<p>I redid the command using your filterbynotattribute method as you exampled above, and it works fine, but im still curious why the opposing version didn't work if you can tell me.</p>\n\n",
      "PostDate": "2022-02-20T11:53:19.3938433Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "563f868a-c8c3-44ae-866c-5e09a5280711",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I redid the command using your filterbynotattribute method as you exampled above, and it works fine, but im still curious why the opposing version didn't work if you can tell me.\r\n\r\nIn the error message you quote, there are several errors. Firstly, the capital letters (`scopereachable` is not the same as `ScopeReachable`). And secondly, the parentheses. `scopereachable` would be interpreted as the name of an object or variable (hence the \"unknown object or variable\" message), while `ScopeReachable()` is a function.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I redid the command using your filterbynotattribute method as you exampled above, and it works fine, but im still curious why the opposing version didn't work if you can tell me.</p>\n</blockquote>\n<p>In the error message you quote, there are several errors. Firstly, the capital letters (<code>scopereachable</code> is not the same as <code>ScopeReachable</code>). And secondly, the parentheses. <code>scopereachable</code> would be interpreted as the name of an object or variable (hence the \"unknown object or variable\" message), while <code>ScopeReachable()</code> is a function.</p>\n\n",
      "PostDate": "2022-02-20T12:54:58.673926Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0dcc05af-b7dd-4f9d-bf7d-c213a77bcc27",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm now having trouble with the Switch On Else result.\r\n\r\nI thought I could just put\r\n[Switch On] [Expression] object\r\n\r\nto have the game switch on the #object# from the original command.\r\n\r\nHow do I refer to the #object# given in the player command?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm now having trouble with the Switch On Else result.</p>\n<p>I thought I could just put<br>\n[Switch On] [Expression] object</p>\n<p>to have the game switch on the #object# from the original command.</p>\n<p>How do I refer to the #object# given in the player command?</p>\n\n",
      "PostDate": "2022-02-20T13:18:29.8778726Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "226fc537-8500-4ed4-98c4-d5527929dc8a",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, I was being super nooby, I figured it out!",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, I was being super nooby, I figured it out!</p>\n\n",
      "PostDate": "2022-02-20T13:42:27.6366067Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
