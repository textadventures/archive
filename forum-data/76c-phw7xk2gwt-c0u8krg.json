{
  "Topic": {
    "TopicId": "76c-phw7xk2gwt-c0u8krg",
    "ForumId": "10",
    "Title": "Sometimes, you don't even need a list.",
    "LastUpdated": "2017-11-10T14:43:22.3650704Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f5824652-2167-44d2-8e2c-9eb8e8282e4a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is a spin-off thread.\r\n\r\nHere is the original thread, which has been declared solved by the OP (which is why I created this thread: to avoid any confusion or thread-jacking): \r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/gv8tjdacvuwcn6kc9zcxhq/can-i-teleport-using-lists#106dedb2-049b-4d2d-a106-48b57650673e\r\n\r\n---\r\n**@mrangel**\r\n\r\n\r\n\r\n >I figured it's probably easier to filter twice, check for \"can_teleport\" and then check for \"visited\". \r\n\r\nI had a room you couldn't get to without teleporting, so I didn't use that \"visited\" check, but here it is with it back in there:\r\n\r\n```ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) {```\r\n\r\n---\r\n>If you pass an objectlist to ShowMenu, then result will be a string\r\n\r\nThis is definitely the case.  A [quick test](http://textadventures.co.uk/forum/quest/topic/gv8tjdacvuwcn6kc9zcxhq/can-i-teleport-using-lists#9db415fe-a2e4-4d91-a625-bac8a1cede7a) proved you right.\r\n\r\nThis makes the Object List less work.  \r\n\r\nYou'd have to ```list add (game.rooms, room.name)``` each time when using a String List (because you can't add an object to a string list).  Then the same thing is needed for ```list remove```.  That's two extra lines of code in this case, too.\r\n\r\nThe Object list is six less characters each time you add a room (```list add (game.rooms, room)```), and one extra line of code, which would only be needed once in the ```ShowMenu``` script (```result = GetObject(result)```).\r\n\r\n**NOTE:** Both methods work. I'm just looking for the most efficient method.  One that requires minimal coding and makes it easiest to add or remove rooms which are teleport destinations when editing the game.\r\n\r\nOn that note...\r\n\r\n---\r\nThe LIST REMOVE/LIST ADD method:\r\n\r\nFirst off, you have to create the ```game.rooms``` list and modify it numerous times when you do it this way, and, as mrangel pointed out earlier, the entire list is unnecessary.\r\n\r\n```\r\ngame.rooms = NewObjectList()\r\nlist add (game.rooms, The Lab)\r\nlist add (game. rooms, Teleport 1)\r\n```\r\n```\r\nlist remove (game.rooms, player.parent)\r\nShowMenu (\"Teleport\", game.rooms, true) {\r\n  list add (game.rooms, player.parent)\r\n  result = GetObject(result)\r\n  msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\r\n  MoveObject (game.pov, result)\r\n}\r\n\r\n```\r\n---\r\nThe following does the same thing, without even having to create the list, let alone modify it repeatedly:\r\n\r\n```\r\nShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) {\r\n  result = GetObject(result)\r\n  msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\r\n  MoveObject (game.pov, result)\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n---\r\nThis is the example code I worked up (you can't get to The Lab without teleporting in mine, so I lost the \"visited\" attribute check):\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Teleporting\">\r\n    <gameid>b1109d19-2c86-407b-972b-7ee2da530b2c</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n    <start type=\"script\">\r\n      The Lab.can_teleport = true\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"into the teleport booth\" to=\"Teleport 1\">\r\n      <inherit name=\"indirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"The Lab\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <description><![CDATA[{if The Lab.can_teleport:<br/>You can {command:TELEPORT} from here.}]]></description>\r\n  </object>\r\n  <object name=\"Teleport 1\">\r\n    <inherit name=\"editor_room\" />\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <beforefirstenter type=\"script\">\r\n      Teleport 1.can_teleport = true\r\n    </beforefirstenter>\r\n    <description><![CDATA[{if Teleport 1.can_teleport:<br/>You can {command:TELEPORT} from here.}]]></description>\r\n    <exit alias=\"out\" to=\"room\">\r\n      <inherit name=\"outdirection\" />\r\n    </exit>\r\n  </object>\r\n  <command name=\"teleport\">\r\n    <pattern>teleport;tele;port;t;travel</pattern>\r\n    <script>\r\n      if (HasAttribute(game.pov.parent, \"can_teleport\")) {\r\n        if (game.pov.parent.can_teleport) {\r\n          ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(AllObjects(), \"can_teleport\", true), game.pov.parent), true) {\r\n            result = GetObject(result)\r\n            msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\r\n            MoveObject (game.pov, result)\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It didn't work...\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"You can't teleport from here.\")\r\n      }\r\n    </script>\r\n  </command>\r\n</asl>\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is a spin-off thread.</p>\n<p>Here is the original thread, which has been declared solved by the OP (which is why I created this thread: to avoid any confusion or thread-jacking):</p>\n<p>http://textadventures.co.uk/forum/quest/topic/gv8tjdacvuwcn6kc9zcxhq/can-i-teleport-using-lists#106dedb2-049b-4d2d-a106-48b57650673e</p>\n<hr>\n<p><strong>@mrangel</strong></p>\n<blockquote>\n<p>I figured it's probably easier to filter twice, check for \"can_teleport\" and then check for \"visited\".</p>\n</blockquote>\n<p>I had a room you couldn't get to without teleporting, so I didn't use that \"visited\" check, but here it is with it back in there:</p>\n<p><code>ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) {</code></p>\n<hr>\n<blockquote>\n<p>If you pass an objectlist to ShowMenu, then result will be a string</p>\n</blockquote>\n<p>This is definitely the case.  A <a href=\"http://textadventures.co.uk/forum/quest/topic/gv8tjdacvuwcn6kc9zcxhq/can-i-teleport-using-lists#9db415fe-a2e4-4d91-a625-bac8a1cede7a\">quick test</a> proved you right.</p>\n<p>This makes the Object List less work.</p>\n<p>You'd have to <code>list add (game.rooms, room.name)</code> each time when using a String List (because you can't add an object to a string list).  Then the same thing is needed for <code>list remove</code>.  That's two extra lines of code in this case, too.</p>\n<p>The Object list is six less characters each time you add a room (<code>list add (game.rooms, room)</code>), and one extra line of code, which would only be needed once in the <code>ShowMenu</code> script (<code>result = GetObject(result)</code>).</p>\n<p><strong>NOTE:</strong> Both methods work. I'm just looking for the most efficient method.  One that requires minimal coding and makes it easiest to add or remove rooms which are teleport destinations when editing the game.</p>\n<p>On that note...</p>\n<hr>\n<p>The LIST REMOVE/LIST ADD method:</p>\n<p>First off, you have to create the <code>game.rooms</code> list and modify it numerous times when you do it this way, and, as mrangel pointed out earlier, the entire list is unnecessary.</p>\n<pre><code>game.rooms = NewObjectList()\nlist add (game.rooms, The Lab)\nlist add (game. rooms, Teleport 1)\n</code></pre>\n<pre><code>list remove (game.rooms, player.parent)\nShowMenu (\"Teleport\", game.rooms, true) {\n  list add (game.rooms, player.parent)\n  result = GetObject(result)\n  msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\n  MoveObject (game.pov, result)\n}\n\n</code></pre>\n<hr>\n<p>The following does the same thing, without even having to create the list, let alone modify it repeatedly:</p>\n<pre><code>ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) {\n  result = GetObject(result)\n  msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\n  MoveObject (game.pov, result)\n}\n</code></pre>\n<hr>\n<p>This is the example code I worked up (you can't get to The Lab without teleporting in mine, so I lost the \"visited\" attribute check):</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Teleporting\"&gt;\n    &lt;gameid&gt;b1109d19-2c86-407b-972b-7ee2da530b2c&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      The Lab.can_teleport = true\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"into the teleport booth\" to=\"Teleport 1\"&gt;\n      &lt;inherit name=\"indirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"The Lab\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;description&gt;&lt;![CDATA[{if The Lab.can_teleport:&lt;br/&gt;You can {command:TELEPORT} from here.}]]&gt;&lt;/description&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Teleport 1\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;beforefirstenter type=\"script\"&gt;\n      Teleport 1.can_teleport = true\n    &lt;/beforefirstenter&gt;\n    &lt;description&gt;&lt;![CDATA[{if Teleport 1.can_teleport:&lt;br/&gt;You can {command:TELEPORT} from here.}]]&gt;&lt;/description&gt;\n    &lt;exit alias=\"out\" to=\"room\"&gt;\n      &lt;inherit name=\"outdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=\"teleport\"&gt;\n    &lt;pattern&gt;teleport;tele;port;t;travel&lt;/pattern&gt;\n    &lt;script&gt;\n      if (HasAttribute(game.pov.parent, \"can_teleport\")) {\n        if (game.pov.parent.can_teleport) {\n          ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(AllObjects(), \"can_teleport\", true), game.pov.parent), true) {\n            result = GetObject(result)\n            msg (\"You teleport to: \"+GetDisplayName(result)+\".\")\n            MoveObject (game.pov, result)\n          }\n        }\n        else {\n          msg (\"It didn't work...\")\n        }\n      }\n      else {\n        msg (\"You can't teleport from here.\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2017-11-10T14:43:22.3650704Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "08c6a274-5985-4198-beb0-bb4353b6e3e3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I figured it's easier to work with the attribute if teleporting is just a way to get back to places you've already visited.\r\n\r\nAs far as stringlist vs objectlist; I think if it works out about the same amount of code.\r\n`list add (game.rooms, The Lab)` vs `list add (game.rooms, \"The Lab\")`.\r\nBut ... if you make a typo in the room name, the first will give you an error, making it easier to find the problem.\r\n\r\nAnd, of course, you can't use `FilterByAttribute` on a stringlist; and it would become a lot more effort to maintain if a room's alias isn't the same as its name. And ShowMenu can easily be made to show rooms in different colours (maybe for different parts of the world? Or highlighting locations with shops?) using \"Link colour\" on the object tab for the room.",
      "EditableFormat": "markdown",
      "HTML": "<p>I figured it's easier to work with the attribute if teleporting is just a way to get back to places you've already visited.</p>\n<p>As far as stringlist vs objectlist; I think if it works out about the same amount of code.<br>\n<code>list add (game.rooms, The Lab)</code> vs <code>list add (game.rooms, \"The Lab\")</code>.<br>\nBut ... if you make a typo in the room name, the first will give you an error, making it easier to find the problem.</p>\n<p>And, of course, you can't use <code>FilterByAttribute</code> on a stringlist; and it would become a lot more effort to maintain if a room's alias isn't the same as its name. And ShowMenu can easily be made to show rooms in different colours (maybe for different parts of the world? Or highlighting locations with shops?) using \"Link colour\" on the object tab for the room.</p>\n\n",
      "PostDate": "2017-11-10T17:18:42.6377125Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8fa1ebcf-f52c-482a-a3ae-f336262e73d5",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not going to add an attribute to every room I want to teleport to. I thought I said it works fine.\r\n\r\nEdit:\r\nThis is what it looks like now, in case anyone's interested.\r\n1. Start script\r\n```\r\ngame.rooms = NewObjectList()\r\nlist add (game.rooms, The Lab)\r\ngame.firstteleport = false\r\n```\r\n\r\n2. When you enter the first room in the second town\r\n```\r\nfirsttime {\r\n  list add (game.rooms, Teleport 1)\r\n}\r\ngame.firstteleport = true\r\n```\r\n\r\n3. Teleport command. Its pattern is teleport #object#\r\n```\r\nlist remove (game.rooms, player.parent)\r\nif (game.firstteleport = true) {\r\n  ShowMenu (\"Teleport\", game.rooms, true) {\r\n    list add (game.rooms, player.parent)\r\n    MoveObject (player, GetObject(result))\r\n  }\r\n}\r\nelse {\r\n  msg (\"...It didn't work...\")\r\n}\r\n```\r\n\r\nMy game, check it. http://textadventures.co.uk/games/view/5jllte-m4e2e2whw4gf5jq/pokemon-type-harley-johto-and-sinnoh",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not going to add an attribute to every room I want to teleport to. I thought I said it works fine.</p>\n<p>Edit:<br>\nThis is what it looks like now, in case anyone's interested.</p>\n<ol>\n<li>Start script</li>\n</ol>\n<pre><code>game.rooms = NewObjectList()\nlist add (game.rooms, The Lab)\ngame.firstteleport = false\n</code></pre>\n<ol start=\"2\">\n<li>When you enter the first room in the second town</li>\n</ol>\n<pre><code>firsttime {\n  list add (game.rooms, Teleport 1)\n}\ngame.firstteleport = true\n</code></pre>\n<ol start=\"3\">\n<li>Teleport command. Its pattern is teleport #object#</li>\n</ol>\n<pre><code>list remove (game.rooms, player.parent)\nif (game.firstteleport = true) {\n  ShowMenu (\"Teleport\", game.rooms, true) {\n    list add (game.rooms, player.parent)\n    MoveObject (player, GetObject(result))\n  }\n}\nelse {\n  msg (\"...It didn't work...\")\n}\n</code></pre>\n<p>My game, check it. http://textadventures.co.uk/games/view/5jllte-m4e2e2whw4gf5jq/pokemon-type-harley-johto-and-sinnoh</p>\n\n",
      "PostDate": "2017-11-10T23:04:15.4545555Z",
      "LastEditDate": "2017-11-10T23:37:29.931421Z",
      "link": null
    },
    {
      "PostId": "21ccf26e-306f-46f2-82d2-424ad54a62f0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I thought I said it works fine.\r\n\r\nYou speak the truth, jmne, hence my opening statement and note: \r\n\r\n**\\> Here is the original thread, **which has been declared [solved] by the OP (which is why I created this thread: to avoid any confusion or thread-jacking)**:**\r\n\r\n\r\n**\\>NOTE: Both methods work. I'm just looking for the most efficient method. One that requires minimal coding and makes it easiest to add or remove rooms which are teleport destinations when editing the game.**\r\n\r\n---\r\n>I'm not going to add an attribute to every room I want to teleport to.\r\n\r\nI'm not trying to convince you to do that.  You've got it working already, and that's great!\r\n\r\n...but, having said that, what's the difference between setting up one attribute for each room and taking the time to write the code to add each room to a list?\r\n\r\nEach way takes about the same amount of time in the beginning, but I think the scripts posted here would make it very easy to add extra destinations.\r\n\r\nPlus, I'm learning new things that can be done with Quest.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I thought I said it works fine.</p>\n</blockquote>\n<p>You speak the truth, jmne, hence my opening statement and note:</p>\n<p><strong>&gt; Here is the original thread, <strong>which has been declared [solved] by the OP (which is why I created this thread: to avoid any confusion or thread-jacking)</strong>:</strong></p>\n<p><strong>&gt;NOTE: Both methods work. I'm just looking for the most efficient method. One that requires minimal coding and makes it easiest to add or remove rooms which are teleport destinations when editing the game.</strong></p>\n<hr>\n<blockquote>\n<p>I'm not going to add an attribute to every room I want to teleport to.</p>\n</blockquote>\n<p>I'm not trying to convince you to do that.  You've got it working already, and that's great!</p>\n<p>...but, having said that, what's the difference between setting up one attribute for each room and taking the time to write the code to add each room to a list?</p>\n<p>Each way takes about the same amount of time in the beginning, but I think the scripts posted here would make it very easy to add extra destinations.</p>\n<p>Plus, I'm learning new things that can be done with Quest.</p>\n\n",
      "PostDate": "2017-11-11T03:33:44.3147323Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5274f3ad-817d-460c-9c4b-68a78e0fa184",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@jmnevil54:\r\n\r\nthis is going to cause a problem:\r\n\r\n```\r\nlist remove (game.rooms, player.parent)\r\nif (game.firstteleport = true) {\r\n  ShowMenu (\"Teleport\", game.rooms, true) {\r\n    list add (game.rooms, player.parent)\r\n    MoveObject (player, GetObject(result))\r\n  }\r\n}\r\nelse {\r\n  msg (\"...It didn't work...\")\r\n}\r\n```\r\n\r\nas you remove the room you're currently in/at from the list, but if/when your 'game.firstteleport = false', you don't add that room back into your list, which will cause you problems, as you thought that room was in your list, but now its not anymore.\r\n\r\nhere's the fix (just need to change the ordering/location of the 'list remove' script to get it to work correctly):\r\n\r\n```\r\n// from here\r\nif (game.firstteleport = true) {\r\n  list remove (game.rooms, player.parent) // to here, as now its within the 'if', meaning that the 'list remove' and 'list add' will always happen together, so no issues of removing an item from the list but not re-adding it to the list\r\n  ShowMenu (\"Teleport\", game.rooms, true) {\r\n    list add (game.rooms, player.parent)\r\n    MoveObject (player, GetObject(result))\r\n  }\r\n}\r\nelse {\r\n  msg (\"...It didn't work...\")\r\n}\r\n```\r\n\r\nhere's the code without my comments:\r\n\r\n```\r\nif (game.firstteleport = true) {\r\n  list remove (game.rooms, player.parent)\r\n  ShowMenu (\"Teleport\", game.rooms, true) {\r\n    list add (game.rooms, player.parent)\r\n    MoveObject (player, GetObject(result))\r\n  }\r\n}\r\nelse {\r\n  msg (\"...It didn't work...\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>@jmnevil54:</p>\n<p>this is going to cause a problem:</p>\n<pre><code>list remove (game.rooms, player.parent)\nif (game.firstteleport = true) {\n  ShowMenu (\"Teleport\", game.rooms, true) {\n    list add (game.rooms, player.parent)\n    MoveObject (player, GetObject(result))\n  }\n}\nelse {\n  msg (\"...It didn't work...\")\n}\n</code></pre>\n<p>as you remove the room you're currently in/at from the list, but if/when your 'game.firstteleport = false', you don't add that room back into your list, which will cause you problems, as you thought that room was in your list, but now its not anymore.</p>\n<p>here's the fix (just need to change the ordering/location of the 'list remove' script to get it to work correctly):</p>\n<pre><code>// from here\nif (game.firstteleport = true) {\n  list remove (game.rooms, player.parent) // to here, as now its within the 'if', meaning that the 'list remove' and 'list add' will always happen together, so no issues of removing an item from the list but not re-adding it to the list\n  ShowMenu (\"Teleport\", game.rooms, true) {\n    list add (game.rooms, player.parent)\n    MoveObject (player, GetObject(result))\n  }\n}\nelse {\n  msg (\"...It didn't work...\")\n}\n</code></pre>\n<p>here's the code without my comments:</p>\n<pre><code>if (game.firstteleport = true) {\n  list remove (game.rooms, player.parent)\n  ShowMenu (\"Teleport\", game.rooms, true) {\n    list add (game.rooms, player.parent)\n    MoveObject (player, GetObject(result))\n  }\n}\nelse {\n  msg (\"...It didn't work...\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-11-11T07:04:54.9033718Z",
      "LastEditDate": "2017-11-11T07:10:35.3873094Z",
      "link": null
    },
    {
      "PostId": "90dfaa38-cb16-4e48-b56d-47cd6f376a6c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this is a lot of operations (and memory space / overhead / functions / activation records), and multiplied by every time its done during game play:\r\n\r\n```\r\nShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) { /* scripting */ }\r\n```\r\n\r\nnow, you probably won't notice any actual practical slowdown, as this is getting into it more deeply/technically/theoretically...\r\n\r\nthis is probably like...\r\n\r\nO(M*(N^3)) // big O notation\r\n M = number of times it's run/done\r\nN^3 = its mathematical operations/memory-used (nesting 'X' iterations / 'X' function nesting, is: N^X)\r\n\r\n------\r\n\r\nwhereas, if you have a single List Attribute for your room teleport choices, and add/remove  rooms as/when needed (or not), that's much less operations to be doing (and less memory used too). It gives you more game design control too, as well.\r\n\r\nwhereas a single list/array is: O(1) // a constant\r\n\r\nplus the operation of adding/removing the item to/from the list, which are also constants as well\r\n\r\n---------\r\n\r\nhere's a pretty good quick search resource on the basics of this stuff, if anyone is interested:\r\n\r\nht.tps://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/\r\n\r\nI still struggle with this stuff, as I hate math and am still noob to Data Structure programming.",
      "EditableFormat": "markdown",
      "HTML": "<p>this is a lot of operations (and memory space / overhead / functions / activation records), and multiplied by every time its done during game play:</p>\n<pre><code>ShowMenu (\"Teleport\", ListExclude(FilterByAttribute(FilterByAttribute(AllObjects(), \"can_teleport\", true), \"visited\", true), game.pov.parent), true) { /* scripting */ }\n</code></pre>\n<p>now, you probably won't notice any actual practical slowdown, as this is getting into it more deeply/technically/theoretically...</p>\n<p>this is probably like...</p>\n<p>O(M*(N^3)) // big O notation<br>\nM = number of times it's run/done<br>\nN^3 = its mathematical operations/memory-used (nesting 'X' iterations / 'X' function nesting, is: N^X)</p>\n<hr>\n<p>whereas, if you have a single List Attribute for your room teleport choices, and add/remove  rooms as/when needed (or not), that's much less operations to be doing (and less memory used too). It gives you more game design control too, as well.</p>\n<p>whereas a single list/array is: O(1) // a constant</p>\n<p>plus the operation of adding/removing the item to/from the list, which are also constants as well</p>\n<hr>\n<p>here's a pretty good quick search resource on the basics of this stuff, if anyone is interested:</p>\n<p>ht.tps://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/</p>\n<p>I still struggle with this stuff, as I hate math and am still noob to Data Structure programming.</p>\n\n",
      "PostDate": "2017-11-11T07:21:21.4805793Z",
      "LastEditDate": "2017-11-11T07:49:05.6175166Z",
      "link": null
    },
    {
      "PostId": "4db5bf9d-e905-42a6-a844-adf3472d3901",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> whereas, if you have a single List Attribute for your room teleport choices, and add/remove rooms as/when needed (or not), that's much less operations to be doing (and less memory used too). It gives you more game design control too, as well.\r\n\r\nI would not worry about it. The Quest code makes lists of objects several times each turn, for the panes on the right and the what you can see list, rather than tryng to maintain a list that is modified as it goes along. I accept it wil be slower, but it is easier to code and far less error prone, as the lists cannot get out of sync with the game world.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>whereas, if you have a single List Attribute for your room teleport choices, and add/remove rooms as/when needed (or not), that's much less operations to be doing (and less memory used too). It gives you more game design control too, as well.</p>\n</blockquote>\n<p>I would not worry about it. The Quest code makes lists of objects several times each turn, for the panes on the right and the what you can see list, rather than tryng to maintain a list that is modified as it goes along. I accept it wil be slower, but it is easier to code and far less error prone, as the lists cannot get out of sync with the game world.</p>\n\n",
      "PostDate": "2017-11-11T09:10:46.4196883Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4a063cf9-f54a-4086-96a7-13661eed6913",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> now, you probably won't notice any actual practical slowdown, as this is getting into it more deeply/technically/theoretically...\r\n\r\nAnd incorrectly.\r\nThe code you're quoting is O(N).\r\n\r\nUsing a single list is O(N).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>now, you probably won't notice any actual practical slowdown, as this is getting into it more deeply/technically/theoretically...</p>\n</blockquote>\n<p>And incorrectly.<br>\nThe code you're quoting is O(N).</p>\n<p>Using a single list is O(N).</p>\n\n",
      "PostDate": "2017-11-11T13:56:27.3485904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d029e39-9682-4807-b405-435e27f78e87",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Fixed it HK. Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Fixed it HK. Thanks.</p>\n\n",
      "PostDate": "2017-11-11T14:52:36.5298732Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "99a22fb9-af87-4730-aba6-f90f11e4bd21",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oops, my bad. Ya, it's O(N). Sorry about that. Don't know why I typed O(1), lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>oops, my bad. Ya, it's O(N). Sorry about that. Don't know why I typed O(1), lol.</p>\n\n",
      "PostDate": "2017-11-11T20:10:08.7369331Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "34143a92-4a1f-4155-aa33-03ffb06d643f",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@@mrangel,\r\nThanks for the thread! Found after trying to randomly move a shark around an island with about 100 rooms. 25 are have the Boolean attribute \"iswater\",true. If the shark moves into a water room where the player is, or player moves to where he is, he will stay there until the player leaves.\r\n\r\nThis is a turnscript I enable at game start:\r\n```\r\nif (shark.parent = player.parent) {\r\n  shark.parent = player.parent\r\n  msg (\"You can see a shark swimming in the water!\")\r\n}\r\nelse if (RandomChance (30)) {\r\n  shark.parent = PickOneObject(FilterByAttribute(AllObjects(), \"iswater\", true))\r\n  if (shark.parent = player.parent) {\r\n    msg (\"You can see a shark swimming in the water!\")\r\n  }\r\n}\r\nelse {\r\n  shark.parent = shark.parent\r\n}\r\n```\r\nShould be easy to let the shark leave when in player.parent room, with notification to player as well.\r\nJust got excited to see it working while using debugger...had to share.\r\nNo big deal to some, but big ta-do-in's for me!\r\n\r\n ",
      "EditableFormat": "markdown",
      "HTML": "<p>@@mrangel,<br>\nThanks for the thread! Found after trying to randomly move a shark around an island with about 100 rooms. 25 are have the Boolean attribute \"iswater\",true. If the shark moves into a water room where the player is, or player moves to where he is, he will stay there until the player leaves.</p>\n<p>This is a turnscript I enable at game start:</p>\n<pre><code>if (shark.parent = player.parent) {\n  shark.parent = player.parent\n  msg (\"You can see a shark swimming in the water!\")\n}\nelse if (RandomChance (30)) {\n  shark.parent = PickOneObject(FilterByAttribute(AllObjects(), \"iswater\", true))\n  if (shark.parent = player.parent) {\n    msg (\"You can see a shark swimming in the water!\")\n  }\n}\nelse {\n  shark.parent = shark.parent\n}\n</code></pre>\n<p>Should be easy to let the shark leave when in player.parent room, with notification to player as well.<br>\nJust got excited to see it working while using debugger...had to share.<br>\nNo big deal to some, but big ta-do-in's for me!</p>\n\n",
      "PostDate": "2017-12-09T00:40:37.9723445Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
