{
  "Topic": {
    "TopicId": "u4nb0gcqnecqy8aqlsghtw",
    "ForumId": "10",
    "Title": "About Crafting System (newbie)",
    "LastUpdated": "2019-05-19T10:58:28.4027001Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2eeb2591-9962-4f98-8cbe-9901953ecfef",
      "UserId": 420147,
      "Username": "Sacritium",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9f940d1b4bbaa895b612c264c1e9d61d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello Guys!\r\n\r\nI'm checking the forums for 3 days but I couldn't see something about what I need to do. Because of that I opened this topic.\r\n\r\nSo I'm trying to prepare simple survivor game. But There is a problem so Player needs to craft lots of items unfortunately.  I guess I can use 2 option, Create Object and Get Object. \r\n\r\nIf I can prepare 2 lists. One of them just creatable objects(creat.xls) and other details(att.xls) of the object.  creat.xls  has the list of the objects and how many resources they needs. att.xls has the attiributes of the objects. I tought if I can prepare lists like that maybe it will be much more easier to check which resources player has and able to create.\r\n\r\nI gave to extensions for example.  Is it possible to do something like that? or which way I need to follow?\r\n\r\nThank you so much for help.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello Guys!</p>\n<p>I'm checking the forums for 3 days but I couldn't see something about what I need to do. Because of that I opened this topic.</p>\n<p>So I'm trying to prepare simple survivor game. But There is a problem so Player needs to craft lots of items unfortunately.  I guess I can use 2 option, Create Object and Get Object.</p>\n<p>If I can prepare 2 lists. One of them just creatable objects(creat.xls) and other details(att.xls) of the object.  creat.xls  has the list of the objects and how many resources they needs. att.xls has the attiributes of the objects. I tought if I can prepare lists like that maybe it will be much more easier to check which resources player has and able to create.</p>\n<p>I gave to extensions for example.  Is it possible to do something like that? or which way I need to follow?</p>\n<p>Thank you so much for help.</p>\n\n",
      "PostDate": "2019-05-19T10:58:28.4027001Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7bdc5515-c270-431d-83f6-e3d0c48721ca",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've made a crafting system before, and I think you've got a good idea.\r\n\r\nAs far as the attributes for crafted items, it's probably easiest to create one of each item and store them outside player space (outside any room), and then clone those objects when the player creates one.\r\n\r\nI've created a simple crafting system before, as an experiment, and would be happy to share the code if it's useful to you.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've made a crafting system before, and I think you've got a good idea.</p>\n<p>As far as the attributes for crafted items, it's probably easiest to create one of each item and store them outside player space (outside any room), and then clone those objects when the player creates one.</p>\n<p>I've created a simple crafting system before, as an experiment, and would be happy to share the code if it's useful to you.</p>\n\n",
      "PostDate": "2019-05-19T18:36:54.5542695Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "43ec7c8e-6a9c-4ef5-a2e3-6932c6087233",
      "UserId": 420147,
      "Username": "Sacritium",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9f940d1b4bbaa895b612c264c1e9d61d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you for your answer mrangel. Would be really happy if you can share. At least I can understand little bit more about crafting and coding.\r\n\r\nI was thinking about cloning objects too but after thinking how many lines of code I need to write for checking all of the resources etc. using this kind of db will be much more easier I guess and with this kind of db I can prepare crafting menu easily. If the player has all of resources and tools then in the menu, items can be active or visible. It will be much more easy for player too. I'm not familiar with coding so I'm also not sure Quest supporting this kind of db or not.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you for your answer mrangel. Would be really happy if you can share. At least I can understand little bit more about crafting and coding.</p>\n<p>I was thinking about cloning objects too but after thinking how many lines of code I need to write for checking all of the resources etc. using this kind of db will be much more easier I guess and with this kind of db I can prepare crafting menu easily. If the player has all of resources and tools then in the menu, items can be active or visible. It will be much more easy for player too. I'm not familiar with coding so I'm also not sure Quest supporting this kind of db or not.</p>\n\n",
      "PostDate": "2019-05-20T06:13:38.1389165Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "83f9f795-8414-4784-90c9-dd22e63c249c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n-----------------\r\n\r\nI've never done an advanced design for crafting (it would be helpful for us/mrangel for you to describe/explain what you want with your crafting system and how you want it done, and how it works for the player, as much as you can, as there's lots of designs and complexity/scale, so we'll/mrangel need to know what exactly you want for your crafting system)\r\n\r\nso, since I've never done this before, in just thinking about it, I'd imagine for the most complex/advanced crafting system with lots of data/stuff usage, you'd want:\r\n\r\n(quest is extremely powerful, it can pretty much do anything programming/code-wise/game-design-wise)\r\n\r\n1. base stuff (Objects, Attributes, Object Types, and/or etc) that you can clone\r\n2. combining/concatenating lists' items\r\n3. advanced data structures (like trees)\r\n4. recursion\r\n\r\nbut, there might be better design methods for doing an advanced/complex crafting system, as I've never tried one myself yet\r\n\r\nthough, I'll let mrangel help you with this stuff, as I've never tried doing this stuff myself and am still not that great at it (data structures and recursion)\r\n\r\n(I'll be lurking though, to learn myself, and if I can offer any help, I will)\r\n\r\n----------\r\n\r\nmorrowind's (hadn't played oblivion or skyrim) alchemy (crafting/mixing) and/or spell-making (crafting/mixing) systems are pretty advanced/complex:\r\n\r\n```\r\nhttps://en.uesp.net/wiki/Morrowind:Alchemy\r\nhttps://en.uesp.net/wiki/Morrowind:Ingredients\r\n\r\nhttps://en.uesp.net/wiki/Morrowind:Spellmakers (has a little bit about making custom spells)\r\nhttps://en.uesp.net/wiki/Morrowind:Magic\r\nhttps://en.uesp.net/wiki/Morrowind:Spells\r\nhttps://en.uesp.net/wiki/Morrowind:Spell_Effects\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>I've never done an advanced design for crafting (it would be helpful for us/mrangel for you to describe/explain what you want with your crafting system and how you want it done, and how it works for the player, as much as you can, as there's lots of designs and complexity/scale, so we'll/mrangel need to know what exactly you want for your crafting system)</p>\n<p>so, since I've never done this before, in just thinking about it, I'd imagine for the most complex/advanced crafting system with lots of data/stuff usage, you'd want:</p>\n<p>(quest is extremely powerful, it can pretty much do anything programming/code-wise/game-design-wise)</p>\n<ol>\n<li>base stuff (Objects, Attributes, Object Types, and/or etc) that you can clone</li>\n<li>combining/concatenating lists' items</li>\n<li>advanced data structures (like trees)</li>\n<li>recursion</li>\n</ol>\n<p>but, there might be better design methods for doing an advanced/complex crafting system, as I've never tried one myself yet</p>\n<p>though, I'll let mrangel help you with this stuff, as I've never tried doing this stuff myself and am still not that great at it (data structures and recursion)</p>\n<p>(I'll be lurking though, to learn myself, and if I can offer any help, I will)</p>\n<hr>\n<p>morrowind's (hadn't played oblivion or skyrim) alchemy (crafting/mixing) and/or spell-making (crafting/mixing) systems are pretty advanced/complex:</p>\n<pre><code>https://en.uesp.net/wiki/Morrowind:Alchemy\nhttps://en.uesp.net/wiki/Morrowind:Ingredients\n\nhttps://en.uesp.net/wiki/Morrowind:Spellmakers (has a little bit about making custom spells)\nhttps://en.uesp.net/wiki/Morrowind:Magic\nhttps://en.uesp.net/wiki/Morrowind:Spells\nhttps://en.uesp.net/wiki/Morrowind:Spell_Effects\n</code></pre>\n\n",
      "PostDate": "2019-05-20T07:43:43.8458305Z",
      "LastEditDate": "2019-05-20T07:59:11.1584603Z",
      "link": null
    },
    {
      "PostId": "1910e7b2-d681-4f61-958c-21fb310a2ae0",
      "UserId": 420147,
      "Username": "Sacritium",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9f940d1b4bbaa895b612c264c1e9d61d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you for your answer hegemonkhan. Firstly yes It's really complex system I know that. :D So I'm preparing tropical island survival game. Player will start with nothing. Player needs to find everything on the island. Because of that there will be some combinations.\r\n\r\nFor example you can use vine for making stone axe. Or if you can find fishing line you can use that too. Than it will be have different durability. Or you can use dry leaves or dry coconut as tinder. etc. etc. Because of that I need to put different resources and tools. All of them will have different attributes.  For the beginning I can do like clone item from different room. But in the future I need to use db or something like that.\r\n\r\nBecause if I write script for checking all of the resources that player has in the inventory will be difficult. If I need to do some changes later, it will be so easy to change that in DB also.\r\n\r\nI'm thinking if I can use DB, I can create a crafting menu. So in this crafting menu player can see what he/she able to create easily. \r\n\r\nFor example\r\n\r\nIf player has sharp stone, small wood and vine or fishing line can create stone axe. Script will check the resources in the player's inventory and db after that will show in the command/crafting menu the things that player can create. When player choose a item for create script will check the details(attributes) for that item from other DB and will give item to the player. \r\n\r\nIn that way I don't need to write script for every possibilities because all of them already in the DB.  I know it's looks like I'm a lazy person but I'm also thinking for future improvements like item dryness level like wet wood can not used for camp fire etc. etc.\r\n\r\nI hope I explained how I'm thinking.  \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you for your answer hegemonkhan. Firstly yes It's really complex system I know that. :D So I'm preparing tropical island survival game. Player will start with nothing. Player needs to find everything on the island. Because of that there will be some combinations.</p>\n<p>For example you can use vine for making stone axe. Or if you can find fishing line you can use that too. Than it will be have different durability. Or you can use dry leaves or dry coconut as tinder. etc. etc. Because of that I need to put different resources and tools. All of them will have different attributes.  For the beginning I can do like clone item from different room. But in the future I need to use db or something like that.</p>\n<p>Because if I write script for checking all of the resources that player has in the inventory will be difficult. If I need to do some changes later, it will be so easy to change that in DB also.</p>\n<p>I'm thinking if I can use DB, I can create a crafting menu. So in this crafting menu player can see what he/she able to create easily.</p>\n<p>For example</p>\n<p>If player has sharp stone, small wood and vine or fishing line can create stone axe. Script will check the resources in the player's inventory and db after that will show in the command/crafting menu the things that player can create. When player choose a item for create script will check the details(attributes) for that item from other DB and will give item to the player.</p>\n<p>In that way I don't need to write script for every possibilities because all of them already in the DB.  I know it's looks like I'm a lazy person but I'm also thinking for future improvements like item dryness level like wet wood can not used for camp fire etc. etc.</p>\n<p>I hope I explained how I'm thinking.</p>\n\n",
      "PostDate": "2019-05-20T08:12:37.7186888Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9798f701-1ef0-4a31-a20c-ea33ebc7937a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Objects can store data (Attributes) and actions (Script Attributes / \"Verbs\"), as well as using Delegates (quest's means of allowing the Object's actions: Script Attributes / \"Verbs\", to act like Functions: having/doing return values and/or parameters/arguments/inputs), and also they can be created with an Object Type / Type (see below) too, so Objects are the best container structures in quest\r\n\r\n--------\r\n\r\nyou can also create Object Types / Types, which act like user-level classes/groups (example in code below)\r\n\r\n```\r\n// to do so in scripting:\r\n\r\ncreate (\"orc1\", \"orc_type\")\r\ncreate (\"orc2\", \"orc_type\")\r\ncreate (\"orc3\", \"orc_type\")\r\n\r\n// I don't know if you can through scripting, create/set-up the, Types / Object Types, themselves however\r\n\r\n// -----------------------\r\n\r\n<object name=\"orc1\">\r\n\r\n  <inherit name=\"orc_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"orc2\">\r\n\r\n  <inherit name=\"orc_type\" />\r\n\r\n</object>\r\n\r\n<object name=\"orc3\">\r\n\r\n  <inherit name=\"orc_type\" />\r\n\r\n</object>\r\n\r\n<type name=\"orc_type\">\r\n\r\n  <attr name=\"strength\" type=\"int\">20</attr>\r\n  <attr name=\"endurance\" type=\"int\">20</attr>\r\n  <attr name=\"dexterity\" type=\"int\">20</attr>\r\n  <attr name=\"agility\" type=\"int\">20</attr>\r\n  <attr name=\"speed\" type=\"int\">20</attr>\r\n  <attr name=\"luck\" type=\"int\">20</attr>\r\n\r\n</type>\r\n```\r\n\r\n--------\r\n\r\nand, you can also create library files:\r\n\r\nhttps://docs.textadventures.co.uk/quest/using_libraries.html\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781 (scroll down to the library section in my big post, though you might want to read the stuff above, and/or my entire post, as I tried to write a guide on understanding working directly with quest's 'asl' game coding)",
      "EditableFormat": "markdown",
      "HTML": "<p>Objects can store data (Attributes) and actions (Script Attributes / \"Verbs\"), as well as using Delegates (quest's means of allowing the Object's actions: Script Attributes / \"Verbs\", to act like Functions: having/doing return values and/or parameters/arguments/inputs), and also they can be created with an Object Type / Type (see below) too, so Objects are the best container structures in quest</p>\n<hr>\n<p>you can also create Object Types / Types, which act like user-level classes/groups (example in code below)</p>\n<pre><code>// to do so in scripting:\n\ncreate (\"orc1\", \"orc_type\")\ncreate (\"orc2\", \"orc_type\")\ncreate (\"orc3\", \"orc_type\")\n\n// I don't know if you can through scripting, create/set-up the, Types / Object Types, themselves however\n\n// -----------------------\n\n&lt;object name=\"orc1\"&gt;\n\n  &lt;inherit name=\"orc_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"orc2\"&gt;\n\n  &lt;inherit name=\"orc_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"orc3\"&gt;\n\n  &lt;inherit name=\"orc_type\" /&gt;\n\n&lt;/object&gt;\n\n&lt;type name=\"orc_type\"&gt;\n\n  &lt;attr name=\"strength\" type=\"int\"&gt;20&lt;/attr&gt;\n  &lt;attr name=\"endurance\" type=\"int\"&gt;20&lt;/attr&gt;\n  &lt;attr name=\"dexterity\" type=\"int\"&gt;20&lt;/attr&gt;\n  &lt;attr name=\"agility\" type=\"int\"&gt;20&lt;/attr&gt;\n  &lt;attr name=\"speed\" type=\"int\"&gt;20&lt;/attr&gt;\n  &lt;attr name=\"luck\" type=\"int\"&gt;20&lt;/attr&gt;\n\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>and, you can also create library files:</p>\n<p>https://docs.textadventures.co.uk/quest/using_libraries.html</p>\n<p>http://textadventures.co.uk/forum/quest/topic/mu7itzjqv0yxrkdwgsbmzg/how-to-make-npc-confront-you-with-chioces#46cdb25b-4767-40a6-8bf4-3cd84e805781 (scroll down to the library section in my big post, though you might want to read the stuff above, and/or my entire post, as I tried to write a guide on understanding working directly with quest's 'asl' game coding)</p>\n\n",
      "PostDate": "2019-05-20T08:33:10.0143905Z",
      "LastEditDate": "2019-05-20T08:42:28.5968814Z",
      "link": null
    },
    {
      "PostId": "c9b31693-d7bc-43c0-b09a-2d439bdfb04a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as storing data in an external spreadsheet goes, it's possible.\r\nReading XLS would probably be a nightmare, but you can probably do CSV with less than a thoiusand lines of code.\r\n\r\nI did actually have a spreadsheet containing the ingredient lists. But then I used a macro to convert it into Quest (IASL) code like this to put in the start script:\r\n```\r\nfish_supper.crafting_recipe = NewDictionary()\r\ndictionary add (fish_supper.crafting_recipe, \"fish\", 1)\r\ndictionary add (fish_supper.crafting_recipe, \"knife\", \" to gut the fish\")\r\ndictionary add (fish_supper.crafting_recipe, \"spear\", \" to hold it with so you don't burn yourself\")\r\ndictionary add (fish_supper.crafting_recipe, \"campfire\", \"\")\r\n```\r\n\r\nIf you were using the desktop version of Quest, editing the attributes directly would probably be easier than writing a script to do it, but they're both valid options.\r\n\r\nAs far as the crafted items go, creating them as in-game objects will likely be easier because then you can give them any of the features and attributes that an object in Quest normally has. If you were reading their stats in from an external file, then the file would need some way to contain a dozen different types of nested information that might not apply to all objects, and then the script that loads the file would have to account for all those possibilities. Not to  mention that your crafted items couldn't have script attributes (because those can't be dynamically created), which means that verbs and a couple of other Quest features aren't practical.\r\n\r\nI can look into the reading external files thing if you can describe the layout of your file. Like I said, CSV shouldn't be that hard. But I do think that it would probably be easier to put the information in object attributes unless you've already got a large amount of data in the spreadsheet.\r\n\r\nIf you want to take a look, <a href=\"http://textadventures.co.uk/games/view/luz7uwwsuuqfmk-pmtnx8w/disposable-game\">here's a linmk</a> to a test game I made when I was playing around with a crafting system. The raw materials just spawn randomly as you walk around (some other stuff behaves oddly, like picking up the crafting manual doesn't work, but it should be a good example of what I mean by a crafting system)",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as storing data in an external spreadsheet goes, it's possible.<br>\nReading XLS would probably be a nightmare, but you can probably do CSV with less than a thoiusand lines of code.</p>\n<p>I did actually have a spreadsheet containing the ingredient lists. But then I used a macro to convert it into Quest (IASL) code like this to put in the start script:</p>\n<pre><code>fish_supper.crafting_recipe = NewDictionary()\ndictionary add (fish_supper.crafting_recipe, \"fish\", 1)\ndictionary add (fish_supper.crafting_recipe, \"knife\", \" to gut the fish\")\ndictionary add (fish_supper.crafting_recipe, \"spear\", \" to hold it with so you don't burn yourself\")\ndictionary add (fish_supper.crafting_recipe, \"campfire\", \"\")\n</code></pre>\n<p>If you were using the desktop version of Quest, editing the attributes directly would probably be easier than writing a script to do it, but they're both valid options.</p>\n<p>As far as the crafted items go, creating them as in-game objects will likely be easier because then you can give them any of the features and attributes that an object in Quest normally has. If you were reading their stats in from an external file, then the file would need some way to contain a dozen different types of nested information that might not apply to all objects, and then the script that loads the file would have to account for all those possibilities. Not to  mention that your crafted items couldn't have script attributes (because those can't be dynamically created), which means that verbs and a couple of other Quest features aren't practical.</p>\n<p>I can look into the reading external files thing if you can describe the layout of your file. Like I said, CSV shouldn't be that hard. But I do think that it would probably be easier to put the information in object attributes unless you've already got a large amount of data in the spreadsheet.</p>\n<p>If you want to take a look, <a href=\"http://textadventures.co.uk/games/view/luz7uwwsuuqfmk-pmtnx8w/disposable-game\">here's a linmk</a> to a test game I made when I was playing around with a crafting system. The raw materials just spawn randomly as you walk around (some other stuff behaves oddly, like picking up the crafting manual doesn't work, but it should be a good example of what I mean by a crafting system)</p>\n\n",
      "PostDate": "2019-05-20T08:47:31.0144319Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "317d7266-d5bf-4282-b606-aedd5d832a5a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, I was already replyign before your last message. My own fault for taking so long.\r\n\r\nAs far as items whose attributes depend on the materials they were crafted from, that's an interesting thought.\r\nThe thing is that if you're using a 'flat' database, once you've got more than a few items it rapidly becomes larger, and harder to find the part you want to change if you need to make modifications.\r\n\r\nRealistically, you would be looking at a single script that runs on startup and copies the information from a CSV file into the objects' attributes. To me, it seems like editing the attributes for an object would be easier if you go to the object in the editor and all the information is there in a tab; but that may be personal preference.\r\n\r\nI can see a couple of ways the data can be structured, depending on more detail of what you're hoping to do. Maybe you could show some excerpts from these databases, examples of how the data will be structured? Then I could give a more helpful explanation of how you'd go about importing it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, I was already replyign before your last message. My own fault for taking so long.</p>\n<p>As far as items whose attributes depend on the materials they were crafted from, that's an interesting thought.<br>\nThe thing is that if you're using a 'flat' database, once you've got more than a few items it rapidly becomes larger, and harder to find the part you want to change if you need to make modifications.</p>\n<p>Realistically, you would be looking at a single script that runs on startup and copies the information from a CSV file into the objects' attributes. To me, it seems like editing the attributes for an object would be easier if you go to the object in the editor and all the information is there in a tab; but that may be personal preference.</p>\n<p>I can see a couple of ways the data can be structured, depending on more detail of what you're hoping to do. Maybe you could show some excerpts from these databases, examples of how the data will be structured? Then I could give a more helpful explanation of how you'd go about importing it.</p>\n\n",
      "PostDate": "2019-05-20T09:01:40.0443657Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8e19f988-b27e-40a2-b37d-bf592f7b8dd1",
      "UserId": 420147,
      "Username": "Sacritium",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9f940d1b4bbaa895b612c264c1e9d61d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much for your help guys. \r\n\r\nLike you said I will prepare example of DB that I'm talking about and I will write here as soon as possible.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much for your help guys.</p>\n<p>Like you said I will prepare example of DB that I'm talking about and I will write here as soon as possible.</p>\n\n",
      "PostDate": "2019-05-20T09:46:21.3532764Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a95ad211-fcd3-4b98-9f37-f196f877c21e",
      "UserId": 28419,
      "Username": "pascal.marchese",
      "AvatarUrl": "https://i.imgur.com/qjm4RcRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can try to follow this tutorials : https://www.youtube.com/watch?v=axUHoNlWY2k\r\n\r\nHave a nice day.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You can try to follow this tutorials : https://www.youtube.com/watch?v=axUHoNlWY2k</p>\n<p>Have a nice day.</p>\n\n",
      "PostDate": "2019-05-20T09:49:25.2444808Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "65d38722-c0f3-4568-9252-1aa1a5acb5b5",
      "UserId": 420147,
      "Username": "Sacritium",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9f940d1b4bbaa895b612c264c1e9d61d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello again.\r\n\r\nWhen I started to make example of DB I realized it's getting much more complicated and also it can be cause lots of errors. I guess it was a not so good idea without advanced coding knowledge. :(\r\n\r\nFor now I'm planning to do like what you said before. I will continue with cloning and changing attributes from Quest for now.  In that time after to learning little bit more about Quest I will consider my first idea again.\r\n\r\nI really don't want to steal your time. I will have much more different questions in short time :D ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello again.</p>\n<p>When I started to make example of DB I realized it's getting much more complicated and also it can be cause lots of errors. I guess it was a not so good idea without advanced coding knowledge. :(</p>\n<p>For now I'm planning to do like what you said before. I will continue with cloning and changing attributes from Quest for now.  In that time after to learning little bit more about Quest I will consider my first idea again.</p>\n<p>I really don't want to steal your time. I will have much more different questions in short time :D</p>\n\n",
      "PostDate": "2019-05-20T12:06:25.2208175Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
