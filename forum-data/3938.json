{
  "Topic": {
    "TopicId": "3938",
    "ForumId": "10",
    "Title": "ObjectListSort not working ?",
    "LastUpdated": "2013-09-30T01:22:22+01:00",
    "ReplyCount": 11
  },
  "Posts": [
    {
      "PostId": "26425",
      "UserId": 0,
      "Username": "Thierry",
      "UserAvatar": null,
      "UserGravatar": "1e12c6034b4efa962e6cb99012e352b1",
      "EditableText": "Hello guys ! I'd like to sort an object list alphabetically, so I've tried to use this function. Here is an example I wrote with 2 objects :\n\ncreate (&quot;Beta&quot;)\ncreate (&quot;Alpha&quot;)\nTest = NewObjectList()\nlist add (Test, Beta)\nlist add (Test, Alpha)\nsortedlist = ObjectListSort (Test, &quot;name&quot;)\nDisplayList (Test, true)\n\nBut the list keeps displaying as follow :\n\nObject: Beta\nObject: Alpha\n\nDid I miss something ? And besides, is there any way to display only objects names, without the &quot;object:&quot; thing before ?\n\nThank you very much for your help  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "EditableFormat": "bbcode",
      "HTML": "Hello guys ! I'd like to sort an object list alphabetically, so I've tried to use this function. Here is an example I wrote with 2 objects :<br/><br/>create (&quot;Beta&quot;)<br/>create (&quot;Alpha&quot;)<br/>Test = NewObjectList()<br/>list add (Test, Beta)<br/>list add (Test, Alpha)<br/>sortedlist = ObjectListSort (Test, &quot;name&quot;)<br/>DisplayList (Test, true)<br/><br/>But the list keeps displaying as follow :<br/><br/>Object: Beta<br/>Object: Alpha<br/><br/>Did I miss something ? And besides, is there any way to display only objects names, without the &quot;object:&quot; thing before ?<br/><br/>Thank you very much for your help  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "PostDate": "2013-09-29T15:40:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26427",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "What happens if you display &quot;sortedlist&quot; instead? (The sorted one, not the original.)",
      "EditableFormat": "bbcode",
      "HTML": "What happens if you display &quot;sortedlist&quot; instead? (The sorted one, not the original.)",
      "PostDate": "2013-09-29T18:48:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26429",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "To display names from a list, you can just loop through them:\n\n[code:goajx36w]foreach (entry, list) {\n    msg(entry&#46;name)\n}[/code:goajx36w]",
      "EditableFormat": "bbcode",
      "HTML": "To display names from a list, you can just loop through them:<br/><br/><pre><code>foreach (entry, list) {<br/>    msg(entry&#46;name)<br/>}</code></pre>",
      "PostDate": "2013-09-29T18:54:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26430",
      "UserId": 0,
      "Username": "Thierry",
      "UserAvatar": null,
      "UserGravatar": "1e12c6034b4efa962e6cb99012e352b1",
      "EditableText": "Wow, thanks a lot jaynabonne ! You were twice right : by changing &quot;test&quot; in &quot;sortedlist&quot; in the Displaylist line, the alphabetical order is OK.\nAnd by replacing this Displaylist line with your code (and keeping &quot;sortedlist&quot; as source, of course), the &quot;object:&quot; thing is removed. Exactly what I wished  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nThank you very much, really. You helped me several times, and I learnt a lot of things thanks to you  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "EditableFormat": "bbcode",
      "HTML": "Wow, thanks a lot jaynabonne ! You were twice right : by changing &quot;test&quot; in &quot;sortedlist&quot; in the Displaylist line, the alphabetical order is OK.<br/>And by replacing this Displaylist line with your code (and keeping &quot;sortedlist&quot; as source, of course), the &quot;object:&quot; thing is removed. Exactly what I wished  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>Thank you very much, really. You helped me several times, and I learnt a lot of things thanks to you  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "PostDate": "2013-09-29T19:09:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26435",
      "UserId": 0,
      "Username": "Thierry",
      "UserAvatar": null,
      "UserGravatar": "1e12c6034b4efa962e6cb99012e352b1",
      "EditableText": "Damn, got another problem... Let's say I used my previous scripts (creating an object list and put two items Inside) in a room A, and then I go into a room B where there is another object I want to create and then add to my list. I tried something like this :\n\ncreate (&quot;Gamma&quot;)\nlist add (Test, Gamma)\n\nBut I got this message : &quot;Error running script&#058; Error compiling expression 'Test': Unknown object or variable 'Test'&quot;. It seems as if the list I created in room A wasn't &quot;moved&quot; into the room B... So I tried to put the &quot;new object list&quot; variable as a start script or as a child of the &quot;player&quot; object, but the result was the same. Does a list only work in the room where it has been created ?",
      "EditableFormat": "bbcode",
      "HTML": "Damn, got another problem... Let's say I used my previous scripts (creating an object list and put two items Inside) in a room A, and then I go into a room B where there is another object I want to create and then add to my list. I tried something like this :<br/><br/>create (&quot;Gamma&quot;)<br/>list add (Test, Gamma)<br/><br/>But I got this message : &quot;Error running script&#058; Error compiling expression 'Test': Unknown object or variable 'Test'&quot;. It seems as if the list I created in room A wasn't &quot;moved&quot; into the room B... So I tried to put the &quot;new object list&quot; variable as a start script or as a child of the &quot;player&quot; object, but the result was the same. Does a list only work in the room where it has been created ?",
      "PostDate": "2013-09-29T22:05:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26438",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Variables that are not attached to objects are just local variables to the *script*. They disappear once the script is done.\n\nTry using game.Test (or player.Test) instead of just Test, and it will persist.",
      "EditableFormat": "bbcode",
      "HTML": "Variables that are not attached to objects are just local variables to the *script*. They disappear once the script is done.<br/><br/>Try using game.Test (or player.Test) instead of just Test, and it will persist.",
      "PostDate": "2013-09-29T22:29:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26443",
      "UserId": 0,
      "Username": "Thierry",
      "UserAvatar": null,
      "UserGravatar": "1e12c6034b4efa962e6cb99012e352b1",
      "EditableText": "Once again, thank you jaynabonne ! It works perfectly now  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "EditableFormat": "bbcode",
      "HTML": "Once again, thank you jaynabonne ! It works perfectly now  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "PostDate": "2013-09-29T22:48:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26445",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "a useful thing you can do for organization is this:\n\ninstead of cluttering up your &quot;game&quot; and~or Player Objects (such as the default &quot;player&quot; Player Object), you can create a &quot;data object&quot;:\n\n[code:j58hlrlf]&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit type=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n&lt;/object&gt;[/code:j58hlrlf]\n\nand then instead of doing:\n\nlist add (game.test, &quot;Alpha&quot;)\nor\nlist add (player.test, &quot;Alpha&quot;)\n\nyou can do this:\n\nlist add (global_data_object.test, &quot;Alpha&quot;)\nlist add (global_data_object.test, &quot;Beta&quot;)\nlist add (global_data_object.test, &quot;Gamma&quot;)\n\nwhich would then look like this in code:\n\n[code:j58hlrlf]&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit type=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;\n&lt;/object&gt;[/code:j58hlrlf]\n\ninstead of cluttering up your &quot;game&quot; or &quot;player&quot; Objects:\n\n(your &quot;game&quot; Object and Player Objects are already probably cluttered with enough attributes already, especially your Player Objects: strength, endurance, etc etc etc such &quot;Stat&quot; Attributes)\n\n[code:j58hlrlf]&lt;object name=&quot;game&quot;&gt;\n  // blah coding\n  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;\n  // blah coding\n&lt;/object&gt;[/code:j58hlrlf]\n\nor\n\n[code:j58hlrlf]&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  // blah coding\n  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;\n  // blah coding\n&lt;/object&gt;[/code:j58hlrlf]\n\n-----------------------------\n\nhere's an example of me using a &quot;data object&quot; for my work on time+date coding:\n\n[code:j58hlrlf]&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;\n  &lt;am_or_pm type=&quot;string&quot;&gt;&lt;/am_or_pm&gt;\n  &lt;hour_string type=&quot;string&quot;&gt;&lt;/hour_string&gt;\n  &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;\n  &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;\n  &lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;\n  &lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;sunday;monday;tuesday;wednesday;thursday;friday;saturday&lt;/days_of_the_week&gt;\n  &lt;month_conversion type=&quot;simplestringdictionary&quot;&gt;january=0;0=january;february=1;1=february;march=2;2=march;april=3;3=april;may=4;4=may;june=5;5=june;july=6;6=july;august=7;7=august;september=8;8=september;october=9;9=october;november=10;10=november;december=11;11=december&lt;/month_conversion&gt;\n  &lt;day_conversion type=&quot;simplestringdictionary&quot;&gt;sunday=0;0=sunday;monday=1;1=monday;tuesday=2;2=tuesday;wednesday=3;3=wednesday;thursday=4;4=thursday;friday=5;5=friday;saturday=6;6=saturday&lt;/day_conversion&gt;\n  &lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;\n  &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;\n  &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;\n  &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;\n  &lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;\n  &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;\n  &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;\n  &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;\n  &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;\n&lt;/object&gt;[/code:j58hlrlf]\n\nhaving this huge chunk of attributes on my &quot;game&quot; Object or Player Objects would really clutter them up, which would be really messy and a big hassle. This is why making an Object (a &quot;data object&quot;) specifically for holding attributes is so nice, hehe.\n\nyou could make multiple &quot;data objects&quot; too:\n\n[code:j58hlrlf]&lt;object name=&quot;boolean_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n  // etc boolean attributes\n&lt;/object&gt;\n\n&lt;object name=&quot;string_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n  &lt;race type=&quot;string&quot;&gt;human&lt;/race&gt;\n  &lt;class type=&quot;string&quot;&gt;warrior&lt;/class&gt;\n  // etc string attributes\n&lt;/object&gt;\n\n&lt;object name=&quot;integer_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n  // etc integer attributes\n&lt;/object&gt;\n\n&lt;object name=&quot;game_objectives_missions_boolean_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;parent&gt;null&lt;/parent&gt;\n  &lt;got_dragon_slayer_sword type=&quot;boolean&quot;&gt;false&lt;/got_dragon_slayer_sword&gt;\n  &lt;drank_fire_immunity_potion type=&quot;boolean&quot;&gt;false&lt;/drank_fire_immunity_potion&gt;\n  &lt;found_key_to_sky_tower type=&quot;boolean&quot;&gt;false&lt;/found_key_to_sky_tower&gt;\n  &lt;killed_king_of_dragons type=&quot;boolean&quot;&gt;false&lt;/killed_king_of_dragons&gt;\n  &lt;rescued_princess type=&quot;boolean&quot;&gt;false&lt;/rescued_princess&gt;\n  // etc game completion required checklist of boolean attributes\n&lt;/object&gt;\n\netc etc etc &quot;data objects&quot;[/code:j58hlrlf]",
      "EditableFormat": "bbcode",
      "HTML": "a useful thing you can do for organization is this:<br/><br/>instead of cluttering up your &quot;game&quot; and~or Player Objects (such as the default &quot;player&quot; Player Object), you can create a &quot;data object&quot;:<br/><br/><pre><code>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit type=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>and then instead of doing:<br/><br/>list add (game.test, &quot;Alpha&quot;)<br/>or<br/>list add (player.test, &quot;Alpha&quot;)<br/><br/>you can do this:<br/><br/>list add (global_data_object.test, &quot;Alpha&quot;)<br/>list add (global_data_object.test, &quot;Beta&quot;)<br/>list add (global_data_object.test, &quot;Gamma&quot;)<br/><br/>which would then look like this in code:<br/><br/><pre><code>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit type=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>instead of cluttering up your &quot;game&quot; or &quot;player&quot; Objects:<br/><br/>(your &quot;game&quot; Object and Player Objects are already probably cluttered with enough attributes already, especially your Player Objects: strength, endurance, etc etc etc such &quot;Stat&quot; Attributes)<br/><br/><pre><code>&lt;object name=&quot;game&quot;&gt;<br/>  // blah coding<br/>  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;<br/>  // blah coding<br/>&lt;/object&gt;</code></pre><br/><br/>or<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  // blah coding<br/>  &lt;test type=&quot;objectlist&quot;&gt;Alpha;Beta;Gamma&lt;/test&gt;<br/>  // blah coding<br/>&lt;/object&gt;</code></pre><br/><br/>-----------------------------<br/><br/>here's an example of me using a &quot;data object&quot; for my work on time+date coding:<br/><br/><pre><code>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;<br/>  &lt;am_or_pm type=&quot;string&quot;&gt;&lt;/am_or_pm&gt;<br/>  &lt;hour_string type=&quot;string&quot;&gt;&lt;/hour_string&gt;<br/>  &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;<br/>  &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;<br/>  &lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;<br/>  &lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;sunday;monday;tuesday;wednesday;thursday;friday;saturday&lt;/days_of_the_week&gt;<br/>  &lt;month_conversion type=&quot;simplestringdictionary&quot;&gt;january=0;0=january;february=1;1=february;march=2;2=march;april=3;3=april;may=4;4=may;june=5;5=june;july=6;6=july;august=7;7=august;september=8;8=september;october=9;9=october;november=10;10=november;december=11;11=december&lt;/month_conversion&gt;<br/>  &lt;day_conversion type=&quot;simplestringdictionary&quot;&gt;sunday=0;0=sunday;monday=1;1=monday;tuesday=2;2=tuesday;wednesday=3;3=wednesday;thursday=4;4=thursday;friday=5;5=friday;saturday=6;6=saturday&lt;/day_conversion&gt;<br/>  &lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;<br/>  &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;<br/>  &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;<br/>  &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;<br/>  &lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;<br/>  &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;<br/>  &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;<br/>  &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;<br/>  &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>having this huge chunk of attributes on my &quot;game&quot; Object or Player Objects would really clutter them up, which would be really messy and a big hassle. This is why making an Object (a &quot;data object&quot;) specifically for holding attributes is so nice, hehe.<br/><br/>you could make multiple &quot;data objects&quot; too:<br/><br/><pre><code>&lt;object name=&quot;boolean_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>  // etc boolean attributes<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;string_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;race type=&quot;string&quot;&gt;human&lt;/race&gt;<br/>  &lt;class type=&quot;string&quot;&gt;warrior&lt;/class&gt;<br/>  // etc string attributes<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;integer_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>  // etc integer attributes<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;game_objectives_missions_boolean_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;got_dragon_slayer_sword type=&quot;boolean&quot;&gt;false&lt;/got_dragon_slayer_sword&gt;<br/>  &lt;drank_fire_immunity_potion type=&quot;boolean&quot;&gt;false&lt;/drank_fire_immunity_potion&gt;<br/>  &lt;found_key_to_sky_tower type=&quot;boolean&quot;&gt;false&lt;/found_key_to_sky_tower&gt;<br/>  &lt;killed_king_of_dragons type=&quot;boolean&quot;&gt;false&lt;/killed_king_of_dragons&gt;<br/>  &lt;rescued_princess type=&quot;boolean&quot;&gt;false&lt;/rescued_princess&gt;<br/>  // etc game completion required checklist of boolean attributes<br/>&lt;/object&gt;<br/><br/>etc etc etc &quot;data objects&quot;</code></pre>",
      "PostDate": "2013-09-29T23:19:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26446",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Just a suggestion: rather than having a global &quot;place to collect all sorts of unrelated data&quot;, you might want to consider creating objects that group like things. You seem to have actually done that in your example - all the data is time related, but you still have a generic name like &quot;global_data_object&quot;. What I'm getting at is, you might want consider naming it something a bit more specific (e.g. time_manager or something) to force you to keep your global objects specific to certain needs.\n\nI know in my own work, it has helped keep the code sane. When I need a new attribute, I have to actually pick the right place to put it. It will help modularize your code (which you seem to be doing quite well with, by the way; so I thought I'd throw in some more &quot;advanced&quot; ideas. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "EditableFormat": "bbcode",
      "HTML": "Just a suggestion: rather than having a global &quot;place to collect all sorts of unrelated data&quot;, you might want to consider creating objects that group like things. You seem to have actually done that in your example - all the data is time related, but you still have a generic name like &quot;global_data_object&quot;. What I'm getting at is, you might want consider naming it something a bit more specific (e.g. time_manager or something) to force you to keep your global objects specific to certain needs.<br/><br/>I know in my own work, it has helped keep the code sane. When I need a new attribute, I have to actually pick the right place to put it. It will help modularize your code (which you seem to be doing quite well with, by the way; so I thought I'd throw in some more &quot;advanced&quot; ideas. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "PostDate": "2013-09-29T23:38:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26447",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "lol, I was just editing in that very option in my previous post, laughs.\n\nand, I always got open ears for you code vets' tips and tricks with code organization+structure+standardizations, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n------\n\nand ya, there's the organization+structure component to game creation:\n\n1. Programming~Coding\n2. Game Design\n3. Game Mechanics\n4. Game Balance\n5. Authorship (Writing and~or Orally: Story~Plot and dialogue)\n6. Media (graphics, music, voice~dialogue, and etc)\n\n[b:14b40qca]7. Game+Code Organization System~Structure (including the labelization of coding elements)[/b:14b40qca]\n\nI'm slowly learning some &quot;tactics&quot;, and am slowly building up my own structure~system with coding labelization and etc, hehe.\n\nI'm sure everyone has spotted much of this, hehe. I'm developing my &quot;standardization&quot; of coding, such as with attributes and how I label them, and etc.",
      "EditableFormat": "bbcode",
      "HTML": "lol, I was just editing in that very option in my previous post, laughs.<br/><br/>and, I always got open ears for you code vets' tips and tricks with code organization+structure+standardizations, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>------<br/><br/>and ya, there's the organization+structure component to game creation:<br/><br/>1. Programming~Coding<br/>2. Game Design<br/>3. Game Mechanics<br/>4. Game Balance<br/>5. Authorship (Writing and~or Orally: Story~Plot and dialogue)<br/>6. Media (graphics, music, voice~dialogue, and etc)<br/><br/><span style=\"font-weight:bold;\">7. Game+Code Organization System~Structure (including the labelization of coding elements)</span><br/><br/>I'm slowly learning some &quot;tactics&quot;, and am slowly building up my own structure~system with coding labelization and etc, hehe.<br/><br/>I'm sure everyone has spotted much of this, hehe. I'm developing my &quot;standardization&quot; of coding, such as with attributes and how I label them, and etc.",
      "PostDate": "2013-09-29T23:39:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26449",
      "UserId": 0,
      "Username": "Thierry",
      "UserAvatar": null,
      "UserGravatar": "1e12c6034b4efa962e6cb99012e352b1",
      "EditableText": "Thanks both of you, your tips are really precious ! I'll try to keep learning and using them  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "EditableFormat": "bbcode",
      "HTML": "Thanks both of you, your tips are really precious ! I'll try to keep learning and using them  <!-- s:wink: --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\":wink:\" title=\"Wink\" /><!-- s:wink: -->",
      "PostDate": "2013-09-30T00:01:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26455",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's my library file organization:\n\n(I'd also have many more layer of subcategories too... like splitting up the categories of the various verbs, functions, scripts, commands, and etc)\n\n[code:3eoekfrw]&lt;library&gt;\n\n&lt;!-- Libraries --&gt;\n\n&lt;!-- Templates --&gt;\n\n&lt;!-- Normal Templates --&gt;\n\n&lt;!-- Dynamic Templates --&gt;\n\n&lt;!-- Verb Templates --&gt;\n\n&lt;!-- Verbs --&gt;\n\n&lt;!-- Commands --&gt;\n\n&lt;!-- Functions --&gt;\n\n&lt;!-- Turn Scripts --&gt;\n\n&lt;!-- Timers --&gt;\n\n&lt;!-- Object Types --&gt;\n\n&lt;!-- Attributes --&gt;\n\n&lt;!-- Strings --&gt;\n\n&lt;!-- Booleans --&gt;\n\n&lt;!-- Integers --&gt;\n\n&lt;!-- Doubles --&gt;\n\n&lt;!-- Lists --&gt;\n\n&lt;!-- String Lists --&gt;\n\n&lt;!-- Object Lists --&gt;\n\n&lt;!-- Dictionaries --&gt;\n\n&lt;!-- String Dictionaries --&gt;\n\n&lt;!-- Object Dictionaries --&gt;\n\n&lt;!-- Script Dictionaries --&gt;\n\n&lt;!-- Scripts --&gt;\n\n&lt;!-- Inherited --&gt;\n\n&lt;!-- Object Attributes --&gt;\n\n&lt;!-- Objects --&gt;\n\n&lt;!-- New Game Code --&gt;\n\n&lt;!-- Game Object --&gt;\n\n&lt;!-- Player Objects --&gt;\n\n&lt;!-- Room Objects --&gt;\n\n&lt;!-- Object Objects --&gt;\n\n&lt;!-- Object and Room Objects --&gt;\n\n&lt;!-- Data Objects --&gt;\n\n&lt;!-- Systems --&gt;\n\n&lt;!-- Combat System --&gt;\n\n&lt;!-- Magic System --&gt;\n\n&lt;!-- Equipment System --&gt;\n\n&lt;!-- Storage System --&gt;\n\n&lt;!-- Stealth System --&gt;\n\n&lt;!-- Diplomacy System --&gt;\n\n&lt;!-- Science~Technology System --&gt;\n\n&lt;!-- Character System --&gt;\n\n&lt;!-- Travel System --&gt;\n\n&lt;!-- Shopping System --&gt;\n\n&lt;!-- My Own Notes --&gt;\n\n&lt;/library&gt;[/code:3eoekfrw]\n\nyes, there's some redundency, but the organization speed of finding what you need, makes up for the extra work, hehe.",
      "EditableFormat": "bbcode",
      "HTML": "here's my library file organization:<br/><br/>(I'd also have many more layer of subcategories too... like splitting up the categories of the various verbs, functions, scripts, commands, and etc)<br/><br/><pre><code>&lt;library&gt;<br/><br/>&lt;!-- Libraries --&gt;<br/><br/>&lt;!-- Templates --&gt;<br/><br/>&lt;!-- Normal Templates --&gt;<br/><br/>&lt;!-- Dynamic Templates --&gt;<br/><br/>&lt;!-- Verb Templates --&gt;<br/><br/>&lt;!-- Verbs --&gt;<br/><br/>&lt;!-- Commands --&gt;<br/><br/>&lt;!-- Functions --&gt;<br/><br/>&lt;!-- Turn Scripts --&gt;<br/><br/>&lt;!-- Timers --&gt;<br/><br/>&lt;!-- Object Types --&gt;<br/><br/>&lt;!-- Attributes --&gt;<br/><br/>&lt;!-- Strings --&gt;<br/><br/>&lt;!-- Booleans --&gt;<br/><br/>&lt;!-- Integers --&gt;<br/><br/>&lt;!-- Doubles --&gt;<br/><br/>&lt;!-- Lists --&gt;<br/><br/>&lt;!-- String Lists --&gt;<br/><br/>&lt;!-- Object Lists --&gt;<br/><br/>&lt;!-- Dictionaries --&gt;<br/><br/>&lt;!-- String Dictionaries --&gt;<br/><br/>&lt;!-- Object Dictionaries --&gt;<br/><br/>&lt;!-- Script Dictionaries --&gt;<br/><br/>&lt;!-- Scripts --&gt;<br/><br/>&lt;!-- Inherited --&gt;<br/><br/>&lt;!-- Object Attributes --&gt;<br/><br/>&lt;!-- Objects --&gt;<br/><br/>&lt;!-- New Game Code --&gt;<br/><br/>&lt;!-- Game Object --&gt;<br/><br/>&lt;!-- Player Objects --&gt;<br/><br/>&lt;!-- Room Objects --&gt;<br/><br/>&lt;!-- Object Objects --&gt;<br/><br/>&lt;!-- Object and Room Objects --&gt;<br/><br/>&lt;!-- Data Objects --&gt;<br/><br/>&lt;!-- Systems --&gt;<br/><br/>&lt;!-- Combat System --&gt;<br/><br/>&lt;!-- Magic System --&gt;<br/><br/>&lt;!-- Equipment System --&gt;<br/><br/>&lt;!-- Storage System --&gt;<br/><br/>&lt;!-- Stealth System --&gt;<br/><br/>&lt;!-- Diplomacy System --&gt;<br/><br/>&lt;!-- Science~Technology System --&gt;<br/><br/>&lt;!-- Character System --&gt;<br/><br/>&lt;!-- Travel System --&gt;<br/><br/>&lt;!-- Shopping System --&gt;<br/><br/>&lt;!-- My Own Notes --&gt;<br/><br/>&lt;/library&gt;</code></pre><br/><br/>yes, there's some redundency, but the organization speed of finding what you need, makes up for the extra work, hehe.",
      "PostDate": "2013-09-30T01:22:22+01:00",
      "LastEditDate": null
    }
  ]
}
