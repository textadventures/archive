{
  "Topic": {
    "TopicId": "lqrzx5-mak2yaqmlvi01ra",
    "ForumId": "10",
    "Title": "I little thing, but it stands out a mile...",
    "LastUpdated": "2018-09-13T09:17:03.6876198Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "41292c72-4443-44b2-8d0b-60c1aa2c66c1",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://i.imgur.com/Q1Yd2jRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey guys! been a while. I added a female character in my story (Quest 5) and when I type in 'Speak to Jane\", it responds with:\r\n\r\n    \"She saies nothing.\"\r\n    instead of\r\n    \"She says nothing.\"\r\n\r\n\r\nThis is within Quest itself and not my coding.\r\n\r\nI tested this by just adding a female character with the ASK/TELL feature added to it.\r\n\r\nHow can I fix this please?\r\n\r\nThanks as always,\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey guys! been a while. I added a female character in my story (Quest 5) and when I type in 'Speak to Jane\", it responds with:</p>\n<pre><code>\"She saies nothing.\"\ninstead of\n\"She says nothing.\"\n</code></pre>\n<p>This is within Quest itself and not my coding.</p>\n<p>I tested this by just adding a female character with the ASK/TELL feature added to it.</p>\n<p>How can I fix this please?</p>\n<p>Thanks as always,<br>\n-=Darchy=-</p>\n\n",
      "PostDate": "2018-09-13T09:17:03.6876198Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "901c5131-dd65-4030-ab8e-0f7e8355404a",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For me, ASK/TELL is different then Speak to. Speak to is a verb. When I use the verb there isn't a spelling error in my program... but if this is an issue with the new version you could make speak to a command, and put in the objects like this: speak to #object# and then manually put in all the objects through the command. Maybe someone else knows an easier way to change this?",
      "EditableFormat": "markdown",
      "HTML": "<p>For me, ASK/TELL is different then Speak to. Speak to is a verb. When I use the verb there isn't a spelling error in my program... but if this is an issue with the new version you could make speak to a command, and put in the objects like this: speak to #object# and then manually put in all the objects through the command. Maybe someone else knows an easier way to change this?</p>\n\n",
      "PostDate": "2018-09-13T11:18:00.0541997Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c4398084-b615-4886-bda6-71a7ad6a1ecc",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, I noticed this a month ago but reported it quietly as it was a time when everyone was complaining about the new version of Quest failing. I don't think it has been fixed in the latest release but would support your \"small, but significant\" argument for having it dealt with quickly.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, I noticed this a month ago but reported it quietly as it was a time when everyone was complaining about the new version of Quest failing. I don't think it has been fixed in the latest release but would support your \"small, but significant\" argument for having it dealt with quickly.</p>\n\n",
      "PostDate": "2018-09-13T11:22:30.5142217Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "394990b7-23ac-495e-9384-9596a39b73b8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the Conjugate function (in `English.aslx`), the code includes:\r\n\r\n```\r\n        if (gender = \"it\") {\r\n          if (EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")) {\r\n            return (Mid(verb, 1, Lengthof(verb) - 1) + \"ies\")\r\n          }\r\n          else {\r\n            return (verb + \"s\")\r\n          }\r\n        }\r\n```\r\n\r\nThis is pretty rough.\r\nI think it would be better if we had a dictionary of verb endings. Then the code could be:\r\n```\r\n        if (gender = \"it\") {\r\n          foreach (ending, game.conjugations) {\r\n            if (ending = verb) {\r\n              return (DictionaryItem (game.conjugations, verb))\r\n            }\r\n            else if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\r\n              return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (game.conjugations, ending))\r\n            }\r\n            else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\r\n              return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (game.conjugations, ending))\r\n            }\r\n          }\r\n          return (verb + \"s\")\r\n        }\r\n```\r\nThe dictionary could look something like:\r\n```\r\n<conjugations type=\"stringdictionary\">\r\n  <item><key>pass out</key><value>passes out</value></item>\r\n  <item><key>@ with</key><value> with</value></item>\r\n  <item><key>@ by</key><value> by</value></item>\r\n  <item><key>@ on</key><value> on</value></item>\r\n  <item><key>@ at</key><value> at</value></item>\r\n  <item><key>*ay</key><value>ays</value></item>\r\n  <item><key>*oy</key><value>oys</value></item>\r\n  <item><key>*ey</key><value>eys</value></item>\r\n  <item><key>*y</key><value>ies</value></item>\r\n  <item><key>*ss</key><value>sses</value></item>\r\n  <item><key>*s</key><value>sses</value></item>\r\n  <item><key>*sh</key><value>shes</value></item>\r\n  <item><key>*ch</key><value>ches</value></item>\r\n  <item><key>*o</key><value>oes</value></item>\r\n  <item><key>*x</key><value>xes</value></item>\r\n  <item><key>*z</key><value>zes</value></item>\r\n  <item><key>*</key><value>s</value></item>\r\n</conjugations>\r\n```\r\nThat way, if there's any obscure verbs that have odd conjugations, a user can just add them to the dictionary rather than having to edit the function (one silly example included - in some cases, especially if you're dealing with NPCs who can do things to each other, it could be beneficial for Conjugate and WriteVerb to handle \"verbs\" that could appear in displayverbs, even if they're not strictly verbs in the grammatical sense)",
      "EditableFormat": "markdown",
      "HTML": "<p>In the Conjugate function (in <code>English.aslx</code>), the code includes:</p>\n<pre><code>        if (gender = \"it\") {\n          if (EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")) {\n            return (Mid(verb, 1, Lengthof(verb) - 1) + \"ies\")\n          }\n          else {\n            return (verb + \"s\")\n          }\n        }\n</code></pre>\n<p>This is pretty rough.<br>\nI think it would be better if we had a dictionary of verb endings. Then the code could be:</p>\n<pre><code>        if (gender = \"it\") {\n          foreach (ending, game.conjugations) {\n            if (ending = verb) {\n              return (DictionaryItem (game.conjugations, verb))\n            }\n            else if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\n              return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (game.conjugations, ending))\n            }\n            else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\n              return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (game.conjugations, ending))\n            }\n          }\n          return (verb + \"s\")\n        }\n</code></pre>\n<p>The dictionary could look something like:</p>\n<pre><code>&lt;conjugations type=\"stringdictionary\"&gt;\n  &lt;item&gt;&lt;key&gt;pass out&lt;/key&gt;&lt;value&gt;passes out&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ with&lt;/key&gt;&lt;value&gt; with&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ by&lt;/key&gt;&lt;value&gt; by&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ on&lt;/key&gt;&lt;value&gt; on&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ at&lt;/key&gt;&lt;value&gt; at&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ay&lt;/key&gt;&lt;value&gt;ays&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*oy&lt;/key&gt;&lt;value&gt;oys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ey&lt;/key&gt;&lt;value&gt;eys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*y&lt;/key&gt;&lt;value&gt;ies&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ss&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*s&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*sh&lt;/key&gt;&lt;value&gt;shes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ch&lt;/key&gt;&lt;value&gt;ches&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*o&lt;/key&gt;&lt;value&gt;oes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*x&lt;/key&gt;&lt;value&gt;xes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*z&lt;/key&gt;&lt;value&gt;zes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*&lt;/key&gt;&lt;value&gt;s&lt;/value&gt;&lt;/item&gt;\n&lt;/conjugations&gt;\n</code></pre>\n<p>That way, if there's any obscure verbs that have odd conjugations, a user can just add them to the dictionary rather than having to edit the function (one silly example included - in some cases, especially if you're dealing with NPCs who can do things to each other, it could be beneficial for Conjugate and WriteVerb to handle \"verbs\" that could appear in displayverbs, even if they're not strictly verbs in the grammatical sense)</p>\n\n",
      "PostDate": "2018-09-13T11:29:46.3188632Z",
      "LastEditDate": "2018-09-13T15:44:38.660427Z",
      "link": null
    },
    {
      "PostId": "7111dcb8-6119-4e44-9e40-5eac0d9f1b48",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://i.imgur.com/Q1Yd2jRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the replies. It looks like I will have to 'fudge' it a little. The conversations won't be complex at this point, so maybe not such a big problem for now.\r\n\r\nThanks again,\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the replies. It looks like I will have to 'fudge' it a little. The conversations won't be complex at this point, so maybe not such a big problem for now.</p>\n<p>Thanks again,<br>\n-=Darchy=-</p>\n\n",
      "PostDate": "2018-09-13T12:31:54.7647889Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "92bc6ce5-b1d4-4fc7-883e-dde205aa56da",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://i.imgur.com/Q1Yd2jRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel - Sorry I didn't get back to you sooner.\r\n\r\nI have used what you showed me with:\r\n\r\n        if (gender = \"it\") {\r\n          if (EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")) {\r\n            return (Mid(verb, 1, Lengthof(verb) - 1) + \"ies\")\r\n          }\r\n          else {\r\n            return (verb + \"s\")\r\n          }\r\n        }\r\n\r\n... and changed the\r\n```\r\nand not EndsWith(verb, \"ey\")) {\r\n```\r\nwith\r\n```\r\nand not EndsWith(verb, \"ay\")) {\r\n```\r\n\r\nSo far it works with \"speak to\" He,She and It and returns the correct \"xxxx says nothing.\"\r\n\r\nCan you see anything in this change, that would cause this to fail in the future or cause problems?\r\n\r\nmuch appreciated,\r\n-=Darchy=-",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel - Sorry I didn't get back to you sooner.</p>\n<p>I have used what you showed me with:</p>\n<pre><code>    if (gender = \"it\") {\n      if (EndsWith(verb, \"y\") and not EndsWith(verb, \"ey\")) {\n        return (Mid(verb, 1, Lengthof(verb) - 1) + \"ies\")\n      }\n      else {\n        return (verb + \"s\")\n      }\n    }\n</code></pre>\n<p>... and changed the</p>\n<pre><code>and not EndsWith(verb, \"ey\")) {\n</code></pre>\n<p>with</p>\n<pre><code>and not EndsWith(verb, \"ay\")) {\n</code></pre>\n<p>So far it works with \"speak to\" He,She and It and returns the correct \"xxxx says nothing.\"</p>\n<p>Can you see anything in this change, that would cause this to fail in the future or cause problems?</p>\n<p>much appreciated,<br>\n-=Darchy=-</p>\n\n",
      "PostDate": "2018-09-14T14:05:42.1381247Z",
      "LastEditDate": "2018-09-14T14:06:18.0459003Z",
      "link": null
    },
    {
      "PostId": "5adbeb35-b280-4c3a-bbcb-74e9a30aac3d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Darchy:\r\nThat should fix the immediate problem, as I don't think any of the built-in messages use the verbs \"obey\", \"survey\", \"journey\", \"key\", \"convey\", \"curtsey\", \"volley\", \"purvey\", \"jockey\", \"prey\", \"mosey\", \"parley\", or \"monkey\".\r\n\r\nI'd like to see the dictionary method in a future update, though. Would mean that users can depend on WriteVerb() working correctly for all verbs, and not just those that are included in the language file.",
      "EditableFormat": "markdown",
      "HTML": "<p>@Darchy:<br>\nThat should fix the immediate problem, as I don't think any of the built-in messages use the verbs \"obey\", \"survey\", \"journey\", \"key\", \"convey\", \"curtsey\", \"volley\", \"purvey\", \"jockey\", \"prey\", \"mosey\", \"parley\", or \"monkey\".</p>\n<p>I'd like to see the dictionary method in a future update, though. Would mean that users can depend on WriteVerb() working correctly for all verbs, and not just those that are included in the language file.</p>\n\n",
      "PostDate": "2018-09-14T14:33:49.8363659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f638643-6ca1-450d-afdf-587e8d3b0d17",
      "UserId": 323662,
      "Username": "Krud",
      "AvatarUrl": "https://secure.gravatar.com/avatar/81fa171ed5acaf45f4492beeec888fbb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm glad someone has explained what's going on with this, as I was baffled by the seemingly built-in typo for a default command. I was having to create my own error messages just to avoid that.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm glad someone has explained what's going on with this, as I was baffled by the seemingly built-in typo for a default command. I was having to create my own error messages just to avoid that.</p>\n\n",
      "PostDate": "2018-11-01T17:57:11.5726744Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
