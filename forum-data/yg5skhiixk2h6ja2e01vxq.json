{
  "Topic": {
    "TopicId": "yg5skhiixk2h6ja2e01vxq",
    "ForumId": "10",
    "Title": "Time-keeping methods",
    "LastUpdated": "2017-09-13T20:28:30.0447346Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6776201d-5c0e-4843-ba0f-ccf3dafb3f00",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Start script**\r\n\r\n```\r\ngame.realMinutes = 0\r\ngame.minutes = 0\r\ngame.hours = 9\r\ngame.am_or_pm = \"am\"\r\ngame.timeDisplay = \"9:00 am Day 1\"\r\ngame.day = 1\r\ngame.statusattributes = NewStringDictionary()\r\ndictionary add (game.statusattributes, \"timeDisplay\", \"Time: !\")\r\ncreate turnscript (\"myTurnScript\")\r\nmyTurnScript.script => {\r\n  game.realMinutes = game.realMinutes + 1\r\n  if (game.realMinutes<60) {\r\n    game.minutes = game.realMinutes\r\n  }\r\n  else {\r\n    game.minutes = game.realMinutes%60\r\n  }\r\n  if (game.minutes = 0) {\r\n    game.hours = game.hours + 1\r\n    if (game.hours = 12) {\r\n      if (game.am_or_pm = \"am\") {\r\n        game.am_or_pm = \"pm\"\r\n      }\r\n      else {\r\n        game.am_or_pm = \"am\"\r\n      }\r\n    }\r\n  }\r\n  if (game.hours = 13) {\r\n    game.hours = 1\r\n  }\r\n  if (game.realMinutes/1440>0) {\r\n    game.day = game.realMinutes/1440\r\n  }\r\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes<10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\r\n  //msg (\"Time: {game.hours}:{if game.minutes<10:0}{game.minutes} {game.am_or_pm}\")\r\n}\r\nEnableTurnScript (myTurnScript)\r\n```\r\n\r\n---\r\nUPDATE: Added days (no months or years yet)\r\n\r\nNOTE:  If you have a wait command that allows any amount of time other than 1 minute to pass, you'll be better off skipping to this: http://textadventures.co.uk/forum/quest/topic/yg5skhiixk2h6ja2e01vxq/time-keeping-methods#609be57d-13d5-4cf5-9f60-92525d37f704",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Start script</strong></p>\n<pre><code>game.realMinutes = 0\ngame.minutes = 0\ngame.hours = 9\ngame.am_or_pm = \"am\"\ngame.timeDisplay = \"9:00 am Day 1\"\ngame.day = 1\ngame.statusattributes = NewStringDictionary()\ndictionary add (game.statusattributes, \"timeDisplay\", \"Time: !\")\ncreate turnscript (\"myTurnScript\")\nmyTurnScript.script =&gt; {\n  game.realMinutes = game.realMinutes + 1\n  if (game.realMinutes&lt;60) {\n    game.minutes = game.realMinutes\n  }\n  else {\n    game.minutes = game.realMinutes%60\n  }\n  if (game.minutes = 0) {\n    game.hours = game.hours + 1\n    if (game.hours = 12) {\n      if (game.am_or_pm = \"am\") {\n        game.am_or_pm = \"pm\"\n      }\n      else {\n        game.am_or_pm = \"am\"\n      }\n    }\n  }\n  if (game.hours = 13) {\n    game.hours = 1\n  }\n  if (game.realMinutes/1440&gt;0) {\n    game.day = game.realMinutes/1440\n  }\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes&lt;10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\n  //msg (\"Time: {game.hours}:{if game.minutes&lt;10:0}{game.minutes} {game.am_or_pm}\")\n}\nEnableTurnScript (myTurnScript)\n</code></pre>\n<hr>\n<p>UPDATE: Added days (no months or years yet)</p>\n<p>NOTE:  If you have a wait command that allows any amount of time other than 1 minute to pass, you'll be better off skipping to this: http://textadventures.co.uk/forum/quest/topic/yg5skhiixk2h6ja2e01vxq/time-keeping-methods#609be57d-13d5-4cf5-9f60-92525d37f704</p>\n\n",
      "PostDate": "2017-09-13T20:28:30.0447346Z",
      "LastEditDate": "2017-09-13T23:12:34.1627464Z",
      "link": null
    },
    {
      "PostId": "4297a25d-eb04-4a4d-b5f1-80277cd91f5e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To calculate the actual amount of time since play began (not counting while, wait, get input, and such):\r\n\r\n```\r\nx = game.timeelapsed  // timeelapsed is a default attribute on the game object\r\ngame.hours = x / 3600\r\ntime = x%3600\r\ngame.minutes = x/60\r\nx = time%60\r\ngame.seconds = x\r\nif (game.minutes<10) {\r\n  game.minutes = \"0\" + game.minutes\r\n}\r\nif (game.seconds<10) {\r\n  game.seconds = \"0\" + game.seconds\r\n}\r\ngame.realgametime = game.hours + \"h\" + game.minutes + \"m\" + game.seconds + \"s\"\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>To calculate the actual amount of time since play began (not counting while, wait, get input, and such):</p>\n<pre><code>x = game.timeelapsed  // timeelapsed is a default attribute on the game object\ngame.hours = x / 3600\ntime = x%3600\ngame.minutes = x/60\nx = time%60\ngame.seconds = x\nif (game.minutes&lt;10) {\n  game.minutes = \"0\" + game.minutes\n}\nif (game.seconds&lt;10) {\n  game.seconds = \"0\" + game.seconds\n}\ngame.realgametime = game.hours + \"h\" + game.minutes + \"m\" + game.seconds + \"s\"\n</code></pre>\n\n",
      "PostDate": "2017-09-13T20:30:02.6146941Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c56064a7-428f-42d0-b555-e454c4b8a6b5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This game uses Pixie's library:\r\n\r\nhttp://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress\r\n\r\nhttps://github.com/ThePix/quest/wiki/Clock-Library\r\n\r\n\r\n<details><summary>VIEW SCREENSHOT</summary>\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30302398-53f9d112-9726-11e7-84ad-9d62052340ce.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>This game uses Pixie's library:</p>\n<p>http://textadventures.co.uk/games/view/rr9vezzxkeaovamsaqgxcw/they-call-ya-mister-quest-prototype-in-progress</p>\n<p>https://github.com/ThePix/quest/wiki/Clock-Library</p>\n<details><summary>VIEW SCREENSHOT</summary>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30302398-53f9d112-9726-11e7-84ad-9d62052340ce.png\" alt=\"image\"></p>\n</details>\n\n",
      "PostDate": "2017-09-13T20:43:36.7898464Z",
      "LastEditDate": "2017-09-13T20:44:31.6470107Z",
      "link": null
    },
    {
      "PostId": "dca3b68c-91b3-4d88-9cd4-407636d0789f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### Who else has some time-related code(s)?",
      "EditableFormat": "markdown",
      "HTML": "<h3>Who else has some time-related code(s)?</h3>\n\n",
      "PostDate": "2017-09-13T21:02:13.244951Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "609be57d-13d5-4cf5-9f60-92525d37f704",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The first one, I feel is a little wobbly. It might not be so easy to adapt if some command wants to take more than a minute. (For example, it would make sense if the \"wait\" command waited longer than a single minute).\r\n\r\nI'd likely go for something more like...\r\n```\r\n// (assuming the same variables)\r\n\r\ncreate turnscript (\"myTurnScript\")\r\nmyTurnScript.script => {\r\n  game.realMinutes = game.realMinutes + 1\r\n}\r\nEnableTurnScript (myTurnScript)\r\n\r\ngame.changedrealMinutes => {\r\n  game.minutes = game.realMinutes % 60\r\n  realHours = game.realMinutes / 60\r\n\r\n  game.military_hours = realHours % 24\r\n  game.hours = 1 + ((realHours - 1) % 12)\r\n  if (game.military_hours < 12) {\r\n    game.am_or_pm = \"am\"\r\n  }\r\n  else {\r\n    game.am_or_pm = \"pm\"\r\n  }\r\n  game.day = realHours / 24\r\n\r\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes<10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\r\n}\r\n```\r\n\r\nOR ... less efficient, but possibly useful:\r\n```\r\ngame.changedrealMinutes => {\r\n  oldHour = oldvalue / 60\r\n  newHour = game.realMinutes / 60\r\n\r\n  if (newHour <> oldHour) {\r\n    // In this case we iterate over the hours\r\n    // This means that if you want something to happen every hour or every day, you can set a `game.changedhour` script\r\n    // And if the sleep command says \"You sleep for 6 hours\" and adds 360 to realMinutes, those will be called the right\r\n    // number of times\r\n    // If none of those change scripts are set, we can do it in one step\r\n    stepVar = newHour - oldHour\r\n    if (HasScript(game, \"changedhour\")) {\r\n      stepVar = 1\r\n    }\r\n    else if (HasScript(game, \"changedam_or_pm\")) {\r\n      stepVar = 12\r\n    }\r\n    else if (HasScript(game, \"changedday\")) {\r\n      stepVar = 24\r\n    }\r\n\r\n    for (realHours, oldHour, newHour, stepVar) {\r\n      game.military_hours = realHours % 24\r\n      game.hours = 1 + ((realHours - 1) % 12)\r\n      if (game.military_hours < 12) {\r\n        game.am_or_pm = \"am\"\r\n      }\r\n      else {\r\n        game.am_or_pm = \"pm\"\r\n      }\r\n      game.day = realHours / 24\r\n    }\r\n  }\r\n  game.minutes = game.realMinutes % 60\r\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes<10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\r\n}\r\n```\r\n\r\nwow... half an hour to write that. I thought it would be shorter.",
      "EditableFormat": "markdown",
      "HTML": "<p>The first one, I feel is a little wobbly. It might not be so easy to adapt if some command wants to take more than a minute. (For example, it would make sense if the \"wait\" command waited longer than a single minute).</p>\n<p>I'd likely go for something more like...</p>\n<pre><code>// (assuming the same variables)\n\ncreate turnscript (\"myTurnScript\")\nmyTurnScript.script =&gt; {\n  game.realMinutes = game.realMinutes + 1\n}\nEnableTurnScript (myTurnScript)\n\ngame.changedrealMinutes =&gt; {\n  game.minutes = game.realMinutes % 60\n  realHours = game.realMinutes / 60\n\n  game.military_hours = realHours % 24\n  game.hours = 1 + ((realHours - 1) % 12)\n  if (game.military_hours &lt; 12) {\n    game.am_or_pm = \"am\"\n  }\n  else {\n    game.am_or_pm = \"pm\"\n  }\n  game.day = realHours / 24\n\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes&lt;10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\n}\n</code></pre>\n<p>OR ... less efficient, but possibly useful:</p>\n<pre><code>game.changedrealMinutes =&gt; {\n  oldHour = oldvalue / 60\n  newHour = game.realMinutes / 60\n\n  if (newHour &lt;&gt; oldHour) {\n    // In this case we iterate over the hours\n    // This means that if you want something to happen every hour or every day, you can set a `game.changedhour` script\n    // And if the sleep command says \"You sleep for 6 hours\" and adds 360 to realMinutes, those will be called the right\n    // number of times\n    // If none of those change scripts are set, we can do it in one step\n    stepVar = newHour - oldHour\n    if (HasScript(game, \"changedhour\")) {\n      stepVar = 1\n    }\n    else if (HasScript(game, \"changedam_or_pm\")) {\n      stepVar = 12\n    }\n    else if (HasScript(game, \"changedday\")) {\n      stepVar = 24\n    }\n\n    for (realHours, oldHour, newHour, stepVar) {\n      game.military_hours = realHours % 24\n      game.hours = 1 + ((realHours - 1) % 12)\n      if (game.military_hours &lt; 12) {\n        game.am_or_pm = \"am\"\n      }\n      else {\n        game.am_or_pm = \"pm\"\n      }\n      game.day = realHours / 24\n    }\n  }\n  game.minutes = game.realMinutes % 60\n  game.timeDisplay = \"\" + game.hours + \":\" + ProcessText(\"{if game.minutes&lt;10:0}{game.minutes}\") + \" \" + game.am_or_pm + \" Day: \" + game.day + \"\"\n}\n</code></pre>\n<p>wow... half an hour to write that. I thought it would be shorter.</p>\n\n",
      "PostDate": "2017-09-13T22:49:06.8780727Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "133de20c-6d4f-4f73-8d03-5b1682614363",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, mrangel!\r\n\r\n(I added a note about the wait time thing to the first post, just so no one typed first and scrolled down later.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, mrangel!</p>\n<p>(I added a note about the wait time thing to the first post, just so no one typed first and scrolled down later.)</p>\n\n",
      "PostDate": "2017-09-13T23:13:44.958108Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7486c794-3375-45ef-bb30-de6321ef57c3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm... I like that library. Setting events to go off at a particular time is useful; but as it's something I don't actually have a need for, my brain immediately starts hunting for possible improvements. I'm going to step away now, and work on some of the things  I have a deadline for.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm... I like that library. Setting events to go off at a particular time is useful; but as it's something I don't actually have a need for, my brain immediately starts hunting for possible improvements. I'm going to step away now, and work on some of the things  I have a deadline for.</p>\n\n",
      "PostDate": "2017-09-13T23:15:36.8820193Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a77dc18b-6f67-4583-aa64-a0a6a2086224",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**From my Start script:**\r\n```\r\nSetTime (\"01:08:00\")\r\ngame.clock = TimeAsString()\r\n    game_clock.waittime = 1\r\n```\r\n\r\n---\r\n**Everything else:**\r\n\r\n```\r\n<waitcount type=\"int\">0</waitcount>\r\n```\r\n\r\n\r\n```\r\n<object name=\"game_clock\">\r\n    <inherit name=\"editor_object\" />\r\n    <time type=\"int\">0</time>\r\n    <minutes type=\"int\">0</minutes>\r\n    <hours24 type=\"int\">0</hours24>\r\n    <days type=\"int\">0</days>\r\n    <countdown type=\"int\">0</countdown>\r\n    <increment type=\"int\">1</increment>\r\n    <waittime type=\"int\">0</waittime>\r\n    <testing type=\"boolean\">false</testing>\r\n    <clockmsg>You grab the spell reader and check the time. It's ###.</clockmsg>\r\n    <startyear type=\"int\">2017</startyear>\r\n    <changedtime type=\"script\">\r\n      JS.eval (\"$('#clock').html('\" + TimeAsString() + \"');\")\r\n    </changedtime>\r\n  </object>\r\n```\r\n\r\n\r\n```\r\n <command name=\"wait\">\r\n    <pattern type=\"string\">^wait$|^z$</pattern>\r\n    <script><![CDATA[\r\n      game.stop_waiting = false\r\n      count = game_clock.waittime\r\n      game_clock.event = false\r\n      while (count > 0 and not game_clock.event) {\r\n        // msg(\"count = \" + count)\r\n        // msg(\"game_clock.event = \" + game_clock.event)\r\n        count = count - 1\r\n      }\r\n      if (not game_clock.event) {\r\n        if (not game_clock.waittime = 1) {\r\n          P (\"You wait \" + game_clock.waittime + \" minutes.\")\r\n        }\r\n        else {\r\n          P (\"You wait \" + game_clock.waittime + \" minute.\")\r\n        }\r\n      }\r\n    ]]></script>\r\n  </command>\r\n```\r\n\r\n\r\n```\r\n<command name=\"wait minutes\">\r\n    <pattern type=\"string\"><![CDATA[^(wait|z) (?<text>\\w*)( minute| minutes| turn| turns|)$]]></pattern>\r\n    <script><![CDATA[\r\n      game_clock.event = true\r\n      if (not IsInt(text)) {\r\n        msg (\"Wait how long (I did not understand \\\"\" + text + \"\\\")?\")\r\n      }\r\n      else {\r\n        game.waitcount = WaitN(ToInt(text))\r\n        msg (\"You wait for \" + game.waitcount + \" minute{if game.waitcount>1:s}.\")\r\n      }\r\n    ]]></script>\r\n  </command>\r\n```\r\n\r\n\r\n```\r\n<turnscript name=\"turn_count\">\r\n    <enabled />\r\n    <script>\r\n      if (not game.notarealturn) {\r\n        game.turns = game.turns + 1\r\n      }\r\n      else {\r\n        msg (\"I didn't quite catch that.\")\r\n      }\r\n      game.notarealturn = false\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n```\r\n<turnscript name=\"high_noon\">\r\n    <enabled />\r\n    <script>\r\n      if (IsAfter(\"1:11:59\")) {\r\n        if (not IsAfter(\"1:12:00\")) {\r\n          MoveObject (Murphy, Mundane Corral)\r\n          msg (\"You hear the clock tower chiming. It is high noon.\")\r\n        }\r\n      }\r\n    </script>\r\n  </turnscript>\r\n```\r\n\r\n```\r\n<function name=\"IncTime\"><![CDATA[\r\n    on ready {\r\n      game_clock.time = game_clock.time + 1\r\n      // msg(\"game_clock.time = \" + game_clock.time)\r\n      // msg(\"game_clock.event = \" + game_clock.event)\r\n      game_clock.minutes = game_clock.time % 60\r\n      game_clock.hours24 = (game_clock.time / 60) % 24\r\n      game_clock.days = game_clock.time / (60 * 24)\r\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\r\n      game_clock.countdown = game_clock.countdown - 1\r\n      // msg(\"Looking for: \" + name)\r\n      o = GetObject(name)\r\n      if (not o = null and HasScript(o, \"look\")) {\r\n        if (game_clock.testing) {\r\n          msg (\"Found: \" + o + \" (\" + o.alias + \")\")\r\n        }\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        do (o, \"look\")\r\n      }\r\n      else if (game_clock.countdown < 0 and HasAttribute(game_clock, \"nextstep\")) {\r\n        if (game_clock.testing) {\r\n          msg (\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\r\n        }\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        step = game_clock.nextstep\r\n        game_clock.nextstep = null\r\n        do (step, \"look\")\r\n      }\r\n      game.clock = TimeAsString()\r\n      IncUserTime\r\n    }\r\n  ]]></function>\r\n```\r\n\r\n```\r\n  <function name=\"WaitN\" parameters=\"n\" type=\"int\">\r\n    game.stop_waiting = false\r\n    for (i, 1, n-1) {\r\n      IncTime\r\n      if (game.stop_waiting) {\r\n        return (i)\r\n      }\r\n    }\r\n    return (n)\r\n  </function>\r\n```\r\n\r\n```\r\n<function name=\"IsAfter\" parameters=\"time\" type=\"boolean\"><![CDATA[\r\n    if (TypeOf(time) = \"string\") {\r\n      l = Split(time, \":\")\r\n      if (not ListCount(l) = 3) {\r\n        error (\"SetTime failed to understand \" + minutes)\r\n      }\r\n      days = ToInt(StringListItem(l, 0))\r\n      hours24 = ToInt(StringListItem(l, 1))\r\n      minutes = ToInt(StringListItem(l, 2))\r\n      time = (days * 24 + hours24) * 60 + minutes\r\n    }\r\n    return (game_clock.time > time)\r\n  ]]></function>\r\n```\r\n\r\n---\r\nNOTE: This is all Pixie's code, unless I added something in from someone else on the forum and forgot about it.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>From my Start script:</strong></p>\n<pre><code>SetTime (\"01:08:00\")\ngame.clock = TimeAsString()\n    game_clock.waittime = 1\n</code></pre>\n<hr>\n<p><strong>Everything else:</strong></p>\n<pre><code>&lt;waitcount type=\"int\"&gt;0&lt;/waitcount&gt;\n</code></pre>\n<pre><code>&lt;object name=\"game_clock\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;time type=\"int\"&gt;0&lt;/time&gt;\n    &lt;minutes type=\"int\"&gt;0&lt;/minutes&gt;\n    &lt;hours24 type=\"int\"&gt;0&lt;/hours24&gt;\n    &lt;days type=\"int\"&gt;0&lt;/days&gt;\n    &lt;countdown type=\"int\"&gt;0&lt;/countdown&gt;\n    &lt;increment type=\"int\"&gt;1&lt;/increment&gt;\n    &lt;waittime type=\"int\"&gt;0&lt;/waittime&gt;\n    &lt;testing type=\"boolean\"&gt;false&lt;/testing&gt;\n    &lt;clockmsg&gt;You grab the spell reader and check the time. It's ###.&lt;/clockmsg&gt;\n    &lt;startyear type=\"int\"&gt;2017&lt;/startyear&gt;\n    &lt;changedtime type=\"script\"&gt;\n      JS.eval (\"$('#clock').html('\" + TimeAsString() + \"');\")\n    &lt;/changedtime&gt;\n  &lt;/object&gt;\n</code></pre>\n<pre><code> &lt;command name=\"wait\"&gt;\n    &lt;pattern type=\"string\"&gt;^wait$|^z$&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      game.stop_waiting = false\n      count = game_clock.waittime\n      game_clock.event = false\n      while (count &gt; 0 and not game_clock.event) {\n        // msg(\"count = \" + count)\n        // msg(\"game_clock.event = \" + game_clock.event)\n        count = count - 1\n      }\n      if (not game_clock.event) {\n        if (not game_clock.waittime = 1) {\n          P (\"You wait \" + game_clock.waittime + \" minutes.\")\n        }\n        else {\n          P (\"You wait \" + game_clock.waittime + \" minute.\")\n        }\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<pre><code>&lt;command name=\"wait minutes\"&gt;\n    &lt;pattern type=\"string\"&gt;&lt;![CDATA[^(wait|z) (?&lt;text&gt;\\w*)( minute| minutes| turn| turns|)$]]&gt;&lt;/pattern&gt;\n    &lt;script&gt;&lt;![CDATA[\n      game_clock.event = true\n      if (not IsInt(text)) {\n        msg (\"Wait how long (I did not understand \\\"\" + text + \"\\\")?\")\n      }\n      else {\n        game.waitcount = WaitN(ToInt(text))\n        msg (\"You wait for \" + game.waitcount + \" minute{if game.waitcount&gt;1:s}.\")\n      }\n    ]]&gt;&lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n<pre><code>&lt;turnscript name=\"turn_count\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      if (not game.notarealturn) {\n        game.turns = game.turns + 1\n      }\n      else {\n        msg (\"I didn't quite catch that.\")\n      }\n      game.notarealturn = false\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<pre><code>&lt;turnscript name=\"high_noon\"&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      if (IsAfter(\"1:11:59\")) {\n        if (not IsAfter(\"1:12:00\")) {\n          MoveObject (Murphy, Mundane Corral)\n          msg (\"You hear the clock tower chiming. It is high noon.\")\n        }\n      }\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n</code></pre>\n<pre><code>&lt;function name=\"IncTime\"&gt;&lt;![CDATA[\n    on ready {\n      game_clock.time = game_clock.time + 1\n      // msg(\"game_clock.time = \" + game_clock.time)\n      // msg(\"game_clock.event = \" + game_clock.event)\n      game_clock.minutes = game_clock.time % 60\n      game_clock.hours24 = (game_clock.time / 60) % 24\n      game_clock.days = game_clock.time / (60 * 24)\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\n      game_clock.countdown = game_clock.countdown - 1\n      // msg(\"Looking for: \" + name)\n      o = GetObject(name)\n      if (not o = null and HasScript(o, \"look\")) {\n        if (game_clock.testing) {\n          msg (\"Found: \" + o + \" (\" + o.alias + \")\")\n        }\n        // this is used by wait\n        game_clock.event = true\n        do (o, \"look\")\n      }\n      else if (game_clock.countdown &lt; 0 and HasAttribute(game_clock, \"nextstep\")) {\n        if (game_clock.testing) {\n          msg (\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\n        }\n        // this is used by wait\n        game_clock.event = true\n        step = game_clock.nextstep\n        game_clock.nextstep = null\n        do (step, \"look\")\n      }\n      game.clock = TimeAsString()\n      IncUserTime\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<pre><code>  &lt;function name=\"WaitN\" parameters=\"n\" type=\"int\"&gt;\n    game.stop_waiting = false\n    for (i, 1, n-1) {\n      IncTime\n      if (game.stop_waiting) {\n        return (i)\n      }\n    }\n    return (n)\n  &lt;/function&gt;\n</code></pre>\n<pre><code>&lt;function name=\"IsAfter\" parameters=\"time\" type=\"boolean\"&gt;&lt;![CDATA[\n    if (TypeOf(time) = \"string\") {\n      l = Split(time, \":\")\n      if (not ListCount(l) = 3) {\n        error (\"SetTime failed to understand \" + minutes)\n      }\n      days = ToInt(StringListItem(l, 0))\n      hours24 = ToInt(StringListItem(l, 1))\n      minutes = ToInt(StringListItem(l, 2))\n      time = (days * 24 + hours24) * 60 + minutes\n    }\n    return (game_clock.time &gt; time)\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<hr>\n<p>NOTE: This is all Pixie's code, unless I added something in from someone else on the forum and forgot about it.</p>\n\n",
      "PostDate": "2017-09-13T23:32:39.1774664Z",
      "LastEditDate": "2017-09-13T23:34:26.4214191Z",
      "link": null
    },
    {
      "PostId": "621f7d3f-ce6a-41c5-86a4-543ed5f7ff2c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Having read this, I have just updated my library to should \"12 noon\" rather than \"12 pm\" (as noon is not after the meridian). Similar for midnight.\r\nhttp://www.rmg.co.uk/discover/explore/noon-12-am-or-12-pm\r\n\r\n> The first one, I feel is a little wobbly. It might not be so easy to adapt if some command wants to take more than a minute. \r\n\r\nI had each increment as a single minute for my library so events can be triggered at a set time. If a command takes 5 minutes, then the time must be iterated 5 times to ensure events are not missed. There is a function to handle the iteration. Also, if the player does WAIT, it will iterate through 20 turns, but will stop when something happens that the player might want to react to.",
      "EditableFormat": "markdown",
      "HTML": "<p>Having read this, I have just updated my library to should \"12 noon\" rather than \"12 pm\" (as noon is not after the meridian). Similar for midnight.<br>\nhttp://www.rmg.co.uk/discover/explore/noon-12-am-or-12-pm</p>\n<blockquote>\n<p>The first one, I feel is a little wobbly. It might not be so easy to adapt if some command wants to take more than a minute.</p>\n</blockquote>\n<p>I had each increment as a single minute for my library so events can be triggered at a set time. If a command takes 5 minutes, then the time must be iterated 5 times to ensure events are not missed. There is a function to handle the iteration. Also, if the player does WAIT, it will iterate through 20 turns, but will stop when something happens that the player might want to react to.</p>\n\n",
      "PostDate": "2017-09-14T07:22:43.8419501Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d056abdb-cf83-4a14-9dbc-f43340ff82c4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I use the WAIT and the WAIT MINUTES commands extensively, and all of Pixie's stuff works flawlessly.  \r\n\r\n\r\nMy  first and second posts' codes are not Pixie's and not very good.  The rest of my posts in this thread are Pixie's, and they're good.",
      "EditableFormat": "markdown",
      "HTML": "<p>I use the WAIT and the WAIT MINUTES commands extensively, and all of Pixie's stuff works flawlessly.</p>\n<p>My  first and second posts' codes are not Pixie's and not very good.  The rest of my posts in this thread are Pixie's, and they're good.</p>\n\n",
      "PostDate": "2017-09-14T07:33:04.1894069Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4c6b2190-44f1-4722-98ff-a17c8b727b65",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ ThePix\r\n\r\nThere are two instances of \"12 am\" every day, right?\r\n\r\n...because the date doesn't change until 12:01 am.\r\n\r\n...because \"12 am\" is really 24:00 hours.\r\n\r\n...or \"12 am\" is really 0:00 hours...\r\n\r\nThat's right!  It's both! ",
      "EditableFormat": "markdown",
      "HTML": "<p>@ ThePix</p>\n<p>There are two instances of \"12 am\" every day, right?</p>\n<p>...because the date doesn't change until 12:01 am.</p>\n<p>...because \"12 am\" is really 24:00 hours.</p>\n<p>...or \"12 am\" is really 0:00 hours...</p>\n<p>That's right!  It's both!</p>\n\n",
      "PostDate": "2017-09-14T07:40:03.8545549Z",
      "LastEditDate": "2017-09-14T07:43:01.7298845Z",
      "link": null
    },
    {
      "PostId": "9e98e039-1292-4864-b6a7-7e5afd0b0166",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Technically, there is no 24:00hours. in a 24hour clock the time goes 23:59hrs then 00:00hrs. (or 0:00hrs)\r\nThe new day should begin when the clock reads 00:00hrs. (or 0:00hrs)\r\n12 am is 12:00, 12:01hrs is 12:01pm",
      "EditableFormat": "markdown",
      "HTML": "<p>Technically, there is no 24:00hours. in a 24hour clock the time goes 23:59hrs then 00:00hrs. (or 0:00hrs)<br>\nThe new day should begin when the clock reads 00:00hrs. (or 0:00hrs)<br>\n12 am is 12:00, 12:01hrs is 12:01pm</p>\n\n",
      "PostDate": "2017-09-14T08:30:04.6298848Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3c4b2d0-d992-4fe4-8806-2c98262bcbc5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "a\r\n\r\n(test)\r\n\r\n--------\r\n\r\nHK edit:\r\n\r\nwhy is every post of mine getting blocked... argh.... HK bangs his head...\r\n\r\nI can post 'a' as my content for a post, but I can't post my actual post...\r\n\r\nHK is lost...",
      "EditableFormat": "markdown",
      "HTML": "<p>a</p>\n<p>(test)</p>\n<hr>\n<p>HK edit:</p>\n<p>why is every post of mine getting blocked... argh.... HK bangs his head...</p>\n<p>I can post 'a' as my content for a post, but I can't post my actual post...</p>\n<p>HK is lost...</p>\n\n",
      "PostDate": "2017-09-14T09:08:15.7482201Z",
      "LastEditDate": "2017-09-14T09:11:58.5804499Z",
      "link": null
    },
    {
      "PostId": "c1a7cab0-7927-475f-8c69-a6542f34084b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Doctor Agon: Depends. There's some argument about whether a leap second should be shown on clocks as 24:00:00 or 23:59:60. I doubt that'll ever matter in a game, though.\r\n\r\nPixie: Yep; didn't look at your library until after I'd responded to the first post. Looks pretty neat; though there's still things I wonder if they might be improved, like having multiple events at the same time. If I had a use for it, I'd probably end up using your library. And then hack it up so it can take events with a trigger time in crontab format.",
      "EditableFormat": "markdown",
      "HTML": "<p>Doctor Agon: Depends. There's some argument about whether a leap second should be shown on clocks as 24:00:00 or 23:59:60. I doubt that'll ever matter in a game, though.</p>\n<p>Pixie: Yep; didn't look at your library until after I'd responded to the first post. Looks pretty neat; though there's still things I wonder if they might be improved, like having multiple events at the same time. If I had a use for it, I'd probably end up using your library. And then hack it up so it can take events with a trigger time in crontab format.</p>\n\n",
      "PostDate": "2017-09-14T09:10:30.7146634Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9c47ef4b-ddff-4435-beee-b198d9bd1ba6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "this is what I personally like/use and understand for time:\r\n\r\n```\r\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\r\n\r\n00:00:01, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:00:01, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n00:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n01:00:00, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 01:00:00, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n05:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 05:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n\r\n06:00:00, night-time-to-day-time, sun-rise/dawn, military-time == 06:00:00, am, night-time-to-day-time, sun-rise/dawn, civilian-time\r\n\r\n06:00:01, day-time, morning, military-time == 06:00:01, am, day-time, morning, civilian-time\r\n11:59:59, day-time, morning, military-time == 11:59:59, am, day-time, morning, civilian-time\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>this is what I personally like/use and understand for time:</p>\n<pre><code>00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\n\n00:00:01, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:00:01, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n00:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n01:00:00, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 01:00:00, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n05:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 05:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n\n06:00:00, night-time-to-day-time, sun-rise/dawn, military-time == 06:00:00, am, night-time-to-day-time, sun-rise/dawn, civilian-time\n\n06:00:01, day-time, morning, military-time == 06:00:01, am, day-time, morning, civilian-time\n11:59:59, day-time, morning, military-time == 11:59:59, am, day-time, morning, civilian-time\n</code></pre>\n\n",
      "PostDate": "2017-09-14T09:13:13.304987Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7fb576b2-062e-4624-b814-2ab7fe68342f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "what the  hell.... okay I can post half.... of my post... nothing wrong with any of those characters... used.... okay...\r\n\r\n------\r\n\r\nand let's try the other half now...\r\n\r\n```\r\n12:00:00, day-time, mid-day/noon, military-time == 12:00:00, am-to-pm, day-time, mid-day/noon, civilian-time\r\n\r\n12:00:01, day-time, after-noon, military-time == 12:00:01, pm, day-time, after-noon, civilian-time\r\n12:59:59, day-time, after-noon, military-time == 12:59:59, pm, day-time, after-noon, civilian-time\r\n13:00:00, day-time, after-noon, military-time == 01:00:00, pm, day-time, after-noon, civilian-time\r\n17:59:59, day-time, after-noon, military-time == 05:59:59, pm, day-time, after-noon, civilian-time\r\n\r\n18:00:00, day-time-to-night-time, sun-set/dusk, military-time == 06:00:00, pm, day-time-to-night-time, sun-set/dusk, civilian-time\r\n\r\n18:00:01, night-time, evening, military-time == 06:00:01, pm, night-time, evening, civilian-time\r\n20:59:59, night-time, evening, military-time == 08:59:59, pm, night-time, evening,civilian-time\r\n21:00:00, night-time, twilight, military-time == 09:00:00, pm, night-time, twilight, civilian-time\r\n23:59:59, night-time, twilight, military-time == 11:59:59, pm, night-time, twilight, civilian-time\r\n\r\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>what the  hell.... okay I can post half.... of my post... nothing wrong with any of those characters... used.... okay...</p>\n<hr>\n<p>and let's try the other half now...</p>\n<pre><code>12:00:00, day-time, mid-day/noon, military-time == 12:00:00, am-to-pm, day-time, mid-day/noon, civilian-time\n\n12:00:01, day-time, after-noon, military-time == 12:00:01, pm, day-time, after-noon, civilian-time\n12:59:59, day-time, after-noon, military-time == 12:59:59, pm, day-time, after-noon, civilian-time\n13:00:00, day-time, after-noon, military-time == 01:00:00, pm, day-time, after-noon, civilian-time\n17:59:59, day-time, after-noon, military-time == 05:59:59, pm, day-time, after-noon, civilian-time\n\n18:00:00, day-time-to-night-time, sun-set/dusk, military-time == 06:00:00, pm, day-time-to-night-time, sun-set/dusk, civilian-time\n\n18:00:01, night-time, evening, military-time == 06:00:01, pm, night-time, evening, civilian-time\n20:59:59, night-time, evening, military-time == 08:59:59, pm, night-time, evening,civilian-time\n21:00:00, night-time, twilight, military-time == 09:00:00, pm, night-time, twilight, civilian-time\n23:59:59, night-time, twilight, military-time == 11:59:59, pm, night-time, twilight, civilian-time\n\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\n</code></pre>\n\n",
      "PostDate": "2017-09-14T09:14:58.420187Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d4277349-a4b1-4cd4-9f65-b4fbcf0d9ee0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "okay, no F'n problem with this half's characters....\r\n\r\nso what the F', can't I post it as one post ??? ... WHY the F' does it allow half of everything I post only... WTF... is going on... ???!!!!\r\n\r\nand it's not F' character length... so why can't I post that as one post, why'd it force me to break it into two posts??? FKN... what is going on... does my computer have a virus and its making extra/hidden scripts/text or is something fkn up with the server and/or the forum software it uses... ARGH.....",
      "EditableFormat": "markdown",
      "HTML": "<p>okay, no F'n problem with this half's characters....</p>\n<p>so what the F', can't I post it as one post ??? ... WHY the F' does it allow half of everything I post only... WTF... is going on... ???!!!!</p>\n<p>and it's not F' character length... so why can't I post that as one post, why'd it force me to break it into two posts??? FKN... what is going on... does my computer have a virus and its making extra/hidden scripts/text or is something fkn up with the server and/or the forum software it uses... ARGH.....</p>\n\n",
      "PostDate": "2017-09-14T09:16:26.5076336Z",
      "LastEditDate": "2017-09-14T09:18:24.5694581Z",
      "link": null
    },
    {
      "PostId": "78235a4a-e772-4a15-9d46-bbb35515c099",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Poor HK!\r\n\r\nI got banned for hours for making too many posts not too long ago, HK.  So, it could be worse!\r\n\r\n---\r\nI always thought 24:00 hours and 0:00 were the same thing.  (My uncle used to drone on about it, in fact.)\r\n\r\nUPDATE: \r\n\r\nhttp://militarytimechart.com/\r\n\r\n---\r\n>\"Time is an illusion.  Lunchtime is doubly so.\"\r\n    - Douglas Adams",
      "EditableFormat": "markdown",
      "HTML": "<p>Poor HK!</p>\n<p>I got banned for hours for making too many posts not too long ago, HK.  So, it could be worse!</p>\n<hr>\n<p>I always thought 24:00 hours and 0:00 were the same thing.  (My uncle used to drone on about it, in fact.)</p>\n<p>UPDATE:</p>\n<p>http://militarytimechart.com/</p>\n<hr>\n<blockquote>\n<p>\"Time is an illusion.  Lunchtime is doubly so.\"<br>\n- Douglas Adams</p>\n</blockquote>\n\n",
      "PostDate": "2017-09-14T09:20:08.2785822Z",
      "LastEditDate": "2017-09-14T09:22:35.6588737Z",
      "link": null
    },
    {
      "PostId": "d4139f1f-54b7-4331-b244-701708613451",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "FKN POST IT FKN POST IT....\r\n\r\nHK cries... it fkn blocks me from fkn posting anything... except one line spam posts... every FKN post, I half to split it into two posts, to get it to get fkn posted... HK cries... what the F' is going on... ??? !!!!\r\n\r\n\r\nthis is what I personally like/use and understand for time:\r\n\r\n```\r\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\r\n\r\n00:00:01, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:00:01, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n00:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n01:00:00, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 01:00:00, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n05:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 05:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\r\n\r\n06:00:00, night-time-to-day-time, sun-rise/dawn, military-time == 06:00:00, am, night-time-to-day-time, sun-rise/dawn, civilian-time\r\n\r\n06:00:01, day-time, morning, military-time == 06:00:01, am, day-time, morning, civilian-time\r\n11:59:59, day-time, morning, military-time == 11:59:59, am, day-time, morning, civilian-time\r\n\r\n12:00:00, day-time, mid-day/noon, military-time == 12:00:00, am-to-pm, day-time, mid-day/noon, civilian-time\r\n\r\n12:00:01, day-time, after-noon, military-time == 12:00:01, pm, day-time, after-noon, civilian-time\r\n12:59:59, day-time, after-noon, military-time == 12:59:59, pm, day-time, after-noon, civilian-time\r\n13:00:00, day-time, after-noon, military-time == 01:00:00, pm, day-time, after-noon, civilian-time\r\n17:59:59, day-time, after-noon, military-time == 05:59:59, pm, day-time, after-noon, civilian-time\r\n\r\n18:00:00, day-time-to-night-time, sun-set/dusk, military-time == 06:00:00, pm, day-time-to-night-time, sun-set/dusk, civilian-time\r\n\r\n18:00:01, night-time, evening, military-time == 06:00:01, pm, night-time, evening, civilian-time\r\n20:59:59, night-time, evening, military-time == 08:59:59, pm, night-time, evening, civilian-time\r\n21:00:00, night-time, twilight, military-time == 09:00:00, pm, night-time, twilight, civilian-time\r\n23:59:59, night-time, twilight, military-time == 11:59:59, pm, night-time, twilight, civilian-time\r\n\r\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>FKN POST IT FKN POST IT....</p>\n<p>HK cries... it fkn blocks me from fkn posting anything... except one line spam posts... every FKN post, I half to split it into two posts, to get it to get fkn posted... HK cries... what the F' is going on... ??? !!!!</p>\n<p>this is what I personally like/use and understand for time:</p>\n<pre><code>00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\n\n00:00:01, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:00:01, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n00:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 12:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n01:00:00, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 01:00:00, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n05:59:59, night-time, twilight/pre-dawn/pre-sun-rise, military-time == 05:59:59, am, night-time, twilight/pre-dawn/pre-sun-rise, civilian-time\n\n06:00:00, night-time-to-day-time, sun-rise/dawn, military-time == 06:00:00, am, night-time-to-day-time, sun-rise/dawn, civilian-time\n\n06:00:01, day-time, morning, military-time == 06:00:01, am, day-time, morning, civilian-time\n11:59:59, day-time, morning, military-time == 11:59:59, am, day-time, morning, civilian-time\n\n12:00:00, day-time, mid-day/noon, military-time == 12:00:00, am-to-pm, day-time, mid-day/noon, civilian-time\n\n12:00:01, day-time, after-noon, military-time == 12:00:01, pm, day-time, after-noon, civilian-time\n12:59:59, day-time, after-noon, military-time == 12:59:59, pm, day-time, after-noon, civilian-time\n13:00:00, day-time, after-noon, military-time == 01:00:00, pm, day-time, after-noon, civilian-time\n17:59:59, day-time, after-noon, military-time == 05:59:59, pm, day-time, after-noon, civilian-time\n\n18:00:00, day-time-to-night-time, sun-set/dusk, military-time == 06:00:00, pm, day-time-to-night-time, sun-set/dusk, civilian-time\n\n18:00:01, night-time, evening, military-time == 06:00:01, pm, night-time, evening, civilian-time\n20:59:59, night-time, evening, military-time == 08:59:59, pm, night-time, evening, civilian-time\n21:00:00, night-time, twilight, military-time == 09:00:00, pm, night-time, twilight, civilian-time\n23:59:59, night-time, twilight, military-time == 11:59:59, pm, night-time, twilight, civilian-time\n\n00:00:00, night-time, mid-night, military-time == 12:00:00, pm-to-am, night-time, mid-night, civilian-time\n</code></pre>\n\n",
      "PostDate": "2017-09-14T09:21:10.5339911Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f5a23d6-22b8-4606-819e-eb5aec037797",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "okay.... WTF... that posted ... so it waits until I'm fkn crying... okay.... FK!",
      "EditableFormat": "markdown",
      "HTML": "<p>okay.... WTF... that posted ... so it waits until I'm fkn crying... okay.... FK!</p>\n\n",
      "PostDate": "2017-09-14T09:21:54.0548187Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa8a3306-3c6e-43b5-b4a8-2c8128d22230",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HK: twilight is defined by the position of the sun, not by the clock, so will be different times depending on your latitude and time of year.\r\nA little confused that you include \"twilight/pre-dawn\" on your list; that seems a little contradictory. I'm used to \"twilight\" meaning the period before sunrise or after sunset where the sun's light is still visible on the horizon; so a term that describes either dawn or dusk.",
      "EditableFormat": "markdown",
      "HTML": "<p>HK: twilight is defined by the position of the sun, not by the clock, so will be different times depending on your latitude and time of year.<br>\nA little confused that you include \"twilight/pre-dawn\" on your list; that seems a little contradictory. I'm used to \"twilight\" meaning the period before sunrise or after sunset where the sun's light is still visible on the horizon; so a term that describes either dawn or dusk.</p>\n\n",
      "PostDate": "2017-09-14T10:28:24.726386Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3bc5aabb-af78-4da8-90c3-b7396db08290",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When I posted the thing about making the time library support cron-style events, I thought that was a big project I'd never actually have the time for. But now I realise it's a lot less complex than I thought.\r\n\r\nYou can schedule an event for a time like \"11:15\" with Pixie's nice library. That's neat. I only skimmed over your code, but as it stands I don't think you can have an event with a time like \"*:30\", so that it happens at half past every hour. And I think I can see a surprisingly easy way to make that work (and possibly be more efficient, too).\r\n\r\nThe system in my head would give the you a CreateEvent function that takes a string of the form \"(day) (hour):(minute):(second)\". Each value can either be a number, a comma-separated list of numbers, an asterisk (every day/hour/whatever), a divisor (\"/6\" means every 6 minutes/hours/etc), a modulo (\"%7\" means \"when the current minute is a multiple of 7\"), or a dot (\"10:.\" would mean \"a random time between 10 and 11\").\r\n\r\nObviously, doing it like this you can't iterate over all the minutes/seconds/whatever to check if something matches. Instead, I'd make an ObjectList of all the events. The CreateEvent function gives them a couple of extra attributes: \"event_time\", which contains the string as defined above, and \"event_next\" which is the time the event will next happen (as an epoch time).\r\n\r\nInstead of iterating over all the minutes, checking if each has an event, until the time you've been told to wait until, you use ObjectListSort(game_clock.active_events, \"event_next\"), then grab the first event from the list. Repeat until you find one whose next-time is greater than the time you're waiting until.\r\n(Remembering, of course, that after firing an event, you need to recalculate the next time it will go off, and then re-sort the list)\r\n\r\n\r\n(Warning: Below this point I'm musing on the subject of over-engineering the clock library, doing things that might not be useful to most people)\r\nI'm also thinking that a command setting the 'increment' attribute isn't quite perfect. For example, if you're trying to pick a lock, then you could fail if something distracts you.\r\nMaybe something like...\r\n```\r\nmsg (\"You get out your tools and start working on the lock\")\r\nStartSlowAction(30, \"picking the lock\") {\r\n  if (result) {\r\n    msg (\"You unlocked the lock!\")\r\n  }\r\n  else if (time_elapsed > 25) {\r\n    msg (\"You almost got it finished, but then…\")\r\n  }\r\n  else {\r\n    msg (\"There's always something to distract you when you're doing a tough job.\")\r\n  }\r\n}\r\n```\r\n\r\nIf you're doing something like that, then as well as your `Quiet` function, there would be an `Interrupt` one, which causes a task the player is currently doing to fail; triggering the callback.\r\nEvents which invoke neither Quiet nor Interrupt would display something on the screen while you're picking the lock; and possibly display a menu asking if you want to continue. Hence the string argument to StartSlowAction; so it can say \"An alarm goes off somewhere else in the building. Continue picking the lock?\"\r\n\r\nKind of tempted to try building this now ... but I really should be working.\r\n\r\nMaybe later.",
      "EditableFormat": "markdown",
      "HTML": "<p>When I posted the thing about making the time library support cron-style events, I thought that was a big project I'd never actually have the time for. But now I realise it's a lot less complex than I thought.</p>\n<p>You can schedule an event for a time like \"11:15\" with Pixie's nice library. That's neat. I only skimmed over your code, but as it stands I don't think you can have an event with a time like \"*:30\", so that it happens at half past every hour. And I think I can see a surprisingly easy way to make that work (and possibly be more efficient, too).</p>\n<p>The system in my head would give the you a CreateEvent function that takes a string of the form \"(day) (hour):(minute):(second)\". Each value can either be a number, a comma-separated list of numbers, an asterisk (every day/hour/whatever), a divisor (\"/6\" means every 6 minutes/hours/etc), a modulo (\"%7\" means \"when the current minute is a multiple of 7\"), or a dot (\"10:.\" would mean \"a random time between 10 and 11\").</p>\n<p>Obviously, doing it like this you can't iterate over all the minutes/seconds/whatever to check if something matches. Instead, I'd make an ObjectList of all the events. The CreateEvent function gives them a couple of extra attributes: \"event_time\", which contains the string as defined above, and \"event_next\" which is the time the event will next happen (as an epoch time).</p>\n<p>Instead of iterating over all the minutes, checking if each has an event, until the time you've been told to wait until, you use ObjectListSort(game_clock.active_events, \"event_next\"), then grab the first event from the list. Repeat until you find one whose next-time is greater than the time you're waiting until.<br>\n(Remembering, of course, that after firing an event, you need to recalculate the next time it will go off, and then re-sort the list)</p>\n<p>(Warning: Below this point I'm musing on the subject of over-engineering the clock library, doing things that might not be useful to most people)<br>\nI'm also thinking that a command setting the 'increment' attribute isn't quite perfect. For example, if you're trying to pick a lock, then you could fail if something distracts you.<br>\nMaybe something like...</p>\n<pre><code>msg (\"You get out your tools and start working on the lock\")\nStartSlowAction(30, \"picking the lock\") {\n  if (result) {\n    msg (\"You unlocked the lock!\")\n  }\n  else if (time_elapsed &gt; 25) {\n    msg (\"You almost got it finished, but then…\")\n  }\n  else {\n    msg (\"There's always something to distract you when you're doing a tough job.\")\n  }\n}\n</code></pre>\n<p>If you're doing something like that, then as well as your <code>Quiet</code> function, there would be an <code>Interrupt</code> one, which causes a task the player is currently doing to fail; triggering the callback.<br>\nEvents which invoke neither Quiet nor Interrupt would display something on the screen while you're picking the lock; and possibly display a menu asking if you want to continue. Hence the string argument to StartSlowAction; so it can say \"An alarm goes off somewhere else in the building. Continue picking the lock?\"</p>\n<p>Kind of tempted to try building this now ... but I really should be working.</p>\n<p>Maybe later.</p>\n\n",
      "PostDate": "2017-09-14T12:28:37.525528Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6da62969-3b83-4d02-b59e-94975a0a50ab",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ya, twilight is indeed the partial light before sunrise (and a little after sunset too) from the curvature of light even though the sun is still below horizon, but I like using it to mean 'night hours' (from evening to dawn), as the only other word is night, and twilight just sounds cool for a 'night hour', hehe.\r\n\r\nand I like using \"am_to_pm\" and \"pm_to_am\" for noon/midnight, and \"day_time_to_night_time\" and \"night_time_to_day_time\" for dawn/dusk, as those times are technically transitions-lines",
      "EditableFormat": "markdown",
      "HTML": "<p>ya, twilight is indeed the partial light before sunrise (and a little after sunset too) from the curvature of light even though the sun is still below horizon, but I like using it to mean 'night hours' (from evening to dawn), as the only other word is night, and twilight just sounds cool for a 'night hour', hehe.</p>\n<p>and I like using \"am_to_pm\" and \"pm_to_am\" for noon/midnight, and \"day_time_to_night_time\" and \"night_time_to_day_time\" for dawn/dusk, as those times are technically transitions-lines</p>\n\n",
      "PostDate": "2017-09-14T14:26:30.1897484Z",
      "LastEditDate": "2017-09-14T14:32:21.3461764Z",
      "link": null
    }
  ]
}
