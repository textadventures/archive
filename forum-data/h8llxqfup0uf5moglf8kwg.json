{
  "Topic": {
    "TopicId": "h8llxqfup0uf5moglf8kwg",
    "ForumId": "10",
    "Title": "Basic Random Combat",
    "LastUpdated": "2017-05-28T12:43:50.6520924Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6a3d5345-e3c1-4f67-bd10-5454604ae72d",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya Everyone,\r\n\r\nI've been looking into trying to make turn-based combat for a game. Just something simple, consider it Pokémon style, where you get the options, such as run, surrender, or fight, etc. Booth parties have a health bar, a stamina bar sounds too complex though. And I would enjoy some stats, but at the same time, with me being a novice, I should probably lay off those for now.\r\n\r\nSo what I'm looking for is the player has say, a safe area. Home. From home, they can go to another room, say Forest, and then a random event happens. Sometimes they might find an item, or an NPC or event, sometimes they might gain stats, (if I implement stats) or health,  but sometimes they might get a random attack. Say there might be goblins, wolves and orcs, the player would have a random chance of encountering each. And really, when that system is implemented, it's not much of a stretch to add more enemy types.\r\n\r\nI am assuming there are already combat libraries out there. I've never used a library, and don't fully understand what they are. Collections of preset attributes and such? I know how to make objects, I've recently started with attributes, and currently my combat menu is a menu printed from list options, which works. Anyway, enough rambling.\r\n\r\nHas anyone got a recommendation for up to date libraries, or, failing that, a way to implement this style of combat? The player should, ideally, not be in the 'room' with an enemy, but have them occur as events, with the combat screen, then the loot/victory screen, then they end up back at Home as this is the end of their 'adventure' for that turn, if it makes sense. Until they set out again. If there's anyone experienced out there, how hard would this be to implement for a mostly GUI user?\r\n\r\nThanks for the help!",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya Everyone,</p>\n<p>I've been looking into trying to make turn-based combat for a game. Just something simple, consider it Pokémon style, where you get the options, such as run, surrender, or fight, etc. Booth parties have a health bar, a stamina bar sounds too complex though. And I would enjoy some stats, but at the same time, with me being a novice, I should probably lay off those for now.</p>\n<p>So what I'm looking for is the player has say, a safe area. Home. From home, they can go to another room, say Forest, and then a random event happens. Sometimes they might find an item, or an NPC or event, sometimes they might gain stats, (if I implement stats) or health,  but sometimes they might get a random attack. Say there might be goblins, wolves and orcs, the player would have a random chance of encountering each. And really, when that system is implemented, it's not much of a stretch to add more enemy types.</p>\n<p>I am assuming there are already combat libraries out there. I've never used a library, and don't fully understand what they are. Collections of preset attributes and such? I know how to make objects, I've recently started with attributes, and currently my combat menu is a menu printed from list options, which works. Anyway, enough rambling.</p>\n<p>Has anyone got a recommendation for up to date libraries, or, failing that, a way to implement this style of combat? The player should, ideally, not be in the 'room' with an enemy, but have them occur as events, with the combat screen, then the loot/victory screen, then they end up back at Home as this is the end of their 'adventure' for that turn, if it makes sense. Until they set out again. If there's anyone experienced out there, how hard would this be to implement for a mostly GUI user?</p>\n<p>Thanks for the help!</p>\n\n",
      "PostDate": "2017-05-28T12:43:50.6520924Z",
      "LastEditDate": null
    },
    {
      "PostId": "ddb700e5-2f00-40ca-8b8a-2625c0f34355",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "LIBRARY FILES:\r\n\r\nAlex and co made the quest software extremely powerful, as the quest engine itself is merely a bunch of library files, so if you're a good programmer, you can create your own engine for quest (you can completely change quest into something else entirely different, hehe). The default library files for the quest engine are: English.aslx and Core.aslx (though the Core.aslx is actually also a hub to the many individual 'core' library files, and I've not yet looked at the 'English.aslx' library file yet, so I don't know if it's also a hub to many individual files or not. You can see these library files in your actual installed quest folder that has the quest.exe, not your quest saved games folder, and you can open them up too and take a look at them, but DO BE WARNED, if you make changes to these files and save ... these ARE the quest files for it to run/work, so unless you know what you're doing... if you mess up these files, you're going to have to un-install quest and re-install it...)\r\n\r\na game file is just a bunch of code, and so is a library file, it's just a bunch of code, as a separate file from your game file (useful when you make big games, having separate files of code for the various aspects/parts/features of your game, for organization and sanity and by having them self-contained, it's easier to trouble-shoot them too if you got things not working correctly: organization:compartmentalization and programming:encapsulation).\r\n\r\na game is initialized (\"built-up\") from its added (included) library files (top to bottom) and then from its own game file's code. Because of this, depending on your library files, if they're dependent upon each other, then their order matters. Think of like cooking for example, if you do the cooking/mixing order/steps out of order, you're not going to create the delicious food you wanted. For an example, if you change the 'Core.aslx' to be above the 'English.aslx', you're going to have an error, and won't be able to play your game, until you change the 'English.aslx' back to being on top of the 'Core.aslx\"\r\n\r\nIf you ever worked with using/managing many mods for a a game, you should understand (dependant) library files (combatibilty issues). A library file is pretty much a 'patch/x-pac/mod/add-on' for your game (or they can be/have most of the content of your game too and/or an entirely new engine for your game).\r\n\r\nboth a game file and a library file use the same extension of: NAME_OF_FILE.aslx\r\n\r\nthe game file:\r\n\r\n(though it has other requirements too of course: a 'player' Player Object being inside of a Room Object, the 'game' Game Settings Object, and some other stuff: http://docs.textadventures.co.uk/quest/asl_requirements.html )\r\n\r\n```\r\n<asl version=\"###\"> // the hash symbols are replaced with numbers, for example, I still use an older version of quest: \"version=550\"\r\n  // mass of content/code\r\n</asl>\r\n```\r\n\r\na library file:\r\n\r\n```\r\n<library>\r\n  // mass of content/code\r\n</library>\r\n```\r\n\r\na library file is just like a game file, (most of) the same stuff you can have in the game file, you can have in a library file, for example, a library file can be as simple as having a single Object:\r\n\r\n```\r\n<library>\r\n  <object name=\"dragon\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n</library>\r\n```\r\n\r\nand let's say we named/saved this library file as: dragon_library_file.aslx\r\n\r\nand then to have this library file's contents added to your game file:\r\n\r\n```\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  \r\n  <include ref=\"dragon_library_file.aslx\" />\r\n\r\n  <game name=\"example\">\r\n    // blah Attributes\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nlastly, the library file(s) have to be in the same location as your game file, so that it/they can be found by quest for your being added to your game file\r\n\r\nthe above of using the 'dragon_library_file.aslx' added to your game file, is no different than if you had just put the 'dragon' Object into your game file yourself (a library file is just doing it for you instead of you doing it, lol. Either you add/write code directly into your game file, or use the GUI/Editor too of course, or you can add/write code into a library file, and then have the library file be added to your game file):\r\n\r\n```\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"example\">\r\n    // blah Attributes\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n  <object name=\"dragon\">\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n</asl>\r\n```\r\n\r\nso, really the only (main) difference with a library file, there's no GUI/Editor for you to use, you got to know how to do the code tag blocks.\r\n\r\n----------\r\n\r\nCOMBAT:\r\n\r\na combat system can be really complex or really simple, as it depends on what features you want of/from it and also on the design you want: popup menus or inline menus (hypertext links), being stuck in a combat turn battle, unable to do anything else in the game until the battle is over (win, lose, escape/retreat/flee, etc) or it being open/more game flowing, where you can do other stuff in the game (not stuck in a looping battle scripting block until the battle is over), like you choose to attack monster then you can choose to talk to an npc then choose to attack the monster again, if you want monsters to follow you if you try to run away to different rooms and/or seek you out, or not, if you want random chance encounters, or pre-located and either random or specific monsters, if you want item usage, magic and/or abilities/powers, being able to escape/flee/run-away, defending (and a cool feature from 7th Saga - SNES, is that after you defend a turn, if you then attack next round, you do double damage - which gives defend an actual reason to use it, as it now has a tactical use: do I just attack doing normal damage and take normal damage from mosnter, or do I defend and reduce damage done to me and also next round I do double damage), distance/movement (Grandia 1 for PS1 has one of the coolest combat system of all time) and/or weapon reach/range and/or weapon/attack speed, stealth and backstabbing bonus damage, and etc etc etc (if you played a lot of RPGs or whatever games with combat, you can be familiar with many different systems and features of combat)\r\n\r\n------\r\n\r\nthe main way of doing all of this cool stuff is having lists of things/items/stuff, which enables you to select one of them and/or for one to be randomly selected. This is done through the use of List and/or Dictionary Attributes, and iterating/cycling through them (mostly via: foreach). But, this is a bit more advanced stuff though...\r\n\r\n-----\r\n\r\nLIST/DICTONARY ATTRIBUTES:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk (my guide on lists/dictionaries)\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk (note that this is old and bad/poor code, as this was back when I was firsting learning how to do this, laughs)\r\n\r\nsee if these help at all, and please feel free to ask me about anything, I'd be glad to help you with whatever and/or explain the stuff (such as in the 'explore and travel code' link, which is on the stuff you're asking for/about)\r\n\r\n-------\r\n\r\nLastly, almost every guide/library file/code-example, is Pixie's, lol.\r\n\r\nPixie has a great combat library if you want to use it for your game and/or just study it and/or just get some ideas from it, though you do got to learn how to implement its stuff with your game if you want to use it for your game (aka how to use his Functions, and etc stuff in his combat library file with stuff in your game), which Pixie has guidance on it, as well as asking Pixie to help you with it.\r\n\r\nI also have a combat code post (which is based upon, and thus also there's, Pertex' Combat library, though his is a bit less noobie friendly than Pixie's), but my combat code is not that good (and has some errors in it and is old), so you're better off using Pixie's combat library. Though, you can take a look at my combat code, for possibly some ideas on things:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483 (my combat code)\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend for my combat code, as unfortunately, I used a lot of abrevs for my attributes/stats stuff... I've learned to never ever use abrevs again... also in my combat code, I got my physical damage:pd and physical resistance:pr switched up, another reason that I've never used abrevs ever since, lol)\r\n\r\nalso, I'd actually recommend you take a look at this link/file, as Pertex cleaned up my very bad/poor combat code (so this is better to look at than my raw messy/poor/bad combat code):\r\n\r\n(not sure if the link/file still works/exists or not... though)\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485 (might need to scroll up/down to Pertex' post with the file link in it)\r\n\r\n--------\r\n\r\nall of this stuff is advanced, so don't hesitate to ask about anything!",
      "EditableFormat": "markdown",
      "HTML": "<p>LIBRARY FILES:</p>\n<p>Alex and co made the quest software extremely powerful, as the quest engine itself is merely a bunch of library files, so if you're a good programmer, you can create your own engine for quest (you can completely change quest into something else entirely different, hehe). The default library files for the quest engine are: English.aslx and Core.aslx (though the Core.aslx is actually also a hub to the many individual 'core' library files, and I've not yet looked at the 'English.aslx' library file yet, so I don't know if it's also a hub to many individual files or not. You can see these library files in your actual installed quest folder that has the quest.exe, not your quest saved games folder, and you can open them up too and take a look at them, but DO BE WARNED, if you make changes to these files and save ... these ARE the quest files for it to run/work, so unless you know what you're doing... if you mess up these files, you're going to have to un-install quest and re-install it...)</p>\n<p>a game file is just a bunch of code, and so is a library file, it's just a bunch of code, as a separate file from your game file (useful when you make big games, having separate files of code for the various aspects/parts/features of your game, for organization and sanity and by having them self-contained, it's easier to trouble-shoot them too if you got things not working correctly: organization:compartmentalization and programming:encapsulation).</p>\n<p>a game is initialized (\"built-up\") from its added (included) library files (top to bottom) and then from its own game file's code. Because of this, depending on your library files, if they're dependent upon each other, then their order matters. Think of like cooking for example, if you do the cooking/mixing order/steps out of order, you're not going to create the delicious food you wanted. For an example, if you change the 'Core.aslx' to be above the 'English.aslx', you're going to have an error, and won't be able to play your game, until you change the 'English.aslx' back to being on top of the 'Core.aslx\"</p>\n<p>If you ever worked with using/managing many mods for a a game, you should understand (dependant) library files (combatibilty issues). A library file is pretty much a 'patch/x-pac/mod/add-on' for your game (or they can be/have most of the content of your game too and/or an entirely new engine for your game).</p>\n<p>both a game file and a library file use the same extension of: NAME_OF_FILE.aslx</p>\n<p>the game file:</p>\n<p>(though it has other requirements too of course: a 'player' Player Object being inside of a Room Object, the 'game' Game Settings Object, and some other stuff: http://docs.textadventures.co.uk/quest/asl_requirements.html )</p>\n<pre><code>&lt;asl version=\"###\"&gt; // the hash symbols are replaced with numbers, for example, I still use an older version of quest: \"version=550\"\n  // mass of content/code\n&lt;/asl&gt;\n</code></pre>\n<p>a library file:</p>\n<pre><code>&lt;library&gt;\n  // mass of content/code\n&lt;/library&gt;\n</code></pre>\n<p>a library file is just like a game file, (most of) the same stuff you can have in the game file, you can have in a library file, for example, a library file can be as simple as having a single Object:</p>\n<pre><code>&lt;library&gt;\n  &lt;object name=\"dragon\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/library&gt;\n</code></pre>\n<p>and let's say we named/saved this library file as: dragon_library_file.aslx</p>\n<p>and then to have this library file's contents added to your game file:</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  \n  &lt;include ref=\"dragon_library_file.aslx\" /&gt;\n\n  &lt;game name=\"example\"&gt;\n    // blah Attributes\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>lastly, the library file(s) have to be in the same location as your game file, so that it/they can be found by quest for your being added to your game file</p>\n<p>the above of using the 'dragon_library_file.aslx' added to your game file, is no different than if you had just put the 'dragon' Object into your game file yourself (a library file is just doing it for you instead of you doing it, lol. Either you add/write code directly into your game file, or use the GUI/Editor too of course, or you can add/write code into a library file, and then have the library file be added to your game file):</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"example\"&gt;\n    // blah Attributes\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"dragon\"&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<p>so, really the only (main) difference with a library file, there's no GUI/Editor for you to use, you got to know how to do the code tag blocks.</p>\n<hr>\n<p>COMBAT:</p>\n<p>a combat system can be really complex or really simple, as it depends on what features you want of/from it and also on the design you want: popup menus or inline menus (hypertext links), being stuck in a combat turn battle, unable to do anything else in the game until the battle is over (win, lose, escape/retreat/flee, etc) or it being open/more game flowing, where you can do other stuff in the game (not stuck in a looping battle scripting block until the battle is over), like you choose to attack monster then you can choose to talk to an npc then choose to attack the monster again, if you want monsters to follow you if you try to run away to different rooms and/or seek you out, or not, if you want random chance encounters, or pre-located and either random or specific monsters, if you want item usage, magic and/or abilities/powers, being able to escape/flee/run-away, defending (and a cool feature from 7th Saga - SNES, is that after you defend a turn, if you then attack next round, you do double damage - which gives defend an actual reason to use it, as it now has a tactical use: do I just attack doing normal damage and take normal damage from mosnter, or do I defend and reduce damage done to me and also next round I do double damage), distance/movement (Grandia 1 for PS1 has one of the coolest combat system of all time) and/or weapon reach/range and/or weapon/attack speed, stealth and backstabbing bonus damage, and etc etc etc (if you played a lot of RPGs or whatever games with combat, you can be familiar with many different systems and features of combat)</p>\n<hr>\n<p>the main way of doing all of this cool stuff is having lists of things/items/stuff, which enables you to select one of them and/or for one to be randomly selected. This is done through the use of List and/or Dictionary Attributes, and iterating/cycling through them (mostly via: foreach). But, this is a bit more advanced stuff though...</p>\n<hr>\n<p>LIST/DICTONARY ATTRIBUTES:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk (my guide on lists/dictionaries)</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk (note that this is old and bad/poor code, as this was back when I was firsting learning how to do this, laughs)</p>\n<p>see if these help at all, and please feel free to ask me about anything, I'd be glad to help you with whatever and/or explain the stuff (such as in the 'explore and travel code' link, which is on the stuff you're asking for/about)</p>\n<hr>\n<p>Lastly, almost every guide/library file/code-example, is Pixie's, lol.</p>\n<p>Pixie has a great combat library if you want to use it for your game and/or just study it and/or just get some ideas from it, though you do got to learn how to implement its stuff with your game if you want to use it for your game (aka how to use his Functions, and etc stuff in his combat library file with stuff in your game), which Pixie has guidance on it, as well as asking Pixie to help you with it.</p>\n<p>I also have a combat code post (which is based upon, and thus also there's, Pertex' Combat library, though his is a bit less noobie friendly than Pixie's), but my combat code is not that good (and has some errors in it and is old), so you're better off using Pixie's combat library. Though, you can take a look at my combat code, for possibly some ideas on things:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483 (my combat code)</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend for my combat code, as unfortunately, I used a lot of abrevs for my attributes/stats stuff... I've learned to never ever use abrevs again... also in my combat code, I got my physical damage:pd and physical resistance:pr switched up, another reason that I've never used abrevs ever since, lol)</p>\n<p>also, I'd actually recommend you take a look at this link/file, as Pertex cleaned up my very bad/poor combat code (so this is better to look at than my raw messy/poor/bad combat code):</p>\n<p>(not sure if the link/file still works/exists or not... though)</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485 (might need to scroll up/down to Pertex' post with the file link in it)</p>\n<hr>\n<p>all of this stuff is advanced, so don't hesitate to ask about anything!</p>\n\n",
      "PostDate": "2017-05-28T18:48:34.9153244Z",
      "LastEditDate": "2017-05-28T19:17:16.81349Z"
    },
    {
      "PostId": "37728006-35cd-45f5-80f2-757460a16600",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "or simple... (using UI)\r\nIn the room, create an object (your creature)\r\ninventory tab: uncheck Object can be taken\r\nVerb tab: Add verb \"hit\" (and other commands as well)\r\nselect your new verb (hit) change the gray box (did say print a message) change to Run a script.\r\n> if (GetRandomInt(1,20)>10) {\r\n  msg (\"You hit the dummy for {player.dam} points.\")\r\n}\r\nelse {\r\n  msg (\"Shamefull!!! You miss the stationary dummy!\")\r\n}\r\n>\r\nthen you just need a damage tracking system.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>or simple... (using UI)<br>\nIn the room, create an object (your creature)<br>\ninventory tab: uncheck Object can be taken<br>\nVerb tab: Add verb \"hit\" (and other commands as well)<br>\nselect your new verb (hit) change the gray box (did say print a message) change to Run a script.</p>\n<blockquote>\n<p>if (GetRandomInt(1,20)&gt;10) {<br>\nmsg (\"You hit the dummy for {player.dam} points.\")<br>\n}<br>\nelse {<br>\nmsg (\"Shamefull!!! You miss the stationary dummy!\")<br>\n}</p>\n</blockquote>\n<p>then you just need a damage tracking system.</p>\n\n",
      "PostDate": "2017-05-28T18:56:19.3702017Z",
      "LastEditDate": null
    },
    {
      "PostId": "6ccb2a76-ea20-491a-b558-5e5d127a9ccb",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Libraries are a way to extend Quest. In fact, Quest has a bunch of libraries already incorporated, adding functions and types, such as containers. A combat library would add new functions and new types, such as weapon and monster (and hopefully new tabs for the editor to support them).\r\n\r\nHere is my library and a tutorial that takes you through usng it. It is a pretty comprehensive system and may be more than you need.\r\nhttps://github.com/ThePix/quest/wiki/CombatLib\r\n\r\nThis tutorial is for a simpler system, without using a library (as that is not possible for the web version).\r\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version)\r\n\r\nThat said, neither do exactly what you want so would take some modification.\r\n\r\nI would suggest that as a first step you write down an example transcript (what the player would type, how the game would respond), to help you fix exactly how this would play out, before you start worrying about code. The big limitation in Quet (and all text adventures) is often the nature of parser, and it is good to sort that out on paper first.",
      "EditableFormat": "markdown",
      "HTML": "<p>Libraries are a way to extend Quest. In fact, Quest has a bunch of libraries already incorporated, adding functions and types, such as containers. A combat library would add new functions and new types, such as weapon and monster (and hopefully new tabs for the editor to support them).</p>\n<p>Here is my library and a tutorial that takes you through usng it. It is a pretty comprehensive system and may be more than you need.<br>\nhttps://github.com/ThePix/quest/wiki/CombatLib</p>\n<p>This tutorial is for a simpler system, without using a library (as that is not possible for the web version).<br>\nhttps://github.com/ThePix/quest/wiki/The-Zombie-Apocalypse-(on-the-web-version)</p>\n<p>That said, neither do exactly what you want so would take some modification.</p>\n<p>I would suggest that as a first step you write down an example transcript (what the player would type, how the game would respond), to help you fix exactly how this would play out, before you start worrying about code. The big limitation in Quet (and all text adventures) is often the nature of parser, and it is good to sort that out on paper first.</p>\n\n",
      "PostDate": "2017-05-28T20:44:15.0908425Z",
      "LastEditDate": null
    },
    {
      "PostId": "f826bb61-2f19-4b17-b570-d73cfe658864",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I got this working just using counters and randomizers and pages in Gamebook mode.\r\n\r\nSo if you go to the forest page you script in RandomChance of something happening, so there can be random events on any given page/room.  Sort of like:\r\n\r\nRandomChance 10%,\r\nthen this thing happens.\r\n\r\nElse if random chance 10%, \r\nthen this thing happens.\r\n\r\nElse this thing happens.\r\n\r\nAnd you can make as many or as few as you like with whatever chance you want.  So when it goes to the forest page, there's a 10% chance of thing A happening, if it fails that chance there's another 10% chance thing B happens, if it fails that, just the normal thing happens.\r\n\r\nIn combat, say you just have a link to attack called ATTACK!, you can do it much the same way.  Have the link go to alternating attack pages for that encounter (attack1, attack2, whatever you're calling it), with a random chance that you hit, or miss, or take damage yourself or whatever it is you want.  And based on what happens, just change the counters accordingly (your health, the monsters health, etc.)  And on the attack pages,  you have a 'if monster health =<0' and 'if player health =<0' that will take you to a victory page (or a death page if you die).\r\n\r\nif you're interested in how to exactly do that, let me know and I can put the code together for you.  but again, this is for Gamebook mode, and it looks like you're in text adventure mode, so someone else could perhaps translate it to TA mode from GB mode if my way seems like something you'd want to do.",
      "EditableFormat": "markdown",
      "HTML": "<p>I got this working just using counters and randomizers and pages in Gamebook mode.</p>\n<p>So if you go to the forest page you script in RandomChance of something happening, so there can be random events on any given page/room.  Sort of like:</p>\n<p>RandomChance 10%,<br>\nthen this thing happens.</p>\n<p>Else if random chance 10%,<br>\nthen this thing happens.</p>\n<p>Else this thing happens.</p>\n<p>And you can make as many or as few as you like with whatever chance you want.  So when it goes to the forest page, there's a 10% chance of thing A happening, if it fails that chance there's another 10% chance thing B happens, if it fails that, just the normal thing happens.</p>\n<p>In combat, say you just have a link to attack called ATTACK!, you can do it much the same way.  Have the link go to alternating attack pages for that encounter (attack1, attack2, whatever you're calling it), with a random chance that you hit, or miss, or take damage yourself or whatever it is you want.  And based on what happens, just change the counters accordingly (your health, the monsters health, etc.)  And on the attack pages,  you have a 'if monster health =&lt;0' and 'if player health =&lt;0' that will take you to a victory page (or a death page if you die).</p>\n<p>if you're interested in how to exactly do that, let me know and I can put the code together for you.  but again, this is for Gamebook mode, and it looks like you're in text adventure mode, so someone else could perhaps translate it to TA mode from GB mode if my way seems like something you'd want to do.</p>\n\n",
      "PostDate": "2017-05-28T22:44:35.5608085Z",
      "LastEditDate": "2017-05-28T22:44:57.418531Z"
    },
    {
      "PostId": "892b8344-3877-4941-8306-a290e46461d8",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "using the 'GetRandomInt' and 'RandomChance' together, let's you handle random stuff well:\r\n\r\nyou use a List Attribute with the GetRandomInt, for example, let's take a common feature of games: item-drop/treasure-chest-class\r\n\r\nyour List Attribute holds the selectable items (short_sword, long_sword, katana, claymore), and with the GetRandomInt, it selects one of those items, then, the RandomChance determines whether you actually get that selected item or not:\r\n\r\n```\r\n<object name=\"short_sword\">\r\n  <attr name=\"random_chance_integer_attribute\" type=\"int\">90</attr>\r\n</object>\r\n<object name=\"long_sword\">\r\n  <attr name=\"random_chance_integer_attribute\" type=\"int\">80</attr>\r\n</object>\r\n<object name=\"katana\">\r\n  <attr name=\"random_chance_integer_attribute\" type=\"int\">10</attr>\r\n</object>\r\n<object name=\"claymore\">\r\n  <attr name=\"random_chance_integer_attribute\" type=\"int\">10</attr>\r\n</object>\r\n\r\ngame.sword_drop_class_1_objectlist_attribute = NewObjectList ()\r\nlist add (game.sword_drop_class_1_objectlist_attribute, short_sword)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, long_sword)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, katana)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, claymore)\r\nindex_number_of_last_item_in_list_integer_variable = ListCount (game.sword_drop_class_1_objectlist_attribute) - 1\r\nrandom_integer_variable = GetRandomInt (0, index_number_of_last_item_in_list_integer_variable)\r\nrandomly_selected_item_object_variable = ObjectListItem (game.sword_drop_class_1_objectlist_attribute, random_integer_variable)\r\nif (RandomChance (randomly_selected_item_object_variable.random_chance_integer_attribute)) {\r\n  randomly_selected_item_object_variable.parent = player\r\n  msg (\"You got the \" + randomly_selected_item_object_variable.name)\r\n} else {\r\n  msg (\"Sorry, you didn't get a dropped item this time\")\r\n}\r\n\r\n// you can combine all of the functions too in one line if you prefer:\r\n\r\ngame.sword_drop_class_1_objectlist_attribute = NewObjectList ()\r\nlist add (game.sword_drop_class_1_objectlist_attribute, short_sword)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, long_sword)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, katana)\r\nlist add (game.sword_drop_class_1_objectlist_attribute, claymore)\r\nrandomly_selected_item_object_variable = ObjectListItem (game.sword_drop_class_1_objectlist_attribute, GetRandomInt (0, ListCount (game.sword_drop_class_1_objectlist_attribute) - 1))\r\nif (RandomChance (randomly_selected_item_object_variable.random_chance_integer_attribute)) {\r\n  randomly_selected_item_object_variable.parent = player\r\n  msg (\"You got the \" + randomly_selected_item_object_variable.name)\r\n} else {\r\n  msg (\"Sorry, you didn't get a dropped item this time\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>using the 'GetRandomInt' and 'RandomChance' together, let's you handle random stuff well:</p>\n<p>you use a List Attribute with the GetRandomInt, for example, let's take a common feature of games: item-drop/treasure-chest-class</p>\n<p>your List Attribute holds the selectable items (short_sword, long_sword, katana, claymore), and with the GetRandomInt, it selects one of those items, then, the RandomChance determines whether you actually get that selected item or not:</p>\n<pre><code>&lt;object name=\"short_sword\"&gt;\n  &lt;attr name=\"random_chance_integer_attribute\" type=\"int\"&gt;90&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"long_sword\"&gt;\n  &lt;attr name=\"random_chance_integer_attribute\" type=\"int\"&gt;80&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"katana\"&gt;\n  &lt;attr name=\"random_chance_integer_attribute\" type=\"int\"&gt;10&lt;/attr&gt;\n&lt;/object&gt;\n&lt;object name=\"claymore\"&gt;\n  &lt;attr name=\"random_chance_integer_attribute\" type=\"int\"&gt;10&lt;/attr&gt;\n&lt;/object&gt;\n\ngame.sword_drop_class_1_objectlist_attribute = NewObjectList ()\nlist add (game.sword_drop_class_1_objectlist_attribute, short_sword)\nlist add (game.sword_drop_class_1_objectlist_attribute, long_sword)\nlist add (game.sword_drop_class_1_objectlist_attribute, katana)\nlist add (game.sword_drop_class_1_objectlist_attribute, claymore)\nindex_number_of_last_item_in_list_integer_variable = ListCount (game.sword_drop_class_1_objectlist_attribute) - 1\nrandom_integer_variable = GetRandomInt (0, index_number_of_last_item_in_list_integer_variable)\nrandomly_selected_item_object_variable = ObjectListItem (game.sword_drop_class_1_objectlist_attribute, random_integer_variable)\nif (RandomChance (randomly_selected_item_object_variable.random_chance_integer_attribute)) {\n  randomly_selected_item_object_variable.parent = player\n  msg (\"You got the \" + randomly_selected_item_object_variable.name)\n} else {\n  msg (\"Sorry, you didn't get a dropped item this time\")\n}\n\n// you can combine all of the functions too in one line if you prefer:\n\ngame.sword_drop_class_1_objectlist_attribute = NewObjectList ()\nlist add (game.sword_drop_class_1_objectlist_attribute, short_sword)\nlist add (game.sword_drop_class_1_objectlist_attribute, long_sword)\nlist add (game.sword_drop_class_1_objectlist_attribute, katana)\nlist add (game.sword_drop_class_1_objectlist_attribute, claymore)\nrandomly_selected_item_object_variable = ObjectListItem (game.sword_drop_class_1_objectlist_attribute, GetRandomInt (0, ListCount (game.sword_drop_class_1_objectlist_attribute) - 1))\nif (RandomChance (randomly_selected_item_object_variable.random_chance_integer_attribute)) {\n  randomly_selected_item_object_variable.parent = player\n  msg (\"You got the \" + randomly_selected_item_object_variable.name)\n} else {\n  msg (\"Sorry, you didn't get a dropped item this time\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-05-28T23:13:00.2526052Z",
      "LastEditDate": "2017-05-28T23:19:20.5369092Z"
    }
  ]
}
