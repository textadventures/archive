{
  "Topic": {
    "TopicId": "ajju5ga33eojfmi0qk9xnw",
    "ForumId": "10",
    "Title": "Looping a script, but pausing for user input",
    "LastUpdated": "2017-01-15T13:10:08.9891306Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2960e6b1-7745-4385-9ce8-5f834f5f4977",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey all, I'm creating a simplified combat system that uses menus. I'd like for this script to loop repeatedly, but wait for the user to make a selection before running another iteration of the script.\r\n\r\nThe script is activated by a verb, which simply does...\r\n```\r\ndo (this, \"combat_script\")\r\n```\r\nThe script I currently have (an attribute on the creature that spawns), looks like this...\r\n\r\n```\r\nx = ToString (GetRandomInt(1, DictionaryCount(this.combat_library)))\r\nthis.runscript = ScriptDictionaryItem(this.combat_library, x)\r\ndo (this, \"runscript\")\r\ndo (this, \"combat_script\")\r\n```\r\nIt references a script library, which contains several scripts (with numerical indices, i.e. 1, 2, 3, etc...) An example of one of the scripts might be...\r\n```\r\nmsg (\"The \" + this.alias + \" is charging right at you!\")\r\nthis.combat_commands = NewStringList()\r\nlist add (this.combat_commands, \"Dodge Left\")\r\nlist add (this.combat_commands, \"Dodge Right\")\r\nlist add (this.combat_commands, \"Do Nothing\")\r\nShowMenu (\"Commands:\", this.combat_commands, true) {\r\n  if (result = \"Dodge Left\") {\r\n    // Dodge left result\r\n  }\r\n  if (result = \"Dodge Right\") {\r\n    // Dodge right result\r\n  }\r\n  if (result = \"Do Nothing\") {\r\n    // Do nothing result\r\n  }\r\n}\r\n```\r\nUnfortunately, if I put 'do (this, \"combat_script\")' at the end of the script, it causes and infinite loop, and quest crashes. If I put 'do (this, \"combat_script\")' inside one of the menu result scripts, it doesn't recognise what 'this' means. I can't reference a specific object in this case, because the attributes belong to a cloned object, and I don't know what the name will be. I also don't want to use a turn script, because I want the player to make a choice before running the script again.\r\n\r\nAny thoughts on how I could achieve this?\r\n\r\nEDIT: Ugh I thought I could avoid using 'this' inside a menu (which I'm having trouble getting to work) but I don't think I can.\r\n\r\nThe combat system I'm planning has a set of random mini-scenarios, which the player can react to. Some of the actions in some of these scenarios need to carry over into other scenarios. For example, one script might result in the player breaking an enemy's shield. Once their shield is broken, other scripts inside the script library need to be able to recognise that this.shield_broken = True.\r\n\r\nIn other words, I can't really avoid using 'this' inside a menu for the system I have planned.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey all, I'm creating a simplified combat system that uses menus. I'd like for this script to loop repeatedly, but wait for the user to make a selection before running another iteration of the script.</p>\n<p>The script is activated by a verb, which simply does...</p>\n<pre><code>do (this, \"combat_script\")\n</code></pre>\n<p>The script I currently have (an attribute on the creature that spawns), looks like this...</p>\n<pre><code>x = ToString (GetRandomInt(1, DictionaryCount(this.combat_library)))\nthis.runscript = ScriptDictionaryItem(this.combat_library, x)\ndo (this, \"runscript\")\ndo (this, \"combat_script\")\n</code></pre>\n<p>It references a script library, which contains several scripts (with numerical indices, i.e. 1, 2, 3, etc...) An example of one of the scripts might be...</p>\n<pre><code>msg (\"The \" + this.alias + \" is charging right at you!\")\nthis.combat_commands = NewStringList()\nlist add (this.combat_commands, \"Dodge Left\")\nlist add (this.combat_commands, \"Dodge Right\")\nlist add (this.combat_commands, \"Do Nothing\")\nShowMenu (\"Commands:\", this.combat_commands, true) {\n  if (result = \"Dodge Left\") {\n    // Dodge left result\n  }\n  if (result = \"Dodge Right\") {\n    // Dodge right result\n  }\n  if (result = \"Do Nothing\") {\n    // Do nothing result\n  }\n}\n</code></pre>\n<p>Unfortunately, if I put 'do (this, \"combat_script\")' at the end of the script, it causes and infinite loop, and quest crashes. If I put 'do (this, \"combat_script\")' inside one of the menu result scripts, it doesn't recognise what 'this' means. I can't reference a specific object in this case, because the attributes belong to a cloned object, and I don't know what the name will be. I also don't want to use a turn script, because I want the player to make a choice before running the script again.</p>\n<p>Any thoughts on how I could achieve this?</p>\n<p>EDIT: Ugh I thought I could avoid using 'this' inside a menu (which I'm having trouble getting to work) but I don't think I can.</p>\n<p>The combat system I'm planning has a set of random mini-scenarios, which the player can react to. Some of the actions in some of these scenarios need to carry over into other scenarios. For example, one script might result in the player breaking an enemy's shield. Once their shield is broken, other scripts inside the script library need to be able to recognise that this.shield_broken = True.</p>\n<p>In other words, I can't really avoid using 'this' inside a menu for the system I have planned.</p>\n\n",
      "PostDate": "2017-01-15T13:10:08.9891306Z",
      "LastEditDate": "2017-01-15T13:41:26.3000847Z"
    },
    {
      "PostId": "0b081f1f-2b95-4f57-b8a4-f512e785d93a",
      "UserId": 168877,
      "Username": "TinFoilMkIV",
      "AvatarUrl": "http://i.imgur.com/j34jdCvb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I believe this is what you're looking for http://docs.textadventures.co.uk/quest/scripts/on_ready.html\r\n\r\nOtherwise you might try storing the local object 'this' inside another attribute, it may get around 'this' no longer existing within the scope of the menu. Not actually sure that would work but that would be my first guess.\r\n\r\nAfter testing I could not store 'this' in a local variable inside the script but you can save it to another static object ie: 'game.this = this' then use 'game.this' to reference your object inside the menu\r\n\r\nAlso I'd have to ask what is the function of the randomize combat library scripts? If you're pulling encounter specific data at that point you could probably go all the way an make the encounter always use the same object but change it's attributes each time in which case you'd no longer need to reference it with 'this'.",
      "EditableFormat": "markdown",
      "HTML": "<p>I believe this is what you're looking for http://docs.textadventures.co.uk/quest/scripts/on_ready.html</p>\n<p>Otherwise you might try storing the local object 'this' inside another attribute, it may get around 'this' no longer existing within the scope of the menu. Not actually sure that would work but that would be my first guess.</p>\n<p>After testing I could not store 'this' in a local variable inside the script but you can save it to another static object ie: 'game.this = this' then use 'game.this' to reference your object inside the menu</p>\n<p>Also I'd have to ask what is the function of the randomize combat library scripts? If you're pulling encounter specific data at that point you could probably go all the way an make the encounter always use the same object but change it's attributes each time in which case you'd no longer need to reference it with 'this'.</p>\n\n",
      "PostDate": "2017-01-15T13:47:35.9038667Z",
      "LastEditDate": "2017-01-15T14:01:27.4574006Z"
    },
    {
      "PostId": "5af06fa9-1a0d-4661-9305-56e4cc62b31b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"Unfortunately, if I put 'do (this, \"combat_script\")' at the end of the script, it causes and infinite loop, and quest crashes (scrim)\"\r\n\r\n---------\r\n\r\nyou need a way to stop/end/terminate a loop, so it's not infinite/endless.\r\n\r\na simple way in general would be to use a 'if (BOOLEAN or STRING)' checking, for an example:\r\n\r\n```\r\n<verb>\r\n  <property>fight</property>\r\n  <pattern>fight</pattern>\r\n  <defaultexpression>You can't fight that!</defaultexpression>\r\n</verb>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"life\" type=\"int\">999</attr>\r\n  <attr name=\"damage\" type=\"int\">50</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"life\" type=\"int\">500</attr>\r\n  <attr name=\"damage\" type=\"int\">25</attr>\r\n  <attr name=\"dead\" type=\"boolean\">false</attr>\r\n  <attr name=\"displayverbs\" type=\"listextend\">fight</attr>\r\n  <attr name=\"fight\" type=\"script\"><![CDATA[\r\n    if (orc.dead) {\r\n      msg (\"The orc is already dead, silly.\")\r\n    } else {\r\n      orc.life = orc.life - player.damage\r\n      msg (\"You attack the orc for \" + player.damage + \" damage, leaving it with only \" + orc.life + \" life left.\")\r\n      if (orc.life < 1) {\r\n        orc.dead = true\r\n        msg (\"Your attack fatally wounded the orc, killing it dead.\")\r\n      } else {\r\n        player.life = player.life - orc.damage\r\n        msg (\"The orc attacks you for \" + orc.damage + \" damage, leaving you with only \" + player.life + \" life left.\")\r\n        if (player.life < 1) {\r\n          msg (\"The orc fatally wounded you, killing you dead.\")\r\n          msg (\"GAME OVER\")\r\n          finish\r\n        } else {\r\n          do (orc, \"fight\") // or: invoke (orc.fight)\r\n          // this loops/iterates/does the fight over and over until the orc dies or you die\r\n        }\r\n      }\r\n    }\r\n ]]></attr>\r\n</object>\r\n```\r\n\r\n------------\r\n\r\nalso, this combat code of mine (using Pertex' combat code design and his/her help too) is old and poor (this was when I was first learning to code combat), but hopefully you can understand it and get some ideas from it that you can use to help yourself with combat:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend --- be warned, I got my elemental damage/defense/resistances accidentally mixed up wrongly a bit in my code --- I've learned since to NEVER use abrevs ever again, lol)\r\n\r\n----------\r\n\r\nI think it would make things much easier for you, if you used Functions, as you can use Parameters and have a return type, so, you can still use your Command if you need to, but then use/have (create) Functions (with your needed combat scripting in them) for your Command's scripting (via the 'call function' Script). You can use Objects and their Script Attributes too, but then you got to learn how to use Delegates, in order to be able to use Parameters and have a return type with them.  Easier to just use Functions instead for now.",
      "EditableFormat": "markdown",
      "HTML": "<p>\"Unfortunately, if I put 'do (this, \"combat_script\")' at the end of the script, it causes and infinite loop, and quest crashes (scrim)\"</p>\n<hr>\n<p>you need a way to stop/end/terminate a loop, so it's not infinite/endless.</p>\n<p>a simple way in general would be to use a 'if (BOOLEAN or STRING)' checking, for an example:</p>\n<pre><code>&lt;verb&gt;\n  &lt;property&gt;fight&lt;/property&gt;\n  &lt;pattern&gt;fight&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't fight that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"life\" type=\"int\"&gt;999&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;50&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"life\" type=\"int\"&gt;500&lt;/attr&gt;\n  &lt;attr name=\"damage\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;attr name=\"dead\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"displayverbs\" type=\"listextend\"&gt;fight&lt;/attr&gt;\n  &lt;attr name=\"fight\" type=\"script\"&gt;&lt;![CDATA[\n    if (orc.dead) {\n      msg (\"The orc is already dead, silly.\")\n    } else {\n      orc.life = orc.life - player.damage\n      msg (\"You attack the orc for \" + player.damage + \" damage, leaving it with only \" + orc.life + \" life left.\")\n      if (orc.life &lt; 1) {\n        orc.dead = true\n        msg (\"Your attack fatally wounded the orc, killing it dead.\")\n      } else {\n        player.life = player.life - orc.damage\n        msg (\"The orc attacks you for \" + orc.damage + \" damage, leaving you with only \" + player.life + \" life left.\")\n        if (player.life &lt; 1) {\n          msg (\"The orc fatally wounded you, killing you dead.\")\n          msg (\"GAME OVER\")\n          finish\n        } else {\n          do (orc, \"fight\") // or: invoke (orc.fight)\n          // this loops/iterates/does the fight over and over until the orc dies or you die\n        }\n      }\n    }\n ]]&gt;&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>also, this combat code of mine (using Pertex' combat code design and his/her help too) is old and poor (this was when I was first learning to code combat), but hopefully you can understand it and get some ideas from it that you can use to help yourself with combat:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483<br>\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486 (key/legend --- be warned, I got my elemental damage/defense/resistances accidentally mixed up wrongly a bit in my code --- I've learned since to NEVER use abrevs ever again, lol)</p>\n<hr>\n<p>I think it would make things much easier for you, if you used Functions, as you can use Parameters and have a return type, so, you can still use your Command if you need to, but then use/have (create) Functions (with your needed combat scripting in them) for your Command's scripting (via the 'call function' Script). You can use Objects and their Script Attributes too, but then you got to learn how to use Delegates, in order to be able to use Parameters and have a return type with them.  Easier to just use Functions instead for now.</p>\n\n",
      "PostDate": "2017-01-15T22:34:14.0196145Z",
      "LastEditDate": "2017-01-15T22:47:09.4364108Z"
    },
    {
      "PostId": "a6d6a613-ee93-488b-b0b1-0cec52f267ab",
      "UserId": 283832,
      "Username": "scrimshaw04",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8d126990ac9c6b79315d4db221bf6ef7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys. I've been having some computer troubles, so I'm only looking at this code now.\r\n\r\nI've attempted the boolean method, but I haven't been able to get it to work now. Now I'm giving the 'on ready' method a try and... It doesn't seem to work! Everything inside the on ready brackets runs anyway, without waiting for input. I'm not sure why... Any ideas?\r\n\r\nEDIT: Damnit. I can get on ready to work, but only when it's at the same level as the menu. Meaning that it doesn't recognise 'this' any more. This is incredibly annoying!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys. I've been having some computer troubles, so I'm only looking at this code now.</p>\n<p>I've attempted the boolean method, but I haven't been able to get it to work now. Now I'm giving the 'on ready' method a try and... It doesn't seem to work! Everything inside the on ready brackets runs anyway, without waiting for input. I'm not sure why... Any ideas?</p>\n<p>EDIT: Damnit. I can get on ready to work, but only when it's at the same level as the menu. Meaning that it doesn't recognise 'this' any more. This is incredibly annoying!</p>\n\n",
      "PostDate": "2017-01-18T12:46:25.3423048Z",
      "LastEditDate": "2017-01-18T12:56:15.9302592Z"
    },
    {
      "PostId": "6513320d-102c-40df-9aa0-1bebc18c0652",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "your desired action scripting (scripts) needs to be within an 'if' block (there's 4 types of 'if' blocks: if, if-else, if-else if, if-else if-else), for example:\r\n\r\n```\r\nif (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if TRUE\r\n  // your desired action scripts\r\n}\r\n// implied: if FALSE: nothing happens (no scripts are done, as no scripts exist because we're only testing if the Boolean Attribute = 'true')\r\n\r\n------\r\n\r\nif (not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if FALSE\r\n  // your desired action scripts\r\n}\r\n// implied: if TRUE: nothing happens (no scripts are done, as no scripts exist because we're only testing if the Boolean Attribute = 'false')\r\n\r\n-----\r\n\r\nif (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here and below)\r\n}\r\nelse { // if FALSE\r\n  // your desired action scripts here, or... (blah scripts here and above)\r\n}\r\n\r\n-----\r\n\r\nif (not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if FALSE\r\n  // your desired action scripts here, or... (blah scripts here and below)\r\n}\r\nelse { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here and above)\r\n}\r\n\r\n---\r\n\r\nthe 'not' (negation: opposite) operation/operator can be used for the below examples with String Attributes, but not showing/explaning all of these combinations --- too much work, lol)\r\n\r\n----\r\n\r\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE\") { // if TRUE\r\n  // your desired action scripts\r\n}\r\n\r\n----\r\n\r\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE\") { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here and below)\r\n}\r\nelse { // if FALSE\r\n  // your desired action scripts here, or... (blah scripts here and above)\r\n}\r\n\r\n----\r\n\r\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_1\") { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here and below)\r\n}\r\nelse if (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_2\") { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here and above)\r\n}\r\n// optionally, more 'else ifs', as you need/want\r\n\r\n-----\r\n\r\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_1\") { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here)\r\n}\r\nelse if (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_2\") { // if TRUE\r\n  // your desired action scripts here, or... (blah scripts here)\r\n}\r\n// optionally, more 'else ifs', as you need/want\r\nelse { // if FALSE\r\n  // your desired action scripts here, or... (blah scripts here)\r\n}\r\n```\r\n\r\n-----------\r\n\r\nP.S.\r\n\r\nin the GUI/Editor, it is very frustrating in trying to figure out which 'add new script' circle button you click on for the correct nesting/indenting layer/level of scripting (one of the reasons, I learned quickly to code with quest, lol), and nesting/indenting is extremely important, as it is the 'order of operations' of your scripting, and a wrong order can even cause an error. Scripting in the GUI/Editor is a bit clunky... but the worst is when you have to delete a part of your scripting... so easy to lose all that hard work in scripting (if you got a massive scripting block), if not careful, lol",
      "EditableFormat": "markdown",
      "HTML": "<p>your desired action scripting (scripts) needs to be within an 'if' block (there's 4 types of 'if' blocks: if, if-else, if-else if, if-else if-else), for example:</p>\n<pre><code>if (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if TRUE\n  // your desired action scripts\n}\n// implied: if FALSE: nothing happens (no scripts are done, as no scripts exist because we're only testing if the Boolean Attribute = 'true')\n\n------\n\nif (not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if FALSE\n  // your desired action scripts\n}\n// implied: if TRUE: nothing happens (no scripts are done, as no scripts exist because we're only testing if the Boolean Attribute = 'false')\n\n-----\n\nif (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if TRUE\n  // your desired action scripts here, or... (blah scripts here and below)\n}\nelse { // if FALSE\n  // your desired action scripts here, or... (blah scripts here and above)\n}\n\n-----\n\nif (not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE) { // if FALSE\n  // your desired action scripts here, or... (blah scripts here and below)\n}\nelse { // if TRUE\n  // your desired action scripts here, or... (blah scripts here and above)\n}\n\n---\n\nthe 'not' (negation: opposite) operation/operator can be used for the below examples with String Attributes, but not showing/explaning all of these combinations --- too much work, lol)\n\n----\n\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE\") { // if TRUE\n  // your desired action scripts\n}\n\n----\n\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE\") { // if TRUE\n  // your desired action scripts here, or... (blah scripts here and below)\n}\nelse { // if FALSE\n  // your desired action scripts here, or... (blah scripts here and above)\n}\n\n----\n\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_1\") { // if TRUE\n  // your desired action scripts here, or... (blah scripts here and below)\n}\nelse if (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_2\") { // if TRUE\n  // your desired action scripts here, or... (blah scripts here and above)\n}\n// optionally, more 'else ifs', as you need/want\n\n-----\n\nif (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_1\") { // if TRUE\n  // your desired action scripts here, or... (blah scripts here)\n}\nelse if (NAME_OF_OBJECT.NAME_OF_STRING_ATTRIBUTE = \"VALUE_2\") { // if TRUE\n  // your desired action scripts here, or... (blah scripts here)\n}\n// optionally, more 'else ifs', as you need/want\nelse { // if FALSE\n  // your desired action scripts here, or... (blah scripts here)\n}\n</code></pre>\n<hr>\n<p>P.S.</p>\n<p>in the GUI/Editor, it is very frustrating in trying to figure out which 'add new script' circle button you click on for the correct nesting/indenting layer/level of scripting (one of the reasons, I learned quickly to code with quest, lol), and nesting/indenting is extremely important, as it is the 'order of operations' of your scripting, and a wrong order can even cause an error. Scripting in the GUI/Editor is a bit clunky... but the worst is when you have to delete a part of your scripting... so easy to lose all that hard work in scripting (if you got a massive scripting block), if not careful, lol</p>\n\n",
      "PostDate": "2017-01-18T17:24:57.7243845Z",
      "LastEditDate": "2017-01-18T17:39:30.3992419Z"
    }
  ]
}
