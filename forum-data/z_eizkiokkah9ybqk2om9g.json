{
  "Topic": {
    "TopicId": "z_eizkiokkah9ybqk2om9g",
    "ForumId": "15",
    "Title": "Q6/JS - Building a new conversation system",
    "LastUpdated": "2021-04-20T18:12:13.1450626Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "af22f4ec-6638-471e-b15c-6ebf8537ee78",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<b>UPDATE:</b> Based on a reference I found to \"array intersections\" (not a term I was familiar with), I changed my dialogue array population function. It now properly lists all the correct options in the menu, but they still don't do anything, and I still don't get an error. The bug hunt continues...\r\n\r\n(Topic Post)\r\nAt the moment, I am almost finished with \"Phase 1\" of my design plans for a new conversation system. \"Phase 2\" involves a choice of design implementation and will \"makes things prettier\" (for now, the menu choices look like code listings, and there are some w.objects that could use replacing with variables), but I want to get the core of it working right, before I make changes.\r\n\r\nI've finally got rid of all the errors, but it looks like <code>showMenuWithNumbers</code> is not recognizing my selection;\r\nit always just cancels out with the final <code>else</code> option. I do have a line that clears out the dialogue array, but that should only happen after the menu is done (in theory). I fear the problem is that I am trying to pass a pre-built array, instead of listing the items in the array, as is shown in the samples. This would put a rather big wrench into my gears, as the strings in the array will (eventually) be long strings that I'm trying to keep out of the menu call.\r\n(EDIT: I've already realized, neither of those things could be the problem, because it they were, the one choice that does appear in the menu would also not be present. So, I actually have no idea what's wrong.)\r\n In other words, instead of doing this:\r\n```\r\nshowMenuWithNumbers('Pick a color', ['Blue', 'Red', 'Yellow'], function(result)\r\n```\r\nI am (effectively) trying to do this:\r\n```\r\nlet colorList =  ['the kind of blue that reminds you of the summer skies of your youth',\r\n  'a Red that express a passionate heart',\r\n  'that deep forest green that calls you to adventure']\r\n\r\nshowMenuWithNumbers('Pick a color', colorList, function(result)\r\n```\r\nIf that's not the problem, than I'm not sure why it isn't working.\r\nSo far, what I have is this:\r\n<details><summary>Details (click me for code):</br>\r\nIn code.js, I have a custom function that takes in the name of the NPC calling the function, cross-references an array of \"things the player is curious about\" with an array of \"things this NPC knows about,\" funnels any matches into an array that is intended to become \"choices in a dialogue menu,\" then tacks on any subjects the NPC knows about that are common enough to always be choices (even if the player isn't specifically curious about them), and finally pushes on a cancel choice.\r\n</br></br>\r\nIn data.js, I have the starting \"curious\" and \"dialogue\" array attributes set up for the player, and in the Mira NPC object I have a call for the new function followed by the showMenuWithNumbers that tries to use my dialogue array. I also have a kiss cmd set for for Mira, which should add a new string to the curious array. In theory, this should result in:</br>\r\none topic shared by me.curious and Mira.knows (should be in menu, but is not),</br>\r\none topic in me.curious that is not in Mira.knows (should not be in menu, and is not),</br>\r\none topic in Mira.common (should be in menu, and is), and</br>\r\none topic in Mira.knows that gets added to me.curious  (should appear in menu after trying to kiss Mira, but does not)</br>\r\n(the kiss cmd seems to be working fine for itself)</summary>\r\n\r\n```\r\nupdated code in code.js:\r\nconst getDialogue = function(character) {\r\n  let i;\r\n  for (i of w.me.curious) {\r\n    if (character.knows.includes[i]) {\r\n      w.me.dialogue.push(i);\r\n      }\r\n    }\r\n  let n;\r\n  for (n of character.common) {\r\n    w.me.dialogue.push(n);\r\n  }\r\n  w.me.dialogue.push(\"Cancel\")\r\n}\r\n\r\nin data.js:\r\ncreateItem(\"me\", PLAYER(), {\r\n  loc:\"belvedere\",\r\n  regex:/^(me|myself|player)$/,\r\n  examine: \"Just a regular guy.\",\r\n  hitpoints:100,\r\n  curious:[\"castle\", \"farTown\"],\r\n  dialogue:[],\r\n})\r\n\r\ncreateItem(\"Mira\", NPC(true), {\r\n  loc:\"belvedere\",\r\n  examine:\"The new Queen is still quite young, but you recognize a wisdom forged in loss, behind her eyes.\",\r\n  knows:[\"kiss\", \"castle\"],\r\n  common:[\"highReign\"],\r\n  talkto:function() {\r\n    getDialogue(w.Mira);\r\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\r\n      if (result === \"kiss\") {\r\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\r\n      }\r\n      else if (result === \"castle\") {\r\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\r\n      }\r\n      else if (result === \"highReign\") {\r\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...</br>Well, we have a lot of work to do before we can start talking politics.\");\r\n      }\r\n      else {\r\n        msg(\"Never mind.\");\r\n      }\r\n    })\r\n    w.me.dialogue.splice(0, w.me.dialogue.length);\r\n  },\r\n  kiss:function() {\r\n    msg(\"Mira interupts your attempt with a firm <i><b>SLAP!</b></i>\");\r\n    msg(\"<b>Mira:</b> Knock it off, tunahead!\");\r\n    wait(2);\r\n    msg(\"<b>Sylphia:</b> I'll kiss you!\");\r\n    msg(\"<b>Tye:</b> ...\");\r\n    wait(2);\r\n    msg(\"Sylphia crosses her arms and pouts.\");\r\n    msg(\"<b>Sylphia:</b> Hmph!\");\r\n    if (!w.me.curious.includes[\"kiss\"]) {\r\n      w.me.curious.unshift(\"kiss\");\r\n    }\r\n  }\r\n```\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p><b>UPDATE:</b> Based on a reference I found to \"array intersections\" (not a term I was familiar with), I changed my dialogue array population function. It now properly lists all the correct options in the menu, but they still don't do anything, and I still don't get an error. The bug hunt continues...</p>\n<p>(Topic Post)<br>\nAt the moment, I am almost finished with \"Phase 1\" of my design plans for a new conversation system. \"Phase 2\" involves a choice of design implementation and will \"makes things prettier\" (for now, the menu choices look like code listings, and there are some w.objects that could use replacing with variables), but I want to get the core of it working right, before I make changes.</p>\n<p>I've finally got rid of all the errors, but it looks like <code>showMenuWithNumbers</code> is not recognizing my selection;<br>\nit always just cancels out with the final <code>else</code> option. I do have a line that clears out the dialogue array, but that should only happen after the menu is done (in theory). I fear the problem is that I am trying to pass a pre-built array, instead of listing the items in the array, as is shown in the samples. This would put a rather big wrench into my gears, as the strings in the array will (eventually) be long strings that I'm trying to keep out of the menu call.<br>\n(EDIT: I've already realized, neither of those things could be the problem, because it they were, the one choice that does appear in the menu would also not be present. So, I actually have no idea what's wrong.)<br>\nIn other words, instead of doing this:</p>\n<pre><code>showMenuWithNumbers('Pick a color', ['Blue', 'Red', 'Yellow'], function(result)\n</code></pre>\n<p>I am (effectively) trying to do this:</p>\n<pre><code>let colorList =  ['the kind of blue that reminds you of the summer skies of your youth',\n  'a Red that express a passionate heart',\n  'that deep forest green that calls you to adventure']\n\nshowMenuWithNumbers('Pick a color', colorList, function(result)\n</code></pre>\n<p>If that's not the problem, than I'm not sure why it isn't working.<br>\nSo far, what I have is this:</p>\n<details><summary>Details (click me for code):<br>\nIn code.js, I have a custom function that takes in the name of the NPC calling the function, cross-references an array of \"things the player is curious about\" with an array of \"things this NPC knows about,\" funnels any matches into an array that is intended to become \"choices in a dialogue menu,\" then tacks on any subjects the NPC knows about that are common enough to always be choices (even if the player isn't specifically curious about them), and finally pushes on a cancel choice.\n<br><br>\nIn data.js, I have the starting \"curious\" and \"dialogue\" array attributes set up for the player, and in the Mira NPC object I have a call for the new function followed by the showMenuWithNumbers that tries to use my dialogue array. I also have a kiss cmd set for for Mira, which should add a new string to the curious array. In theory, this should result in:<br>\none topic shared by me.curious and Mira.knows (should be in menu, but is not),<br>\none topic in me.curious that is not in Mira.knows (should not be in menu, and is not),<br>\none topic in Mira.common (should be in menu, and is), and<br>\none topic in Mira.knows that gets added to me.curious  (should appear in menu after trying to kiss Mira, but does not)<br>\n(the kiss cmd seems to be working fine for itself)</summary>\n<pre><code>updated code in code.js:\nconst getDialogue = function(character) {\n  let i;\n  for (i of w.me.curious) {\n    if (character.knows.includes[i]) {\n      w.me.dialogue.push(i);\n      }\n    }\n  let n;\n  for (n of character.common) {\n    w.me.dialogue.push(n);\n  }\n  w.me.dialogue.push(\"Cancel\")\n}\n\nin data.js:\ncreateItem(\"me\", PLAYER(), {\n  loc:\"belvedere\",\n  regex:/^(me|myself|player)$/,\n  examine: \"Just a regular guy.\",\n  hitpoints:100,\n  curious:[\"castle\", \"farTown\"],\n  dialogue:[],\n})\n\ncreateItem(\"Mira\", NPC(true), {\n  loc:\"belvedere\",\n  examine:\"The new Queen is still quite young, but you recognize a wisdom forged in loss, behind her eyes.\",\n  knows:[\"kiss\", \"castle\"],\n  common:[\"highReign\"],\n  talkto:function() {\n    getDialogue(w.Mira);\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\n      if (result === \"kiss\") {\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\n      }\n      else if (result === \"castle\") {\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\n      }\n      else if (result === \"highReign\") {\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...&lt;/br&gt;Well, we have a lot of work to do before we can start talking politics.\");\n      }\n      else {\n        msg(\"Never mind.\");\n      }\n    })\n    w.me.dialogue.splice(0, w.me.dialogue.length);\n  },\n  kiss:function() {\n    msg(\"Mira interupts your attempt with a firm &lt;i&gt;&lt;b&gt;SLAP!&lt;/b&gt;&lt;/i&gt;\");\n    msg(\"&lt;b&gt;Mira:&lt;/b&gt; Knock it off, tunahead!\");\n    wait(2);\n    msg(\"&lt;b&gt;Sylphia:&lt;/b&gt; I'll kiss you!\");\n    msg(\"&lt;b&gt;Tye:&lt;/b&gt; ...\");\n    wait(2);\n    msg(\"Sylphia crosses her arms and pouts.\");\n    msg(\"&lt;b&gt;Sylphia:&lt;/b&gt; Hmph!\");\n    if (!w.me.curious.includes[\"kiss\"]) {\n      w.me.curious.unshift(\"kiss\");\n    }\n  }\n</code></pre>\n</details>\n\n",
      "PostDate": "2021-04-20T18:12:13.1450626Z",
      "LastEditDate": "2021-04-20T20:18:44.5620534Z",
      "link": null
    },
    {
      "PostId": "cfc1141e-5d7f-4496-8e1a-4eb39a2e3dca",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is your offending line of code:\r\n\r\n```\r\nw.me.dialogue.splice(0, w.me.dialogue.length);\r\n```\r\n\r\n---\r\nWith that line in its current position (outside of the showMenu code block), ```result``` is undefined when the show menu function's function runs.  That is because it is outside of the proper code block, which means it executes sooner than you want it to in this scenario.\r\n\r\nTry it like this:\r\n\r\n```\r\n  talkto:function() {\r\n    getDialogue(w.Mira);\r\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\r\n      if (result === \"kiss\") {\r\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\r\n      }\r\n      else if (result === \"castle\") {\r\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\r\n      }\r\n      else if (result === \"highReign\") {\r\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...<br/>Well, we have a lot of work to do before we can start talking politics.\");\r\n      }\r\n      else {\r\n        msg(\"Never mind.\");\r\n      }\r\n      w.me.dialogue.splice(0, w.me.dialogue.length); // Moved here by KV\r\n    })\r\n    //w.me.dialogue.splice(0, w.me.dialogue.length); // Commented out by KV\r\n  },\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is your offending line of code:</p>\n<pre><code>w.me.dialogue.splice(0, w.me.dialogue.length);\n</code></pre>\n<hr>\n<p>With that line in its current position (outside of the showMenu code block), <code>result</code> is undefined when the show menu function's function runs.  That is because it is outside of the proper code block, which means it executes sooner than you want it to in this scenario.</p>\n<p>Try it like this:</p>\n<pre><code>  talkto:function() {\n    getDialogue(w.Mira);\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\n      if (result === \"kiss\") {\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\n      }\n      else if (result === \"castle\") {\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\n      }\n      else if (result === \"highReign\") {\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...&lt;br/&gt;Well, we have a lot of work to do before we can start talking politics.\");\n      }\n      else {\n        msg(\"Never mind.\");\n      }\n      w.me.dialogue.splice(0, w.me.dialogue.length); // Moved here by KV\n    })\n    //w.me.dialogue.splice(0, w.me.dialogue.length); // Commented out by KV\n  },\n</code></pre>\n\n",
      "PostDate": "2021-04-20T23:17:21.6347155Z",
      "LastEditDate": "2021-04-20T23:41:43.7403313Z",
      "link": null
    },
    {
      "PostId": "8c3476b7-acf9-4510-b416-ca4c91c8c813",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PS\r\n\r\nI edited the above code within 2 minutes after I posted it.  So, if you were watching for a response and immediately copied and pasted, note that I originally omitted the 2nd line (```getDialogue(w.Mira);```). It is fixed now, though.\r\n\r\nAlso, I just saw this part of your post:\r\n>  I do have a line that clears out the dialogue array, but that should only happen after the menu is done (in theory).\r\n\r\nYou almost had it figured out.\r\n\r\n---\r\nAlso also, something about the way you posted your code using ```<details>``` isn't quite right.  I had to view this page's source code to see your code to edit it.  Therefore, I believe that's why the ```&lt;/br&gt;``` is in my \"copy\" of your code.\r\n\r\nIt should be ```<br/>```. I just fixed that in my above code sample, too.",
      "EditableFormat": "markdown",
      "HTML": "<p>PS</p>\n<p>I edited the above code within 2 minutes after I posted it.  So, if you were watching for a response and immediately copied and pasted, note that I originally omitted the 2nd line (<code>getDialogue(w.Mira);</code>). It is fixed now, though.</p>\n<p>Also, I just saw this part of your post:</p>\n<blockquote>\n<p>I do have a line that clears out the dialogue array, but that should only happen after the menu is done (in theory).</p>\n</blockquote>\n<p>You almost had it figured out.</p>\n<hr>\n<p>Also also, something about the way you posted your code using <code>&lt;details&gt;</code> isn't quite right.  I had to view this page's source code to see your code to edit it.  Therefore, I believe that's why the <code>&amp;lt;/br&amp;gt;</code> is in my \"copy\" of your code.</p>\n<p>It should be <code>&lt;br/&gt;</code>. I just fixed that in my above code sample, too.</p>\n\n",
      "PostDate": "2021-04-20T23:41:09.3209844Z",
      "LastEditDate": "2021-04-20T23:42:28.0362757Z",
      "link": null
    },
    {
      "PostId": "e50eaf7b-6e35-4d45-8103-a62ac57c2ba4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That `splice` line seems awfully wordy. Wouldn't it be easier to write:\r\n```\r\nw.me.dialogue.length = 0\r\n```\r\n(assuming you really need to change any variables that hold a reference to the array, so can't use the much faster\r\n```\r\nw.me.dialogue = []\r\n```\r\n)\r\n\r\nYes, it's irrelevant to your problem; but it's the first thing that jumped out at me in that cade.",
      "EditableFormat": "markdown",
      "HTML": "<p>That <code>splice</code> line seems awfully wordy. Wouldn't it be easier to write:</p>\n<pre><code>w.me.dialogue.length = 0\n</code></pre>\n<p>(assuming you really need to change any variables that hold a reference to the array, so can't use the much faster</p>\n<pre><code>w.me.dialogue = []\n</code></pre>\n<p>)</p>\n<p>Yes, it's irrelevant to your problem; but it's the first thing that jumped out at me in that cade.</p>\n\n",
      "PostDate": "2021-04-21T00:52:05.7926992Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "844000e3-2862-4570-bafb-e47abbc27882",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "PPS\r\n\r\nTo test your code, I inserted a few instances of ```console.log()``` here and there to see what was happening behind the scenes during the processes.  (This is how I debug my own code.)\r\n\r\n```\r\n  talkto:function() {\r\n    getDialogue(w.Mira);\r\n    console.log(\"Running talkTo . . .\");\r\n    console.log(\"w.me.dialogue: \", w.me.dialogue);\r\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\r\n      console.log(\"Running showMenuWithNumbers . . .\");\r\n      console.log(\"w.me.dialogue: \", w.me.dialogue);\r\n      console.log(\"result: \", result);\r\n      if (result === \"kiss\") {\r\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\r\n      }\r\n      else if (result === \"castle\") {\r\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\r\n      }\r\n      else if (result === \"highReign\") {\r\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...<br/>Well, we have a lot of work to do before we can start talking politics.\");\r\n      }\r\n      else {\r\n        msg(\"Never mind.\");\r\n      }\r\n      w.me.dialogue.splice(0, w.me.dialogue.length);\r\n    })\r\n    //w.me.dialogue.splice(0, w.me.dialogue.length);\r\n  },\r\n```\r\n\r\n---\r\n<details><summary>SCREEN-RECORDING</summary>\r\n\r\n![debugging-questjscode](https://user-images.githubusercontent.com/30656341/115481214-bcc36d80-a211-11eb-8b67-cc6cebb960dc.gif)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>PPS</p>\n<p>To test your code, I inserted a few instances of <code>console.log()</code> here and there to see what was happening behind the scenes during the processes.  (This is how I debug my own code.)</p>\n<pre><code>  talkto:function() {\n    getDialogue(w.Mira);\n    console.log(\"Running talkTo . . .\");\n    console.log(\"w.me.dialogue: \", w.me.dialogue);\n    showMenuWithNumbers(\"Talk to Mira about what?\", w.me.dialogue, function(result) {\n      console.log(\"Running showMenuWithNumbers . . .\");\n      console.log(\"w.me.dialogue: \", w.me.dialogue);\n      console.log(\"result: \", result);\n      if (result === \"kiss\") {\n        msg(\"We don't have time for romance; our Kingdom needs us.\");\n      }\n      else if (result === \"castle\") {\n        msg(\"Rebuilding the rest of the castle can wait; I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\");\n      }\n      else if (result === \"highReign\") {\n        msg(\"High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...&lt;br/&gt;Well, we have a lot of work to do before we can start talking politics.\");\n      }\n      else {\n        msg(\"Never mind.\");\n      }\n      w.me.dialogue.splice(0, w.me.dialogue.length);\n    })\n    //w.me.dialogue.splice(0, w.me.dialogue.length);\n  },\n</code></pre>\n<hr>\n<details><summary>SCREEN-RECORDING</summary>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/115481214-bcc36d80-a211-11eb-8b67-cc6cebb960dc.gif\" alt=\"debugging-questjscode\"></p>\n</details>\n\n",
      "PostDate": "2021-04-21T00:52:42.3369966Z",
      "LastEditDate": "2021-04-21T15:32:52.1078596Z",
      "link": null
    },
    {
      "PostId": "23442358-757c-4217-8f63-4bc549fe6b0f",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel is like a Javascript wizard, by the way -- just for the record.",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel is like a Javascript wizard, by the way -- just for the record.</p>\n\n",
      "PostDate": "2021-04-21T01:27:40.275341Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "05c8606e-4d83-4688-813b-87141a3715ea",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<blockquote>\r\nWith that line in its current position ... <br />\r\n...it executes sooner than you want it to in this scenario...<br />\r\nYou almost had it figured out.<br />\r\n...the way you posted your code using <code>&lt;details&gt;</code> isn't quite right. I had to view this page's source code to see your code...<br />\r\nIt should be <code>&lt;br/&gt;</code>.\r\n</blockquote>\r\nD'OH!\r\n<blockquote>Try it like this:</blockquote>\r\n(It works now)<br />\r\nWOO-HOO! Thank you, K.V.!  I will take away the lesson that when going back for subsequent bug checks, I should not ignore things I may have dismissed the first time around.<br />\r\nNow on to Phase 2: tidy the code, pretty the output, and streamline the process.<br />\r\n<br />\r\nP.S.<br />\r\nSince I'm basically learning JavaScript as I go along, I had to look up how to clear out an array. The explanation I found mentioned all three ways, but the first two had warnings that I don't fully comprehend, like references trying to find the old array and \"may have some potential memory issues.\" Since I plan to use the same array every time the player talks to any NPC, I thought it best to use the \"cleanest\" version. I am also hoping to hide that bit inside another function before I'm done, so I won't have to type it in for every time I use the menu.<br />\r\n<br />\r\nConsole log is a neat trick! I'll have to remember that.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\nWith that line in its current position ... <br>\n...it executes sooner than you want it to in this scenario...<br>\nYou almost had it figured out.<br>\n...the way you posted your code using <code>&lt;details&gt;</code> isn't quite right. I had to view this page's source code to see your code...<br>\nIt should be <code>&lt;br/&gt;</code>.\n</blockquote>\nD'OH!\n<blockquote>Try it like this:</blockquote>\n(It works now)<br>\nWOO-HOO! Thank you, K.V.!  I will take away the lesson that when going back for subsequent bug checks, I should not ignore things I may have dismissed the first time around.<br>\nNow on to Phase 2: tidy the code, pretty the output, and streamline the process.<br>\n<br>\nP.S.<br>\nSince I'm basically learning JavaScript as I go along, I had to look up how to clear out an array. The explanation I found mentioned all three ways, but the first two had warnings that I don't fully comprehend, like references trying to find the old array and \"may have some potential memory issues.\" Since I plan to use the same array every time the player talks to any NPC, I thought it best to use the \"cleanest\" version. I am also hoping to hide that bit inside another function before I'm done, so I won't have to type it in for every time I use the menu.<br>\n<br>\nConsole log is a neat trick! I'll have to remember that.\n\n",
      "PostDate": "2021-04-21T03:26:24.335942Z",
      "LastEditDate": "2021-04-21T03:43:36.3689862Z",
      "link": null
    },
    {
      "PostId": "f51894cb-ce00-4d4f-87fe-287e92b1ba08",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```switch``` is another neat trick.\r\n\r\n```js\r\n  talkTo:function(){\r\n    let list = ['Blue', 'Red', 'Yellow'];\r\n    showMenuWithNumbers('Pick a color', list, function(result){\r\n      if(!result) {\r\n        msg(\"Something messed up.\")\r\n        return\r\n      }\r\n      switch (result.toLowerCase()){\r\n        case \"blue\":\r\n          msg(\"You chose blue.\")\r\n          break\r\n        case \"red\":\r\n          msg(\"You picked red.\")\r\n          break\r\n        case \"yellow\":\r\n          msg(\"You selected yellow.\")\r\n          break\r\n        default:\r\n          msg(\"Something went wrong.\")\r\n      }\r\n    })\r\n  },\r\n```\r\n\r\n---\r\n### NOTE\r\n\r\nFor some reason, there is no response when I type in text that is not a choice.  If I enter a number that isn't listed, I get the \"Something messed up\" response, but nothing prints in-game when I enter \"brown\".\r\n\r\nI believe this might be a bug, but I'm going cross-eyed trying to figure out how ```io.menuResponse``` works.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>switch</code> is another neat trick.</p>\n<pre><code>  talkTo:function(){\n    let list = ['Blue', 'Red', 'Yellow'];\n    showMenuWithNumbers('Pick a color', list, function(result){\n      if(!result) {\n        msg(\"Something messed up.\")\n        return\n      }\n      switch (result.toLowerCase()){\n        case \"blue\":\n          msg(\"You chose blue.\")\n          break\n        case \"red\":\n          msg(\"You picked red.\")\n          break\n        case \"yellow\":\n          msg(\"You selected yellow.\")\n          break\n        default:\n          msg(\"Something went wrong.\")\n      }\n    })\n  },\n</code></pre>\n<hr>\n<h3>NOTE</h3>\n<p>For some reason, there is no response when I type in text that is not a choice.  If I enter a number that isn't listed, I get the \"Something messed up\" response, but nothing prints in-game when I enter \"brown\".</p>\n<p>I believe this might be a bug, but I'm going cross-eyed trying to figure out how <code>io.menuResponse</code> works.</p>\n\n",
      "PostDate": "2021-04-21T15:22:10.5835152Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c522b9e7-ca84-4449-922b-c77a405c52a3",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I was sort looking into that today too, for different reasons, and it does get pretty mind boggling.\r\nI had to make my own version of showMenuWithNumbers, and that was quite a rabbit hole.\r\n\r\nAt this point, I have my conversation system all set up (although I suspect it could be tidier code).\r\nI basically copied the showMenuWithNumbers function to make my own slightly modified version, so I have that issue now of what to do if they don't type numbers. I'm thinking a response that says, \"Hey! That's not a number!\"\r\n\r\nThat is not an issue with the regular showMenu, as the command bar disappears, until you select something with the mouse.\r\nApparently, showMenuWithNumbers leaves up the bar on purpose, so you can type a number, but it should really use some kind of direct keyboard response instead.\r\n\r\nNot sure it's important enough to me to address that right now, though. I'm about ready to start writing the actual game part of my game (I've got a huge list of items and what not, ready to type in). I will throw up the final version of my code though, so you can see how it turned out. I'm gonna skip the \"details\" tag this time, since I'm not sure what was wrong with it.\r\n\r\nIn code file:\r\nI couldn't get the tidy method using \"filter\" and \"indexOf\" to work for me with 2D arrays,\r\nso I had to resort to nested loops. I am open to learning a better a way to do this.\r\n```\r\n/**\r\n*** My dialogue populating function\r\n**/\r\n\r\nlet arr1D;\r\nlet arr2D;\r\n\r\nfunction getDialogue(character) {\r\n  for (arr1D = 0; arr1D < curious.length; arr1D++) {\r\n    for (arr2D = 0; arr2D < character.knows.length; arr2D++) {\r\n      if (curious[arr1D] === character.knows[arr2D][0]) {\r\n        dialogue.push(character.knows[arr2D]);\r\n      }\r\n    }\r\n  }\r\n  let n;\r\n  for (n of character.common) {\r\n    dialogue.push(n);\r\n  }\r\n  dialogue.push([\"Cancel\", \"Never mind\"])\r\n}\r\n\r\nfunction show2dDialogue(title, options, fn) {\r\n  const opts = {article:DEFINITE, capital:true, noLinks:true}\r\n  io.input(title, options, false, fn, function(options) {\r\n    for (let i = 0; i < options.length; i++) {\r\n      let s = '<a class=\"menu-option\" onclick=\"io.menuResponse(' + i + ')\">';\r\n      s += (typeof options[i][0] === 'string' ? options[i][0] : lang.getName(options[i][0], opts))\r\n      s += '</a>';\r\n      msg(s);\r\n    }\r\n  })\r\n}\r\n\r\nfunction runDialogue(character) {\r\n  getDialogue(character);\r\n  show2dDialogue(\"Talk to \" + character.name + \" about what?\", dialogue, function(result) {\r\n    let i;\r\n    for (i = 0; i < dialogue.length; i++) {\r\n      if (result[0] === dialogue[i][0]) {\r\n        msg(dialogue[i][1]);\r\n        dialogue.splice(0, dialogue.length);\r\n      }\r\n    }\r\n  })\r\n}\r\n```\r\nIn data file:\r\nIt took some setting up in the code, but each conversation topic is listed within its owner NPC and takes up only a single line.\r\nAll the supporting code is gathered into a single function call as well.\r\n```\r\ncreateItem(\"me\", PLAYER(), {\r\n  loc:\"belvedere\",\r\n  regex:/^(me|myself|player)$/,\r\n  examine: \"Just a regular guy.\",\r\n  hitpoints:100,\r\n  curiosities:[\"castle\", \"farTown\"],\r\n  dialogueChoices:[],\r\n  puzzleTest:\"<b>Sylphia:</b> You solved it already?!\",\r\n})\r\n\r\nlet dialogue = w.me.dialogueChoices;\r\nlet curious = w.me.curiosities;\r\n\r\ncreateItem(\"Mira\", NPC(true), {\r\n  loc:\"belvedere\",\r\n  examine:\"The new Queen is still quite young, but you recognize a wisdom forged in loss, behind her eyes.\",\r\n  knows:[\r\n    [\"No kiss?\", \"<b>Mira:</b> We can't distract ourselves with romance, now. Our Kingdom needs us.\"],\r\n    [\"Rebuilding the castle\", \"<b>Mira:</b> Rebuilding the rest of the castle can wait. I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\"],\r\n  ],\r\n  common:[\r\n    [\"The Kingdom of High Reign\", \"<b>Mira:</b> High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...<br />Well, we have a lot of work to do, before we can start talking politics.\"],\r\n  ],\r\n  talkto:function() {\r\n    runDialogue(w.Mira);\r\n  },\r\n  kiss:function() {\r\n    msg(\"Mira interupts your attempt with a firm <i><b>SLAP!</b></i>\");\r\n    msg(\"<b>Mira:</b> Knock it off, tunahead!\");\r\n    msg(\"<b>Tye:</b> Well, <i>excuse</i> me, Your Highness!\");\r\n    msg(\"Sylphia flies up to your face, with a friendly grin.\");\r\n    msg(\"<b>Sylphia:</b> I'll kiss you!\");\r\n    msg(\"<b>Tye:</b> ...\");\r\n    msg(\"Sylphia crosses her arms and pouts.\");\r\n    msg(\"<b>Sylphia:</b> Hmph!\");\r\n    if (!curious.includes[\"No kiss?\"]) {\r\n      curious.unshift(\"No kiss?\");\r\n    }\r\n  },\r\n})\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I was sort looking into that today too, for different reasons, and it does get pretty mind boggling.<br>\nI had to make my own version of showMenuWithNumbers, and that was quite a rabbit hole.</p>\n<p>At this point, I have my conversation system all set up (although I suspect it could be tidier code).<br>\nI basically copied the showMenuWithNumbers function to make my own slightly modified version, so I have that issue now of what to do if they don't type numbers. I'm thinking a response that says, \"Hey! That's not a number!\"</p>\n<p>That is not an issue with the regular showMenu, as the command bar disappears, until you select something with the mouse.<br>\nApparently, showMenuWithNumbers leaves up the bar on purpose, so you can type a number, but it should really use some kind of direct keyboard response instead.</p>\n<p>Not sure it's important enough to me to address that right now, though. I'm about ready to start writing the actual game part of my game (I've got a huge list of items and what not, ready to type in). I will throw up the final version of my code though, so you can see how it turned out. I'm gonna skip the \"details\" tag this time, since I'm not sure what was wrong with it.</p>\n<p>In code file:<br>\nI couldn't get the tidy method using \"filter\" and \"indexOf\" to work for me with 2D arrays,<br>\nso I had to resort to nested loops. I am open to learning a better a way to do this.</p>\n<pre><code>/**\n*** My dialogue populating function\n**/\n\nlet arr1D;\nlet arr2D;\n\nfunction getDialogue(character) {\n  for (arr1D = 0; arr1D &lt; curious.length; arr1D++) {\n    for (arr2D = 0; arr2D &lt; character.knows.length; arr2D++) {\n      if (curious[arr1D] === character.knows[arr2D][0]) {\n        dialogue.push(character.knows[arr2D]);\n      }\n    }\n  }\n  let n;\n  for (n of character.common) {\n    dialogue.push(n);\n  }\n  dialogue.push([\"Cancel\", \"Never mind\"])\n}\n\nfunction show2dDialogue(title, options, fn) {\n  const opts = {article:DEFINITE, capital:true, noLinks:true}\n  io.input(title, options, false, fn, function(options) {\n    for (let i = 0; i &lt; options.length; i++) {\n      let s = '&lt;a class=\"menu-option\" onclick=\"io.menuResponse(' + i + ')\"&gt;';\n      s += (typeof options[i][0] === 'string' ? options[i][0] : lang.getName(options[i][0], opts))\n      s += '&lt;/a&gt;';\n      msg(s);\n    }\n  })\n}\n\nfunction runDialogue(character) {\n  getDialogue(character);\n  show2dDialogue(\"Talk to \" + character.name + \" about what?\", dialogue, function(result) {\n    let i;\n    for (i = 0; i &lt; dialogue.length; i++) {\n      if (result[0] === dialogue[i][0]) {\n        msg(dialogue[i][1]);\n        dialogue.splice(0, dialogue.length);\n      }\n    }\n  })\n}\n</code></pre>\n<p>In data file:<br>\nIt took some setting up in the code, but each conversation topic is listed within its owner NPC and takes up only a single line.<br>\nAll the supporting code is gathered into a single function call as well.</p>\n<pre><code>createItem(\"me\", PLAYER(), {\n  loc:\"belvedere\",\n  regex:/^(me|myself|player)$/,\n  examine: \"Just a regular guy.\",\n  hitpoints:100,\n  curiosities:[\"castle\", \"farTown\"],\n  dialogueChoices:[],\n  puzzleTest:\"&lt;b&gt;Sylphia:&lt;/b&gt; You solved it already?!\",\n})\n\nlet dialogue = w.me.dialogueChoices;\nlet curious = w.me.curiosities;\n\ncreateItem(\"Mira\", NPC(true), {\n  loc:\"belvedere\",\n  examine:\"The new Queen is still quite young, but you recognize a wisdom forged in loss, behind her eyes.\",\n  knows:[\n    [\"No kiss?\", \"&lt;b&gt;Mira:&lt;/b&gt; We can't distract ourselves with romance, now. Our Kingdom needs us.\"],\n    [\"Rebuilding the castle\", \"&lt;b&gt;Mira:&lt;/b&gt; Rebuilding the rest of the castle can wait. I want to focus on providing a real town for the people, first. Besides, other construction efforts will improve as the prosperity of the people improves.\"],\n  ],\n  common:[\n    [\"The Kingdom of High Reign\", \"&lt;b&gt;Mira:&lt;/b&gt; High Reign was once a unifying kingdom, bringing the other tribes and kingdoms under a single banner. It would be nice to...&lt;br /&gt;Well, we have a lot of work to do, before we can start talking politics.\"],\n  ],\n  talkto:function() {\n    runDialogue(w.Mira);\n  },\n  kiss:function() {\n    msg(\"Mira interupts your attempt with a firm &lt;i&gt;&lt;b&gt;SLAP!&lt;/b&gt;&lt;/i&gt;\");\n    msg(\"&lt;b&gt;Mira:&lt;/b&gt; Knock it off, tunahead!\");\n    msg(\"&lt;b&gt;Tye:&lt;/b&gt; Well, &lt;i&gt;excuse&lt;/i&gt; me, Your Highness!\");\n    msg(\"Sylphia flies up to your face, with a friendly grin.\");\n    msg(\"&lt;b&gt;Sylphia:&lt;/b&gt; I'll kiss you!\");\n    msg(\"&lt;b&gt;Tye:&lt;/b&gt; ...\");\n    msg(\"Sylphia crosses her arms and pouts.\");\n    msg(\"&lt;b&gt;Sylphia:&lt;/b&gt; Hmph!\");\n    if (!curious.includes[\"No kiss?\"]) {\n      curious.unshift(\"No kiss?\");\n    }\n  },\n})\n</code></pre>\n\n",
      "PostDate": "2021-04-21T21:46:53.6641492Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "368ca147-d39a-4a86-8ad5-34438d2840bb",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have had a look at this, and there were some issues.\r\n\r\nThe `showMenuWithNumbers` function is designed to take text - the player can type a keyword from the text as an alternative to the number, and it will try to match that to an option. However it failed to check if the number was okay, and the documentation failed to point out you need to handle `undefined`.\r\n\r\nI have added a further option, `showMenuNumbersOnly` which has no text input - it captures the keypress, and passes that. It ignores any keypress it does not like so no issue with `undefined` here. You are effectively limited to nine options.\r\n\r\nShould all be corrected, but not released, so you need the latest _io.js from Github.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have had a look at this, and there were some issues.</p>\n<p>The <code>showMenuWithNumbers</code> function is designed to take text - the player can type a keyword from the text as an alternative to the number, and it will try to match that to an option. However it failed to check if the number was okay, and the documentation failed to point out you need to handle <code>undefined</code>.</p>\n<p>I have added a further option, <code>showMenuNumbersOnly</code> which has no text input - it captures the keypress, and passes that. It ignores any keypress it does not like so no issue with <code>undefined</code> here. You are effectively limited to nine options.</p>\n<p>Should all be corrected, but not released, so you need the latest _io.js from Github.</p>\n\n",
      "PostDate": "2021-04-22T09:09:40.2025218Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
