{
  "Topic": {
    "TopicId": "y4jpr3piveyqdaveeoow_a",
    "ForumId": "10",
    "Title": "Npc - Repeat Actions",
    "LastUpdated": "2019-02-15T08:59:09.6655055Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0f4392f5-22b6-41ef-ac34-c5080b7e12f8",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi All.\r\n\r\nI'm still having problems with this issue.\r\n\r\nI have an NPC that I want to patrol between a series of rooms, then repeat.\r\nSo in the 'List of actions to perform I have:\r\n```\r\nGoTo:room5\r\nGoTo:room1\r\n```\r\nIn the 'NPC script' box at the bottom of the screen I have:\r\n```\r\nthis.deletefromlist = false\r\n```\r\nFor some reason this is not working, and I don't know what I'm doing wrong.\r\n\r\nAny help is greatly appreciated. Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi All.</p>\n<p>I'm still having problems with this issue.</p>\n<p>I have an NPC that I want to patrol between a series of rooms, then repeat.<br>\nSo in the 'List of actions to perform I have:</p>\n<pre><code>GoTo:room5\nGoTo:room1\n</code></pre>\n<p>In the 'NPC script' box at the bottom of the screen I have:</p>\n<pre><code>this.deletefromlist = false\n</code></pre>\n<p>For some reason this is not working, and I don't know what I'm doing wrong.</p>\n<p>Any help is greatly appreciated. Thanks.</p>\n\n",
      "PostDate": "2019-02-15T08:59:09.6655055Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fbf3b23f-a32c-49c1-a62a-50766b0176ca",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for this example:\r\n\r\nIMPORTANT: for the way I got the code design, the npc can't start in the first room of the order of destination rooms (so for this example, npc can't start in room1)\r\n\r\nthe npc changes its location when the player changes his/her location (if you want it to happen differently, and need help, let me know)\r\n\r\nthe order of destinations is the order of added rooms to the 'npc.destination_objectlist_attribute', which is then looped ( the increment and looping is done by the npc.changedparent's scripting/code-line of: this.iterator_integer_attribute = (this.iterator_integer_attribute + 1) % this.destination_quantity_integer_attribute ):\r\n\r\nroom1 -> room2 -> room3 -> room4 -> room5 -> room1\r\n\r\n(if you want control or randomness, this requires a bit more and different coding required to handle it, well, the randomness isn't that much of a difference nor much code work, but the control is quite different and much more code work)\r\n\r\nwhen the npc's location changes, it's iterator is incremented, which causes it to be set for going to its next destination, for when the next time its destination change occurs\r\n\r\nroom1: objectlist index 0: npc.iterator_integer_attribute = 0: modulus operation of  0 % 5 = 0 (and 5 % 5 = 0 ---> this is the looping of the destination: room5 -> room1)\r\n\r\nroom2: objectlist index 1: npc.iterator_integer_attribute = 1: modulus operation of 1 % 5 = 1\r\n\r\nroom3: objectlist index 2: npc.iterator_integer_attribute = 2: modulus operation of 2 % 5 = 2\r\n\r\nroom4: objectlist index 3: npc.iterator_integer_attribute = 3: modulus operation of 3 % 5 = 3\r\n\r\nroom5: objectlist index 4: npc.iterator_integer_attribute = 4: modulus operation of 4 % 5 = 4\r\n\r\n---------------------\r\n\r\nfor an example:\r\n\r\ninitial/starting locations:\r\n\r\nplayer: room0\r\nnpc: room0\r\n(player and npc ARE in the same room)\r\n\r\nlet's say the player goes/moves to room1\r\nwhich causes npc to be moved to room1\r\n(player and npc ARE in the same room)\r\n\r\nlet's say the player goes/moves to room5\r\nwhich causes npc to be moved to room2\r\n(player and npc are NOT in the same room)\r\n\r\nlet's say the player goes/moves to room3\r\nwhich causes the npc to be moved to room3\r\n(player and npc ARE in the same room)\r\n\r\nlet's say the player goes/moves to room2\r\nwhich causes the npc to be moved to room4\r\n(player and npc are NOT in the same room)\r\n\r\nlet's say the player goes/moves to room4\r\nwhich causes the npc to be moved to room5\r\n(player and npc are NOT in the same room)\r\n\r\nlet's say the player goes/moves to room1\r\nwhich causes the npc to be moved to room1\r\n(player and npc ARE in the same room)\r\n\r\n----------------\r\n\r\n```\r\n<object name=\"player\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room0</attr>\r\n\r\n  <attr name=\"changedparent\" type=\"script\">\r\n\r\n    npc.parent = ObjectListItem (npc.destination_objectlist_attribute, npc.iterator_integer_attribute)\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"npc\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room0</attr>\r\n\r\n  <attr name=\"iterator_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"destination_quantity_integer_attribute\" type=\"int\">5</attr>\r\n\r\n  <attr name=\"changedparent\" type=\"script\">\r\n\r\n    this.iterator_integer_attribute = (this.iterator_integer_attribute + 1) % this.destination_quantity_integer_attribute\r\n\r\n  </attr>\r\n\r\n  <destination_objectlist_attribute type=\"objectlist\">\r\n\r\n    <value>room1</value>\r\n    <value>room2</value>\r\n    <value>room3</value>\r\n    <value>room4</value>\r\n    <value>room5</value>\r\n\r\n  </destination_objectlist_attribute>\r\n\r\n</object>\r\n\r\n<object name=\"room0\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"room1\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"room2\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"room3\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"room4\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"room5\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n```\r\n\r\n-----------------\r\n\r\nthe modulus operation (modulus operator: %) is division, except it gets the REMAINDER value, which makes it great for cyclic handling (and also odd/even of a number and factors/divisibilities of a number):\r\n\r\nfor understanding division vs modulus:\r\n\r\n0 / 5 = Quotient:0 and Remainder:0\r\n0 % 5 = Remainder:0\r\n\r\n1 / 5 = Quotient:0 and Remainder:1\r\n1 % 5 = Remainder:1\r\n\r\n2 / 5 = Quotient:0 and Remainder:2\r\n2 % 5 = Remainder:2\r\n\r\n3 / 5 = Quotient:0 and Remainder:3\r\n3 % 5 = Remainder:3\r\n\r\n4 / 5 = Quotient:0 and Remainder:4\r\n4 % 5 = Remainder:4\r\n\r\n5 / 5 = Quotient:1 and Remainder:0\r\n0 % 5 = Remainder:0\r\n\r\n6 / 5 = Quotient:1 and Remainder:1\r\n6 % 5 = Remainder:1\r\n\r\n7 / 5 = Quotient:1 and Remainder:2\r\n7 % 5 = Remainder:2\r\n\r\n8 / 5 = Quotient:1 and Remainder:3\r\n8 % 5 = Remainder:3\r\n\r\n9 / 5 = Quotient:1 and Remainder:4\r\n9 % 5 = Remainder:4\r\n\r\n10 / 5 = Quotient:2 and Remainder:0\r\n10 % 5 = Remainder:0\r\n\r\n11 / 5 = Quotient:2 and Remainder:1\r\n11 % 5 = Remainder:1\r\n\r\netc etc etc\r\n\r\n19 / 5 = Quotient:3 and Remainder:4\r\n19 % 5 = Remainder:4\r\n\r\n20 / 5 = Quotient:4 and Remainder:0\r\n20 % 5 = Remainder:0\r\n\r\n21 / 5 = Quotient:4 and Remainder:1\r\n21 % 5 = Remainder:1\r\n\r\netc etc etc\r\n\r\ncivilian hours (0-11 am/pm):\r\n\r\n0 hour % 12 = 0 am/pm = midnight (12:00 pm->am) or noon/midday (12 am->pm)\r\n1 hour % 12 = 1 am/pm\r\n2 hour % 12 = 2 am/pm\r\n3 hour % 12 = 3 am/pm\r\n4 hour % 12 = 4 am/pm\r\n5 hour % 12 = 5 am/pm\r\n6 hour % 12 = 6 am/pm (dawn/sunrise or dusk/sunset)\r\n7 hour % 12 = 7 am/pm\r\n8 hour % 12 = 8 am/pm\r\n9 hour % 12 = 9 am/pm\r\n10 hour % 12 = 10 am/pm\r\n11 hour % 12 = 11 am/pm\r\n12 hour % 12 = 0 am/pm = midnight (12:00 pm->am) or noon/midday (12 am->pm)\r\n13 hour % 12 = 1 am/pm\r\n\r\nmilitary hours (0-23 am/pm: 0-11 am, 11-23 pm):\r\n\r\n0 hour % 24 = 0 am/pm = midnight (12:00 pm->am)\r\n1 hour % 24 = 1 am\r\n2 hour % 24 = 2 am\r\n3 hour % 24 = 3 am\r\n4 hour % 24 = 4 am\r\n5 hour % 24 = 5 am\r\n6 hour % 24 = 6 am (dawn/sunrise)\r\n7 hour % 24 = 7 am\r\n8 hour % 24 = 8 am\r\n9 hour % 24 = 9 am\r\n10 hour % 24 = 10 am\r\n11 hour % 24 = 11 am\r\n12 hour % 24 = 12 am/pm = noon/midday (12 am->pm)\r\n13 hour % 24 = 13 pm\r\n14 hour % 24 = 14 pm\r\n15 hour % 24 = 15 pm\r\n16 hour % 24 = 16 pm (dusk/sunset)\r\n17 hour % 24 = 17 pm\r\n18 hour % 24 = 18 pm\r\n19 hour % 24 = 19 pm\r\n20 hour % 24 = 20 pm\r\n21 hour % 24 = 21 pm\r\n22 hour % 24 = 22 pm\r\n23 hour % 24 = 23 pm\r\n24 hour % 24 = 0 am/pm = midnight (12:00 pm->am)\r\n25 hour % 24 = 1 am",
      "EditableFormat": "markdown",
      "HTML": "<p>for this example:</p>\n<p>IMPORTANT: for the way I got the code design, the npc can't start in the first room of the order of destination rooms (so for this example, npc can't start in room1)</p>\n<p>the npc changes its location when the player changes his/her location (if you want it to happen differently, and need help, let me know)</p>\n<p>the order of destinations is the order of added rooms to the 'npc.destination_objectlist_attribute', which is then looped ( the increment and looping is done by the npc.changedparent's scripting/code-line of: this.iterator_integer_attribute = (this.iterator_integer_attribute + 1) % this.destination_quantity_integer_attribute ):</p>\n<p>room1 -&gt; room2 -&gt; room3 -&gt; room4 -&gt; room5 -&gt; room1</p>\n<p>(if you want control or randomness, this requires a bit more and different coding required to handle it, well, the randomness isn't that much of a difference nor much code work, but the control is quite different and much more code work)</p>\n<p>when the npc's location changes, it's iterator is incremented, which causes it to be set for going to its next destination, for when the next time its destination change occurs</p>\n<p>room1: objectlist index 0: npc.iterator_integer_attribute = 0: modulus operation of  0 % 5 = 0 (and 5 % 5 = 0 ---&gt; this is the looping of the destination: room5 -&gt; room1)</p>\n<p>room2: objectlist index 1: npc.iterator_integer_attribute = 1: modulus operation of 1 % 5 = 1</p>\n<p>room3: objectlist index 2: npc.iterator_integer_attribute = 2: modulus operation of 2 % 5 = 2</p>\n<p>room4: objectlist index 3: npc.iterator_integer_attribute = 3: modulus operation of 3 % 5 = 3</p>\n<p>room5: objectlist index 4: npc.iterator_integer_attribute = 4: modulus operation of 4 % 5 = 4</p>\n<hr>\n<p>for an example:</p>\n<p>initial/starting locations:</p>\n<p>player: room0<br>\nnpc: room0<br>\n(player and npc ARE in the same room)</p>\n<p>let's say the player goes/moves to room1<br>\nwhich causes npc to be moved to room1<br>\n(player and npc ARE in the same room)</p>\n<p>let's say the player goes/moves to room5<br>\nwhich causes npc to be moved to room2<br>\n(player and npc are NOT in the same room)</p>\n<p>let's say the player goes/moves to room3<br>\nwhich causes the npc to be moved to room3<br>\n(player and npc ARE in the same room)</p>\n<p>let's say the player goes/moves to room2<br>\nwhich causes the npc to be moved to room4<br>\n(player and npc are NOT in the same room)</p>\n<p>let's say the player goes/moves to room4<br>\nwhich causes the npc to be moved to room5<br>\n(player and npc are NOT in the same room)</p>\n<p>let's say the player goes/moves to room1<br>\nwhich causes the npc to be moved to room1<br>\n(player and npc ARE in the same room)</p>\n<hr>\n<pre><code>&lt;object name=\"player\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room0&lt;/attr&gt;\n\n  &lt;attr name=\"changedparent\" type=\"script\"&gt;\n\n    npc.parent = ObjectListItem (npc.destination_objectlist_attribute, npc.iterator_integer_attribute)\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"npc\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room0&lt;/attr&gt;\n\n  &lt;attr name=\"iterator_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"destination_quantity_integer_attribute\" type=\"int\"&gt;5&lt;/attr&gt;\n\n  &lt;attr name=\"changedparent\" type=\"script\"&gt;\n\n    this.iterator_integer_attribute = (this.iterator_integer_attribute + 1) % this.destination_quantity_integer_attribute\n\n  &lt;/attr&gt;\n\n  &lt;destination_objectlist_attribute type=\"objectlist\"&gt;\n\n    &lt;value&gt;room1&lt;/value&gt;\n    &lt;value&gt;room2&lt;/value&gt;\n    &lt;value&gt;room3&lt;/value&gt;\n    &lt;value&gt;room4&lt;/value&gt;\n    &lt;value&gt;room5&lt;/value&gt;\n\n  &lt;/destination_objectlist_attribute&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room0\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room1\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room2\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room3\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room4\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"room5\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>the modulus operation (modulus operator: %) is division, except it gets the REMAINDER value, which makes it great for cyclic handling (and also odd/even of a number and factors/divisibilities of a number):</p>\n<p>for understanding division vs modulus:</p>\n<p>0 / 5 = Quotient:0 and Remainder:0<br>\n0 % 5 = Remainder:0</p>\n<p>1 / 5 = Quotient:0 and Remainder:1<br>\n1 % 5 = Remainder:1</p>\n<p>2 / 5 = Quotient:0 and Remainder:2<br>\n2 % 5 = Remainder:2</p>\n<p>3 / 5 = Quotient:0 and Remainder:3<br>\n3 % 5 = Remainder:3</p>\n<p>4 / 5 = Quotient:0 and Remainder:4<br>\n4 % 5 = Remainder:4</p>\n<p>5 / 5 = Quotient:1 and Remainder:0<br>\n0 % 5 = Remainder:0</p>\n<p>6 / 5 = Quotient:1 and Remainder:1<br>\n6 % 5 = Remainder:1</p>\n<p>7 / 5 = Quotient:1 and Remainder:2<br>\n7 % 5 = Remainder:2</p>\n<p>8 / 5 = Quotient:1 and Remainder:3<br>\n8 % 5 = Remainder:3</p>\n<p>9 / 5 = Quotient:1 and Remainder:4<br>\n9 % 5 = Remainder:4</p>\n<p>10 / 5 = Quotient:2 and Remainder:0<br>\n10 % 5 = Remainder:0</p>\n<p>11 / 5 = Quotient:2 and Remainder:1<br>\n11 % 5 = Remainder:1</p>\n<p>etc etc etc</p>\n<p>19 / 5 = Quotient:3 and Remainder:4<br>\n19 % 5 = Remainder:4</p>\n<p>20 / 5 = Quotient:4 and Remainder:0<br>\n20 % 5 = Remainder:0</p>\n<p>21 / 5 = Quotient:4 and Remainder:1<br>\n21 % 5 = Remainder:1</p>\n<p>etc etc etc</p>\n<p>civilian hours (0-11 am/pm):</p>\n<p>0 hour % 12 = 0 am/pm = midnight (12:00 pm-&gt;am) or noon/midday (12 am-&gt;pm)<br>\n1 hour % 12 = 1 am/pm<br>\n2 hour % 12 = 2 am/pm<br>\n3 hour % 12 = 3 am/pm<br>\n4 hour % 12 = 4 am/pm<br>\n5 hour % 12 = 5 am/pm<br>\n6 hour % 12 = 6 am/pm (dawn/sunrise or dusk/sunset)<br>\n7 hour % 12 = 7 am/pm<br>\n8 hour % 12 = 8 am/pm<br>\n9 hour % 12 = 9 am/pm<br>\n10 hour % 12 = 10 am/pm<br>\n11 hour % 12 = 11 am/pm<br>\n12 hour % 12 = 0 am/pm = midnight (12:00 pm-&gt;am) or noon/midday (12 am-&gt;pm)<br>\n13 hour % 12 = 1 am/pm</p>\n<p>military hours (0-23 am/pm: 0-11 am, 11-23 pm):</p>\n<p>0 hour % 24 = 0 am/pm = midnight (12:00 pm-&gt;am)<br>\n1 hour % 24 = 1 am<br>\n2 hour % 24 = 2 am<br>\n3 hour % 24 = 3 am<br>\n4 hour % 24 = 4 am<br>\n5 hour % 24 = 5 am<br>\n6 hour % 24 = 6 am (dawn/sunrise)<br>\n7 hour % 24 = 7 am<br>\n8 hour % 24 = 8 am<br>\n9 hour % 24 = 9 am<br>\n10 hour % 24 = 10 am<br>\n11 hour % 24 = 11 am<br>\n12 hour % 24 = 12 am/pm = noon/midday (12 am-&gt;pm)<br>\n13 hour % 24 = 13 pm<br>\n14 hour % 24 = 14 pm<br>\n15 hour % 24 = 15 pm<br>\n16 hour % 24 = 16 pm (dusk/sunset)<br>\n17 hour % 24 = 17 pm<br>\n18 hour % 24 = 18 pm<br>\n19 hour % 24 = 19 pm<br>\n20 hour % 24 = 20 pm<br>\n21 hour % 24 = 21 pm<br>\n22 hour % 24 = 22 pm<br>\n23 hour % 24 = 23 pm<br>\n24 hour % 24 = 0 am/pm = midnight (12:00 pm-&gt;am)<br>\n25 hour % 24 = 1 am</p>\n\n",
      "PostDate": "2019-02-15T16:28:48.6380851Z",
      "LastEditDate": "2019-02-15T16:58:18.7492891Z",
      "link": null
    },
    {
      "PostId": "c9b49d5c-f78a-491c-a6e2-809422dfb9b7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In the 'NPC script' box at the bottom of the screen I have:\r\n\r\nAs far as I can tell, that script is run when it comes to a \"Script:\" line in the NPC's actions list. setting `deletefromlist` to false causes the \"Script:\" action to be run again next turn.\r\n\r\nWhat you probably want is in the 'List of actions to perform':\r\n\r\n```\r\nScript:room5\r\nScript:room1\r\n```\r\nIn the 'NPC script' box at the bottom of the screen:\r\n```\r\nNpcGoTo (this, item)\r\nlist add (this.actions, ListItem(this.actions, 0))\r\n```\r\nThat basically means that \"Script:\" acts the same as \"GoTo:\", but after executing the action it is added to the end of the NPC actions list again.\r\n\r\n**Or…** if you end up wanting NPCs to repeat actions a lot, you could change the NpcAct function to something like:\r\n\r\n```\r\n  <function name=\"NpcAct\" parameters=\"npc, s\" type=\"boolean\">\r\n    ary = Split(s, \":\")\r\n    if (ListCount(ary) = 1) {\r\n      PrintIfHere (npc.parent, s)\r\n      f = true\r\n    }\r\n    else {\r\n      objname = StringListItem(ary, 1)\r\n      if (objname = \"\") {\r\n        game.currentobj = null\r\n      }\r\n      else {\r\n        game.currentobj = GetObject (objname)\r\n        if (game.currentobj = null) {\r\n          error (\"Failed to find object in NpcAct: \" + objname)\r\n        }\r\n      }\r\n      action = StringListItem(ary, 0)\r\n      cycle = false\r\n      if (Left (action, 1) = \"@\") {\r\n        action = Mid (action, 2)\r\n        cycle = true\r\n      }\r\n      game.currentnpc = npc\r\n      f = Eval(\"Npc\" + action + \"(game.currentnpc, game.currentobj)\")\r\n      if (f and cycle) {\r\n        list add (npc.actions, s)\r\n      }\r\n    }\r\n    return (f)\r\n  </function>\r\n```\r\nIn that case, you could have the actions list like:\r\n```\r\n@GoTo:room1\r\n@GoTo:room5\r\n```\r\nwith the `@` sign meaning \"after doing this action, add it to the end of the list to do again\". Basically gives you an easy way to repeat some or all of an NPC's actions.\r\n\r\n<hr/>\r\n\r\n@HK: I think that code has issues.\r\n\r\nYou've removed the existing behaviour from `player.changedparent`, which does things such as calling room enter/exit scripts, updating the map, and showing the new room description.\r\n\r\n<hr/>\r\n\r\n**Edit:** Sorry if there's mistakes in my code. I've had a complete emotional breakdown and am mostly non-functional. I also have never used NpcLib and don't have Quest installed here, so I'm trying to diagnose your problem just by skim-reading the code for the library.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In the 'NPC script' box at the bottom of the screen I have:</p>\n</blockquote>\n<p>As far as I can tell, that script is run when it comes to a \"Script:\" line in the NPC's actions list. setting <code>deletefromlist</code> to false causes the \"Script:\" action to be run again next turn.</p>\n<p>What you probably want is in the 'List of actions to perform':</p>\n<pre><code>Script:room5\nScript:room1\n</code></pre>\n<p>In the 'NPC script' box at the bottom of the screen:</p>\n<pre><code>NpcGoTo (this, item)\nlist add (this.actions, ListItem(this.actions, 0))\n</code></pre>\n<p>That basically means that \"Script:\" acts the same as \"GoTo:\", but after executing the action it is added to the end of the NPC actions list again.</p>\n<p><strong>Or…</strong> if you end up wanting NPCs to repeat actions a lot, you could change the NpcAct function to something like:</p>\n<pre><code>  &lt;function name=\"NpcAct\" parameters=\"npc, s\" type=\"boolean\"&gt;\n    ary = Split(s, \":\")\n    if (ListCount(ary) = 1) {\n      PrintIfHere (npc.parent, s)\n      f = true\n    }\n    else {\n      objname = StringListItem(ary, 1)\n      if (objname = \"\") {\n        game.currentobj = null\n      }\n      else {\n        game.currentobj = GetObject (objname)\n        if (game.currentobj = null) {\n          error (\"Failed to find object in NpcAct: \" + objname)\n        }\n      }\n      action = StringListItem(ary, 0)\n      cycle = false\n      if (Left (action, 1) = \"@\") {\n        action = Mid (action, 2)\n        cycle = true\n      }\n      game.currentnpc = npc\n      f = Eval(\"Npc\" + action + \"(game.currentnpc, game.currentobj)\")\n      if (f and cycle) {\n        list add (npc.actions, s)\n      }\n    }\n    return (f)\n  &lt;/function&gt;\n</code></pre>\n<p>In that case, you could have the actions list like:</p>\n<pre><code>@GoTo:room1\n@GoTo:room5\n</code></pre>\n<p>with the <code>@</code> sign meaning \"after doing this action, add it to the end of the list to do again\". Basically gives you an easy way to repeat some or all of an NPC's actions.</p>\n<hr>\n<p>@HK: I think that code has issues.</p>\n<p>You've removed the existing behaviour from <code>player.changedparent</code>, which does things such as calling room enter/exit scripts, updating the map, and showing the new room description.</p>\n<hr>\n<p><strong>Edit:</strong> Sorry if there's mistakes in my code. I've had a complete emotional breakdown and am mostly non-functional. I also have never used NpcLib and don't have Quest installed here, so I'm trying to diagnose your problem just by skim-reading the code for the library.</p>\n\n",
      "PostDate": "2019-02-15T17:37:39.9055967Z",
      "LastEditDate": "2019-02-15T17:41:59.4878759Z",
      "link": null
    },
    {
      "PostId": "8ffa6056-a5ac-4c19-8eb1-9d29c82087af",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oops, sorry about that! (didn't realize the issue with using the 'changedparent' on a Player Object and its over-riding of all of quest's built-in functionality with it)\r\n\r\n-------\r\n\r\nI can't quite make sense of this, but there's probably/maybe a way to get at the 'oldvalue' for the 'changedparent' Script on a Player Object:\r\n\r\nhttp://docs.textadventures.co.uk/quest/change_scripts.html (the oldvalue variable section)\r\n\r\nor... using the 'OnEnterRoom', but I'm not sure how it works... as it's not explained here... (I'd have to go look/find it in the quest code... which probably I can't be able to find it... argh)\r\n\r\nor... just find/get the built-in code, and re-add it in to the over-ridden 'changedparent' Script of a Player Object... meh",
      "EditableFormat": "markdown",
      "HTML": "<p>oops, sorry about that! (didn't realize the issue with using the 'changedparent' on a Player Object and its over-riding of all of quest's built-in functionality with it)</p>\n<hr>\n<p>I can't quite make sense of this, but there's probably/maybe a way to get at the 'oldvalue' for the 'changedparent' Script on a Player Object:</p>\n<p>http://docs.textadventures.co.uk/quest/change_scripts.html (the oldvalue variable section)</p>\n<p>or... using the 'OnEnterRoom', but I'm not sure how it works... as it's not explained here... (I'd have to go look/find it in the quest code... which probably I can't be able to find it... argh)</p>\n<p>or... just find/get the built-in code, and re-add it in to the over-ridden 'changedparent' Script of a Player Object... meh</p>\n\n",
      "PostDate": "2019-02-15T18:23:16.8480107Z",
      "LastEditDate": "2019-02-15T19:19:11.2456028Z",
      "link": null
    },
    {
      "PostId": "e79e2ea4-73aa-4a5a-9bc0-436bc5ff909e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK:\r\n> or... just find/get the built-in code, and re-add it in to the over-ridden 'changedparent' Script of a Player Object... meh\r\n\r\nYeah, that's the only realistic way to do it. I've looked at that a few times now for various reasons. It's not really elegant, but it works.\r\n\r\nThe script on the `defaultobject` type is:\r\n```\r\n    <changedparent type=\"script\">\r\n      if (game.pov = this) {\r\n        if (IsDefined(\"oldvalue\")) {\r\n          OnEnterRoom(oldvalue)\r\n        }\r\n        else {\r\n          OnEnterRoom(null)\r\n        }\r\n        if (game.gridmap) {\r\n          MergePOVCoordinates\r\n        }\r\n      }\r\n      this.hasbeenmoved = true\r\n    </changedparent>\r\n```\r\nSo you'd want to make sure you don't remove that unless you're sure some of those features aren't necessary.\r\n\r\n<hr />\r\nOooh, here's another way to do it.\r\n\r\nNPC actions:\r\n```\r\nScript:\r\nGoTo:room1\r\nGoTo:room2\r\n```\r\nAnd the 'NPC script' would be:\r\n```\r\nthis.actions = ListCombine (this.actions, this.actions)\r\n```\r\nThe only issue there is that the NPC would take a turn queueing up the second copy of their actions list. Unless you made the NPC Script:\r\n```\r\nthis.actions = ListCombine (this.actions, this.actions)\r\nlist remove (this.actions, \"Script:\")\r\ndo (this, \"takeaturn\")\r\nthis.deletefromlist = false\r\n```\r\nThis duplicates the list of actions, removes the \"Script:\" action from it, and immediately runs the next action in the queue.\r\n\r\n**Or** you could have an exit on the NPC's route with an `npcallowedtouse` script attribute, which adds items to the NPC's actions list. So when the NPC leaves room 1 through that exit, it adds \"GoTo:room1\" to the end of the list.",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK:</p>\n<blockquote>\n<p>or... just find/get the built-in code, and re-add it in to the over-ridden 'changedparent' Script of a Player Object... meh</p>\n</blockquote>\n<p>Yeah, that's the only realistic way to do it. I've looked at that a few times now for various reasons. It's not really elegant, but it works.</p>\n<p>The script on the <code>defaultobject</code> type is:</p>\n<pre><code>    &lt;changedparent type=\"script\"&gt;\n      if (game.pov = this) {\n        if (IsDefined(\"oldvalue\")) {\n          OnEnterRoom(oldvalue)\n        }\n        else {\n          OnEnterRoom(null)\n        }\n        if (game.gridmap) {\n          MergePOVCoordinates\n        }\n      }\n      this.hasbeenmoved = true\n    &lt;/changedparent&gt;\n</code></pre>\n<p>So you'd want to make sure you don't remove that unless you're sure some of those features aren't necessary.</p>\n<hr>\nOooh, here's another way to do it.\n<p>NPC actions:</p>\n<pre><code>Script:\nGoTo:room1\nGoTo:room2\n</code></pre>\n<p>And the 'NPC script' would be:</p>\n<pre><code>this.actions = ListCombine (this.actions, this.actions)\n</code></pre>\n<p>The only issue there is that the NPC would take a turn queueing up the second copy of their actions list. Unless you made the NPC Script:</p>\n<pre><code>this.actions = ListCombine (this.actions, this.actions)\nlist remove (this.actions, \"Script:\")\ndo (this, \"takeaturn\")\nthis.deletefromlist = false\n</code></pre>\n<p>This duplicates the list of actions, removes the \"Script:\" action from it, and immediately runs the next action in the queue.</p>\n<p><strong>Or</strong> you could have an exit on the NPC's route with an <code>npcallowedtouse</code> script attribute, which adds items to the NPC's actions list. So when the NPC leaves room 1 through that exit, it adds \"GoTo:room1\" to the end of the list.</p>\n\n",
      "PostDate": "2019-02-15T19:56:46.6676838Z",
      "LastEditDate": "2019-02-15T20:00:24.5793362Z",
      "link": null
    },
    {
      "PostId": "8970512a-7849-463a-b1b2-d5e298ffbbfa",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow, thanks guys.\r\n\r\nReally appreciate all your help and experience.",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow, thanks guys.</p>\n<p>Really appreciate all your help and experience.</p>\n\n",
      "PostDate": "2019-02-16T06:40:05.4471105Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
