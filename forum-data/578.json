{
  "Topic": {
    "TopicId": "578",
    "ForumId": "10",
    "Title": "Can't get custom command to work on remote objects!  Bug?",
    "LastUpdated": "2004-12-10T20:26:44+00:00",
    "ReplyCount": 18
  },
  "Posts": [
    {
      "PostId": "4403",
      "UserId": 0,
      "Username": "tebling",
      "UserAvatar": null,
      "UserGravatar": "904553e73434b0f6b0abe7233d1de6e1",
      "EditableText": "Ok here's the scenario: the player has a cellphone that they can (or should be able to) use to call other characters in the game, no matter where they are.\n\nSo I have the following code:\n\n[code:4x0xjuyq]\tcommand &lt;call #@obj#&gt; &#123;\n\t\tmsg &lt;#obj#_call&gt;\n\t\tset numeric &lt;curr_want; $objectproperty&#40;#obj#_call; want&#41;$&gt;\n\t&#125;[/code:4x0xjuyq]\n\nThe msg command here is just for testing.\n\nIn any case, the script above does not work when #obj# is not in the same room as the player.  In fact, none of the custom command script is executed - it just prints \"I can't see that anywhere\".\n\nInterestingly, if I change #@obj# to #obj#, then the script executes even though the object is not in the room.  So that's great, BUT then I have the problem that the player can refer to a character by its alias, which breaks the script!  UGH.\n\nIt seems like the difference in behavior between using '@' and not using it is a genuine bug.  Anyone care to comment?  Alex?\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "Ok here's the scenario: the player has a cellphone that they can (or should be able to) use to call other characters in the game, no matter where they are.<br/><br/>So I have the following code:<br/><br/><pre><code>\tcommand &lt;call #@obj#&gt; &#123;<br/>\t\tmsg &lt;#obj#_call&gt;<br/>\t\tset numeric &lt;curr_want; $objectproperty&#40;#obj#_call; want&#41;$&gt;<br/>\t&#125;</code></pre><br/><br/>The msg command here is just for testing.<br/><br/>In any case, the script above does not work when #obj# is not in the same room as the player.  In fact, none of the custom command script is executed - it just prints \"I can't see that anywhere\".<br/><br/>Interestingly, if I change #@obj# to #obj#, then the script executes even though the object is not in the room.  So that's great, BUT then I have the problem that the player can refer to a character by its alias, which breaks the script!  UGH.<br/><br/>It seems like the difference in behavior between using '@' and not using it is a genuine bug.  Anyone care to comment?  Alex?<br/><br/>Thanks!",
      "PostDate": "2004-12-02T01:22:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4404",
      "UserId": 0,
      "Username": "007bond",
      "UserAvatar": null,
      "UserGravatar": "4c2673a2d8666a97b5c1082c5cf2e0e5",
      "EditableText": "you need to check if the object is in the current room that the player is in",
      "EditableFormat": "bbcode",
      "HTML": "you need to check if the object is in the current room that the player is in",
      "PostDate": "2004-12-02T02:03:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4406",
      "UserId": 0,
      "Username": "tebling",
      "UserAvatar": null,
      "UserGravatar": "904553e73434b0f6b0abe7233d1de6e1",
      "EditableText": "1) I should be able to call any character even if they're NOT in the room.  That's the whole problem.\n\n2) If I could move the object TO the current room, then move it back, I would.  But that custom command script doesn't even execute, preventing me from doing that.",
      "EditableFormat": "bbcode",
      "HTML": "1) I should be able to call any character even if they're NOT in the room.  That's the whole problem.<br/><br/>2) If I could move the object TO the current room, then move it back, I would.  But that custom command script doesn't even execute, preventing me from doing that.",
      "PostDate": "2004-12-02T02:07:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4408",
      "UserId": 0,
      "Username": "007bond",
      "UserAvatar": null,
      "UserGravatar": "4c2673a2d8666a97b5c1082c5cf2e0e5",
      "EditableText": "this is where the built-in commands come in.  If we had more built-in commands for these things, it would help a lot more in the time it takes to make games, and it would make more time for people like Alan to write other libraries for more advanced things.  Another dissappointment is that you can't check if an object is in a certain room, just the current room, which sucks.",
      "EditableFormat": "bbcode",
      "HTML": "this is where the built-in commands come in.  If we had more built-in commands for these things, it would help a lot more in the time it takes to make games, and it would make more time for people like Alan to write other libraries for more advanced things.  Another dissappointment is that you can't check if an object is in a certain room, just the current room, which sucks.",
      "PostDate": "2004-12-02T02:15:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4409",
      "UserId": 0,
      "Username": "tebling",
      "UserAvatar": null,
      "UserGravatar": "904553e73434b0f6b0abe7233d1de6e1",
      "EditableText": "Actually, upon further reflection, I think I know why this is happening.\n\nThe whole point of using #@obj# is to disambiguate an object in the current room from another object (presumably elsewhere) with the same alias.  Therefore, if none of the objects with that alias are in the room, then Quest doesn't really know what to do - and so it says \"I can't see that here\".\n\nIt seems like the proper behavior would be to see if objects with duplicate aliases even exist.  If they don't, and there's only one object with that alias (as in my case), then the choice of #obj# is obvious and it shouldn't give up so easily.  It's only in the case where there *are* duplicate aliases where you'd have no way to disambiguate the two - and in that case I can see why you may want to just \"error\" out.",
      "EditableFormat": "bbcode",
      "HTML": "Actually, upon further reflection, I think I know why this is happening.<br/><br/>The whole point of using #@obj# is to disambiguate an object in the current room from another object (presumably elsewhere) with the same alias.  Therefore, if none of the objects with that alias are in the room, then Quest doesn't really know what to do - and so it says \"I can't see that here\".<br/><br/>It seems like the proper behavior would be to see if objects with duplicate aliases even exist.  If they don't, and there's only one object with that alias (as in my case), then the choice of #obj# is obvious and it shouldn't give up so easily.  It's only in the case where there *are* duplicate aliases where you'd have no way to disambiguate the two - and in that case I can see why you may want to just \"error\" out.",
      "PostDate": "2004-12-02T02:17:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4411",
      "UserId": 0,
      "Username": "tebling",
      "UserAvatar": null,
      "UserGravatar": "904553e73434b0f6b0abe7233d1de6e1",
      "EditableText": "007bond - you can check to see where an object is.  Use the $locationof$ function.  Works like a charm!",
      "EditableFormat": "bbcode",
      "HTML": "007bond - you can check to see where an object is.  Use the $locationof$ function.  Works like a charm!",
      "PostDate": "2004-12-02T02:19:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4412",
      "UserId": 0,
      "Username": "007bond",
      "UserAvatar": null,
      "UserGravatar": "4c2673a2d8666a97b5c1082c5cf2e0e5",
      "EditableText": "oh.  i didn't know that. tks",
      "EditableFormat": "bbcode",
      "HTML": "oh.  i didn't know that. tks",
      "PostDate": "2004-12-02T02:20:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4413",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "What you want to do is have a cell phone that can basically check to see if an object exists anywhere in the game, then if it does, show the call message for that object, right?\n\nIf so I'd suggest doing something like this...\n\n[code:1gb70l5b]\n\ncommand &lt;call #someone#&gt; &#123;\n     if exists &lt;#someone#&gt; and property &lt;#someone#; call&gt; then &#123;\n          msg &lt;whatever scripts you want to execute if it is someone you can call that exists in the game, go in here&#46;&gt;\n     &#125;\n     else msg &lt;Call who?|n&gt;\n&#125;\n\n[/code:1gb70l5b]\n\nThe \"if exists\" checks if an object is defined in the game, not wether it is in the same room or available to mess with, just that it exists. Alternately you could use \"if real\" to test if an object is defined in the game and is free to be manipulated(available). Hope that helps you get an idea of how you can make what you want to happen.",
      "EditableFormat": "bbcode",
      "HTML": "What you want to do is have a cell phone that can basically check to see if an object exists anywhere in the game, then if it does, show the call message for that object, right?<br/><br/>If so I'd suggest doing something like this...<br/><br/><pre><code><br/><br/>command &lt;call #someone#&gt; &#123;<br/>     if exists &lt;#someone#&gt; and property &lt;#someone#; call&gt; then &#123;<br/>          msg &lt;whatever scripts you want to execute if it is someone you can call that exists in the game, go in here&#46;&gt;<br/>     &#125;<br/>     else msg &lt;Call who?|n&gt;<br/>&#125;<br/><br/></code></pre><br/><br/>The \"if exists\" checks if an object is defined in the game, not wether it is in the same room or available to mess with, just that it exists. Alternately you could use \"if real\" to test if an object is defined in the game and is free to be manipulated(available). Hope that helps you get an idea of how you can make what you want to happen.",
      "PostDate": "2004-12-02T04:35:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4414",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks ITID, but what you've suggested doesn't really address the problem.\n\nThe problem is that I can't use #someone#, I have to use #@someone#, since I've aliased the people's full names with first names.  And if I do that, then no matter whether the object exists or not, it will *always* say \"I can't see that here\" if the object is not in the same room as the player.\n\nMake sense?",
      "EditableFormat": "bbcode",
      "HTML": "Thanks ITID, but what you've suggested doesn't really address the problem.<br/><br/>The problem is that I can't use #someone#, I have to use #@someone#, since I've aliased the people's full names with first names.  And if I do that, then no matter whether the object exists or not, it will *always* say \"I can't see that here\" if the object is not in the same room as the player.<br/><br/>Make sense?",
      "PostDate": "2004-12-02T05:41:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4415",
      "UserId": 0,
      "Username": "007bond",
      "UserAvatar": null,
      "UserGravatar": "4c2673a2d8666a97b5c1082c5cf2e0e5",
      "EditableText": "i get what your saying, and this is why i would like an if statement condition that checked if 1) the object is in a specific room, not just the current room, and 2) to check if an object exists.",
      "EditableFormat": "bbcode",
      "HTML": "i get what your saying, and this is why i would like an if statement condition that checked if 1) the object is in a specific room, not just the current room, and 2) to check if an object exists.",
      "PostDate": "2004-12-02T06:32:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4416",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "All you need to do this is already available in Quest, you just have to use the tools provided  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> \n\nBecause the #@(objname)# construct is designed to disambiguate things [b:6vu0jfaz]locally[/b:6vu0jfaz], you cannot use it easily when you want a command to refer to an object not present in the current (or otherwise specified) room(s).\n\nI hit this same problem when writing typelib - I needed players to be able to act on things that were not actually in the current room as they were in 'containers' - so I wrote a simple function to get around the issue.  I've quickly 'bodged' together this altered function which will I think put you on the right road.\n\nIt looks like this.\n\n[code:6vu0jfaz]define function &lt;realname&gt;\n\tset string &lt;tempname;$parameter&#40;1&#41;$&gt;\n\tset string &lt;realname; &gt;\n\tif exists &lt;#tempname#&gt; then set &lt;realname;#tempname#&gt;\n\tif &#40;#realname#=&#41; then set string &lt;realname;$getobjectname&#40;#tempname#; game&#41;$&gt;\n\treturn &lt;#realname#&gt;\nend define[/code:6vu0jfaz]\n\nand you'd call it like so:\n\n[code:6vu0jfaz]set string &lt;obj; $realname&#40;#obj#&#41;$&gt;[/code:6vu0jfaz]\n\nWhat it does is return the object's proper name when passed either the alias (or the correct name!) as the parameter of the function, but only if the object exists somewhere in the game world. It returns an empty string if the object doesn't exist.\n\nRather that explain how it works, here is a working demo.  I've coded four people in a different room to the player, Boris aliased as 'bartender') who has a called action, Henry (no alias) who also has a called action, Claudia (aliased as 'dancer') no called action and Jenny (no alias and no called action).\n\nObviously only those with 'called' actions will respond to being called, (the guys) the others (girls) will ignore you - a bit like life really <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  These four cover the full range of possibilties between them. \n\nTry this little demo to see how it works.\n\n[code:6vu0jfaz]' &quot;TEST&quot;\n' Created with QDK 3&#46;52 \n\ndefine game &lt;TEST&gt;\n\tasl-version &lt;350&gt;\n\tgametype singleplayer\n\tstart &lt;hall&gt;\n\tgame author &lt;MaDbRiT&gt;\n\tgame info &lt;Created with QDK 3&#46;52&gt;\n\tcommand &lt;call #obj#&gt; &#123;\n\t\tset string &lt;obj; $realname&#40;#obj#&#41;$&gt;\n\t\tif action &lt;#obj#;called&gt; then &#123;\n\t\t\tdoaction &lt;#obj#;called&gt;\n\t\t&#125;\n\t\telse &#123;\n\t\t\tmsg &lt;A nice lady tells you the phone you tried to call is unavailable&#46;&gt;\n\t\t&#125;\n\t&#125;\nend define\n\ndefine synonyms\nend define\n\ndefine function &lt;realname&gt;\n\tset string &lt;tempname;$parameter&#40;1&#41;$&gt;\n\tset string &lt;realname; &gt;\n\tif exists &lt;#tempname#&gt; then set &lt;realname;#tempname#&gt;\n\tif &#40;#realname#=&#41; then set string &lt;realname;$getobjectname&#40;#tempname#; game&#41;$&gt;\n\treturn &lt;#realname#&gt;\nend define\n\n\ndefine room &lt;hall&gt;\n\tlook &lt;The hall&#46;&gt;\n\twest &lt;bar&gt;\nend define\n\ndefine room &lt;bar&gt;\n\tlook &lt;The bar&#46;&gt;\n\teast &lt;hall&gt;\n\t\n\tdefine object &lt;Boris&gt;\n\t\talias &lt;bartender&gt;\n\t\tprefix &lt;the&gt;\n\t\taction &lt;called&gt; &#123;\n\t\tmsg &lt;From the earpiece come Boris's cultured tones - &quot;Naff off I'm busy!&quot;&gt;\n\t\t&#125;\n\tend define\n\t\n\tdefine object &lt;Claudia&gt;\n\t\talias &lt;dancer&gt;\n\t\tprefix &lt;the&gt;\n\tend define \n\t\n\tdefine object &lt;Henry&gt;\n\t\taction &lt;called&gt; &#123;\n\t\tmsg &lt;From the earpiece comes Henry's high pitced voice - &quot;Oooh, hello sailor!&quot;&gt;\n\t\t&#125;\n\tend define\n\t\n\tdefine object &lt;Jenny&gt;\n\t\n\tend define\n\t\nend define\n\ndefine text &lt;intro&gt;\n\nend define\n\ndefine text &lt;win&gt;\n\nend define\n\ndefine text &lt;lose&gt;\n\nend define[/code:6vu0jfaz]\n\nIn a real game you might want to differentiate between those who exist and have no phone and those who simply don't exist - that's a simple 'if' based on the content of #realname# and I'll leave it to you.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "All you need to do this is already available in Quest, you just have to use the tools provided  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> <br/><br/>Because the #@(objname)# construct is designed to disambiguate things <span style=\"font-weight:bold;\">locally</span>, you cannot use it easily when you want a command to refer to an object not present in the current (or otherwise specified) room(s).<br/><br/>I hit this same problem when writing typelib - I needed players to be able to act on things that were not actually in the current room as they were in 'containers' - so I wrote a simple function to get around the issue.  I've quickly 'bodged' together this altered function which will I think put you on the right road.<br/><br/>It looks like this.<br/><br/><pre><code>define function &lt;realname&gt;<br/>\tset string &lt;tempname;$parameter&#40;1&#41;$&gt;<br/>\tset string &lt;realname; &gt;<br/>\tif exists &lt;#tempname#&gt; then set &lt;realname;#tempname#&gt;<br/>\tif &#40;#realname#=&#41; then set string &lt;realname;$getobjectname&#40;#tempname#; game&#41;$&gt;<br/>\treturn &lt;#realname#&gt;<br/>end define</code></pre><br/><br/>and you'd call it like so:<br/><br/><pre><code>set string &lt;obj; $realname&#40;#obj#&#41;$&gt;</code></pre><br/><br/>What it does is return the object's proper name when passed either the alias (or the correct name!) as the parameter of the function, but only if the object exists somewhere in the game world. It returns an empty string if the object doesn't exist.<br/><br/>Rather that explain how it works, here is a working demo.  I've coded four people in a different room to the player, Boris aliased as 'bartender') who has a called action, Henry (no alias) who also has a called action, Claudia (aliased as 'dancer') no called action and Jenny (no alias and no called action).<br/><br/>Obviously only those with 'called' actions will respond to being called, (the guys) the others (girls) will ignore you - a bit like life really <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->  These four cover the full range of possibilties between them. <br/><br/>Try this little demo to see how it works.<br/><br/><pre><code>' &quot;TEST&quot;<br/>' Created with QDK 3&#46;52 <br/><br/>define game &lt;TEST&gt;<br/>\tasl-version &lt;350&gt;<br/>\tgametype singleplayer<br/>\tstart &lt;hall&gt;<br/>\tgame author &lt;MaDbRiT&gt;<br/>\tgame info &lt;Created with QDK 3&#46;52&gt;<br/>\tcommand &lt;call #obj#&gt; &#123;<br/>\t\tset string &lt;obj; $realname&#40;#obj#&#41;$&gt;<br/>\t\tif action &lt;#obj#;called&gt; then &#123;<br/>\t\t\tdoaction &lt;#obj#;called&gt;<br/>\t\t&#125;<br/>\t\telse &#123;<br/>\t\t\tmsg &lt;A nice lady tells you the phone you tried to call is unavailable&#46;&gt;<br/>\t\t&#125;<br/>\t&#125;<br/>end define<br/><br/>define synonyms<br/>end define<br/><br/>define function &lt;realname&gt;<br/>\tset string &lt;tempname;$parameter&#40;1&#41;$&gt;<br/>\tset string &lt;realname; &gt;<br/>\tif exists &lt;#tempname#&gt; then set &lt;realname;#tempname#&gt;<br/>\tif &#40;#realname#=&#41; then set string &lt;realname;$getobjectname&#40;#tempname#; game&#41;$&gt;<br/>\treturn &lt;#realname#&gt;<br/>end define<br/><br/><br/>define room &lt;hall&gt;<br/>\tlook &lt;The hall&#46;&gt;<br/>\twest &lt;bar&gt;<br/>end define<br/><br/>define room &lt;bar&gt;<br/>\tlook &lt;The bar&#46;&gt;<br/>\teast &lt;hall&gt;<br/>\t<br/>\tdefine object &lt;Boris&gt;<br/>\t\talias &lt;bartender&gt;<br/>\t\tprefix &lt;the&gt;<br/>\t\taction &lt;called&gt; &#123;<br/>\t\tmsg &lt;From the earpiece come Boris's cultured tones - &quot;Naff off I'm busy!&quot;&gt;<br/>\t\t&#125;<br/>\tend define<br/>\t<br/>\tdefine object &lt;Claudia&gt;<br/>\t\talias &lt;dancer&gt;<br/>\t\tprefix &lt;the&gt;<br/>\tend define <br/>\t<br/>\tdefine object &lt;Henry&gt;<br/>\t\taction &lt;called&gt; &#123;<br/>\t\tmsg &lt;From the earpiece comes Henry's high pitced voice - &quot;Oooh, hello sailor!&quot;&gt;<br/>\t\t&#125;<br/>\tend define<br/>\t<br/>\tdefine object &lt;Jenny&gt;<br/>\t<br/>\tend define<br/>\t<br/>end define<br/><br/>define text &lt;intro&gt;<br/><br/>end define<br/><br/>define text &lt;win&gt;<br/><br/>end define<br/><br/>define text &lt;lose&gt;<br/><br/>end define</code></pre><br/><br/>In a real game you might want to differentiate between those who exist and have no phone and those who simply don't exist - that's a simple 'if' based on the content of #realname# and I'll leave it to you.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2004-12-02T12:28:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4422",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Al, Let's suppose the alias &lt;&gt; real name...\n\nIn your script it would go through to the second if (if (#realname#=)) ... The problem is it will execute either of these if's....\n\nif exists &lt;#alias#&gt; will execute if alias = realname\nif (#realname#=)  will execute if the first doesn't run.\n\nI don't understand why you don't just use $getobjectname()$ straight away, instead of using the first if... surely even if the object wasn't alias'ed (or the alias is the objects real name) it would return the objects name anyway...",
      "EditableFormat": "bbcode",
      "HTML": "Al, Let's suppose the alias &lt;&gt; real name...<br/><br/>In your script it would go through to the second if (if (#realname#=)) ... The problem is it will execute either of these if's....<br/><br/>if exists &lt;#alias#&gt; will execute if alias = realname<br/>if (#realname#=)  will execute if the first doesn't run.<br/><br/>I don't understand why you don't just use $getobjectname()$ straight away, instead of using the first if... surely even if the object wasn't alias'ed (or the alias is the objects real name) it would return the objects name anyway...",
      "PostDate": "2004-12-02T15:15:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4424",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "CW wrote:\n\n[quote:3fcoakmz]I don't understand why you don't just use $getobjectname()$ straight away, instead of using the first if... surely even if the object wasn't alias'ed (or the alias is the objects real name) it would return the objects name anyway[/quote:3fcoakmz]\n\nsurely? ahem - I'm afraid not, $getobjectname([i:3fcoakmz]#whatever#[/i:3fcoakmz])$  actually returns an [b:3fcoakmz]error[/b:3fcoakmz] if you supply it with something that is not a valid alias. That is why I do the check in two stages.\n\nMy code does it this way;\n\nI first check if an object with the passed name exists (note that this test will only return true if the [i:3fcoakmz]actual object name [/i:3fcoakmz]is passed, an alias will return false)\n\nif it does return true, the job is done and my function returns the real name of the object <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nIf the first check returns 'false' it may be that the name passed was for an object that doesn't exist at all, or that the name passed was in fact an alias for a real object in the game. \n\nSo the second test (only be performed if the first has failed) therefore uses $getobjectname(#obj#; game)$ to return either the real name of the #obj# if an alias for an existing object was passed, or an error (\"!\") if it wasn't an alias that was passed (e.g. an unrecognized word).\n\nThe function thus returns the \"real name\" of the #obj# passed, whether  you pass it the real name or an alias - so long as the #obj# actually exists somewhere in the game. If the #obj# passed isn't resolvable to a real object in the game then the function returns an error.\n\nI'm sure it could be written other ways, but I hope this explains why I didn't go straight to the '$getobjectname(#obj#; location)$' test <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) -->\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "CW wrote:<br/><br/><blockquote><p>I don't understand why you don't just use $getobjectname()$ straight away, instead of using the first if... surely even if the object wasn't alias'ed (or the alias is the objects real name) it would return the objects name anyway</p></blockquote><br/><br/>surely? ahem - I'm afraid not, $getobjectname(<span style=\"font-style:italic;\">#whatever#</span>)$  actually returns an <span style=\"font-weight:bold;\">error</span> if you supply it with something that is not a valid alias. That is why I do the check in two stages.<br/><br/>My code does it this way;<br/><br/>I first check if an object with the passed name exists (note that this test will only return true if the <span style=\"font-style:italic;\">actual object name </span>is passed, an alias will return false)<br/><br/>if it does return true, the job is done and my function returns the real name of the object <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>If the first check returns 'false' it may be that the name passed was for an object that doesn't exist at all, or that the name passed was in fact an alias for a real object in the game. <br/><br/>So the second test (only be performed if the first has failed) therefore uses $getobjectname(#obj#; game)$ to return either the real name of the #obj# if an alias for an existing object was passed, or an error (\"!\") if it wasn't an alias that was passed (e.g. an unrecognized word).<br/><br/>The function thus returns the \"real name\" of the #obj# passed, whether  you pass it the real name or an alias - so long as the #obj# actually exists somewhere in the game. If the #obj# passed isn't resolvable to a real object in the game then the function returns an error.<br/><br/>I'm sure it could be written other ways, but I hope this explains why I didn't go straight to the '$getobjectname(#obj#; location)$' test <!-- s:-) --><img src=\"{SMILIES_PATH}/icon_e_smile.gif\" alt=\":-)\" title=\"Smile\" /><!-- s:-) --><br/><br/>Al (MaDbRiT)",
      "PostDate": "2004-12-02T16:13:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4425",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Ah, ok. Thanks Al for the swift reply...\n\nSo it checks the name, if it doesn't exist, then it get's either the alias or an ! (error).\nReturning the error if it is an error.... OK, I get it now.\nCheers.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, ok. Thanks Al for the swift reply...<br/><br/>So it checks the name, if it doesn't exist, then it get's either the alias or an ! (error).<br/>Returning the error if it is an error.... OK, I get it now.<br/>Cheers.",
      "PostDate": "2004-12-02T16:54:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4427",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "As educational as this post thread was (and it really was), tebling, how many people are actually needed to be called in this game?  \n\nJust curious... <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->",
      "EditableFormat": "bbcode",
      "HTML": "As educational as this post thread was (and it really was), tebling, how many people are actually needed to be called in this game?  <br/><br/>Just curious... <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: -->",
      "PostDate": "2004-12-02T18:46:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4428",
      "UserId": 0,
      "Username": "tebling",
      "UserAvatar": null,
      "UserGravatar": "904553e73434b0f6b0abe7233d1de6e1",
      "EditableText": "Al,\n\nYour workaround is quite elegant, thanks VERY much for posting it!  I'll drop it in when I get a chance.\n\nSteve, I've got 8 characters in so far, but there will be more.  I'm working on a relationship building sim (a subset of which is the so-called \"dating sim\"), so that's why the \"call\" command needs to be as abstract as possible.\n\nThanks again guys!",
      "EditableFormat": "bbcode",
      "HTML": "Al,<br/><br/>Your workaround is quite elegant, thanks VERY much for posting it!  I'll drop it in when I get a chance.<br/><br/>Steve, I've got 8 characters in so far, but there will be more.  I'm working on a relationship building sim (a subset of which is the so-called \"dating sim\"), so that's why the \"call\" command needs to be as abstract as possible.<br/><br/>Thanks again guys!",
      "PostDate": "2004-12-02T19:40:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4532",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "I'm posting under this thread because it seems somewhat related.\n\nFirst, here is a clip from the help section in QDK:\n\n[quote:18umtdg3]Actions: Actions are script commands that you associate with an object, room or object type. In our \"edible\" example above we would add an action called \"eat\" to our object type. We might then add a Custom Command which would accept \"eat #@object#\", and then its script would run #object#'s \"eat\" action. This would then allow any edible object to be eaten - and if we needed a particular object to do something special when eaten, we could simply override our default \"eat\" action from our \"edible\" type by adding a different \"eat\" action to our particular object.[/quote:18umtdg3]\n\nThis makes me believe that you set it up in the game properties.  I was wondering when you create an object, can you, under the interations tab of that object, set up a custom command to interact with that one object?  I have a few examples but here is just one:  Let's say the player finds a genii's lamp.  The obvious command would probably be 'rub lamp' and then run a script based on that command.  Does 'rub lamp' have to be in the game properties or can't the word 'rub' be in the actions tab under the lamp object itself?  \nI tried that but it doesn't seem to work.\n\nThe reason why I had used the word 'rub' in that way was because Al MaDbRiT gave me an idea when he used the word 'take' under the action tab.  (which works)",
      "EditableFormat": "bbcode",
      "HTML": "I'm posting under this thread because it seems somewhat related.<br/><br/>First, here is a clip from the help section in QDK:<br/><br/><blockquote><p>Actions: Actions are script commands that you associate with an object, room or object type. In our \"edible\" example above we would add an action called \"eat\" to our object type. We might then add a Custom Command which would accept \"eat #@object#\", and then its script would run #object#'s \"eat\" action. This would then allow any edible object to be eaten - and if we needed a particular object to do something special when eaten, we could simply override our default \"eat\" action from our \"edible\" type by adding a different \"eat\" action to our particular object.</p></blockquote><br/><br/>This makes me believe that you set it up in the game properties.  I was wondering when you create an object, can you, under the interations tab of that object, set up a custom command to interact with that one object?  I have a few examples but here is just one:  Let's say the player finds a genii's lamp.  The obvious command would probably be 'rub lamp' and then run a script based on that command.  Does 'rub lamp' have to be in the game properties or can't the word 'rub' be in the actions tab under the lamp object itself?  <br/>I tried that but it doesn't seem to work.<br/><br/>The reason why I had used the word 'rub' in that way was because Al MaDbRiT gave me an idea when he used the word 'take' under the action tab.  (which works)",
      "PostDate": "2004-12-10T19:34:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4533",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi Steve\n\nI'm afraid the answer is no (AFAIK) - you can set up a user command globally (in the game properties) which will be available anywhere in the game, or locally (in a room definition block) in which case the command works only in the one room it is defined in.  You cannot set up a user command within an object definition to only work with that object.\n\nThe reason that adding a 'take' action works is because typelib adds a global user command 'take' that calls the inbuilt 'take' action of whatever object it is used on, so you are just replacing the action bit called by the user command in typelib with your own variation.\n\nWhat you probably ought to do is code a global 'rub' command, but then use a conditional to restrict it to only being useful on the lamp object.  I say global not local because this has the added bonus of not giving the impression that 'rub' is not understood as a word if it is tried on another object.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Hi Steve<br/><br/>I'm afraid the answer is no (AFAIK) - you can set up a user command globally (in the game properties) which will be available anywhere in the game, or locally (in a room definition block) in which case the command works only in the one room it is defined in.  You cannot set up a user command within an object definition to only work with that object.<br/><br/>The reason that adding a 'take' action works is because typelib adds a global user command 'take' that calls the inbuilt 'take' action of whatever object it is used on, so you are just replacing the action bit called by the user command in typelib with your own variation.<br/><br/>What you probably ought to do is code a global 'rub' command, but then use a conditional to restrict it to only being useful on the lamp object.  I say global not local because this has the added bonus of not giving the impression that 'rub' is not understood as a word if it is tried on another object.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2004-12-10T20:20:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4534",
      "UserId": 0,
      "Username": "steve the gaming guy",
      "UserAvatar": null,
      "UserGravatar": "6577a0affcb6ea711c75baf052ffd08a",
      "EditableText": "Ah, ok.  I was going to set it up globally but wanted to check on that question first.\n\nOne thing I noticed in Alex's example in help on QDK is the eating action.  You can 'eat' an object if it has the edible type which basically means you can use one action on many things (based on type).  So of course, my question is the opposite where I was asking if multiple custom commands can be entered for one object.\nSoooo, seeing that the answer is no, that frees my mind a bit so while I'm working on the global commands I won't be thinking constantly, \"Gee, is there a quicker way to do this?\"\nhahaha...Thanks again, Mr. bRiT <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "Ah, ok.  I was going to set it up globally but wanted to check on that question first.<br/><br/>One thing I noticed in Alex's example in help on QDK is the eating action.  You can 'eat' an object if it has the edible type which basically means you can use one action on many things (based on type).  So of course, my question is the opposite where I was asking if multiple custom commands can be entered for one object.<br/>Soooo, seeing that the answer is no, that frees my mind a bit so while I'm working on the global commands I won't be thinking constantly, \"Gee, is there a quicker way to do this?\"<br/>hahaha...Thanks again, Mr. bRiT <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2004-12-10T20:26:44+00:00",
      "LastEditDate": null
    }
  ]
}
