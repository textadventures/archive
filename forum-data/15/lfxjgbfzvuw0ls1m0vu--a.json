{
  "Topic": {
    "TopicId": "lfxjgbfzvuw0ls1m0vu--a",
    "ForumId": "15",
    "Title": "Pop-up settings form",
    "LastUpdated": "2024-05-28T08:16:39.7278289Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4f0fbd32-abd8-46db-9c1f-36609d51d503",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was thinking of making use of a pop-up form to handle a settings screen and/or a status display screen, what mechanisms does QuestJS and JQuery have for pop-up forms like this?",
      "EditableFormat": "markdown",
      "HTML": "<p>I was thinking of making use of a pop-up form to handle a settings screen and/or a status display screen, what mechanisms does QuestJS and JQuery have for pop-up forms like this?</p>\n\n",
      "PostDate": "2024-05-28T08:16:39.7278289Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c05e09ce-127f-4618-bf4b-6731f60a3d2e",
      "UserId": 659063,
      "Username": "cellarderecho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c0c504aab6249b22fd8633e13dc9c62f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There are some good examples in the Wiki for this, I'd start with this page, since it seems the closest to what you're asking about, but you'll find lots of useful information in the other related pages under the Dialogue Boxes and Other Elements headings.\r\n<https://github.com/ThePix/QuestJS/wiki/Adding-a-toolbar>",
      "EditableFormat": "markdown",
      "HTML": "<p>There are some good examples in the Wiki for this, I'd start with this page, since it seems the closest to what you're asking about, but you'll find lots of useful information in the other related pages under the Dialogue Boxes and Other Elements headings.<br>\n<a href=\"https://github.com/ThePix/QuestJS/wiki/Adding-a-toolbar\">https://github.com/ThePix/QuestJS/wiki/Adding-a-toolbar</a></p>\n\n",
      "PostDate": "2024-05-28T23:05:26.3839824Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f0765004-551e-4f5a-9282-6bfaaf1725c8",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Would this also suit a pop-up form to add item objects to the game with editable details like a character creation screen?",
      "EditableFormat": "markdown",
      "HTML": "<p>Would this also suit a pop-up form to add item objects to the game with editable details like a character creation screen?</p>\n\n",
      "PostDate": "2024-06-04T18:28:34.3662687Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "588fb45b-f490-4ff7-8a48-e17f967f9526",
      "UserId": 659063,
      "Username": "cellarderecho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c0c504aab6249b22fd8633e13dc9c62f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, that's how I would recommend implementing a character creation screen. There is a page in the wiki specifically about adding a character creation screen, although that implementation is more complicated.\r\n<https://github.com/ThePix/QuestJS/wiki/Character-Creation>",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, that's how I would recommend implementing a character creation screen. There is a page in the wiki specifically about adding a character creation screen, although that implementation is more complicated.<br>\n<a href=\"https://github.com/ThePix/QuestJS/wiki/Character-Creation\">https://github.com/ThePix/QuestJS/wiki/Character-Creation</a></p>\n\n",
      "PostDate": "2024-06-05T23:39:32.289087Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d96ecf16-1333-404d-9a08-9e140394fe2c",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm, I need to have a delayed one so I can call it to create a secondary character NPC with a name and other attributes besides the main player one at the start, it seems settings.setUpDialog() just ties back to the settings.startingDialog stuff right? Which is only going to have one setup for the main player.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm, I need to have a delayed one so I can call it to create a secondary character NPC with a name and other attributes besides the main player one at the start, it seems settings.setUpDialog() just ties back to the settings.startingDialog stuff right? Which is only going to have one setup for the main player.</p>\n\n",
      "PostDate": "2024-06-06T06:46:34.7050505Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3a0ca95-5afd-44ca-8dd0-f8e7ea255240",
      "UserId": 659063,
      "Username": "cellarderecho",
      "AvatarUrl": "https://secure.gravatar.com/avatar/c0c504aab6249b22fd8633e13dc9c62f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In that case, `io.dialog(widgets)`fits your needs even better, since you can call it at any point.\r\n<https://github.com/ThePix/QuestJS/wiki/user-Input#dialog-input>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>In that case, <code>io.dialog(widgets)</code>fits your needs even better, since you can call it at any point.<br>\n<a href=\"https://github.com/ThePix/QuestJS/wiki/user-Input#dialog-input\">https://github.com/ThePix/QuestJS/wiki/user-Input#dialog-input</a></p>\n\n",
      "PostDate": "2024-06-06T22:27:09.88612Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5b168b3b-7e0c-49e9-94ba-51a942f6f660",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll certainly take a look at that when I can, thanks! I actually took a dive into how the settings character creator worked and made a manually opened \"#dialog\" form that worked the same way and could be called any time I liked, but got frustrated that it only had an OK button on the pop-up and no cancel.\r\n\r\nSo I spent a while finding everything I needed from the Index.html and the default.css in order to make a duplicate version I called \"#dialogueOKCancel\" that had a controllable Cancel button as well as an OK button so I could make changes with the OK one and undo with the Cancel.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll certainly take a look at that when I can, thanks! I actually took a dive into how the settings character creator worked and made a manually opened \"#dialog\" form that worked the same way and could be called any time I liked, but got frustrated that it only had an OK button on the pop-up and no cancel.</p>\n<p>So I spent a while finding everything I needed from the Index.html and the default.css in order to make a duplicate version I called \"#dialogueOKCancel\" that had a controllable Cancel button as well as an OK button so I could make changes with the OK one and undo with the Cancel.</p>\n\n",
      "PostDate": "2024-06-06T22:52:44.4780342Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "12d7616c-9c4f-410f-9e68-e93d3bbe3bb9",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Index.html inside the < body> underneath the other dialog\r\n\r\n```\r\n    <dialog id=\"dialogOKCancel\">\r\n        <form method=\"dialog\">\r\n            <h4 id=\"dialogOKCancel-title\"></h4>\r\n            <hr />\r\n            <div id=\"dialogOKCancel-content\"></div>\r\n            <div id=\"dialogOKCancel-footer\" style=\"text-align:right\">\r\n                <hr />\r\n                <button id=\"dialogOKCancel-OKButton\" value=\"default\">OK</button>\r\n                <button id=\"dialogOKCancel-CancelButton\" value=\"default\">Cancel</button>\r\n            </div>\r\n        </form>\r\n    </dialog>\r\n```\r\n\r\nstyle.css to format the look of the new dialogOKCancel in the same way dialog is in the default.css\r\n```\r\n#dialogOKCancel {\r\n    display: none;\r\n    z-index: 10;\r\n    position: fixed;\r\n}\r\n\r\n#dialogOKCancel p {\r\n    padding: 10px 0px 10px 0px;\r\n    text-align: justify;\r\n}\r\n```\r\n\r\nA custom button just to popup and display and allow change the player info after the settings setup it up at the start of the game\r\n```\r\ncreateItem(\"PlayerInfo\", {\r\n    alias: \"Player Info\",\r\n    loc: \"lounge\",\r\n    hereVerbs: [\"Interact\"],\r\n    examine: \"A machine for displaying the player information\",\r\n    interact: function () {\r\n        displayPlayerInfo()\r\n        msg(\"<a href=\\\"javascript:void(0);\\\" onclick=\\\"settings.setUpDialog()\\\">Change?</a>\")\r\n    },\r\n})\r\n\r\nfunction displayPlayerInfo() {\r\n\r\n    const diag = document.querySelector(\"#dialogOKCancel\")\r\n    document.querySelector(\"#dialogOKCancel-title\").innerHTML = \"Change Player Info\"\r\n\r\n    let playerInfoHtml = ''\r\n    playerInfoHtml += '<p> Name: <input id=\"CPIName\" type=\"text\" value=\"' + player.alias + '\"/></p>'\r\n    playerInfoHtml += '<p>Species: <input id=\"CPISpecies\" type=\"text\" value=\"' + player.species + '\"/></p>'\r\n    playerInfoHtml += '<p>Gender: <select id=\"CPIGender\">'\r\n    for (const s of settings.genders) {\r\n        if (s.name === player.gender) {\r\n            playerInfoHtml += '<option value=\"' + s.name + '\" selected>' + s.name + '</option>'\r\n        }\r\n        else {\r\n            playerInfoHtml += '<option value=\"' + s.name + '\">' + s.name + '</option>'\r\n        }\r\n    }\r\n    playerInfoHtml += '</select></p>'\r\n\r\n    console.log(\"Change Player Info Diag Style - \" + diag.style)\r\n\r\n    document.querySelector(\"#dialogOKCancel-content\").innerHTML = playerInfoHtml\r\n    document.querySelector(\"#dialogOKCancel-OKButton\").addEventListener('click', function () { changePlayerInfoOKClick(diag); })\r\n    document.querySelector(\"#dialogOKCancel-CancelButton\").addEventListener('click', function () { changePlayerInfoCancelClick(diag);})\r\n    diag.style.display = 'block'\r\n    diag.style.width = 500 + 'px'\r\n    diag.style.height = 'auto'\r\n    diag.style.top = '100px'\r\n\r\n    io.disable()\r\n    diag.show()\r\n}\r\n\r\nfunction changePlayerInfoOKClick(diag) {\r\n    changePlayerInfoOnClick()\r\n    io.enable()\r\n    document.querySelector('#textbox').focus()\r\n    document.querySelector(\"#dialogOKCancel\").style.display = 'none'\r\n}\r\n\r\nfunction changePlayerInfoCancelClick(diag) {\r\n    io.enable()\r\n    document.querySelector('#textbox').focus()\r\n    document.querySelector(\"#dialogOKCancel\").style.display = 'none'\r\n}\r\n\r\nfunction changePlayerInfoOnClick() {\r\n    player.species = document.querySelector(\"#CPISpecies\").value\r\n    player.gender = document.querySelector(\"#CPIGender\").value\r\n    player.setAlias(document.querySelector(\"#CPIName\").value)\r\n}\r\n```\r\n\r\ncode.js the command for the Interact verb on the button\r\n```\r\ncommands.unshift(new Cmd('interact', {\r\n    regex: /^(?:interact) (.+)$/,\r\n    objects: [\r\n        { scope: parser.isHere },\r\n    ],\r\n    default: function (item) {\r\n        msg(\"You can't do that...\")\r\n        return false\r\n    },\r\n}))\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Index.html inside the &lt; body&gt; underneath the other dialog</p>\n<pre><code>    &lt;dialog id=\"dialogOKCancel\"&gt;\n        &lt;form method=\"dialog\"&gt;\n            &lt;h4 id=\"dialogOKCancel-title\"&gt;&lt;/h4&gt;\n            &lt;hr /&gt;\n            &lt;div id=\"dialogOKCancel-content\"&gt;&lt;/div&gt;\n            &lt;div id=\"dialogOKCancel-footer\" style=\"text-align:right\"&gt;\n                &lt;hr /&gt;\n                &lt;button id=\"dialogOKCancel-OKButton\" value=\"default\"&gt;OK&lt;/button&gt;\n                &lt;button id=\"dialogOKCancel-CancelButton\" value=\"default\"&gt;Cancel&lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/dialog&gt;\n</code></pre>\n<p>style.css to format the look of the new dialogOKCancel in the same way dialog is in the default.css</p>\n<pre><code>#dialogOKCancel {\n    display: none;\n    z-index: 10;\n    position: fixed;\n}\n\n#dialogOKCancel p {\n    padding: 10px 0px 10px 0px;\n    text-align: justify;\n}\n</code></pre>\n<p>A custom button just to popup and display and allow change the player info after the settings setup it up at the start of the game</p>\n<pre><code>createItem(\"PlayerInfo\", {\n    alias: \"Player Info\",\n    loc: \"lounge\",\n    hereVerbs: [\"Interact\"],\n    examine: \"A machine for displaying the player information\",\n    interact: function () {\n        displayPlayerInfo()\n        msg(\"&lt;a href=\\\"javascript:void(0);\\\" onclick=\\\"settings.setUpDialog()\\\"&gt;Change?&lt;/a&gt;\")\n    },\n})\n\nfunction displayPlayerInfo() {\n\n    const diag = document.querySelector(\"#dialogOKCancel\")\n    document.querySelector(\"#dialogOKCancel-title\").innerHTML = \"Change Player Info\"\n\n    let playerInfoHtml = ''\n    playerInfoHtml += '&lt;p&gt; Name: &lt;input id=\"CPIName\" type=\"text\" value=\"' + player.alias + '\"/&gt;&lt;/p&gt;'\n    playerInfoHtml += '&lt;p&gt;Species: &lt;input id=\"CPISpecies\" type=\"text\" value=\"' + player.species + '\"/&gt;&lt;/p&gt;'\n    playerInfoHtml += '&lt;p&gt;Gender: &lt;select id=\"CPIGender\"&gt;'\n    for (const s of settings.genders) {\n        if (s.name === player.gender) {\n            playerInfoHtml += '&lt;option value=\"' + s.name + '\" selected&gt;' + s.name + '&lt;/option&gt;'\n        }\n        else {\n            playerInfoHtml += '&lt;option value=\"' + s.name + '\"&gt;' + s.name + '&lt;/option&gt;'\n        }\n    }\n    playerInfoHtml += '&lt;/select&gt;&lt;/p&gt;'\n\n    console.log(\"Change Player Info Diag Style - \" + diag.style)\n\n    document.querySelector(\"#dialogOKCancel-content\").innerHTML = playerInfoHtml\n    document.querySelector(\"#dialogOKCancel-OKButton\").addEventListener('click', function () { changePlayerInfoOKClick(diag); })\n    document.querySelector(\"#dialogOKCancel-CancelButton\").addEventListener('click', function () { changePlayerInfoCancelClick(diag);})\n    diag.style.display = 'block'\n    diag.style.width = 500 + 'px'\n    diag.style.height = 'auto'\n    diag.style.top = '100px'\n\n    io.disable()\n    diag.show()\n}\n\nfunction changePlayerInfoOKClick(diag) {\n    changePlayerInfoOnClick()\n    io.enable()\n    document.querySelector('#textbox').focus()\n    document.querySelector(\"#dialogOKCancel\").style.display = 'none'\n}\n\nfunction changePlayerInfoCancelClick(diag) {\n    io.enable()\n    document.querySelector('#textbox').focus()\n    document.querySelector(\"#dialogOKCancel\").style.display = 'none'\n}\n\nfunction changePlayerInfoOnClick() {\n    player.species = document.querySelector(\"#CPISpecies\").value\n    player.gender = document.querySelector(\"#CPIGender\").value\n    player.setAlias(document.querySelector(\"#CPIName\").value)\n}\n</code></pre>\n<p>code.js the command for the Interact verb on the button</p>\n<pre><code>commands.unshift(new Cmd('interact', {\n    regex: /^(?:interact) (.+)$/,\n    objects: [\n        { scope: parser.isHere },\n    ],\n    default: function (item) {\n        msg(\"You can't do that...\")\n        return false\n    },\n}))\n</code></pre>\n\n",
      "PostDate": "2024-06-07T06:52:06.7454775Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
