{
  "Topic": {
    "TopicId": "a7hur6o3kkmqcyu8juuopw",
    "ForumId": "15",
    "Title": "Quest 6 - Question/Request - Use of text processor parameters in room descriptions",
    "LastUpdated": "2021-08-22T12:37:48.9817647Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "12188d5a-3eaf-4784-8d37-f14e584a8fb9",
      "UserId": 363515,
      "Username": "Kernog",
      "AvatarUrl": "https://i.imgur.com/IupEsRDb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would like to have a room description have a couple variations depending on the POV character's gender. This would mean using the text processor's `{pv:}`, `{pa:}`, etc. in some occurences.\r\n\r\nIn this current version of Q6 (0.8), these functions require the use of a msg function to define the parameters it will use (as I understand it).\r\n\r\nThe issue is that a room's desc must always be a string, so I must use a workaround, such as writing `desc`as a function returning a string (which is slightly more cumbersome as I must concatenate `player.pronouns.xxxx`), or using the `afterEnter`property.\r\n\r\nMy question/request is (or rather are):\r\n* Is there a way to use the text processors conjugation functions without a parameter, or to define the item by its name instead of a parameter, or even to default to `player`or `char` if there is no `item`property\r\n* Is there a possibility in a future version to make the `desc`property a \"printOrRun\" function, like the  `examine` property of items",
      "EditableFormat": "markdown",
      "HTML": "<p>I would like to have a room description have a couple variations depending on the POV character's gender. This would mean using the text processor's <code>{pv:}</code>, <code>{pa:}</code>, etc. in some occurences.</p>\n<p>In this current version of Q6 (0.8), these functions require the use of a msg function to define the parameters it will use (as I understand it).</p>\n<p>The issue is that a room's desc must always be a string, so I must use a workaround, such as writing <code>desc</code>as a function returning a string (which is slightly more cumbersome as I must concatenate <code>player.pronouns.xxxx</code>), or using the <code>afterEnter</code>property.</p>\n<p>My question/request is (or rather are):</p>\n<ul>\n<li>Is there a way to use the text processors conjugation functions without a parameter, or to define the item by its name instead of a parameter, or even to default to <code>player</code>or <code>char</code> if there is no <code>item</code>property</li>\n<li>Is there a possibility in a future version to make the <code>desc</code>property a \"printOrRun\" function, like the  <code>examine</code> property of items</li>\n</ul>\n\n",
      "PostDate": "2021-08-22T12:37:48.9817647Z",
      "LastEditDate": "2021-08-22T12:43:43.3224918Z",
      "link": null
    },
    {
      "PostId": "c3fa5e57-412c-4028-99f6-04d33189ee3d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One way to do it in the current version would be to pass the string through processText before returning it.\r\n\r\n```\r\n  desc:function() {\r\n    let s = ''\r\n    // ...\r\n    return processText(s, params)\r\n  }\r\n```\r\n\r\nThe reason it wants a string returned is so the text processor can be used, together with `settings.roomTemplate`. If   the parameters had player built in, would that do what you want? Looking at the code, some directives do that already, so it would be good if the all did.",
      "EditableFormat": "markdown",
      "HTML": "<p>One way to do it in the current version would be to pass the string through processText before returning it.</p>\n<pre><code>  desc:function() {\n    let s = ''\n    // ...\n    return processText(s, params)\n  }\n</code></pre>\n<p>The reason it wants a string returned is so the text processor can be used, together with <code>settings.roomTemplate</code>. If   the parameters had player built in, would that do what you want? Looking at the code, some directives do that already, so it would be good if the all did.</p>\n\n",
      "PostDate": "2021-08-22T20:35:52.8212151Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
