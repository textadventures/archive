{
  "Topic": {
    "TopicId": "2x5hqtmri0m4jrvuggfdsg",
    "ForumId": "15",
    "Title": "A Careless Mistake",
    "LastUpdated": "2020-12-14T23:54:29.9586005Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d79c4f58-196c-4d7e-9924-241be0c19192",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "# **EDIT**\r\n\r\nI made a careless mistake in my code.  There is nothing wrong with ```this``` in either of these examples.\r\n\r\nI forgot to make the item in example 1 a container.  Then, I made a mountain (or at least a small hill) out of a mole hill.\r\n\r\nPixie explains [here](http://textadventures.co.uk/forum/questkit/topic/2x5hqtmri0m4jrvuggfdsg/quest-6-using-the-js-this-keyword-to-target-the-item-in-function-attributes-of-c#566e0b99-7828-46ef-82f9-6d8b21ffc1d6)\r\n\r\nIf you'd like to possibly learn from my mistakes, read on.  Just ignore what I'm saying about ```this``` in this post!\r\n\r\n\r\n---\r\n##  (OLD POST TITLE: Quest 6: Using the JS this Keyword to Target the Item in Function Attributes of Clone Prototype Items)\r\n\r\n## Bad Example\r\n\r\n```this``` being used in this code will cause an error when examining a clone:\r\n\r\n<pre id\"code-div\" style=\"max-height:300px;overflow:auto;max-width:1054px;\"><code style=\"white-space: pre;\">createItem(\"grocery_sack\", {\r\n\tloc:\"cloneRoom\",\r\n\texamine: function(){\r\n\t\tmsg(\"A paper grocery sack.\")\r\n\t\tlet stuff = this.listContents()\r\n\t\tmsg(\"The sack currently contains: \")\r\n\t\tmsg(stuff)\r\n\t}\r\n})\r\n</code></pre>\r\n\r\n---\r\n### Gameplay\r\n\r\nWhen I examine a clone of this object, this happens:\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/102148294-d141c480-3e31-11eb-8f7d-1223ae5d6dda.png)](https://user-images.githubusercontent.com/30656341/102148294-d141c480-3e31-11eb-8f7d-1223ae5d6dda.png)\r\n\r\n---\r\n[![image](https://user-images.githubusercontent.com/30656341/102147933-334dfa00-3e31-11eb-9ca6-a7053d2bc0f4.png)](https://user-images.githubusercontent.com/30656341/102147933-334dfa00-3e31-11eb-9ca6-a7053d2bc0f4.png)\r\n\r\n---\r\n## Good Example\r\n\r\n```this``` will work fine when examining a clone if we code it like this:\r\n\r\n<pre id\"code-div\" style=\"max-height:300px;overflow:auto;max-width:1054px;\"><code style=\"white-space: pre;\">createItem(\"grocery_sack\", CONTAINER(false), {\r\n\tloc:\"cloneRoom\",\r\n})\r\n\r\nw.grocery_sack.examine = function() {\r\n\t\tmsg(\"A paper grocery sack. \")\r\n\t\tlet stuff = this.listContents()\r\n\t\tmsg(\"The sack currently contains: \")\r\n\t\tmsg(stuff)\r\n}\r\n</code></pre>\r\n\r\n---\r\n### Gameplay\r\n\r\n[![image](https://user-images.githubusercontent.com/30656341/102148649-76f53380-3e32-11eb-9ea3-b5027d40a247.png)](https://user-images.githubusercontent.com/30656341/102148649-76f53380-3e32-11eb-9ea3-b5027d40a247.png)\r\n\r\n\r\n---\r\nI thought I knew the reason it throws an error when attempting to examine a clone of the object in the first example, but I quickly realized that I have not a clue whilst attempting to type up an explanation.\r\n\r\n---\r\nNote that I'm not saying this is a bug (or even an issue).  I'm just sharing the method I found that works.\r\n\r\n---\r\nAlso note that you shouldn't call ```cloneObject``` until the game has loaded.  (Calling it from ```settings.setup``` works perfectly for me.)\r\n\r\n---\r\n## Summary\r\n\r\nSo:\r\n\r\n- Watch out when using ```this```!\r\n- Calling ```createItem``` after the game has loaded is bad.\r\n- Calling ```cloneObject``` before the game has loaded is bad.\r\n\r\n\r\n---\r\nREFERENCE\r\n\r\nhttps://github.com/ThePix/QuestJS/wiki/Creating-objects-on-the-fly",
      "EditableFormat": "markdown",
      "HTML": "<h1><strong>EDIT</strong></h1>\n<p>I made a careless mistake in my code.  There is nothing wrong with <code>this</code> in either of these examples.</p>\n<p>I forgot to make the item in example 1 a container.  Then, I made a mountain (or at least a small hill) out of a mole hill.</p>\n<p>Pixie explains <a href=\"http://textadventures.co.uk/forum/questkit/topic/2x5hqtmri0m4jrvuggfdsg/quest-6-using-the-js-this-keyword-to-target-the-item-in-function-attributes-of-c#566e0b99-7828-46ef-82f9-6d8b21ffc1d6\">here</a></p>\n<p>If you'd like to possibly learn from my mistakes, read on.  Just ignore what I'm saying about <code>this</code> in this post!</p>\n<hr>\n<h2>(OLD POST TITLE: Quest 6: Using the JS this Keyword to Target the Item in Function Attributes of Clone Prototype Items)</h2>\n<h2>Bad Example</h2>\n<p><code>this</code> being used in this code will cause an error when examining a clone:</p>\n<pre style=\"max-height: 300px; overflow: auto; max-width: 1054px\"><code style=\"white-space: pre\">createItem(\"grocery_sack\", {\n\tloc:\"cloneRoom\",\n\texamine: function(){\n\t\tmsg(\"A paper grocery sack.\")\n\t\tlet stuff = this.listContents()\n\t\tmsg(\"The sack currently contains: \")\n\t\tmsg(stuff)\n\t}\n})\n</code></pre>\n<hr>\n<h3>Gameplay</h3>\n<p>When I examine a clone of this object, this happens:</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/102148294-d141c480-3e31-11eb-8f7d-1223ae5d6dda.png\"><img src=\"https://user-images.githubusercontent.com/30656341/102148294-d141c480-3e31-11eb-8f7d-1223ae5d6dda.png\" alt=\"image\"></a></p>\n<hr>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/102147933-334dfa00-3e31-11eb-9ca6-a7053d2bc0f4.png\"><img src=\"https://user-images.githubusercontent.com/30656341/102147933-334dfa00-3e31-11eb-9ca6-a7053d2bc0f4.png\" alt=\"image\"></a></p>\n<hr>\n<h2>Good Example</h2>\n<p><code>this</code> will work fine when examining a clone if we code it like this:</p>\n<pre style=\"max-height: 300px; overflow: auto; max-width: 1054px\"><code style=\"white-space: pre\">createItem(\"grocery_sack\", CONTAINER(false), {\n\tloc:\"cloneRoom\",\n})\n\nw.grocery_sack.examine = function() {\n\t\tmsg(\"A paper grocery sack. \")\n\t\tlet stuff = this.listContents()\n\t\tmsg(\"The sack currently contains: \")\n\t\tmsg(stuff)\n}\n</code></pre>\n<hr>\n<h3>Gameplay</h3>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/102148649-76f53380-3e32-11eb-9ea3-b5027d40a247.png\"><img src=\"https://user-images.githubusercontent.com/30656341/102148649-76f53380-3e32-11eb-9ea3-b5027d40a247.png\" alt=\"image\"></a></p>\n<hr>\n<p>I thought I knew the reason it throws an error when attempting to examine a clone of the object in the first example, but I quickly realized that I have not a clue whilst attempting to type up an explanation.</p>\n<hr>\n<p>Note that I'm not saying this is a bug (or even an issue).  I'm just sharing the method I found that works.</p>\n<hr>\n<p>Also note that you shouldn't call <code>cloneObject</code> until the game has loaded.  (Calling it from <code>settings.setup</code> works perfectly for me.)</p>\n<hr>\n<h2>Summary</h2>\n<p>So:</p>\n<ul>\n<li>Watch out when using <code>this</code>!</li>\n<li>Calling <code>createItem</code> after the game has loaded is bad.</li>\n<li>Calling <code>cloneObject</code> before the game has loaded is bad.</li>\n</ul>\n<hr>\n<p>REFERENCE</p>\n<p>https://github.com/ThePix/QuestJS/wiki/Creating-objects-on-the-fly</p>\n\n",
      "PostDate": "2020-12-14T23:54:29.9586005Z",
      "LastEditDate": "2020-12-15T13:36:39.3740748Z",
      "link": null
    },
    {
      "PostId": "566e0b99-7828-46ef-82f9-6d8b21ffc1d6",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This will be a kicking yourself one, I am afraid. The problem with the first one is it is not a container. `this` exists, but has no `listContents` function. This works fine.\r\n\r\n```\r\ncreateItem(\"grocery_sack1\", CONTAINER(false), {\r\n\tloc:\"lounge\",\r\n\texamine: function(){\r\n\t\tmsg(\"A paper grocery sack.\")\r\n\t\tlet stuff = this.listContents()\r\n\t\tmsg(\"The sack currently contains: \")\r\n\t\tmsg(stuff)\r\n\t}\r\n})\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This will be a kicking yourself one, I am afraid. The problem with the first one is it is not a container. <code>this</code> exists, but has no <code>listContents</code> function. This works fine.</p>\n<pre><code>createItem(\"grocery_sack1\", CONTAINER(false), {\n\tloc:\"lounge\",\n\texamine: function(){\n\t\tmsg(\"A paper grocery sack.\")\n\t\tlet stuff = this.listContents()\n\t\tmsg(\"The sack currently contains: \")\n\t\tmsg(stuff)\n\t}\n})\n</code></pre>\n\n",
      "PostDate": "2020-12-15T07:48:05.7470289Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "428c2f97-5b03-48f4-b461-95f683ac3cfd",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A good way to diagnose issues like this is to add a `console.log` that tells you what `this` actually is.\r\n\r\n```\r\ncreateItem(\"grocery_sack\", {\r\n\tloc:\"cloneRoom\",\r\n\texamine: function(){\r\n\t\tmsg(\"A paper grocery sack.\")\r\n                console.log(this)\r\n\t\tlet stuff = this.listContents()\r\n\t\tmsg(\"The sack currently contains: \")\r\n\t\tmsg(stuff)\r\n\t}\r\n})\r\n```\r\nYou can then see if it is `undefined`, and if not, check its attributes. What is its name? What is listContents?",
      "EditableFormat": "markdown",
      "HTML": "<p>A good way to diagnose issues like this is to add a <code>console.log</code> that tells you what <code>this</code> actually is.</p>\n<pre><code>createItem(\"grocery_sack\", {\n\tloc:\"cloneRoom\",\n\texamine: function(){\n\t\tmsg(\"A paper grocery sack.\")\n                console.log(this)\n\t\tlet stuff = this.listContents()\n\t\tmsg(\"The sack currently contains: \")\n\t\tmsg(stuff)\n\t}\n})\n</code></pre>\n<p>You can then see if it is <code>undefined</code>, and if not, check its attributes. What is its name? What is listContents?</p>\n\n",
      "PostDate": "2020-12-15T07:50:31.6698683Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4ed88908-8cfe-4c00-ae67-24cabeb5d876",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha ha!\r\n\r\nI should have realized it was probably operator error when I couldn't explain it. I woke up this morning wondering what the difference really was between the two examples, and it was a careless mistake.  (I make those frequently.)\r\n\r\nHuh.  This is the second time this week I've posted something here when I should have done more research first.  Life lesson learned:  slow my happy ass down!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha ha!</p>\n<p>I should have realized it was probably operator error when I couldn't explain it. I woke up this morning wondering what the difference really was between the two examples, and it was a careless mistake.  (I make those frequently.)</p>\n<p>Huh.  This is the second time this week I've posted something here when I should have done more research first.  Life lesson learned:  slow my happy ass down!</p>\n\n",
      "PostDate": "2020-12-15T13:20:58.3842011Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
