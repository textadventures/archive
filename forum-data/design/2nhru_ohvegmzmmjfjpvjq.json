{
  "Topic": {
    "TopicId": "2nhru_ohvegmzmmjfjpvjq",
    "ForumId": "20",
    "Title": "Dynamic Economy",
    "LastUpdated": "2023-12-02T02:03:05.3796694Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c6249d98-f3c0-4568-a646-3844eddea933",
      "UserId": 391695,
      "Username": "GamerOver9000",
      "AvatarUrl": "https://secure.gravatar.com/avatar/36e6a025a2710445d7e878e7864013d4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've recently added this to my current project and I thought that I would share how I did it, in case someone else wanted to do something similar or improve upon it.\r\n\r\nI didn't want the items in my game to have set prices throughout the player's playthrough so I implemented a dynamic economy.\r\n\r\nHow it works is each location (room object) the player can visit has two dictionary attributes, **inventory** and **inventory_value**. The **inventory** dictionary keeps track of how many of each item the location has. While **inventory_value** keeps track of the percentage increase/decrease  that should be applied to the item's base value.\r\n\r\n<code>\r\nlocation.inventory = {Iron_Ore= 0, Coal= 0}\r\nlocation.inventory_value = {Iron_Ore=0, Coal=0}\r\n</code>\r\n\r\nSo when the player is buying/selling items in that location the item's final price will be **(base_value * percent) + base_value = final_value**.\r\n\r\nIn order for the base value to be different from the final value the percentage has to change. The percentage increases when the item is needed and decreases when the item isn't needed. \r\n\r\nI added another dictionary attribute to each location called **roles**. They're the same thing as classes (Warrior, Mage, Rogue), I just call them roles in my game. The **roles** dictionary keeps track of how many citizens with that role live in that location. I added an object list attribute called **products** to each role and put in which items that role can produce. Then I made it where once a day, each citizen in each location will **_try_** to produce one of the items that's in their role's products list. I say try because some items require other items to be made.\r\n\r\n<code>\r\nlocation.roles = {Miner=10, Smelter=7}\r\n</code>\r\n\r\n<code>\r\nMiner.products = {Iron_Ore, Coal}\r\nSmelter.products = {Iron Bar}\r\n</code>\r\n\r\nFor example, each Miner in a location has a chance to mine a few things like stone, iron ore, and coal. Miners don't require additional items to obtain these things. Smelters, on the other hand, need iron ore and coal to produce iron bars. So, if for some reason the Miners aren't able to get the iron ore and coal (because there are no Miners in that location, or the location isn't in a mineral rich area) then the Smelters won't be able to smelt iron bars. Each time this happens, I increase either the iron ore, the coal, or both of their value's by one for that location. When there is enough or more than enough iron ore and coal, I do the opposite and decrease the items' values' by one for that location.\r\n\r\nI think this really forces the player strategize about where they need to be buying/selling their items to get the highest profit. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I've recently added this to my current project and I thought that I would share how I did it, in case someone else wanted to do something similar or improve upon it.</p>\n<p>I didn't want the items in my game to have set prices throughout the player's playthrough so I implemented a dynamic economy.</p>\n<p>How it works is each location (room object) the player can visit has two dictionary attributes, <strong>inventory</strong> and <strong>inventory_value</strong>. The <strong>inventory</strong> dictionary keeps track of how many of each item the location has. While <strong>inventory_value</strong> keeps track of the percentage increase/decrease  that should be applied to the item's base value.</p>\n<code>\nlocation.inventory = {Iron_Ore= 0, Coal= 0}\nlocation.inventory_value = {Iron_Ore=0, Coal=0}\n</code>\n<p>So when the player is buying/selling items in that location the item's final price will be <strong>(base_value * percent) + base_value = final_value</strong>.</p>\n<p>In order for the base value to be different from the final value the percentage has to change. The percentage increases when the item is needed and decreases when the item isn't needed.</p>\n<p>I added another dictionary attribute to each location called <strong>roles</strong>. They're the same thing as classes (Warrior, Mage, Rogue), I just call them roles in my game. The <strong>roles</strong> dictionary keeps track of how many citizens with that role live in that location. I added an object list attribute called <strong>products</strong> to each role and put in which items that role can produce. Then I made it where once a day, each citizen in each location will <strong><em>try</em></strong> to produce one of the items that's in their role's products list. I say try because some items require other items to be made.</p>\n<code>\nlocation.roles = {Miner=10, Smelter=7}\n</code>\n<code>\nMiner.products = {Iron_Ore, Coal}\nSmelter.products = {Iron Bar}\n</code>\n<p>For example, each Miner in a location has a chance to mine a few things like stone, iron ore, and coal. Miners don't require additional items to obtain these things. Smelters, on the other hand, need iron ore and coal to produce iron bars. So, if for some reason the Miners aren't able to get the iron ore and coal (because there are no Miners in that location, or the location isn't in a mineral rich area) then the Smelters won't be able to smelt iron bars. Each time this happens, I increase either the iron ore, the coal, or both of their value's by one for that location. When there is enough or more than enough iron ore and coal, I do the opposite and decrease the items' values' by one for that location.</p>\n<p>I think this really forces the player strategize about where they need to be buying/selling their items to get the highest profit.</p>\n\n",
      "PostDate": "2023-12-02T02:03:05.3796694Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "35ddacb1-6ad1-4b11-9cf0-370bb406eb2d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/HiZKEtPb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Clever... you have created a \"living\" \"world\"...\r\nNow, expand that to wild life... If there is few hunters, then the wild life will increase... more food available could increase the population.\r\nIf there is too many hunters, then the wild life will decrease... (could cause a food shortage.)\r\nDo the same for monsters and things will really get wild...\r\nIf nothing else,  you would, or could, a life simulation.\r\nRun this for awhile, watching the variables, and you could determine what a starting world could be like...\r\nSomething realistic and not just randomly set-up for a game.\r\nI know this may be a different path that you planed, but it could be interesting...\r\nInstead of an adventure game, but more like a kingdom game... control the population and build a empire.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Clever... you have created a \"living\" \"world\"...<br>\nNow, expand that to wild life... If there is few hunters, then the wild life will increase... more food available could increase the population.<br>\nIf there is too many hunters, then the wild life will decrease... (could cause a food shortage.)<br>\nDo the same for monsters and things will really get wild...<br>\nIf nothing else,  you would, or could, a life simulation.<br>\nRun this for awhile, watching the variables, and you could determine what a starting world could be like...<br>\nSomething realistic and not just randomly set-up for a game.<br>\nI know this may be a different path that you planed, but it could be interesting...<br>\nInstead of an adventure game, but more like a kingdom game... control the population and build a empire.</p>\n\n",
      "PostDate": "2023-12-02T06:26:22.2958653Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b6ba33f-0a0f-4dc2-ad11-8cdad9443e70",
      "UserId": 391695,
      "Username": "GamerOver9000",
      "AvatarUrl": "https://secure.gravatar.com/avatar/36e6a025a2710445d7e878e7864013d4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For my game I am randomly generating the world at the start and letting the different systems I implement sort of develop the world throughout the playthrough. \r\n\r\nI do think that a colony sim implementing the system and the suggestions you gave would make for an excellent game. That might be my next project after I'm done with my current one... or hopefully someone else will be inspired to make it. ",
      "EditableFormat": "markdown",
      "HTML": "<p>For my game I am randomly generating the world at the start and letting the different systems I implement sort of develop the world throughout the playthrough.</p>\n<p>I do think that a colony sim implementing the system and the suggestions you gave would make for an excellent game. That might be my next project after I'm done with my current one... or hopefully someone else will be inspired to make it.</p>\n\n",
      "PostDate": "2023-12-03T01:43:55.5853486Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
