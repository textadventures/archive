{
  "Topic": {
    "TopicId": "ytvvsqohfuaod30crmx5_a",
    "ForumId": "20",
    "Title": "Dating sim game mechanic design help",
    "LastUpdated": "2024-04-06T08:55:19.8555104Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "51062d95-60e6-43b1-9d28-6b5ae3bc4742",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am currently working on a RPG style dating sim game using Quest JS but that doesn't really matter for this post as I'm having trouble with the calculations for how to make a semi-random action be successful or not successful based on 7 key factors:\r\n\r\n1) Action Risk Rating - Any action that the player takes towards the NPC has a Risk value between 1-10 associated with it, if successful then the NPC the action is performed on will gain some Affection for the player, otherwise this will drop instead\r\n\r\n2) Player Charisma or Persuasion. The player's charisma or persuasiveness - A single to double digit number\r\n\r\n3) NPC Risk Meter. 0-100%. The current level of Risk the NPC has, once this fills up towards 100% then they will decide to leave you if you do anything else Risky.\r\n\r\n4) NPC Fun Meter. 0-100%. The current level of Fun the NPC has, once this fills up towards 100% then they will be more likely to accept a proposal of marriage. \r\n\r\n5) NPC Risk Tolerance. 0-100%. The NPC's trait that makes them tolerant to Risk(y) behaviour. A % value that can work in your favour the higher this value is in making a Risky action pay off. However 6) will counter this.\r\n\r\n6) NPC Fun Tolerance. 0-100%. The NPC's trait that makes them tolerant towards Fun behaviour. A % value that can work against you the higher it is\r\n\r\n7) I also want to through in some element of random chance like you would in a D&D initiative dice roll.\r\n\r\nAll I have managed to come up with is incorporating parts 2), 3) and 4) together with a \"Risk - Fun > Action Risk\" but that is too basic and I'm not sure how to juggle all 7 in a cohesive manner. \r\n\r\nThe plan is that once an action has performed if it was successful I will increase NPC Fun and reduce NPC Risk and the opposite when it was not successful.\r\n\r\nAny ideas would be welcome.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am currently working on a RPG style dating sim game using Quest JS but that doesn't really matter for this post as I'm having trouble with the calculations for how to make a semi-random action be successful or not successful based on 7 key factors:</p>\n<ol>\n<li>\n<p>Action Risk Rating - Any action that the player takes towards the NPC has a Risk value between 1-10 associated with it, if successful then the NPC the action is performed on will gain some Affection for the player, otherwise this will drop instead</p>\n</li>\n<li>\n<p>Player Charisma or Persuasion. The player's charisma or persuasiveness - A single to double digit number</p>\n</li>\n<li>\n<p>NPC Risk Meter. 0-100%. The current level of Risk the NPC has, once this fills up towards 100% then they will decide to leave you if you do anything else Risky.</p>\n</li>\n<li>\n<p>NPC Fun Meter. 0-100%. The current level of Fun the NPC has, once this fills up towards 100% then they will be more likely to accept a proposal of marriage.</p>\n</li>\n<li>\n<p>NPC Risk Tolerance. 0-100%. The NPC's trait that makes them tolerant to Risk(y) behaviour. A % value that can work in your favour the higher this value is in making a Risky action pay off. However 6) will counter this.</p>\n</li>\n<li>\n<p>NPC Fun Tolerance. 0-100%. The NPC's trait that makes them tolerant towards Fun behaviour. A % value that can work against you the higher it is</p>\n</li>\n<li>\n<p>I also want to through in some element of random chance like you would in a D&amp;D initiative dice roll.</p>\n</li>\n</ol>\n<p>All I have managed to come up with is incorporating parts 2), 3) and 4) together with a \"Risk - Fun &gt; Action Risk\" but that is too basic and I'm not sure how to juggle all 7 in a cohesive manner.</p>\n<p>The plan is that once an action has performed if it was successful I will increase NPC Fun and reduce NPC Risk and the opposite when it was not successful.</p>\n<p>Any ideas would be welcome.</p>\n\n",
      "PostDate": "2024-04-06T08:55:19.8555104Z",
      "LastEditDate": "2024-04-06T08:56:23.4758542Z",
      "link": null
    },
    {
      "PostId": "06f5dda1-e85d-49f6-8497-92982bb165fe",
      "UserId": 587281,
      "Username": "PsychoVyse",
      "AvatarUrl": "https://secure.gravatar.com/avatar/f359107abf9dc8cfe62bba1e4a8e84a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The NPC Risk could also be thought of as Boredom instead.",
      "EditableFormat": "markdown",
      "HTML": "<p>The NPC Risk could also be thought of as Boredom instead.</p>\n\n",
      "PostDate": "2024-04-06T10:31:43.8336724Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "89cd4f93-11ac-4150-a286-80131e0fd1ce",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your methodology is similar to artificial intelligence, which makes sense as you are trying to make characters alive\r\nSo, I will be using some concepts from https://www.w3schools.com/ai/ai_perceptrons.asp\r\n\r\n>The Perceptron Algorithm\r\nFrank Rosenblatt suggested this algorithm:\r\nSet a threshold value\r\nMultiply all inputs with its weights\r\nSum all the results\r\nActivate the output\r\n\r\nBecause my english and understanding is not that good, I will make something similar to what you want and not exactly the same, feel free to edit it\r\n\r\nI will set the threshold value to 50, game.success = 50\r\ngame.funweight = 3\r\ngame.charismaweight = 2\r\ngame.persuasionweight = 1\r\nWeights simply means how important that attribute is, change it to your preference.\r\n\r\nWhen the player chooses\r\na) Kiss\r\nb) Treat a free coffee\r\nc) Outdoor exercise\r\n\r\nTo make it possible for players to date with different people, we set the attributes on the NPC instead and not the player, which I will call it suzy\r\n\r\nRun this code for the first time only\r\nsuzy.fun = 0\r\nsuzy.charisma = 0\r\nsuzy.persuasion = 0\r\n\r\na) Kiss\r\nsuzy.fun = suzy.fun +1\r\nsuzy.charisma = suzy.charisma + 2\r\nsuzy.persuasion = suzy.persuasion +0\r\n\r\n(Although this sounds like we are trying to dictate how fun suzy is, we are actually determining how the relationship is between suzy and the player instead)\r\n\r\nb) Treat a free coffee\r\nsuzy.fun = suzy.fun + 0\r\nsuzy.charisma = suzy.charisma + 3\r\nsuzy.persuasion = suzy.persuasion + 1\r\n\r\n(Who doesn't wants a free coffee? However just a coffee doesn't seems so fun.)\r\n\r\nc) Outdoor exercise\r\nsuzy.fun = suzy.fun + 2\r\nsuzy.charisma = suzy.charisma + 0\r\nsuzy.persuasion = suzy.persuasion + 2\r\n\r\n(Understand that you can't just copy these codes, the numbers have to change according to what npc interaction it is or which npc we are dating with.)\r\n\r\n____\r\n\r\nAlongside, each npc interaction are 3 more standard actions available at all times\r\na) Ask to be a friend\r\nb) Ask to be a couple\r\nc) Ask to be a husband and wife\r\n\r\nSo, it will save you some time to learn function and just call them everytime\r\nThese functions uses Perceptron Algorithm which we discussed earlier\r\n\r\na) Ask to be a friend\r\nscore = game.funweight x suzy.fun (We get 3x1 = 3)\r\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)\r\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)\r\ngame.score = score (3+4+0=7)\r\nIf game.score > 5\r\nSuzy agrees to be your friend, trigger the story outcome\r\n\r\nb) Ask to be a couple\r\nscore = game.funweight x suzy.fun (We get 3x1 = 3)\r\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)\r\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)\r\ngame.score = score (3+4+0=7)\r\nIf game.score > 25\r\nSuzy agrees to be couple with you, trigger the special story outcome\r\n\r\nc) Ask to be a husband and wife\r\nscore = game.funweight x suzy.fun (We get 3x1 = 3)\r\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)\r\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)\r\ngame.score = score (3+4+0=7)\r\nIf game.score > 50\r\nSuzy agrees to be husband and wife with you, trigger the best story outcome\r\n\r\n____________________\r\n\r\nIt is important to understand that the ideal outcome is husband and wife, so allow your players to have the option to continue the story if they ended up with a friend or couple outcome\r\n\r\nSo, obviously, this game is too simple\r\nRather than use your risk method, which is too randomize for me\r\nI will add in a negative threshold value\r\nEverytime the player interacts with the NPC, this attribute decreases by 1\r\n\r\nFor example,\r\nRun this code for the first time only\r\nsuzy.patience = 0\r\nsuzy.personality = 1\r\n\r\nSo whenever, the player do an npc interaction\r\nsuzy.patience = suzy.patience - suzy.personality (0-1=-1)\r\nSo, if the player dily dallys for a long time, and perhaps, too coward to confront thy feelings, suzy will find someone else as love interest\r\nThus, we now need to change the previous 3 standard actions that are available at all times\r\n\r\nTo save time, I will just show the last, and the most important one\r\nc) Ask to be a husband and wife\r\nscore = game.funweight x suzy.fun (We get 3x1 = 3)\r\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)\r\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)\r\ngame.score = score (3+4+0=7) + **suzy.patience (-1)**\r\nIf game.score > 50\r\nSuzy agrees to be husband and wife with you, trigger the best story outcome\r\n\r\nBut as stated in the code itself, suzy.personality can be changed according to different NPCs\r\nPerhaps, some NPCs prefer a long romance like Terry, everybody loves terry\r\nInstead of \r\nsuzy.patience = 0\r\nsuzy.personality = 1\r\nIt is now\r\nterry.patience = 0\r\nterry.personality = -1 (Zoom in if you can't see, there is a negative here)\r\n\r\nSo whenever, the player do an npc interaction\r\nterry.patience = terry.patience - terry.personality (0-(-1)=+1)\r\nSo, if the player dily dallys for a long time, and perhaps, too coward to confront thy feelings, terry will find you more sincere and loyal to thee",
      "EditableFormat": "markdown",
      "HTML": "<p>Your methodology is similar to artificial intelligence, which makes sense as you are trying to make characters alive<br>\nSo, I will be using some concepts from https://www.w3schools.com/ai/ai_perceptrons.asp</p>\n<blockquote>\n<p>The Perceptron Algorithm<br>\nFrank Rosenblatt suggested this algorithm:<br>\nSet a threshold value<br>\nMultiply all inputs with its weights<br>\nSum all the results<br>\nActivate the output</p>\n</blockquote>\n<p>Because my english and understanding is not that good, I will make something similar to what you want and not exactly the same, feel free to edit it</p>\n<p>I will set the threshold value to 50, game.success = 50<br>\ngame.funweight = 3<br>\ngame.charismaweight = 2<br>\ngame.persuasionweight = 1<br>\nWeights simply means how important that attribute is, change it to your preference.</p>\n<p>When the player chooses<br>\na) Kiss<br>\nb) Treat a free coffee<br>\nc) Outdoor exercise</p>\n<p>To make it possible for players to date with different people, we set the attributes on the NPC instead and not the player, which I will call it suzy</p>\n<p>Run this code for the first time only<br>\nsuzy.fun = 0<br>\nsuzy.charisma = 0<br>\nsuzy.persuasion = 0</p>\n<p>a) Kiss<br>\nsuzy.fun = suzy.fun +1<br>\nsuzy.charisma = suzy.charisma + 2<br>\nsuzy.persuasion = suzy.persuasion +0</p>\n<p>(Although this sounds like we are trying to dictate how fun suzy is, we are actually determining how the relationship is between suzy and the player instead)</p>\n<p>b) Treat a free coffee<br>\nsuzy.fun = suzy.fun + 0<br>\nsuzy.charisma = suzy.charisma + 3<br>\nsuzy.persuasion = suzy.persuasion + 1</p>\n<p>(Who doesn't wants a free coffee? However just a coffee doesn't seems so fun.)</p>\n<p>c) Outdoor exercise<br>\nsuzy.fun = suzy.fun + 2<br>\nsuzy.charisma = suzy.charisma + 0<br>\nsuzy.persuasion = suzy.persuasion + 2</p>\n<p>(Understand that you can't just copy these codes, the numbers have to change according to what npc interaction it is or which npc we are dating with.)</p>\n<hr>\n<p>Alongside, each npc interaction are 3 more standard actions available at all times<br>\na) Ask to be a friend<br>\nb) Ask to be a couple<br>\nc) Ask to be a husband and wife</p>\n<p>So, it will save you some time to learn function and just call them everytime<br>\nThese functions uses Perceptron Algorithm which we discussed earlier</p>\n<p>a) Ask to be a friend<br>\nscore = game.funweight x suzy.fun (We get 3x1 = 3)<br>\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)<br>\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)<br>\ngame.score = score (3+4+0=7)<br>\nIf game.score &gt; 5<br>\nSuzy agrees to be your friend, trigger the story outcome</p>\n<p>b) Ask to be a couple<br>\nscore = game.funweight x suzy.fun (We get 3x1 = 3)<br>\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)<br>\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)<br>\ngame.score = score (3+4+0=7)<br>\nIf game.score &gt; 25<br>\nSuzy agrees to be couple with you, trigger the special story outcome</p>\n<p>c) Ask to be a husband and wife<br>\nscore = game.funweight x suzy.fun (We get 3x1 = 3)<br>\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)<br>\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)<br>\ngame.score = score (3+4+0=7)<br>\nIf game.score &gt; 50<br>\nSuzy agrees to be husband and wife with you, trigger the best story outcome</p>\n<hr>\n<p>It is important to understand that the ideal outcome is husband and wife, so allow your players to have the option to continue the story if they ended up with a friend or couple outcome</p>\n<p>So, obviously, this game is too simple<br>\nRather than use your risk method, which is too randomize for me<br>\nI will add in a negative threshold value<br>\nEverytime the player interacts with the NPC, this attribute decreases by 1</p>\n<p>For example,<br>\nRun this code for the first time only<br>\nsuzy.patience = 0<br>\nsuzy.personality = 1</p>\n<p>So whenever, the player do an npc interaction<br>\nsuzy.patience = suzy.patience - suzy.personality (0-1=-1)<br>\nSo, if the player dily dallys for a long time, and perhaps, too coward to confront thy feelings, suzy will find someone else as love interest<br>\nThus, we now need to change the previous 3 standard actions that are available at all times</p>\n<p>To save time, I will just show the last, and the most important one<br>\nc) Ask to be a husband and wife<br>\nscore = game.funweight x suzy.fun (We get 3x1 = 3)<br>\nscore = score + game.charismaweight x suzy.charisma (We get 2x2 = 4)<br>\nscore = score + game.persuasionweight x suzy.persuasion (We get 1x0 = 0)<br>\ngame.score = score (3+4+0=7) + <strong>suzy.patience (-1)</strong><br>\nIf game.score &gt; 50<br>\nSuzy agrees to be husband and wife with you, trigger the best story outcome</p>\n<p>But as stated in the code itself, suzy.personality can be changed according to different NPCs<br>\nPerhaps, some NPCs prefer a long romance like Terry, everybody loves terry<br>\nInstead of<br>\nsuzy.patience = 0<br>\nsuzy.personality = 1<br>\nIt is now<br>\nterry.patience = 0<br>\nterry.personality = -1 (Zoom in if you can't see, there is a negative here)</p>\n<p>So whenever, the player do an npc interaction<br>\nterry.patience = terry.patience - terry.personality (0-(-1)=+1)<br>\nSo, if the player dily dallys for a long time, and perhaps, too coward to confront thy feelings, terry will find you more sincere and loyal to thee</p>\n\n",
      "PostDate": "2024-04-11T12:42:53.5666854Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
