{
  "Topic": {
    "TopicId": "knamg2sytkemfcilqfrc6g",
    "ForumId": "10",
    "Title": "Guide: How to control the exact percent of chance of multiple outcomes, with just \"if\" and \"random chance\"",
    "LastUpdated": "2017-05-07T12:53:36.0962529Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "596a8118-673f-41c4-8cfb-d83007199229",
      "UserId": 305664,
      "Username": "Ryller",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3547dcc99c140b85202b9155f702df3e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is a guide on how to do it with the non-coding quest interface using only the “If” and “Random chance”.\r\n\r\nSay you want to control the exact percentage of chance that a script will run. Right now that’s easy to do with 1 script using “if” and “random chance” but doing this with multiple scripts might be a bit harder.\r\n\r\nFor example you have a random candy machine. And you want it to have a 20% chance to give gum, 20% chance to give chocolate, 20% chance to give a peppermint and 40% chance to leave you crying. \r\n\r\nNow if you’re a Richard you might say. “Well just say ‘random chance = 20%’ for the gum, and then create an ‘Else if’ with 20% chance for the next chocolate, and so on.”\r\n\r\nBut!!! think about, this means the gum has more chance to get picked because he’s first in line.\r\n\r\nThe gum now has a 20% chance to get picked, leaving an 80% chance that we’ll move on to the ‘Else if’. In other words we have an 80% chance to get a 20% chance to get the chocolate.\r\nCalculating that: \r\n20 : 100 x 80 = 16\r\nMeaning we only have a 16% chance to get the chocolate.\r\n\r\nNow how do we fix this. Well the trick is a bit difficult.\r\nThe first “If” is fine. He really has a 20 percent chance to get picked. But he is still Important, for he tells us how much percent is left.\r\n\r\n**Step one** is determining how much chance we have:\r\n\r\n100 – The Percent chance of the first “If” = The Value of “MainLeft”\r\n_(in this case) 100 – 20 = 80_\r\n\r\n**Step two** is calculating how much percent we need to give the “Else if”:\r\n\r\nThe percentage chance you want it to have : “MainLeft” x 100 = The percentage you have to enter in “Else if”.\r\n_(in this case) 20 : 80 x 100 = 25_\r\n\r\nSee now that we have entered 25 percent it gives us: 80% chance to get 25% chance which equals 20% chance.\r\n\r\nNow for the next one, and listen up buddy ‘cause here’s where it gets difficult. We have 80% chance to get a 75% chance to get to our 2nd “Else if” (the peppermint). Which it means is that the value of MainLeft doesn’t hold up for the next one. We need to change it.\r\n\r\n**Step three** is changing the value of “Mainleft”\r\n\r\n100 - The percentage you entered in the last random chance = Value of “GhostLeft”\r\n_(in this case) 100 – 25 = 75_\r\n\r\nGhostLeft : 100 x MainLeft = The new value of Mainleft\r\n_(in this case)_ 75 : 100 x 80 = 60\r\n\r\nGreat now we know how to calculate the percentage for our 2nd Else if. We **do the same as we did before**:\r\n\r\nThe percentage chance you want it to have : “MainLeft” x 100 = The percentage you have to enter in “Else if”.\r\n\r\n_(in this case) 20 : 60 x 100 = 33.33333333333_\r\n\r\nThis means that we have 80% chance to get 75% chance to get 33.3333333% chance to get the peppermint, which translates to 20% chance to get the peppermint. And 80% chance to get 75% chance to get 66.666666% chance to get nothing. Which translates to 40% chance to get nothing. \r\n\r\nNow I know Quest only allows you to put in simple numbers of 0 – 100. So just pick the number closest to it like 33%, just having a 0.3333 percent chance difference isn’t that much.\r\n\r\nIf you want to go deeper to four or five that’s fine just know that you have to calculate the new value of “MainLeft” each time before you calculate what percentage you have to enter in the next one.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is a guide on how to do it with the non-coding quest interface using only the “If” and “Random chance”.</p>\n<p>Say you want to control the exact percentage of chance that a script will run. Right now that’s easy to do with 1 script using “if” and “random chance” but doing this with multiple scripts might be a bit harder.</p>\n<p>For example you have a random candy machine. And you want it to have a 20% chance to give gum, 20% chance to give chocolate, 20% chance to give a peppermint and 40% chance to leave you crying.</p>\n<p>Now if you’re a Richard you might say. “Well just say ‘random chance = 20%’ for the gum, and then create an ‘Else if’ with 20% chance for the next chocolate, and so on.”</p>\n<p>But!!! think about, this means the gum has more chance to get picked because he’s first in line.</p>\n<p>The gum now has a 20% chance to get picked, leaving an 80% chance that we’ll move on to the ‘Else if’. In other words we have an 80% chance to get a 20% chance to get the chocolate.<br>\nCalculating that:<br>\n20 : 100 x 80 = 16<br>\nMeaning we only have a 16% chance to get the chocolate.</p>\n<p>Now how do we fix this. Well the trick is a bit difficult.<br>\nThe first “If” is fine. He really has a 20 percent chance to get picked. But he is still Important, for he tells us how much percent is left.</p>\n<p><strong>Step one</strong> is determining how much chance we have:</p>\n<p>100 – The Percent chance of the first “If” = The Value of “MainLeft”<br>\n<em>(in this case) 100 – 20 = 80</em></p>\n<p><strong>Step two</strong> is calculating how much percent we need to give the “Else if”:</p>\n<p>The percentage chance you want it to have : “MainLeft” x 100 = The percentage you have to enter in “Else if”.<br>\n<em>(in this case) 20 : 80 x 100 = 25</em></p>\n<p>See now that we have entered 25 percent it gives us: 80% chance to get 25% chance which equals 20% chance.</p>\n<p>Now for the next one, and listen up buddy ‘cause here’s where it gets difficult. We have 80% chance to get a 75% chance to get to our 2nd “Else if” (the peppermint). Which it means is that the value of MainLeft doesn’t hold up for the next one. We need to change it.</p>\n<p><strong>Step three</strong> is changing the value of “Mainleft”</p>\n<p>100 - The percentage you entered in the last random chance = Value of “GhostLeft”<br>\n<em>(in this case) 100 – 25 = 75</em></p>\n<p>GhostLeft : 100 x MainLeft = The new value of Mainleft<br>\n<em>(in this case)</em> 75 : 100 x 80 = 60</p>\n<p>Great now we know how to calculate the percentage for our 2nd Else if. We <strong>do the same as we did before</strong>:</p>\n<p>The percentage chance you want it to have : “MainLeft” x 100 = The percentage you have to enter in “Else if”.</p>\n<p><em>(in this case) 20 : 60 x 100 = 33.33333333333</em></p>\n<p>This means that we have 80% chance to get 75% chance to get 33.3333333% chance to get the peppermint, which translates to 20% chance to get the peppermint. And 80% chance to get 75% chance to get 66.666666% chance to get nothing. Which translates to 40% chance to get nothing.</p>\n<p>Now I know Quest only allows you to put in simple numbers of 0 – 100. So just pick the number closest to it like 33%, just having a 0.3333 percent chance difference isn’t that much.</p>\n<p>If you want to go deeper to four or five that’s fine just know that you have to calculate the new value of “MainLeft” each time before you calculate what percentage you have to enter in the next one.</p>\n\n",
      "PostDate": "2017-05-07T12:53:36.0962529Z",
      "LastEditDate": null
    },
    {
      "PostId": "34c3ca20-bab2-43cd-bf62-b55b0546c2a7",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OR...\r\nChance=GetRandomInt(1,100)\r\nif(Chance<20){\r\ncandy=\"gum\"\r\n}\r\nelse if (Chance>19 and Chance<40){\r\ncandy=\"chocolate\"\r\n}\r\nelse if(Chance>39 and Chance<60){\r\ncandy=\"peppermint \"\r\n}\r\nelse {\r\ncandy=\"nothing\"\r\n}\r\nYou roll the random number only once.\r\nIf I understand what you are doing, you are re-rolling for a new number every time, and yes, that would throw off the values.\r\nIE: roll for gum, if no gum, then\r\nroll for chocolate, if no chocolate, then\r\nroll for peppermint , if no peppermint, then\r\nsorry, out of luck.\r\n(Is that what you were doing?)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>OR...<br>\nChance=GetRandomInt(1,100)<br>\nif(Chance&lt;20){<br>\ncandy=\"gum\"<br>\n}<br>\nelse if (Chance&gt;19 and Chance&lt;40){<br>\ncandy=\"chocolate\"<br>\n}<br>\nelse if(Chance&gt;39 and Chance&lt;60){<br>\ncandy=\"peppermint \"<br>\n}<br>\nelse {<br>\ncandy=\"nothing\"<br>\n}<br>\nYou roll the random number only once.<br>\nIf I understand what you are doing, you are re-rolling for a new number every time, and yes, that would throw off the values.<br>\nIE: roll for gum, if no gum, then<br>\nroll for chocolate, if no chocolate, then<br>\nroll for peppermint , if no peppermint, then<br>\nsorry, out of luck.<br>\n(Is that what you were doing?)</p>\n\n",
      "PostDate": "2017-05-07T21:46:12.2021809Z",
      "LastEditDate": null
    },
    {
      "PostId": "533e7524-84f3-4f9b-ae3c-e71c6a7c77c2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think he's/she's just trying to account for the smaller percent of/due-to being after another chance roll:\r\n\r\n30% of first roll succeeding (70% of first roll NOT succeeding)\r\n30% for second roll x 70% of first roll NOT succeeding = 1/21 % of second roll succeeding\r\n30% for third roll x (100 - 1/21) % of first+second rolls NOT succeeding = (1/xx or 1/xxx) % of third roll succeeding\r\n\r\n--------\r\n\r\nyou can avoid this by doing each as individual 'ifs' (as it's the 'else ifs' chain that connects them as a single 'if/if else' block), like so:\r\n\r\n```\r\nif (RandomChance (30)) {\r\n  // 1st roll succeess scripting\r\n}\r\nif (RandomChance (30)) {\r\n  // 2nd roll succeess scripting\r\n}\r\nif (RandomChance (30)) {\r\n  // 3rd roll succeess scripting\r\n}\r\n```\r\n\r\nhowever, the problem with this is that all 3 rolls occur, meaning you could succeed on all 3 rolls, as they're mutually exclusive to each other, which is probably not what you wanted.\r\n\r\nthus, the poster's manual method of handling it, is probably the only way to do deal with the issue of smaller percents for each additional roll",
      "EditableFormat": "markdown",
      "HTML": "<p>I think he's/she's just trying to account for the smaller percent of/due-to being after another chance roll:</p>\n<p>30% of first roll succeeding (70% of first roll NOT succeeding)<br>\n30% for second roll x 70% of first roll NOT succeeding = 1/21 % of second roll succeeding<br>\n30% for third roll x (100 - 1/21) % of first+second rolls NOT succeeding = (1/xx or 1/xxx) % of third roll succeeding</p>\n<hr>\n<p>you can avoid this by doing each as individual 'ifs' (as it's the 'else ifs' chain that connects them as a single 'if/if else' block), like so:</p>\n<pre><code>if (RandomChance (30)) {\n  // 1st roll succeess scripting\n}\nif (RandomChance (30)) {\n  // 2nd roll succeess scripting\n}\nif (RandomChance (30)) {\n  // 3rd roll succeess scripting\n}\n</code></pre>\n<p>however, the problem with this is that all 3 rolls occur, meaning you could succeed on all 3 rolls, as they're mutually exclusive to each other, which is probably not what you wanted.</p>\n<p>thus, the poster's manual method of handling it, is probably the only way to do deal with the issue of smaller percents for each additional roll</p>\n\n",
      "PostDate": "2017-05-08T01:27:47.722291Z",
      "LastEditDate": "2017-05-08T01:30:05.1692505Z"
    },
    {
      "PostId": "91dfc750-6c4f-40d9-a289-019c6578f419",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nah, DarkLizard's method would work too _ I should have looked at his/her post more closely... whoopsy\r\n\r\n(it can be made a bit more efficient, see below)\r\n\r\n```\r\nif (Chance > 59) {\r\n  // no item drop\r\n} else if (Chance > 39) {\r\n  // item 1 drops\r\n} else if (Chance > 19) {\r\n  // item 2 drops\r\n} else {\r\n  // item 3 drops\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>ah, DarkLizard's method would work too _ I should have looked at his/her post more closely... whoopsy</p>\n<p>(it can be made a bit more efficient, see below)</p>\n<pre><code>if (Chance &gt; 59) {\n  // no item drop\n} else if (Chance &gt; 39) {\n  // item 1 drops\n} else if (Chance &gt; 19) {\n  // item 2 drops\n} else {\n  // item 3 drops\n}\n</code></pre>\n\n",
      "PostDate": "2017-05-08T01:37:31.0308059Z",
      "LastEditDate": null
    },
    {
      "PostId": "7d4cf21e-abc4-4715-bb16-64a6a204b2e8",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Personally... I have found that there is no code that cannot be improved when new eyes are used...\r\nYep, a little bit more efficient when counting down than up...\r\nAltho, counting up would also work, but I've noticed that:\r\nif (Chance <21){\r\nselect item#1\r\n}\r\nQuest thinks that \"<21 \" is a function...\r\n\r\nBut, could switch work here too???\r\nSwitch, from what I can tell, is the Quest version of Basic's Select case.\r\nSelect case is an improvement over chains of if / else if.\r\nIt is a single case \"if\" type of statement.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Personally... I have found that there is no code that cannot be improved when new eyes are used...<br>\nYep, a little bit more efficient when counting down than up...<br>\nAltho, counting up would also work, but I've noticed that:<br>\nif (Chance &lt;21){<br>\nselect item#1<br>\n}<br>\nQuest thinks that \"&lt;21 \" is a function...</p>\n<p>But, could switch work here too???<br>\nSwitch, from what I can tell, is the Quest version of Basic's Select case.<br>\nSelect case is an improvement over chains of if / else if.<br>\nIt is a single case \"if\" type of statement.</p>\n\n",
      "PostDate": "2017-05-08T04:56:34.1790916Z",
      "LastEditDate": null
    },
    {
      "PostId": "9b99e77b-ef12-4e87-acca-c94b1cf33653",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Switch could work...\r\n\r\nswitch (player.HP) {\r\n  case (11,12,13,14,15,16,17,18,19,20) {\r\n    msg (\"Doing good\")\r\n  }\r\n  case (6,7,8,9,10) {\r\n    msg (\"feeling OK.\")\r\n  }\r\n  case (1,2,3,4,5) {\r\n    msg (\"HP getting low!\\\"\")\r\n  }\r\n  case (0) {\r\n    msg (\"Sorry, but you died!\\\"\")\r\n  }\r\n}\r\n\r\n( kinda...)\r\nBut it does not understand ranges...\r\nIE: \r\n  case (<5) {\r\n    msg (\"HP getting low!\\\"\")\r\n  }\r\nor\r\n  case (>5) {\r\n    msg (\"feeling OK.\")\r\n  }\r\nunless I'm missing something...\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Switch could work...</p>\n<p>switch (player.HP) {<br>\ncase (11,12,13,14,15,16,17,18,19,20) {<br>\nmsg (\"Doing good\")<br>\n}<br>\ncase (6,7,8,9,10) {<br>\nmsg (\"feeling OK.\")<br>\n}<br>\ncase (1,2,3,4,5) {<br>\nmsg (\"HP getting low!\"\")<br>\n}<br>\ncase (0) {<br>\nmsg (\"Sorry, but you died!\"\")<br>\n}<br>\n}</p>\n<p>( kinda...)<br>\nBut it does not understand ranges...<br>\nIE:<br>\ncase (&lt;5) {<br>\nmsg (\"HP getting low!\"\")<br>\n}<br>\nor<br>\ncase (&gt;5) {<br>\nmsg (\"feeling OK.\")<br>\n}<br>\nunless I'm missing something...</p>\n\n",
      "PostDate": "2017-05-08T05:25:52.2719025Z",
      "LastEditDate": null
    },
    {
      "PostId": "85dabd5c-5c81-4633-ace6-6d8a82bf2d87",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if you are putting in code directly (non-GUI/Editor mode), you need to add in the:\r\n\r\n```\r\n<![CDATA[ scripting ]]>\r\n```\r\n\r\ntag, to tell quest that the '<' and '>' inside are to be seen as 'greater than' and 'lesser than' characters/symbols and not as ASLX tag characters/symbols\r\n\r\n```\r\n<function name=\"blah\">\r\n  <![CDATA[\r\n    // blah missing scripting\r\n    if (Chance > 59) {\r\n      // no item drop\r\n    } else if (Chance > 39) {\r\n      // item 1 drops\r\n    } else if (Chance > 19) {\r\n      // item 2 drops\r\n    } else {\r\n      // item 3 drops\r\n    }\r\n  ]]>\r\n</function>\r\n```\r\n\r\nor\r\n\r\n```\r\n<function name=\"blah\">\r\n  <![CDATA[\r\n    // blah missing scripting\r\n    if (Chance < 21) {\r\n      // item 3 drops\r\n    } else if (Chance < 41) {\r\n      // item 2 drops\r\n    } else if (Chance < 61) {\r\n      // item 1 drops\r\n    } else {\r\n      // no item drop\r\n    }\r\n  ]]>\r\n</function>\r\n```\r\n\r\n------------\r\n\r\ngoing from 'high-to-low' or 'low-to-high' probably doesn't make too much of a difference... without getting into more technical/deep/expert knowledge of coding efficiency/speed, which is well beyond my knowledge",
      "EditableFormat": "markdown",
      "HTML": "<p>if you are putting in code directly (non-GUI/Editor mode), you need to add in the:</p>\n<pre><code>&lt;![CDATA[ scripting ]]&gt;\n</code></pre>\n<p>tag, to tell quest that the '&lt;' and '&gt;' inside are to be seen as 'greater than' and 'lesser than' characters/symbols and not as ASLX tag characters/symbols</p>\n<pre><code>&lt;function name=\"blah\"&gt;\n  &lt;![CDATA[\n    // blah missing scripting\n    if (Chance &gt; 59) {\n      // no item drop\n    } else if (Chance &gt; 39) {\n      // item 1 drops\n    } else if (Chance &gt; 19) {\n      // item 2 drops\n    } else {\n      // item 3 drops\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n<p>or</p>\n<pre><code>&lt;function name=\"blah\"&gt;\n  &lt;![CDATA[\n    // blah missing scripting\n    if (Chance &lt; 21) {\n      // item 3 drops\n    } else if (Chance &lt; 41) {\n      // item 2 drops\n    } else if (Chance &lt; 61) {\n      // item 1 drops\n    } else {\n      // no item drop\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>going from 'high-to-low' or 'low-to-high' probably doesn't make too much of a difference... without getting into more technical/deep/expert knowledge of coding efficiency/speed, which is well beyond my knowledge</p>\n\n",
      "PostDate": "2017-05-08T13:02:29.0063183Z",
      "LastEditDate": "2017-05-08T13:04:06.2162391Z"
    },
    {
      "PostId": "9d00f32b-08ba-4f54-9eca-af2be3ed016a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "a 'switch' block is actually  identical to an 'if ' block, so it's just a matter of which design/structure you prefer and/or for what you're trying to do, as they're the exact same in terms of their functionality/capabilities.\r\n\r\nI haven't tested whether quest's 'switch' includes above cases into the lower case, and I don't think it does... as you'd need 'break' Functions to not include the above cases into the lower case, when you don't want this to happen, and I don't think quest has the 'break' Functions for its 'switch', and quest was made to be non-coder friendly, and a non-coder isn't going to know about a more complex usage of 'switch' where you can decide whether all above cases are included in a lower case or not. I'm pretty sure that when a case condition is met, the 'switch' ends (after doing that case's scripting of course).\r\n\r\n------\r\n\r\nI think the 'case' can do (\"complex\") expressions:\r\n\r\n```\r\nswitch (Count) {\r\n  case (Count > 0 and Count < 100) { // 0 to 100\r\n    // blah scripting\r\n  }\r\n  case (Count < 0 or Count > 100) { // 'neg infinity to zero' or 'zero to pos infinity', aka NOT: 0 to 100\r\n    // blah scripting\r\n  }\r\n}\r\n\r\nor\r\n\r\nswitch (Count) {\r\n  case (Count > 100) {\r\n    // blah scripting\r\n  }\r\n  case (Count > 50) {\r\n    // blah scripting\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>a 'switch' block is actually  identical to an 'if ' block, so it's just a matter of which design/structure you prefer and/or for what you're trying to do, as they're the exact same in terms of their functionality/capabilities.</p>\n<p>I haven't tested whether quest's 'switch' includes above cases into the lower case, and I don't think it does... as you'd need 'break' Functions to not include the above cases into the lower case, when you don't want this to happen, and I don't think quest has the 'break' Functions for its 'switch', and quest was made to be non-coder friendly, and a non-coder isn't going to know about a more complex usage of 'switch' where you can decide whether all above cases are included in a lower case or not. I'm pretty sure that when a case condition is met, the 'switch' ends (after doing that case's scripting of course).</p>\n<hr>\n<p>I think the 'case' can do (\"complex\") expressions:</p>\n<pre><code>switch (Count) {\n  case (Count &gt; 0 and Count &lt; 100) { // 0 to 100\n    // blah scripting\n  }\n  case (Count &lt; 0 or Count &gt; 100) { // 'neg infinity to zero' or 'zero to pos infinity', aka NOT: 0 to 100\n    // blah scripting\n  }\n}\n\nor\n\nswitch (Count) {\n  case (Count &gt; 100) {\n    // blah scripting\n  }\n  case (Count &gt; 50) {\n    // blah scripting\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2017-05-08T13:07:53.7588786Z",
      "LastEditDate": "2017-05-08T13:23:22.2786772Z"
    },
    {
      "PostId": "d2503818-8770-45f2-ae08-c95b45354bf0",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You need to compare you case statements to `true`:\r\n```\r\nswitch (true) {\r\n  case (Count > 100) {\r\n    // blah scripting\r\n  }\r\n  case (Count > 50) {\r\n    // blah scripting\r\n  }\r\n}\r\n```\r\nOnly one case will get matched, so if `Count` is 120, the first case will fire, but not the second. To do that for percentages:\r\n```\r\nroll = GetRandomInt(1, 100)\r\nswitch (true) {\r\n  case (roll > 80) {\r\n    // blah scripting\r\n  }\r\n  case (roll > 60) {\r\n    // blah scripting\r\n  }\r\n}\r\n```\r\nThat said, I would do it Ryller's way, but work it out in reverse. Assuming _n_ options, equally likely, then the percentage probability of picking the first is _100/n_, and if is not picked, you need to pick equally from <i>n-1</i> remaining.\r\n\r\nFor example, if you are choosing between five, the first will be 20. You are then picking between four, so it is 25, and then between three, so 33, and finally betwween two, so 50:\r\n```\r\nif (GenRandomChance(2o)) {\r\n  msg(\"Five\")\r\n}\r\nelse if (GenRandomChance(25)) {\r\n  msg(\"Four\")\r\n}\r\nelse if (GenRandomChance(33)) {\r\n  msg(\"Three\")\r\n}\r\nelse if (GenRandomChance(50)) {\r\n  msg(\"Two\")\r\n}\r\nelse {\r\n  msg(\"One\")\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You need to compare you case statements to <code>true</code>:</p>\n<pre><code>switch (true) {\n  case (Count &gt; 100) {\n    // blah scripting\n  }\n  case (Count &gt; 50) {\n    // blah scripting\n  }\n}\n</code></pre>\n<p>Only one case will get matched, so if <code>Count</code> is 120, the first case will fire, but not the second. To do that for percentages:</p>\n<pre><code>roll = GetRandomInt(1, 100)\nswitch (true) {\n  case (roll &gt; 80) {\n    // blah scripting\n  }\n  case (roll &gt; 60) {\n    // blah scripting\n  }\n}\n</code></pre>\n<p>That said, I would do it Ryller's way, but work it out in reverse. Assuming <em>n</em> options, equally likely, then the percentage probability of picking the first is <em>100/n</em>, and if is not picked, you need to pick equally from <i>n-1</i> remaining.</p>\n<p>For example, if you are choosing between five, the first will be 20. You are then picking between four, so it is 25, and then between three, so 33, and finally betwween two, so 50:</p>\n<pre><code>if (GenRandomChance(2o)) {\n  msg(\"Five\")\n}\nelse if (GenRandomChance(25)) {\n  msg(\"Four\")\n}\nelse if (GenRandomChance(33)) {\n  msg(\"Three\")\n}\nelse if (GenRandomChance(50)) {\n  msg(\"Two\")\n}\nelse {\n  msg(\"One\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-05-08T14:08:08.1773896Z",
      "LastEditDate": null
    }
  ]
}
