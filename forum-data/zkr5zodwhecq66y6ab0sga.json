{
  "Topic": {
    "TopicId": "zkr5zodwhecq66y6ab0sga",
    "ForumId": "10",
    "Title": "Saies",
    "LastUpdated": "2024-04-26T20:13:58.3120638Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3c5b861a-07a3-4a6c-b28b-6627f5d2e5fb",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi \r\n\r\nI know this has been asked before, refer you to the following link\r\nhttps://textadventures.co.uk/forum/quest/topic/lqrzx5-mak2yaqmlvi01ra/i-little-thing-but-it-stands-out-a-mile\r\n\r\nbut its really the dictionary aspect that I'm writing about\r\n```\r\n<conjugations type=\"stringdictionary\">\r\n  <item><key>pass out</key><value>passes out</value></item>\r\n  <item><key>@ with</key><value> with</value></item>\r\n  <item><key>@ by</key><value> by</value></item>\r\n  <item><key>@ on</key><value> on</value></item>\r\n  <item><key>@ at</key><value> at</value></item>\r\n  <item><key>*ay</key><value>ays</value></item>\r\n  <item><key>*oy</key><value>oys</value></item>\r\n  <item><key>*ey</key><value>eys</value></item>\r\n  <item><key>*y</key><value>ies</value></item>\r\n  <item><key>*ss</key><value>sses</value></item>\r\n  <item><key>*s</key><value>sses</value></item>\r\n  <item><key>*sh</key><value>shes</value></item>\r\n  <item><key>*ch</key><value>ches</value></item>\r\n  <item><key>*o</key><value>oes</value></item>\r\n  <item><key>*x</key><value>xes</value></item>\r\n  <item><key>*z</key><value>zes</value></item>\r\n  <item><key>*</key><value>s</value></item>\r\n</conjugations>\r\n```\r\nAnd mrangel if they're about\r\nIs it a function called ```DictionaryItem```, if so, how is that coded?\r\n\r\nApologies again for bringing this issue up again",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi</p>\n<p>I know this has been asked before, refer you to the following link<br>\nhttps://textadventures.co.uk/forum/quest/topic/lqrzx5-mak2yaqmlvi01ra/i-little-thing-but-it-stands-out-a-mile</p>\n<p>but its really the dictionary aspect that I'm writing about</p>\n<pre><code>&lt;conjugations type=\"stringdictionary\"&gt;\n  &lt;item&gt;&lt;key&gt;pass out&lt;/key&gt;&lt;value&gt;passes out&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ with&lt;/key&gt;&lt;value&gt; with&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ by&lt;/key&gt;&lt;value&gt; by&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ on&lt;/key&gt;&lt;value&gt; on&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ at&lt;/key&gt;&lt;value&gt; at&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ay&lt;/key&gt;&lt;value&gt;ays&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*oy&lt;/key&gt;&lt;value&gt;oys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ey&lt;/key&gt;&lt;value&gt;eys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*y&lt;/key&gt;&lt;value&gt;ies&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ss&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*s&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*sh&lt;/key&gt;&lt;value&gt;shes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ch&lt;/key&gt;&lt;value&gt;ches&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*o&lt;/key&gt;&lt;value&gt;oes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*x&lt;/key&gt;&lt;value&gt;xes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*z&lt;/key&gt;&lt;value&gt;zes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*&lt;/key&gt;&lt;value&gt;s&lt;/value&gt;&lt;/item&gt;\n&lt;/conjugations&gt;\n</code></pre>\n<p>And mrangel if they're about<br>\nIs it a function called <code>DictionaryItem</code>, if so, how is that coded?</p>\n<p>Apologies again for bringing this issue up again</p>\n\n",
      "PostDate": "2024-04-26T20:13:58.3120638Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e4861cb9-a902-489e-9085-87a4a5587eb5",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok,\r\nSo I've now put the code into the game after the <firstpublished> bit. \r\nSo far so good.\r\n\r\nIs there a way to put the code into a library.\r\nI've tried, but it comes up with an error '<conjugate> not an object', \r\nI've the tried putting <game> ... </game> around the code, but when i play the game, that reports and error message too.\r\n\r\nOr do I have to manually cut and paste that code into every game i make.\r\nAny help is greatly appreciated.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok,<br>\nSo I've now put the code into the game after the </p>\n<p>Is there a way to put the code into a library.<br>\nI've tried, but it comes up with an error '</p>\n<p>Or do I have to manually cut and paste that code into every game i make.<br>\nAny help is greatly appreciated.</p>\n\n",
      "PostDate": "2024-04-28T19:05:42.6116088Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f88c580f-1fb7-4d67-bd27-452459f87225",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ok,\r\n\r\nI finally figured this out.\r\nIf you want to put it in a library, you have to put it into an object first. I'm using the object 'zz9'.\r\n\r\nSo...\r\n\r\n```\r\n<library>\r\n\r\n<function name=\"Conjugate\" parameters=\"obj, verb\" type=\"string\">\r\n    gender = obj.gender\r\n    if (gender = \"he\" or gender = \"she\") {\r\n      gender = \"it\"\r\n    }\r\n    switch (verb) {\r\n      case (\"be\") {\r\n        switch (gender) {\r\n          case (\"i\") {\r\n            return (\"am\")\r\n          }\r\n          case (\"you\") {\r\n            return (\"are\")\r\n          }\r\n          case (\"it\") {\r\n            return (\"is\")\r\n          }\r\n          case (\"we\") {\r\n            return (\"are\")\r\n          }\r\n          case (\"they\") {\r\n            return (\"are\")\r\n          }\r\n          default {\r\n            return (\"is\")\r\n          }\r\n        }\r\n      }\r\n      case (\"do\") {\r\n        switch (gender) {\r\n          case (\"i\") {\r\n            return (\"do\")\r\n          }\r\n          case (\"you\") {\r\n            return (\"do\")\r\n          }\r\n          case (\"it\") {\r\n            return (\"does\")\r\n          }\r\n          case (\"we\") {\r\n            return (\"do\")\r\n          }\r\n          case (\"they\") {\r\n            return (\"do\")\r\n          }\r\n          default {\r\n            return (\"do\")\r\n          }\r\n        }\r\n      }\r\n      default {\r\n        if (gender = \"it\") {\r\n          foreach (ending, zz9.conjugations) {\r\n            if (ending = verb) {\r\n              return (DictionaryItem (zz9.conjugations, verb))\r\n            }\r\n            else if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\r\n              return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (zz9.conjugations, ending))\r\n            }\r\n            else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\r\n              return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (zz9.conjugations, ending))\r\n            }\r\n          }\r\n          return (verb + \"s\")\r\n        }\r\n      }\r\n    }\r\n  </function>\r\n  \r\n  <object name=\"zz9\">\r\n  \r\n\t  <conjugations type=\"stringdictionary\">\r\n  <item><key>pass out</key><value>passes out</value></item>\r\n  <item><key>@ with</key><value> with</value></item>\r\n  <item><key>@ by</key><value> by</value></item>\r\n  <item><key>@ on</key><value> on</value></item>\r\n  <item><key>@ at</key><value> at</value></item>\r\n  <item><key>*ay</key><value>ays</value></item>\r\n  <item><key>*oy</key><value>oys</value></item>\r\n  <item><key>*ey</key><value>eys</value></item>\r\n  <item><key>*y</key><value>ies</value></item>\r\n  <item><key>*ss</key><value>sses</value></item>\r\n  <item><key>*s</key><value>sses</value></item>\r\n  <item><key>*sh</key><value>shes</value></item>\r\n  <item><key>*ch</key><value>ches</value></item>\r\n  <item><key>*o</key><value>oes</value></item>\r\n  <item><key>*x</key><value>xes</value></item>\r\n  <item><key>*z</key><value>zes</value></item>\r\n  <item><key>*</key><value>s</value></item>\r\n</conjugations>\r\n\r\n</object>\r\n\r\n</library>\r\n```\r\nHope this helps someone in the future.",
      "EditableFormat": "markdown",
      "HTML": "<p>ok,</p>\n<p>I finally figured this out.<br>\nIf you want to put it in a library, you have to put it into an object first. I'm using the object 'zz9'.</p>\n<p>So...</p>\n<pre><code>&lt;library&gt;\n\n&lt;function name=\"Conjugate\" parameters=\"obj, verb\" type=\"string\"&gt;\n    gender = obj.gender\n    if (gender = \"he\" or gender = \"she\") {\n      gender = \"it\"\n    }\n    switch (verb) {\n      case (\"be\") {\n        switch (gender) {\n          case (\"i\") {\n            return (\"am\")\n          }\n          case (\"you\") {\n            return (\"are\")\n          }\n          case (\"it\") {\n            return (\"is\")\n          }\n          case (\"we\") {\n            return (\"are\")\n          }\n          case (\"they\") {\n            return (\"are\")\n          }\n          default {\n            return (\"is\")\n          }\n        }\n      }\n      case (\"do\") {\n        switch (gender) {\n          case (\"i\") {\n            return (\"do\")\n          }\n          case (\"you\") {\n            return (\"do\")\n          }\n          case (\"it\") {\n            return (\"does\")\n          }\n          case (\"we\") {\n            return (\"do\")\n          }\n          case (\"they\") {\n            return (\"do\")\n          }\n          default {\n            return (\"do\")\n          }\n        }\n      }\n      default {\n        if (gender = \"it\") {\n          foreach (ending, zz9.conjugations) {\n            if (ending = verb) {\n              return (DictionaryItem (zz9.conjugations, verb))\n            }\n            else if (Left (ending, 1) = \"@\" and EndsWith (verb, Mid (ending, 2))) {\n              return (Conjugate (obj, Left (verb, LengthOf(verb) - LengthOf(ending) + 1)) + DictionaryItem (zz9.conjugations, ending))\n            }\n            else if (Left (ending, 1) = \"*\" and EndsWith (verb, Mid (ending, 2))) {\n              return (Left (verb, LengthOf(verb) - LengthOf(ending) + 1) + DictionaryItem (zz9.conjugations, ending))\n            }\n          }\n          return (verb + \"s\")\n        }\n      }\n    }\n  &lt;/function&gt;\n  \n  &lt;object name=\"zz9\"&gt;\n  \n\t  &lt;conjugations type=\"stringdictionary\"&gt;\n  &lt;item&gt;&lt;key&gt;pass out&lt;/key&gt;&lt;value&gt;passes out&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ with&lt;/key&gt;&lt;value&gt; with&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ by&lt;/key&gt;&lt;value&gt; by&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ on&lt;/key&gt;&lt;value&gt; on&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;@ at&lt;/key&gt;&lt;value&gt; at&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ay&lt;/key&gt;&lt;value&gt;ays&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*oy&lt;/key&gt;&lt;value&gt;oys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ey&lt;/key&gt;&lt;value&gt;eys&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*y&lt;/key&gt;&lt;value&gt;ies&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ss&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*s&lt;/key&gt;&lt;value&gt;sses&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*sh&lt;/key&gt;&lt;value&gt;shes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*ch&lt;/key&gt;&lt;value&gt;ches&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*o&lt;/key&gt;&lt;value&gt;oes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*x&lt;/key&gt;&lt;value&gt;xes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*z&lt;/key&gt;&lt;value&gt;zes&lt;/value&gt;&lt;/item&gt;\n  &lt;item&gt;&lt;key&gt;*&lt;/key&gt;&lt;value&gt;s&lt;/value&gt;&lt;/item&gt;\n&lt;/conjugations&gt;\n\n&lt;/object&gt;\n\n&lt;/library&gt;\n</code></pre>\n<p>Hope this helps someone in the future.</p>\n\n",
      "PostDate": "2024-05-05T17:15:10.7623798Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1b0ea0e3-7f39-4018-a678-b3d34d44832b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ideally, you'd put it in the `defaultgame` type so it's in the game object… but I don't think Quest supports type overloading, so you'd have to copy the whole type over from `CoreTypes.aslx`.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ideally, you'd put it in the <code>defaultgame</code> type so it's in the game object… but I don't think Quest supports type overloading, so you'd have to copy the whole type over from <code>CoreTypes.aslx</code>.</p>\n\n",
      "PostDate": "2024-05-05T18:03:55.867286Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
