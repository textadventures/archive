{
  "Topic": {
    "TopicId": "5381",
    "ForumId": "24",
    "Title": "Need help setting variables in a certain order",
    "LastUpdated": "2015-09-23T13:49:44+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "37314",
      "UserId": 0,
      "Username": "trevers18",
      "UserAvatar": null,
      "UserGravatar": "dd4cf70219b81e797c1bd7bcab3a17bf",
      "EditableText": "Not exactly sure if the title is exactly what this problem is, but it's as close as I can describe it. I want to have three different outcomes to a situation depending on what the player does, and in order to so, I need to know the order that the player chooses the three passages. Here's the scenario:\n\n[code:13mq6tw9]Cheryl and Mike are stuck in a car that has crashed off the side of the road&#46; Cheryl is the only one conscious at the moment&#46; She has to wake up Mike in order to get him out of the car, but she also has to get all of their supplies out of the back seat&#46; When she wakes Mike up, she realizes that he has a head injury and is bleeding profusely and needs to patch him up&#46; How many supplies they get is determined by the order of Cheryl's actions&#46; She has two turns before the car is blocked by the falling snow and can no longer be accessed&#46;[/code:13mq6tw9]\n\nThe outcomes are:\n\n[code:13mq6tw9]Cheryl wakes up Mike --&gt; chooses to get everything outside = gets all supplies but Mike loses a lot of blood\nCheryl gets everything outside --&gt; wakes up Mike = get almost everything and Mike doesn't lose a lot of blood\nCheryl wakes up Mike --&gt; fixes Mike's head injury = get very few supplies but Mike loses almost no blood[/code:13mq6tw9]\n\nHere's the problem. I can't figure out how to set the variables to determine the order that she chooses. Here's what needs to happen:\n\n[code:13mq6tw9]If Cheryl wakes up Mike first --&gt; set variable &quot;first&quot; to &quot;wake up&quot;\nif Cheryl gets the supplies out first --&gt; set variable &quot;first&quot; to &quot;get everything&quot;\n\nif Cheryl patches up Mike second --&gt; set variable &quot;second&quot; to &quot;patch up&quot; (only available if she chooses to wake him up first)\nif Cheryl wakes up Mike second --&gt; set variable &quot;second&quot; to &quot;wake up&quot;\nif Cheryl gets everything out second --&gt; set variable &quot;second&quot; to &quot;get everything&quot;[/code:13mq6tw9]\n\nI've tried tons of different methods but there's nothing that can get what I need. I need to be able to check that the variable &quot;first&quot; isn't already set to the other option and then set the chosen option to &quot;first&quot;, and in that same check, I need to have the chosen option set to &quot;second&quot; if &quot;first&quot; is already set with the other option. I can't figure out the code for this and it's driving me crazy. <!-- s:evil: --><img src=\"{SMILIES_PATH}/icon_evil.gif\" alt=\":evil:\" title=\"Evil or Very Mad\" /><!-- s:evil: --> Any assistance would be appreciated.",
      "EditableFormat": "bbcode",
      "HTML": "Not exactly sure if the title is exactly what this problem is, but it's as close as I can describe it. I want to have three different outcomes to a situation depending on what the player does, and in order to so, I need to know the order that the player chooses the three passages. Here's the scenario:<br/><br/><pre><code>Cheryl and Mike are stuck in a car that has crashed off the side of the road&#46; Cheryl is the only one conscious at the moment&#46; She has to wake up Mike in order to get him out of the car, but she also has to get all of their supplies out of the back seat&#46; When she wakes Mike up, she realizes that he has a head injury and is bleeding profusely and needs to patch him up&#46; How many supplies they get is determined by the order of Cheryl's actions&#46; She has two turns before the car is blocked by the falling snow and can no longer be accessed&#46;</code></pre><br/><br/>The outcomes are:<br/><br/><pre><code>Cheryl wakes up Mike --&gt; chooses to get everything outside = gets all supplies but Mike loses a lot of blood<br/>Cheryl gets everything outside --&gt; wakes up Mike = get almost everything and Mike doesn't lose a lot of blood<br/>Cheryl wakes up Mike --&gt; fixes Mike's head injury = get very few supplies but Mike loses almost no blood</code></pre><br/><br/>Here's the problem. I can't figure out how to set the variables to determine the order that she chooses. Here's what needs to happen:<br/><br/><pre><code>If Cheryl wakes up Mike first --&gt; set variable &quot;first&quot; to &quot;wake up&quot;<br/>if Cheryl gets the supplies out first --&gt; set variable &quot;first&quot; to &quot;get everything&quot;<br/><br/>if Cheryl patches up Mike second --&gt; set variable &quot;second&quot; to &quot;patch up&quot; (only available if she chooses to wake him up first)<br/>if Cheryl wakes up Mike second --&gt; set variable &quot;second&quot; to &quot;wake up&quot;<br/>if Cheryl gets everything out second --&gt; set variable &quot;second&quot; to &quot;get everything&quot;</code></pre><br/><br/>I've tried tons of different methods but there's nothing that can get what I need. I need to be able to check that the variable &quot;first&quot; isn't already set to the other option and then set the chosen option to &quot;first&quot;, and in that same check, I need to have the chosen option set to &quot;second&quot; if &quot;first&quot; is already set with the other option. I can't figure out the code for this and it's driving me crazy. <!-- s:evil: --><img src=\"{SMILIES_PATH}/icon_evil.gif\" alt=\":evil:\" title=\"Evil or Very Mad\" /><!-- s:evil: --> Any assistance would be appreciated.",
      "PostDate": "2015-07-24T16:45:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37355",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "I just learned this myself, there probably is a better way to do it.\n\n@title Testing\n[[initialize the variables]]:\n    squiffy.set(&quot;varFIRST&quot;, &quot;DID NOTHING&quot;)\n    squiffy.set(&quot;varSECOND&quot;, &quot;DID NOTHING&quot;)\n    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;EMPTY&quot;)\n    squiffy.set(&quot;varSUPPLIES&quot;, &quot;EMPTY&quot;)    \nHere is some text. Click to [[starthere]].\n[[starthere]]:\nShould she [Wake Mike](one) or [get supplies?](two) or [[move on to next section]](four)\n\n[one]:\n    var varFIRST = squiffy.get(&quot;varFIRST&quot;);\n    var varSECOND = squiffy.get(&quot;varSECOND&quot;);\n    if (varFIRST==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varFIRST&quot;, &quot;woke up Mike&quot;)} else {squiffy.set(&quot;varSECOND&quot;, &quot;woke up Mike&quot;)};\nShe wakes Mike. Should she [patch his head](three) now?\n\n[two]:\n    var varFIRST = squiffy.get(&quot;varFIRST&quot;);\n    var varSECOND = squiffy.get(&quot;varSECOND&quot;);\n    if (varFIRST==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varFIRST&quot;, &quot;got the supplies&quot;)} else {if (varSECOND==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varSECOND&quot;, &quot;got the supplies&quot;)}};\n\n[three]:\n    var varSECOND = squiffy.get(&quot;varSECOND&quot;);\n    if (varSECOND==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varSECOND&quot;, &quot;Patched up Mike&quot;)};\n    \n[[four]]:\n    var varFIRST = squiffy.get(&quot;varFIRST&quot;);\n    var varSECOND = squiffy.get(&quot;varSECOND&quot;);\n     if (varSECOND==&quot;got the supplies&quot;) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;lots of&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;all&quot;)} else {if (varSECOND==&quot;woke up Mike&quot;) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;)} else {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;a little&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;few&quot;)}};\n&quot;Well,&quot; she says, &quot;First I {varFIRST} then I {varSECOND}&quot; Mike has lost {varBLOODLOSS} blood and she got {varSUPPLIES} of the supplies.",
      "EditableFormat": "bbcode",
      "HTML": "I just learned this myself, there probably is a better way to do it.<br/><br/>@title Testing<br/>[[initialize the variables]]:<br/>    squiffy.set(&quot;varFIRST&quot;, &quot;DID NOTHING&quot;)<br/>    squiffy.set(&quot;varSECOND&quot;, &quot;DID NOTHING&quot;)<br/>    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;EMPTY&quot;)<br/>    squiffy.set(&quot;varSUPPLIES&quot;, &quot;EMPTY&quot;)    <br/>Here is some text. Click to [[starthere]].<br/>[[starthere]]:<br/>Should she [Wake Mike](one) or [get supplies?](two) or [[move on to next section]](four)<br/><br/>[one]:<br/>    var varFIRST = squiffy.get(&quot;varFIRST&quot;);<br/>    var varSECOND = squiffy.get(&quot;varSECOND&quot;);<br/>    if (varFIRST==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varFIRST&quot;, &quot;woke up Mike&quot;)} else {squiffy.set(&quot;varSECOND&quot;, &quot;woke up Mike&quot;)};<br/>She wakes Mike. Should she [patch his head](three) now?<br/><br/>[two]:<br/>    var varFIRST = squiffy.get(&quot;varFIRST&quot;);<br/>    var varSECOND = squiffy.get(&quot;varSECOND&quot;);<br/>    if (varFIRST==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varFIRST&quot;, &quot;got the supplies&quot;)} else {if (varSECOND==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varSECOND&quot;, &quot;got the supplies&quot;)}};<br/><br/>[three]:<br/>    var varSECOND = squiffy.get(&quot;varSECOND&quot;);<br/>    if (varSECOND==&quot;DID NOTHING&quot;) {squiffy.set(&quot;varSECOND&quot;, &quot;Patched up Mike&quot;)};<br/>    <br/>[[four]]:<br/>    var varFIRST = squiffy.get(&quot;varFIRST&quot;);<br/>    var varSECOND = squiffy.get(&quot;varSECOND&quot;);<br/>     if (varSECOND==&quot;got the supplies&quot;) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;lots of&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;all&quot;)} else {if (varSECOND==&quot;woke up Mike&quot;) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;)} else {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;a little&quot;); squiffy.set(&quot;varSUPPLIES&quot;, &quot;few&quot;)}};<br/>&quot;Well,&quot; she says, &quot;First I {varFIRST} then I {varSECOND}&quot; Mike has lost {varBLOODLOSS} blood and she got {varSUPPLIES} of the supplies.",
      "PostDate": "2015-07-26T18:10:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37357",
      "UserId": 0,
      "Username": "TM123",
      "UserAvatar": null,
      "UserGravatar": "6f54d3b84fe319d79f8df732b1676a50",
      "EditableText": "Here's another method. It uses one variable, varORDER, which gets each step concatenated to it in the order they are done.\nThe &quot;switch&quot; thing checks if varORDER matches each &quot;case&quot; and then sets the variables varBLOODLOSS and varSUPPLIES, and also changes varORDER to a new string.\nThe &quot;default&quot; is done if there is no match. The &quot;varORDER.indexOf(&quot;Get&quot;)==-1&quot; checks to see if &quot;Get&quot; is NOT in the string varORDER.\nYou could check if the word &quot;Get&quot; IS in the string like so: varORDER.indexOf(&quot;Get&quot;)&gt;0\n\n\n\n@title Testing\n[[initialize the variables]]:\n    squiffy.set(&quot;varORDER&quot;, &quot;&quot;)\nHere is some text. Click to [[starthere]].\n[[starthere]]:\nShould she [Wake Mike](one) or [get supplies?](two) or [[move on to next section]](four)\n\n[one]:\n    var varORDER = squiffy.get(&quot;varORDER&quot;);\n    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Wake_&quot;);\nShe wakes Mike. Should she [patch his head](three) now?\n\n[two]:\n    var varORDER = squiffy.get(&quot;varORDER&quot;);\n    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Get_&quot;);\nShe gets the supplies.\n\n[three]:\n    var varORDER = squiffy.get(&quot;varORDER&quot;);\n    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Patch_&quot;);\nShe patches up his head.\n    \n[[four]]:\n    var varORDER = squiffy.get(&quot;varORDER&quot;);\n    \n    switch (varORDER) {\n    \n    case &quot;Wake_Patch_Get_&quot;:\n    squiffy.set(&quot;varORDER&quot;, &quot;woke up Mike and then I patched his head&quot;);\n    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;a little&quot;);\n    squiffy.set(&quot;varSUPPLIES&quot;, &quot;few&quot;);\n    break;\n    \n    case &quot;Get_Wake_Patch_&quot;:\n    squiffy.set(&quot;varORDER&quot;, &quot;got the supplies and then I woke up Mike&quot;);\n    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;);\n    squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;);\n    break;\n    \n    case &quot;Wake_Get_Patch_&quot;:\n    squiffy.set(&quot;varORDER&quot;, &quot;woke up Mike and then I got the supplies&quot;);\n    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;lots of&quot;);\n    squiffy.set(&quot;varSUPPLIES&quot;, &quot;all&quot;);\n    break;\n    \n    default:\n    if (varORDER.indexOf(&quot;Get&quot;)==-1) {squiffy.set(&quot;varSUPPLIES&quot;, &quot;none&quot;)} else {squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;)};\n    if (varORDER.indexOf(&quot;Patch&quot;)==-1) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;all of his&quot;)} else {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;)};\n    squiffy.set(&quot;varORDER&quot;, &quot;panicked and didn't think things through&quot;);\n    }\n    \n&quot;Well,&quot; she says, &quot;First I {varORDER}.&quot; Mike has lost {varBLOODLOSS} blood and she got {varSUPPLIES} of the supplies.",
      "EditableFormat": "bbcode",
      "HTML": "Here's another method. It uses one variable, varORDER, which gets each step concatenated to it in the order they are done.<br/>The &quot;switch&quot; thing checks if varORDER matches each &quot;case&quot; and then sets the variables varBLOODLOSS and varSUPPLIES, and also changes varORDER to a new string.<br/>The &quot;default&quot; is done if there is no match. The &quot;varORDER.indexOf(&quot;Get&quot;)==-1&quot; checks to see if &quot;Get&quot; is NOT in the string varORDER.<br/>You could check if the word &quot;Get&quot; IS in the string like so: varORDER.indexOf(&quot;Get&quot;)&gt;0<br/><br/><br/><br/>@title Testing<br/>[[initialize the variables]]:<br/>    squiffy.set(&quot;varORDER&quot;, &quot;&quot;)<br/>Here is some text. Click to [[starthere]].<br/>[[starthere]]:<br/>Should she [Wake Mike](one) or [get supplies?](two) or [[move on to next section]](four)<br/><br/>[one]:<br/>    var varORDER = squiffy.get(&quot;varORDER&quot;);<br/>    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Wake_&quot;);<br/>She wakes Mike. Should she [patch his head](three) now?<br/><br/>[two]:<br/>    var varORDER = squiffy.get(&quot;varORDER&quot;);<br/>    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Get_&quot;);<br/>She gets the supplies.<br/><br/>[three]:<br/>    var varORDER = squiffy.get(&quot;varORDER&quot;);<br/>    squiffy.set(&quot;varORDER&quot;, varORDER + &quot;Patch_&quot;);<br/>She patches up his head.<br/>    <br/>[[four]]:<br/>    var varORDER = squiffy.get(&quot;varORDER&quot;);<br/>    <br/>    switch (varORDER) {<br/>    <br/>    case &quot;Wake_Patch_Get_&quot;:<br/>    squiffy.set(&quot;varORDER&quot;, &quot;woke up Mike and then I patched his head&quot;);<br/>    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;a little&quot;);<br/>    squiffy.set(&quot;varSUPPLIES&quot;, &quot;few&quot;);<br/>    break;<br/>    <br/>    case &quot;Get_Wake_Patch_&quot;:<br/>    squiffy.set(&quot;varORDER&quot;, &quot;got the supplies and then I woke up Mike&quot;);<br/>    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;);<br/>    squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;);<br/>    break;<br/>    <br/>    case &quot;Wake_Get_Patch_&quot;:<br/>    squiffy.set(&quot;varORDER&quot;, &quot;woke up Mike and then I got the supplies&quot;);<br/>    squiffy.set(&quot;varBLOODLOSS&quot;, &quot;lots of&quot;);<br/>    squiffy.set(&quot;varSUPPLIES&quot;, &quot;all&quot;);<br/>    break;<br/>    <br/>    default:<br/>    if (varORDER.indexOf(&quot;Get&quot;)==-1) {squiffy.set(&quot;varSUPPLIES&quot;, &quot;none&quot;)} else {squiffy.set(&quot;varSUPPLIES&quot;, &quot;some&quot;)};<br/>    if (varORDER.indexOf(&quot;Patch&quot;)==-1) {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;all of his&quot;)} else {squiffy.set(&quot;varBLOODLOSS&quot;, &quot;some&quot;)};<br/>    squiffy.set(&quot;varORDER&quot;, &quot;panicked and didn't think things through&quot;);<br/>    }<br/>    <br/>&quot;Well,&quot; she says, &quot;First I {varORDER}.&quot; Mike has lost {varBLOODLOSS} blood and she got {varSUPPLIES} of the supplies.",
      "PostDate": "2015-07-26T19:23:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37388",
      "UserId": 0,
      "Username": "trevers18",
      "UserAvatar": null,
      "UserGravatar": "dd4cf70219b81e797c1bd7bcab3a17bf",
      "EditableText": "That worked out great! Thanks to both of you!",
      "EditableFormat": "bbcode",
      "HTML": "That worked out great! Thanks to both of you!",
      "PostDate": "2015-07-28T00:12:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38050",
      "UserId": 0,
      "Username": "Biep",
      "UserAvatar": null,
      "UserGravatar": "ab7111d498d8dd956796bb7f96f8e2e4",
      "EditableText": "This works:[code:2ouzim2w]Do &#91;a&#93; or &#91;b&#93; or &#91;c&#93;&#46;\n\n&#91;&#93;&#58;\n@inc step\n\n&#91;a&#93;&#58;\n    squiffy&#46;set(&quot;a&quot;, squiffy&#46;get(&quot;step&quot;))\nYou did a&#46;\n\n&#91;b&#93;&#58;\n    squiffy&#46;set(&quot;b&quot;, squiffy&#46;get(&quot;step&quot;))\nYou did b&#46;\n\n&#91;c&#93;&#58;\n    squiffy&#46;set(&quot;c&quot;, squiffy&#46;get(&quot;step&quot;))\nYou did c&#46;\n\n&#91;@2&#93;&#58;\n    squiffy&#46;story&#46;go(&quot;ready&quot;);\n\n&#91;&#91;ready&#93;&#93;&#58;\nSo a={a} b={b} and c={c}&#46;[/code:2ouzim2w]Which is short, but setting the variables is still convoluted.\n\nI had hoped &quot;@set a=step&quot; would work, but that sets a to the string &quot;step&quot;. &quot;@set a={step}&quot; doesn't work either, nor does &quot;@set a=[step]&quot; together with a passage [code:2ouzim2w]&#91;step&#93;&#58;\n{step}[/code:2ouzim2w]",
      "EditableFormat": "bbcode",
      "HTML": "This works:<pre><code>Do &#91;a&#93; or &#91;b&#93; or &#91;c&#93;&#46;<br/><br/>&#91;&#93;&#58;<br/>@inc step<br/><br/>&#91;a&#93;&#58;<br/>    squiffy&#46;set(&quot;a&quot;, squiffy&#46;get(&quot;step&quot;))<br/>You did a&#46;<br/><br/>&#91;b&#93;&#58;<br/>    squiffy&#46;set(&quot;b&quot;, squiffy&#46;get(&quot;step&quot;))<br/>You did b&#46;<br/><br/>&#91;c&#93;&#58;<br/>    squiffy&#46;set(&quot;c&quot;, squiffy&#46;get(&quot;step&quot;))<br/>You did c&#46;<br/><br/>&#91;@2&#93;&#58;<br/>    squiffy&#46;story&#46;go(&quot;ready&quot;);<br/><br/>&#91;&#91;ready&#93;&#93;&#58;<br/>So a={a} b={b} and c={c}&#46;</code></pre>Which is short, but setting the variables is still convoluted.<br/><br/>I had hoped &quot;@set a=step&quot; would work, but that sets a to the string &quot;step&quot;. &quot;@set a={step}&quot; doesn't work either, nor does &quot;@set a=[step]&quot; together with a passage <pre><code>&#91;step&#93;&#58;<br/>{step}</code></pre>",
      "PostDate": "2015-09-23T13:49:44+01:00",
      "LastEditDate": null
    }
  ]
}
