{
  "Topic": {
    "TopicId": "1gr-kfvp9kez-iwu-mh_iq",
    "ForumId": "10",
    "Title": "Stacking system: Comparison",
    "LastUpdated": "2017-10-17T09:34:42.0512551Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ead6aebd-5af8-44c3-bd5f-9d1604b47077",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Item stacking seems to be a common thing people want to do; and as far as I can see there's three main ways to do it. I thought it might be interesting to compare the pros/cons of each method. Are there any methods I'm missing, or other advantages?\r\n\r\n1. **One object, `count` attribute**\r\nThe most obvious solution, maybe the first one you'd think of.\r\n   * ADVANTAGE: Simple data structure; easy to understand.\r\n   * ADVANTAGE: Small number of objects; lower memory use; maybe quicker.\r\n   * ADVANTAGE: Simple attribute to check how many the player has got.\r\n   * DISADVANTAGE: Code ends up in lots of places. There are a *lot* of things that don't work properly unless you add extra code to deal with them (Including inventory limits, and any script/library that interacts with the player's inventory at all, such as shops), meaning the code quickly ends up being more complex than other methods.\r\n\r\n2. **Object as a container**\r\nIf you're carrying one object and pick up another, they go inside each other.\r\n   * ADVANTAGE: Can be implemented as a single script, so all the code is in one place.\r\n   * ADVANTAGE: Works effortlessly with inventory limits, and with any shop system etc. that understands the concept of containers.\r\n   * ADVANTAGE: A bit of careful alias changing can let the player input \"get 3 bananas\" without needing to modify the commands at all.\r\n   * ADVANTAGE: Objects can have unique features and still stack. You could have a bunch of different flowers that stack together, but can be separated in some cases.\r\n   * DISADVANTAGE: Different ways of implementing this, which seems to give a choice between being inefficient or inelegant.\r\n   * DISADVANTAGE: Has more objects in play than method 1, so can be slower.\r\n\r\n3. **Separate objects, override `FormatObjectList` and/or `updateList` functions**\r\nYou don't necessarily need to treat the objects as a stack internally. You could just change the functions that format a list of objects for displaying to the user, such that it only shows each item once.\r\n   * ADVANTAGE: Works with all other systems/scripts/libraries, because it doesn't change the internal representation of the objects at all.\r\n   * ADVANTAGE: Quick, simple.\r\n   * DISADVANTAGE: Player can only interact with one object at a time, unless you add extra code elsewhere (in which case you're almost maintaining two stacking systems at once)\r\n\r\n\r\nHaving implemented all three, I have to say 2 is my favourite so far.\r\nAre there any I'm missing?",
      "EditableFormat": "markdown",
      "HTML": "<p>Item stacking seems to be a common thing people want to do; and as far as I can see there's three main ways to do it. I thought it might be interesting to compare the pros/cons of each method. Are there any methods I'm missing, or other advantages?</p>\n<ol>\n<li>\n<p><strong>One object, <code>count</code> attribute</strong><br>\nThe most obvious solution, maybe the first one you'd think of.</p>\n<ul>\n<li>ADVANTAGE: Simple data structure; easy to understand.</li>\n<li>ADVANTAGE: Small number of objects; lower memory use; maybe quicker.</li>\n<li>ADVANTAGE: Simple attribute to check how many the player has got.</li>\n<li>DISADVANTAGE: Code ends up in lots of places. There are a <em>lot</em> of things that don't work properly unless you add extra code to deal with them (Including inventory limits, and any script/library that interacts with the player's inventory at all, such as shops), meaning the code quickly ends up being more complex than other methods.</li>\n</ul>\n</li>\n<li>\n<p><strong>Object as a container</strong><br>\nIf you're carrying one object and pick up another, they go inside each other.</p>\n<ul>\n<li>ADVANTAGE: Can be implemented as a single script, so all the code is in one place.</li>\n<li>ADVANTAGE: Works effortlessly with inventory limits, and with any shop system etc. that understands the concept of containers.</li>\n<li>ADVANTAGE: A bit of careful alias changing can let the player input \"get 3 bananas\" without needing to modify the commands at all.</li>\n<li>ADVANTAGE: Objects can have unique features and still stack. You could have a bunch of different flowers that stack together, but can be separated in some cases.</li>\n<li>DISADVANTAGE: Different ways of implementing this, which seems to give a choice between being inefficient or inelegant.</li>\n<li>DISADVANTAGE: Has more objects in play than method 1, so can be slower.</li>\n</ul>\n</li>\n<li>\n<p><strong>Separate objects, override <code>FormatObjectList</code> and/or <code>updateList</code> functions</strong><br>\nYou don't necessarily need to treat the objects as a stack internally. You could just change the functions that format a list of objects for displaying to the user, such that it only shows each item once.</p>\n<ul>\n<li>ADVANTAGE: Works with all other systems/scripts/libraries, because it doesn't change the internal representation of the objects at all.</li>\n<li>ADVANTAGE: Quick, simple.</li>\n<li>DISADVANTAGE: Player can only interact with one object at a time, unless you add extra code elsewhere (in which case you're almost maintaining two stacking systems at once)</li>\n</ul>\n</li>\n</ol>\n<p>Having implemented all three, I have to say 2 is my favourite so far.<br>\nAre there any I'm missing?</p>\n\n",
      "PostDate": "2017-10-17T09:34:42.0512551Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bbb06ef0-a569-43aa-beed-31cf63e9bd8d",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Me: Uses standard container code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Me: Uses standard container code.</p>\n\n",
      "PostDate": "2017-10-18T17:09:47.6100077Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f7dd0005-8e52-475a-a94c-06e045a56491",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ugh… I had method 2 working just how I wanted it before, and I can't replicate it. I can only get it to work properly with the new GetScope().\r\n\r\nBack to a crazy hybrid method:\r\n```\r\nforeach (c, AllCommands()) {\r\n  if (HasString(c, \"scope\") and not GetBoolean(c, \"supportsStackedObjects\")) {\r\n    c.realScript = c.script\r\n    c.script => {\r\n      stackedargs = getStackOptions(game.pov.currentcommandresolvedobjects)\r\n      if (ListCount(stackedargs) = 0) {\r\n        do (this, \"realScript\", game.pov.currentcommandresolvedelements)\r\n      }\r\n      else {\r\n        foreach (stackmembers, stackedargs) {\r\n          args = DictionaryCombine (game.pov.currentcommandresolvedelements, stackmembers)\r\n          do (this, \"realScript\", args)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Ugh… I had method 2 working just how I wanted it before, and I can't replicate it. I can only get it to work properly with the new GetScope().</p>\n<p>Back to a crazy hybrid method:</p>\n<pre><code>foreach (c, AllCommands()) {\n  if (HasString(c, \"scope\") and not GetBoolean(c, \"supportsStackedObjects\")) {\n    c.realScript = c.script\n    c.script =&gt; {\n      stackedargs = getStackOptions(game.pov.currentcommandresolvedobjects)\n      if (ListCount(stackedargs) = 0) {\n        do (this, \"realScript\", game.pov.currentcommandresolvedelements)\n      }\n      else {\n        foreach (stackmembers, stackedargs) {\n          args = DictionaryCombine (game.pov.currentcommandresolvedelements, stackmembers)\n          do (this, \"realScript\", args)\n        }\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2017-10-26T10:11:55.9338936Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "64102063-004b-491c-bd85-93f6758f19d3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My current script is a weird one. My `changedparent` script looks for all items of the same type in the same location. If it finds any, it loops over them (in object order) changing their aliases to \"Bunch of bananas (6)\", \"5 bananas\", \"4 bananas\", \"3 bananas\", \"2 bananas\", and \"banana.\" All objects except the first have their listalias changed to \"[STACK=o,n]\", where `o` is the name of the first object in the stack, and `n` is the quantity assigned to this particular object. I'm playing around with the javascript `updateList` function so that these extra objects appear with `display: none` in the sidebar; but when you select the first one, a drop-down-list to select a number appears next to the verb buttons.\r\n\r\nNext task is making this work the same in the case of FormatObjectList; which shouldn't be difficult because the JS already has a list of all the reachable objects for the sidebar; so I should be able to make the popup verb list when you click on an object have a number selector at the side.\r\n\r\nPutting the hidden objects in a container seems sensible, but ends up being more trouble than it's worth because they need to be in scope. For now they're transparent containers, relying on FormatObjectList and updateList to prevent them actually displaying. But that ends up being unnecessary work; I might as well have them all in the same place if they're hidden anyway.",
      "EditableFormat": "markdown",
      "HTML": "<p>My current script is a weird one. My <code>changedparent</code> script looks for all items of the same type in the same location. If it finds any, it loops over them (in object order) changing their aliases to \"Bunch of bananas (6)\", \"5 bananas\", \"4 bananas\", \"3 bananas\", \"2 bananas\", and \"banana.\" All objects except the first have their listalias changed to \"[STACK=o,n]\", where <code>o</code> is the name of the first object in the stack, and <code>n</code> is the quantity assigned to this particular object. I'm playing around with the javascript <code>updateList</code> function so that these extra objects appear with <code>display: none</code> in the sidebar; but when you select the first one, a drop-down-list to select a number appears next to the verb buttons.</p>\n<p>Next task is making this work the same in the case of FormatObjectList; which shouldn't be difficult because the JS already has a list of all the reachable objects for the sidebar; so I should be able to make the popup verb list when you click on an object have a number selector at the side.</p>\n<p>Putting the hidden objects in a container seems sensible, but ends up being more trouble than it's worth because they need to be in scope. For now they're transparent containers, relying on FormatObjectList and updateList to prevent them actually displaying. But that ends up being unnecessary work; I might as well have them all in the same place if they're hidden anyway.</p>\n\n",
      "PostDate": "2017-10-26T11:39:44.1322081Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8de42631-da8d-4907-a600-453e99d4faa1",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@@mrangel,\r\nHave you worked out anything further on this issue? I sent you a message pleading for your \"take three bananas\" but accidently sent it to K.V. (btw) @K.V. thanks for your help.\r\n\r\nHere is what I am working on now. It only asks \"how many\" one time which the player inputs a number (is good, but ain't three bananas good.) Let's use a potion as an example.\r\n\r\nThis is the drop script for a healing potion to give an idea.  The \"potion_of_healing\" never leaves inventory. It may or may not be visible at times. I start with it visible, letting the player have a little bonus item to start.\r\n\r\nThe \"potion_of_healing1\" is the only other healing potion in the game at this time. I have to add a referencing script to more healing potions using (GetChildren(player.parent,Somesort of alias?) otherwise if the player drops a potion in a room and picks one up in another room then the one he/she dropped will be moved.  \r\n\r\nIf you or anyone else has insight on this script, please jump in...\r\n\r\n<h3>EDITED THIS SCRIPT on 12-16-17</h3> <h3> And again on 12-18-17</h3>\r\n\r\nThis is a drop script for 'potion_of_healing'. There needs to be a 'take' script for 'potion_of_healing1' as well. Ask if you want it.\r\nYou will se a 'ClearTurn\" function being called. it is a custom function to ClearScreen and ShowsRoomDescription.\r\n```\r\nif (Contains(player.parent.dropdestination, potion_of_healing1)) {\r\n  if (potion_of_healing.volume = 1) {\r\n    MakeObjectInvisible (potion_of_healing)\r\n    potion_of_healing1.volume = potion_of_healing1.volume + 1\r\n    potion_of_healing1.alias = \"healing potions\"\r\n    ClearTurn\r\n    msg (\"<br>You drop the healing potion.\")\r\n  }\r\n  else if (potion_of_healing.volume > 1) {\r\n    ClearTurn\r\n    msg (\"<br>How many healing potions would you like to drop?\")\r\n    msg (\"<i>Choose from 0 to \" + potion_of_healing.volume + \".\")\r\n    get input {\r\n      if (IsInt(result)) {\r\n        result2 = ToInt(result)\r\n        v = potion_of_healing.volume\r\n        if (result2 > 0 and  result2 < v + 1) {\r\n          potion_of_healing.volume = potion_of_healing.volume - result2\r\n          potion_of_healing1.volume = potion_of_healing1.volume + result2\r\n          potion_of_healing1.alias = \"healing potions\"\r\n          ClearTurn\r\n          msg (\"<br>You drop \" + result2 + \".\")\r\n        }\r\n        if (potion_of_healing.volume <= 0) {\r\n          MakeObjectInvisible (potion_of_healing)\r\n          potion_of_healing.volume = 1\r\n          potion_of_healing.alias = \"healing potion\"\r\n        }\r\n        if (result2 > v) {\r\n          do (potion_of_healing, \"drop\")\r\n          msg (\"<br><b>You don't have \" + result2 + \" healing potions!\")\r\n        }\r\n        if (result2 = 0) {\r\n          ClearTurn\r\n          msg (\"<br>You change your mind.\")\r\n        }\r\n      }\r\n      else if (not IsInt(result)) {\r\n        do (potion_of_healing, \"drop\")\r\n        msg (\"<b>That is not a number. Like 1 or 2...sheesh.\")\r\n      }\r\n      else {\r\n        do (potion_of_healing, \"drop\")\r\n        msg (\"<br>Really? You have a negative number of healing potions?\")\r\n      }\r\n    }\r\n  }\r\n}\r\nelse {\r\n  if (potion_of_healing.volume = 1) {\r\n    MakeObjectInvisible (potion_of_healing)\r\n    MoveObject (potion_of_healing1, player.dropdestination)\r\n    ClearTurn\r\n    msg (\"<br>You drop the healing potion.\")\r\n  }\r\n  else if (potion_of_healing.volume>1) {\r\n    ClearTurn\r\n    msg (\"<br>How many healing potions would you like to drop?\")\r\n    msg (\"<i>Choose from 0 to \" + potion_of_healing.volume + \".\")\r\n    get input {\r\n      if (IsInt(result)) {\r\n        result2 = ToInt(result)\r\n        v = potion_of_healing.volume\r\n        if (result2 > 0 and  result2 < v + 1) {\r\n          potion_of_healing.volume = potion_of_healing.volume - result2\r\n          potion_of_healing1.volume = potion_of_healing1.volume + result2\r\n          potion_of_healing1.alias = \"healing potion\"\r\n          ClearTurn\r\n          msg (\"<br>You drop \" + result2 + \".\")\r\n        }\r\n        if (potion_of_healing.volume <= 0) {\r\n          MakeObjectInvisible (potion_of_healing)\r\n          potion_of_healing.volume = 1\r\n          potion_of_healing.alias = \"healing potion\"\r\n        }\r\n        if (result2 > v) {\r\n          do (potion_of_healing, \"drop\")\r\n          msg (\"<br><b>You don't have \" + result2 + \" healing potions!\")\r\n        }\r\n        else {\r\n          do (potion_of_healing, \"drop\")\r\n          msg (\"<br>Really? You have a negative number of healing potions?\")\r\n        }\r\n      }\r\n      else if (not IsInt(result)) {\r\n        do (potion_of_healing, \"drop\")\r\n        msg (\"<b>That is not a number. Like 1 or 2...sheesh.\")\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAny help moving forward would be appreciated!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@@mrangel,<br>\nHave you worked out anything further on this issue? I sent you a message pleading for your \"take three bananas\" but accidently sent it to K.V. (btw) @K.V. thanks for your help.</p>\n<p>Here is what I am working on now. It only asks \"how many\" one time which the player inputs a number (is good, but ain't three bananas good.) Let's use a potion as an example.</p>\n<p>This is the drop script for a healing potion to give an idea.  The \"potion_of_healing\" never leaves inventory. It may or may not be visible at times. I start with it visible, letting the player have a little bonus item to start.</p>\n<p>The \"potion_of_healing1\" is the only other healing potion in the game at this time. I have to add a referencing script to more healing potions using (GetChildren(player.parent,Somesort of alias?) otherwise if the player drops a potion in a room and picks one up in another room then the one he/she dropped will be moved.</p>\n<p>If you or anyone else has insight on this script, please jump in...</p>\n<p></p><h3>EDITED THIS SCRIPT on 12-16-17</h3> <h3> And again on 12-18-17</h3><p></p>\n<p>This is a drop script for 'potion_of_healing'. There needs to be a 'take' script for 'potion_of_healing1' as well. Ask if you want it.<br>\nYou will se a 'ClearTurn\" function being called. it is a custom function to ClearScreen and ShowsRoomDescription.</p>\n<pre><code>if (Contains(player.parent.dropdestination, potion_of_healing1)) {\n  if (potion_of_healing.volume = 1) {\n    MakeObjectInvisible (potion_of_healing)\n    potion_of_healing1.volume = potion_of_healing1.volume + 1\n    potion_of_healing1.alias = \"healing potions\"\n    ClearTurn\n    msg (\"&lt;br&gt;You drop the healing potion.\")\n  }\n  else if (potion_of_healing.volume &gt; 1) {\n    ClearTurn\n    msg (\"&lt;br&gt;How many healing potions would you like to drop?\")\n    msg (\"&lt;i&gt;Choose from 0 to \" + potion_of_healing.volume + \".\")\n    get input {\n      if (IsInt(result)) {\n        result2 = ToInt(result)\n        v = potion_of_healing.volume\n        if (result2 &gt; 0 and  result2 &lt; v + 1) {\n          potion_of_healing.volume = potion_of_healing.volume - result2\n          potion_of_healing1.volume = potion_of_healing1.volume + result2\n          potion_of_healing1.alias = \"healing potions\"\n          ClearTurn\n          msg (\"&lt;br&gt;You drop \" + result2 + \".\")\n        }\n        if (potion_of_healing.volume &lt;= 0) {\n          MakeObjectInvisible (potion_of_healing)\n          potion_of_healing.volume = 1\n          potion_of_healing.alias = \"healing potion\"\n        }\n        if (result2 &gt; v) {\n          do (potion_of_healing, \"drop\")\n          msg (\"&lt;br&gt;&lt;b&gt;You don't have \" + result2 + \" healing potions!\")\n        }\n        if (result2 = 0) {\n          ClearTurn\n          msg (\"&lt;br&gt;You change your mind.\")\n        }\n      }\n      else if (not IsInt(result)) {\n        do (potion_of_healing, \"drop\")\n        msg (\"&lt;b&gt;That is not a number. Like 1 or 2...sheesh.\")\n      }\n      else {\n        do (potion_of_healing, \"drop\")\n        msg (\"&lt;br&gt;Really? You have a negative number of healing potions?\")\n      }\n    }\n  }\n}\nelse {\n  if (potion_of_healing.volume = 1) {\n    MakeObjectInvisible (potion_of_healing)\n    MoveObject (potion_of_healing1, player.dropdestination)\n    ClearTurn\n    msg (\"&lt;br&gt;You drop the healing potion.\")\n  }\n  else if (potion_of_healing.volume&gt;1) {\n    ClearTurn\n    msg (\"&lt;br&gt;How many healing potions would you like to drop?\")\n    msg (\"&lt;i&gt;Choose from 0 to \" + potion_of_healing.volume + \".\")\n    get input {\n      if (IsInt(result)) {\n        result2 = ToInt(result)\n        v = potion_of_healing.volume\n        if (result2 &gt; 0 and  result2 &lt; v + 1) {\n          potion_of_healing.volume = potion_of_healing.volume - result2\n          potion_of_healing1.volume = potion_of_healing1.volume + result2\n          potion_of_healing1.alias = \"healing potion\"\n          ClearTurn\n          msg (\"&lt;br&gt;You drop \" + result2 + \".\")\n        }\n        if (potion_of_healing.volume &lt;= 0) {\n          MakeObjectInvisible (potion_of_healing)\n          potion_of_healing.volume = 1\n          potion_of_healing.alias = \"healing potion\"\n        }\n        if (result2 &gt; v) {\n          do (potion_of_healing, \"drop\")\n          msg (\"&lt;br&gt;&lt;b&gt;You don't have \" + result2 + \" healing potions!\")\n        }\n        else {\n          do (potion_of_healing, \"drop\")\n          msg (\"&lt;br&gt;Really? You have a negative number of healing potions?\")\n        }\n      }\n      else if (not IsInt(result)) {\n        do (potion_of_healing, \"drop\")\n        msg (\"&lt;b&gt;That is not a number. Like 1 or 2...sheesh.\")\n      }\n    }\n  }\n}\n</code></pre>\n<p>Any help moving forward would be appreciated!</p>\n\n",
      "PostDate": "2017-12-15T00:07:38.8400612Z",
      "LastEditDate": "2017-12-18T12:35:50.1477337Z",
      "link": null
    },
    {
      "PostId": "3d2b2587-8093-4c86-82fd-b1d8e6dd42c2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What?\r\n\r\nI didn't do it!  I'm innocent, I tell ya'! \r\n\r\nInnocent, see?!?!\r\n\r\nOh... You mean directing you here...\r\n\r\nNo problem, FW.  It's my pleasure.\r\n\r\nI was actually looking for the same thing a day or few before you messaged me.\r\n\r\nThe last I heard, mrangel's laptop broke.  (A hinge problem, I do believe.)\r\n\r\n---\r\nI've been sharing this link:\r\nhttps://www.amazon.com/Angel-Wedge/e/B00N5Q5XIK/ref=dp_byline_cont_ebooks_1\r\n\r\n...not just to get mrangel back, but because I believe his work deserves attention.  (Plus, it helps him out all-around, and helping out is what this forum is all about, right?)",
      "EditableFormat": "markdown",
      "HTML": "<p>What?</p>\n<p>I didn't do it!  I'm innocent, I tell ya'!</p>\n<p>Innocent, see?!?!</p>\n<p>Oh... You mean directing you here...</p>\n<p>No problem, FW.  It's my pleasure.</p>\n<p>I was actually looking for the same thing a day or few before you messaged me.</p>\n<p>The last I heard, mrangel's laptop broke.  (A hinge problem, I do believe.)</p>\n<hr>\n<p>I've been sharing this link:<br>\nhttps://www.amazon.com/Angel-Wedge/e/B00N5Q5XIK/ref=dp_byline_cont_ebooks_1</p>\n<p>...not just to get mrangel back, but because I believe his work deserves attention.  (Plus, it helps him out all-around, and helping out is what this forum is all about, right?)</p>\n\n",
      "PostDate": "2017-12-15T00:17:10.3311887Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c8d23d48-c562-4b2b-958a-95215310d32d",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "working on game edit...",
      "EditableFormat": "markdown",
      "HTML": "<p>working on game edit...</p>\n\n",
      "PostDate": "2017-12-15T04:31:02.9576158Z",
      "LastEditDate": "2017-12-15T08:24:28.8501726Z",
      "link": null
    },
    {
      "PostId": "7948c350-1522-4aad-9aa7-0c0413fbaf56",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, still no laptop :S\r\n\r\n>  I sent you a message pleading for your \"take three bananas\"\r\n\r\nI posted the script here, and got replies telling me I'm stupid, just use an object with the 'count' variable.\r\nBasically, I set it up so that an object's changeparent script checked if there was another object of the same type in the same place. FilterByAttribute on all child objects of the parent to find objects of matching type.\r\n\r\nMy original system had some flaws. Now tweaked, so it's more complex ): But it works.\r\n\r\nHaving found all objects of the same type in the same place, we make them containers and put them all inside each other. So the object \"Four Bananas\" contains \"Three Bananas\", which contains \"Two Bananas\", which contains \"Banana\". Giving them alt names \"Bananas (3)\" or similar could be useful.\r\nThese objects are all inside the last object, which is a container. I was already using a modified `FormatObjectList` function to show the objects in a room in order; so I just told it to skip showing the contents for containers with the `isstack` attribute. This means that you only see the top object, but `ScopeReachableNotHeld` and similar thinks you can see all of those objects. So you type \"take bananas\"and the system sees multiple matching objects; gives you the default menu for an ambiguous selection asking if you meant \"two bananas\", \"three bananas\" or so on. If you type \"take three bananas\", it takes the object whose alias is currently \"three bananas\", which conveniently contains two others.\r\n\r\n(originally I used a background scope script to put the nested objects into scope; but this has serious flaws. In the end, I tweaked it so that the stackable object is actually a container, making its contents reachable, but prepended a \"#\" to the start of the nested-objects' `listalias`, and some modified JS (UpdateList function I think) that skips those items when drawing the inventory. So rather than an object with a count property, we're actually dealing with a separate object for each item, but they have a single entry in the UI.)\r\n\r\nTop tip: The disambiguation menu seems to display objects in order of creation, the same order as GetAllChildObjects. So if you're using `FilterByAttribute(GetAllChildObjects(parent), \"prototype\", this.prototype)` or similar, then the first object found should be the innermost 'banana', and the last one the outermost container. This means that when the player sees a menu asking them to choose one, they can type a number and it will pick the right one. (Note: for this to work, the single banana needs an alt \"1 Bananas\", otherwise \"Two Bananas\" would be the first option for disambiguating \"Bananas\".\r\n\r\nHope that makes sense; typing through a mini panic at present, and also on a borrowed computer so no access to most of my files.\r\n\r\n(Which means that you won't be exposed to my horrible, horrible JSquest implementation for quite a while yet)\r\n\r\nAnd thanks KV :D Not being able to release a new book this month due to laptop issues has meant that my Author Rank sinks, so when I do release a new one it'll be lower down the 'new releases' list, which means it'll probably take a fortune in advertising to get to the point where I'm making enough to cover expenses again. So every view/sale/page/review is a big help in keeping it from falling too far.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, still no laptop :S</p>\n<blockquote>\n<p>I sent you a message pleading for your \"take three bananas\"</p>\n</blockquote>\n<p>I posted the script here, and got replies telling me I'm stupid, just use an object with the 'count' variable.<br>\nBasically, I set it up so that an object's changeparent script checked if there was another object of the same type in the same place. FilterByAttribute on all child objects of the parent to find objects of matching type.</p>\n<p>My original system had some flaws. Now tweaked, so it's more complex ): But it works.</p>\n<p>Having found all objects of the same type in the same place, we make them containers and put them all inside each other. So the object \"Four Bananas\" contains \"Three Bananas\", which contains \"Two Bananas\", which contains \"Banana\". Giving them alt names \"Bananas (3)\" or similar could be useful.<br>\nThese objects are all inside the last object, which is a container. I was already using a modified <code>FormatObjectList</code> function to show the objects in a room in order; so I just told it to skip showing the contents for containers with the <code>isstack</code> attribute. This means that you only see the top object, but <code>ScopeReachableNotHeld</code> and similar thinks you can see all of those objects. So you type \"take bananas\"and the system sees multiple matching objects; gives you the default menu for an ambiguous selection asking if you meant \"two bananas\", \"three bananas\" or so on. If you type \"take three bananas\", it takes the object whose alias is currently \"three bananas\", which conveniently contains two others.</p>\n<p>(originally I used a background scope script to put the nested objects into scope; but this has serious flaws. In the end, I tweaked it so that the stackable object is actually a container, making its contents reachable, but prepended a \"#\" to the start of the nested-objects' <code>listalias</code>, and some modified JS (UpdateList function I think) that skips those items when drawing the inventory. So rather than an object with a count property, we're actually dealing with a separate object for each item, but they have a single entry in the UI.)</p>\n<p>Top tip: The disambiguation menu seems to display objects in order of creation, the same order as GetAllChildObjects. So if you're using <code>FilterByAttribute(GetAllChildObjects(parent), \"prototype\", this.prototype)</code> or similar, then the first object found should be the innermost 'banana', and the last one the outermost container. This means that when the player sees a menu asking them to choose one, they can type a number and it will pick the right one. (Note: for this to work, the single banana needs an alt \"1 Bananas\", otherwise \"Two Bananas\" would be the first option for disambiguating \"Bananas\".</p>\n<p>Hope that makes sense; typing through a mini panic at present, and also on a borrowed computer so no access to most of my files.</p>\n<p>(Which means that you won't be exposed to my horrible, horrible JSquest implementation for quite a while yet)</p>\n<p>And thanks KV :D Not being able to release a new book this month due to laptop issues has meant that my Author Rank sinks, so when I do release a new one it'll be lower down the 'new releases' list, which means it'll probably take a fortune in advertising to get to the point where I'm making enough to cover expenses again. So every view/sale/page/review is a big help in keeping it from falling too far.</p>\n\n",
      "PostDate": "2017-12-15T14:03:28.0077687Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1de457b7-45b5-478b-9f54-0e14e5910fe0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ mrangel:\r\n\r\ndon't know if you looked at (know of) this or not, but it might give you some ideas/help:\r\n\r\nSora's Stackable Library ( http://textadventures.co.uk/forum/samples/topic/3515/stackable-library )\r\n\r\nhe seemed to have made a pretty good stacking system, he seems a pretty good coder (way better than me), as I still have some trouble understanding his stacking code, sighs. Your stacking code might be better, but doesn't hurt to take a look at it (if you haven't already), as at least might give some ideas you hadn't thought of with your own coding.",
      "EditableFormat": "markdown",
      "HTML": "<p>@ mrangel:</p>\n<p>don't know if you looked at (know of) this or not, but it might give you some ideas/help:</p>\n<p>Sora's Stackable Library ( http://textadventures.co.uk/forum/samples/topic/3515/stackable-library )</p>\n<p>he seemed to have made a pretty good stacking system, he seems a pretty good coder (way better than me), as I still have some trouble understanding his stacking code, sighs. Your stacking code might be better, but doesn't hurt to take a look at it (if you haven't already), as at least might give some ideas you hadn't thought of with your own coding.</p>\n\n",
      "PostDate": "2017-12-16T03:17:50.6082503Z",
      "LastEditDate": "2017-12-16T03:21:33.6745543Z",
      "link": null
    }
  ]
}
