{
  "Topic": {
    "TopicId": "09ix5snkvuegpc3zzmej0w",
    "ForumId": "24",
    "Title": "iframe onload event difficulty",
    "LastUpdated": "2021-08-19T01:17:32.5491239Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1b05ec62-866d-45e9-82cc-cadd226306db",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi everyone,\r\n\r\nI'm trying to automatically get data from a weather API. I figured this would work:\r\n\r\n```\r\n    window.myFunction = function() {\r\n      var weather = document.getElementById(\"weather\").value;\r\n\r\n\r\n<iframe  id=\"weather\" src=\"https://api.openweathermap.org/data/2.5/forecast?q=Chiayi%20City,%20TW&cnt=1&appid={ImNotSupposedToShareMyID}\" width=\"100%\" height=\"180\" style=\"border:0\" onload=\"myFunction()\"></iframe>\r\n```\r\n\r\nBut when the iframe loads, nothing happens.\r\n\r\nAny takers?\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi everyone,</p>\n<p>I'm trying to automatically get data from a weather API. I figured this would work:</p>\n<pre><code>    window.myFunction = function() {\n      var weather = document.getElementById(\"weather\").value;\n\n\n&lt;iframe  id=\"weather\" src=\"https://api.openweathermap.org/data/2.5/forecast?q=Chiayi%20City,%20TW&amp;cnt=1&amp;appid={ImNotSupposedToShareMyID}\" width=\"100%\" height=\"180\" style=\"border:0\" onload=\"myFunction()\"&gt;&lt;/iframe&gt;\n</code></pre>\n<p>But when the iframe loads, nothing happens.</p>\n<p>Any takers?</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2021-08-19T01:17:32.5491239Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2160ec0e-5dc3-478e-ad22-b600a98459f8",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I found it:\r\n\r\n```var weather = document.getElementById(\"weather\").contentWindow.document.body.innerHTML;```",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I found it:</p>\n<p><code>var weather = document.getElementById(\"weather\").contentWindow.document.body.innerHTML;</code></p>\n\n",
      "PostDate": "2021-08-19T04:57:58.8260138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7e8a4309-90ed-425c-bbe2-7f3939689fed",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This only works in the Squiffy editor. Not in browsers. I don't know why.",
      "EditableFormat": "markdown",
      "HTML": "<p>This only works in the Squiffy editor. Not in browsers. I don't know why.</p>\n\n",
      "PostDate": "2021-08-23T08:16:46.8945876Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29a63286-446e-42d8-bd08-ed010a563d67",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I *think* it's because your game page and the iframe come from two different sources.\r\n\r\nSomething about a Same Origin Policy (I think). \r\n\r\nhttps://javascript.info/cross-window-communication\r\n\r\n\r\n---\r\nIn the Squiffy editor, your game is running on your own virtual server. Online, though, the game is running from this site.\r\n\r\nIt's a little confusing, and I don't understand it well enough to explain what I (think I) know about it without possibly misinforming anyone.",
      "EditableFormat": "markdown",
      "HTML": "<p>I <em>think</em> it's because your game page and the iframe come from two different sources.</p>\n<p>Something about a Same Origin Policy (I think).</p>\n<p>https://javascript.info/cross-window-communication</p>\n<hr>\n<p>In the Squiffy editor, your game is running on your own virtual server. Online, though, the game is running from this site.</p>\n<p>It's a little confusing, and I don't understand it well enough to explain what I (think I) know about it without possibly misinforming anyone.</p>\n\n",
      "PostDate": "2021-08-23T15:00:42.5090932Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d399d37e-0262-4054-af80-909d83230566",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, K.V., I see. I guess what I'm trying to do is a security risk browsers don't want to allow.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, K.V., I see. I guess what I'm trying to do is a security risk browsers don't want to allow.</p>\n\n",
      "PostDate": "2021-08-23T15:05:40.220007Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e28afafd-da57-4ec6-be79-1d8c81af1518",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Why are you opening it in an iframe? That seems really bizarre.\r\n\r\nI think you want:\r\n```\r\n    $.ajax('https://api.openweathermap.org/data/2.5/forecast?q=Chiayi%20City,%20TW&cnt=1&appid={ImNotSupposedToShareMyID}', {complete: xhr => {\r\n        var weather = xhr.responseXML;\r\n        // do stuff here\r\n    }});\r\n```\r\n\r\nThat requests a document, and calls a function when it is completed. It doesn't display the weather page on the screen, but if you want to do that there's nothing to stop you doing:\r\n```\r\n        document.getElementById(\"weather\").contentWindow.document.body.innerHTML = weather;\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Why are you opening it in an iframe? That seems really bizarre.</p>\n<p>I think you want:</p>\n<pre><code>    $.ajax('https://api.openweathermap.org/data/2.5/forecast?q=Chiayi%20City,%20TW&amp;cnt=1&amp;appid={ImNotSupposedToShareMyID}', {complete: xhr =&gt; {\n        var weather = xhr.responseXML;\n        // do stuff here\n    }});\n</code></pre>\n<p>That requests a document, and calls a function when it is completed. It doesn't display the weather page on the screen, but if you want to do that there's nothing to stop you doing:</p>\n<pre><code>        document.getElementById(\"weather\").contentWindow.document.body.innerHTML = weather;\n</code></pre>\n\n",
      "PostDate": "2021-08-23T22:56:55.3929542Z",
      "LastEditDate": "2021-08-24T08:35:27.7238765Z",
      "link": null
    },
    {
      "PostId": "93e2df53-0678-4953-85d6-f61c46cc9bf6",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you, mrangel.\r\n\r\nI couldn't tell you the difference between bizzare javascript and the Javanese script of a fortune-teller at the bazaar. It's all just magic spells to me. On the rare ocassion one of the spells works, I am overcome with awe. \r\n\r\nI've never even heard of $.ajax before. That even sounds like a magic word. I daftly pasted your snippet into Squiffy verbatim. Oh, oh, but I did remember to use my ID key, and felt very clever about that. Of course it didn't do anything, because I was supposed to catch your drift. Instead, I fell backward watching it fly over my head.\r\n\r\nHowever, while examining the scrolls of the ancient sages at w3schools.com, I found [this](https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp):\r\n<blockquote>Access Across Domains<br>\r\nFor security reasons, modern browsers do not allow access across domains.\r\nThis means that both the web page and the XML file it tries to load, must be located on the same server.\r\nThe examples on W3Schools all open XML files located on the W3Schools domain.\r\nIf you want to use the example above on one of your own web pages, the XML files you load must be located on your own server.</blockquote></small>\r\n\r\nI suppose, then, K.V.'s point remains.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you, mrangel.</p>\n<p>I couldn't tell you the difference between bizzare javascript and the Javanese script of a fortune-teller at the bazaar. It's all just magic spells to me. On the rare ocassion one of the spells works, I am overcome with awe.</p>\n<p>I've never even heard of $.ajax before. That even sounds like a magic word. I daftly pasted your snippet into Squiffy verbatim. Oh, oh, but I did remember to use my ID key, and felt very clever about that. Of course it didn't do anything, because I was supposed to catch your drift. Instead, I fell backward watching it fly over my head.</p>\n<p>However, while examining the scrolls of the ancient sages at w3schools.com, I found <a href=\"https://www.w3schools.com/xml/ajax_xmlhttprequest_create.asp\">this</a>:</p>\n<blockquote>Access Across Domains<br>\nFor security reasons, modern browsers do not allow access across domains.\nThis means that both the web page and the XML file it tries to load, must be located on the same server.\nThe examples on W3Schools all open XML files located on the W3Schools domain.\nIf you want to use the example above on one of your own web pages, the XML files you load must be located on your own server.</blockquote>\n<p>I suppose, then, K.V.'s point remains.</p>\n\n",
      "PostDate": "2021-08-24T01:12:13.9957519Z",
      "LastEditDate": "2021-08-24T01:23:07.4164371Z",
      "link": null
    },
    {
      "PostId": "7fb6b072-0e75-41b5-a9cc-f48ac59c25dd",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was just guessing, really.\r\n\r\nIf it works in the editor but not online, that usually means it's related to the site origin when using Quest.\r\n\r\nPlus, mrangel knows much more about this stuff than I do.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was just guessing, really.</p>\n<p>If it works in the editor but not online, that usually means it's related to the site origin when using Quest.</p>\n<p>Plus, mrangel knows much more about this stuff than I do.</p>\n\n",
      "PostDate": "2021-08-24T01:39:58.4559363Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19b1e9a1-e2c9-4592-81d0-4e53f6c94483",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also (mainly so mrangel can see this), this is the weather page when testing with a proper API key in the url:\r\n\r\n```\r\n{\"cod\":\"200\",\"message\":0,\"cnt\":1,\"list\":[{\"dt\":1629774000,\"main\":{\"temp\":304.8,\"feels_like\":309.42,\"temp_min\":304.8,\"temp_max\":306.43,\"pressure\":1009,\"sea_level\":1009,\"grnd_level\":1005,\"humidity\":60,\"temp_kf\":-1.63},\"weather\":[{\"id\":500,\"main\":\"Rain\",\"description\":\"light rain\",\"icon\":\"10d\"}],\"clouds\":{\"all\":87},\"wind\":{\"speed\":3.48,\"deg\":226,\"gust\":4.04},\"visibility\":10000,\"pop\":0.62,\"rain\":{\"3h\":0.16},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2021-08-24 03:00:00\"}],\"city\":{\"id\":1678836,\"name\":\"Chiayi City\",\"coord\":{\"lat\":23.4792,\"lon\":120.4489},\"country\":\"TW\",\"population\":1000,\"timezone\":28800,\"sunrise\":1629754650,\"sunset\":1629800652}}\r\n```\r\n\r\n---\r\nAlso also, I tried mrangel's suggestion with a proper API key, but ```weather``` was undefined.\r\n\r\nI know nothing about AJAX, though. So, it's most assuredly my fault. :o)\r\n\r\n---\r\nTrying to get at the data using the DOM in the iFrame returns this: ```Uncaught DOMException: Permission denied to access property \"document\" on cross-origin object```",
      "EditableFormat": "markdown",
      "HTML": "<p>Also (mainly so mrangel can see this), this is the weather page when testing with a proper API key in the url:</p>\n<pre><code>{\"cod\":\"200\",\"message\":0,\"cnt\":1,\"list\":[{\"dt\":1629774000,\"main\":{\"temp\":304.8,\"feels_like\":309.42,\"temp_min\":304.8,\"temp_max\":306.43,\"pressure\":1009,\"sea_level\":1009,\"grnd_level\":1005,\"humidity\":60,\"temp_kf\":-1.63},\"weather\":[{\"id\":500,\"main\":\"Rain\",\"description\":\"light rain\",\"icon\":\"10d\"}],\"clouds\":{\"all\":87},\"wind\":{\"speed\":3.48,\"deg\":226,\"gust\":4.04},\"visibility\":10000,\"pop\":0.62,\"rain\":{\"3h\":0.16},\"sys\":{\"pod\":\"d\"},\"dt_txt\":\"2021-08-24 03:00:00\"}],\"city\":{\"id\":1678836,\"name\":\"Chiayi City\",\"coord\":{\"lat\":23.4792,\"lon\":120.4489},\"country\":\"TW\",\"population\":1000,\"timezone\":28800,\"sunrise\":1629754650,\"sunset\":1629800652}}\n</code></pre>\n<hr>\n<p>Also also, I tried mrangel's suggestion with a proper API key, but <code>weather</code> was undefined.</p>\n<p>I know nothing about AJAX, though. So, it's most assuredly my fault. :o)</p>\n<hr>\n<p>Trying to get at the data using the DOM in the iFrame returns this: <code>Uncaught DOMException: Permission denied to access property \"document\" on cross-origin object</code></p>\n\n",
      "PostDate": "2021-08-24T02:13:51.4311446Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "68193d65-279c-4b2f-b754-c56132dbac11",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I've never even heard of $.ajax before. That even sounds like a magic word.\r\n\r\nAJAX stands for Asynchronous Javascript And Xml. Basically, it means using javascript to request data from some other server. A few years ago it was like a magic word to many people, it was the special voodoo glue that was going to hold \"Web 2.0\" together.\r\n\r\nYour original code attempted to get a webpage from another server, display it in an iframe, and then set a JS variable `weather` to the contents of the iframe.\r\nThe script I gave you should (now I fixed a silly error) get a webpage from another server and put it in a JS variable called `weather`. The user won't see anything because the iframe isn't there, so you'd need to do something with that variable.\r\n\r\nBut now I know that the data on that page is JSON, there's probably a better way to do it (see below):\r\n\r\n<hr />\r\n\r\n> Also also, I tried mrangel's suggestion with a proper API key, but weather was undefined.\r\n\r\nMy bad. I put `innerXML` instead of `responseXML`.\r\n\r\nThe `$.ajax` method basically makes an HTTP(S) request, and when the request completes it runs a callback function whose first parameter is an XMLHttpRequest object. The most usual thing to do with this is look at the `responseXML` or `responseText` properties (I assumed it would be HTML, as you were displaying it in an iframe), and the `getResponseHeader` method.\r\n\r\nAn alternative way is to use the XMLHttpRequest returned by $.ajax or $.get and set handlers on it directly. For example:\r\n```\r\n    $.get (\"https://some.url.here/\").done(\r\n        function (data, status, xhr) {\r\n            // 'data' is the data returned by the server\r\n            // with JSON data, it should already be parsed for you\r\n            // so you could set a Squiffy attribute by doing something like:\r\n            squiffy.set(\"weather\", \"the temperature is \" + data.list[0].main.temp)\r\n        }\r\n    ).fail(\r\n        function (data, status, xhr) {\r\n            squiffy.set(\"weather\", \"The weather lookup failed because \" + status);\r\n        }\r\n    );\r\n```\r\n\r\n<hr />\r\n\r\nNow… the security thing. As KV said, most security policies won't allow access to a page from a different domain.\r\n*However*, this is a public API which is specifically designed to be accessed from other applications. Therefore it will probably supply an `Access-Control-Allow-Origin:` header to relax these restrictions.\r\n\r\nYou might need to tell that site somewhere on your account page which domains you will be accessing it from; some APIs require you to provide this information to ensure that the app using your key is really yours. So you'd need to give them the domain name of the site that's hosting the game. On this site, it would be `media.textadventures.co.uk`.\r\n\r\nHowever, there may still be some odd and unpredictable issues if your game is hosted on HTTP. If you're hosting on this site, check that the address in your browser starts with `https://` and not `http://`.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I've never even heard of $.ajax before. That even sounds like a magic word.</p>\n</blockquote>\n<p>AJAX stands for Asynchronous Javascript And Xml. Basically, it means using javascript to request data from some other server. A few years ago it was like a magic word to many people, it was the special voodoo glue that was going to hold \"Web 2.0\" together.</p>\n<p>Your original code attempted to get a webpage from another server, display it in an iframe, and then set a JS variable <code>weather</code> to the contents of the iframe.<br>\nThe script I gave you should (now I fixed a silly error) get a webpage from another server and put it in a JS variable called <code>weather</code>. The user won't see anything because the iframe isn't there, so you'd need to do something with that variable.</p>\n<p>But now I know that the data on that page is JSON, there's probably a better way to do it (see below):</p>\n<hr>\n<blockquote>\n<p>Also also, I tried mrangel's suggestion with a proper API key, but weather was undefined.</p>\n</blockquote>\n<p>My bad. I put <code>innerXML</code> instead of <code>responseXML</code>.</p>\n<p>The <code>$.ajax</code> method basically makes an HTTP(S) request, and when the request completes it runs a callback function whose first parameter is an XMLHttpRequest object. The most usual thing to do with this is look at the <code>responseXML</code> or <code>responseText</code> properties (I assumed it would be HTML, as you were displaying it in an iframe), and the <code>getResponseHeader</code> method.</p>\n<p>An alternative way is to use the XMLHttpRequest returned by $.ajax or $.get and set handlers on it directly. For example:</p>\n<pre><code>    $.get (\"https://some.url.here/\").done(\n        function (data, status, xhr) {\n            // 'data' is the data returned by the server\n            // with JSON data, it should already be parsed for you\n            // so you could set a Squiffy attribute by doing something like:\n            squiffy.set(\"weather\", \"the temperature is \" + data.list[0].main.temp)\n        }\n    ).fail(\n        function (data, status, xhr) {\n            squiffy.set(\"weather\", \"The weather lookup failed because \" + status);\n        }\n    );\n</code></pre>\n<hr>\n<p>Now… the security thing. As KV said, most security policies won't allow access to a page from a different domain.<br>\n<em>However</em>, this is a public API which is specifically designed to be accessed from other applications. Therefore it will probably supply an <code>Access-Control-Allow-Origin:</code> header to relax these restrictions.</p>\n<p>You might need to tell that site somewhere on your account page which domains you will be accessing it from; some APIs require you to provide this information to ensure that the app using your key is really yours. So you'd need to give them the domain name of the site that's hosting the game. On this site, it would be <code>media.textadventures.co.uk</code>.</p>\n<p>However, there may still be some odd and unpredictable issues if your game is hosted on HTTP. If you're hosting on this site, check that the address in your browser starts with <code>https://</code> and not <code>http://</code>.</p>\n\n",
      "PostDate": "2021-08-24T09:14:25.0392167Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "331c3bcc-c8fe-40d9-84ad-8b1323cfffa8",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That works!\r\n\r\nThanks, mrangel! You the man!",
      "EditableFormat": "markdown",
      "HTML": "<p>That works!</p>\n<p>Thanks, mrangel! You the man!</p>\n\n",
      "PostDate": "2021-08-24T14:03:59.1213639Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3a1cf23-e3c5-4db5-ba9e-245f0a8c5d6f",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This... is.... AMAZING! It works like magic! Thank you, mrangel! No more spending ten minutes every morning looking up the weather, deciding how to phrase it in simple English, and then having it be inaccurate for my later classes!",
      "EditableFormat": "markdown",
      "HTML": "<p>This... is.... AMAZING! It works like magic! Thank you, mrangel! No more spending ten minutes every morning looking up the weather, deciding how to phrase it in simple English, and then having it be inaccurate for my later classes!</p>\n\n",
      "PostDate": "2021-08-25T01:07:13.1553701Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
