{
  "Topic": {
    "TopicId": "x8sq6rxtkksmjgdtzfs7xa",
    "ForumId": "10",
    "Title": "call a command from a verb",
    "LastUpdated": "2020-11-21T12:34:29.2034981Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1554e2cf-1b8e-4154-85e5-84ef333eb015",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Feels like it's right on the tip of my tongue as it were, but I can't find the solution.\r\n\r\nI have an object that's a container. By default it's open and transparent, with child objects hidden until the container is looked at.\r\n(So when you 'look' command, the container is listed under the 'you can see', but after examining the object , what's inside becomes unhidden, so the 'you can see' part lists the container and what's in it.\r\n\r\nThat's all great.\r\n\r\nBut I want the exact same thing to happen if you use the custom verbs \"look in\" \"move\" and \"look under\".\r\n\r\nSo, in short, I want to call the examine function via the three custom verbs above.\r\n\r\nIs there an easy way to do this, or do I have to build a function?\r\n\r\nThank you all!",
      "EditableFormat": "markdown",
      "HTML": "<p>Feels like it's right on the tip of my tongue as it were, but I can't find the solution.</p>\n<p>I have an object that's a container. By default it's open and transparent, with child objects hidden until the container is looked at.<br>\n(So when you 'look' command, the container is listed under the 'you can see', but after examining the object , what's inside becomes unhidden, so the 'you can see' part lists the container and what's in it.</p>\n<p>That's all great.</p>\n<p>But I want the exact same thing to happen if you use the custom verbs \"look in\" \"move\" and \"look under\".</p>\n<p>So, in short, I want to call the examine function via the three custom verbs above.</p>\n<p>Is there an easy way to do this, or do I have to build a function?</p>\n<p>Thank you all!</p>\n\n",
      "PostDate": "2020-11-21T12:34:29.2034981Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c768dcc2-cf30-456b-8d9f-36b546b004b4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could use the parser, which acts just as if the player had typed a command:\r\n```\r\nHandleCommand (\"examine box\")\r\n```\r\nHowever, this is quite inefficient.\r\nA more efficient way is to call the command's script directly. Commands are actually objects, which have a script attribute named \"script\". So in the case of lookat, it would be:\r\n```\r\ndo (lookat, \"script\", QuickParams (\"object\", this))\r\n```\r\n(I used `this`, which refers to the object that a verb is attached to)",
      "EditableFormat": "markdown",
      "HTML": "<p>You could use the parser, which acts just as if the player had typed a command:</p>\n<pre><code>HandleCommand (\"examine box\")\n</code></pre>\n<p>However, this is quite inefficient.<br>\nA more efficient way is to call the command's script directly. Commands are actually objects, which have a script attribute named \"script\". So in the case of lookat, it would be:</p>\n<pre><code>do (lookat, \"script\", QuickParams (\"object\", this))\n</code></pre>\n<p>(I used <code>this</code>, which refers to the object that a verb is attached to)</p>\n\n",
      "PostDate": "2020-11-21T16:12:26.7270819Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
