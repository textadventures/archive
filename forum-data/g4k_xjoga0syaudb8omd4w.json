{
  "Topic": {
    "TopicId": "g4k_xjoga0syaudb8omd4w",
    "ForumId": "10",
    "Title": "Conditional If statements in msg () issues",
    "LastUpdated": "2022-01-04T23:05:29.9581378Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a7507fbd-0da4-4bc7-a116-a595bb14a710",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been experimenting with writing some complex chunk of inside of a single msg () but with optional attributes giving the flavour of the text conditional upon various settings but I'm coming short on certain uses of boolean type variable attributes and other special characters being used.\r\n\r\nFor instance if you use this:\r\n\r\n    msg (\"if player.ishungry=true:Player is hungry} )\r\n\r\nit won't work, but if you put this:\r\n\r\n    msg (\"{if player.ishungry=True:Player is hungry} \")\r\n\r\nThis one works. Notice that the boolean has to be capital case and not solid lower case.\r\n\r\nI'm also trying to do complex sentences with . and , in it but I keep getting this error message\r\n\r\n    msg (\"{if player.ishungry=True:Man, this Player is hungry.} \") >>> \"SyntaxError: Unexpected character: \"Line: 1, Column: 1\"\r\n\r\nI also want to try and do else statements without having to do the following:\r\n \r\n    msg (\"{if player.ishungry=True:Player is hungry}{if player.ishungry=False:Player is not hungry}\")\r\n\r\nIs there any specific documentation around If conditional text?",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been experimenting with writing some complex chunk of inside of a single msg () but with optional attributes giving the flavour of the text conditional upon various settings but I'm coming short on certain uses of boolean type variable attributes and other special characters being used.</p>\n<p>For instance if you use this:</p>\n<pre><code>msg (\"if player.ishungry=true:Player is hungry} )\n</code></pre>\n<p>it won't work, but if you put this:</p>\n<pre><code>msg (\"{if player.ishungry=True:Player is hungry} \")\n</code></pre>\n<p>This one works. Notice that the boolean has to be capital case and not solid lower case.</p>\n<p>I'm also trying to do complex sentences with . and , in it but I keep getting this error message</p>\n<pre><code>msg (\"{if player.ishungry=True:Man, this Player is hungry.} \") &gt;&gt;&gt; \"SyntaxError: Unexpected character: \"Line: 1, Column: 1\"\n</code></pre>\n<p>I also want to try and do else statements without having to do the following:</p>\n<pre><code>msg (\"{if player.ishungry=True:Player is hungry}{if player.ishungry=False:Player is not hungry}\")\n</code></pre>\n<p>Is there any specific documentation around If conditional text?</p>\n\n",
      "PostDate": "2022-01-04T23:05:29.9581378Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0404e2f2-dcd4-4d83-9f3f-f2a94c4d4e40",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This one works. Notice that the boolean has to be capital case and not solid lower case.\r\n\r\nIf you use `=`, both values are converted to strings before being compared.\r\nBut why are you even using a boolean in that case? Without an operator, `if` just tests if the given value is` true`, so `{if player.ishungry:Player is hungry}` does exactly the same thing.\r\n\r\n> I'm also trying to do complex sentences with . and , in it but I keep getting this error message\r\n\r\nThat should not happen, and the exact same line in a test game works fine for me. I think something else is causing your error.\r\n\r\n> I also want to try and do else statements without having to do the following:\r\n\r\nYou mean like `{either player.ishungry:Player is hungry:Player is not hungry}`?\r\n\r\n(Note: `{either` doesn't use the restricted and unreliable rules `{if` does for parsing its expressions - the condition is a normal Quest expression, so you can use anything you'd put in as the expression for an `if` statement in your main code. This means that you can use your own functions inside the condition, but it does mean that you can't use `attributename` as a shorthand for `game.attributename`, and you need to include quotes if you want to compare some attribute to a string)\r\n\r\nIn your particular example, I would probably use:\r\n```\r\nmsg (\"{either GetBoolean(player, \\\"ishungry\\\"):Player is hungry:Player is not hungry}\")\r\n```\r\nso that if the attribute hasn't been created yet, it's treated as false. I don't know if that's possible in your game in particular, but it's a good habit to get into so that you don't need to be so careful about setting every possible flag to false initially.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This one works. Notice that the boolean has to be capital case and not solid lower case.</p>\n</blockquote>\n<p>If you use <code>=</code>, both values are converted to strings before being compared.<br>\nBut why are you even using a boolean in that case? Without an operator, <code>if</code> just tests if the given value is<code>true</code>, so <code>{if player.ishungry:Player is hungry}</code> does exactly the same thing.</p>\n<blockquote>\n<p>I'm also trying to do complex sentences with . and , in it but I keep getting this error message</p>\n</blockquote>\n<p>That should not happen, and the exact same line in a test game works fine for me. I think something else is causing your error.</p>\n<blockquote>\n<p>I also want to try and do else statements without having to do the following:</p>\n</blockquote>\n<p>You mean like <code>{either player.ishungry:Player is hungry:Player is not hungry}</code>?</p>\n<p>(Note: <code>{either</code> doesn't use the restricted and unreliable rules <code>{if</code> does for parsing its expressions - the condition is a normal Quest expression, so you can use anything you'd put in as the expression for an <code>if</code> statement in your main code. This means that you can use your own functions inside the condition, but it does mean that you can't use <code>attributename</code> as a shorthand for <code>game.attributename</code>, and you need to include quotes if you want to compare some attribute to a string)</p>\n<p>In your particular example, I would probably use:</p>\n<pre><code>msg (\"{either GetBoolean(player, \\\"ishungry\\\"):Player is hungry:Player is not hungry}\")\n</code></pre>\n<p>so that if the attribute hasn't been created yet, it's treated as false. I don't know if that's possible in your game in particular, but it's a good habit to get into so that you don't need to be so careful about setting every possible flag to false initially.</p>\n\n",
      "PostDate": "2022-01-05T11:45:36.532896Z",
      "LastEditDate": "2022-01-05T11:48:34.7267832Z",
      "link": null
    },
    {
      "PostId": "9cb345c5-0960-4ec3-8c18-271da11310c7",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So for a string attribute type do I need to do the following?\r\n\r\n    msg (\"{if GetString(player, \\\"fooditem\"\\)=Cake:Player eats cake}\")\r\n\r\nCan you do a Switch type for this instead of {either} for multiple food items?\r\n\r\nAs for the special character issue I'll see what happens once I try out the {either and GetBoolean() and GetString() methods to see if its resolved this issue.",
      "EditableFormat": "markdown",
      "HTML": "<p>So for a string attribute type do I need to do the following?</p>\n<pre><code>msg (\"{if GetString(player, \\\"fooditem\"\\)=Cake:Player eats cake}\")\n</code></pre>\n<p>Can you do a Switch type for this instead of {either} for multiple food items?</p>\n<p>As for the special character issue I'll see what happens once I try out the {either and GetBoolean() and GetString() methods to see if its resolved this issue.</p>\n\n",
      "PostDate": "2022-01-05T11:58:08.5073218Z",
      "LastEditDate": "2022-01-05T12:26:23.4439362Z",
      "link": null
    },
    {
      "PostId": "073c3155-0317-4377-94d2-dd3629b76cee",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> So for a string attribute type do I need to do the following?\r\n\r\nSadly, there isn't a \"clean\" way to check if a string is undefined like there is for booleans (`GetString` still returns null if the attribute doesn't exist, so comparing it to a string would be an error.\r\n\r\nYou could use:\r\n```\r\nmsg(\"{either HasString(player,\\\"fooditem\\\") and GetString(player,\\\"fooditem\\\")=\\\"Cake\\\":Player  likes cake.}\")\r\n```\r\nwhich tests if the attribute exists *and* has the specified value (if it doesn't exist, there's no error because the second check isn't attempted.\r\n\r\nNote that you can only do this with `{either`, because `{if` can't use functions in the condition.\r\nThat's one of the reasons I only use `either` in the text processor.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>So for a string attribute type do I need to do the following?</p>\n</blockquote>\n<p>Sadly, there isn't a \"clean\" way to check if a string is undefined like there is for booleans (<code>GetString</code> still returns null if the attribute doesn't exist, so comparing it to a string would be an error.</p>\n<p>You could use:</p>\n<pre><code>msg(\"{either HasString(player,\\\"fooditem\\\") and GetString(player,\\\"fooditem\\\")=\\\"Cake\\\":Player  likes cake.}\")\n</code></pre>\n<p>which tests if the attribute exists <em>and</em> has the specified value (if it doesn't exist, there's no error because the second check isn't attempted.</p>\n<p>Note that you can only do this with <code>{either</code>, because <code>{if</code> can't use functions in the condition.<br>\nThat's one of the reasons I only use <code>either</code> in the text processor.</p>\n\n",
      "PostDate": "2022-01-05T12:27:14.8543209Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3881b9d0-5313-4ffd-accc-05889b769460",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What if I need to do a NOT case, will that work as expected?\r\n\r\n   msg (\"{either GetBoolean(player, \\\"ishungry\\\"):Player is hungry:Player is not hungry}\")\r\n   msg (\"{either NOT GetBoolean(player, \\\"ishungry\\\"):Player is not hungry:Player is hungry}\")",
      "EditableFormat": "markdown",
      "HTML": "<p>What if I need to do a NOT case, will that work as expected?</p>\n<p>msg (\"{either GetBoolean(player, \"ishungry\"):Player is hungry:Player is not hungry}\")<br>\nmsg (\"{either NOT GetBoolean(player, \"ishungry\"):Player is not hungry:Player is hungry}\")</p>\n\n",
      "PostDate": "2022-01-05T12:39:09.5341188Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "882ac284-af39-468e-b6f3-260c2b6ee028",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, that should work fine. `{either` can use any valid expression.\r\n\r\nOh… with regard to unspecified attributes, you can also use `{either Equal(player.fooditem, \\\"Cake\\\"):The player likes cake}`. I forgot about that for a moment; the `Equal` function tests if two values are the same type and are equal. I forgot about that when writing my last response.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, that should work fine. <code>{either</code> can use any valid expression.</p>\n<p>Oh… with regard to unspecified attributes, you can also use <code>{either Equal(player.fooditem, \\\"Cake\\\"):The player likes cake}</code>. I forgot about that for a moment; the <code>Equal</code> function tests if two values are the same type and are equal. I forgot about that when writing my last response.</p>\n\n",
      "PostDate": "2022-01-05T12:55:24.3754537Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0d7851e-2aa3-416b-a006-f96001786aef",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Can I nest {either within the conditional response of another {either statement?",
      "EditableFormat": "markdown",
      "HTML": "<p>Can I nest {either within the conditional response of another {either statement?</p>\n\n",
      "PostDate": "2022-01-05T13:17:22.9935032Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "104af5df-e097-4599-a56c-7a140b084b9d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes  :) That should work fine.\r\n\r\nFor some reason (I have no idea why), you might find that it also recognises `{either player.someflag:It's true!|It's false!}` works – it can use a `|` instead of a `:` before the 'else' clause. I have no idea why it works like this. If both are present, it will use the colon.\r\n\r\n(also, if your text includes an actual colon, you can use `&#58;` to avoid the text processor mistaking it for a part of the message)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes  :) That should work fine.</p>\n<p>For some reason (I have no idea why), you might find that it also recognises <code>{either player.someflag:It's true!|It's false!}</code> works – it can use a <code>|</code> instead of a <code>:</code> before the 'else' clause. I have no idea why it works like this. If both are present, it will use the colon.</p>\n<p>(also, if your text includes an actual colon, you can use <code>&amp;#58;</code> to avoid the text processor mistaking it for a part of the message)</p>\n\n",
      "PostDate": "2022-01-05T13:24:41.594889Z",
      "LastEditDate": "2022-01-05T13:27:27.526412Z",
      "link": null
    },
    {
      "PostId": "3961a1cc-c6c8-42e1-b57f-be445bc7e2e8",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just in case what are the escape codes for commas and full stops, and question marks just in case my error pops up again?",
      "EditableFormat": "markdown",
      "HTML": "<p>Just in case what are the escape codes for commas and full stops, and question marks just in case my error pops up again?</p>\n\n",
      "PostDate": "2022-01-05T14:49:24.7972692Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d9eb9f4d-6327-4076-9139-08051e7353ef",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nevermind, looks like the issue I was having with a bad character was actually a CR LF pair which had somehow ended up in the middle of the body of text via a text editor.",
      "EditableFormat": "markdown",
      "HTML": "<p>Nevermind, looks like the issue I was having with a bad character was actually a CR LF pair which had somehow ended up in the middle of the body of text via a text editor.</p>\n\n",
      "PostDate": "2022-01-05T17:53:03.701092Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
