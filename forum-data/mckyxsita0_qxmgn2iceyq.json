{
  "Topic": {
    "TopicId": "mckyxsita0_qxmgn2iceyq",
    "ForumId": "10",
    "Title": "Succeded in getting Quest to run in Wine using Portingkit on MacOS Sonoma",
    "LastUpdated": "2023-12-15T22:12:38.5703098Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "87835a03-f0b6-4bb0-ae35-b4e6ec4a846d",
      "UserId": 518233,
      "Username": "Vurt834",
      "AvatarUrl": "https://secure.gravatar.com/avatar/eba9253a96bb6b0a227a5c7bd72ffb72?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, after months of sifting through forum posts, and other internet sources, as well as using AI as my search helper toward the end, I figured out what winetricks I'd been missing in the ones I'd been using, I managed to get Quest functioning well enough on macOS Sonoma for playing games. Game creation remains limited – the editor throws endless errors, though playing games works okay, with sound functionality possibly limited but achievable through HTML commands. I haven't tested it exhaustively, but I got it working in Crossover, Whiskey, and PortingKit. It performs best in PortingKit, as I could bottle the software and write VBS and BAT files to launch my game automatically. The game even runs after removing Wine and PortingKit, making it a standalone app, albeit not without quirks. Wine always gets flagged for malware, which pops up when starting the software.\r\n\r\nI advocated for Quest's inclusion in Crossover and recently submitted a Crosstie, awaiting approval. My motivation stemmed from the website's instability and consistent save game failures. Now, games open and save flawlessly.\r\n\r\nOriginally, the forum post with the correct winetricks used it on Linux in a win 7 bottle, so creating Quest there is likely possible. Crossover also functions in ChromeOS as well (I think).\r\n\r\nThe steps I used: for PortingKit, enable advanced commands in the preferences, then create a new port using advanced options. In the new port, a list will open for editing all the bottle creation steps. Change the first step to setting the OS to Windows 7 (not 10), and the bottle defaults to 32-bit automatically. Leave the auto-selected Wine version the same. Keep all the included vcrun steps and delete the final EXE setup step. Add the winetrick \"dotnet40,\" then re-add the run EXE command with the installer path (add path or check user provided option). Next, add the winetricks \"windowscodecs,\" \"gdiplus,\" \"corefonts,\" \"vbrun6,\" and \"speechsdk.\" Run the script; it will ask again about the bottle's OS. Choose Windows 7, then select the installer when prompted. When Quest finishes installing into the bottle, uncheck run program after install (if you don't, quest will error out and the script may not run properly), and the bottle will wrap up. When you run the port, it'll ask what exe to run, select quest.exe (it detects it automatically). You can also point to the exe with the script by entering it's future C:\\ path. It will remember this in future executions. And that's it. \r\n\r\nCrossover and Whiskey have similar processes, but are different. But, PortingKit uses a similar Wine version to Crossover, so it seems to work better. PortingKit is also free, so recommending it to your users is safe and they can use it indefinitely. I'm planning a significant donation to PortingKit as a token of my immense gratitude, and I encourage you to consider doing the same. It's a fantastic freeware program.\r\n\r\nI've created an automated PortingKit script and a Crossover Tie file for automatic Quest setup, but I'm currently unsure about publicly sharing them (if that's not ok due to forum rules). Feel free to message me for them though. Alternatively, I can explain Crossover's requirements and guide you through creating your own Tie file on Codeweavers' website (requires Bettertester status). But, if my Crosstie is approved, the program will be searchable and installable directly through Crossover. The tie credits the author of Quest, and downloads the software from the main website, so I think that doesn't violate Quest's terms and conditions. If it does, someone feel free to pipe in, and I'll adjust the tie file and portingkit wsi2 file.\r\n\r\nI hope this information helps everyone out!",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, after months of sifting through forum posts, and other internet sources, as well as using AI as my search helper toward the end, I figured out what winetricks I'd been missing in the ones I'd been using, I managed to get Quest functioning well enough on macOS Sonoma for playing games. Game creation remains limited – the editor throws endless errors, though playing games works okay, with sound functionality possibly limited but achievable through HTML commands. I haven't tested it exhaustively, but I got it working in Crossover, Whiskey, and PortingKit. It performs best in PortingKit, as I could bottle the software and write VBS and BAT files to launch my game automatically. The game even runs after removing Wine and PortingKit, making it a standalone app, albeit not without quirks. Wine always gets flagged for malware, which pops up when starting the software.</p>\n<p>I advocated for Quest's inclusion in Crossover and recently submitted a Crosstie, awaiting approval. My motivation stemmed from the website's instability and consistent save game failures. Now, games open and save flawlessly.</p>\n<p>Originally, the forum post with the correct winetricks used it on Linux in a win 7 bottle, so creating Quest there is likely possible. Crossover also functions in ChromeOS as well (I think).</p>\n<p>The steps I used: for PortingKit, enable advanced commands in the preferences, then create a new port using advanced options. In the new port, a list will open for editing all the bottle creation steps. Change the first step to setting the OS to Windows 7 (not 10), and the bottle defaults to 32-bit automatically. Leave the auto-selected Wine version the same. Keep all the included vcrun steps and delete the final EXE setup step. Add the winetrick \"dotnet40,\" then re-add the run EXE command with the installer path (add path or check user provided option). Next, add the winetricks \"windowscodecs,\" \"gdiplus,\" \"corefonts,\" \"vbrun6,\" and \"speechsdk.\" Run the script; it will ask again about the bottle's OS. Choose Windows 7, then select the installer when prompted. When Quest finishes installing into the bottle, uncheck run program after install (if you don't, quest will error out and the script may not run properly), and the bottle will wrap up. When you run the port, it'll ask what exe to run, select quest.exe (it detects it automatically). You can also point to the exe with the script by entering it's future C:\\ path. It will remember this in future executions. And that's it.</p>\n<p>Crossover and Whiskey have similar processes, but are different. But, PortingKit uses a similar Wine version to Crossover, so it seems to work better. PortingKit is also free, so recommending it to your users is safe and they can use it indefinitely. I'm planning a significant donation to PortingKit as a token of my immense gratitude, and I encourage you to consider doing the same. It's a fantastic freeware program.</p>\n<p>I've created an automated PortingKit script and a Crossover Tie file for automatic Quest setup, but I'm currently unsure about publicly sharing them (if that's not ok due to forum rules). Feel free to message me for them though. Alternatively, I can explain Crossover's requirements and guide you through creating your own Tie file on Codeweavers' website (requires Bettertester status). But, if my Crosstie is approved, the program will be searchable and installable directly through Crossover. The tie credits the author of Quest, and downloads the software from the main website, so I think that doesn't violate Quest's terms and conditions. If it does, someone feel free to pipe in, and I'll adjust the tie file and portingkit wsi2 file.</p>\n<p>I hope this information helps everyone out!</p>\n\n",
      "PostDate": "2023-12-15T22:12:38.5703098Z",
      "LastEditDate": "2023-12-15T22:20:11.4364489Z",
      "link": null
    }
  ]
}
