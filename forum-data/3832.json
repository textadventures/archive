{
  "Topic": {
    "TopicId": "3832",
    "ForumId": "10",
    "Title": "How do I set the room description?",
    "LastUpdated": "2013-08-09T14:51:00+01:00",
    "ReplyCount": 28
  },
  "Posts": [
    {
      "PostId": "25612",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Hi,\n\nWhat's the script to allow me to set the room description?  I'm creating exits randomly and I want to pair up these exits with a description.  Thanks.\n\nAmy",
      "EditableFormat": "bbcode",
      "HTML": "Hi,<br/><br/>What's the script to allow me to set the room description?  I'm creating exits randomly and I want to pair up these exits with a description.  Thanks.<br/><br/>Amy",
      "PostDate": "2013-07-28T21:28:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25613",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not too sure on this (too lazy to start up quest to check it: make a description in GUI~Editor mode and then switch to Code View mode, to see how it's done in~as code), but hopefully this stuff helps:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Description\">http://quest5.net/wiki/Description</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m -->\n\nso it looks like (I think ~ guessing):\n\n[code:3aoeja51]&lt;your_room_name type=&quot;object&quot;&gt;\n  &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;description type=&quot;string&quot;&gt;your_room_description&lt;/description&gt;\n  // or you can do the description as a Script type (see below)\n  &lt;description type=&quot;script&quot;&gt;\n    whatever scripts you want\n  &lt;/description&gt;\n&lt;/your_room_name&gt;[/code:3aoeja51]\n\nand there's toggle buttons in the GUI~Editor for room descriptions, look at the Game Object's Tabs and elsewhere maybe (like the room object's Tabs).\n\nI'm not sure if you can put a &quot;room description&quot; for an EXIT, but you can use it's &quot;look&quot; attribute.\n\n---------------------\n\nas for doing this in the GUI~Editor, it should be self-explanatory: just find the text box or area to write your stuff into.",
      "EditableFormat": "bbcode",
      "HTML": "I'm not too sure on this (too lazy to start up quest to check it: make a description in GUI~Editor mode and then switch to Code View mode, to see how it's done in~as code), but hopefully this stuff helps:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Description\">http://quest5.net/wiki/Description</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m --><br/><br/>so it looks like (I think ~ guessing):<br/><br/><pre><code>&lt;your_room_name type=&quot;object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;description type=&quot;string&quot;&gt;your_room_description&lt;/description&gt;<br/>  // or you can do the description as a Script type (see below)<br/>  &lt;description type=&quot;script&quot;&gt;<br/>    whatever scripts you want<br/>  &lt;/description&gt;<br/>&lt;/your_room_name&gt;</code></pre><br/><br/>and there's toggle buttons in the GUI~Editor for room descriptions, look at the Game Object's Tabs and elsewhere maybe (like the room object's Tabs).<br/><br/>I'm not sure if you can put a &quot;room description&quot; for an EXIT, but you can use it's &quot;look&quot; attribute.<br/><br/>---------------------<br/><br/>as for doing this in the GUI~Editor, it should be self-explanatory: just find the text box or area to write your stuff into.",
      "PostDate": "2013-07-28T21:57:24+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25614",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:2pdhs43s]\nI'm not sure if you can put a &quot;room description&quot; for an EXIT, but you can use it's &quot;look&quot; attribute.\n[/quote:2pdhs43s]\n\nI want to add room description to a room.  Since the exits are created randomly, I need to create random description to show that the room has an exit when the player looks around the room.  I'm learning how to code and I'm not sure how to look up this type of information.  Description is too ordinary a term and pulls up every post in my search.  I'm hoping someone can help me narrow down the search and show me how I can manipulate room description.\n\nPerhaps &quot;look&quot; is what I'm looking for.  How do I set that?\n\nThanks.\n\n*** Edit ***\n\nI'll try giving an example.\n\nLike room description without an East exit:\n\nThe room is barren.  The doorway leads to the kitchen.\n\nAfter adding an East exit:\n\nThe room is barren.  The doorway leads to the kitchen.  A bird sits by the window, crooning an enchanting melody.\n\nI hope you can help me with this.  Thanks.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite><br/>I'm not sure if you can put a &quot;room description&quot; for an EXIT, but you can use it's &quot;look&quot; attribute.<br/></blockquote><br/><br/>I want to add room description to a room.  Since the exits are created randomly, I need to create random description to show that the room has an exit when the player looks around the room.  I'm learning how to code and I'm not sure how to look up this type of information.  Description is too ordinary a term and pulls up every post in my search.  I'm hoping someone can help me narrow down the search and show me how I can manipulate room description.<br/><br/>Perhaps &quot;look&quot; is what I'm looking for.  How do I set that?<br/><br/>Thanks.<br/><br/>*** Edit ***<br/><br/>I'll try giving an example.<br/><br/>Like room description without an East exit:<br/><br/>The room is barren.  The doorway leads to the kitchen.<br/><br/>After adding an East exit:<br/><br/>The room is barren.  The doorway leads to the kitchen.  A bird sits by the window, crooning an enchanting melody.<br/><br/>I hope you can help me with this.  Thanks.",
      "PostDate": "2013-07-28T23:09:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25616",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "forgive me, I'm still not quite clear what you want done, could you give an example scenario of what you want, and~or explain what you want with or what you're trying to do with, and what are, your random exits, what do you mean by random exits?\n\nAlso, are you working with (able to work with) the code? Or, are you using the GUI~Editor mode with the friendly buttons and etc that you can click on and choose? Do you want to be helped with in-code or in with the GUI~Editor?\n\n---------------------\n\nto &quot;manipulate&quot; the room description (&quot;description&quot;) or the look~lookat verb (&quot;look~lookat&quot;), then you just need to change them to being &quot;script&quot; types (do a script or whatever it is called, instead of a &quot;string&quot; type of print a message or whatever it is called). then you got to add in a conditional (&quot;If&quot;), and etc scripts to do~get what you want done.\n\n--------------------\n\nuse the wiki pages for searching, not the forum's threads-posts, here's useful pages, along with the search bar in the upper right for searching for whatever or anything else on the wiki:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\nand these will probably be useful too:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByName\">http://quest5.net/wiki/GetExitByName</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByLink\">http://quest5.net/wiki/GetExitByLink</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Contains\">http://quest5.net/wiki/Contains</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/FormatExitList\">http://quest5.net/wiki/FormatExitList</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Description\">http://quest5.net/wiki/Description</a><!-- m -->\n\nif you want a dynamic description for your room object, which mentions about EXITS, then you'll need to use a script type for it:\n\nwhile I'm not too familar with exits yet, hopefully this might work, or you'll need to do something like this...\n\n(this is for non-random exits, though)\n\n[code:1htvxcxb]&lt;your_room_name type=&quot;object&quot;&gt;\n  &lt;description type=script&quot;&gt;\n    foreach (exit_x,ScopeExitsForRoom (player&#46;parent)) {\n      if (exit_x = null) {\n        msg (&quot;your_default_message_for_room_having_no_exits&quot;)\n      } else {\n        switch (exit_x) {\n          case (&quot;name_of_exit_1&quot;) {\n            msg (&quot;blah_1&quot;)\n          }\n          case (&quot;name of exit_2&quot;) {\n            msg (&quot;blah_2&quot;)\n          }\n          // case etc etc etc\n        }\n      }\n    }\n  &lt;/description&gt;\n&lt;/your_room_name&gt;[/code:1htvxcxb]\n\nor if you want to be able to see into another room from your current room, then just use the &quot;lookat&quot; (or &quot;look&quot;~whatever it is) script attribute on the EXIT &quot;object&quot;, instead.\n\n--------------\n\nIf you're trying to do this through the GUI~Editor, then you just need to click on the pull down box, choosing &quot;script&quot;, for the &quot;lookat~look&quot; or &quot;description&quot; scripts either for the exit object or the room object.\n\n---------------\n\nhopefully, someone else can help you with this stuff, as I've not yet become familar with working with this type of stuff yet.",
      "EditableFormat": "bbcode",
      "HTML": "forgive me, I'm still not quite clear what you want done, could you give an example scenario of what you want, and~or explain what you want with or what you're trying to do with, and what are, your random exits, what do you mean by random exits?<br/><br/>Also, are you working with (able to work with) the code? Or, are you using the GUI~Editor mode with the friendly buttons and etc that you can click on and choose? Do you want to be helped with in-code or in with the GUI~Editor?<br/><br/>---------------------<br/><br/>to &quot;manipulate&quot; the room description (&quot;description&quot;) or the look~lookat verb (&quot;look~lookat&quot;), then you just need to change them to being &quot;script&quot; types (do a script or whatever it is called, instead of a &quot;string&quot; type of print a message or whatever it is called). then you got to add in a conditional (&quot;If&quot;), and etc scripts to do~get what you want done.<br/><br/>--------------------<br/><br/>use the wiki pages for searching, not the forum's threads-posts, here's useful pages, along with the search bar in the upper right for searching for whatever or anything else on the wiki:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Main_Page\">http://quest5.net/wiki/Main_Page</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Tutorial\">http://quest5.net/wiki/Tutorial</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/How_to\">http://quest5.net/wiki/How_to</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>and these will probably be useful too:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByName\">http://quest5.net/wiki/GetExitByName</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByLink\">http://quest5.net/wiki/GetExitByLink</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Contains\">http://quest5.net/wiki/Contains</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/FormatExitList\">http://quest5.net/wiki/FormatExitList</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Description\">http://quest5.net/wiki/Description</a><!-- m --><br/><br/>if you want a dynamic description for your room object, which mentions about EXITS, then you'll need to use a script type for it:<br/><br/>while I'm not too familar with exits yet, hopefully this might work, or you'll need to do something like this...<br/><br/>(this is for non-random exits, though)<br/><br/><pre><code>&lt;your_room_name type=&quot;object&quot;&gt;<br/>  &lt;description type=script&quot;&gt;<br/>    foreach (exit_x,ScopeExitsForRoom (player&#46;parent)) {<br/>      if (exit_x = null) {<br/>        msg (&quot;your_default_message_for_room_having_no_exits&quot;)<br/>      } else {<br/>        switch (exit_x) {<br/>          case (&quot;name_of_exit_1&quot;) {<br/>            msg (&quot;blah_1&quot;)<br/>          }<br/>          case (&quot;name of exit_2&quot;) {<br/>            msg (&quot;blah_2&quot;)<br/>          }<br/>          // case etc etc etc<br/>        }<br/>      }<br/>    }<br/>  &lt;/description&gt;<br/>&lt;/your_room_name&gt;</code></pre><br/><br/>or if you want to be able to see into another room from your current room, then just use the &quot;lookat&quot; (or &quot;look&quot;~whatever it is) script attribute on the EXIT &quot;object&quot;, instead.<br/><br/>--------------<br/><br/>If you're trying to do this through the GUI~Editor, then you just need to click on the pull down box, choosing &quot;script&quot;, for the &quot;lookat~look&quot; or &quot;description&quot; scripts either for the exit object or the room object.<br/><br/>---------------<br/><br/>hopefully, someone else can help you with this stuff, as I've not yet become familar with working with this type of stuff yet.",
      "PostDate": "2013-07-28T23:51:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25617",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "I can use the GUI.  I'm checking for alternatives.  I don't have any code now.  I started coding and then didn't like the obstacles that came up... deleted the code... started again... deleted... made a test program... so now I decided it's probably easier if I figure out what is available and then see what I prefer to manipulate and go from there.\n\nRandom: Is this dynamic?  I was going to make a game where replaying the game would generate a different set of exits connecting the same set of rooms and these exits will only be generated at the start.\n\nFor each exit I make, I want to give it a room description because I want to get away from &quot;north&quot;, &quot;south&quot;, &quot;up&quot;, &quot;down&quot; because in many rooms, the exits are going to go in a similar direction although each direction will lead to a different room and the current compass setup won't work for me.  For example, &quot;down a ladder&quot; takes you to Room A and &quot;down the stairs&quot; takes you to Room B.  But the room description will show only the description of an exit and won't show the exits.  It will say something like: &quot;A ladder made of wood and metal leads downwards.&quot; for Room A and &quot;The stairs look slippery.&quot; for Room B.  If the game decides to put the ladder exit in, the ladder will show up in the room description.  And if the game decides to put the stairs exit in, then the stairs will show up in the room description.  If the game decides to put both in, then both descriptions will show up.",
      "EditableFormat": "bbcode",
      "HTML": "I can use the GUI.  I'm checking for alternatives.  I don't have any code now.  I started coding and then didn't like the obstacles that came up... deleted the code... started again... deleted... made a test program... so now I decided it's probably easier if I figure out what is available and then see what I prefer to manipulate and go from there.<br/><br/>Random: Is this dynamic?  I was going to make a game where replaying the game would generate a different set of exits connecting the same set of rooms and these exits will only be generated at the start.<br/><br/>For each exit I make, I want to give it a room description because I want to get away from &quot;north&quot;, &quot;south&quot;, &quot;up&quot;, &quot;down&quot; because in many rooms, the exits are going to go in a similar direction although each direction will lead to a different room and the current compass setup won't work for me.  For example, &quot;down a ladder&quot; takes you to Room A and &quot;down the stairs&quot; takes you to Room B.  But the room description will show only the description of an exit and won't show the exits.  It will say something like: &quot;A ladder made of wood and metal leads downwards.&quot; for Room A and &quot;The stairs look slippery.&quot; for Room B.  If the game decides to put the ladder exit in, the ladder will show up in the room description.  And if the game decides to put the stairs exit in, then the stairs will show up in the room description.  If the game decides to put both in, then both descriptions will show up.",
      "PostDate": "2013-07-29T00:52:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25619",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here is one way to do it.\n\nThere is no built-in description for an exit. But you can easily create one yourself and then use it in your script. In order to apply this to all of your rooms, the easiest approach is to create a base type. Then you can inherit this type in all the rooms.  Here is the base type:\n\n[code:3vqvu8zf]  &lt;type name=&quot;BaseRoom&quot;&gt;\n    &lt;description type=&quot;script&quot;&gt;\n      if (HasString(this, &quot;realdescription&quot;)) {\n        OutputTextNoBr(this&#46;realdescription)\n      }\n      foreach (exit,ScopeExitsForRoom (this)) {\n      \tif (HasString(exit, &quot;description&quot;)) {\n      \t\tOutputTextNoBr(&quot; &quot; + exit&#46;description)\n      \t}\n\t  }\n    &lt;/description&gt;\n  &lt;/type&gt;[/code:3vqvu8zf]\n\nIn each room that has these special exits, you will need to inherit from BaseRoom:\n\n[code:3vqvu8zf]    &lt;inherit name=&quot;BaseRoom&quot; /&gt;[/code:3vqvu8zf]\n\nSince you are overriding the normal description script, I added a hook for a &quot;realdescription&quot; attribute in the room. You'd put the standard description string there.\n\nIf an exit has a &quot;description&quot; attribute, it will be output. If not, then... not. You will need to manually add a &quot;description&quot; string attribute to each exit. It's not a standard Quest GUI attribute. You can also mark an exit as &quot;scenery&quot;, and it won't show up in the normal room description.\n\nNow... here is the challenge: how does the player know what to type in order to traverse an exit? You can set the alias for the exit to things like &quot;down the stairs&quot; and &quot;down the ladder&quot;. And then they'll be able to type things like &quot;go down the ladder&quot; and &quot;go down the stairs&quot;. And if you type &quot;down&quot; or &quot;go down&quot;, it will ask you which one you want to go down, if they are both in the same room.\n\nHowever, the player will not be able to type things like &quot;go down ladder&quot; or even &quot;go ladder&quot;. We're getting into the realm of &quot;guess the verb&quot; where only specific commands work, and it's not clear what those commands are, especially adding in words like &quot;the&quot;. So you could leave it out, but then it's the opposite problem.\n\nMy point is this: by having descriptions which are separate from the exit aliases and by showing the descriptions alone, and yet since Quest bases exit navigation on the alias, you're setting the player up by not showing them what they need to type. That can be very frustrating for the player in the long run. I'd be tempted to show the player both. Include the above code to dump out the descriptions, but don't mark the exits as scenery, so that at least Quest will dump out 'You can go down the stairs and down the ladder&quot;.",
      "EditableFormat": "bbcode",
      "HTML": "Here is one way to do it.<br/><br/>There is no built-in description for an exit. But you can easily create one yourself and then use it in your script. In order to apply this to all of your rooms, the easiest approach is to create a base type. Then you can inherit this type in all the rooms.  Here is the base type:<br/><br/><pre><code>  &lt;type name=&quot;BaseRoom&quot;&gt;<br/>    &lt;description type=&quot;script&quot;&gt;<br/>      if (HasString(this, &quot;realdescription&quot;)) {<br/>        OutputTextNoBr(this&#46;realdescription)<br/>      }<br/>      foreach (exit,ScopeExitsForRoom (this)) {<br/>      \tif (HasString(exit, &quot;description&quot;)) {<br/>      \t\tOutputTextNoBr(&quot; &quot; + exit&#46;description)<br/>      \t}<br/>\t  }<br/>    &lt;/description&gt;<br/>  &lt;/type&gt;</code></pre><br/><br/>In each room that has these special exits, you will need to inherit from BaseRoom:<br/><br/><pre><code>    &lt;inherit name=&quot;BaseRoom&quot; /&gt;</code></pre><br/><br/>Since you are overriding the normal description script, I added a hook for a &quot;realdescription&quot; attribute in the room. You'd put the standard description string there.<br/><br/>If an exit has a &quot;description&quot; attribute, it will be output. If not, then... not. You will need to manually add a &quot;description&quot; string attribute to each exit. It's not a standard Quest GUI attribute. You can also mark an exit as &quot;scenery&quot;, and it won't show up in the normal room description.<br/><br/>Now... here is the challenge: how does the player know what to type in order to traverse an exit? You can set the alias for the exit to things like &quot;down the stairs&quot; and &quot;down the ladder&quot;. And then they'll be able to type things like &quot;go down the ladder&quot; and &quot;go down the stairs&quot;. And if you type &quot;down&quot; or &quot;go down&quot;, it will ask you which one you want to go down, if they are both in the same room.<br/><br/>However, the player will not be able to type things like &quot;go down ladder&quot; or even &quot;go ladder&quot;. We're getting into the realm of &quot;guess the verb&quot; where only specific commands work, and it's not clear what those commands are, especially adding in words like &quot;the&quot;. So you could leave it out, but then it's the opposite problem.<br/><br/>My point is this: by having descriptions which are separate from the exit aliases and by showing the descriptions alone, and yet since Quest bases exit navigation on the alias, you're setting the player up by not showing them what they need to type. That can be very frustrating for the player in the long run. I'd be tempted to show the player both. Include the above code to dump out the descriptions, but don't mark the exits as scenery, so that at least Quest will dump out 'You can go down the stairs and down the ladder&quot;.",
      "PostDate": "2013-07-29T09:46:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25627",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2o5ww7h8]\nMy point is this: by having descriptions which are separate from the exit aliases and by showing the descriptions alone, and yet since Quest bases exit navigation on the alias, you're setting the player up by not showing them what they need to type. That can be very frustrating for the player in the long run. I'd be tempted to show the player both. Include the above code to dump out the descriptions, but don't mark the exits as scenery, so that at least Quest will dump out 'You can go down the stairs and down the ladder&quot;.[/quote:2o5ww7h8]\n\nThank you very much <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI appreciate you building a script for me to apply.\n\nI wasn't looking to change the exit's alias.  Although re reading what I posted, I can see now how my words came out... and I'm kicking myself for having so much trouble describing the issue.  I wasn't able to research this prior to posting my request and I am now just realizing how confusing I made my point.  I hope you and HegemonKhan can forgive me for this as you both did quite a bit to help me.\n\nThe way I'm doing it now is that I build all the exits for every room from the first room object (where the player object is).  After that is all done, I move the player object to the room where the adventure begins.  I realized that because I created the exits after the game launched, that the descriptions had to be different each time the game started because the exits would be different.  I can solve this by scripting each room but I was hoping there was a simpler way to change the room description (by building the descriptions from one place in the same way I built the exits in the first room).  This could make it easier for me because then I wouldn't have to visit each room object to update its description.\n\nThe more I look at HegemonKhan's code, the more I think that this might be what I might have been looking for all along and I just don't recognize it because my coding ability at this point is poor and I am still trying to figure out how to apply it to the GUI.  \n\nI'm relying mainly on the GUI and the scripts it provides and working within the GUI's limitations.  I have a small success with building a function to print out descriptions of exits but no luck in figuring out how to set a description to the room from outside of the room objects so I can avoid using variables excessively.\n\nThank you again for your help.  I have much to think about.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite><br/>My point is this: by having descriptions which are separate from the exit aliases and by showing the descriptions alone, and yet since Quest bases exit navigation on the alias, you're setting the player up by not showing them what they need to type. That can be very frustrating for the player in the long run. I'd be tempted to show the player both. Include the above code to dump out the descriptions, but don't mark the exits as scenery, so that at least Quest will dump out 'You can go down the stairs and down the ladder&quot;.</blockquote><br/><br/>Thank you very much <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I appreciate you building a script for me to apply.<br/><br/>I wasn't looking to change the exit's alias.  Although re reading what I posted, I can see now how my words came out... and I'm kicking myself for having so much trouble describing the issue.  I wasn't able to research this prior to posting my request and I am now just realizing how confusing I made my point.  I hope you and HegemonKhan can forgive me for this as you both did quite a bit to help me.<br/><br/>The way I'm doing it now is that I build all the exits for every room from the first room object (where the player object is).  After that is all done, I move the player object to the room where the adventure begins.  I realized that because I created the exits after the game launched, that the descriptions had to be different each time the game started because the exits would be different.  I can solve this by scripting each room but I was hoping there was a simpler way to change the room description (by building the descriptions from one place in the same way I built the exits in the first room).  This could make it easier for me because then I wouldn't have to visit each room object to update its description.<br/><br/>The more I look at HegemonKhan's code, the more I think that this might be what I might have been looking for all along and I just don't recognize it because my coding ability at this point is poor and I am still trying to figure out how to apply it to the GUI.  <br/><br/>I'm relying mainly on the GUI and the scripts it provides and working within the GUI's limitations.  I have a small success with building a function to print out descriptions of exits but no luck in figuring out how to set a description to the room from outside of the room objects so I can avoid using variables excessively.<br/><br/>Thank you again for your help.  I have much to think about.",
      "PostDate": "2013-07-30T02:17:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25642",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "laughs, I have a hard time too trying to say what I want to say or to ask about, as I too am still a noob with a lot of this stuff.\n\nmy own apologizes for trying to help with something that I'm not accutely familiar with myself, causing even more confusion, and not actually providing the help that I wanted to provide.\n\nI like to try to help out others (just because that is a personal value of mine, and as well as that it further helps me with code learning too), but I need to try to stay out of things that I don't know what I'm talking about, as it just causes more confusion for the person I'm trying to help.\n\nNever blame yourself for my thick-headed-slowness at understanding things, hehe. The apologies are mine for any and all of misunderstandings on my part. What you wrote was perfectly clear and concise, I'm just a dunce <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\nAlso, my apologies for the coding stuff, I'll try to use the GUI when helping you in the future (if I can remember, lol), it's just a lot more effort to explain via~with the GUI, as coding is much faster and easier a method for giving an explanation. Trying to do a step by step guide using the GUI is not fun... it can take a good few hours at least, whereas copy and pasting code can take like only a few minutes if you know how to do its coding already. I have done a few posts using the GUI method in the past, but I've gotten lazy now, and been only providing coding in my posts, which is bad when I'm replying to new people who're still working with the GUI and don't know coding. Again, my apologies.\n\nI'll let Jaynne help, as he's better with code, more familiar with the things you're asking about (exits, room descriptions, and etc), also this stuff that you want is a bit beyond my level as well, and he's much more clear and concise in his responses too.\n\n---------------\n\nthough if I may, I'm still curious in attempting to understand what you want (hehe), and maybe I may be able to then offer you some useful assistance (or maybe not, we'll see, lol).\n\ndo you want a &quot;hub~center&quot; room that all the other rooms are connected to (via exits), but the game randomly chooses what room you go to from the &quot;hub-center&quot; room?\n\ndo you want the actual exits to change, as in this exit goes: &quot;from room_A to room_B&quot;, but now when you go back through the same exit (which should be: from room_B to room_A) is now: &quot;from room_B to room_C&quot; ??\n\nor do you mean something something else by random exits ??\n\n--------------\n\nIf I understand Jaynne's code, I think it does the same thing as mine, but much much better (it allows you to easily put in your description for the room itself and for what exits that room has too ~ If I understand Jaynne's code anyways, lol). I think you just got to add in a &quot;autodescription&quot; String attribute for each room (unfortunately, since this is your customized message, I don't think any other way but to do it for each room, as each room will have a different unique description right?), and then a description for each exit too. Then, just add the Inherited Attribute (scroll down to the bottom to find the BaseRoom that you created in~with the Object Type ~ &quot;Type&quot; type attribute ~ BaseRoom), BaseRoom, to each of your rooms.\n\nThough, this may be incorrect, so let or ask Jaynne to accurately help with getting his own code and system into your game.\n\n--------------\n\nAlso, if you need help on how to do &quot;randomization&quot;, there's many ways to do it, and I~we can gladly help you with this too.\n\nfor example, here's just one way to do it (in code, as I don't know how to do it in GUI ~ I'd have to look it up ~ it'd take a bit of time ~ I can do it, but you might have to wait a bit for me to look it up on how to do it):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetRandomInt\">http://quest5.net/wiki/GetRandomInt</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Switch\">http://quest5.net/wiki/Switch</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Multiple_choices_-_using_a_%22switch%22_script\">http://quest5.net/wiki/Multiple_choices ... %22_script</a><!-- m -->\n\n[code:3clmji8j]&lt;object name=&quot;talking_wise_owl&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;verb name=&quot;chat&quot;&gt;\n    random_integer = GetRandomInt (1,3)\n    switch (random_integer) {\n      case (1) {\n        msg (&quot;Your random integer is ONE&#46;&quot;)\n      }\n      case (2) {\n        msg (&quot;Your random integer is TWO&#46;&quot;)\n      }\n      case (3) {\n        msg (&quot;Your random integer is THREE&#46;&quot;)\n      }\n    }\n  &lt;/verb&gt;\n&lt;/object&gt;[/code:3clmji8j]\n\nor, if the above code doesn't work (not sure if it will due to a coding issue I'm unsure about at the moment):\n\n[code:3clmji8j]&lt;object name=&quot;talking_wise_owl&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;verb name=&quot;chat&quot;&gt;\n    random_integer = ToString (GetRandomInt (1,3))\n    switch (random_integer) {\n      case (&quot;1&quot;) {\n        msg (&quot;Your random integer is ONE&#46;&quot;)\n      }\n      case (&quot;2&quot;) {\n        msg (&quot;Your random integer is TWO&#46;&quot;)\n      }\n      case (&quot;3&quot;) {\n        msg (&quot;Your random integer is TWO&#46;&quot;)\n      }\n    }\n  &lt;/verb&gt;\n&lt;/object&gt;[/code:3clmji8j]\n\nthis explains it via the GUI (and in code too):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Unlockdoor\">http://quest5.net/wiki/Unlockdoor</a><!-- m -->\n\nand here's an explanation of how to use the &quot;Switch&quot; script (and how to use COMMANDS too = for~in the first link) in the GUI:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-multiple\">http://quest5.net/wiki/Hs-multiple</a><!-- m -->\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/posting.php?mode=edit&amp;f=10&amp;p=25642\">posting.php?mode=edit&amp;f=10&amp;p=25642</a><!-- l -->\n\nenjoy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\nbut, there's many other ways to do randomization too.\n\n----------------------------------------------\n\np.s.\n\n(from your post) ~ ya, sorry, I meant random with my wrong use of &quot;dynamic&quot; in my post.\n\np.s.s.\n\nalso, feel free to ask, as I~we will be glad to help you do something (like our codings) in~through~with the GUI, just let I~us know if you need the help! (actually the format~structure~syntax of the GUI and via-in Code are quite different, it's not easy to match up the GUI with it's coding equivalent and vice-versa)",
      "EditableFormat": "bbcode",
      "HTML": "laughs, I have a hard time too trying to say what I want to say or to ask about, as I too am still a noob with a lot of this stuff.<br/><br/>my own apologizes for trying to help with something that I'm not accutely familiar with myself, causing even more confusion, and not actually providing the help that I wanted to provide.<br/><br/>I like to try to help out others (just because that is a personal value of mine, and as well as that it further helps me with code learning too), but I need to try to stay out of things that I don't know what I'm talking about, as it just causes more confusion for the person I'm trying to help.<br/><br/>Never blame yourself for my thick-headed-slowness at understanding things, hehe. The apologies are mine for any and all of misunderstandings on my part. What you wrote was perfectly clear and concise, I'm just a dunce <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>Also, my apologies for the coding stuff, I'll try to use the GUI when helping you in the future (if I can remember, lol), it's just a lot more effort to explain via~with the GUI, as coding is much faster and easier a method for giving an explanation. Trying to do a step by step guide using the GUI is not fun... it can take a good few hours at least, whereas copy and pasting code can take like only a few minutes if you know how to do its coding already. I have done a few posts using the GUI method in the past, but I've gotten lazy now, and been only providing coding in my posts, which is bad when I'm replying to new people who're still working with the GUI and don't know coding. Again, my apologies.<br/><br/>I'll let Jaynne help, as he's better with code, more familiar with the things you're asking about (exits, room descriptions, and etc), also this stuff that you want is a bit beyond my level as well, and he's much more clear and concise in his responses too.<br/><br/>---------------<br/><br/>though if I may, I'm still curious in attempting to understand what you want (hehe), and maybe I may be able to then offer you some useful assistance (or maybe not, we'll see, lol).<br/><br/>do you want a &quot;hub~center&quot; room that all the other rooms are connected to (via exits), but the game randomly chooses what room you go to from the &quot;hub-center&quot; room?<br/><br/>do you want the actual exits to change, as in this exit goes: &quot;from room_A to room_B&quot;, but now when you go back through the same exit (which should be: from room_B to room_A) is now: &quot;from room_B to room_C&quot; ??<br/><br/>or do you mean something something else by random exits ??<br/><br/>--------------<br/><br/>If I understand Jaynne's code, I think it does the same thing as mine, but much much better (it allows you to easily put in your description for the room itself and for what exits that room has too ~ If I understand Jaynne's code anyways, lol). I think you just got to add in a &quot;autodescription&quot; String attribute for each room (unfortunately, since this is your customized message, I don't think any other way but to do it for each room, as each room will have a different unique description right?), and then a description for each exit too. Then, just add the Inherited Attribute (scroll down to the bottom to find the BaseRoom that you created in~with the Object Type ~ &quot;Type&quot; type attribute ~ BaseRoom), BaseRoom, to each of your rooms.<br/><br/>Though, this may be incorrect, so let or ask Jaynne to accurately help with getting his own code and system into your game.<br/><br/>--------------<br/><br/>Also, if you need help on how to do &quot;randomization&quot;, there's many ways to do it, and I~we can gladly help you with this too.<br/><br/>for example, here's just one way to do it (in code, as I don't know how to do it in GUI ~ I'd have to look it up ~ it'd take a bit of time ~ I can do it, but you might have to wait a bit for me to look it up on how to do it):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetRandomInt\">http://quest5.net/wiki/GetRandomInt</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Switch\">http://quest5.net/wiki/Switch</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Multiple_choices_-_using_a_%22switch%22_script\">http://quest5.net/wiki/Multiple_choices ... %22_script</a><!-- m --><br/><br/><pre><code>&lt;object name=&quot;talking_wise_owl&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;verb name=&quot;chat&quot;&gt;<br/>    random_integer = GetRandomInt (1,3)<br/>    switch (random_integer) {<br/>      case (1) {<br/>        msg (&quot;Your random integer is ONE&#46;&quot;)<br/>      }<br/>      case (2) {<br/>        msg (&quot;Your random integer is TWO&#46;&quot;)<br/>      }<br/>      case (3) {<br/>        msg (&quot;Your random integer is THREE&#46;&quot;)<br/>      }<br/>    }<br/>  &lt;/verb&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>or, if the above code doesn't work (not sure if it will due to a coding issue I'm unsure about at the moment):<br/><br/><pre><code>&lt;object name=&quot;talking_wise_owl&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;verb name=&quot;chat&quot;&gt;<br/>    random_integer = ToString (GetRandomInt (1,3))<br/>    switch (random_integer) {<br/>      case (&quot;1&quot;) {<br/>        msg (&quot;Your random integer is ONE&#46;&quot;)<br/>      }<br/>      case (&quot;2&quot;) {<br/>        msg (&quot;Your random integer is TWO&#46;&quot;)<br/>      }<br/>      case (&quot;3&quot;) {<br/>        msg (&quot;Your random integer is TWO&#46;&quot;)<br/>      }<br/>    }<br/>  &lt;/verb&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>this explains it via the GUI (and in code too):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Unlockdoor\">http://quest5.net/wiki/Unlockdoor</a><!-- m --><br/><br/>and here's an explanation of how to use the &quot;Switch&quot; script (and how to use COMMANDS too = for~in the first link) in the GUI:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Hs-multiple\">http://quest5.net/wiki/Hs-multiple</a><!-- m --><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/posting.php?mode=edit&amp;f=10&amp;p=25642\">posting.php?mode=edit&amp;f=10&amp;p=25642</a><!-- l --><br/><br/>enjoy <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>but, there's many other ways to do randomization too.<br/><br/>----------------------------------------------<br/><br/>p.s.<br/><br/>(from your post) ~ ya, sorry, I meant random with my wrong use of &quot;dynamic&quot; in my post.<br/><br/>p.s.s.<br/><br/>also, feel free to ask, as I~we will be glad to help you do something (like our codings) in~through~with the GUI, just let I~us know if you need the help! (actually the format~structure~syntax of the GUI and via-in Code are quite different, it's not easy to match up the GUI with it's coding equivalent and vice-versa)",
      "PostDate": "2013-07-31T02:54:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25668",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you just want random travel between rooms (any room can randomly lead to any other room*), then I think I can construct a command and~or verb for you (in code, as it is easier for me, and I'll help you with adding it correctly ~ ie to the right places in your game code). this would completely negate the need~use of exits however. Though, I'm sure I can find an alternative if you need some of the exits' possible attribute features (such as descriptions or whatever ~ I can't recall what options~features exits have off the top of my head, lol).\n\n*I think I can also make it so that the randomization will apply only to the remaining unvisited rooms too, so you can actually visit all of them, lol.",
      "EditableFormat": "bbcode",
      "HTML": "if you just want random travel between rooms (any room can randomly lead to any other room*), then I think I can construct a command and~or verb for you (in code, as it is easier for me, and I'll help you with adding it correctly ~ ie to the right places in your game code). this would completely negate the need~use of exits however. Though, I'm sure I can find an alternative if you need some of the exits' possible attribute features (such as descriptions or whatever ~ I can't recall what options~features exits have off the top of my head, lol).<br/><br/>*I think I can also make it so that the randomization will apply only to the remaining unvisited rooms too, so you can actually visit all of them, lol.",
      "PostDate": "2013-08-01T03:50:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25673",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "HegemonKhan, I'm happy whenever you help. No matter how confusing the whole thing gets, your answers opens my eyes to something outside of my scope and actually helps speed up my learning.  I just worry I come off sounding idiotic and then people stop helping... \n\n[quote=&quot;HegemonKhan&quot;:4byuo8ah]\nthough if I may, I'm still curious in attempting to understand what you want (hehe), and maybe I may be able to then offer you some useful assistance (or maybe not, we'll see, lol).\n\ndo you want a &quot;hub~center&quot; room that all the other rooms are connected to (via exits), but the game randomly chooses what room you go to from the &quot;hub-center&quot; room?\n\ndo you want the actual exits to change, as in this exit goes: &quot;from room_A to room_B&quot;, but now when you go back through the same exit (which should be: from room_B to room_A) is now: &quot;from room_B to room_C&quot; ??\n\nor do you mean something something else by random exits ??\n[/quote:4byuo8ah]\n\nThere is a multitude of things I'm trying to make happen.  I can use assistance on finding another way to tackle this idea in Quest.\n\nThere's no hub.  The first room in my example from the other post is just a room containing the player.  I am using that room to set up objects such as creating the exits, moving the objects to their proper rooms, and such.  I don't know of any other way to initialize the objects at this time.\n\nTo prevent the replay from growing stale and until the puzzle is solved, I want to randomize the connections between the rooms.  The goal remains the same, but the path to the goal changes slightly upon replay.  The exits are generated only at the launch but once the adventure starts, the exits are static for the remainder of the story until it concludes.\n\nOriginally I was going to rely on the compass generated exits but I ran into difficulties (which I should have asked a question about but it didn't quite bother me enough at the time).  I was trying to make exits go to different rooms even though the names sounded similar.  However, when I played the game, I noticed that whenever I had 2 directions such as &quot;down&quot; and &quot;down a ladder&quot;, the direction called &quot;down&quot; won whenever I typed in &quot;down&quot;.  It was like the other exit didn't even exist.  That's how I started experimenting with creating exits.\n\n[quote=&quot;HegemonKhan&quot;:4byuo8ah]\n--------------\n\nIf I understand Jaynne's code, I think it does the same thing as mine, but much much better (it allows you to easily put in your description for the room itself and for what exits that room has too ~ If I understand Jaynne's code anyways, lol). I think you just got to add in a &quot;autodescription&quot; String attribute for each room (unfortunately, since this is your customized message, I don't think any other way but to do it for each room, as each room will have a different unique description right?), and then a description for each exit too. Then, just add the Inherited Attribute (scroll down to the bottom to find the BaseRoom that you created in~with the Object Type ~ &quot;Type&quot; type attribute ~ BaseRoom), BaseRoom, to each of your rooms.\n\nThough, this may be incorrect, so let or ask Jaynne to accurately help with getting his own code and system into your game.\n[/quote:4byuo8ah]\n\nLOL, I am not ready to work the code into the game.  I am having trouble grasping the concept of a BaseRoom.  Also, some of the basics seem to have gone over my head.  The code makes sense when I read it but I'm not sure if that's what I've been looking for and how do I use it once I've inserted the code into my game?  That's how I know I'm not ready.  Since I don't &quot;get&quot; the basics, then I need to hold off on implementing until it doesn't feel like I'm just throwing a dart blindfolded while expecting a bullseye.\n\n[quote=&quot;HegemonKhan&quot;:4byuo8ah]\np.s.\n\n(from your post) ~ ya, sorry, I meant random with my wrong use of &quot;dynamic&quot; in my post.\n\np.s.s.\n\nalso, feel free to ask, as I~we will be glad to help you do something (like our codings) in~through~with the GUI, just let I~us know if you need the help! (actually the format~structure~syntax of the GUI and via-in Code are quite different, it's not easy to match up the GUI with it's coding equivalent and vice-versa)\n[/quote:4byuo8ah]\n\nThanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->  I can use all the help I can get.  I don't mind that they don't match up.  I'm relying on the GUI now because that's all I can handle.  But I know the day will come when I want something better and I can always pull up the posts and refer to them.\n\nThe oddest thing I notice about the way I learn is that once the question gets asked, the answer is so much easier to realize.  It's like a weight taken off my shoulders and I can finally &quot;see&quot; what's in front of me.\n\nI'm really grateful for helping me through this.",
      "EditableFormat": "bbcode",
      "HTML": "HegemonKhan, I'm happy whenever you help. No matter how confusing the whole thing gets, your answers opens my eyes to something outside of my scope and actually helps speed up my learning.  I just worry I come off sounding idiotic and then people stop helping... <br/><br/><blockquote><cite>HegemonKhan wrote:</cite><br/>though if I may, I'm still curious in attempting to understand what you want (hehe), and maybe I may be able to then offer you some useful assistance (or maybe not, we'll see, lol).<br/><br/>do you want a &quot;hub~center&quot; room that all the other rooms are connected to (via exits), but the game randomly chooses what room you go to from the &quot;hub-center&quot; room?<br/><br/>do you want the actual exits to change, as in this exit goes: &quot;from room_A to room_B&quot;, but now when you go back through the same exit (which should be: from room_B to room_A) is now: &quot;from room_B to room_C&quot; ??<br/><br/>or do you mean something something else by random exits ??<br/></blockquote><br/><br/>There is a multitude of things I'm trying to make happen.  I can use assistance on finding another way to tackle this idea in Quest.<br/><br/>There's no hub.  The first room in my example from the other post is just a room containing the player.  I am using that room to set up objects such as creating the exits, moving the objects to their proper rooms, and such.  I don't know of any other way to initialize the objects at this time.<br/><br/>To prevent the replay from growing stale and until the puzzle is solved, I want to randomize the connections between the rooms.  The goal remains the same, but the path to the goal changes slightly upon replay.  The exits are generated only at the launch but once the adventure starts, the exits are static for the remainder of the story until it concludes.<br/><br/>Originally I was going to rely on the compass generated exits but I ran into difficulties (which I should have asked a question about but it didn't quite bother me enough at the time).  I was trying to make exits go to different rooms even though the names sounded similar.  However, when I played the game, I noticed that whenever I had 2 directions such as &quot;down&quot; and &quot;down a ladder&quot;, the direction called &quot;down&quot; won whenever I typed in &quot;down&quot;.  It was like the other exit didn't even exist.  That's how I started experimenting with creating exits.<br/><br/><blockquote><cite>HegemonKhan wrote:</cite><br/>--------------<br/><br/>If I understand Jaynne's code, I think it does the same thing as mine, but much much better (it allows you to easily put in your description for the room itself and for what exits that room has too ~ If I understand Jaynne's code anyways, lol). I think you just got to add in a &quot;autodescription&quot; String attribute for each room (unfortunately, since this is your customized message, I don't think any other way but to do it for each room, as each room will have a different unique description right?), and then a description for each exit too. Then, just add the Inherited Attribute (scroll down to the bottom to find the BaseRoom that you created in~with the Object Type ~ &quot;Type&quot; type attribute ~ BaseRoom), BaseRoom, to each of your rooms.<br/><br/>Though, this may be incorrect, so let or ask Jaynne to accurately help with getting his own code and system into your game.<br/></blockquote><br/><br/>LOL, I am not ready to work the code into the game.  I am having trouble grasping the concept of a BaseRoom.  Also, some of the basics seem to have gone over my head.  The code makes sense when I read it but I'm not sure if that's what I've been looking for and how do I use it once I've inserted the code into my game?  That's how I know I'm not ready.  Since I don't &quot;get&quot; the basics, then I need to hold off on implementing until it doesn't feel like I'm just throwing a dart blindfolded while expecting a bullseye.<br/><br/><blockquote><cite>HegemonKhan wrote:</cite><br/>p.s.<br/><br/>(from your post) ~ ya, sorry, I meant random with my wrong use of &quot;dynamic&quot; in my post.<br/><br/>p.s.s.<br/><br/>also, feel free to ask, as I~we will be glad to help you do something (like our codings) in~through~with the GUI, just let I~us know if you need the help! (actually the format~structure~syntax of the GUI and via-in Code are quite different, it's not easy to match up the GUI with it's coding equivalent and vice-versa)<br/></blockquote><br/><br/>Thanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->  I can use all the help I can get.  I don't mind that they don't match up.  I'm relying on the GUI now because that's all I can handle.  But I know the day will come when I want something better and I can always pull up the posts and refer to them.<br/><br/>The oddest thing I notice about the way I learn is that once the question gets asked, the answer is so much easier to realize.  It's like a weight taken off my shoulders and I can finally &quot;see&quot; what's in front of me.<br/><br/>I'm really grateful for helping me through this.",
      "PostDate": "2013-08-01T21:24:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25674",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:3clp8kzq]if you just want random travel between rooms (any room can randomly lead to any other room*), then I think I can construct a command and~or verb for you (in code, as it is easier for me, and I'll help you with adding it correctly ~ ie to the right places in your game code). this would completely negate the need~use of exits however. Though, I'm sure I can find an alternative if you need some of the exits' possible attribute features (such as descriptions or whatever ~ I can't recall what options~features exits have off the top of my head, lol).\n\n*I think I can also make it so that the randomization will apply only to the remaining unvisited rooms too, so you can actually visit all of them, lol.[/quote:3clp8kzq]\n\nThanks.  The connections are randomly generated but they still follow a logical pattern.  Travel between rooms is only possible between adjacent rooms.  I'm not sure of what you are proposing but I'll go for it if it's not too far from your original proposal.  LOL, I didn't even think there was a way around using exits.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>if you just want random travel between rooms (any room can randomly lead to any other room*), then I think I can construct a command and~or verb for you (in code, as it is easier for me, and I'll help you with adding it correctly ~ ie to the right places in your game code). this would completely negate the need~use of exits however. Though, I'm sure I can find an alternative if you need some of the exits' possible attribute features (such as descriptions or whatever ~ I can't recall what options~features exits have off the top of my head, lol).<br/><br/>*I think I can also make it so that the randomization will apply only to the remaining unvisited rooms too, so you can actually visit all of them, lol.</blockquote><br/><br/>Thanks.  The connections are randomly generated but they still follow a logical pattern.  Travel between rooms is only possible between adjacent rooms.  I'm not sure of what you are proposing but I'll go for it if it's not too far from your original proposal.  LOL, I didn't even think there was a way around using exits.",
      "PostDate": "2013-08-01T21:37:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25681",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm working on finishing my response (and also getting some code that works for you too), so it's not that I'm not replying, I'm just &quot;in the process&quot; of replying, lol.\n\n----------------------------\n\njust quickly about jaynne's use of &quot;baseroom&quot; for now:\n\nConceptually:\n\nAn Object Type is like a basket, and you can put (add) all the &quot;eggs&quot; (Attributes) that you want into this basket. Then, instead of giving all your friends (Objects) each of those eggs, you instead give each of your friends this same single basket. It's a much faster and efficient way to distribute or to give the same bunch of attributes to a bunch of objects.\n\nWould you rather be given a bag with your grocieries held in it, or just given your grocieries?  hehe <!-- s:mrgreen: --><img src=\"{SMILIES_PATH}/icon_mrgreen.gif\" alt=\":mrgreen:\" title=\"Mr. Green\" /><!-- s:mrgreen: -->  Isn't that shopping cart convenient for putting all your grocieries into it, which you can then push it around and to your car, so you don't have to carry all the grocieries you can with your bare hands (having to make many trips) to your car? hehe  <!-- s:mrgreen: --><img src=\"{SMILIES_PATH}/icon_mrgreen.gif\" alt=\":mrgreen:\" title=\"Mr. Green\" /><!-- s:mrgreen: --> \n\nHow to physically do it:\n\n[code:23vaumih]left pane~side, the &quot;tree of stuff&quot;&#58;\n\n(this is what it looks like upon a new game creation; it's default list)\n\nObjects\n-&gt; game\n-&gt;-&gt; Verbs\n-&gt;-&gt; Commands\n-&gt; room\n-&gt;-&gt; player\nFunctions\nTimers\nWalkthrough\nAdvanced (click on the tiny box with a &quot;+&quot; in it, to reveal the things seen below)\n-&gt; Included Libraries\n-&gt;-&gt; English&#46;aslx\n-&gt;-&gt; Core&#46;aslx\n-&gt; Templates\n-&gt; Dynamic Templates\n-&gt; Object Types\n-&gt; Javascript\nV\n&#46;&#46;&#46;\nV\nFilter -&gt; Show Library Objects (reveals all the &quot;default, built-in&quot; stuff within the Core&#46;aslx code, as light grey text)[/code:23vaumih]\n\nObject Type (it's hidden under~within the &quot;Advanced&quot;) -&gt; Add-&gt;\n\nyour_newly_made_object_type -&gt; Type (Tab, it's the only tab, lol) -&gt; Inherited Types -&gt; Add -&gt; (will explain further down: yes you can have object types with object types inside of them, I'll give an example of it below)\n\nyour_newly_made_object_type -&gt; Type (Tab, it's the only tab, lol) -&gt; Attributes -&gt; Add -&gt; (no different then if this was an object)\n\nTo give the basket to each of your friends, you do this for each object:\n\nObject_Name  -&gt; Attributes (Tab) -&gt; Inherited Types -&gt; Add -&gt; (scroll down to the very bottom to find the new &quot;Types&quot; ~ Object Types that you just created) -&gt; all the attributes that you added to the Object Type, are now also added to this object automatically.\n\nfor example:\n\nthis is not fun even with copy and paste (as well as it taking up a ton of more space too, lol):\n\n[code:23vaumih]&lt;object name=&quot;HK&quot;&gt;\n  &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;\n    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;\n\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;\n\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;\n\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;\n\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;\n\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;\n\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;\n\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;\n\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;\n\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;\n\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;\n\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;\n\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;\n\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;\n\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;\n\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;\n\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;\n\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;\n\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;\n\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;\n\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;\n\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;\n\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;\n\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;\n\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;\n\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;\n\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;\n\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;\n\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;\n\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;\n\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;\n\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;\n\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;\n\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;\n\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;\n    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;\n\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;\n\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;\n\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;\n\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;\n\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;\n\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;\n\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;\n\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;\n\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;\n\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;\n\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;\n\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;\n\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;\n\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;\n\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;\n\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;\n\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;\n\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;\n\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;\n    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;\n\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;\n    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;\n\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;\n\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;\n    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;\n\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;\n\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;\n\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;\n    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;\n\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;\n\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;\n\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;\n\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;\n\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;\n\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;\n\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;\n\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;\n    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;\n    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;\n\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;\n\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;\n    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;\n    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;\n    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;\n\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;\n\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;\n\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;\n    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;\n\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;\n\t\n\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;\n    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;\n\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;\n\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;\n\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;\n\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;Amy&quot;&gt;\n    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;\n    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;\n\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;\n\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;\n\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;\n\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;\n\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;\n\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;\n\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;\n\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;\n\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;\n\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;\n\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;\n\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;\n\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;\n\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;\n\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;\n\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;\n\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;\n\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;\n\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;\n\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;\n\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;\n\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;\n\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;\n\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;\n\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;\n\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;\n\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;\n\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;\n\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;\n\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;\n\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;\n\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;\n\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;\n\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;\n    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;\n\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;\n\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;\n\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;\n\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;\n\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;\n\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;\n\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;\n\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;\n\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;\n\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;\n\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;\n\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;\n\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;\n\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;\n\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;\n\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;\n\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;\n\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;\n\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;\n    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;\n\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;\n    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;\n\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;\n\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;\n    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;\n\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;\n\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;\n\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;\n    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;\n\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;\n\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;\n\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;\n\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;\n\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;\n\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;\n\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;\n\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;\n    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;\n    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;\n\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;\n\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;\n    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;\n    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;\n    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;\n\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;\n\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;\n\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;\n    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;\n\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;\n\t\n\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;\n    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;\n\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;\n\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;\n\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;\n\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;\n    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;\n\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;\n\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;\n\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;\n\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;\n\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;\n\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;\n\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;\n\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;\n\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;\n\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;\n\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;\n\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;\n\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;\n\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;\n\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;\n\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;\n\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;\n\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;\n\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;\n\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;\n\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;\n\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;\n\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;\n\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;\n\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;\n\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;\n\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;\n\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;\n\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;\n\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;\n\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;\n\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;\n\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;\n\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;\n    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;\n\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;\n\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;\n\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;\n\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;\n\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;\n\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;\n\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;\n\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;\n\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;\n\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;\n\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;\n\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;\n\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;\n\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;\n\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;\n\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;\n\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;\n\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;\n\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;\n    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;\n\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;\n    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;\n\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;\n\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;\n    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;\n\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;\n\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;\n\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;\n    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;\n\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;\n\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;\n\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;\n\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;\n\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;\n\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;\n\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;\n\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;\n    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;\n    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;\n\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;\n\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;\n    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;\n    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;\n    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;\n\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;\n\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;\n\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;\n    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;\n\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;\n\t\n\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;\n    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;\n\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;\n\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;\n\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;\n\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;\n&lt;/object&gt;[/code:23vaumih]\n\nimagine if I wasn't copy and pasting too... typing in each attribute individually for each object... carpel tunnel syndrone! I think you get the idea... lol, doing this via the GUI~Editor isn't any more fun either, lol. that's a lot of &quot;#$!%&quot; attributes to add!\n\nnow compare it to this instead (much much shorter!):\n\n[code:23vaumih]&lt;object name=&quot;HK&quot;&gt;\n  &lt;inherit name=&quot;character_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;Amy&quot;&gt;\n  &lt;inherit name=&quot;character_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;orc&quot;&gt;\n  &lt;inherit name=&quot;character_type&quot; /&gt;\n&lt;/object&gt;\n\n&lt;type name=&quot;character_type&quot;&gt;\n    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;\n    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;\n\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;\n\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;\n\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;\n\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;\n\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;\n\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;\n\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;\n\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;\n\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;\n\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;\n\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;\n\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;\n\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;\n\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;\n\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;\n\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;\n\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;\n\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;\n\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;\n\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;\n\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;\n\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;\n\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;\n\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;\n\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;\n\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;\n\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;\n\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;\n\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;\n\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;\n\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;\n\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;\n\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;\n\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;\n    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;\n\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;\n\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;\n\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;\n\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;\n\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;\n\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;\n\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;\n\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;\n\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;\n\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;\n\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;\n\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;\n\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;\n\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;\n\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;\n\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;\n\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;\n\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;\n\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;\n    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;\n\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;\n    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;\n\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;\n\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;\n    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;\n\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;\n\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;\n\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;\n    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;\n\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;\n\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;\n\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;\n\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;\n\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;\n\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;\n\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;\n\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;\n    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;\n    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;\n\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;\n\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;\n    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;\n    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;\n    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;\n\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;\n\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;\n\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;\n    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;\n\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;\n\t\n\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;\n    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;\n\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;\n\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;\n\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;\n\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;\n&lt;/type&gt;[/code:23vaumih]\n\noh, and here's how~why you'd have object types within object types (not the best nor completed example, but it's just being used as example anyways, lol):\n\n[code:23vaumih]&lt;type name=&quot;equipment_type&quot;&gt;\n    &lt;use type=&quot;boolean&quot;&gt;true&lt;/use&gt;\n    &lt;give type=&quot;boolean&quot;&gt;true&lt;/give&gt;\n    &lt;drop type=&quot;boolean&quot;&gt;true&lt;/drop&gt;\n    &lt;take type=&quot;boolean&quot;&gt;true&lt;/take&gt;\n\t&lt;weight type=&quot;int&quot;&gt;0&lt;/weight&gt;\n    &lt;equipable type=&quot;boolean&quot;&gt;true&lt;/equipable&gt;\n\t&lt;unequipable type=&quot;boolean&quot;&gt;true&lt;/unequipable&gt;\n\t&lt;equipped type=&quot;boolean&quot;&gt;false&lt;/equipped&gt;\n\t&lt;equipable_layer type=&quot;int&quot;&gt;&lt;/equipable_layer&gt;\n    &lt;equipable_slots type=&quot;list&quot;&gt;&lt;/equipable_slots&gt;\n    &lt;inventoryverbs type=&quot;listextend&quot;&gt;Equip;Unequip&lt;/inventoryverbs&gt;\n  &lt;/type&gt;\n  \n  &lt;type name=&quot;weapon_type&quot;&gt;\n     &lt;inherit name=&quot;equipment_type&quot; /&gt;\n    &lt;durability type=&quot;int&quot;&gt;0&lt;/durability&gt;\n    &lt;attack_rating type=&quot;int&quot;&gt;0&lt;/attack_rating&gt;\n    &lt;physical_damage type=&quot;int&quot;&gt;0&lt;/physical_damage&gt;\n\t&lt;fire_damage type=&quot;int&quot;&gt;0&lt;/fire_damage&gt;\n\t&lt;water_damage type=&quot;int&quot;&gt;0&lt;/water_damage&gt;\n\t&lt;earth_damage type=&quot;int&quot;&gt;0&lt;/earth_damage&gt;\n\t&lt;air_damage type=&quot;int&quot;&gt;0&lt;/air_damage&gt;\n\t&lt;dark_damage type=&quot;int&quot;&gt;0&lt;/dark_damage&gt;\n\t&lt;light_damage type=&quot;int&quot;&gt;0&lt;/light_damage&gt;\n\t&lt;unholy_damage type=&quot;int&quot;&gt;0&lt;/unholy_damage&gt;\n\t&lt;holy_damage type=&quot;int&quot;&gt;0&lt;/holy_damage&gt;\n  &lt;/type&gt;\n  \n  &lt;type name=&quot;armor_type&quot;&gt;\n    &lt;inherit name=&quot;equipment_type&quot; /&gt;\n    &lt;durability type=&quot;int&quot;&gt;0&lt;/durability&gt;\n    &lt;armor_class type=&quot;int&quot;&gt;0&lt;/armor_class&gt;\n    &lt;physical_resistance type=&quot;int&quot;&gt;0&lt;/physical_resistance&gt;\n\t&lt;fire_resistance type=&quot;int&quot;&gt;0&lt;/fire_resistance&gt;\n\t&lt;water_resistance type=&quot;int&quot;&gt;0&lt;/water_resistance&gt;\n\t&lt;earth_resistance type=&quot;int&quot;&gt;0&lt;/earth_resistance&gt;\n\t&lt;air_resistance type=&quot;int&quot;&gt;0&lt;/air_resistance&gt;\n\t&lt;dark_resistance type=&quot;int&quot;&gt;0&lt;/dark_resistance&gt;\n\t&lt;light_resistance type=&quot;int&quot;&gt;0&lt;/light_resistance&gt;\n\t&lt;unholy_resistance type=&quot;int&quot;&gt;0&lt;/unholy_resistance&gt;\n\t&lt;holy_resistance type=&quot;int&quot;&gt;0&lt;/holy_resistance&gt;\n  &lt;/type&gt;\n\n  &lt;type name=&quot;clothing&quot;&gt;\n    &lt;inherit name=&quot;equipment_type&quot; /&gt;\n    // etc attributes that I'm still brainstorming~thinking about, lol\n  &lt;/type&gt;[/code:23vaumih]",
      "EditableFormat": "bbcode",
      "HTML": "I'm working on finishing my response (and also getting some code that works for you too), so it's not that I'm not replying, I'm just &quot;in the process&quot; of replying, lol.<br/><br/>----------------------------<br/><br/>just quickly about jaynne's use of &quot;baseroom&quot; for now:<br/><br/>Conceptually:<br/><br/>An Object Type is like a basket, and you can put (add) all the &quot;eggs&quot; (Attributes) that you want into this basket. Then, instead of giving all your friends (Objects) each of those eggs, you instead give each of your friends this same single basket. It's a much faster and efficient way to distribute or to give the same bunch of attributes to a bunch of objects.<br/><br/>Would you rather be given a bag with your grocieries held in it, or just given your grocieries?  hehe <!-- s:mrgreen: --><img src=\"{SMILIES_PATH}/icon_mrgreen.gif\" alt=\":mrgreen:\" title=\"Mr. Green\" /><!-- s:mrgreen: -->  Isn't that shopping cart convenient for putting all your grocieries into it, which you can then push it around and to your car, so you don't have to carry all the grocieries you can with your bare hands (having to make many trips) to your car? hehe  <!-- s:mrgreen: --><img src=\"{SMILIES_PATH}/icon_mrgreen.gif\" alt=\":mrgreen:\" title=\"Mr. Green\" /><!-- s:mrgreen: --> <br/><br/>How to physically do it:<br/><br/><pre><code>left pane~side, the &quot;tree of stuff&quot;&#58;<br/><br/>(this is what it looks like upon a new game creation; it's default list)<br/><br/>Objects<br/>-&gt; game<br/>-&gt;-&gt; Verbs<br/>-&gt;-&gt; Commands<br/>-&gt; room<br/>-&gt;-&gt; player<br/>Functions<br/>Timers<br/>Walkthrough<br/>Advanced (click on the tiny box with a &quot;+&quot; in it, to reveal the things seen below)<br/>-&gt; Included Libraries<br/>-&gt;-&gt; English&#46;aslx<br/>-&gt;-&gt; Core&#46;aslx<br/>-&gt; Templates<br/>-&gt; Dynamic Templates<br/>-&gt; Object Types<br/>-&gt; Javascript<br/>V<br/>&#46;&#46;&#46;<br/>V<br/>Filter -&gt; Show Library Objects (reveals all the &quot;default, built-in&quot; stuff within the Core&#46;aslx code, as light grey text)</code></pre><br/><br/>Object Type (it's hidden under~within the &quot;Advanced&quot;) -&gt; Add-&gt;<br/><br/>your_newly_made_object_type -&gt; Type (Tab, it's the only tab, lol) -&gt; Inherited Types -&gt; Add -&gt; (will explain further down: yes you can have object types with object types inside of them, I'll give an example of it below)<br/><br/>your_newly_made_object_type -&gt; Type (Tab, it's the only tab, lol) -&gt; Attributes -&gt; Add -&gt; (no different then if this was an object)<br/><br/>To give the basket to each of your friends, you do this for each object:<br/><br/>Object_Name  -&gt; Attributes (Tab) -&gt; Inherited Types -&gt; Add -&gt; (scroll down to the very bottom to find the new &quot;Types&quot; ~ Object Types that you just created) -&gt; all the attributes that you added to the Object Type, are now also added to this object automatically.<br/><br/>for example:<br/><br/>this is not fun even with copy and paste (as well as it taking up a ton of more space too, lol):<br/><br/><pre><code>&lt;object name=&quot;HK&quot;&gt;<br/>  &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;<br/>    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;<br/>\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;<br/>\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;<br/>\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;<br/>\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;<br/>\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;<br/>\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;<br/>\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;<br/>\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;<br/>\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;<br/>\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;<br/>\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;<br/>\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;<br/>\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;<br/>\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;<br/>\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;<br/>\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;<br/>\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;<br/>\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;<br/>\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;<br/>\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;<br/>\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;<br/>\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;<br/>\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;<br/>\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;<br/>\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;<br/>\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;<br/>\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;<br/>\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;<br/>\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;<br/>\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;<br/>\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;<br/>\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;<br/>\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;<br/>\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;<br/>    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;<br/>\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;<br/>\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;<br/>\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;<br/>\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;<br/>\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;<br/>\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;<br/>\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;<br/>\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;<br/>\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;<br/>\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;<br/>\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;<br/>\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;<br/>\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;<br/>\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;<br/>\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;<br/>\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;<br/>\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;<br/>\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;<br/>\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;<br/>    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;<br/>\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;<br/>    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;<br/>\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;<br/>\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;<br/>    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;<br/>\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;<br/>\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;<br/>\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;<br/>    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;<br/>\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;<br/>\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;<br/>\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;<br/>\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;<br/>\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;<br/>\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;<br/>\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;<br/>\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;<br/>    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;<br/>    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;<br/>\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;<br/>\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;<br/>    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;<br/>    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;<br/>    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;<br/>\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;<br/>\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;<br/>\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;<br/>    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;<br/>\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;<br/>\t<br/>\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;<br/>    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;<br/>\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;<br/>\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;<br/>\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;<br/>\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;Amy&quot;&gt;<br/>    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;<br/>    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;<br/>\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;<br/>\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;<br/>\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;<br/>\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;<br/>\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;<br/>\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;<br/>\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;<br/>\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;<br/>\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;<br/>\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;<br/>\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;<br/>\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;<br/>\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;<br/>\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;<br/>\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;<br/>\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;<br/>\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;<br/>\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;<br/>\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;<br/>\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;<br/>\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;<br/>\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;<br/>\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;<br/>\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;<br/>\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;<br/>\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;<br/>\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;<br/>\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;<br/>\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;<br/>\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;<br/>\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;<br/>\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;<br/>\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;<br/>\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;<br/>    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;<br/>\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;<br/>\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;<br/>\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;<br/>\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;<br/>\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;<br/>\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;<br/>\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;<br/>\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;<br/>\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;<br/>\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;<br/>\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;<br/>\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;<br/>\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;<br/>\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;<br/>\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;<br/>\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;<br/>\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;<br/>\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;<br/>\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;<br/>    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;<br/>\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;<br/>    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;<br/>\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;<br/>\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;<br/>    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;<br/>\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;<br/>\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;<br/>\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;<br/>    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;<br/>\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;<br/>\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;<br/>\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;<br/>\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;<br/>\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;<br/>\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;<br/>\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;<br/>\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;<br/>    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;<br/>    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;<br/>\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;<br/>\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;<br/>    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;<br/>    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;<br/>    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;<br/>\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;<br/>\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;<br/>\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;<br/>    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;<br/>\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;<br/>\t<br/>\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;<br/>    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;<br/>\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;<br/>\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;<br/>\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;<br/>\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;<br/>    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;<br/>\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;<br/>\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;<br/>\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;<br/>\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;<br/>\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;<br/>\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;<br/>\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;<br/>\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;<br/>\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;<br/>\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;<br/>\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;<br/>\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;<br/>\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;<br/>\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;<br/>\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;<br/>\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;<br/>\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;<br/>\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;<br/>\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;<br/>\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;<br/>\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;<br/>\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;<br/>\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;<br/>\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;<br/>\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;<br/>\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;<br/>\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;<br/>\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;<br/>\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;<br/>\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;<br/>\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;<br/>\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;<br/>\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;<br/>\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;<br/>    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;<br/>\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;<br/>\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;<br/>\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;<br/>\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;<br/>\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;<br/>\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;<br/>\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;<br/>\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;<br/>\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;<br/>\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;<br/>\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;<br/>\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;<br/>\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;<br/>\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;<br/>\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;<br/>\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;<br/>\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;<br/>\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;<br/>\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;<br/>    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;<br/>\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;<br/>    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;<br/>\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;<br/>\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;<br/>    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;<br/>\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;<br/>\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;<br/>\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;<br/>    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;<br/>\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;<br/>\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;<br/>\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;<br/>\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;<br/>\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;<br/>\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;<br/>\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;<br/>\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;<br/>    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;<br/>    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;<br/>\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;<br/>\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;<br/>    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;<br/>    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;<br/>    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;<br/>\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;<br/>\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;<br/>\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;<br/>    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;<br/>\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;<br/>\t<br/>\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;<br/>    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;<br/>\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;<br/>\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;<br/>\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;<br/>\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>imagine if I wasn't copy and pasting too... typing in each attribute individually for each object... carpel tunnel syndrone! I think you get the idea... lol, doing this via the GUI~Editor isn't any more fun either, lol. that's a lot of &quot;#$!%&quot; attributes to add!<br/><br/>now compare it to this instead (much much shorter!):<br/><br/><pre><code>&lt;object name=&quot;HK&quot;&gt;<br/>  &lt;inherit name=&quot;character_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;Amy&quot;&gt;<br/>  &lt;inherit name=&quot;character_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;inherit name=&quot;character_type&quot; /&gt;<br/>&lt;/object&gt;<br/><br/>&lt;type name=&quot;character_type&quot;&gt;<br/>    &lt;alive type=&quot;boolean&quot;&gt;false&lt;/alive&gt;<br/>    &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>\t&lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>\t&lt;walking type=&quot;boolean&quot;&gt;false&lt;/walking&gt;<br/>\t&lt;running type=&quot;boolean&quot;&gt;false&lt;/running&gt;<br/>\t&lt;crawling type=&quot;boolean&quot;&gt;false&lt;/crawling&gt;<br/>\t&lt;climbing type=&quot;boolean&quot;&gt;false&lt;/climbing&gt;<br/>\t&lt;sitting type=&quot;boolean&quot;&gt;false&lt;/sitting&gt;<br/>\t&lt;jumping type=&quot;boolean&quot;&gt;false&lt;/jumping&gt;<br/>\t&lt;falling type=&quot;boolean&quot;&gt;false&lt;/falling&gt;<br/>\t&lt;swimming type=&quot;boolean&quot;&gt;false&lt;/swimming&gt;<br/>\t&lt;flying type=&quot;boolean&quot;&gt;false&lt;/flying&gt;<br/>\t&lt;floating type=&quot;boolean&quot;&gt;false&lt;/floating&gt;<br/>\t&lt;resting type=&quot;boolean&quot;&gt;false&lt;/resting&gt;<br/>\t&lt;sleeping type=&quot;boolean&quot;&gt;false&lt;/sleeping&gt;<br/>\t&lt;drowning type=&quot;boolean&quot;&gt;false&lt;/drowning&gt;<br/>\t&lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>\t&lt;sneaking type=&quot;boolean&quot;&gt;false&lt;/sneaking&gt;<br/>\t&lt;stealing type=&quot;boolean&quot;&gt;false&lt;/stealing&gt;<br/>\t&lt;talking type=&quot;boolean&quot;&gt;false&lt;/talking&gt;<br/>\t&lt;speaking type=&quot;boolean&quot;&gt;false&lt;/speaking&gt;<br/>\t&lt;singing type=&quot;boolean&quot;&gt;false&lt;/singing&gt;<br/>\t&lt;dancing type=&quot;boolean&quot;&gt;false&lt;/dancing&gt;<br/>\t&lt;working type=&quot;boolean&quot;&gt;false&lt;/working&gt;<br/>\t&lt;playing type=&quot;boolean&quot;&gt;false&lt;/playing&gt;<br/>\t&lt;digging type=&quot;boolean&quot;&gt;false&lt;/digging&gt;<br/>\t&lt;lying type=&quot;boolean&quot;&gt;false&lt;/lying&gt;<br/>\t&lt;flirting type=&quot;boolean&quot;&gt;false&lt;/flirting&gt;<br/>\t&lt;taunting type=&quot;boolean&quot;&gt;false&lt;/taunting&gt;<br/>\t&lt;detected type=&quot;boolean&quot;&gt;false&lt;/detected&gt;<br/>\t&lt;undetected type=&quot;boolean&quot;&gt;false&lt;/undetected&gt;<br/>\t&lt;noticed type=&quot;boolean&quot;&gt;false&lt;/noticed&gt;<br/>\t&lt;unnoticed type=&quot;boolean&quot;&gt;false&lt;/unnoticed&gt;<br/>\t&lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>\t&lt;escaping type=&quot;boolean&quot;&gt;false&lt;/escaping&gt;<br/>\t&lt;escaped type=&quot;boolean&quot;&gt;false&lt;/escaped&gt;<br/>\t&lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>\t&lt;following type=&quot;boolean&quot;&gt;false&lt;/following&gt;<br/>\t&lt;tired type=&quot;boolean&quot;&gt;false&lt;/tired&gt;<br/>\t&lt;sleepy type=&quot;boolean&quot;&gt;false&lt;/sleepy&gt;<br/>\t&lt;hungry type=&quot;boolean&quot;&gt;false&lt;/hungry&gt;<br/>    &lt;thirsty type=&quot;boolean&quot;&gt;false&lt;/thirsty&gt;<br/>\t&lt;poisoned type=&quot;boolean&quot;&gt;false&lt;/poisoned&gt;<br/>\t&lt;petrified type=&quot;boolean&quot;&gt;false&lt;/petrified&gt;<br/>\t&lt;diseased type=&quot;boolean&quot;&gt;false&lt;/diseased&gt;<br/>\t&lt;confused type=&quot;boolean&quot;&gt;false&lt;/confused&gt;<br/>\t&lt;silenced type=&quot;boolean&quot;&gt;false&lt;/silenced&gt;<br/>\t&lt;paralyzed type=&quot;boolean&quot;&gt;false&lt;/paralyzed&gt;<br/>\t&lt;stunned type=&quot;boolean&quot;&gt;false&lt;/stunned&gt;<br/>\t&lt;asleep type=&quot;boolean&quot;&gt;false&lt;/asleep&gt;<br/>\t&lt;blinded type=&quot;boolean&quot;&gt;false&lt;/blinded&gt;<br/>\t&lt;crippled type=&quot;boolean&quot;&gt;false&lt;/crippled&gt;<br/>\t&lt;disabled type=&quot;boolean&quot;&gt;false&lt;/disabled&gt;<br/>\t&lt;injured type=&quot;boolean&quot;&gt;false&lt;/injured&gt;<br/>\t&lt;intoxicated type=&quot;boolean&quot;&gt;false&lt;/intoxicated&gt;<br/>\t&lt;drugged type=&quot;boolean&quot;&gt;false&lt;/drugged&gt;<br/>\t&lt;scared type=&quot;boolean&quot;&gt;false&lt;/scared&gt;<br/>\t&lt;cursed type=&quot;boolean&quot;&gt;false&lt;/cursed&gt;<br/>\t&lt;married type=&quot;boolean&quot;&gt;false&lt;/married&gt;<br/>\t&lt;pregnant type=&quot;boolean&quot;&gt;false&lt;/pregnant&gt;<br/>\t&lt;status_effected type=&quot;boolean&quot;&gt;false&lt;/status_effected&gt;<br/>    &lt;magic_effected type=&quot;boolean&quot;&gt;false&lt;/magic_effected&gt;<br/>\t&lt;bipedal type=&quot;boolean&quot;&gt;false&lt;/bipedal&gt;<br/>    &lt;quadripedal type=&quot;boolean&quot;&gt;false&lt;/quadripedal&gt;<br/>\t&lt;life_point type=&quot;string&quot;&gt;&quot;LP&#58;&quot; + current_life_point + &quot; / &quot; + maximum_life_point&lt;/life_point&gt;<br/>\t&lt;mana_point type=&quot;string&quot;&gt;&quot;MP&#58;&quot; + current_mana_point + &quot; / &quot; + maximum_mana_point&lt;/mana_point&gt;<br/>    &lt;current_life_point type=&quot;int&quot;&gt;0&lt;/current_life_point&gt;<br/>\t&lt;maximum_life_point type=&quot;int&quot;&gt;0&lt;/maximum_life_point&gt;<br/>\t&lt;current_mana_point type=&quot;int&quot;&gt;0&lt;/current_mana_point&gt;<br/>\t&lt;maximum_mana_point type=&quot;int&quot;&gt;0&lt;/maximum_mana_point&gt;<br/>    &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>\t&lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>\t&lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>\t&lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>\t&lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>\t&lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>\t&lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>\t&lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>\t&lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>\t&lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>\t&lt;perception type=&quot;int&quot;&gt;0&lt;/perception&gt;<br/>\t&lt;personality type=&quot;int&quot;&gt;0&lt;/personality&gt;<br/>\t&lt;leadership type=&quot;int&quot;&gt;0&lt;/leadership&gt;<br/>\t&lt;charisma type=&quot;int&quot;&gt;0&lt;/charisma&gt;<br/>\t&lt;alignment type=&quot;int&quot;&gt;0&lt;/alignment&gt;<br/>\t&lt;reputation type=&quot;int&quot;&gt;0&lt;/reputation&gt;<br/>\t&lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>\t&lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>\t&lt;hostility type=&quot;int&quot;&gt;0&lt;/hostility&gt;<br/>\t&lt;precision type=&quot;int&quot;&gt;0&lt;/precision&gt;<br/>\t&lt;fatigue type=&quot;int&quot;&gt;0&lt;/fatigue&gt;<br/>    &lt;stamina type=&quot;int&quot;&gt;0&lt;/stamina&gt;<br/>    &lt;encumbrance type=&quot;int&quot;&gt;0&lt;/encumbrance&gt;<br/>\t&lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>    &lt;age type=&quot;int&quot;&gt;0&lt;/age&gt;<br/>\t&lt;recovery_time type=&quot;int&quot;&gt;0&lt;/recovery_time&gt;<br/>    &lt;reaction_time type=&quot;int&quot;&gt;0&lt;/reaction_time&gt;<br/>    &lt;creativity type=&quot;int&quot;&gt;0&lt;/creativity&gt;<br/>    &lt;accuracy type=&quot;int&quot;&gt;0&lt;/accuracy&gt;<br/>\t&lt;morale type=&quot;int&quot;&gt;0&lt;/morale&gt;<br/>\t&lt;morality type=&quot;int&quot;&gt;0&lt;/morality&gt;<br/>\t&lt;body_weight type=&quot;int&quot;&gt;0&lt;/body_weight&gt;<br/>    &lt;body_height type=&quot;int&quot;&gt;0&lt;/body_height&gt;<br/>\t&lt;carry_weight type=&quot;int&quot;&gt;0&lt;/carry_weight&gt;<br/>\t<br/>\t&lt;alias type=&quot;string&quot;&gt;&lt;/alias&gt;<br/>    &lt;gender type=&quot;string&quot;&gt;&lt;/gender&gt;<br/>\t&lt;species type=&quot;string&quot;&gt;&lt;/species&gt;<br/>\t&lt;race type=&quot;string&quot;&gt;&lt;/race&gt;<br/>\t&lt;class type=&quot;string&quot;&gt;&lt;/class&gt;<br/>\t&lt;specialization type=&quot;string&quot;&gt;&lt;/specialization&gt;<br/>&lt;/type&gt;</code></pre><br/><br/>oh, and here's how~why you'd have object types within object types (not the best nor completed example, but it's just being used as example anyways, lol):<br/><br/><pre><code>&lt;type name=&quot;equipment_type&quot;&gt;<br/>    &lt;use type=&quot;boolean&quot;&gt;true&lt;/use&gt;<br/>    &lt;give type=&quot;boolean&quot;&gt;true&lt;/give&gt;<br/>    &lt;drop type=&quot;boolean&quot;&gt;true&lt;/drop&gt;<br/>    &lt;take type=&quot;boolean&quot;&gt;true&lt;/take&gt;<br/>\t&lt;weight type=&quot;int&quot;&gt;0&lt;/weight&gt;<br/>    &lt;equipable type=&quot;boolean&quot;&gt;true&lt;/equipable&gt;<br/>\t&lt;unequipable type=&quot;boolean&quot;&gt;true&lt;/unequipable&gt;<br/>\t&lt;equipped type=&quot;boolean&quot;&gt;false&lt;/equipped&gt;<br/>\t&lt;equipable_layer type=&quot;int&quot;&gt;&lt;/equipable_layer&gt;<br/>    &lt;equipable_slots type=&quot;list&quot;&gt;&lt;/equipable_slots&gt;<br/>    &lt;inventoryverbs type=&quot;listextend&quot;&gt;Equip;Unequip&lt;/inventoryverbs&gt;<br/>  &lt;/type&gt;<br/>  <br/>  &lt;type name=&quot;weapon_type&quot;&gt;<br/>     &lt;inherit name=&quot;equipment_type&quot; /&gt;<br/>    &lt;durability type=&quot;int&quot;&gt;0&lt;/durability&gt;<br/>    &lt;attack_rating type=&quot;int&quot;&gt;0&lt;/attack_rating&gt;<br/>    &lt;physical_damage type=&quot;int&quot;&gt;0&lt;/physical_damage&gt;<br/>\t&lt;fire_damage type=&quot;int&quot;&gt;0&lt;/fire_damage&gt;<br/>\t&lt;water_damage type=&quot;int&quot;&gt;0&lt;/water_damage&gt;<br/>\t&lt;earth_damage type=&quot;int&quot;&gt;0&lt;/earth_damage&gt;<br/>\t&lt;air_damage type=&quot;int&quot;&gt;0&lt;/air_damage&gt;<br/>\t&lt;dark_damage type=&quot;int&quot;&gt;0&lt;/dark_damage&gt;<br/>\t&lt;light_damage type=&quot;int&quot;&gt;0&lt;/light_damage&gt;<br/>\t&lt;unholy_damage type=&quot;int&quot;&gt;0&lt;/unholy_damage&gt;<br/>\t&lt;holy_damage type=&quot;int&quot;&gt;0&lt;/holy_damage&gt;<br/>  &lt;/type&gt;<br/>  <br/>  &lt;type name=&quot;armor_type&quot;&gt;<br/>    &lt;inherit name=&quot;equipment_type&quot; /&gt;<br/>    &lt;durability type=&quot;int&quot;&gt;0&lt;/durability&gt;<br/>    &lt;armor_class type=&quot;int&quot;&gt;0&lt;/armor_class&gt;<br/>    &lt;physical_resistance type=&quot;int&quot;&gt;0&lt;/physical_resistance&gt;<br/>\t&lt;fire_resistance type=&quot;int&quot;&gt;0&lt;/fire_resistance&gt;<br/>\t&lt;water_resistance type=&quot;int&quot;&gt;0&lt;/water_resistance&gt;<br/>\t&lt;earth_resistance type=&quot;int&quot;&gt;0&lt;/earth_resistance&gt;<br/>\t&lt;air_resistance type=&quot;int&quot;&gt;0&lt;/air_resistance&gt;<br/>\t&lt;dark_resistance type=&quot;int&quot;&gt;0&lt;/dark_resistance&gt;<br/>\t&lt;light_resistance type=&quot;int&quot;&gt;0&lt;/light_resistance&gt;<br/>\t&lt;unholy_resistance type=&quot;int&quot;&gt;0&lt;/unholy_resistance&gt;<br/>\t&lt;holy_resistance type=&quot;int&quot;&gt;0&lt;/holy_resistance&gt;<br/>  &lt;/type&gt;<br/><br/>  &lt;type name=&quot;clothing&quot;&gt;<br/>    &lt;inherit name=&quot;equipment_type&quot; /&gt;<br/>    // etc attributes that I'm still brainstorming~thinking about, lol<br/>  &lt;/type&gt;</code></pre>",
      "PostDate": "2013-08-02T07:54:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25689",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Holy Smokes!\n\nThis stuff is better.  I found myself scrolling through pages of variables when I was working on exits.  I'll see if I can make this work with the Online Version.\n\nDon't worry about quick replies especially when other things are occupying your time as well.  I like the details in your answer but I know that takes a while to put together too.",
      "EditableFormat": "bbcode",
      "HTML": "Holy Smokes!<br/><br/>This stuff is better.  I found myself scrolling through pages of variables when I was working on exits.  I'll see if I can make this work with the Online Version.<br/><br/>Don't worry about quick replies especially when other things are occupying your time as well.  I like the details in your answer but I know that takes a while to put together too.",
      "PostDate": "2013-08-02T13:29:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25706",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[b:fsz6es2b][size=150:fsz6es2b]Help Me, Please Someone Who's Good With Coding![/size:fsz6es2b][/b:fsz6es2b]\n\nthis is my best attempt at trying to code for random exits for x_amount of rooms, I've no idea if this is even remotely close to working, as I can't get past the initial trouble shooting. Could someone take a look at this, and let me know if I'm even on the right track in my coding, and if yes, help me finish up the inital trouble-shooting. My mind is dead from trying to work on this code, I can't even think enough to figure out the initial trouble-shooting. Hopefully, you can make some sense of what I'm trying to do in this, and if not, ask me, so I can try to explain what I am trying to do with my code, so you can then help.\n\n[code:fsz6es2b]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n\t&lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n\t&lt;start type=&quot;script&quot;&gt;\n\t  function_1\n\t  on ready {\n\t    function_2\n\t  }\n\t  on ready {\n\t    function_3\n\t  }\n\t&lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room_name_1&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_2&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_3&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_4&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_5&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;global_events_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t&lt;parent&gt;null&lt;/parent&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;function_1&quot;&gt;\n    global_events_object&#46;room_object_list = NewObjectList()\n    foreach (object_x, AllObjects()) {\n      if (DoesInherit (object_x, &quot;editor_room&quot;)) {\n        list add (global_events_object&#46;room_object_list, object_x)\n\t  }\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;function_2&quot;&gt;\n    if (ListCount (global_events_object&#46;room_object_list) &gt; 0) {\n      function_4 = ObjectListItem (global_events_object&#46;room_object_list, GetRandomInt (0, ListCount (global_events_object&#46;room_object_list) - 1))\n\t  list remove (global_events_object&#46;room_object_list, function_4)\n\t  function_2\n    } else {\n      function_1\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;function_3&quot;&gt;\n    x = 0\n    create exit (function_5, &quot;exit&quot;, room_1, function_4)\n\tcreate exit (function_5, &quot;exit&quot;, room_1, room_2)\n    create exit (function_5, &quot;exit&quot;, function_4, room_1)\n    list remove (global_events_object&#46;room_object_list, room_1)\n    for (xxx, 0, ListCount (global_events_object&#46;room_object_list) - 1) {\n      room_xxx = ObjectListItem (global_events_object&#46;room_object_list, xxx)\n      create exit (function_5, &quot;exit&quot;, room_xxx, function_6)\n\t  list remove (global_events_object&#46;room_object_list, room_xxx)\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;function_4&quot; type=&quot;string&quot;&gt;\n    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list))\n    return (room_x)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_5&quot; type=&quot;string&quot;&gt;\n    x = x + 1\n    exit_x = &quot;exit_&quot;+GetString (x)\n\treturn (exit_x)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_6&quot; type=&quot;string&quot;&gt;\n    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list) - ListCount (global_events_object&#46;room_object_list) + 2)\n    return (room_x)\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:fsz6es2b]",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\"><span style=\"font-size:150\">Help Me, Please Someone Who's Good With Coding!</span></span><br/><br/>this is my best attempt at trying to code for random exits for x_amount of rooms, I've no idea if this is even remotely close to working, as I can't get past the initial trouble shooting. Could someone take a look at this, and let me know if I'm even on the right track in my coding, and if yes, help me finish up the inital trouble-shooting. My mind is dead from trying to work on this code, I can't even think enough to figure out the initial trouble-shooting. Hopefully, you can make some sense of what I'm trying to do in this, and if not, ask me, so I can try to explain what I am trying to do with my code, so you can then help.<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>\t&lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>\t&lt;start type=&quot;script&quot;&gt;<br/>\t  function_1<br/>\t  on ready {<br/>\t    function_2<br/>\t  }<br/>\t  on ready {<br/>\t    function_3<br/>\t  }<br/>\t&lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room_name_1&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_2&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_3&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_4&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_5&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;global_events_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t&lt;parent&gt;null&lt;/parent&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;function_1&quot;&gt;<br/>    global_events_object&#46;room_object_list = NewObjectList()<br/>    foreach (object_x, AllObjects()) {<br/>      if (DoesInherit (object_x, &quot;editor_room&quot;)) {<br/>        list add (global_events_object&#46;room_object_list, object_x)<br/>\t  }<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_2&quot;&gt;<br/>    if (ListCount (global_events_object&#46;room_object_list) &gt; 0) {<br/>      function_4 = ObjectListItem (global_events_object&#46;room_object_list, GetRandomInt (0, ListCount (global_events_object&#46;room_object_list) - 1))<br/>\t  list remove (global_events_object&#46;room_object_list, function_4)<br/>\t  function_2<br/>    } else {<br/>      function_1<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_3&quot;&gt;<br/>    x = 0<br/>    create exit (function_5, &quot;exit&quot;, room_1, function_4)<br/>\tcreate exit (function_5, &quot;exit&quot;, room_1, room_2)<br/>    create exit (function_5, &quot;exit&quot;, function_4, room_1)<br/>    list remove (global_events_object&#46;room_object_list, room_1)<br/>    for (xxx, 0, ListCount (global_events_object&#46;room_object_list) - 1) {<br/>      room_xxx = ObjectListItem (global_events_object&#46;room_object_list, xxx)<br/>      create exit (function_5, &quot;exit&quot;, room_xxx, function_6)<br/>\t  list remove (global_events_object&#46;room_object_list, room_xxx)<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_4&quot; type=&quot;string&quot;&gt;<br/>    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list))<br/>    return (room_x)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_5&quot; type=&quot;string&quot;&gt;<br/>    x = x + 1<br/>    exit_x = &quot;exit_&quot;+GetString (x)<br/>\treturn (exit_x)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_6&quot; type=&quot;string&quot;&gt;<br/>    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list) - ListCount (global_events_object&#46;room_object_list) + 2)<br/>    return (room_x)<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2013-08-04T10:25:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25727",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Thanks Hegemon, I'm going to see if I can figure this out.  XD\n\nAmy",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Hegemon, I'm going to see if I can figure this out.  XD<br/><br/>Amy",
      "PostDate": "2013-08-06T15:47:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25728",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Hey, I can't say I understood any of the code but I punched it into the Online Version.\n\nI made 1 change to function 3:\n\n    create exit (function_5(), &quot;exit&quot;, room_1, function_4)\n    create exit (function_5(), &quot;exit&quot;, room_1, room_2)\n    create exit (function_5(), &quot;exit&quot;, function_4, room_1)\n\nMy result:\n\nError running script&#058; Error compiling expression 'x + 1': Unknown object or variable 'x'\nError running script&#058; Error compiling expression '&quot;exit&quot;': RootExpressionElement: Cannot convert type 'String' to expression result of 'Element'\nYou are in a room_name_1.\n\nStopped here because I didn't know what to initialize x to...\n\n[code:3blks1dx]&lt;!--Saved by Quest 5&#46;4&#46;4896&#46;9778--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;HegemonKhan's Example&quot;&gt;\n    &lt;gameid&gt;b3dc064f-5c97-4289-8cc1-6eb1e9515723&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;menufont&gt;Georgia, serif&lt;/menufont&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_1&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;beforeenter type=&quot;script&quot;&gt;\n      set (global_events_object, &quot;room_object_list&quot;, NewObjectList())\n      function_1\n      on ready {\n        function_2\n      }\n      on ready {\n        function_3\n      }\n    &lt;/beforeenter&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_2&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_3&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_4&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_name_5&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;global_events_object&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;function_1&quot;&gt;\n    foreach (object_x, AllObjects()) {\n      if (DoesInherit (object_x, &quot;editor_room&quot;)) {\n        list add (global_events_object&#46;room_object_list, object_x)\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;function_2&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (ListCount (global_events_object&#46;room_object_list) &gt; 0) {\n      function_4 = ObjectListItem (global_events_object&#46;room_object_list, GetRandomInt (0, ListCount (global_events_object&#46;room_object_list) - 1))\n      list remove (global_events_object&#46;room_object_list, function_4)\n      function_2\n    }\n    else {\n      function_1\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;function_3&quot;&gt;\n    x = 0\n    create exit (function_5(), &quot;exit&quot;, room_1, function_4)\n    create exit (function_5(), &quot;exit&quot;, room_1, room_2)\n    create exit (function_5(), &quot;exit&quot;, function_4, room_1)\n    list remove (global_events_object&#46;room_object_list, room_1)\n    for (xxx, 0, ListCount (global_events_object&#46;room_object_list) - 1) {\n      room_xxx = ObjectListItem (global_events_object&#46;room_object_list, xxx)\n      create exit (function_5, &quot;exit&quot;, room_xxx, function_6)\n      list remove (global_events_object&#46;room_object_list, room_xxx)\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;function_4&quot; type=&quot;string&quot;&gt;\n    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list))\n    return (room_x)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_5&quot; type=&quot;string&quot;&gt;\n    x = x + 1\n    exit_x = &quot;exit_&quot;+GetString (x)\n    return (exit_x)\n  &lt;/function&gt;\n  &lt;function name=&quot;function_6&quot; type=&quot;string&quot;&gt;\n    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list) - ListCount (global_events_object&#46;room_object_list) + 2)\n    return (room_x)\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:3blks1dx]\n\nI'll keep studying it.  Just thought you should see how the code looked from my end.  I think I copied it precisely into the Online Version.\n\nThanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->  I think punching it in taught me a bit more about features I probably wouldn't have discovered in the Online Version.\n\nAmy",
      "EditableFormat": "bbcode",
      "HTML": "Hey, I can't say I understood any of the code but I punched it into the Online Version.<br/><br/>I made 1 change to function 3:<br/><br/>    create exit (function_5(), &quot;exit&quot;, room_1, function_4)<br/>    create exit (function_5(), &quot;exit&quot;, room_1, room_2)<br/>    create exit (function_5(), &quot;exit&quot;, function_4, room_1)<br/><br/>My result:<br/><br/>Error running script&#058; Error compiling expression 'x + 1': Unknown object or variable 'x'<br/>Error running script&#058; Error compiling expression '&quot;exit&quot;': RootExpressionElement: Cannot convert type 'String' to expression result of 'Element'<br/>You are in a room_name_1.<br/><br/>Stopped here because I didn't know what to initialize x to...<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4896&#46;9778--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;HegemonKhan's Example&quot;&gt;<br/>    &lt;gameid&gt;b3dc064f-5c97-4289-8cc1-6eb1e9515723&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;menufont&gt;Georgia, serif&lt;/menufont&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_1&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;beforeenter type=&quot;script&quot;&gt;<br/>      set (global_events_object, &quot;room_object_list&quot;, NewObjectList())<br/>      function_1<br/>      on ready {<br/>        function_2<br/>      }<br/>      on ready {<br/>        function_3<br/>      }<br/>    &lt;/beforeenter&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_2&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_3&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_4&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_name_5&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;global_events_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;function_1&quot;&gt;<br/>    foreach (object_x, AllObjects()) {<br/>      if (DoesInherit (object_x, &quot;editor_room&quot;)) {<br/>        list add (global_events_object&#46;room_object_list, object_x)<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_2&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (ListCount (global_events_object&#46;room_object_list) &gt; 0) {<br/>      function_4 = ObjectListItem (global_events_object&#46;room_object_list, GetRandomInt (0, ListCount (global_events_object&#46;room_object_list) - 1))<br/>      list remove (global_events_object&#46;room_object_list, function_4)<br/>      function_2<br/>    }<br/>    else {<br/>      function_1<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;function_3&quot;&gt;<br/>    x = 0<br/>    create exit (function_5(), &quot;exit&quot;, room_1, function_4)<br/>    create exit (function_5(), &quot;exit&quot;, room_1, room_2)<br/>    create exit (function_5(), &quot;exit&quot;, function_4, room_1)<br/>    list remove (global_events_object&#46;room_object_list, room_1)<br/>    for (xxx, 0, ListCount (global_events_object&#46;room_object_list) - 1) {<br/>      room_xxx = ObjectListItem (global_events_object&#46;room_object_list, xxx)<br/>      create exit (function_5, &quot;exit&quot;, room_xxx, function_6)<br/>      list remove (global_events_object&#46;room_object_list, room_xxx)<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_4&quot; type=&quot;string&quot;&gt;<br/>    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list))<br/>    return (room_x)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_5&quot; type=&quot;string&quot;&gt;<br/>    x = x + 1<br/>    exit_x = &quot;exit_&quot;+GetString (x)<br/>    return (exit_x)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;function_6&quot; type=&quot;string&quot;&gt;<br/>    room_x = &quot;room_&quot;+GetString (ListCount (global_events_object&#46;room_object_list) - ListCount (global_events_object&#46;room_object_list) + 2)<br/>    return (room_x)<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>I'll keep studying it.  Just thought you should see how the code looked from my end.  I think I copied it precisely into the Online Version.<br/><br/>Thanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->  I think punching it in taught me a bit more about features I probably wouldn't have discovered in the Online Version.<br/><br/>Amy",
      "PostDate": "2013-08-06T16:47:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25729",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The code (as stated) does not work. Let me look at it...",
      "EditableFormat": "bbcode",
      "HTML": "The code (as stated) does not work. Let me look at it...",
      "PostDate": "2013-08-06T18:59:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25731",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I think before anyone can write the code, we need more definition.\n\nFor example:\n1) How many exits can exist from room to room? Is it random? (e.g. 1-3)\n2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.\n3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?\n4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.\n5) Are you generating new rooms, or just linking up existing rooms?\n\nCreating &quot;dungeon&quot; topologies that make sense is not trivial. At least, let's get definition about what you want.",
      "EditableFormat": "bbcode",
      "HTML": "I think before anyone can write the code, we need more definition.<br/><br/>For example:<br/>1) How many exits can exist from room to room? Is it random? (e.g. 1-3)<br/>2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.<br/>3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?<br/>4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.<br/>5) Are you generating new rooms, or just linking up existing rooms?<br/><br/>Creating &quot;dungeon&quot; topologies that make sense is not trivial. At least, let's get definition about what you want.",
      "PostDate": "2013-08-06T19:16:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25732",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;jaynabonne&quot;:33e70i6o]I think before anyone can write the code, we need more definition.\n\nFor example:\n1) How many exits can exist from room to room? Is it random? (e.g. 1-3)\n2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.\n3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?\n4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.\n5) Are you generating new rooms, or just linking up existing rooms?\n\nCreating &quot;dungeon&quot; topologies that make sense is not trivial. At least, let's get definition about what you want.[/quote:33e70i6o]\n\nI got excited at seeing the code and couldn't help tinkering with it.\n\nIf it were something that I can apply to my game...\n\n[color=#0080FF:33e70i6o]1) How many exits can exist from room to room? Is it random? (e.g. 1-3)[/color:33e70i6o]\nAt least 1 exit, maximum of 3.  This part doesn't have to be random but at the time when I was mulling over implementation, it looked easier to make the total of exits random.\n\n[color=#0080FF:33e70i6o]2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.[/color:33e70i6o]\nIt can have an exit back to the room itself.\n\n[color=#0080FF:33e70i6o]3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?[/color:33e70i6o]\nI have something very tricky going on with the directions.  N, S, E, W, NW, SE, Up, Down + diagonal directions upward and downward.  Upper North will take you to the room that's above the room that's north of your current room.  Lower East will take you to the room that's below the room that is east of your current room.\n\n[color=#0080FF:33e70i6o]4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.[/color:33e70i6o]\nThe rooms are set up logically for the most part.  Rooms may only have exits touching its boundaries.  A room may have exits to N, S, E, W, NW, SE, Up, Down + diagonally.  For the topology, I was thinking of along a rectangular shape (3x3 or 3x4).  The illogical part is that when you reach the outermost room, then it wraps to the other side.  In a 3 x 3, if you were in Room A1, going east will take you to A2, from there going east will take you to A3, and then going east again will take you back to A1.\n\n[color=#0080FF:33e70i6o]5) Are you generating new rooms, or just linking up existing rooms?[/color:33e70i6o]\nJust linking up existing rooms.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>I think before anyone can write the code, we need more definition.<br/><br/>For example:<br/>1) How many exits can exist from room to room? Is it random? (e.g. 1-3)<br/>2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.<br/>3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?<br/>4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.<br/>5) Are you generating new rooms, or just linking up existing rooms?<br/><br/>Creating &quot;dungeon&quot; topologies that make sense is not trivial. At least, let's get definition about what you want.</blockquote><br/><br/>I got excited at seeing the code and couldn't help tinkering with it.<br/><br/>If it were something that I can apply to my game...<br/><br/><span style=\"color:#0080FF\">1) How many exits can exist from room to room? Is it random? (e.g. 1-3)</span><br/>At least 1 exit, maximum of 3.  This part doesn't have to be random but at the time when I was mulling over implementation, it looked easier to make the total of exits random.<br/><br/><span style=\"color:#0080FF\">2) Can you have an exit from a room back to itself? If not, then a check needs to be done to prevent that.</span><br/>It can have an exit back to the room itself.<br/><br/><span style=\"color:#0080FF\">3) Which directions can be used for connections? N, S, E, W, NW, SE, Up, Down etc?</span><br/>I have something very tricky going on with the directions.  N, S, E, W, NW, SE, Up, Down + diagonal directions upward and downward.  Upper North will take you to the room that's above the room that's north of your current room.  Lower East will take you to the room that's below the room that is east of your current room.<br/><br/><span style=\"color:#0080FF\">4) Do the random connections need to make logical sense? For example, if I go west twice and then north, can I end up back in the original room? If not, then you need to actually map out a room topology, not just assign random exits.</span><br/>The rooms are set up logically for the most part.  Rooms may only have exits touching its boundaries.  A room may have exits to N, S, E, W, NW, SE, Up, Down + diagonally.  For the topology, I was thinking of along a rectangular shape (3x3 or 3x4).  The illogical part is that when you reach the outermost room, then it wraps to the other side.  In a 3 x 3, if you were in Room A1, going east will take you to A2, from there going east will take you to A3, and then going east again will take you back to A1.<br/><br/><span style=\"color:#0080FF\">5) Are you generating new rooms, or just linking up existing rooms?</span><br/>Just linking up existing rooms.",
      "PostDate": "2013-08-06T20:15:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25733",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I'm still a bit unsure of the exact thing you'd like. For example, a 3x3 or 3x4 grid would not have up and downs as well, unless you mean perhaps a 3x3x3 cube (a hypercube given the wrap around exits? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )...\n\nGiven what you've said, it might work to have a 3D array - corresponding to a 3D space - that the rooms get assigned to randomly (with perhaps more slots than rooms to keep it from being too regular), and then the exits would fall out naturally from the room layout.\n\nDo you know roughly how many rooms you'll have? (I apologize if you've mentioned that already.)",
      "EditableFormat": "bbcode",
      "HTML": "I'm still a bit unsure of the exact thing you'd like. For example, a 3x3 or 3x4 grid would not have up and downs as well, unless you mean perhaps a 3x3x3 cube (a hypercube given the wrap around exits? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )...<br/><br/>Given what you've said, it might work to have a 3D array - corresponding to a 3D space - that the rooms get assigned to randomly (with perhaps more slots than rooms to keep it from being too regular), and then the exits would fall out naturally from the room layout.<br/><br/>Do you know roughly how many rooms you'll have? (I apologize if you've mentioned that already.)",
      "PostDate": "2013-08-06T21:13:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25736",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;jaynabonne&quot;:j4l078gz]unless you mean perhaps a 3x3x3 cube (a hypercube given the wrap around exits? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )...\n\nDo you know roughly how many rooms you'll have? (I apologize if you've mentioned that already.)[/quote:j4l078gz]\n\nHey, yep, I meant it to be three dimensional XD.  \n\nApproximately 10 to 12 rooms.\n\nMy original plan was a 3x3x3 cube or the 3x3x4 (whatchamacallit), where a randomly generated path would connect 10 to 12 rooms.  The unconnected rooms wouldn't go into play.  The rooms should already be set up and I was going to match the room's random exits to their corresponding exit description so it would look more like the exits were laid out ahead of time instead of at game launch.\n\nI liked Hegemon's idea of building a script to handle creating exits randomly.  I didn't consider this a possibility until now since my programming skills aren't there yet.  I am open to alternative ways of handling exits since the effect of what I want to achieve may be a bit unwieldy, a bit overly specific, and may possibly be easier to achieve in other ways.  The main thing I liked is that there is something I can use to create the exits randomly.  I guess if all the script did was create the exits and then let me know where the exits were, then I could use that info and assign the descriptions for the exits in some other way.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>unless you mean perhaps a 3x3x3 cube (a hypercube given the wrap around exits? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )...<br/><br/>Do you know roughly how many rooms you'll have? (I apologize if you've mentioned that already.)</blockquote><br/><br/>Hey, yep, I meant it to be three dimensional XD.  <br/><br/>Approximately 10 to 12 rooms.<br/><br/>My original plan was a 3x3x3 cube or the 3x3x4 (whatchamacallit), where a randomly generated path would connect 10 to 12 rooms.  The unconnected rooms wouldn't go into play.  The rooms should already be set up and I was going to match the room's random exits to their corresponding exit description so it would look more like the exits were laid out ahead of time instead of at game launch.<br/><br/>I liked Hegemon's idea of building a script to handle creating exits randomly.  I didn't consider this a possibility until now since my programming skills aren't there yet.  I am open to alternative ways of handling exits since the effect of what I want to achieve may be a bit unwieldy, a bit overly specific, and may possibly be easier to achieve in other ways.  The main thing I liked is that there is something I can use to create the exits randomly.  I guess if all the script did was create the exits and then let me know where the exits were, then I could use that info and assign the descriptions for the exits in some other way.",
      "PostDate": "2013-08-07T13:22:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25737",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, that's starting to gel a bit. It should be possible to make a script for that. I'm not sure about some rooms being disconnected and not coming into play. Your initial starting room could be one of the disconnected and go nowhere - which would be no fun.\n\nI was doodling a bit last night, seeing how things would look, and I had this sample (see below). I kept it 2D to be able to see the example better.\n\n[code:4cj13hq2]+---+---+---+---+\n| C |   | H | E |\n+---+---+---+---+\n|   | A |   |   |\n+---+---+---+---+\n|   | B |   | F |\n+---+---+---+---+\n| G |   | D |   |\n+---+---+---+---+\n[/code:4cj13hq2]\n\nThis is a 4x4 grid with 8 rooms (A-H) &quot;randomly&quot; assigned. The question is: what would the exits be? If we can figure that out, then we can extrapolate it to a 3D case. In this case, there is a room one step away from every other room, so all the rooms would be connected by simple exits:\n\nA goes NW to C, NE to H, and S to B\nB goes N to A, SW to G and SE to D\nC goes SE to A\nD goes NW to B, NE to F, and S to H\nE goes W to H and E to C\netc.\n\nHowever, the sparseness of it means that you wouldn't get that &quot;wrap around&quot; effect you were talking about, unless rooms happened to be in the right spots - like E and C in this case (and D and H vertically).\n\nWould you want something like room B connects to F (though it jumps 2 squares) and F goes round to B?\n\nThink about this example a bit to see if it fits what you had in mind (in a simplified 2D case).\n\nThe problem with a 3x3x3 block with 10-12 rooms is that over half the slots will be unfilled. If you randomly assign rooms to slots and then only connect immediately adjacent rooms, I wonder how degenerate it could be. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Ok, that's starting to gel a bit. It should be possible to make a script for that. I'm not sure about some rooms being disconnected and not coming into play. Your initial starting room could be one of the disconnected and go nowhere - which would be no fun.<br/><br/>I was doodling a bit last night, seeing how things would look, and I had this sample (see below). I kept it 2D to be able to see the example better.<br/><br/><pre><code>+---+---+---+---+<br/>| C |   | H | E |<br/>+---+---+---+---+<br/>|   | A |   |   |<br/>+---+---+---+---+<br/>|   | B |   | F |<br/>+---+---+---+---+<br/>| G |   | D |   |<br/>+---+---+---+---+<br/></code></pre><br/><br/>This is a 4x4 grid with 8 rooms (A-H) &quot;randomly&quot; assigned. The question is: what would the exits be? If we can figure that out, then we can extrapolate it to a 3D case. In this case, there is a room one step away from every other room, so all the rooms would be connected by simple exits:<br/><br/>A goes NW to C, NE to H, and S to B<br/>B goes N to A, SW to G and SE to D<br/>C goes SE to A<br/>D goes NW to B, NE to F, and S to H<br/>E goes W to H and E to C<br/>etc.<br/><br/>However, the sparseness of it means that you wouldn't get that &quot;wrap around&quot; effect you were talking about, unless rooms happened to be in the right spots - like E and C in this case (and D and H vertically).<br/><br/>Would you want something like room B connects to F (though it jumps 2 squares) and F goes round to B?<br/><br/>Think about this example a bit to see if it fits what you had in mind (in a simplified 2D case).<br/><br/>The problem with a 3x3x3 block with 10-12 rooms is that over half the slots will be unfilled. If you randomly assign rooms to slots and then only connect immediately adjacent rooms, I wonder how degenerate it could be. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-08-07T13:56:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25738",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "One thing to keep in mind: if you do want complete freedom for exits (e.g. even things like &quot;up to the northwest&quot;), then you have 26 possible exits from each room. (A 1D space would have 3^1-1 exits, which is 2 [left, right]; a 2D space has 3^2-1 exits, which is 8 [the Quest compass]; and a 3D space has 3^3-1 = 26 exits [who knows? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->]).\n\nHow did you plan on the player navigating those exits?",
      "EditableFormat": "bbcode",
      "HTML": "One thing to keep in mind: if you do want complete freedom for exits (e.g. even things like &quot;up to the northwest&quot;), then you have 26 possible exits from each room. (A 1D space would have 3^1-1 exits, which is 2 [left, right]; a 2D space has 3^2-1 exits, which is 8 [the Quest compass]; and a 3D space has 3^3-1 = 26 exits [who knows? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->]).<br/><br/>How did you plan on the player navigating those exits?",
      "PostDate": "2013-08-07T14:10:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25746",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "LOL.  How the player does get around is a work in progress.  Much of my answer is limited by my understanding of how to tell an IF story and Quest is my first IF program.\n\nThe exits could have descriptive names.  Such as staircase going up, ladder going down, or out the window.  I would like to enable directions like N, S, E, W, NW, SE, Up, Down, for cases where it is obvious that is the direction the player is going.  Instead of saying &quot;climb the tree&quot;, a simple &quot;up&quot; would make a nice option, but I don't know how to make it so... yet <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nThe ugly approach would be to say, to travel to adjacent rooms that are one level above, &quot;go up north&quot;, &quot;go up south&quot;, ... \n\nI most definitely have my heart set to &quot;appear&quot; that a room could exit in 26 possible directions.  The only rooms that wrap around would be the rooms that reside on the surface of the cube.  So room B, such as the one in the diagram, will never connect to F.  Setting up the rooms this way, is actually more to help me keep the story straight as each room in the cube serves a specific function.",
      "EditableFormat": "bbcode",
      "HTML": "LOL.  How the player does get around is a work in progress.  Much of my answer is limited by my understanding of how to tell an IF story and Quest is my first IF program.<br/><br/>The exits could have descriptive names.  Such as staircase going up, ladder going down, or out the window.  I would like to enable directions like N, S, E, W, NW, SE, Up, Down, for cases where it is obvious that is the direction the player is going.  Instead of saying &quot;climb the tree&quot;, a simple &quot;up&quot; would make a nice option, but I don't know how to make it so... yet <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>The ugly approach would be to say, to travel to adjacent rooms that are one level above, &quot;go up north&quot;, &quot;go up south&quot;, ... <br/><br/>I most definitely have my heart set to &quot;appear&quot; that a room could exit in 26 possible directions.  The only rooms that wrap around would be the rooms that reside on the surface of the cube.  So room B, such as the one in the diagram, will never connect to F.  Setting up the rooms this way, is actually more to help me keep the story straight as each room in the cube serves a specific function.",
      "PostDate": "2013-08-07T20:20:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25752",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well, here is a first attempt:\n\n[code:19u7c5pn]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;imamyroomtest&quot;&gt;\n    &lt;gameid&gt;45c9de1b-bcf4-4d7f-820d-80de6f7a670b&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;dimsx type=&quot;int&quot;&gt;3&lt;/dimsx&gt;\n    &lt;dimsy type=&quot;int&quot;&gt;3&lt;/dimsy&gt;\n    &lt;dimsz type=&quot;int&quot;&gt;3&lt;/dimsz&gt;\n    &lt;rooms type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;room1&lt;/value&gt;\n      &lt;value&gt;room2&lt;/value&gt;\n      &lt;value&gt;room3&lt;/value&gt;\n      &lt;value&gt;room4&lt;/value&gt;\n      &lt;value&gt;room5&lt;/value&gt;\n      &lt;value&gt;room6&lt;/value&gt;\n      &lt;value&gt;room7&lt;/value&gt;\n      &lt;value&gt;room8&lt;/value&gt;\n      &lt;value&gt;room9&lt;/value&gt;\n      &lt;value&gt;room10&lt;/value&gt;\n    &lt;/rooms&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      LayoutRooms\n      // Assign player to random room&#46;\n      roomname = game&#46;rooms&#91;GetRandomInt(0, ListCount(game&#46;rooms)-1)&#93;\n      player&#46;parent = GetObject(roomname)\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;exit name=&quot;exit0-10&quot; alias=&quot;north&quot;&gt;\n    &lt;inherit name=&quot;northdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-1-10&quot; alias=&quot;northwest&quot;&gt;\n    &lt;inherit name=&quot;northwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-100&quot; alias=&quot;west&quot;&gt;\n    &lt;inherit name=&quot;westdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-110&quot; alias=&quot;southwest&quot;&gt;\n    &lt;inherit name=&quot;southwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit010&quot; alias=&quot;south&quot;&gt;\n    &lt;inherit name=&quot;southdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit110&quot; alias=&quot;southeast&quot;&gt;\n    &lt;inherit name=&quot;southeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit100&quot; alias=&quot;east&quot;&gt;\n    &lt;inherit name=&quot;eastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit1-10&quot; alias=&quot;northeast&quot;&gt;\n    &lt;inherit name=&quot;northeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit00-1&quot; alias=&quot;up&quot;&gt;\n    &lt;inherit name=&quot;updirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit0-1-1&quot; alias=&quot;up to the north&quot; /&gt;\n  &lt;exit name=&quot;exit-1-1-1&quot; alias=&quot;up to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit-10-1&quot; alias=&quot;up to the west&quot; /&gt;\n  &lt;exit name=&quot;exit-11-1&quot; alias=&quot;up to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit01-1&quot; alias=&quot;up to the south&quot; /&gt;\n  &lt;exit name=&quot;exit11-1&quot; alias=&quot;up to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit10-1&quot; alias=&quot;up to the east&quot; /&gt;\n  &lt;exit name=&quot;exit1-1-1&quot; alias=&quot;up to the northeast&quot; /&gt;\n  &lt;exit name=&quot;exit001&quot; alias=&quot;down&quot;&gt;\n    &lt;inherit name=&quot;downdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit0-11&quot; alias=&quot;down to the north&quot; /&gt;\n  &lt;exit name=&quot;exit-1-11&quot; alias=&quot;down to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit-101&quot; alias=&quot;down to the west&quot; /&gt;\n  &lt;exit name=&quot;exit-111&quot; alias=&quot;down to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit011&quot; alias=&quot;down to the south&quot; /&gt;\n  &lt;exit name=&quot;exit111&quot; alias=&quot;down to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit101&quot; alias=&quot;down to the east&quot; /&gt;\n  &lt;exit name=&quot;exit1-11&quot; alias=&quot;down to the northeast&quot; /&gt;\n  &lt;object name=&quot;room1&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room2&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room3&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room4&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room5&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room6&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room7&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room8&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room9&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room10&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;CoordsToIndex&quot; parameters=&quot;x, y, z&quot; type=&quot;int&quot;&gt;\n    return (x + game&#46;dimsx*(y + game&#46;dimsy*z))\n  &lt;/function&gt;\n  &lt;function name=&quot;LayoutRooms&quot;&gt;\n          &lt;!&#91;CDATA&#91;\n    // Create a list to hold the assigned room indices&#46;\n    assigned = NewList()\n    // Layout the first room&#46;\n    room = game&#46;rooms&#91;0&#93;\n    currentroom = GetObject(room)\n    currentroom&#46;x = GetRandomInt(0, game&#46;dimsx-1)\n    currentroom&#46;y = GetRandomInt(0, game&#46;dimsy-1)\n    currentroom&#46;z = GetRandomInt(0, game&#46;dimsz-1)\n    // Mark this room's slot&#46;\n    list add (assigned, CoordsToIndex(currentroom&#46;x, currentroom&#46;y, currentroom&#46;z))\n    // Layout the remaining rooms from here&#46;\n    for (i, 1, ListCount(game&#46;rooms)-1) {\n      room = game&#46;rooms&#91;i&#93;\n      newroom = GetObject(room)\n      positioned = false\n      while (not positioned) {\n        // Select a random room top start from&#46;\n        room = game&#46;rooms&#91;GetRandomInt(0, i-1)&#93;\n        sourceroom = GetObject(room)\n        // Select a random direction from this room&#46;\n        dirgood = false\n        while (not dirgood) {\n          dirx = GetRandomInt(-1, 1)\n          diry = GetRandomInt(-1, 1)\n          dirz = GetRandomInt(-1, 1)\n          dirgood = dirx &lt;&gt; 0 or diry &lt;&gt; 0 or dirz &lt;&gt; 0\n        }\n        //msg (&quot;dir&#58; &quot; + dirx + &quot;, &quot; + diry + &quot;, &quot; + dirz)\n        // See if we can position the room here&#46;\n        newroom&#46;x = (sourceroom&#46;x + dirx + game&#46;dimsx) % game&#46;dimsx\n        newroom&#46;y = (sourceroom&#46;y + diry + game&#46;dimsy) % game&#46;dimsy\n        newroom&#46;z = (sourceroom&#46;z + dirz + game&#46;dimsz) % game&#46;dimsz\n        index = CoordsToIndex(newroom&#46;x, newroom&#46;y, newroom&#46;z)\n        positioned = not index in assigned\n      }\n      // Remember this position is used&#46;\n      list add (assigned, index)\n      // Create and assign the exits&#46;\n      exitname = &quot;exit&quot; + dirx + diry + dirz\n      oppname = &quot;exit&quot; + -dirx + -diry + -dirz\n      //msg(&quot;exitname = &quot; + exitname + &quot;, oppname = &quot; + oppname)\n      newexit = clone(GetObject(exitname))\n      oppexit = clone(GetObject(oppname))\n      newexit&#46;parent = sourceroom\n      newexit&#46;to = newroom\n      oppexit&#46;parent = newroom\n      oppexit&#46;to = sourceroom\n      //msg (&quot;pos&#58; &quot; + newroom&#46;x + &quot;, &quot; + newroom&#46;y + &quot;, &quot; + newroom&#46;z)\n      currentroom = newroom\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n&lt;/asl&gt;[/code:19u7c5pn]\n\nYou need to set these things in the game object:\n- rooms: a list of the rooms to be laid out. These are the names (as a string list) of the rooms.\n- dimsx, dimsy, dimsz: The dimensions of the space to lay out inside. Currently, 3x3x3.\n\nThen call LayoutRooms. In the example, it's in the start script. The start script also picks a random start room for the player.\n\nThe algorithm used is to basically randomly assign the first room and then for each room after that, position the next room in a random direction from one of the previously laid out rooms, creating both outgoing and incoming exits. This does mean that the early rooms in the list will have a greater chance of multiple exits and the final room will always have just a single exit (keep that in mind).\n\nDirections are as follows:\n- x = -1 : west\n- x = 1 : east\n- y = -1 : north\n- y = 1 : south\n- z = -1 : up\n- z = 1 : down\n\nAn exit name is just a concatenation of all three dims, as &quot;exitXYZ&quot;. For example, north is &quot;exit0-10&quot; and &quot;up to the south&quot; is &quot;exit01-1&quot;.\n\nThere is a an exit defined for each possible direction (all 26 of them). These are prototype exits - the actual exits used are cloned from these. The exit names are critical (do not change!), but the aliases can be whatever you want.\n\nWhat this *doesn't* do is create all the exits possible given the room layout. So if you start in room A, tunnel south to room B and then north east to room C, you will not end up with an exit as well from A to C, even though they're right next to each other. I don't think that's a big deal, but that can be changed if it's a problem. (There could be a final phase where it runs through all rooms and hooks up all adjacent rooms instead of generating exits based solely on the tunneling directions.)\n\nI think this is basically working. There could be bugs. See how it works for you!\n\nEdit: Updated the script to fix a minor issue.",
      "EditableFormat": "bbcode",
      "HTML": "Well, here is a first attempt:<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;imamyroomtest&quot;&gt;<br/>    &lt;gameid&gt;45c9de1b-bcf4-4d7f-820d-80de6f7a670b&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;dimsx type=&quot;int&quot;&gt;3&lt;/dimsx&gt;<br/>    &lt;dimsy type=&quot;int&quot;&gt;3&lt;/dimsy&gt;<br/>    &lt;dimsz type=&quot;int&quot;&gt;3&lt;/dimsz&gt;<br/>    &lt;rooms type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;room1&lt;/value&gt;<br/>      &lt;value&gt;room2&lt;/value&gt;<br/>      &lt;value&gt;room3&lt;/value&gt;<br/>      &lt;value&gt;room4&lt;/value&gt;<br/>      &lt;value&gt;room5&lt;/value&gt;<br/>      &lt;value&gt;room6&lt;/value&gt;<br/>      &lt;value&gt;room7&lt;/value&gt;<br/>      &lt;value&gt;room8&lt;/value&gt;<br/>      &lt;value&gt;room9&lt;/value&gt;<br/>      &lt;value&gt;room10&lt;/value&gt;<br/>    &lt;/rooms&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      LayoutRooms<br/>      // Assign player to random room&#46;<br/>      roomname = game&#46;rooms&#91;GetRandomInt(0, ListCount(game&#46;rooms)-1)&#93;<br/>      player&#46;parent = GetObject(roomname)<br/>    &lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;exit name=&quot;exit0-10&quot; alias=&quot;north&quot;&gt;<br/>    &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-1-10&quot; alias=&quot;northwest&quot;&gt;<br/>    &lt;inherit name=&quot;northwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-100&quot; alias=&quot;west&quot;&gt;<br/>    &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-110&quot; alias=&quot;southwest&quot;&gt;<br/>    &lt;inherit name=&quot;southwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit010&quot; alias=&quot;south&quot;&gt;<br/>    &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit110&quot; alias=&quot;southeast&quot;&gt;<br/>    &lt;inherit name=&quot;southeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit100&quot; alias=&quot;east&quot;&gt;<br/>    &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit1-10&quot; alias=&quot;northeast&quot;&gt;<br/>    &lt;inherit name=&quot;northeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit00-1&quot; alias=&quot;up&quot;&gt;<br/>    &lt;inherit name=&quot;updirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit0-1-1&quot; alias=&quot;up to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit-1-1-1&quot; alias=&quot;up to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit-10-1&quot; alias=&quot;up to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit-11-1&quot; alias=&quot;up to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit01-1&quot; alias=&quot;up to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit11-1&quot; alias=&quot;up to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit10-1&quot; alias=&quot;up to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit1-1-1&quot; alias=&quot;up to the northeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit001&quot; alias=&quot;down&quot;&gt;<br/>    &lt;inherit name=&quot;downdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit0-11&quot; alias=&quot;down to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit-1-11&quot; alias=&quot;down to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit-101&quot; alias=&quot;down to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit-111&quot; alias=&quot;down to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit011&quot; alias=&quot;down to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit111&quot; alias=&quot;down to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit101&quot; alias=&quot;down to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit1-11&quot; alias=&quot;down to the northeast&quot; /&gt;<br/>  &lt;object name=&quot;room1&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room2&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room3&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room4&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room5&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room6&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room7&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room8&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room9&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room10&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;CoordsToIndex&quot; parameters=&quot;x, y, z&quot; type=&quot;int&quot;&gt;<br/>    return (x + game&#46;dimsx*(y + game&#46;dimsy*z))<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;LayoutRooms&quot;&gt;<br/>          &lt;!&#91;CDATA&#91;<br/>    // Create a list to hold the assigned room indices&#46;<br/>    assigned = NewList()<br/>    // Layout the first room&#46;<br/>    room = game&#46;rooms&#91;0&#93;<br/>    currentroom = GetObject(room)<br/>    currentroom&#46;x = GetRandomInt(0, game&#46;dimsx-1)<br/>    currentroom&#46;y = GetRandomInt(0, game&#46;dimsy-1)<br/>    currentroom&#46;z = GetRandomInt(0, game&#46;dimsz-1)<br/>    // Mark this room's slot&#46;<br/>    list add (assigned, CoordsToIndex(currentroom&#46;x, currentroom&#46;y, currentroom&#46;z))<br/>    // Layout the remaining rooms from here&#46;<br/>    for (i, 1, ListCount(game&#46;rooms)-1) {<br/>      room = game&#46;rooms&#91;i&#93;<br/>      newroom = GetObject(room)<br/>      positioned = false<br/>      while (not positioned) {<br/>        // Select a random room top start from&#46;<br/>        room = game&#46;rooms&#91;GetRandomInt(0, i-1)&#93;<br/>        sourceroom = GetObject(room)<br/>        // Select a random direction from this room&#46;<br/>        dirgood = false<br/>        while (not dirgood) {<br/>          dirx = GetRandomInt(-1, 1)<br/>          diry = GetRandomInt(-1, 1)<br/>          dirz = GetRandomInt(-1, 1)<br/>          dirgood = dirx &lt;&gt; 0 or diry &lt;&gt; 0 or dirz &lt;&gt; 0<br/>        }<br/>        //msg (&quot;dir&#58; &quot; + dirx + &quot;, &quot; + diry + &quot;, &quot; + dirz)<br/>        // See if we can position the room here&#46;<br/>        newroom&#46;x = (sourceroom&#46;x + dirx + game&#46;dimsx) % game&#46;dimsx<br/>        newroom&#46;y = (sourceroom&#46;y + diry + game&#46;dimsy) % game&#46;dimsy<br/>        newroom&#46;z = (sourceroom&#46;z + dirz + game&#46;dimsz) % game&#46;dimsz<br/>        index = CoordsToIndex(newroom&#46;x, newroom&#46;y, newroom&#46;z)<br/>        positioned = not index in assigned<br/>      }<br/>      // Remember this position is used&#46;<br/>      list add (assigned, index)<br/>      // Create and assign the exits&#46;<br/>      exitname = &quot;exit&quot; + dirx + diry + dirz<br/>      oppname = &quot;exit&quot; + -dirx + -diry + -dirz<br/>      //msg(&quot;exitname = &quot; + exitname + &quot;, oppname = &quot; + oppname)<br/>      newexit = clone(GetObject(exitname))<br/>      oppexit = clone(GetObject(oppname))<br/>      newexit&#46;parent = sourceroom<br/>      newexit&#46;to = newroom<br/>      oppexit&#46;parent = newroom<br/>      oppexit&#46;to = sourceroom<br/>      //msg (&quot;pos&#58; &quot; + newroom&#46;x + &quot;, &quot; + newroom&#46;y + &quot;, &quot; + newroom&#46;z)<br/>      currentroom = newroom<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>You need to set these things in the game object:<br/>- rooms: a list of the rooms to be laid out. These are the names (as a string list) of the rooms.<br/>- dimsx, dimsy, dimsz: The dimensions of the space to lay out inside. Currently, 3x3x3.<br/><br/>Then call LayoutRooms. In the example, it's in the start script. The start script also picks a random start room for the player.<br/><br/>The algorithm used is to basically randomly assign the first room and then for each room after that, position the next room in a random direction from one of the previously laid out rooms, creating both outgoing and incoming exits. This does mean that the early rooms in the list will have a greater chance of multiple exits and the final room will always have just a single exit (keep that in mind).<br/><br/>Directions are as follows:<br/>- x = -1 : west<br/>- x = 1 : east<br/>- y = -1 : north<br/>- y = 1 : south<br/>- z = -1 : up<br/>- z = 1 : down<br/><br/>An exit name is just a concatenation of all three dims, as &quot;exitXYZ&quot;. For example, north is &quot;exit0-10&quot; and &quot;up to the south&quot; is &quot;exit01-1&quot;.<br/><br/>There is a an exit defined for each possible direction (all 26 of them). These are prototype exits - the actual exits used are cloned from these. The exit names are critical (do not change!), but the aliases can be whatever you want.<br/><br/>What this *doesn't* do is create all the exits possible given the room layout. So if you start in room A, tunnel south to room B and then north east to room C, you will not end up with an exit as well from A to C, even though they're right next to each other. I don't think that's a big deal, but that can be changed if it's a problem. (There could be a final phase where it runs through all rooms and hooks up all adjacent rooms instead of generating exits based solely on the tunneling directions.)<br/><br/>I think this is basically working. There could be bugs. See how it works for you!<br/><br/>Edit: Updated the script to fix a minor issue.",
      "PostDate": "2013-08-08T12:17:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25775",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "wow, awesome code, Jaynne! (HK will try to study this and make sense of it... as his attempt was far off, HK's got a long ways to go, and a lot of studying of Jaynne's code, hehe)",
      "EditableFormat": "bbcode",
      "HTML": "wow, awesome code, Jaynne! (HK will try to study this and make sense of it... as his attempt was far off, HK's got a long ways to go, and a lot of studying of Jaynne's code, hehe)",
      "PostDate": "2013-08-09T01:00:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25784",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Thank you Jay! =)\n\nI don't think it ever occurred to me to map it out with coordinates.  It's beautiful.  I get from HK's response that it works really well.  And, I get this feeling I can actually make the 3 D dungeon as large as I want!  Woot!  An opportunity to really confuse the player!  I mean... challenge the player.\n\nAmy",
      "EditableFormat": "bbcode",
      "HTML": "Thank you Jay! =)<br/><br/>I don't think it ever occurred to me to map it out with coordinates.  It's beautiful.  I get from HK's response that it works really well.  And, I get this feeling I can actually make the 3 D dungeon as large as I want!  Woot!  An opportunity to really confuse the player!  I mean... challenge the player.<br/><br/>Amy",
      "PostDate": "2013-08-09T04:06:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25785",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "[quote=&quot;jaynabonne&quot;:knm3178q]Well, here is a first attempt:\n\nWhat this *doesn't* do is create all the exits possible given the room layout. So if you start in room A, tunnel south to room B and then north east to room C, you will not end up with an exit as well from A to C, even though they're right next to each other. I don't think that's a big deal, but that can be changed if it's a problem. (There could be a final phase where it runs through all rooms and hooks up all adjacent rooms instead of generating exits based solely on the tunneling directions.)\n\nI think this is basically working. There could be bugs. See how it works for you!\n\nEdit: Updated the script to fix a minor issue.[/quote:knm3178q]\n\nThanks for the algorithm breakdown.  I think as long as any room has 1 exit (ideally returning to the room it came from) is all I need.  And I won't change the exit names.  They are so logical, I'd probably be lost if I did change the names.  (I read the code before I read your instructions, and that detail was the first Wow on my list.  The second one was when I realized what dims stood for, as a result of seeing the pattern in the exit names).  I'm still trying to figure out how you coded up and down.  I can't find it.\n\nI'm not quite sure what the last point is about.  It sounds like Room A created exits to B and C but C doesn't return to A but B does return to A.\n\nI don't forsee a bug stopping me from enjoying the script.  If I run into any problems, I'll bring them up.  And, since I have to adapt this to the online version, I'm sure a few version related surprises will crop up as well too.\n\nAlready you have me changing the direction of how I want to code the rooms.  Before this, I was thinking of creating the rooms linearly, create 1 room, build exits, then create rooms from those exits.  Now I'm thinking, how do I provide the room with coordinate attributes so that the game can just look up the room?  This is going to be fun!  I feel so much wiser already.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Well, here is a first attempt:<br/><br/>What this *doesn't* do is create all the exits possible given the room layout. So if you start in room A, tunnel south to room B and then north east to room C, you will not end up with an exit as well from A to C, even though they're right next to each other. I don't think that's a big deal, but that can be changed if it's a problem. (There could be a final phase where it runs through all rooms and hooks up all adjacent rooms instead of generating exits based solely on the tunneling directions.)<br/><br/>I think this is basically working. There could be bugs. See how it works for you!<br/><br/>Edit: Updated the script to fix a minor issue.</blockquote><br/><br/>Thanks for the algorithm breakdown.  I think as long as any room has 1 exit (ideally returning to the room it came from) is all I need.  And I won't change the exit names.  They are so logical, I'd probably be lost if I did change the names.  (I read the code before I read your instructions, and that detail was the first Wow on my list.  The second one was when I realized what dims stood for, as a result of seeing the pattern in the exit names).  I'm still trying to figure out how you coded up and down.  I can't find it.<br/><br/>I'm not quite sure what the last point is about.  It sounds like Room A created exits to B and C but C doesn't return to A but B does return to A.<br/><br/>I don't forsee a bug stopping me from enjoying the script.  If I run into any problems, I'll bring them up.  And, since I have to adapt this to the online version, I'm sure a few version related surprises will crop up as well too.<br/><br/>Already you have me changing the direction of how I want to code the rooms.  Before this, I was thinking of creating the rooms linearly, create 1 room, build exits, then create rooms from those exits.  Now I'm thinking, how do I provide the room with coordinate attributes so that the game can just look up the room?  This is going to be fun!  I feel so much wiser already.",
      "PostDate": "2013-08-09T04:34:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25792",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You got what I was trying to say. One result of that is that you would never have the wraparound effect you were talking about, as rooms would never hook up. But I don't think that's a deal breaker, and I'm glad it's going to work for you. (fingers crossed)",
      "EditableFormat": "bbcode",
      "HTML": "You got what I was trying to say. One result of that is that you would never have the wraparound effect you were talking about, as rooms would never hook up. But I don't think that's a deal breaker, and I'm glad it's going to work for you. (fingers crossed)",
      "PostDate": "2013-08-09T14:51:00+01:00",
      "LastEditDate": null
    }
  ]
}
