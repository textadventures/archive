{
  "Topic": {
    "TopicId": "6jumazkot0mer8xqo7wwlg",
    "ForumId": "10",
    "Title": "NPC movement: pick one exit at random, move NPC to new room each player turn",
    "LastUpdated": "2020-04-06T00:01:49.2338913Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7fcb80c6-1b68-48aa-9af2-6f5cd0a1c8b7",
      "UserId": 106087,
      "Username": "Nathaniel.Spence",
      "AvatarUrl": "https://secure.gravatar.com/avatar/169dc71280239f2665ee699d08c643b6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello there\r\n\r\nThis has been asked before, but I'm struggling to interpret previous replies so: what is the simplest way to (each player turn) randomly pick an exit from the NPC's current room and move it to the new room? I have 5 rooms and an NPC that I want to shuffle between them aimlessly, each turn, while the player does other stuff.\r\n\r\nPickOneExit sounds useful but, um,I can't figure out how to use it.\r\n\r\nThanks, as ever...",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello there</p>\n<p>This has been asked before, but I'm struggling to interpret previous replies so: what is the simplest way to (each player turn) randomly pick an exit from the NPC's current room and move it to the new room? I have 5 rooms and an NPC that I want to shuffle between them aimlessly, each turn, while the player does other stuff.</p>\n<p>PickOneExit sounds useful but, um,I can't figure out how to use it.</p>\n<p>Thanks, as ever...</p>\n\n",
      "PostDate": "2020-04-06T00:01:49.2338913Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bdd88c5b-289b-431f-8630-694ac3ed4ba1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You'd want a turnscript. Something like:\r\n```\r\nexit = PickOneExit(npc_name.parent)\r\ndestination = exit.to\r\nMoveObject (npc_name, destination)\r\n```\r\n(where `npc_name` is the name of the npc object)\r\n\r\n<hr />\r\n\r\nIf you have more than one NPC you want to do this for, it would probably be more efficient to have one turnscript for all of them. So you could give the NPC a boolean attribute `wandering` to say they're moving around randomly. When you want to start an NPC wandering, you would do (for example) `john.wandering = true`.\r\n\r\nThen the turnscript would look like this:\r\n```\r\nforeach (npc, AllObjects()) {\r\n  if (GetBoolean (npc, \"wandering\")) {\r\n    exit = PickOneExit(npc.parent)\r\n    destination = exit.to\r\n    MoveObject (npc, destination)\r\n  }\r\n}\r\n```\r\nThat loops over all objects in the game, and if they have a \"wandering\" flag, it moves them randomly.\r\n\r\n<hr/>\r\n\r\nBut there's still issues with that.\r\n\r\n1. If the NPC walks into the room where the player is, it doesn't tell them. So the player wouldn't realise the NPC is there unless they see it in the \"Places & Objects\" pane.\r\n\r\n2. The NPC can walk through locked doors. (easily fixed by using `PickOneUnlockedExit` instead)\r\n\r\n3. Exits without a destination will cause an error if the NPC picks them.\r\n\r\n4. There will be an error if the NPC ends up in a room with no exits\r\n\r\n5. PickOneExit uses `ScopeExitsForRoom`, which assumes the room's `darklevel` is correct (Quests darkness functions are somewhat broken). this means that an NPC walking into a dark room will treat it as a room with no exits, and it doesn't check if the NPC is carrying a torch.\r\n\r\nI'm being called for lunch now; but if you let me know which of those issues you care about, I can show you how to change the script.",
      "EditableFormat": "markdown",
      "HTML": "<p>You'd want a turnscript. Something like:</p>\n<pre><code>exit = PickOneExit(npc_name.parent)\ndestination = exit.to\nMoveObject (npc_name, destination)\n</code></pre>\n<p>(where <code>npc_name</code> is the name of the npc object)</p>\n<hr>\n<p>If you have more than one NPC you want to do this for, it would probably be more efficient to have one turnscript for all of them. So you could give the NPC a boolean attribute <code>wandering</code> to say they're moving around randomly. When you want to start an NPC wandering, you would do (for example) <code>john.wandering = true</code>.</p>\n<p>Then the turnscript would look like this:</p>\n<pre><code>foreach (npc, AllObjects()) {\n  if (GetBoolean (npc, \"wandering\")) {\n    exit = PickOneExit(npc.parent)\n    destination = exit.to\n    MoveObject (npc, destination)\n  }\n}\n</code></pre>\n<p>That loops over all objects in the game, and if they have a \"wandering\" flag, it moves them randomly.</p>\n<hr>\n<p>But there's still issues with that.</p>\n<ol>\n<li>\n<p>If the NPC walks into the room where the player is, it doesn't tell them. So the player wouldn't realise the NPC is there unless they see it in the \"Places &amp; Objects\" pane.</p>\n</li>\n<li>\n<p>The NPC can walk through locked doors. (easily fixed by using <code>PickOneUnlockedExit</code> instead)</p>\n</li>\n<li>\n<p>Exits without a destination will cause an error if the NPC picks them.</p>\n</li>\n<li>\n<p>There will be an error if the NPC ends up in a room with no exits</p>\n</li>\n<li>\n<p>PickOneExit uses <code>ScopeExitsForRoom</code>, which assumes the room's <code>darklevel</code> is correct (Quests darkness functions are somewhat broken). this means that an NPC walking into a dark room will treat it as a room with no exits, and it doesn't check if the NPC is carrying a torch.</p>\n</li>\n</ol>\n<p>I'm being called for lunch now; but if you let me know which of those issues you care about, I can show you how to change the script.</p>\n\n",
      "PostDate": "2020-04-06T11:33:47.5427752Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "38d4332e-201b-41d6-83fa-4c4d200c8a23",
      "UserId": 106087,
      "Username": "Nathaniel.Spence",
      "AvatarUrl": "https://secure.gravatar.com/avatar/169dc71280239f2665ee699d08c643b6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi\r\n\r\nI figured out how to use PickOneExit to move something, just before seeing your reply:\r\n\r\n        exit = PickOneExit (npc.parent)\r\n        npc.parent = exit.to\r\n\r\nSo I will fiddle about with this in an attempt to do it myself with a turnscript, as a learning exercise, before reverting back to your solution if I can't make it work. Thanks for being incredibly helpful in helping me with these questions.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi</p>\n<p>I figured out how to use PickOneExit to move something, just before seeing your reply:</p>\n<pre><code>    exit = PickOneExit (npc.parent)\n    npc.parent = exit.to\n</code></pre>\n<p>So I will fiddle about with this in an attempt to do it myself with a turnscript, as a learning exercise, before reverting back to your solution if I can't make it work. Thanks for being incredibly helpful in helping me with these questions.</p>\n\n",
      "PostDate": "2020-04-06T12:06:13.7497396Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b004e851-28ba-4905-9340-77d1f0a921f5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The simple solution is very short. A solution that works in all the peculiar cases that might crop up is pretty complex. And the most obvious way to write it turns out to be quite ineffecient.\r\n\r\nI've written a script that deals with most of the things I mentioned above, but still could be expanded on. Just in case you're interested to see how huge and unwieldy a simple turnscript can get:\r\n\r\n<details><summary>Way too much code</summary>\r\nIf I wanted to make it work with all the issues above, it'd probably end up with something like this:\r\n\r\n```\r\n// Counting the exits in a room involves looping over all exits, which is quite slow, and checking for darkness is slower.\r\n// So to reduce server load, I make a list of rooms with NPCs in, and then loop over exits checking \"Is there an NPC here?\"\r\nnpcs_to_move = NewObjectList()\r\nrooms_with_npcs = NewDictionary()\r\nforeach (obj, AllObjects()) {\r\n  if (GetBoolean (obj, \"wandering\")) {\r\n    list add (npcs_to_move, obj)\r\n    if (not DictionaryContains (rooms_with_npcs, obj.parent.name)) {\r\n      dictionary add (rooms_with_npcs, obj.parent.name, NewObjectList())\r\n    }\r\n  }\r\n}\r\n\r\n// Then, because checking for darkness is slow, we do it once per room\r\n// Note that we can't use the default `CheckDarkness()` because that only works if the player is in the room\r\nforeach (roomname, rooms_with_npcs) {\r\n  room = GetObject (roomname)\r\n  room.isdark = CheckDarknessForRoom (room)\r\n}\r\n\r\n// Find all the valid exits in those rooms:\r\n//    This is basically what ScopeExitsForRoom() does; but we're checking for multiple rooms at once\r\n//    and not checking for darkness yet\r\nforeach (exit, AllExits()) {\r\n  if (GetBoolean (exit, \"visible\")) {\r\n    if (not GetBoolean (exit.parent, \"isdark\") and not GetBoolean (exit, \"locked\")) {\r\n      if (HasObject (exit, \"to\") or HasScript (exit, \"npcscript\")) {\r\n        if (DictionaryContains (rooms_with_npcs, exit.parent.name)) {\r\n          list add (DictionaryItem (rooms_with_npcs, exit.parent.name), exit)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Finally, look at the NPCs and check which way they can go:\r\nforeach (npc, npcs_to_move) {\r\n  exits = DictionaryItem (rooms_with_npcs, npc.parent.name)\r\n  // Check if there are exits before picking one\r\n  if (ListCount (exits) > 0) {\r\n    exit = PickOneObject (exits)\r\n    // For exits like a teleporter that sends the player to a random place,\r\n    //    allow a script attribute \"npcscript\" that runs when an NPC uses them\r\n    if (HasScript (exit, \"npcscript\")) {\r\n      do (exit, \"npcscript\", QuickParams (\"npc\", npc))\r\n    }\r\n    else {\r\n      npc.parent = exit.to\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAnd a function:\r\n```\r\n<function name=\"CheckDarknessForRoom\" parameters=\"room\" type=\"boolean\">\r\n  if (GetBoolean (room, \"dark\")) {\r\n    // Room is dark, so check if it contains a light source\r\n    objects_to_check = GetDirectChildren (room)\r\n    while (ListCount (objects_to_check) > 0) {\r\n      obj = ListItem (objects_to_check, 0)\r\n      list remove (objects_to_check, obj)\r\n      if (GetBoolean (obj, \"visible\")) {\r\n        if (GetBoolean (obj, \"lightsource\")) {\r\n          if (obj.lightstrength = \"strong\") {\r\n            return (false)\r\n          }\r\n        }\r\n        if (GetBoolean (obj, \"isopen\") or GetBoolean (obj, \"transparent\") or DoesInherit (obj, \"npc_type\") or obj = game.pov) {\r\n          objects_to_check = ListCombine (objects_to_check, GetDirectChildren (obj)\r\n        }\r\n      }\r\n    }\r\n    // We've run out of objects to check and not found a light source, so it's dark\r\n    return (true)\r\n  }\r\n  else {\r\n    return (false)\r\n  }\r\n</function>\r\n```\r\n</details>\r\n\r\nAnd in the course of typing that out, I had to cut out a few bits to make sure it doesn't get stupidly large.\r\nThe version in my head also has support for:\r\n* NPCs who have darkvision\r\n* NPCs who check a room's darkness before entering, so they don't wander into a dark room unless they have a torch\r\n* NPCs who will turn on a flashlight in their inventory if the room is dark\r\n    * With the option of doing so right away, or taking a turn to switch the light on\r\n* NPCs who, finding themselves in a dark room, will look for an objects with an `is_lightswitch` attribute\r\n* NPCs who are able to unlock doors\r\n    * With the option of either going straight through, or taking a turn to unlock the door\r\n    * With an optional % chance of forgetting to lock it again after they passed through\r\n* NPCs being less likely to leave a room the way they entered\r\n* NPCs who can wait instead of moving",
      "EditableFormat": "markdown",
      "HTML": "<p>The simple solution is very short. A solution that works in all the peculiar cases that might crop up is pretty complex. And the most obvious way to write it turns out to be quite ineffecient.</p>\n<p>I've written a script that deals with most of the things I mentioned above, but still could be expanded on. Just in case you're interested to see how huge and unwieldy a simple turnscript can get:</p>\n<details><summary>Way too much code</summary>\nIf I wanted to make it work with all the issues above, it'd probably end up with something like this:\n<pre><code>// Counting the exits in a room involves looping over all exits, which is quite slow, and checking for darkness is slower.\n// So to reduce server load, I make a list of rooms with NPCs in, and then loop over exits checking \"Is there an NPC here?\"\nnpcs_to_move = NewObjectList()\nrooms_with_npcs = NewDictionary()\nforeach (obj, AllObjects()) {\n  if (GetBoolean (obj, \"wandering\")) {\n    list add (npcs_to_move, obj)\n    if (not DictionaryContains (rooms_with_npcs, obj.parent.name)) {\n      dictionary add (rooms_with_npcs, obj.parent.name, NewObjectList())\n    }\n  }\n}\n\n// Then, because checking for darkness is slow, we do it once per room\n// Note that we can't use the default `CheckDarkness()` because that only works if the player is in the room\nforeach (roomname, rooms_with_npcs) {\n  room = GetObject (roomname)\n  room.isdark = CheckDarknessForRoom (room)\n}\n\n// Find all the valid exits in those rooms:\n//    This is basically what ScopeExitsForRoom() does; but we're checking for multiple rooms at once\n//    and not checking for darkness yet\nforeach (exit, AllExits()) {\n  if (GetBoolean (exit, \"visible\")) {\n    if (not GetBoolean (exit.parent, \"isdark\") and not GetBoolean (exit, \"locked\")) {\n      if (HasObject (exit, \"to\") or HasScript (exit, \"npcscript\")) {\n        if (DictionaryContains (rooms_with_npcs, exit.parent.name)) {\n          list add (DictionaryItem (rooms_with_npcs, exit.parent.name), exit)\n        }\n      }\n    }\n  }\n}\n\n// Finally, look at the NPCs and check which way they can go:\nforeach (npc, npcs_to_move) {\n  exits = DictionaryItem (rooms_with_npcs, npc.parent.name)\n  // Check if there are exits before picking one\n  if (ListCount (exits) &gt; 0) {\n    exit = PickOneObject (exits)\n    // For exits like a teleporter that sends the player to a random place,\n    //    allow a script attribute \"npcscript\" that runs when an NPC uses them\n    if (HasScript (exit, \"npcscript\")) {\n      do (exit, \"npcscript\", QuickParams (\"npc\", npc))\n    }\n    else {\n      npc.parent = exit.to\n    }\n  }\n}\n</code></pre>\n<p>And a function:</p>\n<pre><code>&lt;function name=\"CheckDarknessForRoom\" parameters=\"room\" type=\"boolean\"&gt;\n  if (GetBoolean (room, \"dark\")) {\n    // Room is dark, so check if it contains a light source\n    objects_to_check = GetDirectChildren (room)\n    while (ListCount (objects_to_check) &gt; 0) {\n      obj = ListItem (objects_to_check, 0)\n      list remove (objects_to_check, obj)\n      if (GetBoolean (obj, \"visible\")) {\n        if (GetBoolean (obj, \"lightsource\")) {\n          if (obj.lightstrength = \"strong\") {\n            return (false)\n          }\n        }\n        if (GetBoolean (obj, \"isopen\") or GetBoolean (obj, \"transparent\") or DoesInherit (obj, \"npc_type\") or obj = game.pov) {\n          objects_to_check = ListCombine (objects_to_check, GetDirectChildren (obj)\n        }\n      }\n    }\n    // We've run out of objects to check and not found a light source, so it's dark\n    return (true)\n  }\n  else {\n    return (false)\n  }\n&lt;/function&gt;\n</code></pre>\n</details>\n<p>And in the course of typing that out, I had to cut out a few bits to make sure it doesn't get stupidly large.<br>\nThe version in my head also has support for:</p>\n<ul>\n<li>NPCs who have darkvision</li>\n<li>NPCs who check a room's darkness before entering, so they don't wander into a dark room unless they have a torch</li>\n<li>NPCs who will turn on a flashlight in their inventory if the room is dark\n<ul>\n<li>With the option of doing so right away, or taking a turn to switch the light on</li>\n</ul>\n</li>\n<li>NPCs who, finding themselves in a dark room, will look for an objects with an <code>is_lightswitch</code> attribute</li>\n<li>NPCs who are able to unlock doors\n<ul>\n<li>With the option of either going straight through, or taking a turn to unlock the door</li>\n<li>With an optional % chance of forgetting to lock it again after they passed through</li>\n</ul>\n</li>\n<li>NPCs being less likely to leave a room the way they entered</li>\n<li>NPCs who can wait instead of moving</li>\n</ul>\n\n",
      "PostDate": "2020-04-06T13:47:32.7771757Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b1c3da2d-fe47-4c91-8382-141efe89653e",
      "UserId": 106087,
      "Username": "Nathaniel.Spence",
      "AvatarUrl": "https://secure.gravatar.com/avatar/169dc71280239f2665ee699d08c643b6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank! Your illustration is instructive. I'll file the long bit of code away for future reference. At the moment, I'm working  on a small adventure with the primary aim of finding out how the system works and what it can do - so I know what I'm doing when I come to write something larger that I have in mind. So starting simple and building up complexity only when required is what I'm trying at the moment (starting from a low base of absolutely no coding experience whatsoever...I've improved over the last 2 weeks!).",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank! Your illustration is instructive. I'll file the long bit of code away for future reference. At the moment, I'm working  on a small adventure with the primary aim of finding out how the system works and what it can do - so I know what I'm doing when I come to write something larger that I have in mind. So starting simple and building up complexity only when required is what I'm trying at the moment (starting from a low base of absolutely no coding experience whatsoever...I've improved over the last 2 weeks!).</p>\n\n",
      "PostDate": "2020-04-06T21:11:52.370756Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
