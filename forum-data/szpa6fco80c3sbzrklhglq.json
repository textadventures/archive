{
  "Topic": {
    "TopicId": "szpa6fco80c3sbzrklhglq",
    "ForumId": "10",
    "Title": "How To Do Simple, Turn-Based Combat?",
    "LastUpdated": "2019-01-28T15:13:32.1003258Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "33ed0ad4-2824-491a-aa3b-33941619698c",
      "UserId": 248620,
      "Username": "Chris Blankman",
      "AvatarUrl": "https://i.imgur.com/P1dzPtyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know this is the umpteenth time a post about combat has been made, but I am absolutely failing to absorb any information along the lines of creating a very simplistic combat system with basic attributes. Not having combat alone is the biggest reason why I haven't committed to a project or decided to create anything using Quest 5, despite the fact that it can do virtually everything that I want my game to have. \r\n\r\nPlease note that anything I do that's video game-related is from a point of writing, design, and artistic direction. In no way am I a programmer or coder.\r\n\r\nI am also super bad at asking for help since I can't seem to articulate very well what it is I want. So, forgive me for that. However, here's a list of \"game play qualities\" that I want to have in my game. This is not an RPG, as the game will not have any kind of leveling system. These are some of the things that particularly effect the game's core design:\r\n\r\n- Hit Points/HP\r\n- Guns\r\n- Ammunition (Can be combined to take up less inventory blocks)\r\n- Reload Function/Attribute\r\n- Melee Weapons\r\n- Combat (RNG + Specific weapons affect DMG and CRIT chances)\r\n- Combat Range System (Close/Far)\r\n- Melee Combat (Close)\r\n- Gun Combat (Far)\r\n- Grenades/Explosives (Far)\r\n- Inventory Space (Not influenced by weight/Resident Evil-styled where items take up \"blocks\")\r\n- Wearables (Can be equipped and increase inventory space)\r\n- \"Examine\" Verb/Attribute\r\n- Puzzles/Key Items/Door Codes, etc.\r\n- Enemy/Environmental Loot (ex; Health items, ammo, weapons, etc.)\r\n\r\n\r\nI will write an example of what I'm looking to achieve and, hopefully, someone kind and knowledgeable can guide me in the right direction here:\r\n\r\nExample does not include details or make an accurate reflection of a finalized experience.\r\n\r\n```\r\n>> Inventory\r\n\r\nYou are carrying '5 pistol ammo', '1 ration', and a 'Beretta 92FS'.\r\n\r\nYou have 3 inventory spaces to work with.\r\n\r\n>> Look\r\n\r\nYou can see a 'table', a 'locker', an 'electronic door' on the east end of the room, and an 'electronic door' on the west end of the room.\r\n\r\n>> Look table\r\n\r\nOn the table's surface is a 'piece of paper' and '7 pistol ammo'.\r\n\r\n>> Look paper\r\n\r\nIt's a piece of notebook paper. Looks like there's something written on it.\r\n\r\n>> Take paper\r\n\r\nYou have picked up the 'piece of paper'.\r\n\r\n>> Inventory\r\n\r\nYou are carrying '5 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\r\n\r\nYou have 2 inventory spaces to work with.\r\n\r\n>> Take ammo\r\n\r\nYou pick up '7 pistol ammo'.\r\n\r\n>> Inventory\r\n\r\nYou are carrying '5 pistol ammo', '7 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\r\n\r\nYou have 1 inventory space to work with.\r\n\r\n>> combine pistol ammo\r\n\r\nYou have combined your pistol ammo.\r\n\r\n>> Inventory\r\n\r\nYou are carrying '12 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\r\n\r\nYou have 2 inventory spaces to work with.\r\n\r\n>> Reload\r\n\r\nYou must equip a firearm first!\r\n\r\n>> Equip beretta\r\n\r\nYou ready your reliable Beretta 92FS.\r\n\r\n>> Look beretta\r\n\r\nA good gun. It's loaded with 3 rounds.\r\n\r\n>> Reload\r\n\r\nYou lace up your piece with new rounds, loaded and ready.\r\n\r\n>> Look Beretta\r\n\r\nA good gun. It's loaded with 10 rounds. \r\n\r\n>> Inventory\r\n\r\nYou are carrying '9 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.' \r\n\r\n>> Examine paper\r\n\r\nThe paper reads the code \"0640\". \r\n\r\n>> Look\r\n\r\nYou can see a 'table', a 'locker', an 'electronic door' on the east end of the room, and an 'electronic door' on the west end of the room.\r\n\r\n>> Open locker\r\n\r\nIt's locked, electronically. \r\n\r\n>> Unlock locker\r\n\r\nENTER 4-DIGIT CODE\r\n\r\n>> 0640\r\n\r\nThe locker beeps as the lock releases.\r\n\r\n>> Open locker\r\n\r\nYou open the locker. \r\n\r\nIt houses an 'H&K MP5K-PDW', '20 SMG ammo', and a 'keycard.'\r\n\r\n>> Drop paper\r\n\r\nYou have dropped the 'piece of paper'. \r\n\r\n>> Take mp5\r\n\r\nYou take the 'H&K MP5K-PDW'. [[trigger enemy script]]\r\n\r\nThe 'electronic door' on the east end of the room beeps with an unlock!\r\n\r\nA Hunter appears! He notices you!\r\n\r\nThe Hunter fires at you!\r\n\r\nMISS\r\n\r\nThe Hunter grunts irritatingly.\r\n\r\n>> shoot hunter\r\n\r\nYou fire your 'Beretta 92FS' at the Hunter!\r\n\r\nHIT \r\n\r\nCRITICAL\r\n\r\nThe Hunter slumps for a moment, but doesn't croak just yet.\r\n\r\nThe Hunter fires at you!\r\n\r\nHIT\r\n\r\n20 DMG\r\n\r\n>> shoot hunter\r\n\r\nMISS\r\n\r\nThe Hunter grins, noticing your poor gunplay. \r\n\r\nThe Hunter fires at you!\r\n\r\nMISS\r\n\r\nThe Hunter grits his teeth.\r\n\r\n>> use ration\r\n\r\nYou use your 'ration', regaining 15 HP.\r\n\r\n>> shoot hunter\r\n\r\nHIT\r\n\r\nThe Hunter crashes, his corpse thumping to the floor.\r\n\r\n>> look self\r\n\r\nYou're doing alright. 95 HP.\r\n\r\n>> check hunter\r\n\r\nHe's carrying '3 pistol ammo', and an 'M-61 Frag Grenade'.\r\n```\r\n\r\nSorry for it being overblown, but I wanted it to seem like what an experience would actually look like. If anyone could help me achieve this kind of game, any help would be appreciated. Very greatly appreciated. I've had the idea in my head for a few years now, but the most I can do is write it out this way. If there are any inconsistencies with the provided example, please let me know so I can make it as clean and consistent as possible for the understanding of other users. Thank you.\r\n\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I know this is the umpteenth time a post about combat has been made, but I am absolutely failing to absorb any information along the lines of creating a very simplistic combat system with basic attributes. Not having combat alone is the biggest reason why I haven't committed to a project or decided to create anything using Quest 5, despite the fact that it can do virtually everything that I want my game to have.</p>\n<p>Please note that anything I do that's video game-related is from a point of writing, design, and artistic direction. In no way am I a programmer or coder.</p>\n<p>I am also super bad at asking for help since I can't seem to articulate very well what it is I want. So, forgive me for that. However, here's a list of \"game play qualities\" that I want to have in my game. This is not an RPG, as the game will not have any kind of leveling system. These are some of the things that particularly effect the game's core design:</p>\n<ul>\n<li>Hit Points/HP</li>\n<li>Guns</li>\n<li>Ammunition (Can be combined to take up less inventory blocks)</li>\n<li>Reload Function/Attribute</li>\n<li>Melee Weapons</li>\n<li>Combat (RNG + Specific weapons affect DMG and CRIT chances)</li>\n<li>Combat Range System (Close/Far)</li>\n<li>Melee Combat (Close)</li>\n<li>Gun Combat (Far)</li>\n<li>Grenades/Explosives (Far)</li>\n<li>Inventory Space (Not influenced by weight/Resident Evil-styled where items take up \"blocks\")</li>\n<li>Wearables (Can be equipped and increase inventory space)</li>\n<li>\"Examine\" Verb/Attribute</li>\n<li>Puzzles/Key Items/Door Codes, etc.</li>\n<li>Enemy/Environmental Loot (ex; Health items, ammo, weapons, etc.)</li>\n</ul>\n<p>I will write an example of what I'm looking to achieve and, hopefully, someone kind and knowledgeable can guide me in the right direction here:</p>\n<p>Example does not include details or make an accurate reflection of a finalized experience.</p>\n<pre><code>&gt;&gt; Inventory\n\nYou are carrying '5 pistol ammo', '1 ration', and a 'Beretta 92FS'.\n\nYou have 3 inventory spaces to work with.\n\n&gt;&gt; Look\n\nYou can see a 'table', a 'locker', an 'electronic door' on the east end of the room, and an 'electronic door' on the west end of the room.\n\n&gt;&gt; Look table\n\nOn the table's surface is a 'piece of paper' and '7 pistol ammo'.\n\n&gt;&gt; Look paper\n\nIt's a piece of notebook paper. Looks like there's something written on it.\n\n&gt;&gt; Take paper\n\nYou have picked up the 'piece of paper'.\n\n&gt;&gt; Inventory\n\nYou are carrying '5 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\n\nYou have 2 inventory spaces to work with.\n\n&gt;&gt; Take ammo\n\nYou pick up '7 pistol ammo'.\n\n&gt;&gt; Inventory\n\nYou are carrying '5 pistol ammo', '7 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\n\nYou have 1 inventory space to work with.\n\n&gt;&gt; combine pistol ammo\n\nYou have combined your pistol ammo.\n\n&gt;&gt; Inventory\n\nYou are carrying '12 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.'\n\nYou have 2 inventory spaces to work with.\n\n&gt;&gt; Reload\n\nYou must equip a firearm first!\n\n&gt;&gt; Equip beretta\n\nYou ready your reliable Beretta 92FS.\n\n&gt;&gt; Look beretta\n\nA good gun. It's loaded with 3 rounds.\n\n&gt;&gt; Reload\n\nYou lace up your piece with new rounds, loaded and ready.\n\n&gt;&gt; Look Beretta\n\nA good gun. It's loaded with 10 rounds. \n\n&gt;&gt; Inventory\n\nYou are carrying '9 pistol ammo', '1 ration', a 'Beretta 92FS', and a 'piece of paper.' \n\n&gt;&gt; Examine paper\n\nThe paper reads the code \"0640\". \n\n&gt;&gt; Look\n\nYou can see a 'table', a 'locker', an 'electronic door' on the east end of the room, and an 'electronic door' on the west end of the room.\n\n&gt;&gt; Open locker\n\nIt's locked, electronically. \n\n&gt;&gt; Unlock locker\n\nENTER 4-DIGIT CODE\n\n&gt;&gt; 0640\n\nThe locker beeps as the lock releases.\n\n&gt;&gt; Open locker\n\nYou open the locker. \n\nIt houses an 'H&amp;K MP5K-PDW', '20 SMG ammo', and a 'keycard.'\n\n&gt;&gt; Drop paper\n\nYou have dropped the 'piece of paper'. \n\n&gt;&gt; Take mp5\n\nYou take the 'H&amp;K MP5K-PDW'. [[trigger enemy script]]\n\nThe 'electronic door' on the east end of the room beeps with an unlock!\n\nA Hunter appears! He notices you!\n\nThe Hunter fires at you!\n\nMISS\n\nThe Hunter grunts irritatingly.\n\n&gt;&gt; shoot hunter\n\nYou fire your 'Beretta 92FS' at the Hunter!\n\nHIT \n\nCRITICAL\n\nThe Hunter slumps for a moment, but doesn't croak just yet.\n\nThe Hunter fires at you!\n\nHIT\n\n20 DMG\n\n&gt;&gt; shoot hunter\n\nMISS\n\nThe Hunter grins, noticing your poor gunplay. \n\nThe Hunter fires at you!\n\nMISS\n\nThe Hunter grits his teeth.\n\n&gt;&gt; use ration\n\nYou use your 'ration', regaining 15 HP.\n\n&gt;&gt; shoot hunter\n\nHIT\n\nThe Hunter crashes, his corpse thumping to the floor.\n\n&gt;&gt; look self\n\nYou're doing alright. 95 HP.\n\n&gt;&gt; check hunter\n\nHe's carrying '3 pistol ammo', and an 'M-61 Frag Grenade'.\n</code></pre>\n<p>Sorry for it being overblown, but I wanted it to seem like what an experience would actually look like. If anyone could help me achieve this kind of game, any help would be appreciated. Very greatly appreciated. I've had the idea in my head for a few years now, but the most I can do is write it out this way. If there are any inconsistencies with the provided example, please let me know so I can make it as clean and consistent as possible for the understanding of other users. Thank you.</p>\n\n",
      "PostDate": "2019-01-28T15:13:32.1003258Z",
      "LastEditDate": "2019-01-28T15:14:34.8467425Z",
      "link": null
    },
    {
      "PostId": "6892987f-cd4b-475b-bc1b-16f92fb66f87",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nIn no way am I a programmer or coder.\r\n```\r\nThen that's really unfortunate, because to do this you really have to code. At the very least you need the visual-code blocks. There's a ton of different ways to do what you're describing, but you really do need to understand how to give objects Attributes, and how to use Expressions. Remember: Computers are like those little children who always follow your orders, but only to the  letter. It will do EXACTLY what you tell it to do, but not necessarily what you want it to.\r\n\r\nAgain, there's lots of ways to do this, but I'll push you in the direction I would take: You can 'nest' attributes, have them inside each other. For example the 'Object Type' attribute 'CurrentGun' for the player can be set to the Beretta, which has its own attributes Ammo and Damage. So you can have code like:\r\n```\r\nPlayer.OutgoingDamage=Player.CurrentGun.Damage\r\n```\r\nHope this helps.",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>In no way am I a programmer or coder.\n</code></pre>\n<p>Then that's really unfortunate, because to do this you really have to code. At the very least you need the visual-code blocks. There's a ton of different ways to do what you're describing, but you really do need to understand how to give objects Attributes, and how to use Expressions. Remember: Computers are like those little children who always follow your orders, but only to the  letter. It will do EXACTLY what you tell it to do, but not necessarily what you want it to.</p>\n<p>Again, there's lots of ways to do this, but I'll push you in the direction I would take: You can 'nest' attributes, have them inside each other. For example the 'Object Type' attribute 'CurrentGun' for the player can be set to the Beretta, which has its own attributes Ammo and Damage. So you can have code like:</p>\n<pre><code>Player.OutgoingDamage=Player.CurrentGun.Damage\n</code></pre>\n<p>Hope this helps.</p>\n\n",
      "PostDate": "2019-01-28T15:23:28.2899727Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6844279b-ab9d-4273-8cd8-2b3787c15043",
      "UserId": 248620,
      "Username": "Chris Blankman",
      "AvatarUrl": "https://i.imgur.com/P1dzPtyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, thanks. All help is good help, in my opinion.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, thanks. All help is good help, in my opinion.</p>\n\n",
      "PostDate": "2019-01-28T15:42:48.1363916Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d2bfa77a-efe6-49e9-9f8f-609e0aca0e54",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A lot of what you want to do is already built into Quest, so won't be hard to make it work.\r\n\r\nI notice that in your example, the huntyer doesn't shoot at you while you're eating a ration. If he only shoots when you're shooting at him, that will make the code a lot simpler because you can make the \"shoot\" command trigger both attacks. The most complex part of a combat system's code often turns out to be working out whether or not an enemy will attack the player.",
      "EditableFormat": "markdown",
      "HTML": "<p>A lot of what you want to do is already built into Quest, so won't be hard to make it work.</p>\n<p>I notice that in your example, the huntyer doesn't shoot at you while you're eating a ration. If he only shoots when you're shooting at him, that will make the code a lot simpler because you can make the \"shoot\" command trigger both attacks. The most complex part of a combat system's code often turns out to be working out whether or not an enemy will attack the player.</p>\n\n",
      "PostDate": "2019-01-28T17:00:55.2447298Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e61534a6-0423-4798-a1b0-43d45acdd3a5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Writing a transcript of what you are hoping to do is an excellent approach!\r\n\r\nThere is a tutorial that will give you most of what you want here:\r\nhttp://docs.textadventures.co.uk/quest/zombie-apocalypse-1.html\r\n\r\nIf you are using the desktop version, there is a library here, though it is more swords and spells than guns.\r\nhttps://github.com/ThePix/quest/wiki/CombatLib",
      "EditableFormat": "markdown",
      "HTML": "<p>Writing a transcript of what you are hoping to do is an excellent approach!</p>\n<p>There is a tutorial that will give you most of what you want here:<br>\nhttp://docs.textadventures.co.uk/quest/zombie-apocalypse-1.html</p>\n<p>If you are using the desktop version, there is a library here, though it is more swords and spells than guns.<br>\nhttps://github.com/ThePix/quest/wiki/CombatLib</p>\n\n",
      "PostDate": "2019-01-28T17:01:54.4500543Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "08f49112-3403-4b05-845e-ff85ac9abf48",
      "UserId": 248620,
      "Username": "Chris Blankman",
      "AvatarUrl": "https://i.imgur.com/P1dzPtyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel \r\n\r\nYeah, I want to be able to use items without being attacked in between turns. \r\n\r\n@The Pixie \r\n\r\nThanks, I'm not the best at absorbing this stuff, but I want to try anyway. ",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel</p>\n<p>Yeah, I want to be able to use items without being attacked in between turns.</p>\n<p>@The Pixie</p>\n<p>Thanks, I'm not the best at absorbing this stuff, but I want to try anyway.</p>\n\n",
      "PostDate": "2019-02-03T23:31:05.4062625Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3173e5a9-f55e-424b-a328-38ddfc1bd72e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "your combat system seems pretty similar to Fallout 1 and 2 (PC) and/or Parasite Eve 1 (PS1) --- you might want to check out these games, as they might give you some ideas or be helpful for you\r\n\r\nfor the game mechanics/formulas/equations:\r\n\r\n1. if you're able to (good at math, and then with game balancing, too, lol), you can create your own\r\n2. study/use other games' mechanics for ideas for doing your own mechanics\r\n3. directly use other games' mechanics\r\n\r\n-------------\r\n\r\nhere's just  a quick simple example of what the coding/scripting will look like\r\n\r\n(using fallout 1 and 2 games for an example)\r\n\r\n(WiP, as it's going to take awhile, lol, but you got somewhat of the ideas of/with the coding involved and how to do various things, hopefully)\r\n\r\n```\r\n<delegate name=\"combat_delegate\" parameters=\"party_objectlist_parameter;enemy_objectlist_parameter\" />\r\n\r\n<object name=\"combat_object\">\r\n\r\n  <attr name=\"combat_script_attribute\" type=\"combat_delegate\">\r\n  </attr>\r\n\r\n  <targetted_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>body</value>\r\n    <value>head</value>\r\n    <value>eyes</value>\r\n    <value>groin</value>\r\n    <value>armLeft</value>\r\n    <value>armRight</value>\r\n    <value>legLeft</value>\r\n    <value>legRight</value>\r\n\r\n  </targetted_stringlist_attribute\">\r\n\r\n  <actions_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>move</value>\r\n    <value>strike</value>\r\n    <value>shoot</value>\r\n    <value>reload</value>\r\n    <value>item</value>\r\n    <value>equip</value>\r\n    <value>unequip</value>\r\n    <value>inventory</value>\r\n    <value>endTurn</value>\r\n    <value>endCombat</value>\r\n\r\n  </actions_stringlist_attribute>\r\n\r\n  <damage_types_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>normal</value>\r\n    <value>explosive</value>\r\n    <value>fire</value>\r\n    <value>laser</value>\r\n    <value>plasma</value>\r\n    <value>electrical</value>\r\n\r\n  </damage_types_stringlist_attribute>\r\n\r\n</object>\r\n\r\n<object name=\"character_object\">\r\n\r\n  <primary_attribute_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>strength</value>\r\n    <value>perception</value>\r\n    <value>endurance</value>\r\n    <value>charisma</value>\r\n    <value>intelligence</value>\r\n    <value>agility</value>\r\n    <value>luck</value>\r\n\r\n  </primary_attribute_stringlist_attribute>\r\n\r\n  <condition_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>normal</value>\r\n    <value>dead</value>\r\n    <value>blinded</value>\r\n    <value>crippled</value>\r\n    <value>grounded</value>\r\n    <value>poisoned</value>\r\n    <value>radiated</value>\r\n\r\n  </condition_stringlist_attribute>\r\n\r\n  <skills_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>sneak</value>\r\n    <value>lockpick</value>\r\n    <value>steal</value>\r\n    <value>traps</value>\r\n    <value>firstAid</value>\r\n    <value>doctor</value>\r\n    <value>science</value>\r\n    <value>repair</value>\r\n\r\n  </skills_stringlist_attribute>\r\n\r\n</object>\r\n\r\n<type name=\"character_type\">\r\n\r\n  <attr name=\"x_coordinate_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"y_coordinate_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"primary_item_slot_object_attribute\" type=\"object\">unarmed</attr>\r\n  <attr name=\"secondary_item_slot_object_attribute\" type=\"object\">unarmed</attr>\r\n  <attr name=\"armor_slot_object_attribute\" type=\"object\">unarmored</attr>\r\n\r\n  <attr name=\"level_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"experience_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"currency_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"life_string_attribute\" type=\"string\">unknown</attr>\r\n\r\n  <attr name=\"current_life_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"maximum_life_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"minimum_life_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"current_action_points_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"maximum_action_points_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"minimum_action_points_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"sequence_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"healing rate_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"poison_resistance_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"radiation_resistance_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"strength_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"perception_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"endurance_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"charisma_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"intelligence_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"agility_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"luck_integer_attribute\" type=\"int\">0</attr>\r\n\r\n</type>\r\n\r\n<type name=\"action_type\">\r\n\r\n  <attr name=\"action_point_cost\" type=\"int\">0</attr>\r\n\r\n</type>\r\n\r\n<type name=\"item_type\">\r\n</type>\r\n\r\n<type name=\"consumable_type\">\r\n</type>\r\n\r\n<type name=\"weapon_type\">\r\n\r\n  <inherit name=\"action_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"nonprojectile_type\">\r\n\r\n  <inherit name=\"weapon_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"unarmed_type\">\r\n\r\n  <inherit name=\"nonprojectile_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"punch_type\">\r\n\r\n  <inherit name=\"unarmed_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"kick_type>\r\n\r\n  <inherit name=\"unarmed_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"knuckle_type\">\r\n\r\n  <inherit name=\"unarmed_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"fist_type\">\r\n\r\n  <inherit name=\"unarmed_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"melee_type\">\r\n\r\n  <inherit name=\"nonprojectile_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"projectile_type\">\r\n\r\n  <inherit name=\"weapon_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"throwing_type\">\r\n\r\n    <inherit name=\"projectile_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"firearm_type\">\r\n\r\n  <inherit name=\"projectile_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"gun_type\">\r\n\r\n  <inherit name=\"firearm_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"handgun_type\">\r\n\r\n  <inherit name=\"gun_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"shotgun_type\">\r\n\r\n  <inherit name=\"gun_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"rifle_type\">\r\n\r\n  <inherit name=\"gun_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"assault_rifle_type\">\r\n\r\n  <inherit name=\"gun_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"machine_gun_type\">\r\n\r\n  <inherit name=\"gun_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"thrower_type\">\r\n\r\n  <inherit name=\"firearm_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"launcher_type\">\r\n\r\n  <inherit name=\"firearm_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"armor_type\">\r\n\r\n  <attr name=\"armor_class\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"normal_damage_resistance\" type=\"int\">0</attr>\r\n  <attr name=\"fire_damage_resistance\" type=\"int\">0</attr>\r\n  <attr name=\"laser_damage_resistance\" type=\"int\">0</attr>\r\n  <attr name=\"plasma_damage_resistance\" type=\"int\">0</attr>\r\n  <attr name=\"explosive_damage_resistance\" type=\"int\">0</attr>\r\n  <attr name=\"electrical_damage_resistance\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"normal_damage_threshold\" type=\"int\">0</attr>\r\n  <attr name=\"fire_damage_threshold\" type=\"int\">0</attr>\r\n  <attr name=\"laser_damage_threshold\" type=\"int\">0</attr>\r\n  <attr name=\"plasma_damage_threshold\" type=\"int\">0</attr>\r\n  <attr name=\"explosive_damage_threshold\" type=\"int\">0</attr>\r\n  <attr name=\"electrical_damage_threshold\" type=\"int\">0</attr>\r\n\r\n  <slot_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>armor</value>\r\n\r\n  </slot_stringlist_attribute>\r\n\r\n</type>\r\n\r\n<type name=\"unarmored_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"robe_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"leather_jacket_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"leather_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"metal_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"combat_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"tesla_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"brotherhood_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"power_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n\r\n<type name=\"hardened_power_armor_type\">\r\n\r\n  <inherit name=\"armor_type\" />\r\n\r\n</type>\r\n```\r\n\r\n-------------------\r\n\r\nyou can also look at my old combat code (basic design for turn based combat):\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483\r\n\r\nand my key/legend for all of my abbrevs (warning: I got a lot of mistakes in my code, for example, I got some of my damages of the damage types vs damage type resistances, messed up, argh --- I've learned to NEVER use abbrevs, ever again, lol):\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486\r\n\r\n-----------\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485 (download link of Pertex' refactoring of my code)\r\n\r\nIf you don't want to click the download link, here's Pertex' refactoring of my code (it can be cleaned up a bit more --- as I got some mistakes -- confused up some of my damage types vs damage type resistances, and have some junk code lines still in it to remove or fix up):\r\n\r\n```\r\n    <asl version=\"530\">\r\n      <include ref=\"English.aslx\" />\r\n      <include ref=\"Core.aslx\" />\r\n      <game name=\"Test\">\r\n        <gameid>d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c</gameid>\r\n        <version>1.0</version>\r\n        <pov type=\"object\">player</pov>\r\n        <start type=\"script\">\r\n          cc\r\n        </start>\r\n        <turns type=\"int\">0</turns>\r\n        <statusattributes type=\"stringdictionary\">turns = </statusattributes>\r\n      </game>\r\n      <object name=\"room\">\r\n        <inherit name=\"editor_room\" />\r\n        <object name=\"player\">\r\n          <inherit name=\"defaultplayer\" />\r\n          <inherit name=\"pc\" />\r\n          <cur_hp type=\"int\">999</cur_hp>\r\n          <max_hp type=\"int\">999</max_hp>\r\n          <str type=\"int\">100</str>\r\n          <end type=\"int\">100</end>\r\n          <dex type=\"int\">100</dex>\r\n          <agi type=\"int\">100</agi>\r\n          <spd type=\"int\">100</spd>\r\n          <hc type=\"int\">100</hc>\r\n          <pd type=\"int\">100</pd>\r\n          <pr type=\"int\">100</pr>\r\n        </object>\r\n        <object name=\"orc1\">\r\n          <inherit name=\"editor_object\" />\r\n          <inherit name=\"npc\" />\r\n          <hostile type=\"boolean\">true</hostile>\r\n          <dead type=\"boolean\">false</dead>\r\n          <alias>orc</alias>\r\n          <cur_hp type=\"int\">999</cur_hp>\r\n          <max_hp type=\"int\">999</max_hp>\r\n          <str type=\"int\">25</str>\r\n          <end type=\"int\">25</end>\r\n          <dex type=\"int\">25</dex>\r\n          <agi type=\"int\">25</agi>\r\n          <spd type=\"int\">75</spd>\r\n          <hc type=\"int\">25</hc>\r\n          <pd type=\"int\">25</pd>\r\n          <pr type=\"int\">25</pr>\r\n        </object>\r\n      </object>\r\n      <turnscript name=\"game_turns\">\r\n        <enabled />\r\n        <script>\r\n          sa\r\n          game.turns = game.turns + 1\r\n        </script>\r\n      </turnscript>\r\n      <command name=\"fight\">\r\n        <pattern>fight #text#</pattern>\r\n        <script>\r\n          battle_system (game.pov,text)\r\n        </script>\r\n      </command>\r\n      <type name=\"char\">\r\n        <cur_hp type=\"int\">0</cur_hp>\r\n        <drop type=\"boolean\">false</drop>\r\n        <defending type=\"boolean\">false</defending>\r\n        <max_hp type=\"int\">0</max_hp>\r\n        <str type=\"int\">0</str>\r\n        <end type=\"int\">0</end>\r\n        <dex type=\"int\">0</dex>\r\n        <agi type=\"int\">0</agi>\r\n        <spd type=\"int\">0</spd>\r\n        <hp type=\"int\">0</hp>\r\n        <hc type=\"int\">0</hc>\r\n        <pd type=\"int\">0</pd>\r\n        <pr type=\"int\">0</pr>\r\n      </type>\r\n      <type name=\"pc\">\r\n        <inherit name=\"char\" />\r\n        <statusattributes type=\"stringdictionary\">hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = </statusattributes>\r\n      </type>\r\n      <type name=\"npc\">\r\n        <inherit name=\"char\" />\r\n        <dead type=\"boolean\">false</dead>\r\n        <hostile type=\"boolean\">false</hostile>\r\n        <displayverbs type=\"list\">Look at; Talk; Fight</displayverbs>\r\n      </type>\r\n      <function name=\"cc\">\r\n        msg (\"What is your name?\")\r\n        get input {\r\n          game.pov.alias = result\r\n          msg (\" - \" + game.pov.alias)\r\n          show menu (\"What is your gender?\", split (\"male;female\" , \";\"), false) {\r\n            game.pov.gender = result\r\n            show menu (\"What is your race?\", split (\"human;dwarf;elf\" , \";\"), false) {\r\n              game.pov.race = result\r\n              show menu (\"What is your class?\", split (\"warrior;cleric;mage;thief\" , \";\"), false) {\r\n                game.pov.class = result\r\n                msg (game.pov.alias + \" is a \" + game.pov.gender + \" \" + game.pov.race + \" \" + game.pov.class + \".\")\r\n                wait {\r\n                  ClearScreen\r\n\t\t\t\t  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      </function>\r\n      <function name=\"sa\">\r\n        game.pov.hp = game.pov.cur_hp + \" / \" + game.pov.max_hp\r\n      </function>\r\n      <function name=\"battle_system\" parameters=\"self,text\">\r\n        enemy = GetObject (text)\r\n        if (enemy = null) {\r\n          foreach (obj,AllObjects()) {\r\n            if (obj.alias=text) {\r\n              enemy = obj\r\n            }\r\n          }\r\n        }\r\n        if (enemy = null) {\r\n          msg (\"There is no \" + text + \" here.\")\r\n        }\r\n        else if (not Doesinherit (enemy,\"npc\")) {\r\n          msg (\"You can not battle that!\")\r\n        }\r\n        else if (not npc_reachable (enemy)) {\r\n          msg (\"There is no \" + enemy.alias + \" in your vicinity.\")\r\n        }\r\n        else if (GetBoolean (enemy,\"dead\") = true) {\r\n          msg (enemy.alias + \" is already dead.\")\r\n        }\r\n        else if (GetBoolean (enemy,\"hostile\") = false) {\r\n          msg (enemy.alias + \" is not hostile.\")\r\n        }\r\n        else {\r\n\t\t\tbattle_sequence (self,enemy)\r\n    \t} \r\n\r\n      </function>\r\n      <function name=\"battle_sequence\" parameters=\"self,enemy\"><![CDATA[\r\n\t\tif (enemy.dead = false) {\r\n\t\t\tplayerfirst=false\r\n\t\t\tif (GetInt (self,\"spd\") > GetInt (enemy,\"spd\")) {\r\n\t\t\t\tplayerfirst=true\r\n\t\t\t} else if (GetInt (self,\"spd\") = GetInt (enemy,\"spd\") and RandomChance (50)) {\r\n\t\t\t\tplayerfirst=true\r\n\t\t\t}   \t\t  \r\n\t\t\t\r\n\t\t\tif (playerfirst) {\r\n\t\t\t   msg (\"You get to go first for this round\")\r\n\t\t\t   self_battle_turn (self,enemy) \r\n\t\t\t   on ready {\r\n\t\t\t\t if (not enemy.dead){\r\n\t\t\t\t   enemy_battle_turn (self,enemy) \r\n\t\t\t\t }\r\n\t\t\t   }\r\n\t\t\t} else {\r\n\t\t\t   msg (enemy.alias + \" gets to go first for this round.\")\r\n\t\t\t\tenemy_battle_turn (self,enemy) \r\n\t\t\t\tmsg (\"It is now your turn.\")\r\n\t\t\t\tself_battle_turn (self,enemy) \r\n\t\t\t}\r\n\t\t\ton ready {\r\n\t\t\t\tmsg (\"The round has ended.\")\r\n\t\t\t\tmsg(\"\")  \r\n\t\t\t\tbattle_sequence (self,enemy)\t\r\n\t\t\t}\t\r\n        } \telse { \r\n\t\t\t\tmsg (\"The battle is over.\")\r\n        }\r\n      ]]></function>\r\n      <function name=\"self_battle_turn\" parameters=\"self,enemy\"><![CDATA[\r\n\t\tmsg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n        msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n        wait {\r\n          show menu (\"What is your battle choice?\", split (\"Attack;Defend;Cast;Item;Run\", \";\"), false) {\r\n            switch (result) {\r\n              case (\"Attack\") {\r\n                fourth_value = false\r\n                if (RandomChance (GetInt (enemy,\"agi\") - GetInt (self,\"spd\")) = true) {\r\n                  msg (enemy.alias + \"evaded your attack!\")\r\n                  fourth_value = true\r\n                }\r\n                else if (RandomChance (GetInt (enemy,\"Dex\") - GetInt (self,\"agi\")) = true) {\r\n                  msg (enemy.alias + \"parried your attack!\")\r\n                  fourth_value = true\r\n                }\r\n                else if (RandomChance (GetInt (enemy,\"agi\") - GetInt (self,\"dex\")) = true) {\r\n                  msg (enemy.alias + \"blocked your attack!\")\r\n                  fourth_value = true\r\n                }\r\n                else if (RandomChance (GetInt (self,\"dex\") - GetInt (enemy,\"spd\")) = false) {\r\n                  msg (\"Your attack missed \" + enemy.alias +\"!\")\r\n                  fourth_value = true\r\n                }\r\n                else if (RandomChance (GetInt (enemy,\"pr\") - GetInt (self,\"hc\")) = true) {\r\n                  msg (\"Your attack got resisted by \" + enemy.alias +\"!\")\r\n                  fourth_value = true\r\n                }\r\n                else if (fourth_value = false) {\r\n                  if (self.defending = true and enemy.defending = true) {\r\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * 2 * GetInt (self,\"pd\") / 2 + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\r\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n                    self.defending = false\r\n                  }\r\n                  else if (self.defending = true and enemy.defending = false) {\r\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * 2 * GetInt (self,\"pd\") + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\r\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n                    self.defending = false\r\n                  }\r\n                  else if (self.defending = false and enemy.defending = true) {\r\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * GetInt (self,\"pd\") / 2 + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\r\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n                  }\r\n                  else if (self.defending = false and enemy.defending = false) {\r\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * GetInt (self,\"pd\") + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\r\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n                  }\r\n                }\r\n              }\r\n              case (\"Defend\") {\r\n                if (self.defending = false) {\r\n                  self.defending = true\r\n                }\r\n              }\r\n              case (\"Cast\") {\r\n                self.defending = false\r\n              }\r\n              case (\"Item\") {\r\n                self.defending = false\r\n              }\r\n              case (\"Run\") {\r\n                self.defending = false\r\n              }\r\n            }\r\n            if (GetInt (enemy,\"cur_hp\") > 0) {\r\n\t\t\t  if ( RandomChance (GetInt (self,\"spd\") - GetInt (enemy,\"spd\"))= true) {\r\n                msg (\"You get an extra battle turn!\")\r\n                self_battle_turn (self,enemy)\r\n              }\r\n              else {\r\n                msg (\"Your battle turn is over.\")\r\n              }\r\n            }\r\n            else if (GetInt (enemy,\"cur_hp\") <= 0) {\r\n              msg (enemy.alias + \" is dead.\")\r\n              msg (\"You have won the battle!\")\r\n              enemy.defending = false\r\n              enemy.dead = true\r\n              }\r\n\r\n          }\r\n        }\r\n      ]]></function>\r\n      <function name=\"enemy_battle_turn\" parameters=\"self,enemy\"><![CDATA[\r\n        msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n        msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\r\n        result = GetRandomInt (1,3)\r\n        switch (result) {\r\n          case (1) {\r\n            sixth_value = false\r\n            if (RandomChance (GetInt (self,\"agi\") - GetInt (enemy,\"spd\")) = true) {\r\n              msg (\"You have evaded the attack!\")\r\n              sixth_value = true\r\n            }\r\n            else if (RandomChance (GetInt (self,\"dex\") - GetInt (enemy,\"agi\")) = true) {\r\n              msg (\"You have parried the attack!\")\r\n              sixth_value = true\r\n            }\r\n            else if (RandomChance (GetInt (self,\"agi\") - GetInt (enemy,\"dex\")) = true) {\r\n              msg (\"You have blocked the attack!\")\r\n              sixth_value = true\r\n            }\r\n            else if (RandomChance (GetInt (enemy,\"dex\") - GetInt (self,\"spd\")) = false) {\r\n              msg (enemy.alias +\"'s attack missed!\")\r\n              sixth_value = true\r\n            }\r\n            else if (RandomChance (GetInt (self,\"pr\") - GetInt (enemy,\"hc\")) = true) {\r\n              msg (\"You resisted the attack!\")\r\n              sixth_value = true\r\n            }\r\n            else if (sixth_value = false) {\r\n              if (enemy.defending = true and self.defending = true) {\r\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,\"pd\") / 2 + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\r\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n                enemy.defending = false\r\n              }\r\n              else if (enemy.defending = true and self.defending = false) {\r\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,\"pd\") + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\r\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n                enemy.defending = false\r\n              }\r\n              else if (enemy.defending = false and self.defending = true) {\r\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * GetInt (enemy,\"pd\") / 2 + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\r\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n              }\r\n              else if (enemy.defending = false and self.defending = false) {\r\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * GetInt (enemy,\"pd\") + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\r\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\r\n              }\r\n            }\r\n          }\r\n          case (2) {\r\n            if (enemy.defending = false) {\r\n              msg (enemy.alias + \" has choosen to defend itself.\")\r\n              enemy.defending = true\r\n            }\r\n          }\r\n          case (3) {\r\n            enemy.defending = false\r\n            msg (\"Cast\")\r\n          }\r\n        }\r\n        if (GetInt (self,\"cur_hp\") > 0) {\r\n          if (RandomChance (GetInt (enemy,\"spd\") - GetInt (self,\"spd\")) = true) {\r\n            msg (enemy.alias + \" gets an extra battle turn!\")\r\n            wait {\r\n              enemy_battle_turn (self,enemy)\r\n            }\r\n          }\r\n          else {\r\n            msg (enemy.alias + \" 's battle turn is over.\")\r\n          }\r\n        }\r\n        else if (GetInt (self,\"cur_hp\") <= 0) {\r\n          msg (self.alias + \" has died.\")\r\n          msg (\"GAME OVER\")\r\n          finish\r\n        }\r\n      ]]></function>\r\n      <function name=\"npc_reachable\" parameters=\"object\" type=\"boolean\">\r\n        value = false\r\n        foreach (x,ScopeReachableNotHeld ()) {\r\n          if (x=object) {\r\n            value = true\r\n          }\r\n        }\r\n        return (value)\r\n      </function>\r\n      <function name=\"crit_hit\" parameters=\"object\" type=\"int\">\r\n        if (RandomChance (GetInt (object,\"luck\")) = true) {\r\n          value = 2\r\n        }\r\n        else {\r\n          value = 1\r\n        }\r\n        return (value)\r\n      </function>\r\n    </asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>your combat system seems pretty similar to Fallout 1 and 2 (PC) and/or Parasite Eve 1 (PS1) --- you might want to check out these games, as they might give you some ideas or be helpful for you</p>\n<p>for the game mechanics/formulas/equations:</p>\n<ol>\n<li>if you're able to (good at math, and then with game balancing, too, lol), you can create your own</li>\n<li>study/use other games' mechanics for ideas for doing your own mechanics</li>\n<li>directly use other games' mechanics</li>\n</ol>\n<hr>\n<p>here's just  a quick simple example of what the coding/scripting will look like</p>\n<p>(using fallout 1 and 2 games for an example)</p>\n<p>(WiP, as it's going to take awhile, lol, but you got somewhat of the ideas of/with the coding involved and how to do various things, hopefully)</p>\n<pre><code>&lt;delegate name=\"combat_delegate\" parameters=\"party_objectlist_parameter;enemy_objectlist_parameter\" /&gt;\n\n&lt;object name=\"combat_object\"&gt;\n\n  &lt;attr name=\"combat_script_attribute\" type=\"combat_delegate\"&gt;\n  &lt;/attr&gt;\n\n  &lt;targetted_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;body&lt;/value&gt;\n    &lt;value&gt;head&lt;/value&gt;\n    &lt;value&gt;eyes&lt;/value&gt;\n    &lt;value&gt;groin&lt;/value&gt;\n    &lt;value&gt;armLeft&lt;/value&gt;\n    &lt;value&gt;armRight&lt;/value&gt;\n    &lt;value&gt;legLeft&lt;/value&gt;\n    &lt;value&gt;legRight&lt;/value&gt;\n\n  &lt;/targetted_stringlist_attribute\"&gt;\n\n  &lt;actions_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;move&lt;/value&gt;\n    &lt;value&gt;strike&lt;/value&gt;\n    &lt;value&gt;shoot&lt;/value&gt;\n    &lt;value&gt;reload&lt;/value&gt;\n    &lt;value&gt;item&lt;/value&gt;\n    &lt;value&gt;equip&lt;/value&gt;\n    &lt;value&gt;unequip&lt;/value&gt;\n    &lt;value&gt;inventory&lt;/value&gt;\n    &lt;value&gt;endTurn&lt;/value&gt;\n    &lt;value&gt;endCombat&lt;/value&gt;\n\n  &lt;/actions_stringlist_attribute&gt;\n\n  &lt;damage_types_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;normal&lt;/value&gt;\n    &lt;value&gt;explosive&lt;/value&gt;\n    &lt;value&gt;fire&lt;/value&gt;\n    &lt;value&gt;laser&lt;/value&gt;\n    &lt;value&gt;plasma&lt;/value&gt;\n    &lt;value&gt;electrical&lt;/value&gt;\n\n  &lt;/damage_types_stringlist_attribute&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"character_object\"&gt;\n\n  &lt;primary_attribute_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;strength&lt;/value&gt;\n    &lt;value&gt;perception&lt;/value&gt;\n    &lt;value&gt;endurance&lt;/value&gt;\n    &lt;value&gt;charisma&lt;/value&gt;\n    &lt;value&gt;intelligence&lt;/value&gt;\n    &lt;value&gt;agility&lt;/value&gt;\n    &lt;value&gt;luck&lt;/value&gt;\n\n  &lt;/primary_attribute_stringlist_attribute&gt;\n\n  &lt;condition_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;normal&lt;/value&gt;\n    &lt;value&gt;dead&lt;/value&gt;\n    &lt;value&gt;blinded&lt;/value&gt;\n    &lt;value&gt;crippled&lt;/value&gt;\n    &lt;value&gt;grounded&lt;/value&gt;\n    &lt;value&gt;poisoned&lt;/value&gt;\n    &lt;value&gt;radiated&lt;/value&gt;\n\n  &lt;/condition_stringlist_attribute&gt;\n\n  &lt;skills_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;sneak&lt;/value&gt;\n    &lt;value&gt;lockpick&lt;/value&gt;\n    &lt;value&gt;steal&lt;/value&gt;\n    &lt;value&gt;traps&lt;/value&gt;\n    &lt;value&gt;firstAid&lt;/value&gt;\n    &lt;value&gt;doctor&lt;/value&gt;\n    &lt;value&gt;science&lt;/value&gt;\n    &lt;value&gt;repair&lt;/value&gt;\n\n  &lt;/skills_stringlist_attribute&gt;\n\n&lt;/object&gt;\n\n&lt;type name=\"character_type\"&gt;\n\n  &lt;attr name=\"x_coordinate_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"y_coordinate_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"primary_item_slot_object_attribute\" type=\"object\"&gt;unarmed&lt;/attr&gt;\n  &lt;attr name=\"secondary_item_slot_object_attribute\" type=\"object\"&gt;unarmed&lt;/attr&gt;\n  &lt;attr name=\"armor_slot_object_attribute\" type=\"object\"&gt;unarmored&lt;/attr&gt;\n\n  &lt;attr name=\"level_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"experience_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"currency_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"life_string_attribute\" type=\"string\"&gt;unknown&lt;/attr&gt;\n\n  &lt;attr name=\"current_life_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"maximum_life_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"minimum_life_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"current_action_points_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"maximum_action_points_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"minimum_action_points_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"sequence_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"healing rate_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"poison_resistance_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"radiation_resistance_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"strength_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"perception_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"endurance_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"charisma_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"intelligence_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"agility_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"luck_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"action_type\"&gt;\n\n  &lt;attr name=\"action_point_cost\" type=\"int\"&gt;0&lt;/attr&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"item_type\"&gt;\n&lt;/type&gt;\n\n&lt;type name=\"consumable_type\"&gt;\n&lt;/type&gt;\n\n&lt;type name=\"weapon_type\"&gt;\n\n  &lt;inherit name=\"action_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"nonprojectile_type\"&gt;\n\n  &lt;inherit name=\"weapon_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"unarmed_type\"&gt;\n\n  &lt;inherit name=\"nonprojectile_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"punch_type\"&gt;\n\n  &lt;inherit name=\"unarmed_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"kick_type&gt;\n\n  &lt;inherit name=\"unarmed_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"knuckle_type\"&gt;\n\n  &lt;inherit name=\"unarmed_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"fist_type\"&gt;\n\n  &lt;inherit name=\"unarmed_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"melee_type\"&gt;\n\n  &lt;inherit name=\"nonprojectile_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"projectile_type\"&gt;\n\n  &lt;inherit name=\"weapon_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"throwing_type\"&gt;\n\n    &lt;inherit name=\"projectile_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"firearm_type\"&gt;\n\n  &lt;inherit name=\"projectile_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"gun_type\"&gt;\n\n  &lt;inherit name=\"firearm_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"handgun_type\"&gt;\n\n  &lt;inherit name=\"gun_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"shotgun_type\"&gt;\n\n  &lt;inherit name=\"gun_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"rifle_type\"&gt;\n\n  &lt;inherit name=\"gun_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"assault_rifle_type\"&gt;\n\n  &lt;inherit name=\"gun_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"machine_gun_type\"&gt;\n\n  &lt;inherit name=\"gun_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"thrower_type\"&gt;\n\n  &lt;inherit name=\"firearm_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"launcher_type\"&gt;\n\n  &lt;inherit name=\"firearm_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"armor_type\"&gt;\n\n  &lt;attr name=\"armor_class\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"normal_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"fire_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"laser_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"plasma_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"explosive_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"electrical_damage_resistance\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"normal_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"fire_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"laser_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"plasma_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"explosive_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"electrical_damage_threshold\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;slot_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;armor&lt;/value&gt;\n\n  &lt;/slot_stringlist_attribute&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"unarmored_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"robe_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"leather_jacket_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"leather_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"metal_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"combat_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"tesla_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"brotherhood_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"power_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n\n&lt;type name=\"hardened_power_armor_type\"&gt;\n\n  &lt;inherit name=\"armor_type\" /&gt;\n\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>you can also look at my old combat code (basic design for turn based combat):</p>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483</p>\n<p>and my key/legend for all of my abbrevs (warning: I got a lot of mistakes in my code, for example, I got some of my damages of the damage types vs damage type resistances, messed up, argh --- I've learned to NEVER use abbrevs, ever again, lol):</p>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486</p>\n<hr>\n<p>https://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485 (download link of Pertex' refactoring of my code)</p>\n<p>If you don't want to click the download link, here's Pertex' refactoring of my code (it can be cleaned up a bit more --- as I got some mistakes -- confused up some of my damage types vs damage type resistances, and have some junk code lines still in it to remove or fix up):</p>\n<pre><code>    &lt;asl version=\"530\"&gt;\n      &lt;include ref=\"English.aslx\" /&gt;\n      &lt;include ref=\"Core.aslx\" /&gt;\n      &lt;game name=\"Test\"&gt;\n        &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n        &lt;version&gt;1.0&lt;/version&gt;\n        &lt;pov type=\"object\"&gt;player&lt;/pov&gt;\n        &lt;start type=\"script\"&gt;\n          cc\n        &lt;/start&gt;\n        &lt;turns type=\"int\"&gt;0&lt;/turns&gt;\n        &lt;statusattributes type=\"stringdictionary\"&gt;turns = &lt;/statusattributes&gt;\n      &lt;/game&gt;\n      &lt;object name=\"room\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;object name=\"player\"&gt;\n          &lt;inherit name=\"defaultplayer\" /&gt;\n          &lt;inherit name=\"pc\" /&gt;\n          &lt;cur_hp type=\"int\"&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=\"int\"&gt;999&lt;/max_hp&gt;\n          &lt;str type=\"int\"&gt;100&lt;/str&gt;\n          &lt;end type=\"int\"&gt;100&lt;/end&gt;\n          &lt;dex type=\"int\"&gt;100&lt;/dex&gt;\n          &lt;agi type=\"int\"&gt;100&lt;/agi&gt;\n          &lt;spd type=\"int\"&gt;100&lt;/spd&gt;\n          &lt;hc type=\"int\"&gt;100&lt;/hc&gt;\n          &lt;pd type=\"int\"&gt;100&lt;/pd&gt;\n          &lt;pr type=\"int\"&gt;100&lt;/pr&gt;\n        &lt;/object&gt;\n        &lt;object name=\"orc1\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n          &lt;inherit name=\"npc\" /&gt;\n          &lt;hostile type=\"boolean\"&gt;true&lt;/hostile&gt;\n          &lt;dead type=\"boolean\"&gt;false&lt;/dead&gt;\n          &lt;alias&gt;orc&lt;/alias&gt;\n          &lt;cur_hp type=\"int\"&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=\"int\"&gt;999&lt;/max_hp&gt;\n          &lt;str type=\"int\"&gt;25&lt;/str&gt;\n          &lt;end type=\"int\"&gt;25&lt;/end&gt;\n          &lt;dex type=\"int\"&gt;25&lt;/dex&gt;\n          &lt;agi type=\"int\"&gt;25&lt;/agi&gt;\n          &lt;spd type=\"int\"&gt;75&lt;/spd&gt;\n          &lt;hc type=\"int\"&gt;25&lt;/hc&gt;\n          &lt;pd type=\"int\"&gt;25&lt;/pd&gt;\n          &lt;pr type=\"int\"&gt;25&lt;/pr&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;turnscript name=\"game_turns\"&gt;\n        &lt;enabled /&gt;\n        &lt;script&gt;\n          sa\n          game.turns = game.turns + 1\n        &lt;/script&gt;\n      &lt;/turnscript&gt;\n      &lt;command name=\"fight\"&gt;\n        &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n        &lt;script&gt;\n          battle_system (game.pov,text)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;type name=\"char\"&gt;\n        &lt;cur_hp type=\"int\"&gt;0&lt;/cur_hp&gt;\n        &lt;drop type=\"boolean\"&gt;false&lt;/drop&gt;\n        &lt;defending type=\"boolean\"&gt;false&lt;/defending&gt;\n        &lt;max_hp type=\"int\"&gt;0&lt;/max_hp&gt;\n        &lt;str type=\"int\"&gt;0&lt;/str&gt;\n        &lt;end type=\"int\"&gt;0&lt;/end&gt;\n        &lt;dex type=\"int\"&gt;0&lt;/dex&gt;\n        &lt;agi type=\"int\"&gt;0&lt;/agi&gt;\n        &lt;spd type=\"int\"&gt;0&lt;/spd&gt;\n        &lt;hp type=\"int\"&gt;0&lt;/hp&gt;\n        &lt;hc type=\"int\"&gt;0&lt;/hc&gt;\n        &lt;pd type=\"int\"&gt;0&lt;/pd&gt;\n        &lt;pr type=\"int\"&gt;0&lt;/pr&gt;\n      &lt;/type&gt;\n      &lt;type name=\"pc\"&gt;\n        &lt;inherit name=\"char\" /&gt;\n        &lt;statusattributes type=\"stringdictionary\"&gt;hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = &lt;/statusattributes&gt;\n      &lt;/type&gt;\n      &lt;type name=\"npc\"&gt;\n        &lt;inherit name=\"char\" /&gt;\n        &lt;dead type=\"boolean\"&gt;false&lt;/dead&gt;\n        &lt;hostile type=\"boolean\"&gt;false&lt;/hostile&gt;\n        &lt;displayverbs type=\"list\"&gt;Look at; Talk; Fight&lt;/displayverbs&gt;\n      &lt;/type&gt;\n      &lt;function name=\"cc\"&gt;\n        msg (\"What is your name?\")\n        get input {\n          game.pov.alias = result\n          msg (\" - \" + game.pov.alias)\n          show menu (\"What is your gender?\", split (\"male;female\" , \";\"), false) {\n            game.pov.gender = result\n            show menu (\"What is your race?\", split (\"human;dwarf;elf\" , \";\"), false) {\n              game.pov.race = result\n              show menu (\"What is your class?\", split (\"warrior;cleric;mage;thief\" , \";\"), false) {\n                game.pov.class = result\n                msg (game.pov.alias + \" is a \" + game.pov.gender + \" \" + game.pov.race + \" \" + game.pov.class + \".\")\n                wait {\n                  ClearScreen\n\t\t\t\t  \n                }\n              }\n            }\n          }\n        }\n      &lt;/function&gt;\n      &lt;function name=\"sa\"&gt;\n        game.pov.hp = game.pov.cur_hp + \" / \" + game.pov.max_hp\n      &lt;/function&gt;\n      &lt;function name=\"battle_system\" parameters=\"self,text\"&gt;\n        enemy = GetObject (text)\n        if (enemy = null) {\n          foreach (obj,AllObjects()) {\n            if (obj.alias=text) {\n              enemy = obj\n            }\n          }\n        }\n        if (enemy = null) {\n          msg (\"There is no \" + text + \" here.\")\n        }\n        else if (not Doesinherit (enemy,\"npc\")) {\n          msg (\"You can not battle that!\")\n        }\n        else if (not npc_reachable (enemy)) {\n          msg (\"There is no \" + enemy.alias + \" in your vicinity.\")\n        }\n        else if (GetBoolean (enemy,\"dead\") = true) {\n          msg (enemy.alias + \" is already dead.\")\n        }\n        else if (GetBoolean (enemy,\"hostile\") = false) {\n          msg (enemy.alias + \" is not hostile.\")\n        }\n        else {\n\t\t\tbattle_sequence (self,enemy)\n    \t} \n\n      &lt;/function&gt;\n      &lt;function name=\"battle_sequence\" parameters=\"self,enemy\"&gt;&lt;![CDATA[\n\t\tif (enemy.dead = false) {\n\t\t\tplayerfirst=false\n\t\t\tif (GetInt (self,\"spd\") &gt; GetInt (enemy,\"spd\")) {\n\t\t\t\tplayerfirst=true\n\t\t\t} else if (GetInt (self,\"spd\") = GetInt (enemy,\"spd\") and RandomChance (50)) {\n\t\t\t\tplayerfirst=true\n\t\t\t}   \t\t  \n\t\t\t\n\t\t\tif (playerfirst) {\n\t\t\t   msg (\"You get to go first for this round\")\n\t\t\t   self_battle_turn (self,enemy) \n\t\t\t   on ready {\n\t\t\t\t if (not enemy.dead){\n\t\t\t\t   enemy_battle_turn (self,enemy) \n\t\t\t\t }\n\t\t\t   }\n\t\t\t} else {\n\t\t\t   msg (enemy.alias + \" gets to go first for this round.\")\n\t\t\t\tenemy_battle_turn (self,enemy) \n\t\t\t\tmsg (\"It is now your turn.\")\n\t\t\t\tself_battle_turn (self,enemy) \n\t\t\t}\n\t\t\ton ready {\n\t\t\t\tmsg (\"The round has ended.\")\n\t\t\t\tmsg(\"\")  \n\t\t\t\tbattle_sequence (self,enemy)\t\n\t\t\t}\t\n        } \telse { \n\t\t\t\tmsg (\"The battle is over.\")\n        }\n      ]]&gt;&lt;/function&gt;\n      &lt;function name=\"self_battle_turn\" parameters=\"self,enemy\"&gt;&lt;![CDATA[\n\t\tmsg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n        msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n        wait {\n          show menu (\"What is your battle choice?\", split (\"Attack;Defend;Cast;Item;Run\", \";\"), false) {\n            switch (result) {\n              case (\"Attack\") {\n                fourth_value = false\n                if (RandomChance (GetInt (enemy,\"agi\") - GetInt (self,\"spd\")) = true) {\n                  msg (enemy.alias + \"evaded your attack!\")\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,\"Dex\") - GetInt (self,\"agi\")) = true) {\n                  msg (enemy.alias + \"parried your attack!\")\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,\"agi\") - GetInt (self,\"dex\")) = true) {\n                  msg (enemy.alias + \"blocked your attack!\")\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (self,\"dex\") - GetInt (enemy,\"spd\")) = false) {\n                  msg (\"Your attack missed \" + enemy.alias +\"!\")\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,\"pr\") - GetInt (self,\"hc\")) = true) {\n                  msg (\"Your attack got resisted by \" + enemy.alias +\"!\")\n                  fourth_value = true\n                }\n                else if (fourth_value = false) {\n                  if (self.defending = true and enemy.defending = true) {\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * 2 * GetInt (self,\"pd\") / 2 + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n                    self.defending = false\n                  }\n                  else if (self.defending = true and enemy.defending = false) {\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * 2 * GetInt (self,\"pd\") + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n                    self.defending = false\n                  }\n                  else if (self.defending = false and enemy.defending = true) {\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * GetInt (self,\"pd\") / 2 + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n                  }\n                  else if (self.defending = false and enemy.defending = false) {\n                    enemy.cur_hp = enemy.cur_hp - (crit_hit (self) * GetInt (self,\"pd\") + GetInt (self,\"pd\") * (GetInt (self,\"str\") - GetInt (enemy,\"end\")) / 100)\n                    msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n                  }\n                }\n              }\n              case (\"Defend\") {\n                if (self.defending = false) {\n                  self.defending = true\n                }\n              }\n              case (\"Cast\") {\n                self.defending = false\n              }\n              case (\"Item\") {\n                self.defending = false\n              }\n              case (\"Run\") {\n                self.defending = false\n              }\n            }\n            if (GetInt (enemy,\"cur_hp\") &gt; 0) {\n\t\t\t  if ( RandomChance (GetInt (self,\"spd\") - GetInt (enemy,\"spd\"))= true) {\n                msg (\"You get an extra battle turn!\")\n                self_battle_turn (self,enemy)\n              }\n              else {\n                msg (\"Your battle turn is over.\")\n              }\n            }\n            else if (GetInt (enemy,\"cur_hp\") &lt;= 0) {\n              msg (enemy.alias + \" is dead.\")\n              msg (\"You have won the battle!\")\n              enemy.defending = false\n              enemy.dead = true\n              }\n\n          }\n        }\n      ]]&gt;&lt;/function&gt;\n      &lt;function name=\"enemy_battle_turn\" parameters=\"self,enemy\"&gt;&lt;![CDATA[\n        msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n        msg (enemy.alias + \" has \" + enemy.cur_hp + \" HP left.\")\n        result = GetRandomInt (1,3)\n        switch (result) {\n          case (1) {\n            sixth_value = false\n            if (RandomChance (GetInt (self,\"agi\") - GetInt (enemy,\"spd\")) = true) {\n              msg (\"You have evaded the attack!\")\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,\"dex\") - GetInt (enemy,\"agi\")) = true) {\n              msg (\"You have parried the attack!\")\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,\"agi\") - GetInt (enemy,\"dex\")) = true) {\n              msg (\"You have blocked the attack!\")\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (enemy,\"dex\") - GetInt (self,\"spd\")) = false) {\n              msg (enemy.alias +\"'s attack missed!\")\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,\"pr\") - GetInt (enemy,\"hc\")) = true) {\n              msg (\"You resisted the attack!\")\n              sixth_value = true\n            }\n            else if (sixth_value = false) {\n              if (enemy.defending = true and self.defending = true) {\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,\"pd\") / 2 + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n                enemy.defending = false\n              }\n              else if (enemy.defending = true and self.defending = false) {\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,\"pd\") + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n                enemy.defending = false\n              }\n              else if (enemy.defending = false and self.defending = true) {\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * GetInt (enemy,\"pd\") / 2 + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n              }\n              else if (enemy.defending = false and self.defending = false) {\n                self.cur_hp = self.cur_hp - (crit_hit (enemy) * GetInt (enemy,\"pd\") + GetInt (enemy,\"pd\") * (GetInt (enemy,\"str\") - GetInt (self,\"end\")) / 100)\n                msg (self.alias + \" has \" + self.cur_hp + \" HP left.\")\n              }\n            }\n          }\n          case (2) {\n            if (enemy.defending = false) {\n              msg (enemy.alias + \" has choosen to defend itself.\")\n              enemy.defending = true\n            }\n          }\n          case (3) {\n            enemy.defending = false\n            msg (\"Cast\")\n          }\n        }\n        if (GetInt (self,\"cur_hp\") &gt; 0) {\n          if (RandomChance (GetInt (enemy,\"spd\") - GetInt (self,\"spd\")) = true) {\n            msg (enemy.alias + \" gets an extra battle turn!\")\n            wait {\n              enemy_battle_turn (self,enemy)\n            }\n          }\n          else {\n            msg (enemy.alias + \" 's battle turn is over.\")\n          }\n        }\n        else if (GetInt (self,\"cur_hp\") &lt;= 0) {\n          msg (self.alias + \" has died.\")\n          msg (\"GAME OVER\")\n          finish\n        }\n      ]]&gt;&lt;/function&gt;\n      &lt;function name=\"npc_reachable\" parameters=\"object\" type=\"boolean\"&gt;\n        value = false\n        foreach (x,ScopeReachableNotHeld ()) {\n          if (x=object) {\n            value = true\n          }\n        }\n        return (value)\n      &lt;/function&gt;\n      &lt;function name=\"crit_hit\" parameters=\"object\" type=\"int\"&gt;\n        if (RandomChance (GetInt (object,\"luck\")) = true) {\n          value = 2\n        }\n        else {\n          value = 1\n        }\n        return (value)\n      &lt;/function&gt;\n    &lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2019-02-04T08:12:07.9784901Z",
      "LastEditDate": "2019-02-04T08:31:24.626365Z",
      "link": null
    },
    {
      "PostId": "7142d431-4bab-4ce0-b704-abc98695f869",
      "UserId": 248620,
      "Username": "Chris Blankman",
      "AvatarUrl": "https://i.imgur.com/P1dzPtyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan\r\n\r\nHoly cannoli.  I feel that I could properly gauge the usefulness of all of this if I knew a little more about coding. \r\n\r\nThis is amazing. However, I only really want a simplistic system that doesn't involve any kind of limb or stat management other than raw HP. Most of these combat systems all have RPG mechanics in mind (like stats), and I'm not making an RPG. I'm looking to have the bare bones of a turn-based combat system.",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan</p>\n<p>Holy cannoli.  I feel that I could properly gauge the usefulness of all of this if I knew a little more about coding.</p>\n<p>This is amazing. However, I only really want a simplistic system that doesn't involve any kind of limb or stat management other than raw HP. Most of these combat systems all have RPG mechanics in mind (like stats), and I'm not making an RPG. I'm looking to have the bare bones of a turn-based combat system.</p>\n\n",
      "PostDate": "2019-02-04T16:28:57.4948895Z",
      "LastEditDate": "2019-02-04T16:31:42.2143522Z",
      "link": null
    },
    {
      "PostId": "c029ef33-434d-4960-95e0-fcf77c50e9b9",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Something like:\r\n\r\n// players's turn\r\nhit creature...\r\ncreature.HP=creature.HP- damage\r\nif creature.HP<0 {\r\n  msg(\"It falls over dead, you win!\")\r\n}\r\nif alive, creature hit's player\r\nplayer.HP=player.HP-damage\r\nif player dead {\r\n  msg(\"sorry, you died\")\r\n end game\r\n}\r\nelse, goto player's turn\r\n\r\nThe only stat would be hit points, and damage done.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Something like:</p>\n<p>// players's turn<br>\nhit creature...<br>\ncreature.HP=creature.HP- damage<br>\nif creature.HP&lt;0 {<br>\nmsg(\"It falls over dead, you win!\")<br>\n}<br>\nif alive, creature hit's player<br>\nplayer.HP=player.HP-damage<br>\nif player dead {<br>\nmsg(\"sorry, you died\")<br>\nend game<br>\n}<br>\nelse, goto player's turn</p>\n<p>The only stat would be hit points, and damage done.</p>\n\n",
      "PostDate": "2019-02-05T03:36:35.9023521Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3afb32be-f3db-4559-951b-8c562f8f7f94",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here is what I use right now.\r\n\r\n[Simple Combat](https://www.deviantart.com/jjj444555/journal/Random-Code-1-691535053)\r\nIt is from this forum but someone put it all together on deviant. Just copy the parts you want. Each script is labeled and instructions are given.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Here is what I use right now.</p>\n<p><a href=\"https://www.deviantart.com/jjj444555/journal/Random-Code-1-691535053\">Simple Combat</a><br>\nIt is from this forum but someone put it all together on deviant. Just copy the parts you want. Each script is labeled and instructions are given.</p>\n\n",
      "PostDate": "2019-02-05T04:48:46.5979983Z",
      "LastEditDate": "2019-02-06T00:38:41.4624923Z",
      "link": null
    },
    {
      "PostId": "da0e1512-5380-4a55-b5a1-c363ab287575",
      "UserId": 248620,
      "Username": "Chris Blankman",
      "AvatarUrl": "https://i.imgur.com/P1dzPtyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@DarkLizerd \r\n\r\nYes, something exactly like that. I'm a complete beginner when it comes to anything code. How would I copy and paste chunks of code? Like, I don't know or understand where to put them. \r\n\r\n@Forgewright\r\n\r\nLink 404'd, unfortunately. :/",
      "EditableFormat": "markdown",
      "HTML": "<p>@DarkLizerd</p>\n<p>Yes, something exactly like that. I'm a complete beginner when it comes to anything code. How would I copy and paste chunks of code? Like, I don't know or understand where to put them.</p>\n<p>@Forgewright</p>\n<p>Link 404'd, unfortunately. :/</p>\n\n",
      "PostDate": "2019-02-05T17:04:38.088931Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "922549b1-2907-42e2-9715-60ec8f8ee623",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<https://www.deviantart.com/jjj444555/journal/Random-Code-1-691535053>\r\nSorry about that\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p><a href=\"https://www.deviantart.com/jjj444555/journal/Random-Code-1-691535053\">https://www.deviantart.com/jjj444555/journal/Random-Code-1-691535053</a><br>\nSorry about that</p>\n\n",
      "PostDate": "2019-02-06T00:36:52.6603432Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
