{
  "Topic": {
    "TopicId": "b2bawv9--0awjzilpxvwug",
    "ForumId": "10",
    "Title": "Mischief with Exits?",
    "LastUpdated": "2017-02-01T21:04:28.751108Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "faeb073e-0478-43e2-a315-79ef7bfa1513",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm working on my second game, have noticed that you can have exits that lead to objects instead of rooms, does anyone have any good examples of the type of tricks you can pull on the player with this? Or just useful hacks?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm working on my second game, have noticed that you can have exits that lead to objects instead of rooms, does anyone have any good examples of the type of tricks you can pull on the player with this? Or just useful hacks?</p>\n\n",
      "PostDate": "2017-02-01T21:04:28.751108Z",
      "LastEditDate": null
    },
    {
      "PostId": "a9d560e5-8ecd-4a15-9bc4-728e6f6c6275",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could have a box that the player can go inside (though as we established recently, getting it to work so you can see things in and out of the box is a nightmare).",
      "EditableFormat": "markdown",
      "HTML": "<p>You could have a box that the player can go inside (though as we established recently, getting it to work so you can see things in and out of the box is a nightmare).</p>\n\n",
      "PostDate": "2017-02-01T22:33:30.5356865Z",
      "LastEditDate": null
    },
    {
      "PostId": "cca8c102-fee8-49a7-968d-c9fb76e751f2",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think it would be useful in any way.  The concept is a neat one but the mechanics of objects v rooms would quickly get messy I think.  It would be just as easy to create a new room with the same alias as the object you want to be moved into.  Say you have a box object you want to move a player into.  It would be _much_ easier to move a player into a room named 'inside a box' and account for the changes that way than to try and actually work the player properly as inside the object box.\r\n\r\nRemember that the player does not need to be in/on the _actual_ object.  It just has to appear that way.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think it would be useful in any way.  The concept is a neat one but the mechanics of objects v rooms would quickly get messy I think.  It would be just as easy to create a new room with the same alias as the object you want to be moved into.  Say you have a box object you want to move a player into.  It would be <em>much</em> easier to move a player into a room named 'inside a box' and account for the changes that way than to try and actually work the player properly as inside the object box.</p>\n<p>Remember that the player does not need to be in/on the <em>actual</em> object.  It just has to appear that way.</p>\n\n",
      "PostDate": "2017-02-01T23:31:16.7627546Z",
      "LastEditDate": null
    },
    {
      "PostId": "a70e51eb-7f79-4aa1-a698-c66d79915007",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As far as I think I understand... lol...\r\n\r\nAlso note that in terms of coding whatever the type of Object (Room Object, 'non-room' Object, Room+'non-room' Object), it's an 'Object' Element. The different types of Objects, just provide/add different Attributes/coding/features/capabilities/abilities to it.\r\n\r\nIf you know what's needed, you can manually (via scripting) turn a 'non-room' Object into a 'Room' Object, I think.\r\n\r\n--------\r\n\r\njust thought of this... design.... pretty cool/nasty-mean, lol:\r\n\r\n\"an existence-time-flickering Exit\"\r\n\r\nusing a Timer to have an Exit toggle between 'NAME_OF_EXIT.visible=true/false', hehe. Example: the Exit is maybe only visible during/at 9 pm, and you only got 10 seconds to use it, before it becomes not visible again.",
      "EditableFormat": "markdown",
      "HTML": "<p>As far as I think I understand... lol...</p>\n<p>Also note that in terms of coding whatever the type of Object (Room Object, 'non-room' Object, Room+'non-room' Object), it's an 'Object' Element. The different types of Objects, just provide/add different Attributes/coding/features/capabilities/abilities to it.</p>\n<p>If you know what's needed, you can manually (via scripting) turn a 'non-room' Object into a 'Room' Object, I think.</p>\n<hr>\n<p>just thought of this... design.... pretty cool/nasty-mean, lol:</p>\n<p>\"an existence-time-flickering Exit\"</p>\n<p>using a Timer to have an Exit toggle between 'NAME_OF_EXIT.visible=true/false', hehe. Example: the Exit is maybe only visible during/at 9 pm, and you only got 10 seconds to use it, before it becomes not visible again.</p>\n\n",
      "PostDate": "2017-02-01T23:56:11.077427Z",
      "LastEditDate": "2017-02-01T23:59:34.9145963Z"
    },
    {
      "PostId": "b8b517a9-1137-40ca-b539-dc83730f20e9",
      "UserId": 288307,
      "Username": "crystalwizard",
      "AvatarUrl": "http://i.imgur.com/3AxpbN7b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "everything in the game, including the game, is an object remember. A room is just an object that there are some short cuts built in for. For example, when the game moves the player to a room, it knows to display a room description and a list of exits and a list of objects that can be interacted with.\r\n\r\nYou could reinvent the wheel by only making exits to objects, and when moving the player to those objects, code in functions for the game to display descriptions of where they are, what objects they see, what exits there are...\r\n\r\nbut\r\n\r\nthat's already been done for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>everything in the game, including the game, is an object remember. A room is just an object that there are some short cuts built in for. For example, when the game moves the player to a room, it knows to display a room description and a list of exits and a list of objects that can be interacted with.</p>\n<p>You could reinvent the wheel by only making exits to objects, and when moving the player to those objects, code in functions for the game to display descriptions of where they are, what objects they see, what exits there are...</p>\n<p>but</p>\n<p>that's already been done for you.</p>\n\n",
      "PostDate": "2017-02-02T00:28:04.4892934Z",
      "LastEditDate": null
    },
    {
      "PostId": "1e73c0a7-ddbd-49ea-bb4b-0c943bdeeea0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "sorry for putting everything in the code box... but I can't otherwise use the tag arrow symbols in my post... so my apologies for it.\r\n\r\n```\r\nI was jsut talking about the user-level 'Object' Elements, as indeed at the underneath code (programmer-level) of quest, everything (all of the types of Elements and Attributes) is an Instantiated OBJECT/CLASS nested/inherited/whatever within a single instantiated OBJECT/CLASS (the: \"game itself\", the: '<asl>entire game code</asl>' ), but not everyone here is a programmer, and it gets confusing between OOP/OOD/programmer-level 'OBJECTS' (as you see, I use all upper case for this, to try to separate it from...) and the user-level 'Object' Element.\r\n\r\n(also, 'type' is used everywhere and for everythng too in programming... which can get very confusing as well due to it being such a good common/general word --- I really need to get a thesuarus to find alternative words for 'type', lol)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>sorry for putting everything in the code box... but I can't otherwise use the tag arrow symbols in my post... so my apologies for it.</p>\n<pre><code>I was jsut talking about the user-level 'Object' Elements, as indeed at the underneath code (programmer-level) of quest, everything (all of the types of Elements and Attributes) is an Instantiated OBJECT/CLASS nested/inherited/whatever within a single instantiated OBJECT/CLASS (the: \"game itself\", the: '&lt;asl&gt;entire game code&lt;/asl&gt;' ), but not everyone here is a programmer, and it gets confusing between OOP/OOD/programmer-level 'OBJECTS' (as you see, I use all upper case for this, to try to separate it from...) and the user-level 'Object' Element.\n\n(also, 'type' is used everywhere and for everythng too in programming... which can get very confusing as well due to it being such a good common/general word --- I really need to get a thesuarus to find alternative words for 'type', lol)\n</code></pre>\n\n",
      "PostDate": "2017-02-02T00:43:39.6436266Z",
      "LastEditDate": "2017-02-02T00:48:35.4076663Z"
    },
    {
      "PostId": "dc2621a0-9d48-4a97-81db-0c9abde5e2a9",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> everything in the game, including the game, is an object remember. A room is just an object that there are some short cuts built in for. For example, when the game moves the player to a room, it knows to display a room description and a list of exits and a list of objects that can be interacted with.\r\n\r\nIn fact the only difference in rooms and objects is what tabs are displayed in the editor. When you do \"Publish\", Quest strips out the types that differentiates between them, making it tricky to tell if something is a room or an object in game.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>everything in the game, including the game, is an object remember. A room is just an object that there are some short cuts built in for. For example, when the game moves the player to a room, it knows to display a room description and a list of exits and a list of objects that can be interacted with.</p>\n</blockquote>\n<p>In fact the only difference in rooms and objects is what tabs are displayed in the editor. When you do \"Publish\", Quest strips out the types that differentiates between them, making it tricky to tell if something is a room or an object in game.</p>\n\n",
      "PostDate": "2017-02-02T08:01:15.4441216Z",
      "LastEditDate": null
    },
    {
      "PostId": "997eded7-bf0d-4dbb-850d-e713a69833cc",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks all, looks like it's a dead end creatively then. I made a test game and messed around with it for a bit and now understand your point about re-inventing the wheel/rooms. Just for fun I made an exit that went to object 'player', unsurprisingly the game didn't like it!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks all, looks like it's a dead end creatively then. I made a test game and messed around with it for a bit and now understand your point about re-inventing the wheel/rooms. Just for fun I made an exit that went to object 'player', unsurprisingly the game didn't like it!</p>\n\n",
      "PostDate": "2017-02-02T10:51:11.3025763Z",
      "LastEditDate": null
    },
    {
      "PostId": "2541cfb9-5e8c-468f-9dbd-fc49b5941c49",
      "UserId": 288307,
      "Username": "crystalwizard",
      "AvatarUrl": "http://i.imgur.com/3AxpbN7b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The game wouldn't, because player never holds still. You'd have to make player be a vehicle, that is a moving room, or rather... a moving room inside a static room, and then you'd have to code in a way for the game to tell what room the vehicle was in, so that the exit always pointed at the correct thing.\r\n\r\nA caution on vehicles before you go running off to try them:\r\n\r\n1 - when in the vehicle, you have to have a command to look at the room the vehicle is currently in.\r\n2 - when in the vehicle, you to have a different exit command, so that the vehicle, AND YOU are both moved into a new room\r\n........2a - you have to tweak who knows how many master game functions to insure that once the vehicle, with you in it, moves into a new room, you are still INSIDE the vehicle.\r\n3 - this is the same whether your vehicle is a car you ride in or a horse you ride on.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The game wouldn't, because player never holds still. You'd have to make player be a vehicle, that is a moving room, or rather... a moving room inside a static room, and then you'd have to code in a way for the game to tell what room the vehicle was in, so that the exit always pointed at the correct thing.</p>\n<p>A caution on vehicles before you go running off to try them:</p>\n<p>1 - when in the vehicle, you have to have a command to look at the room the vehicle is currently in.<br>\n2 - when in the vehicle, you to have a different exit command, so that the vehicle, AND YOU are both moved into a new room<br>\n........2a - you have to tweak who knows how many master game functions to insure that once the vehicle, with you in it, moves into a new room, you are still INSIDE the vehicle.<br>\n3 - this is the same whether your vehicle is a car you ride in or a horse you ride on.</p>\n\n",
      "PostDate": "2017-02-03T02:36:34.9011746Z",
      "LastEditDate": "2017-02-03T02:38:49.7727874Z"
    },
    {
      "PostId": "c30e1913-2990-49f0-a61f-2f0273ee1fc9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the game (the underneath and.or built-in coding of quest) is currently built around a special built-in 'pov' (point of view) Object Attribute of the 'game' Game Settings Object, which is the currently controlled  Player Object (the default being the 'player' Player Object), and that Player Object must be within a Room Object:\r\n\r\nhttp://docs.textadventures.co.uk/quest/asl_requirements.html\r\n\r\nmaybe Player Objects can be Room Objects (they ARE containers as they can hold Objects, aka as your 'inventory'), or maybe not. So, we'd need someone more knowledgeable to look into or let us know if an Exit can go to a (another non-currently-controlled) Player Object (logically, there's an issue with going inside of yourself, lol --- seems like this may be a code issue too, unless you just didn't set it up right)",
      "EditableFormat": "markdown",
      "HTML": "<p>the game (the underneath and.or built-in coding of quest) is currently built around a special built-in 'pov' (point of view) Object Attribute of the 'game' Game Settings Object, which is the currently controlled  Player Object (the default being the 'player' Player Object), and that Player Object must be within a Room Object:</p>\n<p>http://docs.textadventures.co.uk/quest/asl_requirements.html</p>\n<p>maybe Player Objects can be Room Objects (they ARE containers as they can hold Objects, aka as your 'inventory'), or maybe not. So, we'd need someone more knowledgeable to look into or let us know if an Exit can go to a (another non-currently-controlled) Player Object (logically, there's an issue with going inside of yourself, lol --- seems like this may be a code issue too, unless you just didn't set it up right)</p>\n\n",
      "PostDate": "2017-02-03T06:39:10.2499006Z",
      "LastEditDate": null
    },
    {
      "PostId": "8e7f9554-3aaa-4ba4-acbf-27f3e5b564aa",
      "UserId": 288307,
      "Username": "crystalwizard",
      "AvatarUrl": "http://i.imgur.com/3AxpbN7b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would not want the player object to be anything other than the player, actually. that could be major problems. PLAYER should be unique among objects, have a whole lot of predefined things it can't do as a safeguard, and have a number of predefined things it can do that other objects can't (without a bunch of extra scripting.\r\n\r\nI wasn't suggesting you turn the player into a vehicle, either, if that was misunderstood.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would not want the player object to be anything other than the player, actually. that could be major problems. PLAYER should be unique among objects, have a whole lot of predefined things it can't do as a safeguard, and have a number of predefined things it can do that other objects can't (without a bunch of extra scripting.</p>\n<p>I wasn't suggesting you turn the player into a vehicle, either, if that was misunderstood.</p>\n\n",
      "PostDate": "2017-02-03T23:06:28.9393125Z",
      "LastEditDate": null
    }
  ]
}
