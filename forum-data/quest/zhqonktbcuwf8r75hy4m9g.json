{
  "Topic": {
    "TopicId": "zhqonktbcuwf8r75hy4m9g",
    "ForumId": "10",
    "Title": "Wait for typewriter to finish before running script?",
    "LastUpdated": "2016-12-14T01:25:08.4743915Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6cac494a-2055-43ee-8352-b41ac5f54fc4",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know this can be done by manually timing how long it takes the 'typewriter' effect to display its message, and then adding a **run script after number of seconds** script, but is there any way to simply have the game 'wait' for the typewriter to finish before running the next message, so that the timing is exact and won't be affected by game size/internet speeds, etc?",
      "EditableFormat": "markdown",
      "HTML": "<p>I know this can be done by manually timing how long it takes the 'typewriter' effect to display its message, and then adding a <strong>run script after number of seconds</strong> script, but is there any way to simply have the game 'wait' for the typewriter to finish before running the next message, so that the timing is exact and won't be affected by game size/internet speeds, etc?</p>\n\n",
      "PostDate": "2016-12-14T01:25:08.4743915Z",
      "LastEditDate": null
    },
    {
      "PostId": "b76dc24e-e557-4dcc-9a73-90e96bf66c9e",
      "UserId": 267130,
      "Username": "Xilefenko",
      "AvatarUrl": "http://i.imgur.com/jWsgzi4b.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have the same Problem. I have dozens of timers for long scripted narration and that's just more complicated than it should be.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have the same Problem. I have dozens of timers for long scripted narration and that's just more complicated than it should be.</p>\n\n",
      "PostDate": "2016-12-15T11:16:22.5827806Z",
      "LastEditDate": "2016-12-15T11:16:43.3436008Z"
    },
    {
      "PostId": "5c2b0e1c-3f25-436a-ad42-62f3b7eb64fe",
      "UserId": 32920,
      "Username": "Father",
      "AvatarUrl": "http://i.imgur.com/ogRXH9lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I suppose you could add an 'await key press ' script . The player could continue after the typewriter stops. I do think it would be better if typewriter stopped the action until it finishes.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I suppose you could add an 'await key press ' script . The player could continue after the typewriter stops. I do think it would be better if typewriter stopped the action until it finishes.</p>\n\n",
      "PostDate": "2016-12-15T11:50:11.1054713Z",
      "LastEditDate": null
    },
    {
      "PostId": "454f7b1c-ee30-4555-b43b-d07edb84725b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No. The text should appear at a predictable speed, so it should be predicable. It does it all on the PC, so once it starts, internet speed will not be an issue. Rather than timing it, you can calculate it (`LengthOf (text) * speed / 1000), but  I must admit, when I tried it that was not very accurate.\r\n\r\nIf you just want to add a second paragraph, you should be able to do it as one long string, with `<br/>` to mark the paragraph break.",
      "EditableFormat": "markdown",
      "HTML": "<p>No. The text should appear at a predictable speed, so it should be predicable. It does it all on the PC, so once it starts, internet speed will not be an issue. Rather than timing it, you can calculate it (`LengthOf (text) * speed / 1000), but  I must admit, when I tried it that was not very accurate.</p>\n<p>If you just want to add a second paragraph, you should be able to do it as one long string, with <code>&lt;br/&gt;</code> to mark the paragraph break.</p>\n\n",
      "PostDate": "2016-12-15T13:12:13.9650165Z",
      "LastEditDate": null
    },
    {
      "PostId": "8ec2643d-b1e8-4cb0-b78d-4ce70f49a3c8",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I played with the typewriter some years ago. The problem is, that the writing speed decreases with the amount of text. I tried to create a game only typewriting text  but it became so slow that you couldn't play it.\r\nIf you want to get the end of a typewriting text you can extract  the Javascript code from playercore.js and create your own typewriter effect . In playercore.js you can find the function typewriter. If you add the line\r\n```\r\nASLEvent(\"EndScript\",\"1\");\t\r\n```\r\nas shown below it calls the ASLX function EndScript in your game file when the effect ends. But, as said, you must create your own JS file, add the necessary code from playercore.js and enhance it\r\n\r\n```\r\n    $.fn.typewriter = function (speed) {\r\n        this.each(function () {\r\n            var $ele = $(this), str = $ele.text(), progress = 0;\r\n            $ele.text('');\r\n            var timer = setInterval(function () {\r\n                $ele.text(str.substring(0, progress++) + ((progress & 1) && progress < str.length ? '_' : ''));\r\n                if (progress >= str.length) {\r\n\t\t\t\t\tclearInterval(timer);\r\n\t\t\t\t\tASLEvent(\"EndScript\",\"1\");\t\r\n\t\t\t\t}\t\r\n            }, speed);\r\n        });\r\n        return this;\r\n    };\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I played with the typewriter some years ago. The problem is, that the writing speed decreases with the amount of text. I tried to create a game only typewriting text  but it became so slow that you couldn't play it.<br>\nIf you want to get the end of a typewriting text you can extract  the Javascript code from playercore.js and create your own typewriter effect . In playercore.js you can find the function typewriter. If you add the line</p>\n<pre><code>ASLEvent(\"EndScript\",\"1\");\t\n</code></pre>\n<p>as shown below it calls the ASLX function EndScript in your game file when the effect ends. But, as said, you must create your own JS file, add the necessary code from playercore.js and enhance it</p>\n<pre><code>    $.fn.typewriter = function (speed) {\n        this.each(function () {\n            var $ele = $(this), str = $ele.text(), progress = 0;\n            $ele.text('');\n            var timer = setInterval(function () {\n                $ele.text(str.substring(0, progress++) + ((progress &amp; 1) &amp;&amp; progress &lt; str.length ? '_' : ''));\n                if (progress &gt;= str.length) {\n\t\t\t\t\tclearInterval(timer);\n\t\t\t\t\tASLEvent(\"EndScript\",\"1\");\t\n\t\t\t\t}\t\n            }, speed);\n        });\n        return this;\n    };\n</code></pre>\n\n",
      "PostDate": "2016-12-15T13:50:44.3256354Z",
      "LastEditDate": null
    },
    {
      "PostId": "fa982de1-ff87-4039-9d1f-7dd7c7b770d9",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The Pixie\r\nIf you just want to add a second paragraph, you should be able to do it as one long string, with ```<br/>``` to mark the paragraph break.\r\n\r\nAre you saying a ```</br>``` tag will somehow force the second (non typewriter) paragraph to wait for the typewriter to finish before it displays?\r\n\r\nI failed to make it clear that I'm just using the typewriter for the occasional heading, like at the start of a new game day. So something like 'The following day' or 'One week later' would be typed, and then the rest of the normal text pops up after the effect has run its course.\r\n\r\nI did consider the 'wait for keypress' option, but I hide the default 'Continue...' link for this so it may not be clear what's going on.\r\n\r\nLooks like Pertext's JS is the only option, but I don't think the effect is quite that precious to the project and I can easily live without it (or just go with the timer).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The Pixie<br>\nIf you just want to add a second paragraph, you should be able to do it as one long string, with <code>&lt;br/&gt;</code> to mark the paragraph break.</p>\n</blockquote>\n<p>Are you saying a <code>&lt;/br&gt;</code> tag will somehow force the second (non typewriter) paragraph to wait for the typewriter to finish before it displays?</p>\n<p>I failed to make it clear that I'm just using the typewriter for the occasional heading, like at the start of a new game day. So something like 'The following day' or 'One week later' would be typed, and then the rest of the normal text pops up after the effect has run its course.</p>\n<p>I did consider the 'wait for keypress' option, but I hide the default 'Continue...' link for this so it may not be clear what's going on.</p>\n<p>Looks like Pertext's JS is the only option, but I don't think the effect is quite that precious to the project and I can easily live without it (or just go with the timer).</p>\n\n",
      "PostDate": "2016-12-15T16:13:09.1225763Z",
      "LastEditDate": "2016-12-15T16:14:09.4635215Z"
    },
    {
      "PostId": "8129a110-d789-4e94-9e81-ed2b426ddc9e",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm actually interested in the orinigal request too!\r\n\r\nIt would be great to have a function that waits until the last script line is executed to run the one below, since Quest just runs the whole script at once if it doesn't find any _wait_ commands.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm actually interested in the orinigal request too!</p>\n<p>It would be great to have a function that waits until the last script line is executed to run the one below, since Quest just runs the whole script at once if it doesn't find any <em>wait</em> commands.</p>\n\n",
      "PostDate": "2016-12-27T14:08:30.8228294Z",
      "LastEditDate": null
    },
    {
      "PostId": "b1ba255a-7476-4049-9228-05c2f33fa6c8",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In some situations, `on ready` will do that (not with the text effects though).\r\nhttp://docs.textadventures.co.uk/quest/scripts/on_ready.html",
      "EditableFormat": "markdown",
      "HTML": "<p>In some situations, <code>on ready</code> will do that (not with the text effects though).<br>\nhttp://docs.textadventures.co.uk/quest/scripts/on_ready.html</p>\n\n",
      "PostDate": "2016-12-28T09:39:14.3144485Z",
      "LastEditDate": null
    }
  ]
}
