{
  "Topic": {
    "TopicId": "vzy31rfg5kikcjnl6-26zq",
    "ForumId": "10",
    "Title": "Change player icon on map",
    "LastUpdated": "2020-04-30T00:33:47.8418064Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f7c3bd65-2f8b-4719-be0f-fa7155b3e839",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is extremely minor, but I'm curious to know if there is a way to change the yellow circle player icon on the map to, say, a white square with a black border.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is extremely minor, but I'm curious to know if there is a way to change the yellow circle player icon on the map to, say, a white square with a black border.</p>\n\n",
      "PostDate": "2020-04-30T00:33:47.8418064Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5e395216-64f7-4582-a36e-ec667edb583e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Changing the colours is easy enough. If you open the core function `Grid_DrawPlayer` you will see that it looks something like this:\r\n<pre><code>  &lt;function name=\"Grid_DrawPlayerInRoom\" parameters=\"room\">\r\n    if (room.grid_render) {\r\n      Grid_DrawRoom (room, false, game.pov)\r\n\r\n      player_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n      player_y = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0\r\n      player_z = Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")\r\n\r\n      // Grid_DrawPlayer(x, y, z, radius, border, borderWidth, fill)\r\n      <b>JS.Grid_DrawPlayer(player_x, player_y, player_z, 5, \"black\", 2, \"yellow\")</b>\r\n    }\r\n  &lt;/function></code></pre>\r\nIf you're on the desktop editor, you can just change the highlighted line and get a different colour dot.\r\n\r\nChanging the shape will require some javascript editing.\r\n\r\nThe underlying function is `gridApi.drawPlayer`, which looks like this:\r\n```\r\ngridApi.drawPlayer = function(x, y, z, radius, border, borderWidth, fill) {\r\n    activateLayer(z);\r\n    if (!player) {\r\n        player = new Path.Circle(gridPoint(x, y), radius);\r\n        player.strokeColor = border;\r\n        player.strokeWidth = borderWidth;\r\n        player.fillColor = fill;\r\n        player.fillColor = fill;\r\n        allPaths.push(player);\r\n\r\n        var playerPositionAbsolute = player.position - offset;\r\n        var offsetDestinationX = paper.view.center.x - playerPositionAbsolute.x;\r\n        var offsetDestinationY = paper.view.center.y - playerPositionAbsolute.y;\r\n\r\n        offsetDestination = new Point(offsetDestinationX, offsetDestinationY);\r\n        offsetVector = (offsetDestination - offset);\r\n    } else {\r\n        playerDestination = gridPoint(x, y);\r\n        playerVector = (playerDestination - player.position) / 10;\r\n        // move player to the end of the activeLayer so it gets drawn on top\r\n        project.activeLayer.addChild(player);\r\n    }\r\n};\r\n```\r\nThat looks like it would be simple to modify; but functions such as `activateLayer` are local and only accessible from within that frame.\r\n\r\nFor example, if you changed that code then instead of `activateLayer(z);` you would have to do `paper.project.layers[7+z].activate();`. It's more complex than just editing the existing function. And you don't have access to the context variables `allPaths` or `player`.\r\n\r\nSo… you can't easily alter the function `drawPlayer`, because as well as actually drawing the player (which you could do using the methods exposed by Paper itself), you will need to change the variables `playerVector` and `playerDestination`, which aren't exposed as far as I can tell.\r\n\r\nThe best guess I can come up with now is to call the original function, and then render your own dot on top of it. But the original dot would animate with the grid, while yours wouldn't. It seems crazy that the grip API doesn't expose these values; but a lot of the code here seems to have been written specifically to stop players messing around with it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Changing the colours is easy enough. If you open the core function <code>Grid_DrawPlayer</code> you will see that it looks something like this:</p>\n<pre><code>  &lt;function name=\"Grid_DrawPlayerInRoom\" parameters=\"room\"&gt;\n    if (room.grid_render) {\n      Grid_DrawRoom (room, false, game.pov)\n\n      player_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n      player_y = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0\n      player_z = Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\")\n\n      // Grid_DrawPlayer(x, y, z, radius, border, borderWidth, fill)\n      <b>JS.Grid_DrawPlayer(player_x, player_y, player_z, 5, \"black\", 2, \"yellow\")</b>\n    }\n  &lt;/function&gt;</code></pre>\n<p>If you're on the desktop editor, you can just change the highlighted line and get a different colour dot.</p>\n<p>Changing the shape will require some javascript editing.</p>\n<p>The underlying function is <code>gridApi.drawPlayer</code>, which looks like this:</p>\n<pre><code>gridApi.drawPlayer = function(x, y, z, radius, border, borderWidth, fill) {\n    activateLayer(z);\n    if (!player) {\n        player = new Path.Circle(gridPoint(x, y), radius);\n        player.strokeColor = border;\n        player.strokeWidth = borderWidth;\n        player.fillColor = fill;\n        player.fillColor = fill;\n        allPaths.push(player);\n\n        var playerPositionAbsolute = player.position - offset;\n        var offsetDestinationX = paper.view.center.x - playerPositionAbsolute.x;\n        var offsetDestinationY = paper.view.center.y - playerPositionAbsolute.y;\n\n        offsetDestination = new Point(offsetDestinationX, offsetDestinationY);\n        offsetVector = (offsetDestination - offset);\n    } else {\n        playerDestination = gridPoint(x, y);\n        playerVector = (playerDestination - player.position) / 10;\n        // move player to the end of the activeLayer so it gets drawn on top\n        project.activeLayer.addChild(player);\n    }\n};\n</code></pre>\n<p>That looks like it would be simple to modify; but functions such as <code>activateLayer</code> are local and only accessible from within that frame.</p>\n<p>For example, if you changed that code then instead of <code>activateLayer(z);</code> you would have to do <code>paper.project.layers[7+z].activate();</code>. It's more complex than just editing the existing function. And you don't have access to the context variables <code>allPaths</code> or <code>player</code>.</p>\n<p>So… you can't easily alter the function <code>drawPlayer</code>, because as well as actually drawing the player (which you could do using the methods exposed by Paper itself), you will need to change the variables <code>playerVector</code> and <code>playerDestination</code>, which aren't exposed as far as I can tell.</p>\n<p>The best guess I can come up with now is to call the original function, and then render your own dot on top of it. But the original dot would animate with the grid, while yours wouldn't. It seems crazy that the grip API doesn't expose these values; but a lot of the code here seems to have been written specifically to stop players messing around with it.</p>\n\n",
      "PostDate": "2020-04-30T10:05:25.9912637Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2c64a240-8ecb-4020-9c50-40f810b03412",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks! I was able to change the color. I don't mind not being able to easily change the shape, I'm just surprised there's no simple way to do it.\r\n\r\n The reason I asked this was because I'm trying to make an adventure with the look of a retro text adventure, but with the functionalities of a modern quest game (game panes, compass, etc.). I think it's looking pretty good so far:\r\n\r\n<a href=\"https://ibb.co/ZX5VgTJ\"><img src=\"https://i.ibb.co/yPtXksR/Screenshot-2.png\" alt=\"Screenshot-2\" border=\"0\"></a>\r\n\r\nThe only things bothering me about it at this point are the compass and the white arrow bars next to the panes to collapse them (I don't know what they are called).\r\n\r\nSo, follow-up questions:\r\n\r\n1.   Is there a way to customize the look of the compass? I like having the arrows in the boxes like in the classic color scheme for panes (I had to change it to Midnight so the words would be visible against the black background, and when I used ``` text = \"color:white;font-family:'Lucida Console', Monaco, monospace\" ```  in the interface script, it only changed the titles) If there is a way to put images into the compass direction squares, I can make my own arrows as images and put them in there.\r\n\r\n2.   Is there a way to customize the look of, or completely get rid of the white arrow collapsing bars next to the panes? If I remember correctly they are not even there if you used the web editor, but I'm using the desktop editor.\r\n\r\nThanks\r\nRemember - It's okay if I can't as this really doesn't matter all that much, and I'm pretty satisfied with how it looks as it is.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks! I was able to change the color. I don't mind not being able to easily change the shape, I'm just surprised there's no simple way to do it.</p>\n<p>The reason I asked this was because I'm trying to make an adventure with the look of a retro text adventure, but with the functionalities of a modern quest game (game panes, compass, etc.). I think it's looking pretty good so far:</p>\n<p><a href=\"https://ibb.co/ZX5VgTJ\"><img src=\"https://i.ibb.co/yPtXksR/Screenshot-2.png\" alt=\"Screenshot-2\" border=\"0\"></a></p>\n<p>The only things bothering me about it at this point are the compass and the white arrow bars next to the panes to collapse them (I don't know what they are called).</p>\n<p>So, follow-up questions:</p>\n<ol>\n<li>\n<p>Is there a way to customize the look of the compass? I like having the arrows in the boxes like in the classic color scheme for panes (I had to change it to Midnight so the words would be visible against the black background, and when I used <code>text = \"color:white;font-family:'Lucida Console', Monaco, monospace\"</code>  in the interface script, it only changed the titles) If there is a way to put images into the compass direction squares, I can make my own arrows as images and put them in there.</p>\n</li>\n<li>\n<p>Is there a way to customize the look of, or completely get rid of the white arrow collapsing bars next to the panes? If I remember correctly they are not even there if you used the web editor, but I'm using the desktop editor.</p>\n</li>\n</ol>\n<p>Thanks<br>\nRemember - It's okay if I can't as this really doesn't matter all that much, and I'm pretty satisfied with how it looks as it is.</p>\n\n",
      "PostDate": "2020-04-30T16:56:24.7791842Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cad28361-5335-4056-9c4c-4c3d39ab8783",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to customize the look of the compass?\r\n\r\nThere are a bunch of CSS classes you can apply style rules to.\r\n* `.compassbutton` - all buttons\r\n* `#compassTable .ui-button` and `#compassTable .ui-button-disabled` (used to set the colours of active and inactive directions)\r\n* `.ui-icon-arrowthick-1-nw` - the class which applies the icon to the northwest button (similar names for all the others). Up and down are `.ui-icon-triangle-1-n` and `.ui-icon-triangle-1-s`\r\n\r\nTo change a button to a different icon class, you could use:\r\n```\r\nJS.eval(\"$('#cmdCompassNW').button('option', 'icon', 'classname');\")\r\n```\r\nWhere 'classname' is the name of an icon class from <a href=\"https://api.jqueryui.com/theming/icons/\">this list</a>, or a class of your own that you want to use to style the button.\r\n\r\n> Is there a way to customize the look of, or completely get rid of the white arrow collapsing bars next to the panes?\r\n\r\nThat's down to the `.elementList` CSS class; which by default has the style `overflow-y: scroll` applied. You could set `overflow-y` to `auto` (display a scroll bar only if needed).\r\n\r\nYou can also use CSS to change the colour of the scroll bar:\r\n\r\n**In Chromium and related browsers (including Quest desktop player)**\r\n\r\nYou can set the colour, size, etc of the scroll bar using the classes:\r\n* `.elementList::-webkit-scrollbar` - the scrollbar itself\r\n* `.elementList::-webkit-scrollbar-track` - the main part of the scroll bar\r\n* `.elementList::-webkit-scrollbar-button` - the arrows at the top and bottom\r\n* `.elementList::-webkit-scrollbar-thumb` - the bit you drag up and down\r\n* `.elementList::-webkit-scrollbar-track-piece` - the space above and below the thumb\r\n\r\n**In IE, recent versions of Firefox, and latest Chrome**:\r\nYou can apply the `scrollbar-width` and `scrollbar-color` properties to `.elementList`. Note that scrollbar-color takes two colours: first the thumb colour, then the track colour. For example:\r\n```\r\n.elementList {\r\n  scrollbar-color: darkgreen black;\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to customize the look of the compass?</p>\n</blockquote>\n<p>There are a bunch of CSS classes you can apply style rules to.</p>\n<ul>\n<li><code>.compassbutton</code> - all buttons</li>\n<li><code>#compassTable .ui-button</code> and <code>#compassTable .ui-button-disabled</code> (used to set the colours of active and inactive directions)</li>\n<li><code>.ui-icon-arrowthick-1-nw</code> - the class which applies the icon to the northwest button (similar names for all the others). Up and down are <code>.ui-icon-triangle-1-n</code> and <code>.ui-icon-triangle-1-s</code></li>\n</ul>\n<p>To change a button to a different icon class, you could use:</p>\n<pre><code>JS.eval(\"$('#cmdCompassNW').button('option', 'icon', 'classname');\")\n</code></pre>\n<p>Where 'classname' is the name of an icon class from <a href=\"https://api.jqueryui.com/theming/icons/\">this list</a>, or a class of your own that you want to use to style the button.</p>\n<blockquote>\n<p>Is there a way to customize the look of, or completely get rid of the white arrow collapsing bars next to the panes?</p>\n</blockquote>\n<p>That's down to the <code>.elementList</code> CSS class; which by default has the style <code>overflow-y: scroll</code> applied. You could set <code>overflow-y</code> to <code>auto</code> (display a scroll bar only if needed).</p>\n<p>You can also use CSS to change the colour of the scroll bar:</p>\n<p><strong>In Chromium and related browsers (including Quest desktop player)</strong></p>\n<p>You can set the colour, size, etc of the scroll bar using the classes:</p>\n<ul>\n<li><code>.elementList::-webkit-scrollbar</code> - the scrollbar itself</li>\n<li><code>.elementList::-webkit-scrollbar-track</code> - the main part of the scroll bar</li>\n<li><code>.elementList::-webkit-scrollbar-button</code> - the arrows at the top and bottom</li>\n<li><code>.elementList::-webkit-scrollbar-thumb</code> - the bit you drag up and down</li>\n<li><code>.elementList::-webkit-scrollbar-track-piece</code> - the space above and below the thumb</li>\n</ul>\n<p><strong>In IE, recent versions of Firefox, and latest Chrome</strong>:<br>\nYou can apply the <code>scrollbar-width</code> and <code>scrollbar-color</code> properties to <code>.elementList</code>. Note that scrollbar-color takes two colours: first the thumb colour, then the track colour. For example:</p>\n<pre><code>.elementList {\n  scrollbar-color: darkgreen black;\n}\n</code></pre>\n\n",
      "PostDate": "2020-04-30T20:24:11.9244318Z",
      "LastEditDate": "2020-04-30T21:35:29.0655673Z",
      "link": null
    },
    {
      "PostId": "6af1dfc3-9d6d-42cd-b764-1ea0372ba4b7",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks! You're compass explanation worked for me, but I do not fully understand your scrollbar explanation.\r\n> That's down to the ```.elementList``` CSS class; which by default has the style ```overflow-y: scroll``` applied. You could set ```overflow-y``` to ```auto``` (display a scroll bar only if needed).\r\n\r\nI'm sorry, how do I access the ```.elementList``` CSS class so I can edit it? I have no experience with CSS, so I will need you (or anybody) to walk me through how to do this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks! You're compass explanation worked for me, but I do not fully understand your scrollbar explanation.</p>\n<blockquote>\n<p>That's down to the <code>.elementList</code> CSS class; which by default has the style <code>overflow-y: scroll</code> applied. You could set <code>overflow-y</code> to <code>auto</code> (display a scroll bar only if needed).</p>\n</blockquote>\n<p>I'm sorry, how do I access the <code>.elementList</code> CSS class so I can edit it? I have no experience with CSS, so I will need you (or anybody) to walk me through how to do this.</p>\n\n",
      "PostDate": "2020-04-30T21:34:13.0053996Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b915df0-01de-4cc3-b20b-696aee392b49",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There are two ways to apply CSS fules in Quest.\r\n\r\nThe simple one only works with elements that are already on the page. For example:\r\n```\r\nJS.setCss (\".elementList\", \"overflow-y: auto\")\r\n```\r\n\r\nThat works in this case, but there are some cases where it won't.\r\n\r\nThe other is slightly more complex, but also works for visual elements that might be created and destroyed:\r\n```\r\nJS.eval(\"getCSSRule('.elementList').style['overflow-y'] = 'auto';\")\r\n```\r\n\r\nIf you're using either of the JS methods, you will probably need to put them in your UI Initialisation script (on the \"Advanced Scripts\" tab), so that they will run again when loading a saved game.\r\n\r\nThere might be easier ways to do this if you're on the desktop editor; you'd have to ask someone who uses it.",
      "EditableFormat": "markdown",
      "HTML": "<p>There are two ways to apply CSS fules in Quest.</p>\n<p>The simple one only works with elements that are already on the page. For example:</p>\n<pre><code>JS.setCss (\".elementList\", \"overflow-y: auto\")\n</code></pre>\n<p>That works in this case, but there are some cases where it won't.</p>\n<p>The other is slightly more complex, but also works for visual elements that might be created and destroyed:</p>\n<pre><code>JS.eval(\"getCSSRule('.elementList').style['overflow-y'] = 'auto';\")\n</code></pre>\n<p>If you're using either of the JS methods, you will probably need to put them in your UI Initialisation script (on the \"Advanced Scripts\" tab), so that they will run again when loading a saved game.</p>\n<p>There might be easier ways to do this if you're on the desktop editor; you'd have to ask someone who uses it.</p>\n\n",
      "PostDate": "2020-04-30T21:50:58.9727291Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "da5ce891-5b40-42d5-a12b-4bc5b20b27ca",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, that didn't do anything though. I'm not sure we are talking about the same thing. The thing I'm talking about is the white bar with the arrows at the top and bottom that shows up next to the Inventory an Places and Objects pane when there are objects in them. When you click on the arrows it collapses the panes, you can see it in the image I posted. Is this the same thing as the scrollbar you are referring to? The bar I'm talking about doesn't even show up if you use the web editor (at least not automatically)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, that didn't do anything though. I'm not sure we are talking about the same thing. The thing I'm talking about is the white bar with the arrows at the top and bottom that shows up next to the Inventory an Places and Objects pane when there are objects in them. When you click on the arrows it collapses the panes, you can see it in the image I posted. Is this the same thing as the scrollbar you are referring to? The bar I'm talking about doesn't even show up if you use the web editor (at least not automatically)</p>\n\n",
      "PostDate": "2020-04-30T22:46:57.4191933Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b97b690-e90d-4829-a17b-69b8f289271e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, I thought you meant the scroll bars; they caught my attention as the only light elements in that screenshot.\r\n\r\nThe arrows to collapse the panes?\r\nI don't actually see them in your screenshot, but to remove them you would do `JS.eval(\"$('.ui-accordion-header .ui-icon').remove();\")` or `JS.setCss(\".ui-accordion-header .ui-icon\", \"visibility: hidden\")`",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, I thought you meant the scroll bars; they caught my attention as the only light elements in that screenshot.</p>\n<p>The arrows to collapse the panes?<br>\nI don't actually see them in your screenshot, but to remove them you would do <code>JS.eval(\"$('.ui-accordion-header .ui-icon').remove();\")</code> or <code>JS.setCss(\".ui-accordion-header .ui-icon\", \"visibility: hidden\")</code></p>\n\n",
      "PostDate": "2020-04-30T23:49:18.143935Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "22cd63c8-2f0f-4378-83dd-4e1e6664eeda",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks! That worked. Sorry to bother you with even more questions but...\r\n\r\n1.)   Is there a way to change the arrows on the compass to make them white? (they're currently light blue)\r\n\r\n2.)   The arrows seem kind of misaligned. I know that it's always like that, but is there any way to fix it?\r\n\r\n3.)   Can you change the font of the objects under the panes. I used ```text = \"color:white;font-family:'Lucida Console', Monaco, monospace\"``` in the interface script but, as you can see in the screenshot, that only changed the titles.\r\n\r\nThat should be all my questions. Thank You for all your help thus far!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks! That worked. Sorry to bother you with even more questions but...</p>\n<p>1.)   Is there a way to change the arrows on the compass to make them white? (they're currently light blue)</p>\n<p>2.)   The arrows seem kind of misaligned. I know that it's always like that, but is there any way to fix it?</p>\n<p>3.)   Can you change the font of the objects under the panes. I used <code>text = \"color:white;font-family:'Lucida Console', Monaco, monospace\"</code> in the interface script but, as you can see in the screenshot, that only changed the titles.</p>\n<p>That should be all my questions. Thank You for all your help thus far!</p>\n\n",
      "PostDate": "2020-05-01T00:07:50.7435791Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b90f1293-3477-4029-9d74-10224e65e008",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For the alignment, I'd have to play around with it.\r\n\r\nChanging the font, you probably want:\r\n```\r\nJS.eval(\"getCSSRule('.elementList li').style.fontFamily = '\\'Lucida Console\\', Monaco, monospace';\")\r\n```\r\n\r\nIf not, I'll poke it in the morning.",
      "EditableFormat": "markdown",
      "HTML": "<p>For the alignment, I'd have to play around with it.</p>\n<p>Changing the font, you probably want:</p>\n<pre><code>JS.eval(\"getCSSRule('.elementList li').style.fontFamily = '\\'Lucida Console\\', Monaco, monospace';\")\n</code></pre>\n<p>If not, I'll poke it in the morning.</p>\n\n",
      "PostDate": "2020-05-01T00:49:12.0597439Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6cc0efcb-89eb-4275-bd69-e5d51bec4835",
      "UserId": 442719,
      "Username": "Phadion",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I added your code to my Interface Script, but it didn't seem to do anything.\r\n\r\n Thanks again for all the help, I hope I'm not too annoying to work with. Never feel that you have to stay up late to help me because we are in different time zones, I can always wait. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I added your code to my Interface Script, but it didn't seem to do anything.</p>\n<p>Thanks again for all the help, I hope I'm not too annoying to work with. Never feel that you have to stay up late to help me because we are in different time zones, I can always wait.</p>\n\n",
      "PostDate": "2020-05-01T02:39:25.815104Z",
      "LastEditDate": "2020-05-01T02:46:23.4200717Z",
      "link": null
    }
  ]
}
