{
  "Topic": {
    "TopicId": "7rlpc_lo60odqaxlesphxa",
    "ForumId": "10",
    "Title": "[SOLVED] Command pattern #text# means players get stuck in room forever!",
    "LastUpdated": "2021-01-14T15:49:33.0413962Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "0d739b6d-f0ca-4f3c-9749-ff700338b08d",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The code below *********was ok if the player had got the safe excessable and wanted to remain in the room and eventually typed in the correct six digit code. HOWEVER !...If the player has accessed the safe and tries to guess the code, then gives up and wants to leave the room, he cannot. Because typing ANYTHING, even a direction gets a response...\"incorrect code\" or \"the safe is not accessible\" etc.\r\n\r\nHow do I allow the player to leave the room by typing \"south\" or \"s\" when ALL text is controlled by this script #text# ? \r\n\r\nIs there not a #numbers# command structure that only deals with numbers typed and this would allow players to type \"south\" or \"s\" and leave the room easily?\r\n\r\n***************************\r\n\r\nif (GetBoolean(mirror, \"mirrorup\")) {\r\n  if (not IsInt(text)) {\r\n    play sound (\"FFBuzz.wav\", true, false)\r\n    msg (\"You need to type ONLY six numbers!\")\r\n  }\r\n  if (LengthOf(text) < 6) {\r\n    play sound (\"FFBuzz.wav\", true, false)\r\n    msg (\"You need to type six numbers.\")\r\n  }\r\n  if (LengthOf(text) = 6) {\r\n    play sound (\"wrong6.wav\", true, false)\r\n    msg (\"That is not the correct 6 digit code.\")\r\n  }\r\n  else if (GetBoolean(, \"safeopen\")) {\r\n    msg (\"The safe is already open!\")\r\n  }\r\n}\r\nelse if (not GetBoolean(mirror, \"mirrorup\")) {\r\n  msg (\"There is nowhere to type that code at the moment!\")\r\n}\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The code below *********was ok if the player had got the safe excessable and wanted to remain in the room and eventually typed in the correct six digit code. HOWEVER !...If the player has accessed the safe and tries to guess the code, then gives up and wants to leave the room, he cannot. Because typing ANYTHING, even a direction gets a response...\"incorrect code\" or \"the safe is not accessible\" etc.</p>\n<p>How do I allow the player to leave the room by typing \"south\" or \"s\" when ALL text is controlled by this script #text# ?</p>\n<p>Is there not a #numbers# command structure that only deals with numbers typed and this would allow players to type \"south\" or \"s\" and leave the room easily?</p>\n<hr>\n<p>if (GetBoolean(mirror, \"mirrorup\")) {<br>\nif (not IsInt(text)) {<br>\nplay sound (\"FFBuzz.wav\", true, false)<br>\nmsg (\"You need to type ONLY six numbers!\")<br>\n}<br>\nif (LengthOf(text) &lt; 6) {<br>\nplay sound (\"FFBuzz.wav\", true, false)<br>\nmsg (\"You need to type six numbers.\")<br>\n}<br>\nif (LengthOf(text) = 6) {<br>\nplay sound (\"wrong6.wav\", true, false)<br>\nmsg (\"That is not the correct 6 digit code.\")<br>\n}<br>\nelse if (GetBoolean(, \"safeopen\")) {<br>\nmsg (\"The safe is already open!\")<br>\n}<br>\n}<br>\nelse if (not GetBoolean(mirror, \"mirrorup\")) {<br>\nmsg (\"There is nowhere to type that code at the moment!\")<br>\n}</p>\n\n",
      "PostDate": "2021-01-14T15:49:33.0413962Z",
      "LastEditDate": "2021-01-16T21:01:32.6035807Z",
      "link": null
    },
    {
      "PostId": "3a1d4c6e-1703-448c-b64f-6514329993a0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There are a few patterns you could use to make this command work as desired; but I think they're mostly regular expressions. Regular expressions are more powerful than simple patterns, but also harder to understand.\r\n\r\nMy first choice would be `^(?<text>(?<text2>.+))$` - this is effectively the same as `#text#` except that it has a lower priority, so it will only be used if no other command matches the player's input.\r\n\r\nYou could alternatively use `^(?<text>.*\\d.*)$` - which only matches if the player's input has a number in it.\r\n\r\n**Why this works:**\r\nSome Quest commands have the same words in them. For example `use #object#` and `use #object1# on #object2#`.\r\nWhen the player types \"use spanner on machine\", Quest sees two commands that match. It could be `use`, with `#object#` matching the words \"spanner on machine\", or it could `useon`, with `#object1#` being \"spanner\" and `#object2#` being \"machine\".\r\n\r\nTo solve this situation, Quest looks for the *most specific* command. That is, the one with fewest characters mapping onto object names.\r\nSo in this example:\r\nFor the command `useon` (pattern \"use #object1# on #object2#\"), the variable `object1` would be \"spanner\" (7 letters), and `object2` would be \"machine\" (7 characters). This matches 7+7 = 14 characters in variables.\r\nThe command `use` (pattern \"use #object#\") would have the variable `object` being \"spanner on machine\", which is 18 characters.\r\nIt looks to see which number of characters is less. In this case, useon (14) has fewer characters in variables than use (18), so it selects the useon command.\r\n\r\nThis means that you can change which command is chosen by changing their patterns.\r\n\r\nIf the player types \"east\" then the command `go` acts as if its pattern was: `#exit#`. The variable `exit` gets the whole string, \"east\" (4 characters).\r\nYour pattern `#text#` gives the variable `text` the whole string \"east\" (4 characters).\r\nAs these are both 4 characters, the tiebreaker is that the last command checked wins. So user-created commands override built-in ones.\r\nThe alternate pattern `^(?<text>(?<text2>.+))$` matches 2 variables: `text`, which gets the entire string \"east\" (4 characters), and `text2` which also gets the entire string \"east\" (4 characters). That's 8 characters total, so Quest thinks that the `go` command is a closer match.",
      "EditableFormat": "markdown",
      "HTML": "<p>There are a few patterns you could use to make this command work as desired; but I think they're mostly regular expressions. Regular expressions are more powerful than simple patterns, but also harder to understand.</p>\n<p>My first choice would be <code>^(?&lt;text&gt;(?&lt;text2&gt;.+))$</code> - this is effectively the same as <code>#text#</code> except that it has a lower priority, so it will only be used if no other command matches the player's input.</p>\n<p>You could alternatively use <code>^(?&lt;text&gt;.*\\d.*)$</code> - which only matches if the player's input has a number in it.</p>\n<p><strong>Why this works:</strong><br>\nSome Quest commands have the same words in them. For example <code>use #object#</code> and <code>use #object1# on #object2#</code>.<br>\nWhen the player types \"use spanner on machine\", Quest sees two commands that match. It could be <code>use</code>, with <code>#object#</code> matching the words \"spanner on machine\", or it could <code>useon</code>, with <code>#object1#</code> being \"spanner\" and <code>#object2#</code> being \"machine\".</p>\n<p>To solve this situation, Quest looks for the <em>most specific</em> command. That is, the one with fewest characters mapping onto object names.<br>\nSo in this example:<br>\nFor the command <code>useon</code> (pattern \"use #object1# on #object2#\"), the variable <code>object1</code> would be \"spanner\" (7 letters), and <code>object2</code> would be \"machine\" (7 characters). This matches 7+7 = 14 characters in variables.<br>\nThe command <code>use</code> (pattern \"use #object#\") would have the variable <code>object</code> being \"spanner on machine\", which is 18 characters.<br>\nIt looks to see which number of characters is less. In this case, useon (14) has fewer characters in variables than use (18), so it selects the useon command.</p>\n<p>This means that you can change which command is chosen by changing their patterns.</p>\n<p>If the player types \"east\" then the command <code>go</code> acts as if its pattern was: <code>#exit#</code>. The variable <code>exit</code> gets the whole string, \"east\" (4 characters).<br>\nYour pattern <code>#text#</code> gives the variable <code>text</code> the whole string \"east\" (4 characters).<br>\nAs these are both 4 characters, the tiebreaker is that the last command checked wins. So user-created commands override built-in ones.<br>\nThe alternate pattern <code>^(?&lt;text&gt;(?&lt;text2&gt;.+))$</code> matches 2 variables: <code>text</code>, which gets the entire string \"east\" (4 characters), and <code>text2</code> which also gets the entire string \"east\" (4 characters). That's 8 characters total, so Quest thinks that the <code>go</code> command is a closer match.</p>\n\n",
      "PostDate": "2021-01-14T16:37:34.5777537Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4fb5d9e4-65de-4d1c-8499-8afe2c6a42f5",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could you please show me how ^(?<text>.*\\d.*)$ can fit into my current code?\r\n\r\nInstead of Command pattern : #text# do I put in Command patter : n ^(?<text>.*\\d.*)$\r\nAnd would the rest of my code below work ok with this as the command pattern instead of #text# or am I completely off the mark with understanding how to put this in?\r\n\r\nif (GetBoolean(mirror, \"mirrorup\")) {\r\nif (not IsInt(text)) {\r\nplay sound (\"FFBuzz.wav\", true, false)\r\nmsg (\"You need to type ONLY six numbers!\")\r\n}\r\nif (LengthOf(text) < 6) {\r\nplay sound (\"FFBuzz.wav\", true, false)\r\nmsg (\"You need to type six numbers.\")\r\n}\r\nif (LengthOf(text) = 6) {\r\nplay sound (\"wrong6.wav\", true, false)\r\nmsg (\"That is not the correct 6 digit code.\")\r\n}\r\nelse if (GetBoolean(, \"safeopen\")) {\r\nmsg (\"The safe is already open!\")\r\n}\r\n}\r\nelse if (not GetBoolean(mirror, \"mirrorup\")) {\r\nmsg (\"There is nowhere to type that code at the moment!\")\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>Could you please show me how ^(?</p>\n<p>Instead of Command pattern : #text# do I put in Command patter : n ^(?</p>\n<p>if (GetBoolean(mirror, \"mirrorup\")) {<br>\nif (not IsInt(text)) {<br>\nplay sound (\"FFBuzz.wav\", true, false)<br>\nmsg (\"You need to type ONLY six numbers!\")<br>\n}<br>\nif (LengthOf(text) &lt; 6) {<br>\nplay sound (\"FFBuzz.wav\", true, false)<br>\nmsg (\"You need to type six numbers.\")<br>\n}<br>\nif (LengthOf(text) = 6) {<br>\nplay sound (\"wrong6.wav\", true, false)<br>\nmsg (\"That is not the correct 6 digit code.\")<br>\n}<br>\nelse if (GetBoolean(, \"safeopen\")) {<br>\nmsg (\"The safe is already open!\")<br>\n}<br>\n}<br>\nelse if (not GetBoolean(mirror, \"mirrorup\")) {<br>\nmsg (\"There is nowhere to type that code at the moment!\")<br>\n}</p>\n\n",
      "PostDate": "2021-01-14T16:45:24.7902332Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "21640f0f-b8a3-484c-848e-2949161c915d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a drop down on a command, with the options \"Command pattern\" and \"Regular expression\".\r\n\r\nChange the drop down to \"regular expression, and then enter `^(?<text>(?<text2>.+))$` in the pattern box instead of `#text#`.\r\nOr you could use `^(enter *|code *|(?=\\S*\\d\\S*$))+(?<text>.+)$`, or `^(?<text>.*\\d.*)$` in the same way. They all have their advantages and disadvantages.\r\n\r\nIncidentally, when you're pasting code or error messages in a forum post, you can put a backtick (<code>`</code>) before and after it to stop the forum messing it up. If you're pasting multiple lines of code, put a line of 3 backticks above and below it.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a drop down on a command, with the options \"Command pattern\" and \"Regular expression\".</p>\n<p>Change the drop down to \"regular expression, and then enter <code>^(?&lt;text&gt;(?&lt;text2&gt;.+))$</code> in the pattern box instead of <code>#text#</code>.<br>\nOr you could use <code>^(enter *|code *|(?=\\S*\\d\\S*$))+(?&lt;text&gt;.+)$</code>, or <code>^(?&lt;text&gt;.*\\d.*)$</code> in the same way. They all have their advantages and disadvantages.</p>\n<p>Incidentally, when you're pasting code or error messages in a forum post, you can put a backtick (<code>`</code>) before and after it to stop the forum messing it up. If you're pasting multiple lines of code, put a line of 3 backticks above and below it.</p>\n\n",
      "PostDate": "2021-01-14T17:08:20.2907093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a48e7be0-a3b5-4e0c-8963-fedc92a7a51e",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried the \"regular expression\" ^(?<text>(?<text2>.+))$ (and also) ^(?<text>.*\\d.*)$\r\n\r\nBoth don't allow thewrong six digit , under 6 digit or any other digits : Still get usual default \"I dont understand reply\"",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried the \"regular expression\" ^(?</p>\n<p>Both don't allow thewrong six digit , under 6 digit or any other digits : Still get usual default \"I dont understand reply\"</p>\n\n",
      "PostDate": "2021-01-16T17:11:25.9542011Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c00ded8c-81cf-4e1c-b62e-b13d7670a870",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's strange; which expression are you trying?\r\n(to paste it in the forum, put a backtick (<code>`</code>) before and after it, so that the forum doesn't try to treat the named group as HTML)\r\n\r\nI've tested all of them now. It seems that `^(?<text>(?<text2>.+))$` doesn't work in Quest, but I can't figure out why. `^(?<text>.*(?<text2>.))$` seems to be fine.\r\nEdit: a little more digging around in the code reveals that there's been some changes in the parser since last time I tried this. It turns out that it will ignore any command whose parameters are more than one character longer than the command entered. So there needs to be exactly 1 character in `text2` in order to make this trick work now.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's strange; which expression are you trying?<br>\n(to paste it in the forum, put a backtick (<code>`</code>) before and after it, so that the forum doesn't try to treat the named group as HTML)</p>\n<p>I've tested all of them now. It seems that <code>^(?&lt;text&gt;(?&lt;text2&gt;.+))$</code> doesn't work in Quest, but I can't figure out why. <code>^(?&lt;text&gt;.*(?&lt;text2&gt;.))$</code> seems to be fine.<br>\nEdit: a little more digging around in the code reveals that there's been some changes in the parser since last time I tried this. It turns out that it will ignore any command whose parameters are more than one character longer than the command entered. So there needs to be exactly 1 character in <code>text2</code> in order to make this trick work now.</p>\n\n",
      "PostDate": "2021-01-16T17:30:39.2980055Z",
      "LastEditDate": "2021-01-16T17:46:51.7285492Z",
      "link": null
    },
    {
      "PostId": "6ea54004-a9db-4ebc-baff-b10bfdeff463",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Cheers, The code works for text and or numbers. \r\nHowever, Players may leave room, re enter room and the script is still active and therefore a word typed may replay the expected code safe question script and give a reply \"incorrect code\" with a sound. \r\n\r\nThere seems to be no way to stop this script from running forever. It can't be switched off!",
      "EditableFormat": "markdown",
      "HTML": "<p>Cheers, The code works for text and or numbers.<br>\nHowever, Players may leave room, re enter room and the script is still active and therefore a word typed may replay the expected code safe question script and give a reply \"incorrect code\" with a sound.</p>\n<p>There seems to be no way to stop this script from running forever. It can't be switched off!</p>\n\n",
      "PostDate": "2021-01-16T20:03:58.8367912Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ba5a4c8f-9cc3-4a8a-acab-dd28452943ea",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to disable a command permanently, you can destroy it. However, in most circumstances it's easier to just put it in a container. (Global commands have their `parent` attribute set to null. Local commands have the same `parent` as the player. Neither of these can be true if the command is inside an object that the player can't enter.\r\n\r\nYou can move commands around the same way you would any other object; although they aren't on the list of objects in the GUI, so you'll need to use code view to do this, or type the command's name in as an \"expression\".",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to disable a command permanently, you can destroy it. However, in most circumstances it's easier to just put it in a container. (Global commands have their <code>parent</code> attribute set to null. Local commands have the same <code>parent</code> as the player. Neither of these can be true if the command is inside an object that the player can't enter.</p>\n<p>You can move commands around the same way you would any other object; although they aren't on the list of objects in the GUI, so you'll need to use code view to do this, or type the command's name in as an \"expression\".</p>\n\n",
      "PostDate": "2021-01-16T20:23:11.485341Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d58c2c93-d8ab-481e-bac0-220fafd28370",
      "UserId": 195121,
      "Username": "iantommo",
      "AvatarUrl": "https://i.imgur.com/NUcwrIKb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks. I sussed out that I simply had to add an if statement at the very start of the script (if safe has flag safeopen) then give an if statement (if safe does not have flag safeopen) at the very end. \r\n\r\nWonderful satisfaction when achieving a FIX to sometimes the smallest of problems. Took me 1 hr of fiddling and getting my brain working!\r\n\r\nI decided to put in a response of \"I don't understand you....Yet!\" to when players may stumble into accidentally typing random stuff in the room where the safe has not been discovered. I think this will suffice.\r\n\r\nThanks for all your help, I would never have known how to code this the way you explained on my own. CHEERS.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks. I sussed out that I simply had to add an if statement at the very start of the script (if safe has flag safeopen) then give an if statement (if safe does not have flag safeopen) at the very end.</p>\n<p>Wonderful satisfaction when achieving a FIX to sometimes the smallest of problems. Took me 1 hr of fiddling and getting my brain working!</p>\n<p>I decided to put in a response of \"I don't understand you....Yet!\" to when players may stumble into accidentally typing random stuff in the room where the safe has not been discovered. I think this will suffice.</p>\n<p>Thanks for all your help, I would never have known how to code this the way you explained on my own. CHEERS.</p>\n\n",
      "PostDate": "2021-01-16T20:55:53.4924351Z",
      "LastEditDate": "2021-01-16T20:58:18.0253477Z",
      "link": null
    }
  ]
}
