{
  "Topic": {
    "TopicId": "xueq7uvouk2gze1d14mgwa",
    "ForumId": "10",
    "Title": "How to make button combination locks?",
    "LastUpdated": "2018-08-14T21:53:47.4183829Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5c8d8a57-a014-4e54-b595-2c750a8ed666",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've seen it used in a few games and downloaded their code but I can't seem to find an explanation on HOW exactly it works, and I don't want to rip the other games off.\r\nHelp gladly accepted.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've seen it used in a few games and downloaded their code but I can't seem to find an explanation on HOW exactly it works, and I don't want to rip the other games off.<br>\nHelp gladly accepted.</p>\n\n",
      "PostDate": "2018-08-14T21:53:47.4183829Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7e011e48-6817-424d-841b-7b4f738cd261",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can think of a few things you could mean by \"button combination locks\".\r\n\r\nThe first that comes to mind is something I've seen in one of the first Quest games I played, where there are five coloured buttons. The player needs to \"push red button\", \"push green button\", \"push push purple button\", \"push blue button\" in the right order.\r\n\r\nSomething like that?\r\n\r\nI'm assuming that a door (or something) unlocks when you enter the correct sequence.\r\n\r\nIs there any immediate sign of failure if you press the wrong one? Does the lock buzz to let you know you've got it wrong? Or does it only give a signal if your combination is right or wrong after you've pressed all four (or however many) buttons?\r\n\r\nDoes the combination reset so that you can start again immediately when you press a wrong button? Does it reset after yuou've entered an incorrect combination? Or is there a reset button you've got to press before you start again?\r\n\r\nDo you want a screen that shows the combination you've entered so far? Or do the buttons you've already pressed light up so you know which ones you've pressed?\r\n\r\nThere's a few different variations, and I think they'd likely be coded in slightly different ways.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can think of a few things you could mean by \"button combination locks\".</p>\n<p>The first that comes to mind is something I've seen in one of the first Quest games I played, where there are five coloured buttons. The player needs to \"push red button\", \"push green button\", \"push push purple button\", \"push blue button\" in the right order.</p>\n<p>Something like that?</p>\n<p>I'm assuming that a door (or something) unlocks when you enter the correct sequence.</p>\n<p>Is there any immediate sign of failure if you press the wrong one? Does the lock buzz to let you know you've got it wrong? Or does it only give a signal if your combination is right or wrong after you've pressed all four (or however many) buttons?</p>\n<p>Does the combination reset so that you can start again immediately when you press a wrong button? Does it reset after yuou've entered an incorrect combination? Or is there a reset button you've got to press before you start again?</p>\n<p>Do you want a screen that shows the combination you've entered so far? Or do the buttons you've already pressed light up so you know which ones you've pressed?</p>\n<p>There's a few different variations, and I think they'd likely be coded in slightly different ways.</p>\n\n",
      "PostDate": "2018-08-14T23:00:05.4637337Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9d0d5488-01c4-46dd-bcbb-c258baedeeed",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, for the button code on my game I just used flags. So, when you press a button set a flag to indicate that was done. \r\n\r\nLet's say they need to press yellow, blue, red.  They press yellow first, set flag: yellowpress. Have an if expression that checks it is the only color flag set. Then they press red. Have another if (){expression here. It will check if flag yellowpress and bluepress = success msg, else = failure msg (and clear flags if they get a second chance)\r\n\r\nIf that is confusing I can add some code to show you if you need.",
      "EditableFormat": "markdown",
      "HTML": "<p>So, for the button code on my game I just used flags. So, when you press a button set a flag to indicate that was done.</p>\n<p>Let's say they need to press yellow, blue, red.  They press yellow first, set flag: yellowpress. Have an if expression that checks it is the only color flag set. Then they press red. Have another if (){expression here. It will check if flag yellowpress and bluepress = success msg, else = failure msg (and clear flags if they get a second chance)</p>\n<p>If that is confusing I can add some code to show you if you need.</p>\n\n",
      "PostDate": "2018-08-14T23:31:51.5473696Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "34e92078-bfa2-4298-90e1-4587bfce0ec1",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Or easier yet... is it a number code, like “12345”?\r\n\r\n“So the combination is 1,2,3,4,5... That's the stupidest combination I've ever heard in my life! That's the kind of thing an idiot would have on his luggage!”\r\n-Lord Helmet\r\n\r\nI guess we just need to know what kind of combination lock you’re using.",
      "EditableFormat": "markdown",
      "HTML": "<p>Or easier yet... is it a number code, like “12345”?</p>\n<p>“So the combination is 1,2,3,4,5... That's the stupidest combination I've ever heard in my life! That's the kind of thing an idiot would have on his luggage!”<br>\n-Lord Helmet</p>\n<p>I guess we just need to know what kind of combination lock you’re using.</p>\n\n",
      "PostDate": "2018-08-15T02:36:32.2520116Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c07aab6f-ebde-4c54-adc0-9e6e54776e67",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Close... the code was 1, 2, 3, 4, 5, 6...\r\n(then in walks President Scrube…) (However it is spelt)…\r\nI did something similar in my Adventure game (in Visual Basic)…\r\nRight combo \"clicked\" for each correct choice, but auto-reset on a wrong choice...\r\nIt should be just about the same in Quest...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Close... the code was 1, 2, 3, 4, 5, 6...<br>\n(then in walks President Scrube…) (However it is spelt)…<br>\nI did something similar in my Adventure game (in Visual Basic)…<br>\nRight combo \"clicked\" for each correct choice, but auto-reset on a wrong choice...<br>\nIt should be just about the same in Quest...</p>\n\n",
      "PostDate": "2018-08-15T02:57:08.6302974Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fc6f8edc-1dde-4ba0-9e6f-c77315681c56",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for the one of the puzzles in Maniac Mansion, you could put in: 0000\r\n\r\nand it works, instead of going through the steps to get the actual combination\r\n\r\n----------\r\n\r\ntrue story:\r\n\r\nI was playing 'might and magic world of xeen' (4+5: xeen/light + dark side of xeen), as a kid, and there was this one chest that required a password, so just for the heck of it, I typed in 'open sesame', and the chest opened! I should have gone out and bought a lottery ticket! I was so shocked that it worked! (it was the actual correct password for the chest). I'm sure in-game there was a clue somewhere for its password, but I never found it. (and this was before the internet, so no free solution/help lookup)",
      "EditableFormat": "markdown",
      "HTML": "<p>for the one of the puzzles in Maniac Mansion, you could put in: 0000</p>\n<p>and it works, instead of going through the steps to get the actual combination</p>\n<hr>\n<p>true story:</p>\n<p>I was playing 'might and magic world of xeen' (4+5: xeen/light + dark side of xeen), as a kid, and there was this one chest that required a password, so just for the heck of it, I typed in 'open sesame', and the chest opened! I should have gone out and bought a lottery ticket! I was so shocked that it worked! (it was the actual correct password for the chest). I'm sure in-game there was a clue somewhere for its password, but I never found it. (and this was before the internet, so no free solution/help lookup)</p>\n\n",
      "PostDate": "2018-08-15T03:58:27.8822754Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c0cf2e4a-0e78-46f3-9d99-2bad4d0aff4c",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Like others, I generally use string input for keypads and combination locks but I do have one (in Giantkiller Too) which is much more elaborate. A three by three keypad is displayed and updated as the player presses each key. The pressing order has to create a magic square to open a cage. The implementation is pretty much hardwired into the game but I'm happy to discuss the details.",
      "EditableFormat": "markdown",
      "HTML": "<p>Like others, I generally use string input for keypads and combination locks but I do have one (in Giantkiller Too) which is much more elaborate. A three by three keypad is displayed and updated as the player presses each key. The pressing order has to create a magic square to open a cage. The implementation is pretty much hardwired into the game but I'm happy to discuss the details.</p>\n\n",
      "PostDate": "2018-08-15T10:11:24.042476Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ebb77f5a-e2a5-4828-8a33-8c9b68cf4421",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow, I wasn't expecting just a large amount of responses overnight! To answer which kind of lock I need, mrangel pretty much hits it on the head.\r\n\r\nIt's a 4 digit lock on a box, where instead of numbers (with it just being a case of recognising the string) there are images on the buttons, and you'd have to press in the right order. If the wrong button was pressed, then the player would be returned to the starting room with damage done to them (a.k.a being \"knocked out\"). The button presses would then reset so that the player can't trail and error the lock particularly easily.\r\n\r\nOnce again thanks for all the responses!",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow, I wasn't expecting just a large amount of responses overnight! To answer which kind of lock I need, mrangel pretty much hits it on the head.</p>\n<p>It's a 4 digit lock on a box, where instead of numbers (with it just being a case of recognising the string) there are images on the buttons, and you'd have to press in the right order. If the wrong button was pressed, then the player would be returned to the starting room with damage done to them (a.k.a being \"knocked out\"). The button presses would then reset so that the player can't trail and error the lock particularly easily.</p>\n<p>Once again thanks for all the responses!</p>\n\n",
      "PostDate": "2018-08-15T13:04:34.435584Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0216a6f2-7fb5-41a0-8509-7061e5dc96cf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is it \"press 4 buttons, then if they're not right you get knocked out and sent back\", or \"you get knocked out as soon as you press a wrong button\"?\r\n\r\nAlso, does pressing a button you've already pressed reset the combination, count as a wrong button, or not do anything?",
      "EditableFormat": "markdown",
      "HTML": "<p>Is it \"press 4 buttons, then if they're not right you get knocked out and sent back\", or \"you get knocked out as soon as you press a wrong button\"?</p>\n<p>Also, does pressing a button you've already pressed reset the combination, count as a wrong button, or not do anything?</p>\n\n",
      "PostDate": "2018-08-15T14:07:42.1385548Z",
      "LastEditDate": "2018-08-15T14:09:01.3133672Z",
      "link": null
    },
    {
      "PostId": "be9bb50d-5c15-409a-b2af-34bb75cc9211",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The way I'd implement it to start with is to make the lock a \"surface\" type container, with four buttons \"on\" it (making sure that the buttons can't be taken).\r\n\r\nThen the buttons each have a 'push' verb, looking something like this:\r\n```\r\nmsg (\"The button presses in with a click.\")\r\nif (HasString (this.parent, \"buttons_pressed\")) {\r\n  this.parent.buttons_pressed = this.parent.buttons_pressed + \"/\" + this.name\r\n}\r\nelse {\r\n  this.parent.buttons_pressed = this.name\r\n}\r\n```\r\n\r\nAnd then on the lock, you have a script attribute named `changedbuttons_pressed` which contains:\r\n```\r\ncorrect_combination = \"circle button/square button/triangle button/star button\"\r\nif (this.buttons_pressed = correct_combination) {\r\n  // code here to open a door, or whatever else the lock is for\r\n}\r\nelse if (not StartsWith (correct_combination, this.buttons_pressed)) {\r\n  msg (\"The panel gives you a shock, and you find yourself passing out.\")\r\n  // any code you need to knock out the player goes here\r\n  MoveObject (player, starting area)\r\n  this.buttons_pressed = null\r\n}\r\n```\r\n\r\nIf you want the combination to be different sometimes, you could have correct_combination as an attribute of the lock.\r\nI've just made it the names of the buttons, with slashes between them.",
      "EditableFormat": "markdown",
      "HTML": "<p>The way I'd implement it to start with is to make the lock a \"surface\" type container, with four buttons \"on\" it (making sure that the buttons can't be taken).</p>\n<p>Then the buttons each have a 'push' verb, looking something like this:</p>\n<pre><code>msg (\"The button presses in with a click.\")\nif (HasString (this.parent, \"buttons_pressed\")) {\n  this.parent.buttons_pressed = this.parent.buttons_pressed + \"/\" + this.name\n}\nelse {\n  this.parent.buttons_pressed = this.name\n}\n</code></pre>\n<p>And then on the lock, you have a script attribute named <code>changedbuttons_pressed</code> which contains:</p>\n<pre><code>correct_combination = \"circle button/square button/triangle button/star button\"\nif (this.buttons_pressed = correct_combination) {\n  // code here to open a door, or whatever else the lock is for\n}\nelse if (not StartsWith (correct_combination, this.buttons_pressed)) {\n  msg (\"The panel gives you a shock, and you find yourself passing out.\")\n  // any code you need to knock out the player goes here\n  MoveObject (player, starting area)\n  this.buttons_pressed = null\n}\n</code></pre>\n<p>If you want the combination to be different sometimes, you could have correct_combination as an attribute of the lock.<br>\nI've just made it the names of the buttons, with slashes between them.</p>\n\n",
      "PostDate": "2018-08-15T15:24:33.8794876Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5c225b24-2e46-47a3-9f3d-1e875a445e1b",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry about asking something which is probably very obvious, but where do I add the script attribute? Is it in the \"after locking\" part of the Container tab?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry about asking something which is probably very obvious, but where do I add the script attribute? Is it in the \"after locking\" part of the Container tab?</p>\n\n",
      "PostDate": "2018-08-16T12:26:54.154943Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ddd1b5a8-d28a-49d0-8c7d-19d2e123585e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On the 'attributes' tab (assuming you have the desktop version of Quest)\r\n\r\nIf you're on the web editor, you'd have to go to 'features', tick the initialisation script, and then on the initialisation script tab you'd put:\r\n```\r\nthis.changedbuttons_pressed => {\r\n  // script goes here\r\n}\r\n```\r\n\r\nI was thinking about a combination lock that opens a door. Putting it on a container might be more complex, because Quest doesn't give you an easy way to distinguish between items in the box and items on the box. I'm thinking about how you'd do that, ",
      "EditableFormat": "markdown",
      "HTML": "<p>On the 'attributes' tab (assuming you have the desktop version of Quest)</p>\n<p>If you're on the web editor, you'd have to go to 'features', tick the initialisation script, and then on the initialisation script tab you'd put:</p>\n<pre><code>this.changedbuttons_pressed =&gt; {\n  // script goes here\n}\n</code></pre>\n<p>I was thinking about a combination lock that opens a door. Putting it on a container might be more complex, because Quest doesn't give you an easy way to distinguish between items in the box and items on the box. I'm thinking about how you'd do that,</p>\n\n",
      "PostDate": "2018-08-16T13:25:35.2436166Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0613fe93-05a9-47c0-b524-90ea857ef732",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you so much!\r\nThe only concern I have left is that the \"knocking out\" part doesn't work:\r\n\r\n```Error running script: Error compiling expression 'not StartsWith (correct_combination, this.changedbuttons_pressed)': FunctionCallElement: Could find not function 'StartsWith(String; LazyLoadScript)'```\r\n\r\nIs there another function I need to add in to make the script work?\r\nAside from that, the script works really well!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you so much!<br>\nThe only concern I have left is that the \"knocking out\" part doesn't work:</p>\n<p><code>Error running script: Error compiling expression 'not StartsWith (correct_combination, this.changedbuttons_pressed)': FunctionCallElement: Could find not function 'StartsWith(String; LazyLoadScript)'</code></p>\n<p>Is there another function I need to add in to make the script work?<br>\nAside from that, the script works really well!</p>\n\n",
      "PostDate": "2018-08-17T09:27:12.6996788Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "73547836-eb4c-4293-b5db-b970c8a84870",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The expression quoted in the error message is `not StartsWith (correct_combination, this.changedbuttons_pressed)`; the expression in the code is `not StartsWith (correct_combination, this.buttons_pressed)`.\r\n\r\nThink you may have accidentally added a `changed` there.",
      "EditableFormat": "markdown",
      "HTML": "<p>The expression quoted in the error message is <code>not StartsWith (correct_combination, this.changedbuttons_pressed)</code>; the expression in the code is <code>not StartsWith (correct_combination, this.buttons_pressed)</code>.</p>\n<p>Think you may have accidentally added a <code>changed</code> there.</p>\n\n",
      "PostDate": "2018-08-17T12:35:06.516445Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aeecc350-0a68-4945-a40d-98e279d611b8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(Also, I had a thought about how to make a combination-lock safe.\r\n\r\nYou could make two separate objects with the same alias:\r\n* `combination_safe_locked`\r\n   * Is a \"surface\"\r\n   * Has button objects inside it\r\n   * Is visible\r\n   * Has the scripts listed above\r\n* `combination_safe_open`\r\n   * Is a \"container\"\r\n   * Has treasure or something inside it\r\n   * Is initially closed, and invisible\r\n\r\nThe `// code here to open a door, or whatever else the lock is for` in this case would be:\r\n```\r\n  combination_safe_open.parent = this.parent\r\n  combination_safe_open.visible = true\r\n  OpenObject (combination_safe_open)\r\n  this.visible = false\r\n```\r\nand the `combination_safe_open` would have a `changedisopen` attribute:\r\n```\r\nif (not this.isopen) {\r\n  combination_safe_locked.parent = this.parent\r\n  combination_safe_locked.visible = true\r\n  combination_safe_locked.buttons_pressed = \"\"\r\n  this.visible = false\r\n}\r\n```\r\n\r\nThe problem with this method is that \"open safe\" when it's locked would generate the message \"It is already open\", and I can't see a way to get around that without modifying `TryOpenClose`.",
      "EditableFormat": "markdown",
      "HTML": "<p>(Also, I had a thought about how to make a combination-lock safe.</p>\n<p>You could make two separate objects with the same alias:</p>\n<ul>\n<li><code>combination_safe_locked</code>\n<ul>\n<li>Is a \"surface\"</li>\n<li>Has button objects inside it</li>\n<li>Is visible</li>\n<li>Has the scripts listed above</li>\n</ul>\n</li>\n<li><code>combination_safe_open</code>\n<ul>\n<li>Is a \"container\"</li>\n<li>Has treasure or something inside it</li>\n<li>Is initially closed, and invisible</li>\n</ul>\n</li>\n</ul>\n<p>The <code>// code here to open a door, or whatever else the lock is for</code> in this case would be:</p>\n<pre><code>  combination_safe_open.parent = this.parent\n  combination_safe_open.visible = true\n  OpenObject (combination_safe_open)\n  this.visible = false\n</code></pre>\n<p>and the <code>combination_safe_open</code> would have a <code>changedisopen</code> attribute:</p>\n<pre><code>if (not this.isopen) {\n  combination_safe_locked.parent = this.parent\n  combination_safe_locked.visible = true\n  combination_safe_locked.buttons_pressed = \"\"\n  this.visible = false\n}\n</code></pre>\n<p>The problem with this method is that \"open safe\" when it's locked would generate the message \"It is already open\", and I can't see a way to get around that without modifying <code>TryOpenClose</code>.</p>\n\n",
      "PostDate": "2018-08-17T13:00:11.2635908Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "07c0743d-0c11-4036-9da6-fcf40f571c19",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unfortunately, the same message appears, which is probably due to the StartsWith being identified for some reason by Quest as a function.\r\nHowever, the actual script itself works perfectly, so if there is a way to hide an error message that might be easier than trying to solve the error itself.",
      "EditableFormat": "markdown",
      "HTML": "<p>Unfortunately, the same message appears, which is probably due to the StartsWith being identified for some reason by Quest as a function.<br>\nHowever, the actual script itself works perfectly, so if there is a way to hide an error message that might be easier than trying to solve the error itself.</p>\n\n",
      "PostDate": "2018-08-17T15:46:28.3092572Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0720170f-8bf1-4334-833f-cfe516c9572d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`StartsWith()` is a function. But because it's a built-in function, Quest checks that it's receiving the right kinds of arguments. StartsWith only works on two strings, so when it was looking at the change script it complained that there isn't a StartsWith function that compares a string and a script.\r\n\r\nI looked at the code again, and spot a possible issue. Is the error now: `Error running script: Error compiling expression 'not StartsWith (correct_combination, this.buttons_pressed)': FunctionCallElement: Could find not function 'StartsWith(String; Object)'`?\r\n\r\nIf so, that would be because it's resetting the string to `null` after the player gets it wrong, and `null` isn't a string.\r\n\r\nIn that case, it should be:\r\n```\r\ncorrect_combination = \"circle button/square button/triangle button/star button\"\r\nif (this.buttons_pressed = correct_combination) {\r\n  // code here to open a door, or whatever else the lock is for\r\n}\r\nelse if (HasString (this, \"buttons_pressed\")) {\r\n  if (not StartsWith (correct_combination, this.buttons_pressed)) {\r\n    msg (\"The panel gives you a shock, and you find yourself passing out.\")\r\n    // any code you need to knock out the player goes here\r\n    MoveObject (player, starting area)\r\n    this.buttons_pressed = null\r\n  }\r\n}\r\n```\r\nChecking that the player has actually pressed buttons before checking if their combination-so-far is right.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>StartsWith()</code> is a function. But because it's a built-in function, Quest checks that it's receiving the right kinds of arguments. StartsWith only works on two strings, so when it was looking at the change script it complained that there isn't a StartsWith function that compares a string and a script.</p>\n<p>I looked at the code again, and spot a possible issue. Is the error now: <code>Error running script: Error compiling expression 'not StartsWith (correct_combination, this.buttons_pressed)': FunctionCallElement: Could find not function 'StartsWith(String; Object)'</code>?</p>\n<p>If so, that would be because it's resetting the string to <code>null</code> after the player gets it wrong, and <code>null</code> isn't a string.</p>\n<p>In that case, it should be:</p>\n<pre><code>correct_combination = \"circle button/square button/triangle button/star button\"\nif (this.buttons_pressed = correct_combination) {\n  // code here to open a door, or whatever else the lock is for\n}\nelse if (HasString (this, \"buttons_pressed\")) {\n  if (not StartsWith (correct_combination, this.buttons_pressed)) {\n    msg (\"The panel gives you a shock, and you find yourself passing out.\")\n    // any code you need to knock out the player goes here\n    MoveObject (player, starting area)\n    this.buttons_pressed = null\n  }\n}\n</code></pre>\n<p>Checking that the player has actually pressed buttons before checking if their combination-so-far is right.</p>\n\n",
      "PostDate": "2018-08-17T16:37:07.8611292Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b7510ca0-61f2-43ae-94af-82d6117a418b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want the code to be random, so the player can't just look it up in a walkthrough, you could generate it in the lock's `_initialise_` script (which is run as soon as the game starts).\r\n\r\nYou'd remove the `correct_combination = ` line from the start of the changedbuttons_pressed script, and change the `correct_combination` in the two `if` lines to `this.correct_combination`.\r\n\r\nThen the initialise script (which can be enabled on the 'features' tab) would be:\r\n```\r\nbuttons_in_combination = NewStringList()\r\nbuttons_not_used = GetDirectChildren (this)\r\nwhile (ListCount (buttons_not_used) > 0) {\r\n  next_button = PickOneObject (buttons_not_used)\r\n  list remove (buttons_not_used, next_button)\r\n  list add (buttons_in_combination, next_button.name)\r\n}\r\nthis.correct_combination = Join (buttons_in_combination, \"/\")\r\n```\r\n\r\nAnd if there's a note somewhere because a manager has written down the combination, you could make its look attribute something like `\"Don't forget, the combination is {combination lock.correct_combination}.\"`\r\nTo use the aliases of the buttons wouldn't be much harder; or even give the buttons an attribute like \"human_name\" so you could have the manager write \"CSTSt\" or something that might take a few seconds to understand.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want the code to be random, so the player can't just look it up in a walkthrough, you could generate it in the lock's <code>_initialise_</code> script (which is run as soon as the game starts).</p>\n<p>You'd remove the <code>correct_combination =</code> line from the start of the changedbuttons_pressed script, and change the <code>correct_combination</code> in the two <code>if</code> lines to <code>this.correct_combination</code>.</p>\n<p>Then the initialise script (which can be enabled on the 'features' tab) would be:</p>\n<pre><code>buttons_in_combination = NewStringList()\nbuttons_not_used = GetDirectChildren (this)\nwhile (ListCount (buttons_not_used) &gt; 0) {\n  next_button = PickOneObject (buttons_not_used)\n  list remove (buttons_not_used, next_button)\n  list add (buttons_in_combination, next_button.name)\n}\nthis.correct_combination = Join (buttons_in_combination, \"/\")\n</code></pre>\n<p>And if there's a note somewhere because a manager has written down the combination, you could make its look attribute something like <code>\"Don't forget, the combination is {combination lock.correct_combination}.\"</code><br>\nTo use the aliases of the buttons wouldn't be much harder; or even give the buttons an attribute like \"human_name\" so you could have the manager write \"CSTSt\" or something that might take a few seconds to understand.</p>\n\n",
      "PostDate": "2018-08-17T16:50:20.7938095Z",
      "LastEditDate": "2018-08-18T08:01:24.9569516Z",
      "link": null
    },
    {
      "PostId": "eaa21843-1523-408f-a83d-a3dfcf175fd0",
      "UserId": 350656,
      "Username": "jamrobeprom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/7a2fe681688706984a39df2ac42d55dc?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hallelujah! The error has been solved! Thank you so much for your help mate, I'm relatively new to coding and scripting (only about a year's practice!).",
      "EditableFormat": "markdown",
      "HTML": "<p>Hallelujah! The error has been solved! Thank you so much for your help mate, I'm relatively new to coding and scripting (only about a year's practice!).</p>\n\n",
      "PostDate": "2018-08-17T23:34:00.7981495Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
