{
  "Topic": {
    "TopicId": "8npr8ac4pewm0fs72itmaa",
    "ForumId": "10",
    "Title": "In a detection turnscript, checking if the last command entered was to use certain objects.",
    "LastUpdated": "2019-06-02T12:48:54.0063841Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "96e8848e-6cf3-4fcc-a7c8-11bcd769e9d3",
      "UserId": 422214,
      "Username": "TriangleTooth",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a6cfc13dded394b5da3c2ddfae45e5d6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi,\r\n\r\nI'm working on a stealth system in Quest 5.8, mostly as a fun exercise to get to grips with the scripting. I have built a system off CombatLib, that removes its basic stealth and instead now uses a system that gives a chance of detection by any 'attack on sight' monster based on a formula that includes the attributes of the room, player's agility, and a monster's perception score.\r\n\r\nThe detection script runs on every player turn, except if the last command was from a whitelist of allowed commands (for example, looking does not risk detection). This was achieved with a switch testing game.pov.currentcommandpattern.\r\n\r\nHowever, as part of the system, certain inventory objects can be used to help the player improve their stealth. For example, using a moss vial will eliminate the room factor \"loud floor\". I want doing this to not risk detection, since the player won't know they need to until they have already entered a room that has enemies in it. I obviously don't want every \"useon\" to be whitelisted though, since I imagine many possible \"useon\"s should carry risk.\r\n\r\nIs there a way to check if the last command was a use 'moss vial/other object' (or even \"object that has x attribute\") in Quest?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi,</p>\n<p>I'm working on a stealth system in Quest 5.8, mostly as a fun exercise to get to grips with the scripting. I have built a system off CombatLib, that removes its basic stealth and instead now uses a system that gives a chance of detection by any 'attack on sight' monster based on a formula that includes the attributes of the room, player's agility, and a monster's perception score.</p>\n<p>The detection script runs on every player turn, except if the last command was from a whitelist of allowed commands (for example, looking does not risk detection). This was achieved with a switch testing game.pov.currentcommandpattern.</p>\n<p>However, as part of the system, certain inventory objects can be used to help the player improve their stealth. For example, using a moss vial will eliminate the room factor \"loud floor\". I want doing this to not risk detection, since the player won't know they need to until they have already entered a room that has enemies in it. I obviously don't want every \"useon\" to be whitelisted though, since I imagine many possible \"useon\"s should carry risk.</p>\n<p>Is there a way to check if the last command was a use 'moss vial/other object' (or even \"object that has x attribute\") in Quest?</p>\n\n",
      "PostDate": "2019-06-02T12:48:54.0063841Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "84c59b33-e591-4b4a-96b3-69a05153e50f",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think you want ```player.currentcommand```. \r\nForgive the pseudo-coding.\r\n```\r\nIf player.currentcommand = use moss vial\r\nThen\r\n…\r\n```\r\nI'm sure other users/writers may have a different approach.\r\n\r\nThere is also an unresolvedcommand detailed below which is amusing.\r\nhttp://textadventures.co.uk/forum/samples/topic/hrhvcwvfa0_tjk2fky5thw/hitchhikers-guide-gag-in-quest\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I think you want <code>player.currentcommand</code>.<br>\nForgive the pseudo-coding.</p>\n<pre><code>If player.currentcommand = use moss vial\nThen\n…\n</code></pre>\n<p>I'm sure other users/writers may have a different approach.</p>\n<p>There is also an unresolvedcommand detailed below which is amusing.<br>\nhttp://textadventures.co.uk/forum/samples/topic/hrhvcwvfa0_tjk2fky5thw/hitchhikers-guide-gag-in-quest</p>\n\n",
      "PostDate": "2019-06-02T18:17:26.9216999Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "760a8eb0-7b31-4b57-a76c-0fff3d1590fe",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "3 ways to do this:\r\n\r\n1. If you're just talking about `useon`, you could modify that command so that it saves the used object in an attribute somewhere before doing its normal behaviour.\r\n\r\n2. Or, if the number of \"safe\" objects is small, have the 'use' scripts for those objects set a flag which your turnscript checks (and then clears).\r\n\r\n3. Look at `game.pov.currentcommandresolvedelements` - it will be a dictionary containing all the parameters for the current command. In the case of `useon`, it will have 2 keys, `object1` and `object2`.",
      "EditableFormat": "markdown",
      "HTML": "<p>3 ways to do this:</p>\n<ol>\n<li>\n<p>If you're just talking about <code>useon</code>, you could modify that command so that it saves the used object in an attribute somewhere before doing its normal behaviour.</p>\n</li>\n<li>\n<p>Or, if the number of \"safe\" objects is small, have the 'use' scripts for those objects set a flag which your turnscript checks (and then clears).</p>\n</li>\n<li>\n<p>Look at <code>game.pov.currentcommandresolvedelements</code> - it will be a dictionary containing all the parameters for the current command. In the case of <code>useon</code>, it will have 2 keys, <code>object1</code> and <code>object2</code>.</p>\n</li>\n</ol>\n\n",
      "PostDate": "2019-06-02T21:58:10.6969275Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1f34c578-d201-4e8b-ba32-b60eddfac655",
      "UserId": 422214,
      "Username": "TriangleTooth",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a6cfc13dded394b5da3c2ddfae45e5d6?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the replies, went with option 2 from mrangel.\r\n\r\nOne other thing I was thinking of allowing was leaving via the same exit you entered, but I have no idea how I'd tell which that is.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the replies, went with option 2 from mrangel.</p>\n<p>One other thing I was thinking of allowing was leaving via the same exit you entered, but I have no idea how I'd tell which that is.</p>\n\n",
      "PostDate": "2019-06-03T19:56:17.0900744Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "535604cb-d82e-4d8d-80eb-fa9ea5285218",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> One other thing I was thinking of allowing was leaving via the same exit you entered, but I have no idea how I'd tell which that is.\r\n\r\nSimplest way would probably be to modify the `changedparent` script attribute of the player. That script's run whenever they move from one location to another. Within that script, you can use `this.parent` for the room they're going to, and `oldvalue` for the room they've come from.\r\nSo you could, for example, add something like:\r\n\r\n```\r\nif (this.parent = this.previousroom) {\r\n  // We're going back to the previous room, so set the flag\r\n  // to let your turnscript know this is a stealthy action\r\n}\r\nelse {\r\n  this.previousroom = oldvalue\r\n}\r\n```\r\nMaybe in your turnscript, if they actually do something in the room they've entered (like, they do a non-stealthy action), it implies they've moved away from the door so you'd set `game.pov.previousroom = null` as well.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>One other thing I was thinking of allowing was leaving via the same exit you entered, but I have no idea how I'd tell which that is.</p>\n</blockquote>\n<p>Simplest way would probably be to modify the <code>changedparent</code> script attribute of the player. That script's run whenever they move from one location to another. Within that script, you can use <code>this.parent</code> for the room they're going to, and <code>oldvalue</code> for the room they've come from.<br>\nSo you could, for example, add something like:</p>\n<pre><code>if (this.parent = this.previousroom) {\n  // We're going back to the previous room, so set the flag\n  // to let your turnscript know this is a stealthy action\n}\nelse {\n  this.previousroom = oldvalue\n}\n</code></pre>\n<p>Maybe in your turnscript, if they actually do something in the room they've entered (like, they do a non-stealthy action), it implies they've moved away from the door so you'd set <code>game.pov.previousroom = null</code> as well.</p>\n\n",
      "PostDate": "2019-06-03T21:49:52.4743266Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
