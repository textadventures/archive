{
  "Topic": {
    "TopicId": "4263",
    "ForumId": "10",
    "Title": "Help with the 'Get Input' function?",
    "LastUpdated": "2014-05-15T10:25:14+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "28338",
      "UserId": 0,
      "Username": "TheDarkWyrm",
      "UserAvatar": null,
      "UserGravatar": "590c60277a091e61376c93c1d13ed2d8",
      "EditableText": "This may be something that I should have learned from reading the tutorial, but is there a way to use [quote:1yint9oy]set (currency, &quot;worth&quot;, 1000)[/quote:1yint9oy] that kind of command to assign an attribute a value that isn't a number? I want to use the 'get input' function to change the player's name.",
      "EditableFormat": "bbcode",
      "HTML": "This may be something that I should have learned from reading the tutorial, but is there a way to use <blockquote><p>set (currency, &quot;worth&quot;, 1000)</p></blockquote> that kind of command to assign an attribute a value that isn't a number? I want to use the 'get input' function to change the player's name.",
      "PostDate": "2014-04-03T03:28:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28340",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "for example, let's say that your initial 'alias' is (in code):  player.alias = &quot;TheDarkWyrm&quot;, and you want to change it to &quot;HK&quot;.\n\nthe syntax is the exact same, but for a String Attribute, you just need the 'Value' to have quotes on it:\n\nset (Object, &quot;Attribute'&quot;, &quot;Value&quot;)\n\nset (player, &quot;alias&quot;, &quot;HK&quot;)\n\nor, an alternative script&#058;\n\n(in the GUI~Editor: run as script -&gt; add a script -&gt; Variables -&gt; Set a variable or attribute)\n\nObject.Attribute = Value_or_Expression\n\nplayer.alias = &quot;HK&quot;\n\n----------------------------------------\n\nhere it is in full:\n\n[code:2bwrhh18]in some script (for just the &quot;player&quot; Player Object in this example)&#58;\n\nmsg (&quot;What is your new name?&quot;)\nget input {\n  set (player, &quot;alias&quot;, result)\n  msg (&quot;Your new name is &quot; + player&#46;alias)\n}\n\nor\n\nmsg (&quot;What is your new name?&quot;)\nget input {\n  player&#46;alias = result\n  msg (&quot;Your new name is &quot; + player&#46;alias)\n}[/code:2bwrhh18]\n\nusing both the 'get input' and 'show menu', automatically (internally by the quest engine core code) sets the built-in variable for you: result = your_selection\n\nconceptually, quest (or any coding language for that matter) uses algebraic substitution:\n\nmsg (&quot;What is your new name?&quot;)\nget input {\n-&gt; // I'd type in: HK\n-&gt; // quest sets the built-in variable 'result' for you (you don't see it done): result = &quot;HK&quot;\n-&gt; // algebraic substitution below: player.alias = result = &quot;HK -&gt; player.alias = &quot;HK&quot;\n-&gt; player.alias = result\n-&gt; // your now new player's alias is: player.alias = &quot;HK&quot;\n-&gt; msg (&quot;Your new name is &quot; + player.alias + &quot;.&quot;)\n-&gt; // outputs: Your new name is HK.\n}\n\n----------\n\n(using a command)\n\n[code:2bwrhh18]&lt;command name=&quot;alias_changing_command&quot;&gt;\n  &lt;pattern&gt;newalias #object# and #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (object = null) {\n      msg (&quot;That object doesn't exist&#46; Try again&#46;&quot;)\n    } else {\n      alias_changing_function (object,text)\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;alias_changing_function&quot; parameters=&quot;object_x,text_x&quot;&gt;\n  object_x&#46;alias = text_x\n  msg (&quot;The new name is&quot; + object_x&#46;alias)\n&lt;/function&gt;[/code:2bwrhh18]\n\n... or ...\n\n(using 'get input')\n\nwithin some script&#058;\n\n[code:2bwrhh18]msg (&quot;What is your new name?&quot;)\nget input {\n  player&#46;alias = result\n  msg (&quot;Your name is &quot; + player&#46;alias)\n}[/code:2bwrhh18]\n\n~ or ~\n\nyou can do the 'get input' within a Command too, but it's a bit pointless to do it this way.\n\n-----------------------\n\nString: a collection of characters, for examples:\n\na\n1\ndead\nfavorite_color_5\ngfgv566dff3fknr04_8jh7hgfrd851\n\nnotice how the '1' is a String, but it is also an Integer...\n\nan Integer, is an amount (non-decimal): ..., -100, -1, 0, 1 , 100, ...\n\nan integer can be computed, for example:\n\nold~initial Value: HK.strength = 25\nHK.strength = HK.strength + 50\nnew Value: HK.strength = 75\n\nso, numeral characters, can be a String or an Integer\n\nin code, you can change between Strings and Integers:\n\nObject.Attribute = Value\n\na String Attribute: HK.strength = &quot;100&quot;\nan Integer Attribute: HK.strength = 100\n(these both can't exist at the same time, as 'HK.strength' can only be one attribute type at a time)\n\nVariable = Value\n\nresult_integer = ToInt (HK.strength)\nresult_string = ToString (HK.strength)\n\nor\n\nObject.Attrbute = Value\n\ngame.result_integer = ToInt (HK.strength)\ngame.result_string = ToString (HK.strength)\n\n----------\n\nin the GUI~Editor:\n\n&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nAs a String Attribute:\nAttribute Name: strength\nAttribute Type: string\nAttribute Value: 100\n\nAs an Integer Attribute:\nAttribute Name: strength\nAttribute Type: int (integer)\nAttribute Value: 100\n\n-------\n\nanyways, the reason this matters is that when using two or more Attributes together (in~for comparison usage), they must be the same type, else you get the 'infamous' error saying as such.\n\n---------------------\n\nP.S.\n\nthis probably confused you, as this is a bit more in depth coding explanation, and I just don't explain that well to begin with.\n\nso, feel free to ask about any questions you may have, or if you still having trouble, not understanding, and need better help.",
      "EditableFormat": "bbcode",
      "HTML": "for example, let's say that your initial 'alias' is (in code):  player.alias = &quot;TheDarkWyrm&quot;, and you want to change it to &quot;HK&quot;.<br/><br/>the syntax is the exact same, but for a String Attribute, you just need the 'Value' to have quotes on it:<br/><br/>set (Object, &quot;Attribute'&quot;, &quot;Value&quot;)<br/><br/>set (player, &quot;alias&quot;, &quot;HK&quot;)<br/><br/>or, an alternative script&#058;<br/><br/>(in the GUI~Editor: run as script -&gt; add a script -&gt; Variables -&gt; Set a variable or attribute)<br/><br/>Object.Attribute = Value_or_Expression<br/><br/>player.alias = &quot;HK&quot;<br/><br/>----------------------------------------<br/><br/>here it is in full:<br/><br/><pre><code>in some script (for just the &quot;player&quot; Player Object in this example)&#58;<br/><br/>msg (&quot;What is your new name?&quot;)<br/>get input {<br/>  set (player, &quot;alias&quot;, result)<br/>  msg (&quot;Your new name is &quot; + player&#46;alias)<br/>}<br/><br/>or<br/><br/>msg (&quot;What is your new name?&quot;)<br/>get input {<br/>  player&#46;alias = result<br/>  msg (&quot;Your new name is &quot; + player&#46;alias)<br/>}</code></pre><br/><br/>using both the 'get input' and 'show menu', automatically (internally by the quest engine core code) sets the built-in variable for you: result = your_selection<br/><br/>conceptually, quest (or any coding language for that matter) uses algebraic substitution:<br/><br/>msg (&quot;What is your new name?&quot;)<br/>get input {<br/>-&gt; // I'd type in: HK<br/>-&gt; // quest sets the built-in variable 'result' for you (you don't see it done): result = &quot;HK&quot;<br/>-&gt; // algebraic substitution below: player.alias = result = &quot;HK -&gt; player.alias = &quot;HK&quot;<br/>-&gt; player.alias = result<br/>-&gt; // your now new player's alias is: player.alias = &quot;HK&quot;<br/>-&gt; msg (&quot;Your new name is &quot; + player.alias + &quot;.&quot;)<br/>-&gt; // outputs: Your new name is HK.<br/>}<br/><br/>----------<br/><br/>(using a command)<br/><br/><pre><code>&lt;command name=&quot;alias_changing_command&quot;&gt;<br/>  &lt;pattern&gt;newalias #object# and #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    if (object = null) {<br/>      msg (&quot;That object doesn't exist&#46; Try again&#46;&quot;)<br/>    } else {<br/>      alias_changing_function (object,text)<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;alias_changing_function&quot; parameters=&quot;object_x,text_x&quot;&gt;<br/>  object_x&#46;alias = text_x<br/>  msg (&quot;The new name is&quot; + object_x&#46;alias)<br/>&lt;/function&gt;</code></pre><br/><br/>... or ...<br/><br/>(using 'get input')<br/><br/>within some script&#058;<br/><br/><pre><code>msg (&quot;What is your new name?&quot;)<br/>get input {<br/>  player&#46;alias = result<br/>  msg (&quot;Your name is &quot; + player&#46;alias)<br/>}</code></pre><br/><br/>~ or ~<br/><br/>you can do the 'get input' within a Command too, but it's a bit pointless to do it this way.<br/><br/>-----------------------<br/><br/>String: a collection of characters, for examples:<br/><br/>a<br/>1<br/>dead<br/>favorite_color_5<br/>gfgv566dff3fknr04_8jh7hgfrd851<br/><br/>notice how the '1' is a String, but it is also an Integer...<br/><br/>an Integer, is an amount (non-decimal): ..., -100, -1, 0, 1 , 100, ...<br/><br/>an integer can be computed, for example:<br/><br/>old~initial Value: HK.strength = 25<br/>HK.strength = HK.strength + 50<br/>new Value: HK.strength = 75<br/><br/>so, numeral characters, can be a String or an Integer<br/><br/>in code, you can change between Strings and Integers:<br/><br/>Object.Attribute = Value<br/><br/>a String Attribute: HK.strength = &quot;100&quot;<br/>an Integer Attribute: HK.strength = 100<br/>(these both can't exist at the same time, as 'HK.strength' can only be one attribute type at a time)<br/><br/>Variable = Value<br/><br/>result_integer = ToInt (HK.strength)<br/>result_string = ToString (HK.strength)<br/><br/>or<br/><br/>Object.Attrbute = Value<br/><br/>game.result_integer = ToInt (HK.strength)<br/>game.result_string = ToString (HK.strength)<br/><br/>----------<br/><br/>in the GUI~Editor:<br/><br/>&quot;whatever&quot; Object -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>As a String Attribute:<br/>Attribute Name: strength<br/>Attribute Type: string<br/>Attribute Value: 100<br/><br/>As an Integer Attribute:<br/>Attribute Name: strength<br/>Attribute Type: int (integer)<br/>Attribute Value: 100<br/><br/>-------<br/><br/>anyways, the reason this matters is that when using two or more Attributes together (in~for comparison usage), they must be the same type, else you get the 'infamous' error saying as such.<br/><br/>---------------------<br/><br/>P.S.<br/><br/>this probably confused you, as this is a bit more in depth coding explanation, and I just don't explain that well to begin with.<br/><br/>so, feel free to ask about any questions you may have, or if you still having trouble, not understanding, and need better help.",
      "PostDate": "2014-04-03T07:00:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28361",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "[quote=&quot;TheDarkWyrm&quot;:31nu2vek]This may be something that I should have learned from reading the tutorial, but is there a way to use [quote:31nu2vek]set (currency, &quot;worth&quot;, 1000)[/quote:31nu2vek] that kind of command to assign an attribute a value that isn't a number? I want to use the 'get input' function to change the player's name.[/quote:31nu2vek]\n\nHK has answered your question but just to expand a little, your question is related to using expressions. In any expression field, anything you type &quot;within quotation marks like this&quot; represents a string. Anything without represents an internal value, whether it be an object name, True/False, an integer, or any variable (e.g. currency.worth).\n\nSo to use your currency example with other kinds of attributes:\nset (currency, &quot;number_of_coins&quot;, 8 ) - integer\nset (currency, &quot;weight&quot;, 2) - integer\nset (currency, &quot;legal_tender&quot;, False) - boolean\nset (currency, &quot;alternate_description&quot;, &quot;You have never seen anything like these strange silver coins anywhere else before.&quot;) - string\nset (currency, &quot;total_weight&quot;, currency.weight*currency.number_of_coins) - integer (created by multiplying 2 variables)\n\nYou should also be aware that it is much easier to use the form object.attribute = value rather than the &quot;set&quot; function when you know what the name of the attribute is. The set function is better used in more advanced code when you don't know what the attribute name is going to be. So all of the above would be better expressed as:\n\ncurrency.number_of_coins = 8\ncurrency.weight = 2\ncurrency.legal_tender = False\ncurrency.alternate_description = &quot;You have never seen anything like these strange silver coins anywhere else before.&quot;\ncurrency.total_weight = currency.weight*currency.number_of_coins\n\nHope this helps.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TheDarkWyrm wrote:</cite>This may be something that I should have learned from reading the tutorial, but is there a way to use <blockquote><p>set (currency, &quot;worth&quot;, 1000)</blockquote> that kind of command to assign an attribute a value that isn't a number? I want to use the 'get input' function to change the player's name.</p></blockquote><br/><br/>HK has answered your question but just to expand a little, your question is related to using expressions. In any expression field, anything you type &quot;within quotation marks like this&quot; represents a string. Anything without represents an internal value, whether it be an object name, True/False, an integer, or any variable (e.g. currency.worth).<br/><br/>So to use your currency example with other kinds of attributes:<br/>set (currency, &quot;number_of_coins&quot;, 8 ) - integer<br/>set (currency, &quot;weight&quot;, 2) - integer<br/>set (currency, &quot;legal_tender&quot;, False) - boolean<br/>set (currency, &quot;alternate_description&quot;, &quot;You have never seen anything like these strange silver coins anywhere else before.&quot;) - string<br/>set (currency, &quot;total_weight&quot;, currency.weight*currency.number_of_coins) - integer (created by multiplying 2 variables)<br/><br/>You should also be aware that it is much easier to use the form object.attribute = value rather than the &quot;set&quot; function when you know what the name of the attribute is. The set function is better used in more advanced code when you don't know what the attribute name is going to be. So all of the above would be better expressed as:<br/><br/>currency.number_of_coins = 8<br/>currency.weight = 2<br/>currency.legal_tender = False<br/>currency.alternate_description = &quot;You have never seen anything like these strange silver coins anywhere else before.&quot;<br/>currency.total_weight = currency.weight*currency.number_of_coins<br/><br/>Hope this helps.",
      "PostDate": "2014-04-05T11:45:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "28764",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "HK, just wanted to say super thanx for this: result_integer = ToInt  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nThis made me super happy!",
      "EditableFormat": "bbcode",
      "HTML": "HK, just wanted to say super thanx for this: result_integer = ToInt  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>This made me super happy!",
      "PostDate": "2014-05-15T10:25:14+01:00",
      "LastEditDate": null
    }
  ]
}
