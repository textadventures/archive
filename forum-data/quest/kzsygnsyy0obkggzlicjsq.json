{
  "Topic": {
    "TopicId": "kzsygnsyy0obkggzlicjsq",
    "ForumId": "10",
    "Title": "How do I give my armor durability?",
    "LastUpdated": "2019-10-25T21:58:29.3832357Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cd56bd87-6c02-40ab-a409-23a491e083d8",
      "UserId": 420742,
      "Username": "GC2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want my armor to be able to break after taking enough damage.  How do I check equipped gear and then change the stats of equipped gears?",
      "EditableFormat": "markdown",
      "HTML": "<p>I want my armor to be able to break after taking enough damage.  How do I check equipped gear and then change the stats of equipped gears?</p>\n\n",
      "PostDate": "2019-10-25T21:58:29.3832357Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "06f11d49-7ff4-42de-b28b-ac9cc66b6fcd",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There's a ton of ways to do this. Generally, most of them will revolve around you having an Armor object, with attribute Durability. And you can check it by having {Armor.Durability} in your text, and change it with code like:\r\n```\r\nArmor.Durability=Armor.Durability-1\r\nif Armor.Durability<=0:{\r\n//Do Armor Destruction Stuff Here\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>There's a ton of ways to do this. Generally, most of them will revolve around you having an Armor object, with attribute Durability. And you can check it by having {Armor.Durability} in your text, and change it with code like:</p>\n<pre><code>Armor.Durability=Armor.Durability-1\nif Armor.Durability&lt;=0:{\n//Do Armor Destruction Stuff Here\n}\n</code></pre>\n\n",
      "PostDate": "2019-10-26T02:31:59.384658Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af54778a-2929-4d9e-b642-6efea19b065b",
      "UserId": 420742,
      "Username": "GC2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to make it so that the game can detect what the current armor is equipped and make it lose durability when attacked. Is there a way to make that happen? ",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to make it so that the game can detect what the current armor is equipped and make it lose durability when attacked. Is there a way to make that happen?</p>\n\n",
      "PostDate": "2019-10-26T04:25:31.73575Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2b4bb7b8-fd7a-4147-b819-3de98f739888",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n-------------\r\n\r\nhere's a \"quick simple\" example (not remotely complete though, and: RPG functionality/mechanic systems, like equipment, items, combat, magic, stealth, diplomacy/dialogue, and etc, are complex, regardless of how complex or simple you want such a system for within your game) for you:\r\n\r\n(I didn't show how to adjust/change the stats for your gear, but one way would be using a Command, as I did for the viewing of your equipped gear, but it's scripting would be quite different obviously, am too lazy to show it right now)\r\n\r\n(ignore if can't understand coding yet, but try and see if it makes some sense and an idea of how to do things, hopefully... lol)\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <delegate name=\"combat_delegate\" parameters=\"self_object_parameter,enemy_object_parameter\" />\r\n\r\n  <delegate name=\"durability_delegate\" parameters=\"object_parameter\" />\r\n\r\n  <game name=\"NAME_OF_GAME\">\r\n\r\n    <attr name=\"pov\" type=\"object\">player</attr>\r\n\r\n    <attr name=\"start\" type=\"script\">\r\n\r\n      rundelegate (combat_object, \"combat_script_attribute\", game.pov, orc_object)\r\n\r\n    </attr>\r\n\r\n  </game>\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <object name=\"player\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n    <attr name=\"weapon_object_attribute\" type=\"object\">unarmed_object</attr>\r\n\r\n    <attr name=\"armor_object_attribute\" type=\"object\">unarmored_object</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"orc_object\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n    <attr name=\"alias\" type=\"string\">orc</attr>\r\n\r\n    <attr name=\"strength_integer_attribute\" type=\"int\">25</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"unarmed_object\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n    <attr name=\"alias\" type=\"string\">unarmed</attr>\r\n\r\n    <attr name=\"equipped\" type=\"boolean\">true</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"unarmored_object\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">player</attr>\r\n\r\n    <attr name=\"alias\" type=\"string\">unarmored</attr>\r\n\r\n    <attr name=\"equipped\" type=\"boolean\">true</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"power_armor_object\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <inherit name=\"armor_type\" />\r\n\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n    <attr name=\"alias\" type=\"string\">power armor</attr>\r\n\r\n    <attr name=\"equipped\" type=\"boolean\">false</attr>\r\n\r\n    <attr name=\"durability_integer_attribute\" type=\"int\">100</attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"equipment_object\">\r\n\r\n    <inherit name=\"editor_object\" />\r\n\r\n    <attr name=\"maximum_durability_integer_attribute\" type=\"int\">100</attr>\r\n    <attr name=\"minimum_durability_integer_attribute\" type=\"int\">0</attr>\r\n\r\n    <attr name=\"durability_script_attribute\" type=\"durability_delegate\">\r\n\r\n      if (object_parameter.durability_integer_attribute > this.maximum_durability_integer_attribute) {\r\n\r\n        object_parameter.durability_integer_attribute = this.maximum_durability_integer_attribute\r\n\r\n      } else if (object_parameter.durability_integer_attribute < this.minimum_durability_integer_attribute) {\r\n\r\n        object_parameter.durability_integer_attribute = this.minimum_durability_integer_attribute\r\n\r\n      }\r\n\r\n      if (object_parameter.durability_integer_attribute = 0) {\r\n\r\n        object_parameter.equipped = false\r\n\r\n        if (DoesInherit (object_parameter, \"weapon_type\")) {\r\n\r\n          game.pov.weapon_object_attribute = unarmed_object\r\n\r\n        } else if (DoesInherit (object_parameter, \"armor_type\")) {\r\n\r\n          gam.pov.armor_object_attribute = unarmored_object\r\n\r\n        }\r\n\r\n      }\r\n\r\n    </attr>\r\n\r\n  </object>\r\n\r\n  <object name=\"combat_object\">\r\n\r\n    <attr name=\"combat_script_attribute\" type=\"combat_delegate\">\r\n\r\n      // example simple scripting:\r\n\r\n      self_object_parameter.armor_object_attribute.durability_integer_attribute = self_object_parameter.armor_object_attribute.durability_integer_attribute - enemy_object_parameter.strength_integer_attribute\r\n\r\n    </attr>\r\n\r\n  </object>\r\n\r\n  <type name=\"weapon_type\">\r\n\r\n    <inherit name=\"equipment_type\" />\r\n\r\n  </type>\r\n\r\n  <type name=\"armor_type\">\r\n\r\n    <inherit name=\"equipment_type\" />\r\n\r\n  </type>\r\n\r\n  <type name=\"equipment_type\">\r\n\r\n    <attr name=\"changeddurability_integer_attribute\" type=\"script\">\r\n\r\n      rundelegate (equipment_object, \"durability_script_attribute\", this)\r\n\r\n    </attr>\r\n\r\n  </type>\r\n\r\n  <command name=\"view_equipped_command\">\r\n\r\n    <pattern>view #text#;view;v</pattern>\r\n\r\n    <script>\r\n\r\n      // (I forgot to handle for if text = null, aka, if they just used 'view' or 'v' for the Command input/pattern, but am too lazy to go back and do it now, lol)\r\n\r\n      object_variable_1 = GetObject (text)\r\n\r\n      if (object_variable_1 = null or not object_variable_1.equipped) {\r\n\r\n        foreach (object_variable_2, ScopeInventory ()) {\r\n\r\n          if (object_variable_2.equipped and object_variable_2.alias = text) {\r\n\r\n            object_variable_1 = object_variable_2\r\n\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n      if (object_variable_1 = null) {\r\n\r\n        msg (\"ERROR: wrong input, either: input isn't equipped or input doesn't exist within the game\")\r\n\r\n      } else {\r\n\r\n        msg (object_variable_1.name)\r\n        msg (object_variable_1.alias)\r\n        msg (object_variable_1.durability_integer_attribute)\r\n\r\n      }\r\n\r\n    </script>\r\n\r\n  </command>\r\n\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>here's a \"quick simple\" example (not remotely complete though, and: RPG functionality/mechanic systems, like equipment, items, combat, magic, stealth, diplomacy/dialogue, and etc, are complex, regardless of how complex or simple you want such a system for within your game) for you:</p>\n<p>(I didn't show how to adjust/change the stats for your gear, but one way would be using a Command, as I did for the viewing of your equipped gear, but it's scripting would be quite different obviously, am too lazy to show it right now)</p>\n<p>(ignore if can't understand coding yet, but try and see if it makes some sense and an idea of how to do things, hopefully... lol)</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;delegate name=\"combat_delegate\" parameters=\"self_object_parameter,enemy_object_parameter\" /&gt;\n\n  &lt;delegate name=\"durability_delegate\" parameters=\"object_parameter\" /&gt;\n\n  &lt;game name=\"NAME_OF_GAME\"&gt;\n\n    &lt;attr name=\"pov\" type=\"object\"&gt;player&lt;/attr&gt;\n\n    &lt;attr name=\"start\" type=\"script\"&gt;\n\n      rundelegate (combat_object, \"combat_script_attribute\", game.pov, orc_object)\n\n    &lt;/attr&gt;\n\n  &lt;/game&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"player\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n    &lt;attr name=\"weapon_object_attribute\" type=\"object\"&gt;unarmed_object&lt;/attr&gt;\n\n    &lt;attr name=\"armor_object_attribute\" type=\"object\"&gt;unarmored_object&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"orc_object\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n    &lt;attr name=\"alias\" type=\"string\"&gt;orc&lt;/attr&gt;\n\n    &lt;attr name=\"strength_integer_attribute\" type=\"int\"&gt;25&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"unarmed_object\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n    &lt;attr name=\"alias\" type=\"string\"&gt;unarmed&lt;/attr&gt;\n\n    &lt;attr name=\"equipped\" type=\"boolean\"&gt;true&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"unarmored_object\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;player&lt;/attr&gt;\n\n    &lt;attr name=\"alias\" type=\"string\"&gt;unarmored&lt;/attr&gt;\n\n    &lt;attr name=\"equipped\" type=\"boolean\"&gt;true&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"power_armor_object\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;inherit name=\"armor_type\" /&gt;\n\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n    &lt;attr name=\"alias\" type=\"string\"&gt;power armor&lt;/attr&gt;\n\n    &lt;attr name=\"equipped\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n    &lt;attr name=\"durability_integer_attribute\" type=\"int\"&gt;100&lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"equipment_object\"&gt;\n\n    &lt;inherit name=\"editor_object\" /&gt;\n\n    &lt;attr name=\"maximum_durability_integer_attribute\" type=\"int\"&gt;100&lt;/attr&gt;\n    &lt;attr name=\"minimum_durability_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n    &lt;attr name=\"durability_script_attribute\" type=\"durability_delegate\"&gt;\n\n      if (object_parameter.durability_integer_attribute &gt; this.maximum_durability_integer_attribute) {\n\n        object_parameter.durability_integer_attribute = this.maximum_durability_integer_attribute\n\n      } else if (object_parameter.durability_integer_attribute &lt; this.minimum_durability_integer_attribute) {\n\n        object_parameter.durability_integer_attribute = this.minimum_durability_integer_attribute\n\n      }\n\n      if (object_parameter.durability_integer_attribute = 0) {\n\n        object_parameter.equipped = false\n\n        if (DoesInherit (object_parameter, \"weapon_type\")) {\n\n          game.pov.weapon_object_attribute = unarmed_object\n\n        } else if (DoesInherit (object_parameter, \"armor_type\")) {\n\n          gam.pov.armor_object_attribute = unarmored_object\n\n        }\n\n      }\n\n    &lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"combat_object\"&gt;\n\n    &lt;attr name=\"combat_script_attribute\" type=\"combat_delegate\"&gt;\n\n      // example simple scripting:\n\n      self_object_parameter.armor_object_attribute.durability_integer_attribute = self_object_parameter.armor_object_attribute.durability_integer_attribute - enemy_object_parameter.strength_integer_attribute\n\n    &lt;/attr&gt;\n\n  &lt;/object&gt;\n\n  &lt;type name=\"weapon_type\"&gt;\n\n    &lt;inherit name=\"equipment_type\" /&gt;\n\n  &lt;/type&gt;\n\n  &lt;type name=\"armor_type\"&gt;\n\n    &lt;inherit name=\"equipment_type\" /&gt;\n\n  &lt;/type&gt;\n\n  &lt;type name=\"equipment_type\"&gt;\n\n    &lt;attr name=\"changeddurability_integer_attribute\" type=\"script\"&gt;\n\n      rundelegate (equipment_object, \"durability_script_attribute\", this)\n\n    &lt;/attr&gt;\n\n  &lt;/type&gt;\n\n  &lt;command name=\"view_equipped_command\"&gt;\n\n    &lt;pattern&gt;view #text#;view;v&lt;/pattern&gt;\n\n    &lt;script&gt;\n\n      // (I forgot to handle for if text = null, aka, if they just used 'view' or 'v' for the Command input/pattern, but am too lazy to go back and do it now, lol)\n\n      object_variable_1 = GetObject (text)\n\n      if (object_variable_1 = null or not object_variable_1.equipped) {\n\n        foreach (object_variable_2, ScopeInventory ()) {\n\n          if (object_variable_2.equipped and object_variable_2.alias = text) {\n\n            object_variable_1 = object_variable_2\n\n          }\n\n        }\n\n      }\n\n      if (object_variable_1 = null) {\n\n        msg (\"ERROR: wrong input, either: input isn't equipped or input doesn't exist within the game\")\n\n      } else {\n\n        msg (object_variable_1.name)\n        msg (object_variable_1.alias)\n        msg (object_variable_1.durability_integer_attribute)\n\n      }\n\n    &lt;/script&gt;\n\n  &lt;/command&gt;\n\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2019-10-26T07:51:18.1925132Z",
      "LastEditDate": "2019-10-26T08:09:29.5590731Z",
      "link": null
    },
    {
      "PostId": "529ca4e2-dc48-4914-b9d5-4433464f5915",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@GC2, one way to do this is give the player an Object attribute named 'Armor'. Or, if you have multiple pieces of armor, separate object attributes called 'HeadArmor', 'ChestArmor' etc.\r\n\r\nAnd when you equip an armor:\r\n```\r\nPlayer.HeadArmor=SomeArmorObject\r\n```\r\nAnd, when the player gets hit, you can check for their armor. Note, you can do attributes INSIDE attributes, like so:\r\n```\r\nPlayer.HeadArmor.Durability=Player.HeadArmor.Durability-1\r\nif Player.HeadArmor.Durability<=0{\r\n//Do Armor Destruction Stuff\r\n}\r\n```\r\nThe caveat with this method is you need a 'null' object, a NoArmor object that's slotted in by default and can't be destroyed, unless Armor with 0 durability is simply rendered _useless_, not destroyed.",
      "EditableFormat": "markdown",
      "HTML": "<p>@GC2, one way to do this is give the player an Object attribute named 'Armor'. Or, if you have multiple pieces of armor, separate object attributes called 'HeadArmor', 'ChestArmor' etc.</p>\n<p>And when you equip an armor:</p>\n<pre><code>Player.HeadArmor=SomeArmorObject\n</code></pre>\n<p>And, when the player gets hit, you can check for their armor. Note, you can do attributes INSIDE attributes, like so:</p>\n<pre><code>Player.HeadArmor.Durability=Player.HeadArmor.Durability-1\nif Player.HeadArmor.Durability&lt;=0{\n//Do Armor Destruction Stuff\n}\n</code></pre>\n<p>The caveat with this method is you need a 'null' object, a NoArmor object that's slotted in by default and can't be destroyed, unless Armor with 0 durability is simply rendered <em>useless</em>, not destroyed.</p>\n\n",
      "PostDate": "2019-10-26T12:12:19.955555Z",
      "LastEditDate": "2019-10-26T12:15:00.511646Z",
      "link": null
    },
    {
      "PostId": "8b9b5fae-baea-4aa1-bb85-f3b7eaaa5c07",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're using the standard \"wearables\" system for armour, then you can check the `worn` attribute to find all the items the player is currently wearing.\r\n\r\nSo I'd end up using a script like this when the player takes damage:\r\n\r\n```\r\narmour = 0\r\nforeach (obj, GetDirectChildren(game.pov)) {\r\n  if (GetBoolean (obj, \"worn\")) {\r\n    if (HasInt (obj, \"armourvalue\")) {\r\n      armour = armour + obj.armourvalue\r\n      obj.durability = obj.durability - 1\r\n    }\r\n  }\r\n}\r\n// The variable \"armour\" now contains the total armour value of all the armour the player is wearing\r\n// so we use that to calculate damage\r\n```\r\nThat will reduce the durability of your armour by 1 point each time the player is hit. And then you give the armour a `changeddurability` script attribute:\r\n```\r\nif (this.durability <= 0) {\r\n  if (GetBoolean (this, \"worn\")) {\r\n    RemoveGarment (this)\r\n  }\r\n  msg (\"Your \"+GetDisplayName(this)+\" has broken!\")\r\n}\r\n```\r\nThat would cause the item to be removed once its durability hits zero. If you want the armour to be destroyed, then you can just add the line `RemoveObject (this)`; otherwise it would remain in the player's inventory (maybe they can take it to a shop to be repaired; or they can still sell it for scrap?). And then to make sure they don't just put it on again you'd create a function:\r\n```\r\n<function name=\"TestGarment\" parameters=\"garment\" type=\"boolean\">\r\n  if (HasInt (garment, \"durability\")) {\r\n    if (garment.durability <= 0) {\r\n      msg (\"You need to repair that before you can wear it again.\")\r\n      return (false)\r\n    }\r\n  }\r\n  return (true)\r\n</function>\r\n```\r\nOr if broken armour can be sold for scrap but can't be repaired, then in the `changeddurability` script you would do something like `this.alias = \"Broken \" + GetDisplayAlias(this)` and `this.worn = null`.\r\n(`worn` is null for non-wearable objects)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're using the standard \"wearables\" system for armour, then you can check the <code>worn</code> attribute to find all the items the player is currently wearing.</p>\n<p>So I'd end up using a script like this when the player takes damage:</p>\n<pre><code>armour = 0\nforeach (obj, GetDirectChildren(game.pov)) {\n  if (GetBoolean (obj, \"worn\")) {\n    if (HasInt (obj, \"armourvalue\")) {\n      armour = armour + obj.armourvalue\n      obj.durability = obj.durability - 1\n    }\n  }\n}\n// The variable \"armour\" now contains the total armour value of all the armour the player is wearing\n// so we use that to calculate damage\n</code></pre>\n<p>That will reduce the durability of your armour by 1 point each time the player is hit. And then you give the armour a <code>changeddurability</code> script attribute:</p>\n<pre><code>if (this.durability &lt;= 0) {\n  if (GetBoolean (this, \"worn\")) {\n    RemoveGarment (this)\n  }\n  msg (\"Your \"+GetDisplayName(this)+\" has broken!\")\n}\n</code></pre>\n<p>That would cause the item to be removed once its durability hits zero. If you want the armour to be destroyed, then you can just add the line <code>RemoveObject (this)</code>; otherwise it would remain in the player's inventory (maybe they can take it to a shop to be repaired; or they can still sell it for scrap?). And then to make sure they don't just put it on again you'd create a function:</p>\n<pre><code>&lt;function name=\"TestGarment\" parameters=\"garment\" type=\"boolean\"&gt;\n  if (HasInt (garment, \"durability\")) {\n    if (garment.durability &lt;= 0) {\n      msg (\"You need to repair that before you can wear it again.\")\n      return (false)\n    }\n  }\n  return (true)\n&lt;/function&gt;\n</code></pre>\n<p>Or if broken armour can be sold for scrap but can't be repaired, then in the <code>changeddurability</code> script you would do something like <code>this.alias = \"Broken \" + GetDisplayAlias(this)</code> and <code>this.worn = null</code>.<br>\n(<code>worn</code> is null for non-wearable objects)</p>\n\n",
      "PostDate": "2019-10-26T12:53:42.8221799Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
