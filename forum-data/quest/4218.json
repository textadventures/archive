{
  "Topic": {
    "TopicId": "4218",
    "ForumId": "10",
    "Title": "Checking if a file exists?",
    "LastUpdated": "2014-03-05T15:45:52+00:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "28046",
      "UserId": 0,
      "Username": "GiantAngryBoar",
      "UserAvatar": null,
      "UserGravatar": "b31d3dd92ec5c1dd33a0bec17fbf0c81",
      "EditableText": "Hey, all,\n\nI'm working on a game that's slated to be a bit heavy on the graphics and sound side of things. In particular, I intend to have an image and a musical track for every room, and for each object, an image for taking it, and an image for examining it. In order to cut back on quite a few manual &quot;play sound&quot; and &quot;picture&quot; function calls, I overrode various functions from the core library, so that in addition to doing what they usually do, they will also automatically generate .wav and .png filenames from object names and then attempt to present them.\n\nMy problem is I'm not absolutely sure I'm going to want to have a sound and a picture for every single room or object. And even if I will, until I do, it would be helpful for testing purposes if I could run the game without various media files that may still be in the works and not be presented with an error informing me they don't exist.\n\nAs such, I'm wondering if there's any way to test for file existence in Quest. Let's say such a function were called &quot;file exists.&quot; Then consider the following:\n[code:1ansaa1z]play sound (object&#46;name + &quot;&#46;wav&quot;)[/code:1ansaa1z]\nIf object doesn't have an associated sound file, this would give us an error.\n[code:1ansaa1z]if (file exists (object&#46;name + &quot;&#46;wav&quot;)) {\n   play sound (object&#46;name + &quot;&#46;wav&quot;)\n}[/code:1ansaa1z]\nThis code, however, would not, which is what I want.\n\nIs there any such function, or any way to implement one?\n\nThanks in advance",
      "EditableFormat": "bbcode",
      "HTML": "Hey, all,<br/><br/>I'm working on a game that's slated to be a bit heavy on the graphics and sound side of things. In particular, I intend to have an image and a musical track for every room, and for each object, an image for taking it, and an image for examining it. In order to cut back on quite a few manual &quot;play sound&quot; and &quot;picture&quot; function calls, I overrode various functions from the core library, so that in addition to doing what they usually do, they will also automatically generate .wav and .png filenames from object names and then attempt to present them.<br/><br/>My problem is I'm not absolutely sure I'm going to want to have a sound and a picture for every single room or object. And even if I will, until I do, it would be helpful for testing purposes if I could run the game without various media files that may still be in the works and not be presented with an error informing me they don't exist.<br/><br/>As such, I'm wondering if there's any way to test for file existence in Quest. Let's say such a function were called &quot;file exists.&quot; Then consider the following:<br/><pre><code>play sound (object&#46;name + &quot;&#46;wav&quot;)</code></pre><br/>If object doesn't have an associated sound file, this would give us an error.<br/><pre><code>if (file exists (object&#46;name + &quot;&#46;wav&quot;)) {<br/>   play sound (object&#46;name + &quot;&#46;wav&quot;)<br/>}</code></pre><br/>This code, however, would not, which is what I want.<br/><br/>Is there any such function, or any way to implement one?<br/><br/>Thanks in advance",
      "PostDate": "2014-03-05T05:09:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28047",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not sure on this, as I've not worked with media files yet... but let me take a stab at it anyways, lol\n\n1. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n2. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\n3. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileData\">http://quest5.net/wiki/GetFileData</a><!-- m -->\n\n4. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m -->\n5. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/IsDefined\">http://quest5.net/wiki/IsDefined</a><!-- m -->\n\nfor #3 (GetFileData):\n\nif (GetFileData (object.name + &quot;.wav&quot;)) { // or: if (GetFileData (object.name + &quot;.jpg&quot;)) // or whatever picture (or sound too) file entension (that can work with quest), just used &quot;.jpg&quot; as an example\n-&gt; play sound (object.name + &quot;.wav&quot;) // or: picture (object.name + &quot;.jpg&quot;) // or whatever picture (or sound too) file entension (that can work with quest), just used &quot;.jpg&quot; as an example\n}\n\nsame format for #4 and #5 too, just change the &quot;if (.....)&quot; syntax for the &quot;HasAttribute&quot; or &quot;IsDefined&quot;\n\n----------\n\nHK Edit:\n\nactually, I don't think the &quot;GetFileData&quot; works... so try:\n\n4. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m -->\n5. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/IsDefined\">http://quest5.net/wiki/IsDefined</a><!-- m -->\nand\n*6. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetObject\">http://quest5.net/wiki/GetObject</a><!-- m -->\n7. (Maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasObject\">http://quest5.net/wiki/HasObject</a><!-- m -->\n\nI think #6 (GetObject) is probably what you want, do the same format as  shown for &quot;GetFileData&quot;, but change the syntax, of course.",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure on this, as I've not worked with media files yet... but let me take a stab at it anyways, lol<br/><br/>1. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/>2. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=Set#mw-pages\">http://quest5.net/w/index.php?title=Cat ... t#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>3. <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileData\">http://quest5.net/wiki/GetFileData</a><!-- m --><br/><br/>4. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m --><br/>5. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/IsDefined\">http://quest5.net/wiki/IsDefined</a><!-- m --><br/><br/>for #3 (GetFileData):<br/><br/>if (GetFileData (object.name + &quot;.wav&quot;)) { // or: if (GetFileData (object.name + &quot;.jpg&quot;)) // or whatever picture (or sound too) file entension (that can work with quest), just used &quot;.jpg&quot; as an example<br/>-&gt; play sound (object.name + &quot;.wav&quot;) // or: picture (object.name + &quot;.jpg&quot;) // or whatever picture (or sound too) file entension (that can work with quest), just used &quot;.jpg&quot; as an example<br/>}<br/><br/>same format for #4 and #5 too, just change the &quot;if (.....)&quot; syntax for the &quot;HasAttribute&quot; or &quot;IsDefined&quot;<br/><br/>----------<br/><br/>HK Edit:<br/><br/>actually, I don't think the &quot;GetFileData&quot; works... so try:<br/><br/>4. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasAttribute\">http://quest5.net/wiki/HasAttribute</a><!-- m --><br/>5. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/IsDefined\">http://quest5.net/wiki/IsDefined</a><!-- m --><br/>and<br/>*6. (maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetObject\">http://quest5.net/wiki/GetObject</a><!-- m --><br/>7. (Maybe) <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/HasObject\">http://quest5.net/wiki/HasObject</a><!-- m --><br/><br/>I think #6 (GetObject) is probably what you want, do the same format as  shown for &quot;GetFileData&quot;, but change the syntax, of course.",
      "PostDate": "2014-03-05T05:31:02+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28048",
      "UserId": 0,
      "Username": "GiantAngryBoar",
      "UserAvatar": null,
      "UserGravatar": "b31d3dd92ec5c1dd33a0bec17fbf0c81",
      "EditableText": "Shoot, you had me going there! Looks like GetFileData returns a string, and throws an error if the file doesn't exist. HasAttribute and IsDefined didn't seem to work either. They seem to be for checking if something exists in the program namespace, not in the filesystem.\n\nHm, but I think we're close with GetFileData. Maybe if I can find what library it's defined in, I can take a closer look at it and see how it figures out to throw that error. Thanks for the lead.\n\nEDIT: Say, you wouldn't happen to know where GetFileData is defined, would you? I can't find it in any of the libraries so far.",
      "EditableFormat": "bbcode",
      "HTML": "Shoot, you had me going there! Looks like GetFileData returns a string, and throws an error if the file doesn't exist. HasAttribute and IsDefined didn't seem to work either. They seem to be for checking if something exists in the program namespace, not in the filesystem.<br/><br/>Hm, but I think we're close with GetFileData. Maybe if I can find what library it's defined in, I can take a closer look at it and see how it figures out to throw that error. Thanks for the lead.<br/><br/>EDIT: Say, you wouldn't happen to know where GetFileData is defined, would you? I can't find it in any of the libraries so far.",
      "PostDate": "2014-03-05T05:41:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28049",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "edited my previous post (sorry, bad habit of mine)\n\nI think &quot;GetObject&quot; or &quot;HasObject&quot;, will work, now that I think I understand that the media files are put into quest as Objects (Object.name + &quot;.extension_name&quot;)\n\n&quot;GetObject&quot; (&quot;Get&quot;) is more direct (in checking if it exists and returns the object for scripting upon it ~ if it exists of course) than &quot;HasObject&quot; (&quot;Has&quot;) which just checks if it exists or not (&quot;=true&quot; or &quot;=false&quot;):\n\nexists = returns Object (true)\nnot exists = null (false ~ similiar to an &quot;error&quot; return)\n\nif (GetObject (Object)) { // the quest engine understands that it is &quot;=true&quot;, so you don't need to write it in\n-&gt; then do script\nelse { // the quest engine understands that it is &quot;=false&quot; (as it's &quot;null&quot; ~ not exists), so you don't need to write it in\n-&gt; then do script\n}\n\n------\n\nI'm not sure where it would be... sorry\n\njust keep looking through all the library~game files (quest files: *.aslx)\n\nor\n\nyou can open up quest in the GUI~Editor, and in the lower left:\n\nFilter -&gt; Show Library Elements -&gt; check it on\n\nwhat this does is shows now all the built-in code (same stuff as the quest files) in the 'tree of stuff' above, as the greyed font color, which you can then click on, and modify it (though do note that this is global built-in code, so make sure that it'll work) ~ and doing it this way is safe, as you got to click on the &quot;copy&quot; button on the right side, which protects the quest engine (so you don't mess it up, having to re-download quest), as opposed to editing the actual quest files themselves (possibly making the stupid mistake of not backing them up first ~ aka not editing a self-copy~copied file).",
      "EditableFormat": "bbcode",
      "HTML": "edited my previous post (sorry, bad habit of mine)<br/><br/>I think &quot;GetObject&quot; or &quot;HasObject&quot;, will work, now that I think I understand that the media files are put into quest as Objects (Object.name + &quot;.extension_name&quot;)<br/><br/>&quot;GetObject&quot; (&quot;Get&quot;) is more direct (in checking if it exists and returns the object for scripting upon it ~ if it exists of course) than &quot;HasObject&quot; (&quot;Has&quot;) which just checks if it exists or not (&quot;=true&quot; or &quot;=false&quot;):<br/><br/>exists = returns Object (true)<br/>not exists = null (false ~ similiar to an &quot;error&quot; return)<br/><br/>if (GetObject (Object)) { // the quest engine understands that it is &quot;=true&quot;, so you don't need to write it in<br/>-&gt; then do script<br/>else { // the quest engine understands that it is &quot;=false&quot; (as it's &quot;null&quot; ~ not exists), so you don't need to write it in<br/>-&gt; then do script<br/>}<br/><br/>------<br/><br/>I'm not sure where it would be... sorry<br/><br/>just keep looking through all the library~game files (quest files: *.aslx)<br/><br/>or<br/><br/>you can open up quest in the GUI~Editor, and in the lower left:<br/><br/>Filter -&gt; Show Library Elements -&gt; check it on<br/><br/>what this does is shows now all the built-in code (same stuff as the quest files) in the 'tree of stuff' above, as the greyed font color, which you can then click on, and modify it (though do note that this is global built-in code, so make sure that it'll work) ~ and doing it this way is safe, as you got to click on the &quot;copy&quot; button on the right side, which protects the quest engine (so you don't mess it up, having to re-download quest), as opposed to editing the actual quest files themselves (possibly making the stupid mistake of not backing them up first ~ aka not editing a self-copy~copied file).",
      "PostDate": "2014-03-05T05:51:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28050",
      "UserId": 0,
      "Username": "GiantAngryBoar",
      "UserAvatar": null,
      "UserGravatar": "b31d3dd92ec5c1dd33a0bec17fbf0c81",
      "EditableText": "My god, thank you, this is amazing! This is exactly everything I need!\n... Except that GetFileData still doesn't show up.\nI just don't even.\n\nAlso, my bad, I'm not sure I'm understanding what you mean by media files being put into Quest as objects, but I think I may have misled you. Loading a media file into Quest doesn't create an object. Rather, I already have an object, such as a cactus, and I have it set up so that the already existing object looks for a file called cactus.png when the player examines it. So checking if &quot;cactus&quot; is defined or has an attribute won't help me, because I already know the object exists, but even if the object exists, I still can't guarantee that the [i:9iqdqz12]file[/i:9iqdqz12] exists.",
      "EditableFormat": "bbcode",
      "HTML": "My god, thank you, this is amazing! This is exactly everything I need!<br/>... Except that GetFileData still doesn't show up.<br/>I just don't even.<br/><br/>Also, my bad, I'm not sure I'm understanding what you mean by media files being put into Quest as objects, but I think I may have misled you. Loading a media file into Quest doesn't create an object. Rather, I already have an object, such as a cactus, and I have it set up so that the already existing object looks for a file called cactus.png when the player examines it. So checking if &quot;cactus&quot; is defined or has an attribute won't help me, because I already know the object exists, but even if the object exists, I still can't guarantee that the <span style=\"font-style:italic;\">file</span> exists.",
      "PostDate": "2014-03-05T06:04:50+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28051",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "hmm... maybe then you got to use the &quot;GetFileData&quot; combined with the &quot;GetObject&quot;:\n\nand also...\n\nsorry, for not adding this in previously... maybe by doing this &quot;string matching&quot; of the GetFileData, it'll get the result that you want....\n\nif (GetFileData (cactus.png) = &quot;cactus.png&quot;) {\n-&gt; GetObject (cactus_object) {\n-&gt; // whatever script you want to do with your cactus (object), ie: picture (cactus_object.cactus.png)\n} else if (GetFileData (cactus.png) = null) {\n-&gt; // whatever script\n}",
      "EditableFormat": "bbcode",
      "HTML": "hmm... maybe then you got to use the &quot;GetFileData&quot; combined with the &quot;GetObject&quot;:<br/><br/>and also...<br/><br/>sorry, for not adding this in previously... maybe by doing this &quot;string matching&quot; of the GetFileData, it'll get the result that you want....<br/><br/>if (GetFileData (cactus.png) = &quot;cactus.png&quot;) {<br/>-&gt; GetObject (cactus_object) {<br/>-&gt; // whatever script you want to do with your cactus (object), ie: picture (cactus_object.cactus.png)<br/>} else if (GetFileData (cactus.png) = null) {<br/>-&gt; // whatever script<br/>",
      "PostDate": "2014-03-05T06:09:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28052",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "otherwise, quest jsut may not be able to check if a file exists or not...\n\nyou may have to make~write the code for checking if the file exists outside of quest, such as a *.bat file... and then, whether quest can get the *.bat file and (and~or the computer can then within quest) run those code lines...\n\n-----------\n\nactually, this *SHOULD* (HK crosses his fingers) work:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileURL\">http://quest5.net/wiki/GetFileURL</a><!-- m -->\n\n[quote=&quot;wiki&quot;:2mtthk3d]Returns a string containing the full path to the specified file. The file must exist in the same directory as the game.\n\n[b:2mtthk3d][u:2mtthk3d]This can be used to access a game's resources such as sounds and pictures, and pass their URLs to the player UI.[/u:2mtthk3d][/b:2mtthk3d]\n(HK comment: this hopefully is our means of &quot;checking if a file exists or not&quot;, via &quot;getting the file's actual file path on your computer&quot;)[/quote:2mtthk3d]\n\nif (GetFileURL (cactus.png) = &quot;your_file_path&quot;) {\n... yada yada yada\n\n&quot;your_file_path&quot;, ie:\n\n&quot;c:/programs/quest/cactus.png&quot;\n\nif (GetFileURL (cactus.png) = &quot;c:/programs/quest/cactus.png&quot;) {\n... yada yada yada\n\n&quot;GetFileURL (cactus.png)&quot; if I understand it right, returns the file path, so now we got a &quot;checking of the file&quot;, and just need to then &quot;check string match&quot; it:\n\nconceptual: if (string = string) {\nif (GetFileURL (cactus.png) = &quot;c:/programs/quest/cactus.png&quot;) {\nconceptual: GetFileURL (cactus.png) automatically returns~outputs~algebraic substitutes for you: &quot;c:/programs/quest/cactus.png&quot;\nconceptual: if (&quot;c:/programs/quest/cactus.png&quot; = &quot;c:/programs/quest/cactus.png&quot;) {\n\n----------\n\nP.S.\n\nsorry that I until now, passed over the &quot;GetFileURL&quot;, as I wrongly thought it had to do with website's url~address... like to get the picture or sound from the internet's webpage, oopsy! my bad for not looking at &quot;GetFileURL&quot; sooner.",
      "EditableFormat": "bbcode",
      "HTML": "otherwise, quest jsut may not be able to check if a file exists or not...<br/><br/>you may have to make~write the code for checking if the file exists outside of quest, such as a *.bat file... and then, whether quest can get the *.bat file and (and~or the computer can then within quest) run those code lines...<br/><br/>-----------<br/><br/>actually, this *SHOULD* (HK crosses his fingers) work:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileURL\">http://quest5.net/wiki/GetFileURL</a><!-- m --><br/><br/><blockquote><cite>wiki wrote:</cite>Returns a string containing the full path to the specified file. The file must exist in the same directory as the game.<br/><br/><span style=\"font-weight:bold;\"><span style=\"text-decoration:underline;\">This can be used to access a game's resources such as sounds and pictures, and pass their URLs to the player UI.</span></span><br/>(HK comment: this hopefully is our means of &quot;checking if a file exists or not&quot;, via &quot;getting the file's actual file path on your computer&quot;)</blockquote><br/><br/>if (GetFileURL (cactus.png) = &quot;your_file_path&quot;) {<br/>... yada yada yada<br/><br/>&quot;your_file_path&quot;, ie:<br/><br/>&quot;c:/programs/quest/cactus.png&quot;<br/><br/>if (GetFileURL (cactus.png) = &quot;c:/programs/quest/cactus.png&quot;) {<br/>... yada yada yada<br/><br/>&quot;GetFileURL (cactus.png)&quot; if I understand it right, returns the file path, so now we got a &quot;checking of the file&quot;, and just need to then &quot;check string match&quot; it:<br/><br/>conceptual: if (string = string) {<br/>if (GetFileURL (cactus.png) = &quot;c:/programs/quest/cactus.png&quot;) {<br/>conceptual: GetFileURL (cactus.png) automatically returns~outputs~algebraic substitutes for you: &quot;c:/programs/quest/cactus.png&quot;<br/>conceptual: if (&quot;c:/programs/quest/cactus.png&quot; = &quot;c:/programs/quest/cactus.png&quot;) {<br/><br/>----------<br/><br/>P.S.<br/><br/>sorry that I until now, passed over the &quot;GetFileURL&quot;, as I wrongly thought it had to do with website's url~address... like to get the picture or sound from the internet's webpage, oopsy! my bad for not looking at &quot;GetFileURL&quot; sooner.",
      "PostDate": "2014-03-05T06:23:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28053",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I'm not sure if this is really possible in the way that you're describing. GetFileData is defined here, \n\n<!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/SourceControl/latest#WorldModel/WorldModel/Functions/ExpressionOwner.cs\">http://quest.codeplex.com/SourceControl ... onOwner.cs</a><!-- m -->\n\nIn that same file is GetFileURL, which seems a more promising function to use. (see the wiki entry here <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileURL\">http://quest5.net/wiki/GetFileURL</a><!-- m --> ).\n\nBut the error checking on both those functions isn't very useful. For example you can pass almost any string to GetFileURL and get back a path (a bogus path if the file isn't there). \n\nI do see a possible workaround, but it'll require external tools. What you do is create a script (not a Quest script -- you could use Python for example) in your game directory that will find every picture and image file and print the name to a text file. Then in Quest you load [i:28bnr2ic]that[/i:28bnr2ic] file with GetFileData. Now you have an up-to-date list of every media file that currently exists in your game. You can check that list before you play a media file, and if the file name isn't in your list, you don't try to play the sound or show the image.\n\n[b:28bnr2ic]edit[/b:28bnr2ic]: cross-posted with HK's last post",
      "EditableFormat": "bbcode",
      "HTML": "I'm not sure if this is really possible in the way that you're describing. GetFileData is defined here, <br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/SourceControl/latest#WorldModel/WorldModel/Functions/ExpressionOwner.cs\">http://quest.codeplex.com/SourceControl ... onOwner.cs</a><!-- m --><br/><br/>In that same file is GetFileURL, which seems a more promising function to use. (see the wiki entry here <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetFileURL\">http://quest5.net/wiki/GetFileURL</a><!-- m --> ).<br/><br/>But the error checking on both those functions isn't very useful. For example you can pass almost any string to GetFileURL and get back a path (a bogus path if the file isn't there). <br/><br/>I do see a possible workaround, but it'll require external tools. What you do is create a script (not a Quest script -- you could use Python for example) in your game directory that will find every picture and image file and print the name to a text file. Then in Quest you load <span style=\"font-style:italic;\">that</span> file with GetFileData. Now you have an up-to-date list of every media file that currently exists in your game. You can check that list before you play a media file, and if the file name isn't in your list, you don't try to play the sound or show the image.<br/><br/><span style=\"font-weight:bold;\">edit</span>: cross-posted with HK's last post",
      "PostDate": "2014-03-05T07:04:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28054",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "your workaround of generating a file list is still useful though too, as it reduces the amount of coding you'd need to do:\n\nie, not fun doing:\n\nif (GetFileURL (file1) = &quot;path1&quot;) {\nif (GetFileURL (file2) = &quot;path2&quot;) {\nif (GetFileURL (file3) = &quot;path3&quot;) {\nif (GetFileURL (file4) = &quot;path4&quot;) {\nif (GetFileURL (file5) = &quot;path5&quot;) {\nif (GetFileURL (file6) = &quot;path6&quot;) {\nif (GetFileURL (file7) = &quot;path7&quot;) {\nif (GetFileURL (file8) = &quot;path8&quot;) {\netc etc etc",
      "EditableFormat": "bbcode",
      "HTML": "your workaround of generating a file list is still useful though too, as it reduces the amount of coding you'd need to do:<br/><br/>ie, not fun doing:<br/><br/>if (GetFileURL (file1) = &quot;path1&quot;) {<br/>if (GetFileURL (file2) = &quot;path2&quot;) {<br/>if (GetFileURL (file3) = &quot;path3&quot;) {<br/>if (GetFileURL (file4) = &quot;path4&quot;) {<br/>if (GetFileURL (file5) = &quot;path5&quot;) {<br/>if (GetFileURL (file6) = &quot;path6&quot;) {<br/>if (GetFileURL (file7) = &quot;path7&quot;) {<br/>if (GetFileURL (file8) = &quot;path8&quot;) {<br/>etc etc etc",
      "PostDate": "2014-03-05T07:09:31+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28055",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "Perhaps HK, but it does seem like a bug that GetFileURL doesn't return a sensible error if the file isn't actually there. But maybe there's a way around this I don't know, hopefully someone else will weigh in.",
      "EditableFormat": "bbcode",
      "HTML": "Perhaps HK, but it does seem like a bug that GetFileURL doesn't return a sensible error if the file isn't actually there. But maybe there's a way around this I don't know, hopefully someone else will weigh in.",
      "PostDate": "2014-03-05T07:11:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28056",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "well the string matching check should work... albeit a bit tedius... there's maybe (or as you say, should be) another better way built-in than having to add in the string matching (though you could just add this to the built-in function itself too, I suppose, meh ~ though not sure how you could code in all the different file paths... is there a way to generate all the file paths into a list, along with generating the files themselves into a list, and then thus being able to use quest's &quot;foreach&quot; or an external coding lines of doing it?)... and~or a specific string &quot;algorithm-like parser~compiler~whatever it is called, lol&quot; for it...\n\nthere is the error ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Error\">http://quest5.net/wiki/Error</a><!-- m --> ), but you still need the coding~scripting I mention above, anyways... meh\n\nthis is way above my level of coding ability~knowledge, lol. too advanced coding for me, hehe.\n\n-----------\n\ncouldn't you just create a function:\n\nin-scripting: media_file_checking_function (&quot;cactus.png&quot;,&quot;c:/programs/quest/cactus.png&quot;) // maybe the quotes aren't needed\n\n&lt;function name=&quot;media_file_checking_function&quot; parameters=&quot;file_x,path_x&quot;&gt;\nif (GetFileURL (file_x) = path_x) {\n-&gt; // do script\nelse if (GetFileURL (file_x) = null) { // or: else if (not GetFileURL (file_x) = path_x) {\n-&gt; // do script\n}\n\nthough, this doesn't address the problem (the lack of not having a method of) generating (listing, thus iterating, thus &quot;foreach&quot; checking of) your files' paths\n\n--------\n\noooo, this actually isn't hard at all (I didn't realize this previously, lol):\n\n(well, you'll have to first figure out how to code  in using an outside list file as described by george)\n\nbut then, you'd just need to do this:\n\nforeach (file_x,your_outside_file_list) {\n-&gt; list add (global_data_object.file_path_string_list, GetFileURL (file_x))\n}\n\nforeach (path_x, global_data_object.file_path_string_list) {\n-&gt; if (path_x = &quot;file_path&quot;) {\n-&gt;-&gt; // do script\n-&gt; }\n}\n\nyou could actually also code in it to be even more functional (and more concise~condensed~efficient) too...",
      "EditableFormat": "bbcode",
      "HTML": "well the string matching check should work... albeit a bit tedius... there's maybe (or as you say, should be) another better way built-in than having to add in the string matching (though you could just add this to the built-in function itself too, I suppose, meh ~ though not sure how you could code in all the different file paths... is there a way to generate all the file paths into a list, along with generating the files themselves into a list, and then thus being able to use quest's &quot;foreach&quot; or an external coding lines of doing it?)... and~or a specific string &quot;algorithm-like parser~compiler~whatever it is called, lol&quot; for it...<br/><br/>there is the error ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Error\">http://quest5.net/wiki/Error</a><!-- m --> ), but you still need the coding~scripting I mention above, anyways... meh<br/><br/>this is way above my level of coding ability~knowledge, lol. too advanced coding for me, hehe.<br/><br/>-----------<br/><br/>couldn't you just create a function:<br/><br/>in-scripting: media_file_checking_function (&quot;cactus.png&quot;,&quot;c:/programs/quest/cactus.png&quot;) // maybe the quotes aren't needed<br/><br/>&lt;function name=&quot;media_file_checking_function&quot; parameters=&quot;file_x,path_x&quot;&gt;<br/>if (GetFileURL (file_x) = path_x) {<br/>-&gt; // do script<br/>else if (GetFileURL (file_x) = null) { // or: else if (not GetFileURL (file_x) = path_x) {<br/>-&gt; // do script<br/>}<br/><br/>though, this doesn't address the problem (the lack of not having a method of) generating (listing, thus iterating, thus &quot;foreach&quot; checking of) your files' paths<br/><br/>--------<br/><br/>oooo, this actually isn't hard at all (I didn't realize this previously, lol):<br/><br/>(well, you'll have to first figure out how to code  in using an outside list file as described by george)<br/><br/>but then, you'd just need to do this:<br/><br/>foreach (file_x,your_outside_file_list) {<br/>-&gt; list add (global_data_object.file_path_string_list, GetFileURL (file_x))<br/>}<br/><br/>foreach (path_x, global_data_object.file_path_string_list) {<br/>-&gt; if (path_x = &quot;file_path&quot;) {<br/>-&gt;-&gt; // do script<br/>-&gt; }<br/>}<br/><br/>you could actually also code in it to be even more functional (and more concise~condensed~efficient) too...",
      "PostDate": "2014-03-05T07:14:25+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28059",
      "UserId": 0,
      "Username": "GiantAngryBoar",
      "UserAvatar": null,
      "UserGravatar": "b31d3dd92ec5c1dd33a0bec17fbf0c81",
      "EditableText": "Ah, well, thanks a ton for your help, george, HK. I can't see any other way to do this either so I'm going to go with using an external tool like george said. I'll edit with my solution for others' reference when it's done.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, well, thanks a ton for your help, george, HK. I can't see any other way to do this either so I'm going to go with using an external tool like george said. I'll edit with my solution for others' reference when it's done.",
      "PostDate": "2014-03-05T15:33:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28060",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "HK, you can't use GetFileURL, because that function doesn't check if the file's not there.",
      "EditableFormat": "bbcode",
      "HTML": "HK, you can't use GetFileURL, because that function doesn't check if the file's not there.",
      "PostDate": "2014-03-05T15:45:52+00:00",
      "LastEditDate": null
    }
  ]
}
