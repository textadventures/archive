{
  "Topic": {
    "TopicId": "9blcn_1szumlvk9eb_ev6a",
    "ForumId": "10",
    "Title": "[SOLVED] Alternating \"and/or\" in GetBoolean?",
    "LastUpdated": "2017-06-01T06:57:36.4355532Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d4bdd339-9a30-45ae-919b-fa85bb22a4fd",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Based on this thread: <a href=\"https://textadventures.co.uk/forum/quest/topic/5943/solved-using-an-if-to-check-two-flags\">https://textadventures.co.uk/forum/quest/topic/5943/solved-using-an-if-to-check-two-flags</a>\r\n  \r\nI saw this:\r\n\r\n<b>if ((GetBoolean (paper, \"cut\") \r\nand GetBoolean (paper, \"folded\")) \r\nor GetBoolean (paper, \"stained\")) \r\n{ /* scripts */ }</b>\r\n\r\nFirst off, is that the actual code that works?\r\nSecond, if so, I want to be able to cover four or more states or conditions in one string.\r\nIn other words:\r\n\r\nif ((GetBoolean (thing, \"1\") \r\nand GetBoolean (thing, \"2\")) \r\nor GetBoolean (thing, \"3\")) \r\nand GetBoolean (thing, \"4\")) \r\nor GetBoolean (thing, \"5\")) \r\n{ /* scripts */ }\r\n\r\nDoes that work?\r\n\r\nIn other words, after \"if\" checks to see if thing 1 is true, then if checks to see it things 2 <b>OR</b> 3 are true <b>AND</b> it checks to see if things 4 <b>OR</b> 5 are true, before giving the result?\r\n\r\nDoes that make sense? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Based on this thread: <a href=\"https://textadventures.co.uk/forum/quest/topic/5943/solved-using-an-if-to-check-two-flags\">https://textadventures.co.uk/forum/quest/topic/5943/solved-using-an-if-to-check-two-flags</a></p>\n<p>I saw this:</p>\n<p><b>if ((GetBoolean (paper, \"cut\")<br>\nand GetBoolean (paper, \"folded\"))<br>\nor GetBoolean (paper, \"stained\"))<br>\n{ /* scripts */ }</b></p>\n<p>First off, is that the actual code that works?<br>\nSecond, if so, I want to be able to cover four or more states or conditions in one string.<br>\nIn other words:</p>\n<p>if ((GetBoolean (thing, \"1\")<br>\nand GetBoolean (thing, \"2\"))<br>\nor GetBoolean (thing, \"3\"))<br>\nand GetBoolean (thing, \"4\"))<br>\nor GetBoolean (thing, \"5\"))<br>\n{ /* scripts */ }</p>\n<p>Does that work?</p>\n<p>In other words, after \"if\" checks to see if thing 1 is true, then if checks to see it things 2 <b>OR</b> 3 are true <b>AND</b> it checks to see if things 4 <b>OR</b> 5 are true, before giving the result?</p>\n<p>Does that make sense?</p>\n\n",
      "PostDate": "2017-06-01T06:57:36.4355532Z",
      "LastEditDate": "2017-06-01T15:24:42.3775152Z"
    },
    {
      "PostId": "f1739682-8c70-4b23-8f1c-cc7ba5b9bbb1",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry the editor isn't letting me edit my post (\"You can't post this here\").  The last couple lines should read:\r\n\r\nIn other words, after \"if\" checks to see if thing 1 is true, then it checks to see if things 2 <b>OR</b> 3 are true and then, in addition, it checks to see if things 4 <b>OR</b> 5 are true. And then it gives the result.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry the editor isn't letting me edit my post (\"You can't post this here\").  The last couple lines should read:</p>\n<p>In other words, after \"if\" checks to see if thing 1 is true, then it checks to see if things 2 <b>OR</b> 3 are true and then, in addition, it checks to see if things 4 <b>OR</b> 5 are true. And then it gives the result.</p>\n\n",
      "PostDate": "2017-06-01T07:04:15.9379366Z",
      "LastEditDate": null
    },
    {
      "PostId": "c3f5ed0f-4894-4286-80c9-d1f355192245",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You should bracket the bits that go together, so 2 OR 3 brackets together, and 4 OR 5.\r\n\r\n```\r\nif (GetBoolean (thing, \"1\") and (GetBoolean (thing, \"2\") or GetBoolean (thing, \"3\")) and (GetBoolean (thing, \"4\") or GetBoolean (thing, \"5\"))) \r\n```\r\nMay be clearer like this:\r\n```\r\nif (one and (two or three) and (four or five))",
      "EditableFormat": "markdown",
      "HTML": "<p>You should bracket the bits that go together, so 2 OR 3 brackets together, and 4 OR 5.</p>\n<pre><code>if (GetBoolean (thing, \"1\") and (GetBoolean (thing, \"2\") or GetBoolean (thing, \"3\")) and (GetBoolean (thing, \"4\") or GetBoolean (thing, \"5\"))) \n</code></pre>\n<p>May be clearer like this:</p>\n<pre><code>if (one and (two or three) and (four or five))\n</code></pre>\n\n",
      "PostDate": "2017-06-01T07:19:02.4515204Z",
      "LastEditDate": null
    },
    {
      "PostId": "16e3050e-710b-4d7b-9fa2-bdc81f0f9c9a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can have multiple connected conditions as either: one 'if' line or multiple nested 'if' lines (see the code box below)\r\n\r\n-------\r\n\r\nnote that each 'CONDITION' must be a full statement:\r\n\r\nif (FULL_STATEMENT_CONDITION LOGIC_OPERATOR FULL_STATEMENT_CONDITION LOGIC_OPERATOR FULL_STATEMENT_CONDITION) { /* scripting */ }\r\n\r\nLOGIC_OPERATORS: 'and' and 'or'\r\n\r\nthere's also a third LOGIC_OPERATOR: negation ('not'), but it doesn't go between the conditions like you see above, instead it goes before them:\r\n\r\nif (not FULL_STATEMENT_CONDITION LOGIC_OPERATOR not FULL_STATEMENT_CONDITION LOGIC_OPERATOR not FULL_STATEMENT_CONDITION) { /* scripting */ }\r\n\r\nor, there's also another/alternative syntax of doing 'not' (negation) in quest: not equal: <>\r\n\r\nFULL_STATEMENT_CONDITION: VARIABLE <> VALUE_OR_EXPRESSION\r\n\r\nif (VARIABLE <> VALUE_OR_EXPRESSION LOGIC_OPERATOR VARIABLE <> VALUE_OR_EXPRESSION LOGIC_OPERATOR VARIABLE <> VALUE_OR_EXPRESSION) { /* scripting */ }\r\n\r\nAttribute VARIABLE usage, full statement forms:\r\n\r\nNAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE // the long form is this: NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = true\r\n\r\nnot NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE // the long form is this: not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = true // which is this: not true ===> FALSE // which is the same as this long form: NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = false\r\n\r\nNAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION\r\n\r\nnot NAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION\r\n\r\nNAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE <> VALUE_OR_EXPRESSION\r\n\r\nVariable VARIABLE usage, full statement forms:\r\n\r\nNAME_OF_BOOLEAN_Variable // the long form is this: NAME_OF_BOOLEAN_Variable = true\r\n\r\nnot NAME_OF_BOOLEAN_Variable // the long form is this: NAME_OF_BOOLEAN_Variable = false\r\n\r\nNAME_OF_NON_BOOLEAN_Variable OPERATOR VALUE_OR_EXPRESSION\r\n\r\nnot NAME_OF_NON_BOOLEAN_Variable OPERATOR VALUE_OR_EXPRESSION\r\n\r\nNAME_OF_NON_BOOLEAN_Variable <> VALUE_OR_EXPRESSION\r\n\r\n-------------------\r\n\r\n```\r\n'AND' logic:\r\n\r\nif (CONDITION_1 and CONDITION_2 and CONDITION_3) {\r\n  msg (\"this is the same as below\")\r\n}\r\n\r\nif (CONDITION_1) {\r\n  if (CONDITION_2) {\r\n    if (CONDITION_3) {\r\n      msg (\"this is the same as above\")\r\n    }\r\n  }\r\n}\r\n\r\n-----------\r\n\r\n'OR' logic:\r\n\r\nif (CONDITION_1 or CONDITION_2 or CONDITION_3) {\r\n  msg (\"this is the same as below\")\r\n}\r\n\r\nif (CONDITION_1) {\r\n  msg (\"this is the same as above\")\r\n} else if (CONDITION_2) {\r\n  msg (\"this is the same as above\")\r\n} else if (CONDITION_3) {\r\n  msg (\"this is the same as above\")\r\n}\r\n```\r\n\r\n------------------\r\n\r\nyou need to understand how, logic / truth tables, work, for correctly using 'and' and 'or' and negation ('not' or '<>'):\r\n\r\nhttps://en.wikipedia.org/wiki/Truth_table\r\nhttps://en.wikipedia.org/wiki/Boolean_algebra\r\nhttp://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch13s02.html\r\n\r\nusing parenthesis works the same for scripting in quest as it does for math operations, parenthesis can be used to control the 'order of operations' of the scripting, for example:\r\n\r\n(true or true) and false = (true) and false = FALSE\r\ntrue or (true and false) = true or (false) = TRUE",
      "EditableFormat": "markdown",
      "HTML": "<p>you can have multiple connected conditions as either: one 'if' line or multiple nested 'if' lines (see the code box below)</p>\n<hr>\n<p>note that each 'CONDITION' must be a full statement:</p>\n<p>if (FULL_STATEMENT_CONDITION LOGIC_OPERATOR FULL_STATEMENT_CONDITION LOGIC_OPERATOR FULL_STATEMENT_CONDITION) { /* scripting */ }</p>\n<p>LOGIC_OPERATORS: 'and' and 'or'</p>\n<p>there's also a third LOGIC_OPERATOR: negation ('not'), but it doesn't go between the conditions like you see above, instead it goes before them:</p>\n<p>if (not FULL_STATEMENT_CONDITION LOGIC_OPERATOR not FULL_STATEMENT_CONDITION LOGIC_OPERATOR not FULL_STATEMENT_CONDITION) { /* scripting */ }</p>\n<p>or, there's also another/alternative syntax of doing 'not' (negation) in quest: not equal: &lt;&gt;</p>\n<p>FULL_STATEMENT_CONDITION: VARIABLE &lt;&gt; VALUE_OR_EXPRESSION</p>\n<p>if (VARIABLE &lt;&gt; VALUE_OR_EXPRESSION LOGIC_OPERATOR VARIABLE &lt;&gt; VALUE_OR_EXPRESSION LOGIC_OPERATOR VARIABLE &lt;&gt; VALUE_OR_EXPRESSION) { /* scripting */ }</p>\n<p>Attribute VARIABLE usage, full statement forms:</p>\n<p>NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE // the long form is this: NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = true</p>\n<p>not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE // the long form is this: not NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = true // which is this: not true ===&gt; FALSE // which is the same as this long form: NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE = false</p>\n<p>NAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION</p>\n<p>not NAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION</p>\n<p>NAME_OF_OBJECT.NAME_OF_NON_BOOLEAN_ATTRIBUTE &lt;&gt; VALUE_OR_EXPRESSION</p>\n<p>Variable VARIABLE usage, full statement forms:</p>\n<p>NAME_OF_BOOLEAN_Variable // the long form is this: NAME_OF_BOOLEAN_Variable = true</p>\n<p>not NAME_OF_BOOLEAN_Variable // the long form is this: NAME_OF_BOOLEAN_Variable = false</p>\n<p>NAME_OF_NON_BOOLEAN_Variable OPERATOR VALUE_OR_EXPRESSION</p>\n<p>not NAME_OF_NON_BOOLEAN_Variable OPERATOR VALUE_OR_EXPRESSION</p>\n<p>NAME_OF_NON_BOOLEAN_Variable &lt;&gt; VALUE_OR_EXPRESSION</p>\n<hr>\n<pre><code>'AND' logic:\n\nif (CONDITION_1 and CONDITION_2 and CONDITION_3) {\n  msg (\"this is the same as below\")\n}\n\nif (CONDITION_1) {\n  if (CONDITION_2) {\n    if (CONDITION_3) {\n      msg (\"this is the same as above\")\n    }\n  }\n}\n\n-----------\n\n'OR' logic:\n\nif (CONDITION_1 or CONDITION_2 or CONDITION_3) {\n  msg (\"this is the same as below\")\n}\n\nif (CONDITION_1) {\n  msg (\"this is the same as above\")\n} else if (CONDITION_2) {\n  msg (\"this is the same as above\")\n} else if (CONDITION_3) {\n  msg (\"this is the same as above\")\n}\n</code></pre>\n<hr>\n<p>you need to understand how, logic / truth tables, work, for correctly using 'and' and 'or' and negation ('not' or '&lt;&gt;'):</p>\n<p>https://en.wikipedia.org/wiki/Truth_table<br>\nhttps://en.wikipedia.org/wiki/Boolean_algebra<br>\nhttp://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch13s02.html</p>\n<p>using parenthesis works the same for scripting in quest as it does for math operations, parenthesis can be used to control the 'order of operations' of the scripting, for example:</p>\n<p>(true or true) and false = (true) and false = FALSE<br>\ntrue or (true and false) = true or (false) = TRUE</p>\n\n",
      "PostDate": "2017-06-01T12:04:55.5097282Z",
      "LastEditDate": "2017-06-01T12:15:46.717403Z"
    },
    {
      "PostId": "9330469e-f408-49d2-9dc2-1acebbc13f2d",
      "UserId": 185415,
      "Username": "major powers",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5a2fab185e3766767ad57fd12f0b369a?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Works like a charm.  I had too many parentheses!  This made it <b>xtra</b> clear!\r\n\r\n```if (one and (two or three) and (four or five))```\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Works like a charm.  I had too many parentheses!  This made it <b>xtra</b> clear!</p>\n<p><code>if (one and (two or three) and (four or five))</code></p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2017-06-01T15:22:23.7497104Z",
      "LastEditDate": "2017-06-01T15:24:16.067858Z"
    }
  ]
}
