{
  "Topic": {
    "TopicId": "wyq4d9-idu_resjvxblfpw",
    "ForumId": "10",
    "Title": "How to get fullness of a container/inventory?",
    "LastUpdated": "2024-10-21T21:52:25.7649553Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "be317976-dc84-43a1-935d-9f8eab05e7d8",
      "UserId": 701328,
      "Username": "Woodhouse3D",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to put in a bar UI to show how full the player's inventory is, but there doesn't seem to be an attribute for this.",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to put in a bar UI to show how full the player's inventory is, but there doesn't seem to be an attribute for this.</p>\n\n",
      "PostDate": "2024-10-21T21:52:25.7649553Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "255f0c33-ca25-4f1e-85ca-5270d0de4d5d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This isn't stored in an attribute because it is calculated whenever the player tries to take an object. This is why a script that adds an object to the inventory won't be noticed until they try to pick up something else.\r\n\r\nThere are two ways in which the inventory is limited. If the number of objects is limited, the limit will be stored in the attribute `game.pov.maxobjects`, and this is just compared to the total given by `GetDirectChildren (game.pov)`. This seems weird to me because it includes invisible objects; but that's how it works.\r\n\r\nIf you're using object weight/volume, the limit is stored in the attribute `game.pov.maxvolume`. The script loops over all objects in the inventory and adds up their `volume` attributes every time this is checked.\r\n\r\nTherefore I think the best way to deal with this is to have a script which runs every time the player gains or drops an object, which adds up this total and stores it in an attribute. Or maybe making it a turnscript would be simpler; if less efficient. Something like:\r\n\r\n```\r\ngame.pov.carriedvolume = 0\r\nforeach (obj, GetAllChildObjects(game.pov)) {\r\n  if (HasInt(obj, \"volume\")) {\r\n    game.pov.carriedvolume = game.pov.carriedvolume + obj.volume\r\n  }\r\n}\r\n```\r\nThen you could use the attribute `carriedvolume` to find out how much the player is carrying.",
      "EditableFormat": "markdown",
      "HTML": "<p>This isn't stored in an attribute because it is calculated whenever the player tries to take an object. This is why a script that adds an object to the inventory won't be noticed until they try to pick up something else.</p>\n<p>There are two ways in which the inventory is limited. If the number of objects is limited, the limit will be stored in the attribute <code>game.pov.maxobjects</code>, and this is just compared to the total given by <code>GetDirectChildren (game.pov)</code>. This seems weird to me because it includes invisible objects; but that's how it works.</p>\n<p>If you're using object weight/volume, the limit is stored in the attribute <code>game.pov.maxvolume</code>. The script loops over all objects in the inventory and adds up their <code>volume</code> attributes every time this is checked.</p>\n<p>Therefore I think the best way to deal with this is to have a script which runs every time the player gains or drops an object, which adds up this total and stores it in an attribute. Or maybe making it a turnscript would be simpler; if less efficient. Something like:</p>\n<pre><code>game.pov.carriedvolume = 0\nforeach (obj, GetAllChildObjects(game.pov)) {\n  if (HasInt(obj, \"volume\")) {\n    game.pov.carriedvolume = game.pov.carriedvolume + obj.volume\n  }\n}\n</code></pre>\n<p>Then you could use the attribute <code>carriedvolume</code> to find out how much the player is carrying.</p>\n\n",
      "PostDate": "2024-10-21T23:28:00.2889418Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "439568b7-113e-498f-b65e-31ba5fadd5da",
      "UserId": 701328,
      "Username": "Woodhouse3D",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, thats basically how i did it, but I put it as a function:\r\n```\r\nvol = 0\r\nforeach (o, GetAllChildObjects(player)) {\r\n  if (HasInt(o, \"volume\")) {\r\n    vol = vol + o.volume\r\n  }\r\n}\r\nreturn (vol)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, thats basically how i did it, but I put it as a function:</p>\n<pre><code>vol = 0\nforeach (o, GetAllChildObjects(player)) {\n  if (HasInt(o, \"volume\")) {\n    vol = vol + o.volume\n  }\n}\nreturn (vol)\n</code></pre>\n\n",
      "PostDate": "2024-10-22T02:18:15.1907738Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
