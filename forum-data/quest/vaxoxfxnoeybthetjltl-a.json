{
  "Topic": {
    "TopicId": "vaxoxfxnoeybthetjltl-a",
    "ForumId": "10",
    "Title": "Script to accept random keycode?",
    "LastUpdated": "2016-11-29T18:42:32.3309013Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "df464bf2-39f7-49ea-b2f5-464478424491",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have an idea for a sci-fi themed game which will start out with 'you' trapped in lab. The only way out is via a seven-number combination lock. Initially, any number sequence they enter will return a fail, but when the player finds an experimental serum in one of the cabinets which makes anyone who takes it the luckiest person alive, they can return to the keypad and effectively guess the code.\r\n\r\nFor this to happen I need a script which 'locks' the keypad, in as much as any combination of numbers will fail, but then when the player has the 'serum' flag set to them, any combination of numbers will be accepted and open the door.\r\n\r\nHow would I make sure that anything BUT a seven-number code would be rejected (in others 6 or 8 numbers, or any letters wouldn't work), once they have the serum, but also that ANY seven-number code will work, so long as it's only 7 numbers?\r\n\r\n```\r\nThere's a keypad on the wall.\r\n> use keypad\r\n\r\nPlease enter your seven-number code.\r\n> 2394572\r\nFail.\r\n\r\n> 98u3209\r\nFail - Please enter numbers only.\r\n\r\n> 2304\r\nThe keypad requires seven numbers.\r\n\r\n> cancel (takes player out of keypad loop)\r\n\r\n(player find and takes serum then returns to the keypad)\r\n\r\n> 8349028 (or any other seven number code)\r\nGreen light. Door opens",
      "EditableFormat": "markdown",
      "HTML": "<p>I have an idea for a sci-fi themed game which will start out with 'you' trapped in lab. The only way out is via a seven-number combination lock. Initially, any number sequence they enter will return a fail, but when the player finds an experimental serum in one of the cabinets which makes anyone who takes it the luckiest person alive, they can return to the keypad and effectively guess the code.</p>\n<p>For this to happen I need a script which 'locks' the keypad, in as much as any combination of numbers will fail, but then when the player has the 'serum' flag set to them, any combination of numbers will be accepted and open the door.</p>\n<p>How would I make sure that anything BUT a seven-number code would be rejected (in others 6 or 8 numbers, or any letters wouldn't work), once they have the serum, but also that ANY seven-number code will work, so long as it's only 7 numbers?</p>\n<pre><code>There's a keypad on the wall.\n&gt; use keypad\n\nPlease enter your seven-number code.\n&gt; 2394572\nFail.\n\n&gt; 98u3209\nFail - Please enter numbers only.\n\n&gt; 2304\nThe keypad requires seven numbers.\n\n&gt; cancel (takes player out of keypad loop)\n\n(player find and takes serum then returns to the keypad)\n\n&gt; 8349028 (or any other seven number code)\nGreen light. Door opens\n</code></pre>\n\n",
      "PostDate": "2016-11-29T18:42:32.3309013Z",
      "LastEditDate": "2016-11-29T18:43:31.2145909Z"
    },
    {
      "PostId": "eb7fdb9d-1b1e-4c33-8a2b-eec58a3c3fea",
      "UserId": 32920,
      "Username": "Father",
      "AvatarUrl": "http://i.imgur.com/ogRXH9lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Why don't you make the combination a password. We are encouraged to add letters, numbers and even punctuation to passwords,  so a password could be anything.",
      "EditableFormat": "markdown",
      "HTML": "<p>Why don't you make the combination a password. We are encouraged to add letters, numbers and even punctuation to passwords,  so a password could be anything.</p>\n\n",
      "PostDate": "2016-11-29T19:05:08.1629516Z",
      "LastEditDate": null
    },
    {
      "PostId": "8d76d2e4-3514-494b-8925-3e46ee3230e1",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was thinking the same thing.  You could make two separate keypads and swap them out when the serum is consumed.  Then run a script that accounts for any input generating an error response for using keypad1 and run a script that accounts for any input generating a correct response for keypad2?",
      "EditableFormat": "markdown",
      "HTML": "<p>I was thinking the same thing.  You could make two separate keypads and swap them out when the serum is consumed.  Then run a script that accounts for any input generating an error response for using keypad1 and run a script that accounts for any input generating a correct response for keypad2?</p>\n\n",
      "PostDate": "2016-11-29T19:21:30.6819396Z",
      "LastEditDate": null
    },
    {
      "PostId": "fb683b69-00c4-4391-a6ca-f67933ddd4ee",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is one way round, but I can't imagine a keypad on a door that allows for any characters.\r\n\r\nI wanted to be quite strict about it being a seven-digit number.\r\n\r\nA script to allow any input is easy enough, but I don't know what that script would be to allow any seven-digit number to unlock the door, but _only_ a seven-digit number.",
      "EditableFormat": "markdown",
      "HTML": "<p>That is one way round, but I can't imagine a keypad on a door that allows for any characters.</p>\n<p>I wanted to be quite strict about it being a seven-digit number.</p>\n<p>A script to allow any input is easy enough, but I don't know what that script would be to allow any seven-digit number to unlock the door, but <em>only</em> a seven-digit number.</p>\n\n",
      "PostDate": "2016-11-29T19:35:04.9008001Z",
      "LastEditDate": "2016-11-29T19:36:08.6313605Z"
    },
    {
      "PostId": "bc3a9b18-4c29-4093-b521-e5de9eab1c55",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I thought about doing exactly that just a few days ago, inspired by your user image.\r\n\r\nI would use `IsRegexMatch` to compare the input. This will check the string is just seven digits:\r\n```\r\nif (IsRegexMatch(\"^\\d\\d\\d\\d\\d\\d\\d$\", result) {\r\n```\r\nIf it does match, but the player has not taken the serum, put the result in a stringlist (attribute of game maybe), so when the player does take it you can test if it is the same as one tried previously (no matter how lucky you are, a code that failed before should still fail).\r\n```\r\nif (ListContains(game.badguesses, result) {\r\n```\r\nIs that enough for you to get going?",
      "EditableFormat": "markdown",
      "HTML": "<p>I thought about doing exactly that just a few days ago, inspired by your user image.</p>\n<p>I would use <code>IsRegexMatch</code> to compare the input. This will check the string is just seven digits:</p>\n<pre><code>if (IsRegexMatch(\"^\\d\\d\\d\\d\\d\\d\\d$\", result) {\n</code></pre>\n<p>If it does match, but the player has not taken the serum, put the result in a stringlist (attribute of game maybe), so when the player does take it you can test if it is the same as one tried previously (no matter how lucky you are, a code that failed before should still fail).</p>\n<pre><code>if (ListContains(game.badguesses, result) {\n</code></pre>\n<p>Is that enough for you to get going?</p>\n\n",
      "PostDate": "2016-11-29T20:09:04.0258879Z",
      "LastEditDate": null
    },
    {
      "PostId": "4d7391b1-f6cb-4862-ae83-a14ee24088ad",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can of course change/split/nest/expand my code for what you want*, but here's how it'd be done in simplicity:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/isint.html\r\nhttp://docs.textadventures.co.uk/quest/functions/string/lengthof.html\r\n\r\n```\r\n// HK edited:\r\n\r\nget input {\r\n  if (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE and IsInt (result) and LengthOf (result) = 7) {\r\n    // door is unlocked/opened/etc\r\n  } else {\r\n    // fail\r\n  }\r\n}\r\n```\r\n\r\n// the 'player.serum' check is the first check operation, and if that succeeds/passes, next it does the 'IsInt' check, and if that succeeds/passes, then lastly, it does the 'LengthOf' (7 character) check, and if that succeeds/passes, the door is unlocked. If any of the checks fail, then you fail to unlock the door.\r\n\r\n.* (if you need help on how to adjust it to what you want, such as prompting about each of the different checks fails, or whatever, let me know and I'll provide the code/help you need for doing it)",
      "EditableFormat": "markdown",
      "HTML": "<p>you can of course change/split/nest/expand my code for what you want*, but here's how it'd be done in simplicity:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/isint.html<br>\nhttp://docs.textadventures.co.uk/quest/functions/string/lengthof.html</p>\n<pre><code>// HK edited:\n\nget input {\n  if (NAME_OF_OBJECT.NAME_OF_BOOLEAN_ATTRIBUTE and IsInt (result) and LengthOf (result) = 7) {\n    // door is unlocked/opened/etc\n  } else {\n    // fail\n  }\n}\n</code></pre>\n<p>// the 'player.serum' check is the first check operation, and if that succeeds/passes, next it does the 'IsInt' check, and if that succeeds/passes, then lastly, it does the 'LengthOf' (7 character) check, and if that succeeds/passes, the door is unlocked. If any of the checks fail, then you fail to unlock the door.</p>\n<p>.* (if you need help on how to adjust it to what you want, such as prompting about each of the different checks fails, or whatever, let me know and I'll provide the code/help you need for doing it)</p>\n\n",
      "PostDate": "2016-11-29T20:19:09.7986999Z",
      "LastEditDate": "2016-11-30T09:05:25.4098696Z"
    },
    {
      "PostId": "009ad27c-1b70-473a-9737-719d3c9d1468",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you both.\r\n\r\nTP, I was hoping there were no other Dwarfers on here ;-)\r\n\r\nAs for the code, I'm afraid it's a bit beyond me to take it alone from there. Is the RegexMatch checking that the input is numbers so that I can return a 'Numbers only' message if they used letters? The narrative will explain they need to enter numbers, so I'm probably allowing for something that 90% of players aren't going to do, but if it wasn't too difficult...\r\n\r\nhege, I'm guessing yours only checks for characters too, as opposed to numbers only, although I can at least see how yours is working (I don't mean that in a negative manner, TP)\r\n\r\nI'll have a few test runs with hege's script (at least for now, as I understand it)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you both.</p>\n<p>TP, I was hoping there were no other Dwarfers on here ;-)</p>\n<p>As for the code, I'm afraid it's a bit beyond me to take it alone from there. Is the RegexMatch checking that the input is numbers so that I can return a 'Numbers only' message if they used letters? The narrative will explain they need to enter numbers, so I'm probably allowing for something that 90% of players aren't going to do, but if it wasn't too difficult...</p>\n<p>hege, I'm guessing yours only checks for characters too, as opposed to numbers only, although I can at least see how yours is working (I don't mean that in a negative manner, TP)</p>\n<p>I'll have a few test runs with hege's script (at least for now, as I understand it)</p>\n\n",
      "PostDate": "2016-11-29T23:02:20.0906111Z",
      "LastEditDate": null
    },
    {
      "PostId": "edc25774-9b80-47a4-a2f9-10798167a9e3",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your script gets this, hege:\r\n```\r\nError running script: Error compiling expression 'player.serum and IsInt (result) and LengthOf (result) = 7': AndOrElement: Operation 'And' is not defined for types 'Object' and 'Boolean'\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Your script gets this, hege:</p>\n<pre><code>Error running script: Error compiling expression 'player.serum and IsInt (result) and LengthOf (result) = 7': AndOrElement: Operation 'And' is not defined for types 'Object' and 'Boolean'\n</code></pre>\n\n",
      "PostDate": "2016-11-29T23:26:59.2743008Z",
      "LastEditDate": null
    },
    {
      "PostId": "3b6ee209-904b-4c89-af8b-2c3f2fb62958",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a horrible feeling this is going to be too difficult and just frustrate me, so I think I'll keep it simple, go with this and just leave it down to the player to enter a seven digit number when instructed.\r\n```\r\nmsg (\"You step up to the keypad. Please enter the seven-digit code.\")\r\nget input {\r\n  if (GetBoolean(player, \"gotserum\")) {\r\n    msg (\"The door slides open\")\r\n  }\r\n  else {\r\n    msg (\"Incorrect keycode\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a horrible feeling this is going to be too difficult and just frustrate me, so I think I'll keep it simple, go with this and just leave it down to the player to enter a seven digit number when instructed.</p>\n<pre><code>msg (\"You step up to the keypad. Please enter the seven-digit code.\")\nget input {\n  if (GetBoolean(player, \"gotserum\")) {\n    msg (\"The door slides open\")\n  }\n  else {\n    msg (\"Incorrect keycode\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-11-29T23:48:33.4845669Z",
      "LastEditDate": null
    },
    {
      "PostId": "d1678d07-d15d-471a-b215-786aa2f123be",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am not a programmer, so i find the simple solution, always the best one.\r\n\r\nCreate two Objects: False Keypad and Real Keypad. The Real, always return errors and never unlocks. The  False, always return the \"unlock\" result, no matter what was typed. Make them visible and invisible, depending on the \"Serum\" flag. Once in place, you may add a little complexity to check if the player typed numbers and not letters using the \"Is Int\" and \"To Int\" resources.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am not a programmer, so i find the simple solution, always the best one.</p>\n<p>Create two Objects: False Keypad and Real Keypad. The Real, always return errors and never unlocks. The  False, always return the \"unlock\" result, no matter what was typed. Make them visible and invisible, depending on the \"Serum\" flag. Once in place, you may add a little complexity to check if the player typed numbers and not letters using the \"Is Int\" and \"To Int\" resources.</p>\n\n",
      "PostDate": "2016-11-30T00:24:34.0728384Z",
      "LastEditDate": null
    },
    {
      "PostId": "7bc657b3-f9f8-42f6-89f5-aceb010ad328",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think my syntax is fine (it could be wrong though, but I don't think so... lol), which means that the error is merely that you've used 'serum' as your Boolean Attribute's name from my code, but in your game, you've got no 'serum' Boolean Attribute on your 'player' Player Object, and thus the error, as instead, you've got a 'gotserum' Boolean Attribute on your 'player' Player Object:\r\n\r\nif your (Boolean) Attribute is named 'gotserum', then you need to change it as so within my code:\r\n\r\nif (player.gotserum and IsInt (result) and LengthOf (result) = 7) {\r\n\r\nalternatively, this is the same scripting (technically it has a bit more overhead/extra-coding-underneath, but this probably isn't going to be an issue, lol):\r\n\r\nif (GetBoolean (player, \"gotserum\") and IsInt (result) and LengthOf (result) = 7) {\r\n\r\n------\r\n\r\n(also, if the Object's 'name' is not 'player', you need to change it in my code to your Object's 'name', as well)\r\n\r\n-----\r\n\r\nthe 'IsInt' checks for if your input (which is stored/saved/set into the built-in 'result' Variable) is an integer number\r\n\r\nresult = abc\r\nif (IsInt (result)) ---> FALSE (fail)\r\n\r\nresult = abc123\r\nif (IsInt (result)) ---> FALSE (fail)\r\n\r\nresult = 1.0023\r\nif (IsInt (result)) ---> FALSE (fail)\r\n\r\nresult = 123\r\nif (IsInt (result)) ---> TRUE (succeeds/passes)\r\n\r\n-----\r\n\r\nresult = 1.0023\r\nif (IsDouble (result)) ---> TRUE (succeeds/passes)\r\n\r\nresult = 123\r\nif (IsDouble (result)) ---> FALSE (fail)\r\n\r\nresult = abc\r\nif (IsDouble (result)) ---> FALSE (fail)\r\n\r\nresult = abc123\r\nif (IsDouble (result)) ---> FALSE (fail)\r\n\r\n----\r\n\r\n(if I understand)\r\n\r\nresult = 1.0023\r\nif (IsNumeric (result)) ---> TRUE (succeeds/passes)\r\n\r\nresult = 123\r\nif (IsNumeric (result)) ---> TRUE (succeeds/passes)\r\n\r\nresult = abc\r\nif (IsNumeric (result)) ---> FALSE (fail)\r\n\r\nresult = abc123\r\nif (IsNumeric (result)) ---> FALSE (fail)",
      "EditableFormat": "markdown",
      "HTML": "<p>I think my syntax is fine (it could be wrong though, but I don't think so... lol), which means that the error is merely that you've used 'serum' as your Boolean Attribute's name from my code, but in your game, you've got no 'serum' Boolean Attribute on your 'player' Player Object, and thus the error, as instead, you've got a 'gotserum' Boolean Attribute on your 'player' Player Object:</p>\n<p>if your (Boolean) Attribute is named 'gotserum', then you need to change it as so within my code:</p>\n<p>if (player.gotserum and IsInt (result) and LengthOf (result) = 7) {</p>\n<p>alternatively, this is the same scripting (technically it has a bit more overhead/extra-coding-underneath, but this probably isn't going to be an issue, lol):</p>\n<p>if (GetBoolean (player, \"gotserum\") and IsInt (result) and LengthOf (result) = 7) {</p>\n<hr>\n<p>(also, if the Object's 'name' is not 'player', you need to change it in my code to your Object's 'name', as well)</p>\n<hr>\n<p>the 'IsInt' checks for if your input (which is stored/saved/set into the built-in 'result' Variable) is an integer number</p>\n<p>result = abc<br>\nif (IsInt (result)) ---&gt; FALSE (fail)</p>\n<p>result = abc123<br>\nif (IsInt (result)) ---&gt; FALSE (fail)</p>\n<p>result = 1.0023<br>\nif (IsInt (result)) ---&gt; FALSE (fail)</p>\n<p>result = 123<br>\nif (IsInt (result)) ---&gt; TRUE (succeeds/passes)</p>\n<hr>\n<p>result = 1.0023<br>\nif (IsDouble (result)) ---&gt; TRUE (succeeds/passes)</p>\n<p>result = 123<br>\nif (IsDouble (result)) ---&gt; FALSE (fail)</p>\n<p>result = abc<br>\nif (IsDouble (result)) ---&gt; FALSE (fail)</p>\n<p>result = abc123<br>\nif (IsDouble (result)) ---&gt; FALSE (fail)</p>\n<hr>\n<p>(if I understand)</p>\n<p>result = 1.0023<br>\nif (IsNumeric (result)) ---&gt; TRUE (succeeds/passes)</p>\n<p>result = 123<br>\nif (IsNumeric (result)) ---&gt; TRUE (succeeds/passes)</p>\n<p>result = abc<br>\nif (IsNumeric (result)) ---&gt; FALSE (fail)</p>\n<p>result = abc123<br>\nif (IsNumeric (result)) ---&gt; FALSE (fail)</p>\n\n",
      "PostDate": "2016-11-30T02:54:17.3364478Z",
      "LastEditDate": "2016-11-30T03:04:45.8864844Z"
    },
    {
      "PostId": "3153b5db-72bb-4dad-b9c2-40a0455f5046",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I initially had the boolean as serum, but was still getting the error.\r\n\r\nThank you for the revision.",
      "EditableFormat": "markdown",
      "HTML": "<p>I initially had the boolean as serum, but was still getting the error.</p>\n<p>Thank you for the revision.</p>\n\n",
      "PostDate": "2016-11-30T03:19:04.1230027Z",
      "LastEditDate": null
    },
    {
      "PostId": "b284e9d0-a5e8-4983-9968-bed44cddba23",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "unfortunately when the ERROR is, '... for types Object and ....', this can be a specific error (non-matching Attribute/Data Types: 'object' vs ' int' or 'double' vs 'int' or 'string' vs 'int' or etc etc etc), or it's a generalized/default error in that you used something that doesn't exist in the game (you typo'ed somewhere in your code). When the Error mentions an 'Object', you've no idea what the error is talking about, unfortunately, as it's totally amibigious... argh. It's the least informative error... not good to get it, lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>unfortunately when the ERROR is, '... for types Object and ....', this can be a specific error (non-matching Attribute/Data Types: 'object' vs ' int' or 'double' vs 'int' or 'string' vs 'int' or etc etc etc), or it's a generalized/default error in that you used something that doesn't exist in the game (you typo'ed somewhere in your code). When the Error mentions an 'Object', you've no idea what the error is talking about, unfortunately, as it's totally amibigious... argh. It's the least informative error... not good to get it, lol.</p>\n\n",
      "PostDate": "2016-11-30T04:07:27.3991021Z",
      "LastEditDate": "2016-11-30T04:12:09.3592574Z"
    },
    {
      "PostId": "6088b7a6-e1ed-4792-9733-1f4d50e53357",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's what my code is doing:\r\n\r\n-----\r\n\r\nBoolean Logic / Truth Tables:\r\n\r\n'AND' Boolean Logic / Truth Table:\r\n\r\ntrue and true ---> TRUE\r\ntrue and false ---> FALSE\r\nfalse and true ---> FALSE\r\nfalse and false ---> FALSE\r\n\r\n-------\r\n\r\nhow does more than two factors work?, see below:\r\n\r\n--\r\n\r\nthe grouping priorities: brackets, braces, curly brackets/braces, are the same as they're in math: more inner = higher priority\r\n\r\n--\r\n\r\nmath:\r\n5 * 2 + 3\r\n// the multiplication has higher priority than the addition:\r\n// effectively: (5 * 2) + 3 = (10) + 3 = 13\r\nbut, if we put in grouping symbols (parenthesis), they have higher priority than the multiplication:\r\n5 * (2 + 3)\r\n5 * (5) = 25\r\n\r\n--\r\n\r\ncoding example:\r\nstring_variable = StringDictionaryItem (game.mydict, StringListItem (game.mylist, GetRandomInt (0,9)))\r\n\r\nthe '(0,9)' is put-into/used-for the 'GetRandomInt', the 'GetRandomInt' returns an integer value, the '(game.mylist, integer value)' is put-into/used-for the 'StringListItem', the 'StringListItem' returns a string value, the '(game.mydict, string value)' is put-into/used-for the 'StringDictionaryItem', the 'StringDictionaryItem' returns a string value, the string value is stored/saved/set-into the 'string_variable'\r\n\r\n--\r\n\r\n'[ false and false and false ]' example:\r\n\r\n// if read from left:\r\n[ ( false and false) and false ] ---> FALSE\r\n[ (false) and false ] ---> FALSE\r\n[ false and false ] ---> FALSE\r\n\r\n// or, if read from right:\r\n[ false and (false and false) ] ---> FALSE\r\n[ false and (false) ] ---> FALSE\r\n[ false and false ] ---> FALSE\r\n\r\n--------\r\n\r\nplayer.gotserum = true ---> true\r\nor\r\nplayer.gotserum ---> true\r\nor\r\nnot player.gotserum = false ---> true\r\nor\r\nplayer.gotserum <> false ---> true\r\n\r\n// or\r\n\r\nplayer.gotserum = false ---> false\r\nor\r\nnot player.gotserum ---> false\r\nor\r\nplayer.gotserum <> true ---> false\r\n\r\n------\r\n\r\nIsInt (result) ---> true\r\nor\r\nIsInt (result) = true ---> true\r\nor\r\nnot IsInt (result) = false ---> true\r\nor\r\nIsInt (result) <> false ---> true\r\n\r\n// or\r\n\r\nIsInt (result) ---> false\r\nor\r\nnot IsInt (result) ---> false\r\nor\r\nIsInt (result) <> true ---> false\r\nor\r\nIsInt (result) = false ---> false\r\n\r\n-------\r\n\r\nLengthOf (result) = 7 ---> true\r\nor\r\nLengthOf (result) = 7 ---> false\r\n\r\n// etc etc etc (see player.gotserum or IsInt examples, I got lazy)\r\n\r\n------\r\n\r\nif (player.gotserum and IsInt (result) and LengthOf (result) = 7)\r\n\r\nif (true and true and true) ---> TRUE, do its nested 'then' scripting/action\r\nif (true and true and false) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (true and false and true) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (true and false and false) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (false and true and true) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (false and true and false) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (false and false and true) ---> FALSE, skip/don't-do its nested 'then' scripting/action\r\nif (false and false and false) ---> FALSE, skip/don't-do its nested 'then' scripting/action",
      "EditableFormat": "markdown",
      "HTML": "<p>here's what my code is doing:</p>\n<hr>\n<p>Boolean Logic / Truth Tables:</p>\n<p>'AND' Boolean Logic / Truth Table:</p>\n<p>true and true ---&gt; TRUE<br>\ntrue and false ---&gt; FALSE<br>\nfalse and true ---&gt; FALSE<br>\nfalse and false ---&gt; FALSE</p>\n<hr>\n<p>how does more than two factors work?, see below:</p>\n<p>--</p>\n<p>the grouping priorities: brackets, braces, curly brackets/braces, are the same as they're in math: more inner = higher priority</p>\n<p>--</p>\n<p>math:<br>\n5 * 2 + 3<br>\n// the multiplication has higher priority than the addition:<br>\n// effectively: (5 * 2) + 3 = (10) + 3 = 13<br>\nbut, if we put in grouping symbols (parenthesis), they have higher priority than the multiplication:<br>\n5 * (2 + 3)<br>\n5 * (5) = 25</p>\n<p>--</p>\n<p>coding example:<br>\nstring_variable = StringDictionaryItem (game.mydict, StringListItem (game.mylist, GetRandomInt (0,9)))</p>\n<p>the '(0,9)' is put-into/used-for the 'GetRandomInt', the 'GetRandomInt' returns an integer value, the '(game.mylist, integer value)' is put-into/used-for the 'StringListItem', the 'StringListItem' returns a string value, the '(game.mydict, string value)' is put-into/used-for the 'StringDictionaryItem', the 'StringDictionaryItem' returns a string value, the string value is stored/saved/set-into the 'string_variable'</p>\n<p>--</p>\n<p>'[ false and false and false ]' example:</p>\n<p>// if read from left:<br>\n[ ( false and false) and false ] ---&gt; FALSE<br>\n[ (false) and false ] ---&gt; FALSE<br>\n[ false and false ] ---&gt; FALSE</p>\n<p>// or, if read from right:<br>\n[ false and (false and false) ] ---&gt; FALSE<br>\n[ false and (false) ] ---&gt; FALSE<br>\n[ false and false ] ---&gt; FALSE</p>\n<hr>\n<p>player.gotserum = true ---&gt; true<br>\nor<br>\nplayer.gotserum ---&gt; true<br>\nor<br>\nnot player.gotserum = false ---&gt; true<br>\nor<br>\nplayer.gotserum &lt;&gt; false ---&gt; true</p>\n<p>// or</p>\n<p>player.gotserum = false ---&gt; false<br>\nor<br>\nnot player.gotserum ---&gt; false<br>\nor<br>\nplayer.gotserum &lt;&gt; true ---&gt; false</p>\n<hr>\n<p>IsInt (result) ---&gt; true<br>\nor<br>\nIsInt (result) = true ---&gt; true<br>\nor<br>\nnot IsInt (result) = false ---&gt; true<br>\nor<br>\nIsInt (result) &lt;&gt; false ---&gt; true</p>\n<p>// or</p>\n<p>IsInt (result) ---&gt; false<br>\nor<br>\nnot IsInt (result) ---&gt; false<br>\nor<br>\nIsInt (result) &lt;&gt; true ---&gt; false<br>\nor<br>\nIsInt (result) = false ---&gt; false</p>\n<hr>\n<p>LengthOf (result) = 7 ---&gt; true<br>\nor<br>\nLengthOf (result) = 7 ---&gt; false</p>\n<p>// etc etc etc (see player.gotserum or IsInt examples, I got lazy)</p>\n<hr>\n<p>if (player.gotserum and IsInt (result) and LengthOf (result) = 7)</p>\n<p>if (true and true and true) ---&gt; TRUE, do its nested 'then' scripting/action<br>\nif (true and true and false) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (true and false and true) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (true and false and false) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (false and true and true) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (false and true and false) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (false and false and true) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action<br>\nif (false and false and false) ---&gt; FALSE, skip/don't-do its nested 'then' scripting/action</p>\n\n",
      "PostDate": "2016-11-30T04:20:39.5596754Z",
      "LastEditDate": "2016-11-30T05:00:21.2791112Z"
    },
    {
      "PostId": "4907c842-a45c-4726-8b50-eb04c009f1d1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Try this:\r\n```\r\nmsg (\"You step up to the keypad. Please enter the seven-digit code.\")\r\nget input {\r\n  if (not IsRegexMatch(\"^\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d$\", result)) {\r\n    msg (\"I said seven-digit... That means seven digits. Sorry for the confusion.\")\r\n  }\r\n  else if (ListContains(game.badguesses, result)) {\r\n    msg (\"You tried that before and it did not work.\")\r\n  }\r\n  else if (not GetBoolean(player, \"gotserum\")) {\r\n    msg (\"Incorrect keycode\")\r\n    list add (game.badguesses, result)\r\n  }\r\n  else {\r\n    msg (\"The door slides open\")\r\n  }\r\n}\r\n```\r\nYou will need to add a string list attribute called `badguesses` to the game object.",
      "EditableFormat": "markdown",
      "HTML": "<p>Try this:</p>\n<pre><code>msg (\"You step up to the keypad. Please enter the seven-digit code.\")\nget input {\n  if (not IsRegexMatch(\"^\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d\\\\d$\", result)) {\n    msg (\"I said seven-digit... That means seven digits. Sorry for the confusion.\")\n  }\n  else if (ListContains(game.badguesses, result)) {\n    msg (\"You tried that before and it did not work.\")\n  }\n  else if (not GetBoolean(player, \"gotserum\")) {\n    msg (\"Incorrect keycode\")\n    list add (game.badguesses, result)\n  }\n  else {\n    msg (\"The door slides open\")\n  }\n}\n</code></pre>\n<p>You will need to add a string list attribute called <code>badguesses</code> to the game object.</p>\n\n",
      "PostDate": "2016-11-30T08:11:49.6620003Z",
      "LastEditDate": null
    },
    {
      "PostId": "37a64c47-e8de-4e9f-90ba-2f09360c072f",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you, TP. This works up to a point, but then I get this error which I suspect is my fault becuase I don't know anything about string list attributes.\r\n\r\nI went to the attribute tab of my keypad object (which is where I have your script in the Use/Give tab) and just clicked 'Add' on attributes and typed badguesses, but I don't know what to put in the value for it.\r\n\r\nI get the error if I type seven digits before or after takingthe serum.\r\n```\r\nError running script: Error evaluating expression 'ListContains(game.badguesses, result)': ListContains function expected list parameter but was passed 'null'\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you, TP. This works up to a point, but then I get this error which I suspect is my fault becuase I don't know anything about string list attributes.</p>\n<p>I went to the attribute tab of my keypad object (which is where I have your script in the Use/Give tab) and just clicked 'Add' on attributes and typed badguesses, but I don't know what to put in the value for it.</p>\n<p>I get the error if I type seven digits before or after takingthe serum.</p>\n<pre><code>Error running script: Error evaluating expression 'ListContains(game.badguesses, result)': ListContains function expected list parameter but was passed 'null'\n</code></pre>\n\n",
      "PostDate": "2016-11-30T13:01:12.8128942Z",
      "LastEditDate": null
    },
    {
      "PostId": "ca6f70a9-12bd-4964-9b81-35b7a7706481",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Put the attribute on the `game` object. Set it to be a string list in the drop down list, but leave it empty.",
      "EditableFormat": "markdown",
      "HTML": "<p>Put the attribute on the <code>game</code> object. Set it to be a string list in the drop down list, but leave it empty.</p>\n\n",
      "PostDate": "2016-11-30T14:06:47.7981116Z",
      "LastEditDate": null
    },
    {
      "PostId": "6b2b55c3-eb7e-4aa8-b901-c91e2ae649a1",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, did that, and now I get:\r\n```\r\nError running script: Error evaluating expression 'ListContains(game.badguesses, result)': ListContains function expected list parameter but was passed ''\r\n```\r\nIt's okay, I've got a working system now. This is what I'm using:\r\n```\r\nmsg (\"You step up to the keypad. Please enter the seven-digit code.\")\r\nget input {\r\n  if (GetBoolean(player, \"gotserum\")) {\r\n    msg (\"The door slides open\")\r\n    MoveObject (player, corridor)\r\n  }\r\n  else if (result=\"Cancel\" or result=\"cancel\") {\r\n    ShowRoomDescription\r\n  }\r\n  else {\r\n    msg (\"Incorrect keycode\")\r\n    do (keypadCommand, \"script\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, did that, and now I get:</p>\n<pre><code>Error running script: Error evaluating expression 'ListContains(game.badguesses, result)': ListContains function expected list parameter but was passed ''\n</code></pre>\n<p>It's okay, I've got a working system now. This is what I'm using:</p>\n<pre><code>msg (\"You step up to the keypad. Please enter the seven-digit code.\")\nget input {\n  if (GetBoolean(player, \"gotserum\")) {\n    msg (\"The door slides open\")\n    MoveObject (player, corridor)\n  }\n  else if (result=\"Cancel\" or result=\"cancel\") {\n    ShowRoomDescription\n  }\n  else {\n    msg (\"Incorrect keycode\")\n    do (keypadCommand, \"script\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-11-30T15:09:02.3627025Z",
      "LastEditDate": "2016-11-30T15:10:47.5697679Z"
    },
    {
      "PostId": "383b8854-baa7-4d9f-9037-33b1e3b0d1db",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am guessing you still had `badguesses` as a string, rather than a string _list_.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am guessing you still had <code>badguesses</code> as a string, rather than a string <em>list</em>.</p>\n\n",
      "PostDate": "2016-11-30T15:36:14.014847Z",
      "LastEditDate": null
    },
    {
      "PostId": "1ce7b9d9-c0d2-46a1-837b-de6ef87fd002",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, I did. Sorry.\r\n\r\nI wish my brain functioned better than it does, but it doesn't. I seriously suspect it's diseased.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, I did. Sorry.</p>\n<p>I wish my brain functioned better than it does, but it doesn't. I seriously suspect it's diseased.</p>\n\n",
      "PostDate": "2016-11-30T15:49:09.6905646Z",
      "LastEditDate": "2016-11-30T15:49:47.3953352Z"
    },
    {
      "PostId": "8a9e3edd-20e1-42b1-8681-741ed43810f0",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9ccb562d2deedd23bf9172e8b8f0df58?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another approach...\r\n\"You drink the serum, and suddenly realize that 7341025 is the obvious answer!!! \r\nYou return to the keypad you enter the number and the door opens\"\r\n\r\nBut the player never enters the key code, you just tell the player that he did...\r\nNo need to enter any numbers...\r\nNo need to check and verify the entered digits...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Another approach...<br>\n\"You drink the serum, and suddenly realize that 7341025 is the obvious answer!!!<br>\nYou return to the keypad you enter the number and the door opens\"</p>\n<p>But the player never enters the key code, you just tell the player that he did...<br>\nNo need to enter any numbers...<br>\nNo need to check and verify the entered digits...</p>\n\n",
      "PostDate": "2016-12-01T04:57:02.0834409Z",
      "LastEditDate": null
    },
    {
      "PostId": "9b7aa71f-d820-41e3-a2b4-c879afb35c36",
      "UserId": 107651,
      "Username": "OurJud",
      "AvatarUrl": "http://i.imgur.com/wfM9qy6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's an idea, DarkLizerd, but the system I've got now is good enough I think. I tell them they have to enter a seven-digit number code, so if they want to go 'testing' my system by entering random characters, good luck to them.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's an idea, DarkLizerd, but the system I've got now is good enough I think. I tell them they have to enter a seven-digit number code, so if they want to go 'testing' my system by entering random characters, good luck to them.</p>\n\n",
      "PostDate": "2016-12-01T06:02:47.1735538Z",
      "LastEditDate": null
    }
  ]
}
