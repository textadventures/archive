{
  "Topic": {
    "TopicId": "sxoaphinw0mzponv3phcya",
    "ForumId": "10",
    "Title": "[Solved] I need an expression for \"If player carrying object\"",
    "LastUpdated": "2020-11-22T17:30:34.6618059Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "65436b22-30df-44cf-9928-0ba2e4ffe991",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure how to explain...\r\n\r\nI know the \r\n**Got(object)** function \r\n\r\nbut what I want is something like: \r\n**if Got (** -an object with object.stringattribute = this.stringattribute- **)**",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure how to explain...</p>\n<p>I know the<br>\n<strong>Got(object)</strong> function</p>\n<p>but what I want is something like:<br>\n<strong>if Got (</strong> -an object with object.stringattribute = this.stringattribute- <strong>)</strong></p>\n\n",
      "PostDate": "2020-11-22T17:30:34.6618059Z",
      "LastEditDate": "2020-11-22T21:36:17.0188167Z",
      "link": null
    },
    {
      "PostId": "2ef7a7e4-93bf-4613-b79f-2f331a1618b3",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "something like \r\nif Got(object) and object.stringattribute = \"hallo\"",
      "EditableFormat": "markdown",
      "HTML": "<p>something like<br>\nif Got(object) and object.stringattribute = \"hallo\"</p>\n\n",
      "PostDate": "2020-11-22T17:52:34.1737807Z",
      "LastEditDate": "2020-11-22T17:53:12.439423Z",
      "link": null
    },
    {
      "PostId": "c3555ef5-69b9-47b1-9e05-4805411bdf18",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can use `FilterByAttribute` to get a list of objects with a given attribute.\r\n\r\nFor example, `FilterByAttribute (ScopeInventory(), \"attributename\", \"value\")` will return a list of objects in the inventory for which `object.attributename = \"value\"` is true.\r\n\r\nTo turn a list into a boolean, you'd use `ListCount` to get the number of objects in the list. So you can do something like:\r\n\r\n```\r\nif (ListCount (FilterByAttribute (ScopeInventory(), \"color\", \"red\")) > 0) {\r\n  msg (\"Congratulations, you are carrying something red!\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You can use <code>FilterByAttribute</code> to get a list of objects with a given attribute.</p>\n<p>For example, <code>FilterByAttribute (ScopeInventory(), \"attributename\", \"value\")</code> will return a list of objects in the inventory for which <code>object.attributename = \"value\"</code> is true.</p>\n<p>To turn a list into a boolean, you'd use <code>ListCount</code> to get the number of objects in the list. So you can do something like:</p>\n<pre><code>if (ListCount (FilterByAttribute (ScopeInventory(), \"color\", \"red\")) &gt; 0) {\n  msg (\"Congratulations, you are carrying something red!\")\n}\n</code></pre>\n\n",
      "PostDate": "2020-11-22T18:06:01.3883432Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bfdb4833-55eb-4e66-91a3-f33ff4080f38",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, Thanks! I really can't comprehend the order of operations in expressions like this.\r\n\r\n**mrangel**, thanks.  If I want to use that object this should work too, I hope. However, this will take quite some changes and time to test. \r\nTo use that object I need this beforehand, or?\r\n```\r\nobj = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\r\n\\\\\\EDIT: Looks wrong :-/  This returns a list and not the object, I think.\r\n```\r\nAnd then I could do this?\r\n\r\n```\r\nobj = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\r\n\r\nIf Got(obj) {\r\n  obj.amount = obj.amount + ToInt(result)\r\n  if (this.amount < 1) {\r\n    RemoveObject (this)\r\n  }\r\n}\r\n```\r\n.\r\n\r\n.\r\n\r\n**Pertex**, I needed a function to find that object without having its name by its attribute. Otherwise, actually, your example is similar to what I already had. Thanks though!",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, Thanks! I really can't comprehend the order of operations in expressions like this.</p>\n<p><strong>mrangel</strong>, thanks.  If I want to use that object this should work too, I hope. However, this will take quite some changes and time to test.<br>\nTo use that object I need this beforehand, or?</p>\n<pre><code>obj = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\n\\\\\\EDIT: Looks wrong :-/  This returns a list and not the object, I think.\n</code></pre>\n<p>And then I could do this?</p>\n<pre><code>obj = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\n\nIf Got(obj) {\n  obj.amount = obj.amount + ToInt(result)\n  if (this.amount &lt; 1) {\n    RemoveObject (this)\n  }\n}\n</code></pre>\n<p>.</p>\n<p>.</p>\n<p><strong>Pertex</strong>, I needed a function to find that object without having its name by its attribute. Otherwise, actually, your example is similar to what I already had. Thanks though!</p>\n\n",
      "PostDate": "2020-11-22T18:32:37.706007Z",
      "LastEditDate": "2020-11-22T18:36:43.8997361Z",
      "link": null
    },
    {
      "PostId": "cd803959-44bf-4e2b-aaac-407c890c6836",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Or:\r\n```\r\nif (ListCount (FilterByAttribute (ScopeInventory(), \"color\", this.color)) > 0) {\r\n  obj = PickOneObject (FilterByAttribute (ScopeInventory(), \"color\", this.color))\r\n```\r\nOr: \r\n```\r\nobj = PickOneObject (FilterByAttribute (AllObjects(), \"color\", this.color))\r\nif (Got (obj)) {\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Or:</p>\n<pre><code>if (ListCount (FilterByAttribute (ScopeInventory(), \"color\", this.color)) &gt; 0) {\n  obj = PickOneObject (FilterByAttribute (ScopeInventory(), \"color\", this.color))\n</code></pre>\n<p>Or:</p>\n<pre><code>obj = PickOneObject (FilterByAttribute (AllObjects(), \"color\", this.color))\nif (Got (obj)) {\n</code></pre>\n\n",
      "PostDate": "2020-11-22T18:52:52.7129399Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d3ece93e-a980-4a96-bf7d-e3a42aed91d9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(edited for typo)\r\nIn that case, your `obj` will be a list of objects in the inventory whose `main_alias` is the same as whatever object `this` is.\r\n\r\nYou don't need to use `Got (obj)` in this case, because we know all the objects in the list are in the inventory. If the player doesn't have a matching object, the list will be empty.\r\n\r\n> This returns a list and not the object, I think.\r\n\r\nYes.\r\n\r\nIf the player doesn't have the object, the list will be length zero.\r\n\r\nIf you know the player will only have one object with that `main_alias` (or you only want to do one of them), you would do:\r\n```\r\nlst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\r\n\r\nIf (ListCount (lst) > 0) {\r\n  obj = ObjectListItem (lst, 0)\r\n  obj.amount = obj.amount + ToInt(result)\r\n  if (this.amount < 1) {\r\n    RemoveObject (this)\r\n  }\r\n}\r\n```\r\n\r\nIf you want it to adjust the amount of all items with the same main_alias, that would be:\r\n```\r\nlst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\r\nforeach (obj, lst) {\r\n  obj.amount = obj.amount + ToInt(result)\r\n  if (this.amount < 1) {\r\n    RemoveObject (this)\r\n  }\r\n}\r\n```\r\n(in this case you don't need the if statement, because `foreach` already skips an empty list)",
      "EditableFormat": "markdown",
      "HTML": "<p>(edited for typo)<br>\nIn that case, your <code>obj</code> will be a list of objects in the inventory whose <code>main_alias</code> is the same as whatever object <code>this</code> is.</p>\n<p>You don't need to use <code>Got (obj)</code> in this case, because we know all the objects in the list are in the inventory. If the player doesn't have a matching object, the list will be empty.</p>\n<blockquote>\n<p>This returns a list and not the object, I think.</p>\n</blockquote>\n<p>Yes.</p>\n<p>If the player doesn't have the object, the list will be length zero.</p>\n<p>If you know the player will only have one object with that <code>main_alias</code> (or you only want to do one of them), you would do:</p>\n<pre><code>lst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\n\nIf (ListCount (lst) &gt; 0) {\n  obj = ObjectListItem (lst, 0)\n  obj.amount = obj.amount + ToInt(result)\n  if (this.amount &lt; 1) {\n    RemoveObject (this)\n  }\n}\n</code></pre>\n<p>If you want it to adjust the amount of all items with the same main_alias, that would be:</p>\n<pre><code>lst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\nforeach (obj, lst) {\n  obj.amount = obj.amount + ToInt(result)\n  if (this.amount &lt; 1) {\n    RemoveObject (this)\n  }\n}\n</code></pre>\n<p>(in this case you don't need the if statement, because <code>foreach</code> already skips an empty list)</p>\n\n",
      "PostDate": "2020-11-22T19:02:21.990671Z",
      "LastEditDate": "2020-11-22T19:04:20.9332784Z",
      "link": null
    },
    {
      "PostId": "a224902c-9b04-4ba6-a88c-38f4f4290c14",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If you know the player will only have one object with that main_alias\r\n\r\nThat's the case.\r\n```\r\nlst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\r\n\r\nIf (ListCount (lst) > 0) {\r\n  obj = ObjectListItem (lst, 0)\r\n  obj.amount = obj.amount + ToInt(result)\r\n  if (this.amount < 1) {\r\n    RemoveObject (this)\r\n  }\r\n}\r\n```\r\n\r\nNice! Works like needed. I was looking for something like **ObjectListItem ()**...\r\nThanks!\r\n\r\n<hr>\r\n\r\nI didn't have a solution to make my ***take*** and ***drop*** verbs compatible with my *stacking method* as inherited types. \r\n\r\n```\r\n          <take type=\"script\"><![CDATA[\r\n            if (this.amount > 1) {\r\n              msg (\"How many? (max.\" + ToString(this.amount) + \")<br/>Type a valid number...</br>\")\r\n              get input {\r\n                msg (\"You typed: \" + result + \"</br>\")\r\n                if (IsInt(result) and ToInt(result) < this.amount + 1) {\r\n                  this.amount = this.amount - ToInt(result)\r\n                  lst = FilterByAttribute(ScopeInventory(), \"main_alias\", this.main_alias)\r\n                  if (ListCount (lst) > 0) {\r\n                    obj = ObjectListItem (lst, 0)\r\n                    obj.amount = obj.amount + ToInt(result)\r\n                    msg (\"You take \" + result + \" x \" + this.main_alias + \". You have {object:\" + obj.name + \"}.\")\r\n                    if (this.amount < 1) {\r\n                      RemoveObject (this)\r\n                    }\r\n                  }\r\n                  else {\r\n                    lst2 = FilterByAttribute(GetAllChildObjects(inv_vault), \"main_alias\", this.main_alias)\r\n                    obj = ObjectListItem (lst2, 0)\r\n                    obj.amount = ToInt(result)\r\n                    MoveObject (obj, player)\r\n                    msg (\"You take \" + result + \" x \" + this.main_alias + \". You have {object:\" + obj.name + \"}.\")\r\n                    if (this.amount < 1) {\r\n                      RemoveObject (this)\r\n                    }\r\n                  }\r\n                }\r\n                else {\r\n                  msg (\"You didn't type a valid number.\")\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              lst = FilterByAttribute(ScopeInventory(), \"main_alias\", this.main_alias)\r\n              if (ListCount (lst) > 0) {\r\n                obj = ObjectListItem (lst, 0)\r\n                obj.amount = obj.amount + this.amount\r\n                msg (\"You take \" + this.alias + \". You have {object:\" + obj.name + \"}.\")\r\n                RemoveObject (this)\r\n              }\r\n              else {\r\n                lst2 = FilterByAttribute(GetAllChildObjects(inv_vault), \"main_alias\", this.main_alias)\r\n                obj = ObjectListItem (lst2, 0)\r\n                obj.amount = ToInt(result)\r\n                msg (\"You take \" + this.alias + \". You have {object:\" + obj.name + \"}.\")\r\n                MoveObject (obj, player)\r\n                RemoveObject (this)\r\n              }\r\n            }\r\n          ]]></take>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If you know the player will only have one object with that main_alias</p>\n</blockquote>\n<p>That's the case.</p>\n<pre><code>lst = FilterByAttribute (ScopeInventory(), \"main_alias\", this.main_alias)\n\nIf (ListCount (lst) &gt; 0) {\n  obj = ObjectListItem (lst, 0)\n  obj.amount = obj.amount + ToInt(result)\n  if (this.amount &lt; 1) {\n    RemoveObject (this)\n  }\n}\n</code></pre>\n<p>Nice! Works like needed. I was looking for something like <strong>ObjectListItem ()</strong>...<br>\nThanks!</p>\n<hr>\n<p>I didn't have a solution to make my <strong><em>take</em></strong> and <strong><em>drop</em></strong> verbs compatible with my <em>stacking method</em> as inherited types.</p>\n<pre><code>          &lt;take type=\"script\"&gt;&lt;![CDATA[\n            if (this.amount &gt; 1) {\n              msg (\"How many? (max.\" + ToString(this.amount) + \")&lt;br/&gt;Type a valid number...&lt;/br&gt;\")\n              get input {\n                msg (\"You typed: \" + result + \"&lt;/br&gt;\")\n                if (IsInt(result) and ToInt(result) &lt; this.amount + 1) {\n                  this.amount = this.amount - ToInt(result)\n                  lst = FilterByAttribute(ScopeInventory(), \"main_alias\", this.main_alias)\n                  if (ListCount (lst) &gt; 0) {\n                    obj = ObjectListItem (lst, 0)\n                    obj.amount = obj.amount + ToInt(result)\n                    msg (\"You take \" + result + \" x \" + this.main_alias + \". You have {object:\" + obj.name + \"}.\")\n                    if (this.amount &lt; 1) {\n                      RemoveObject (this)\n                    }\n                  }\n                  else {\n                    lst2 = FilterByAttribute(GetAllChildObjects(inv_vault), \"main_alias\", this.main_alias)\n                    obj = ObjectListItem (lst2, 0)\n                    obj.amount = ToInt(result)\n                    MoveObject (obj, player)\n                    msg (\"You take \" + result + \" x \" + this.main_alias + \". You have {object:\" + obj.name + \"}.\")\n                    if (this.amount &lt; 1) {\n                      RemoveObject (this)\n                    }\n                  }\n                }\n                else {\n                  msg (\"You didn't type a valid number.\")\n                }\n              }\n            }\n            else {\n              lst = FilterByAttribute(ScopeInventory(), \"main_alias\", this.main_alias)\n              if (ListCount (lst) &gt; 0) {\n                obj = ObjectListItem (lst, 0)\n                obj.amount = obj.amount + this.amount\n                msg (\"You take \" + this.alias + \". You have {object:\" + obj.name + \"}.\")\n                RemoveObject (this)\n              }\n              else {\n                lst2 = FilterByAttribute(GetAllChildObjects(inv_vault), \"main_alias\", this.main_alias)\n                obj = ObjectListItem (lst2, 0)\n                obj.amount = ToInt(result)\n                msg (\"You take \" + this.alias + \". You have {object:\" + obj.name + \"}.\")\n                MoveObject (obj, player)\n                RemoveObject (this)\n              }\n            }\n          ]]&gt;&lt;/take&gt;\n</code></pre>\n\n",
      "PostDate": "2020-11-22T21:35:15.4039257Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
