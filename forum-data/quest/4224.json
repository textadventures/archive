{
  "Topic": {
    "TopicId": "4224",
    "ForumId": "10",
    "Title": "How to randomly run script from list, then remove",
    "LastUpdated": "2014-03-11T15:02:47+00:00",
    "ReplyCount": 16
  },
  "Posts": [
    {
      "PostId": "28080",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Hello again -\n\nLast week I asked how to randomly select, then remove an integer from a list.\n\nJaynabonne provided this elegant code to do so:\n\n[quote=&quot;jaynabonne&quot;:257bou85]Here's a simple bit of code that does (I hope) what you want. You didn't say what you wanted to happen when all the strings were exhausted, so I added a small amount of logic to spit out a default message.\n\n[code:257bou85]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;RandomSpeaktoTest&quot;&gt;\n    &lt;gameid&gt;14736beb-f775-4ecd-b503-5f46568e0eee&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;Chatty&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;male&quot; /&gt;\n      &lt;speak type=&quot;script&quot;&gt;\n        count = ListCount(this&#46;responses)\n        if (count = 0) {\n        \ts = &quot;I have nothing left to say&#46;&quot;\n        } else {\n        \ts = StringListItem(this&#46;responses, GetRandomInt(0, count-1))\n        \tlist remove(this&#46;responses, s)\n        }\n       \tmsg(s)\n      &lt;/speak&gt;\n      &lt;responses type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;I can't even remember the last time I saw someone&#46;,&lt;/value&gt;\n        &lt;value&gt;What can I do for you?&lt;/value&gt;\n        &lt;value&gt;They say it's supposed to rain later&#46; Be sure to take your umbrella,&lt;/value&gt;\n        &lt;value&gt;Be careful what you say&#46; Remember - the walls have teeth&#46;&lt;/value&gt;\n        &lt;value&gt;Argue for your limitations and, sure enough, they're yours&#46;&lt;/value&gt;\n      &lt;/responses&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;[/code:257bou85]\n\nIt's also attached as a file. The heart of it is this:\n[code:257bou85]       count = ListCount(this&#46;responses)\n        if (count = 0) {\n        \ts = &quot;I have nothing left to say&#46;&quot;\n        } else {\n        \ts = StringListItem(this&#46;responses, GetRandomInt(0, count-1))\n        \tlist remove(this&#46;responses, s)\n        }\n        msg(s)[/code:257bou85]\nIt selects a random string from the list and then removes the string from the list. The list is attached to the character in question. I assume each character will have its own response. Straightforward, I hope! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:257bou85]\n\nIt was very useful - thanks again!\n\nJaynabonne's code was designed to randomly select and display text (as I had requested).  Now I'd like modify it to run a script. \n\nI'd like to use the provided code to randomly select and run a script from a list, then remove that script from the list. \n\nI have attempted to do this on my own but have ended up writing long &quot;else if&quot; scripts, and I am hoping there a simpler, more efficient way of doing this.\n\nThanks again in advance for your help!\n\nMike",
      "EditableFormat": "bbcode",
      "HTML": "Hello again -<br/><br/>Last week I asked how to randomly select, then remove an integer from a list.<br/><br/>Jaynabonne provided this elegant code to do so:<br/><br/><blockquote><cite>jaynabonne wrote:</cite>Here's a simple bit of code that does (I hope) what you want. You didn't say what you wanted to happen when all the strings were exhausted, so I added a small amount of logic to spit out a default message.<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;RandomSpeaktoTest&quot;&gt;<br/>    &lt;gameid&gt;14736beb-f775-4ecd-b503-5f46568e0eee&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2014&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;Chatty&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;male&quot; /&gt;<br/>      &lt;speak type=&quot;script&quot;&gt;<br/>        count = ListCount(this&#46;responses)<br/>        if (count = 0) {<br/>        \ts = &quot;I have nothing left to say&#46;&quot;<br/>        } else {<br/>        \ts = StringListItem(this&#46;responses, GetRandomInt(0, count-1))<br/>        \tlist remove(this&#46;responses, s)<br/>        }<br/>       \tmsg(s)<br/>      &lt;/speak&gt;<br/>      &lt;responses type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;I can't even remember the last time I saw someone&#46;,&lt;/value&gt;<br/>        &lt;value&gt;What can I do for you?&lt;/value&gt;<br/>        &lt;value&gt;They say it's supposed to rain later&#46; Be sure to take your umbrella,&lt;/value&gt;<br/>        &lt;value&gt;Be careful what you say&#46; Remember - the walls have teeth&#46;&lt;/value&gt;<br/>        &lt;value&gt;Argue for your limitations and, sure enough, they're yours&#46;&lt;/value&gt;<br/>      &lt;/responses&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>It's also attached as a file. The heart of it is this:<br/><pre><code>       count = ListCount(this&#46;responses)<br/>        if (count = 0) {<br/>        \ts = &quot;I have nothing left to say&#46;&quot;<br/>        } else {<br/>        \ts = StringListItem(this&#46;responses, GetRandomInt(0, count-1))<br/>        \tlist remove(this&#46;responses, s)<br/>        }<br/>        msg(s)</code></pre><br/>It selects a random string from the list and then removes the string from the list. The list is attached to the character in question. I assume each character will have its own response. Straightforward, I hope! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>It was very useful - thanks again!<br/><br/>Jaynabonne's code was designed to randomly select and display text (as I had requested).  Now I'd like modify it to run a script. <br/><br/>I'd like to use the provided code to randomly select and run a script from a list, then remove that script from the list. <br/><br/>I have attempted to do this on my own but have ended up writing long &quot;else if&quot; scripts, and I am hoping there a simpler, more efficient way of doing this.<br/><br/>Thanks again in advance for your help!<br/><br/>Mike<div><a href=\"/attachment/867\">RandomSpeaktoTest.aslx</a></div>",
      "PostDate": "2014-03-09T07:50:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28081",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Jay's code already does this:\n\nlist remove(this.responses, s)\n\n[code:1yq0zw5o]       count = ListCount(this&#46;responses)\n        if (count = 0) {\n           s = &quot;I have nothing left to say&#46;&quot;\n        } else {\n           s = StringListItem(this&#46;responses, GetRandomInt(0, count-1))\n           list remove(this&#46;responses, s)\n        }\n        msg(s)[/code:1yq0zw5o]\n\nis Jay's code not working (not running the script) ???\nif it's not, then just change the &quot;msg (s)&quot; to being between the &quot;s = StringListItem(this.responses, GetRandomInt(0, count-1))&quot; and &quot;list remove(this.responses, s)&quot;",
      "EditableFormat": "bbcode",
      "HTML": "Jay's code already does this:<br/><br/>list remove(this.responses, s)<br/><br/><pre><code>       count = ListCount(this&#46;responses)<br/>        if (count = 0) {<br/>           s = &quot;I have nothing left to say&#46;&quot;<br/>        } else {<br/>           s = StringListItem(this&#46;responses, GetRandomInt(0, count-1))<br/>           list remove(this&#46;responses, s)<br/>        }<br/>        msg(s)</code></pre><br/><br/>is Jay's code not working (not running the script) ???<br/>if it's not, then just change the &quot;msg (s)&quot; to being between the &quot;s = StringListItem(this.responses, GetRandomInt(0, count-1))&quot; and &quot;list remove(this.responses, s)&quot;",
      "PostDate": "2014-03-09T16:28:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28082",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Instead of [b:49tpr0m6]display text[/b:49tpr0m6], I'd like to use the code to randomly select and [b:49tpr0m6]run a script[/b:49tpr0m6] from a list, then remove that script from the list. \n\nI've tried to set this up but don't know how to do it.  Thanks.",
      "EditableFormat": "bbcode",
      "HTML": "Instead of <span style=\"font-weight:bold;\">display text</span>, I'd like to use the code to randomly select and <span style=\"font-weight:bold;\">run a script</span> from a list, then remove that script from the list. <br/><br/>I've tried to set this up but don't know how to do it.  Thanks.",
      "PostDate": "2014-03-09T16:34:35+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28083",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah, okay, my bad.\n\nthen just change the &quot;msg (s)&quot; to this:\n\n&quot;invoke (s)&quot; ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Invoke\">http://quest5.net/wiki/Invoke</a><!-- m --> )\n\ninvoke (StringListItem (StringList, Index_Number))\n\nand to be safe, I moved the &quot;invoke&quot; location and applied the &quot;on ready&quot;, lol\n\n[code:2wve66iv]count = ListCount(this&#46;responses)\nif (count = 0) {\n  s = &quot;I have nothing left to say&#46;&quot;\n} else {\n  s = StringListItem(this&#46;responses, GetRandomInt(0, count-1))\n  invoke (s)\n  on ready {\n    list remove(this&#46;responses, s)\n  }\n}[/code:2wve66iv]",
      "EditableFormat": "bbcode",
      "HTML": "ah, okay, my bad.<br/><br/>then just change the &quot;msg (s)&quot; to this:<br/><br/>&quot;invoke (s)&quot; ( <!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Invoke\">http://quest5.net/wiki/Invoke</a><!-- m --> )<br/><br/>invoke (StringListItem (StringList, Index_Number))<br/><br/>and to be safe, I moved the &quot;invoke&quot; location and applied the &quot;on ready&quot;, lol<br/><br/><pre><code>count = ListCount(this&#46;responses)<br/>if (count = 0) {<br/>  s = &quot;I have nothing left to say&#46;&quot;<br/>} else {<br/>  s = StringListItem(this&#46;responses, GetRandomInt(0, count-1))<br/>  invoke (s)<br/>  on ready {<br/>    list remove(this&#46;responses, s)<br/>  }<br/>}</code></pre>",
      "PostDate": "2014-03-09T16:40:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28084",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Thank you!  And can I write scripts as string list items?",
      "EditableFormat": "bbcode",
      "HTML": "Thank you!  And can I write scripts as string list items?",
      "PostDate": "2014-03-09T16:46:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28085",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "actually, I am messing up, argh, sorry.\n\nyou got to use~make a &quot;Script Dictionary&quot;, for scripts\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Dictionaries\">http://quest5.net/wiki/Using_Dictionaries</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Scriptdictionary\">http://quest5.net/wiki/Scriptdictionary</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScriptDictionaryItem\">http://quest5.net/wiki/ScriptDictionaryItem</a><!-- m -->\n\nand also use &quot;invoke&quot; or &quot;do&quot;:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Invoke\">http://quest5.net/wiki/Invoke</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Do\">http://quest5.net/wiki/Do</a><!-- m -->\n\nScript Dictionary:\n\nKey (String) = Expression (Script)\nstring_1 = script_1\nstring_2 = script_2\n\nconceptual: if input is string_1, then output is script_1\n\nScripting: invoke (ScriptDictionaryItem (Object.ScriptDictionary, String_Value)\n\nfor example:\n\nObject.ScriptDictionary:\nHK = run_laps\nMichael = do_push_ups\n\ninvoke (Object.ScriptDictionary, HK)\noutput effect: HK will run laps\n\ninvoke (Object.ScriptDictionary, Michael)\noutput effect: Michael will do push ups\n\nhere's an example:\n\n[code:1asrguq2]&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;homeland_events_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;\n    &lt;item key=&quot;grassland_discovery&quot;&gt;\n      msg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)\n    &lt;/item&gt;\n    &lt;item key=&quot;plains_discovery&quot;&gt;\n      msg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)\n    &lt;/item&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;function name=&quot;explore_function&quot;&gt;\n  invoke (ScriptDictionaryItem (global_data_object&#46;homeland_events_script_dictionary, grassland_discovery))\n  // or&#58; invoke (ScriptDictionaryItem (global_data_object&#46;homeland_events_script_dictionary, plains_discovery))\n&lt;/function&gt;[/code:1asrguq2]\n\n----------------------------\n\nhere's an example game code of all of this stuff working together to do something (&quot;explore&quot; and &quot;travel&quot; features) in a game:\n\nusing &quot;StringLists&quot; and &quot;GetRandomInt&quot; and &quot;ScriptDictionaries&quot; together.\n\nyou &quot;explore&quot; to randomly select events in your starting area, some (well, I haven't added in other unrelated events, such as finding~selecting an item or equipment or a gold bag or a monster~fight event, as this is just for testing) of the events are &quot;area discovery&quot; events, which enable you to now (using the) &quot;travel&quot; to those areas. I don't want these events to get selected again when you &quot;Explore&quot;, so they must be removed from the StringList (which thus then also prevents the ScriptDictionary of those events' scripts from running as well).\n\nfor example:\n\n&quot;explore&quot; (ie: event) button\n&quot;travel&quot; (ie: goto) button\n\nAreas of the game:\n\ngrassland (starting area)\nplains\ndesert\nswamp\n\nGrassland's &quot;Explore&quot; events:\n\n1. discover the &quot;plains&quot; (allows you to now travel to the plains area)\n2. discover the &quot;desert&quot; (allows you to now travel to the plains area)\n3. discover the &quot;swamp&quot; (allows you to now travel to the plains area)\n4. encounter an &quot;orc&quot; monster\n5. find a 50 gold bag\n6. get sick (lose 10 HP each turn until cured or dead)\n7. etc...\n\nplains' &quot;explore&quot; events:\n\n1. etc etc etc\n2. etc etc etc\netc etc etc\n\n(not as elegant as Jay's coding, but it's functional, lol)\n\n[code:1asrguq2]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;\n\t&lt;start type=&quot;script&quot;&gt;\n\t  msg (&quot;Important Note&#58;&quot;)\n\t  msg (&quot;Type in&#58; help&quot;)\n\t&lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;homeland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;grassland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;plains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;desert&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;tundra&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;swampland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;mountains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;forest&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;wasteland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;coastland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;hills&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;help_command&quot;&gt;\n    &lt;pattern&gt;help&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  help_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;explore_command&quot;&gt;\n    &lt;pattern&gt;explore&lt;/pattern&gt;\n    &lt;script&gt;\n      explore_function\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;travel_command&quot;&gt;\n    &lt;pattern&gt;travel&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  travel_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;\n    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;\n    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;\n\t  &lt;item key=&quot;grassland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)\n\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;plains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)\n\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;desert_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)\n\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;tundra_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)\n\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;swampland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)\n\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;forest_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)\n\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;mountains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)\n\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;hills_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)\n\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)\n\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;coastland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)\n\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t&lt;/homeland_events_script_dictionary&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=&quot;global_turnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      game&#46;turns = game&#46;turns + 1\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=&quot;help_function&quot;&gt;\n    msg (&quot;Type 'explore' to explore your area&#46;&quot;)\n\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    switch (game&#46;pov&#46;parent) {\n\t  case (homeland) {\n\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1\n\t\tif (result_1 &gt;= 0) {\n          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))\n          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))\n\t\t  on ready {\n\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {\n\t\t      if (result_2 = item_x) {\n\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t} else {\n\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)\n\t\t}\n\t  }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;travel_function&quot;&gt;\n    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {\n\t  if (not game&#46;pov&#46;parent = GetObject (result)) {\n\t    game&#46;pov&#46;parent = GetObject (result)\n\t  } else {\n\t    msg (&quot;You are already at this area&#46;&quot;)\n\t\task (&quot;Try again?&quot;) {\n\t\t  if (result=true) {\n\t\t    travel_function\n\t\t  } else {\n\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)\n\t\t  }\n\t\t}\n\t  }\n\t}\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:1asrguq2]\n\n----------------------\n\nthe Script Dictionary contains the actual &quot;script events&quot;, so we don't want to add~remove these, and thus instead, we use the &quot;StringList&quot; to add~remove our &quot;events' labels~names&quot;, which determine (by matching up to the ScriptDictionary, and thus in effect, &quot;calling upon&quot; that Script from the ScriptDictionary) what events can be run and~or when they can or will be run.\n\nStringList:\n\n1. HK\n2. Michael\n\nresult_x = StringListItem (Object.StringList, GetRandomInt (0, ListCount (Object.StringList) - 1))\n\n---------------\n\n// result_x is what script we're &quot;calling upon&quot; in the Script Dictionary below\n// if result_x = HK, then run_laps\n// else if result_x = Michael, then do push ups\n\nScriptDictionary:\n\n1. HK=run_laps\n2. Michael=do_push_ups\n\ninvoke (Object.ScriptDictionary, result_x)\n\nand after it is run, we remove that event option from the list, so it can't be run again by the Script Dictionary:\n\nlist remove (Object.StringList, result_x)\n\n// do note that we're removing the item from the *STRING LIST*, we don't change the Script Dictionary at all, as it is simply a &quot;data base&quot; of:\n\nString_1 = Script_1\nString_2 = Script_2\nString_3 = Script_3\nString_4 = Script_4\netc etc etc\n\nthe &quot;invoking&quot; of this &quot;data base&quot; (the Script Dictionary) is based upon the chosen STRING LIST's item (string), but NOT directly upon the Script Dictionary's key item (string).\n\nconceptual:\n\nif (StringList's String = ScriptDictionary's String), then do ScriptDictionary's corresponding Script&#058;\n\nString List:\n(1) String\n(2) String\n(3) String\n\nScript Dictionary:\nString_1 = Script_1\nString_2 = Script_2\nString_3 = Script_3\n\nString List == Script Dictionary:\nString__.. == String_1 = Script_1\nString__.. == String_2 = Script_2\nString__.. == String_3 = Script_3\n\nif (String_List's_String = Script_Dictionary's_String_1), and if (Script_Dictionary's_String_1 = Script_Dictionary's_Script_1), then do~invoke Script_Dictionary's_Script_1\n\nelse\nif (String_List's_String = Script_Dictionary's_String_2), and if (Script_Dictionary's_String_2 = Script_Dictionary's_Script_2), then do~invoke Script_Dictionary's_Script_2)\n\nelse\nif (String_List's_String = Script_Dictionary's_String_3), and if (Script_Dictionary's_String_3 = Script_Dictionary's_Script_3), then do~invoke Script_Dictionary's_Script_3\n\nso by adding~removing from the StringList, we determine what script can or will be (or not) run from the ScriptDictionary.",
      "EditableFormat": "bbcode",
      "HTML": "actually, I am messing up, argh, sorry.<br/><br/>you got to use~make a &quot;Script Dictionary&quot;, for scripts<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Dictionaries\">http://quest5.net/wiki/Using_Dictionaries</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Scriptdictionary\">http://quest5.net/wiki/Scriptdictionary</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScriptDictionaryItem\">http://quest5.net/wiki/ScriptDictionaryItem</a><!-- m --><br/><br/>and also use &quot;invoke&quot; or &quot;do&quot;:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Invoke\">http://quest5.net/wiki/Invoke</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Do\">http://quest5.net/wiki/Do</a><!-- m --><br/><br/>Script Dictionary:<br/><br/>Key (String) = Expression (Script)<br/>string_1 = script_1<br/>string_2 = script_2<br/><br/>conceptual: if input is string_1, then output is script_1<br/><br/>Scripting: invoke (ScriptDictionaryItem (Object.ScriptDictionary, String_Value)<br/><br/>for example:<br/><br/>Object.ScriptDictionary:<br/>HK = run_laps<br/>Michael = do_push_ups<br/><br/>invoke (Object.ScriptDictionary, HK)<br/>output effect: HK will run laps<br/><br/>invoke (Object.ScriptDictionary, Michael)<br/>output effect: Michael will do push ups<br/><br/>here's an example:<br/><br/><pre><code>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;homeland_events_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;<br/>    &lt;item key=&quot;grassland_discovery&quot;&gt;<br/>      msg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)<br/>    &lt;/item&gt;<br/>    &lt;item key=&quot;plains_discovery&quot;&gt;<br/>      msg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)<br/>    &lt;/item&gt;<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;function name=&quot;explore_function&quot;&gt;<br/>  invoke (ScriptDictionaryItem (global_data_object&#46;homeland_events_script_dictionary, grassland_discovery))<br/>  // or&#58; invoke (ScriptDictionaryItem (global_data_object&#46;homeland_events_script_dictionary, plains_discovery))<br/>&lt;/function&gt;</code></pre><br/><br/>----------------------------<br/><br/>here's an example game code of all of this stuff working together to do something (&quot;explore&quot; and &quot;travel&quot; features) in a game:<br/><br/>using &quot;StringLists&quot; and &quot;GetRandomInt&quot; and &quot;ScriptDictionaries&quot; together.<br/><br/>you &quot;explore&quot; to randomly select events in your starting area, some (well, I haven't added in other unrelated events, such as finding~selecting an item or equipment or a gold bag or a monster~fight event, as this is just for testing) of the events are &quot;area discovery&quot; events, which enable you to now (using the) &quot;travel&quot; to those areas. I don't want these events to get selected again when you &quot;Explore&quot;, so they must be removed from the StringList (which thus then also prevents the ScriptDictionary of those events' scripts from running as well).<br/><br/>for example:<br/><br/>&quot;explore&quot; (ie: event) button<br/>&quot;travel&quot; (ie: goto) button<br/><br/>Areas of the game:<br/><br/>grassland (starting area)<br/>plains<br/>desert<br/>swamp<br/><br/>Grassland's &quot;Explore&quot; events:<br/><br/>1. discover the &quot;plains&quot; (allows you to now travel to the plains area)<br/>2. discover the &quot;desert&quot; (allows you to now travel to the plains area)<br/>3. discover the &quot;swamp&quot; (allows you to now travel to the plains area)<br/>4. encounter an &quot;orc&quot; monster<br/>5. find a 50 gold bag<br/>6. get sick (lose 10 HP each turn until cured or dead)<br/>7. etc...<br/><br/>plains' &quot;explore&quot; events:<br/><br/>1. etc etc etc<br/>2. etc etc etc<br/>etc etc etc<br/><br/>(not as elegant as Jay's coding, but it's functional, lol)<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;<br/>\t&lt;start type=&quot;script&quot;&gt;<br/>\t  msg (&quot;Important Note&#58;&quot;)<br/>\t  msg (&quot;Type in&#58; help&quot;)<br/>\t&lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;homeland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;grassland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;plains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;desert&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;tundra&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;swampland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;mountains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;forest&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;wasteland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;coastland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;hills&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;help_command&quot;&gt;<br/>    &lt;pattern&gt;help&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  help_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;explore_command&quot;&gt;<br/>    &lt;pattern&gt;explore&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      explore_function<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;travel_command&quot;&gt;<br/>    &lt;pattern&gt;travel&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  travel_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;<br/>    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;<br/>    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>\t  &lt;item key=&quot;grassland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)<br/>\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;plains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)<br/>\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;desert_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)<br/>\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;tundra_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)<br/>\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;swampland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)<br/>\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;forest_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)<br/>\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;mountains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)<br/>\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;hills_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)<br/>\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)<br/>\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;coastland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)<br/>\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t&lt;/homeland_events_script_dictionary&gt;<br/>  &lt;/object&gt;<br/>  &lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      game&#46;turns = game&#46;turns + 1<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;function name=&quot;help_function&quot;&gt;<br/>    msg (&quot;Type 'explore' to explore your area&#46;&quot;)<br/>\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    switch (game&#46;pov&#46;parent) {<br/>\t  case (homeland) {<br/>\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1<br/>\t\tif (result_1 &gt;= 0) {<br/>          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))<br/>          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))<br/>\t\t  on ready {<br/>\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {<br/>\t\t      if (result_2 = item_x) {<br/>\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)<br/>\t\t\t  }<br/>\t\t\t}<br/>\t\t  }<br/>\t\t} else {<br/>\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)<br/>\t\t}<br/>\t  }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;travel_function&quot;&gt;<br/>    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {<br/>\t  if (not game&#46;pov&#46;parent = GetObject (result)) {<br/>\t    game&#46;pov&#46;parent = GetObject (result)<br/>\t  } else {<br/>\t    msg (&quot;You are already at this area&#46;&quot;)<br/>\t\task (&quot;Try again?&quot;) {<br/>\t\t  if (result=true) {<br/>\t\t    travel_function<br/>\t\t  } else {<br/>\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)<br/>\t\t  }<br/>\t\t}<br/>\t  }<br/>\t}<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>----------------------<br/><br/>the Script Dictionary contains the actual &quot;script events&quot;, so we don't want to add~remove these, and thus instead, we use the &quot;StringList&quot; to add~remove our &quot;events' labels~names&quot;, which determine (by matching up to the ScriptDictionary, and thus in effect, &quot;calling upon&quot; that Script from the ScriptDictionary) what events can be run and~or when they can or will be run.<br/><br/>StringList:<br/><br/>1. HK<br/>2. Michael<br/><br/>result_x = StringListItem (Object.StringList, GetRandomInt (0, ListCount (Object.StringList) - 1))<br/><br/>---------------<br/><br/>// result_x is what script we're &quot;calling upon&quot; in the Script Dictionary below<br/>// if result_x = HK, then run_laps<br/>// else if result_x = Michael, then do push ups<br/><br/>ScriptDictionary:<br/><br/>1. HK=run_laps<br/>2. Michael=do_push_ups<br/><br/>invoke (Object.ScriptDictionary, result_x)<br/><br/>and after it is run, we remove that event option from the list, so it can't be run again by the Script Dictionary:<br/><br/>list remove (Object.StringList, result_x)<br/><br/>// do note that we're removing the item from the *STRING LIST*, we don't change the Script Dictionary at all, as it is simply a &quot;data base&quot; of:<br/><br/>String_1 = Script_1<br/>String_2 = Script_2<br/>String_3 = Script_3<br/>String_4 = Script_4<br/>etc etc etc<br/><br/>the &quot;invoking&quot; of this &quot;data base&quot; (the Script Dictionary) is based upon the chosen STRING LIST's item (string), but NOT directly upon the Script Dictionary's key item (string).<br/><br/>conceptual:<br/><br/>if (StringList's String = ScriptDictionary's String), then do ScriptDictionary's corresponding Script&#058;<br/><br/>String List:<br/>(1) String<br/>(2) String<br/>(3) String<br/><br/>Script Dictionary:<br/>String_1 = Script_1<br/>String_2 = Script_2<br/>String_3 = Script_3<br/><br/>String List == Script Dictionary:<br/>String__.. == String_1 = Script_1<br/>String__.. == String_2 = Script_2<br/>String__.. == String_3 = Script_3<br/><br/>if (String_List's_String = Script_Dictionary's_String_1), and if (Script_Dictionary's_String_1 = Script_Dictionary's_Script_1), then do~invoke Script_Dictionary's_Script_1<br/><br/>else<br/>if (String_List's_String = Script_Dictionary's_String_2), and if (Script_Dictionary's_String_2 = Script_Dictionary's_Script_2), then do~invoke Script_Dictionary's_Script_2)<br/><br/>else<br/>if (String_List's_String = Script_Dictionary's_String_3), and if (Script_Dictionary's_String_3 = Script_Dictionary's_Script_3), then do~invoke Script_Dictionary's_Script_3<br/><br/>so by adding~removing from the StringList, we determine what script can or will be (or not) run from the ScriptDictionary.",
      "PostDate": "2014-03-09T16:57:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28093",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's another example, though it's missing the &quot;removal of topics&quot; code line functionality:\n\n[code:2zo74fw9]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;wise_owl_npc&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alias&gt;Wise Owl&lt;/alias&gt;\n      &lt;displayverbs type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;Inquire&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;inquire type=&quot;script&quot;&gt;\n        show menu (&quot;What do you wish to inquire about?&quot;, global_data_object&#46;inquire_topics_string_list, false) {\n\t\t  invoke (ScriptDictionaryItem (global_data_object&#46;inquire_topics_script_dictionary, result))\n\t\t}\n      &lt;/inquire&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;global_data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    &lt;inquire_topics_string_list type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;princess&lt;/value&gt;\n      &lt;value&gt;sword&lt;/value&gt;\n      &lt;value&gt;dragon&lt;/value&gt;\n    &lt;/inquire_topics_string_list&gt;\n    &lt;dragon_topics_string_list type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;weakness&lt;/value&gt;\n      &lt;value&gt;location&lt;/value&gt;\n    &lt;/dragon_topics_string_list&gt;\n    &lt;inquire_topics_script_dictionary type=&quot;scriptdictionary&quot;&gt;\n      &lt;item key=&quot;princess&quot;&gt;\n        msg (&quot;The princess has been captured by the dragon&#46; Rescue her, and the King will wed thee to her, as his heir to his throne and kingdom! You'll become the new king of this land!&quot;)\n      &lt;/item&gt;\n      &lt;item key=&quot;sword&quot;&gt;\n        msg (&quot;Ah the legendary dragon slayer sword, magically forged&#46;&#46;&#46; and guarded by a powerful sorcerer&#46;&#46;&#46;&quot;)\n      &lt;/item&gt;\n      &lt;item key=&quot;dragon&quot;&gt;\n        show menu (&quot;What about the dragon do you wish to know?&quot;, global_data_object&#46;dragon_topics_string_list, false) {\n          invoke (ScriptDictionaryItem (global_data_object&#46;inquire_topics_script_dictionary, result))\n        }\n      &lt;/item&gt;\n      &lt;item key=&quot;weakness&quot;&gt;\n        msg (&quot;Only the legendary dragon slayer sword can pierce its adamantium scales and thus kill it&quot;)\n      &lt;/item&gt;\n      &lt;item key=&quot;location&quot;&gt;\n        msg (&quot;within the volcano in the lava scorched wasteland far to the eastern edge of this world&quot;)\n      &lt;/item&gt;\n    &lt;/inquire_topics_script_dictionary&gt;\n  &lt;/object&gt;\n  &lt;verb name=&quot;inquire&quot;&gt;\n    &lt;property&gt;inquire&lt;/property&gt;\n    &lt;pattern&gt;Inquire&lt;/pattern&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;[/code:2zo74fw9]",
      "EditableFormat": "bbcode",
      "HTML": "here's another example, though it's missing the &quot;removal of topics&quot; code line functionality:<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d67ec73f-f879-4911-9d88-c02ea527c534&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;wise_owl_npc&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alias&gt;Wise Owl&lt;/alias&gt;<br/>      &lt;displayverbs type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;Inquire&lt;/value&gt;<br/>      &lt;/displayverbs&gt;<br/>      &lt;inquire type=&quot;script&quot;&gt;<br/>        show menu (&quot;What do you wish to inquire about?&quot;, global_data_object&#46;inquire_topics_string_list, false) {<br/>\t\t  invoke (ScriptDictionaryItem (global_data_object&#46;inquire_topics_script_dictionary, result))<br/>\t\t}<br/>      &lt;/inquire&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;global_data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    &lt;inquire_topics_string_list type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;princess&lt;/value&gt;<br/>      &lt;value&gt;sword&lt;/value&gt;<br/>      &lt;value&gt;dragon&lt;/value&gt;<br/>    &lt;/inquire_topics_string_list&gt;<br/>    &lt;dragon_topics_string_list type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;weakness&lt;/value&gt;<br/>      &lt;value&gt;location&lt;/value&gt;<br/>    &lt;/dragon_topics_string_list&gt;<br/>    &lt;inquire_topics_script_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>      &lt;item key=&quot;princess&quot;&gt;<br/>        msg (&quot;The princess has been captured by the dragon&#46; Rescue her, and the King will wed thee to her, as his heir to his throne and kingdom! You'll become the new king of this land!&quot;)<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;sword&quot;&gt;<br/>        msg (&quot;Ah the legendary dragon slayer sword, magically forged&#46;&#46;&#46; and guarded by a powerful sorcerer&#46;&#46;&#46;&quot;)<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;dragon&quot;&gt;<br/>        show menu (&quot;What about the dragon do you wish to know?&quot;, global_data_object&#46;dragon_topics_string_list, false) {<br/>          invoke (ScriptDictionaryItem (global_data_object&#46;inquire_topics_script_dictionary, result))<br/>        }<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;weakness&quot;&gt;<br/>        msg (&quot;Only the legendary dragon slayer sword can pierce its adamantium scales and thus kill it&quot;)<br/>      &lt;/item&gt;<br/>      &lt;item key=&quot;location&quot;&gt;<br/>        msg (&quot;within the volcano in the lava scorched wasteland far to the eastern edge of this world&quot;)<br/>      &lt;/item&gt;<br/>    &lt;/inquire_topics_script_dictionary&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb name=&quot;inquire&quot;&gt;<br/>    &lt;property&gt;inquire&lt;/property&gt;<br/>    &lt;pattern&gt;Inquire&lt;/pattern&gt;<br/>  &lt;/verb&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2014-03-10T01:23:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28094",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Can you show how to invoke the ScriptDictionaryItem on command, instead of selecting from a string?",
      "EditableFormat": "bbcode",
      "HTML": "Can you show how to invoke the ScriptDictionaryItem on command, instead of selecting from a string?",
      "PostDate": "2014-03-10T04:47:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28095",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[code:3q43vnc8]&lt;command name=&quot;hint_command&quot;&gt;\n  &lt;pattern&gt;hint #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    foreach (item_key_x, global_data_object&#46;hint_script_dictionary) {\n      if (text = item_key_x) {\n        invoke (ScriptDictionaryItem (global_data_object&#46;hint_script_dictionary, text))\n      } else {\n        msg (&quot;try another word for your hint topic&quot;)\n      }\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;hint_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;\n    &lt;item key=&quot;dragon&quot;&gt;\n      msg (&quot;dragon&quot;)\n    &lt;/item&gt;\n    &lt;item key=&quot;sword&quot;&gt;\n      msg (&quot;sword&quot;)\n    &lt;/item&gt;\n    &lt;item key=&quot;princess&quot;&gt;\n      msg (&quot;princess&quot;)\n    &lt;/item&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:3q43vnc8]",
      "EditableFormat": "bbcode",
      "HTML": "<pre><code>&lt;command name=&quot;hint_command&quot;&gt;<br/>  &lt;pattern&gt;hint #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    foreach (item_key_x, global_data_object&#46;hint_script_dictionary) {<br/>      if (text = item_key_x) {<br/>        invoke (ScriptDictionaryItem (global_data_object&#46;hint_script_dictionary, text))<br/>      } else {<br/>        msg (&quot;try another word for your hint topic&quot;)<br/>      }<br/>    }<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;hint_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;<br/>    &lt;item key=&quot;dragon&quot;&gt;<br/>      msg (&quot;dragon&quot;)<br/>    &lt;/item&gt;<br/>    &lt;item key=&quot;sword&quot;&gt;<br/>      msg (&quot;sword&quot;)<br/>    &lt;/item&gt;<br/>    &lt;item key=&quot;princess&quot;&gt;<br/>      msg (&quot;princess&quot;)<br/>    &lt;/item&gt;<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2014-03-10T07:53:55+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28096",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "There is another approach: keep it a string list, but then hang the scripts off the object and have the strings reference the script attribute names. (I have to run off to work, so I'm not testing this, but maybe you'll get the feel for it):\n\n[code:na4ja35u]&lt;object name=&quot;Character&quot;&gt;\n    &lt;run type=&quot;script&quot;&gt;\n     // do something here\n    &lt;/run&gt;\n    &lt;jump type=&quot;script&quot;&gt;\n     // do something here\n    &lt;/jump&gt;\n    &lt;hide type=&quot;script&quot;&gt;\n     // do something here\n    &lt;/hide&gt;\n      &lt;actions type=&quot;stringlist&quot;&gt;\n        &lt;value&gt;run&lt;/value&gt;\n        &lt;value&gt;jump&lt;/value&gt;\n        &lt;value&gt;hide&lt;/value&gt;\n     &lt;/actions&gt;\n      &lt;speak type=&quot;script&quot;&gt;\n        count = ListCount(this&#46;actions)\n        if (count = 0) {\n           msg(&quot;He ignores you&quot;)\n        } else {\n           s = StringListItem(this&#46;actions, GetRandomInt(0, count-1))\n           list remove(this&#46;actions, s)\n           do(this, s)\n       }\n      &lt;/speak&gt;\n&lt;/object&gt;[/code:na4ja35u]",
      "EditableFormat": "bbcode",
      "HTML": "There is another approach: keep it a string list, but then hang the scripts off the object and have the strings reference the script attribute names. (I have to run off to work, so I'm not testing this, but maybe you'll get the feel for it):<br/><br/><pre><code>&lt;object name=&quot;Character&quot;&gt;<br/>    &lt;run type=&quot;script&quot;&gt;<br/>     // do something here<br/>    &lt;/run&gt;<br/>    &lt;jump type=&quot;script&quot;&gt;<br/>     // do something here<br/>    &lt;/jump&gt;<br/>    &lt;hide type=&quot;script&quot;&gt;<br/>     // do something here<br/>    &lt;/hide&gt;<br/>      &lt;actions type=&quot;stringlist&quot;&gt;<br/>        &lt;value&gt;run&lt;/value&gt;<br/>        &lt;value&gt;jump&lt;/value&gt;<br/>        &lt;value&gt;hide&lt;/value&gt;<br/>     &lt;/actions&gt;<br/>      &lt;speak type=&quot;script&quot;&gt;<br/>        count = ListCount(this&#46;actions)<br/>        if (count = 0) {<br/>           msg(&quot;He ignores you&quot;)<br/>        } else {<br/>           s = StringListItem(this&#46;actions, GetRandomInt(0, count-1))<br/>           list remove(this&#46;actions, s)<br/>           do(this, s)<br/>       }<br/>      &lt;/speak&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2014-03-10T08:01:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28097",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I wasn't really sure with exactly what you want, as the way you phrased your post, and based upon what can be done with a script dictionary, I'm not sure at exactly what you wanted?\n\n------------------\n\nif you wanted, how to use a ' Command ' for invoking a script from a script dictionary, then my previous post shows that (in the simpliest way posssible).\n\n---------------------\n\nif you just wanted to purely invoke a Script Dictionary's Script, it's:\n\nAs a Verb, a Function, a Command, or a Script...\n\ninvoke (ScriptDictionaryItem (Object.ScriptDictionary, item_key_string_value)\n\nfor example (from my previous post): \n\ninvoke (ScriptDictionaryItem (Object.ScriptDictionary, dragon)\noutputs: msg (&quot;dragon&quot;) -&gt; dragon\n\n---------------\n\nA Dictionary is not ordered like a List is, so you must select a String of the Script Dictionary's Item Key String Value, as you can't use GetRandomInt...\n\nunless you do something creative like this:\n\n[code:15t2ud9s]&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;editor_object &quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;\n    if (not wise_owl_npc&#46;parent = this&#46;parent)\n      wise_owl_npc&#46;parent = game&#46;pov&#46;parent\n    } \n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;wise_owl_npc&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;hint&quot; type=&quot;script&quot;&gt;\n    invoke (ScriptDictionaryItem (Object&#46;ScriptDictionary, ToString (GetRandomInt (1,3)))\n  &lt;/attr&gt;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Hint&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;global_data_object&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;attr name=&quot;hint_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;\n    &lt;item key=&quot;1&quot;&gt;\n      msg (&quot;dragon&quot;)\n    &lt;/item&gt;\n    &lt;item key=&quot;2&quot;&gt;\n      msg (&quot;sword&quot;)\n    &lt;/item&gt;\n    &lt;item key=&quot;3&quot;&gt;\n      msg (&quot;princess&quot;)\n    &lt;/item&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:15t2ud9s]",
      "EditableFormat": "bbcode",
      "HTML": "I wasn't really sure with exactly what you want, as the way you phrased your post, and based upon what can be done with a script dictionary, I'm not sure at exactly what you wanted?<br/><br/>------------------<br/><br/>if you wanted, how to use a ' Command ' for invoking a script from a script dictionary, then my previous post shows that (in the simpliest way posssible).<br/><br/>---------------------<br/><br/>if you just wanted to purely invoke a Script Dictionary's Script, it's:<br/><br/>As a Verb, a Function, a Command, or a Script...<br/><br/>invoke (ScriptDictionaryItem (Object.ScriptDictionary, item_key_string_value)<br/><br/>for example (from my previous post): <br/><br/>invoke (ScriptDictionaryItem (Object.ScriptDictionary, dragon)<br/>outputs: msg (&quot;dragon&quot;) -&gt; dragon<br/><br/>---------------<br/><br/>A Dictionary is not ordered like a List is, so you must select a String of the Script Dictionary's Item Key String Value, as you can't use GetRandomInt...<br/><br/>unless you do something creative like this:<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object &quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;attr name=&quot;changedparent&quot; type=&quot;script&quot;&gt;<br/>    if (not wise_owl_npc&#46;parent = this&#46;parent)<br/>      wise_owl_npc&#46;parent = game&#46;pov&#46;parent<br/>    } <br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;wise_owl_npc&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;hint&quot; type=&quot;script&quot;&gt;<br/>    invoke (ScriptDictionaryItem (Object&#46;ScriptDictionary, ToString (GetRandomInt (1,3)))<br/>  &lt;/attr&gt;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;listextend&quot;&gt;Hint&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;global_data_object&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;attr name=&quot;hint_script_dictionary&quot; type=&quot;scriptdictionary&quot;&gt;<br/>    &lt;item key=&quot;1&quot;&gt;<br/>      msg (&quot;dragon&quot;)<br/>    &lt;/item&gt;<br/>    &lt;item key=&quot;2&quot;&gt;<br/>      msg (&quot;sword&quot;)<br/>    &lt;/item&gt;<br/>    &lt;item key=&quot;3&quot;&gt;<br/>      msg (&quot;princess&quot;)<br/>    &lt;/item&gt;<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2014-03-10T08:20:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28103",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Hi Jay - \n\nThanks for reply.  Using your suggestion, I created an object called &quot;poems&quot; with a stringlist &quot;story&quot; and individual strings that link to scripts.  Unlike your example, I've made the object global instead of associating it with individual objects.\n\nI created a room (&quot;sitting room&quot;) with a script the triggers before the player enters that reduces count of stringlist, and randomly selects a string to trigger a script.  This mirrors your suggestion.\n\nSo, I can get the count to reduce, and print a message when the count is reduced to 0, but I'm getting an error when it tries to compile the code that randomly selects and runs a script.\n\nI've attached the file.  If you could point out my error, I'd very much appreciate it.  I'll continue to try to solve this on my own, but I suspect I may be committing some sort of procedural error of which I'm not aware.\n\nThanks again - I'm getting closer to building the game I'd like.\n\n-Mike",
      "EditableFormat": "bbcode",
      "HTML": "Hi Jay - <br/><br/>Thanks for reply.  Using your suggestion, I created an object called &quot;poems&quot; with a stringlist &quot;story&quot; and individual strings that link to scripts.  Unlike your example, I've made the object global instead of associating it with individual objects.<br/><br/>I created a room (&quot;sitting room&quot;) with a script the triggers before the player enters that reduces count of stringlist, and randomly selects a string to trigger a script.  This mirrors your suggestion.<br/><br/>So, I can get the count to reduce, and print a message when the count is reduced to 0, but I'm getting an error when it tries to compile the code that randomly selects and runs a script.<br/><br/>I've attached the file.  If you could point out my error, I'd very much appreciate it.  I'll continue to try to solve this on my own, but I suspect I may be committing some sort of procedural error of which I'm not aware.<br/><br/>Thanks again - I'm getting closer to building the game I'd like.<br/><br/>-Mike<div><a href=\"/attachment/868\">ForJaynabonne.aslx</a></div>",
      "PostDate": "2014-03-10T19:59:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28106",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I believe if you change this:\n\n[code:1ijz54ll]          do (poems&#46;story, s)[/code:1ijz54ll]\nto this:\n \n[code:1ijz54ll]         do (poems, s)[/code:1ijz54ll]\nit will work.\n\nThe scripts live on the poems object, not the story string list.",
      "EditableFormat": "bbcode",
      "HTML": "I believe if you change this:<br/><br/><pre><code>          do (poems&#46;story, s)</code></pre><br/>to this:<br/> <br/><pre><code>         do (poems, s)</code></pre><br/>it will work.<br/><br/>The scripts live on the poems object, not the story string list.",
      "PostDate": "2014-03-10T21:00:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28108",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Success!  I tested the code and it all does what I need it to do.\n\nI now have the basic components to build.  I'm sure I'll have more questions in the future, but this is a huge leap forward for me.  \n\nThank you!\n\nMike",
      "EditableFormat": "bbcode",
      "HTML": "Success!  I tested the code and it all does what I need it to do.<br/><br/>I now have the basic components to build.  I'm sure I'll have more questions in the future, but this is a huge leap forward for me.  <br/><br/>Thank you!<br/><br/>Mike",
      "PostDate": "2014-03-11T01:18:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28109",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah, you just wanted to know how you run a script on an object... I was leaning towards this as a guess to what you were asking for, but Jay already got it covered.\n\n---------------\n\njust my own commentary, as well:\n\nScripts on Objects, are, in fact, Attributes, just like any other type of Attribute.\n\nAttribute Types: Strings, Integers, Doubles~Floats~Floating_Points, Booleans~Flags, Lists, Dictionaries, [b:nvgan24n][u:nvgan24n]and Scripts[/u:nvgan24n][/b:nvgan24n].\n\nObject.Attribute = Value_or_Expression\n\nHK.favorite_color = black // Type: String\nHK.strength = 100 // Type: Integer\nHK.damage = 123.825 // Type: Double\nHK.dead = false // Type: Boolean\nHK.clothes ( = pretend String_or_Object List ) // Type: List\nHK.fight ( = pretend script block ) // Type: Script\n\nso... as Jay already shown:\n\ninvoke (HK.fight)\ndo (HK, &quot;fight&quot;)\n\n&lt;object name=&quot;HK&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;\n-&gt;-&gt; // whatever scripts\n-&gt; &lt;/attr&gt;\n&lt;/object&gt;\n\n----------------------------\n\nwhereas, a Script Dictionary, is really more when you want to 'select' amongst many scripts. Basically, a script dictionary is just a bunch of &quot;ifs&quot;, just as the &quot;switch&quot; is just a bunch of &quot;ifs&quot; too.\n\nMultiple Ifs:\n\nif (topics)\n-&gt; if (dragon)\n-&gt;-&gt; msg (.....)\n-&gt; else if (sword)\n-&gt;-&gt; msg (....)\n\nis the same as a Switch:\n\nswitch (topics)\n-&gt; case (dragon)\n-&gt;-&gt; msg (.....)\n-&gt; case (sword)\n-&gt;-&gt; msg (......)\n\nis the same as a Script Dictionary:\n\nresult = dragon_or_sword\ninvoke (ScriptDictionaryItem (Object.topics, result))\n\n-----------\n\nA Script Dictionary is the most efficient method to use of the above methods, as it uses~needs the least amount of code lines (especially the more complex your game is with lots of scripts to select from).",
      "EditableFormat": "bbcode",
      "HTML": "ah, you just wanted to know how you run a script on an object... I was leaning towards this as a guess to what you were asking for, but Jay already got it covered.<br/><br/>---------------<br/><br/>just my own commentary, as well:<br/><br/>Scripts on Objects, are, in fact, Attributes, just like any other type of Attribute.<br/><br/>Attribute Types: Strings, Integers, Doubles~Floats~Floating_Points, Booleans~Flags, Lists, Dictionaries, <span style=\"font-weight:bold;\"><span style=\"text-decoration:underline;\">and Scripts</span></span>.<br/><br/>Object.Attribute = Value_or_Expression<br/><br/>HK.favorite_color = black // Type: String<br/>HK.strength = 100 // Type: Integer<br/>HK.damage = 123.825 // Type: Double<br/>HK.dead = false // Type: Boolean<br/>HK.clothes ( = pretend String_or_Object List ) // Type: List<br/>HK.fight ( = pretend script block ) // Type: Script<br/><br/>so... as Jay already shown:<br/><br/>invoke (HK.fight)<br/>do (HK, &quot;fight&quot;)<br/><br/>&lt;object name=&quot;HK&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;attr name=&quot;fight&quot; type=&quot;script&quot;&gt;<br/>-&gt;-&gt; // whatever scripts<br/>-&gt; &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>----------------------------<br/><br/>whereas, a Script Dictionary, is really more when you want to 'select' amongst many scripts. Basically, a script dictionary is just a bunch of &quot;ifs&quot;, just as the &quot;switch&quot; is just a bunch of &quot;ifs&quot; too.<br/><br/>Multiple Ifs:<br/><br/>if (topics)<br/>-&gt; if (dragon)<br/>-&gt;-&gt; msg (.....)<br/>-&gt; else if (sword)<br/>-&gt;-&gt; msg (....)<br/><br/>is the same as a Switch:<br/><br/>switch (topics)<br/>-&gt; case (dragon)<br/>-&gt;-&gt; msg (.....)<br/>-&gt; case (sword)<br/>-&gt;-&gt; msg (......)<br/><br/>is the same as a Script Dictionary:<br/><br/>result = dragon_or_sword<br/>invoke (ScriptDictionaryItem (Object.topics, result))<br/><br/>-----------<br/><br/>A Script Dictionary is the most efficient method to use of the above methods, as it uses~needs the least amount of code lines (especially the more complex your game is with lots of scripts to select from).",
      "PostDate": "2014-03-11T02:06:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28115",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "An important note regarding these two commands:\n\ninvoke (HK.fight)\ndo (HK, &quot;fight&quot;)\n\nThere is a crucial difference between them, which is that if you use &quot;do&quot;, then you will have a &quot;this&quot; parameter for the script to use (HK in this case), whereas in the &quot;invoke&quot; case, you will not. The latter just takes the value of the script and invokes it. You can simulate this by creating a parameters dictionary with the &quot;this&quot; parameter yourself (&quot;do&quot; and &quot;invoke&quot; have variants with another parameter, which is a dictionary of parameters to pass to the script), but it's more work. That is a downside to script dictionaries - you can only use invoke. I personally made a small contribution to the Quest source by simulating the &quot;this&quot; parameter for internal invokes.\n\nAnd for me, a key difference between if/switch and a script dictionary is that the script dictionary case can be dynamically modified at run time (adding and removing scripts) whereas the if/switch code is hard-wired. Of course, if you fixed choices, then that doesn't matter.\n\nFinally, on a more theoretical front, you can view a Quest object as being a dictionary of sorts - you look up values by name... except an object can hold values of all sorts, and you can more easily update them. Quest dictionaries can be a real pain to modify at run-time, as you have to actually remove a value before setting a new one for the same key. Objects don't have that problem - but then creating and manipulating objects at run-time is also a pain. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> No easy answer for all cases, but on a case-by-case basis, one approach usually works better than the other.\n\nIt's funny, but I just realized that I've never used a script dictionary in my code... <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "An important note regarding these two commands:<br/><br/>invoke (HK.fight)<br/>do (HK, &quot;fight&quot;)<br/><br/>There is a crucial difference between them, which is that if you use &quot;do&quot;, then you will have a &quot;this&quot; parameter for the script to use (HK in this case), whereas in the &quot;invoke&quot; case, you will not. The latter just takes the value of the script and invokes it. You can simulate this by creating a parameters dictionary with the &quot;this&quot; parameter yourself (&quot;do&quot; and &quot;invoke&quot; have variants with another parameter, which is a dictionary of parameters to pass to the script), but it's more work. That is a downside to script dictionaries - you can only use invoke. I personally made a small contribution to the Quest source by simulating the &quot;this&quot; parameter for internal invokes.<br/><br/>And for me, a key difference between if/switch and a script dictionary is that the script dictionary case can be dynamically modified at run time (adding and removing scripts) whereas the if/switch code is hard-wired. Of course, if you fixed choices, then that doesn't matter.<br/><br/>Finally, on a more theoretical front, you can view a Quest object as being a dictionary of sorts - you look up values by name... except an object can hold values of all sorts, and you can more easily update them. Quest dictionaries can be a real pain to modify at run-time, as you have to actually remove a value before setting a new one for the same key. Objects don't have that problem - but then creating and manipulating objects at run-time is also a pain. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> No easy answer for all cases, but on a case-by-case basis, one approach usually works better than the other.<br/><br/>It's funny, but I just realized that I've never used a script dictionary in my code... <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-03-11T07:47:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "28119",
      "UserId": 0,
      "Username": "michaelsahn",
      "UserAvatar": null,
      "UserGravatar": "3a9802e1b3c8187c840fa757ffeb896b",
      "EditableText": "Part of the pleasure of leaning to code is that there are many ways to achieve the goal.  It's a lot like writing itself - I first try to get what I want by writing whatever I happen to know, then I iterate on making everything clearer and more efficient.  It's delightful when everything works.\n\nThanks again!\n\nMIke",
      "EditableFormat": "bbcode",
      "HTML": "Part of the pleasure of leaning to code is that there are many ways to achieve the goal.  It's a lot like writing itself - I first try to get what I want by writing whatever I happen to know, then I iterate on making everything clearer and more efficient.  It's delightful when everything works.<br/><br/>Thanks again!<br/><br/>MIke",
      "PostDate": "2014-03-11T15:02:47+00:00",
      "LastEditDate": null
    }
  ]
}
