{
  "Topic": {
    "TopicId": "3766",
    "ForumId": "10",
    "Title": "are function calls reentrant?",
    "LastUpdated": "2013-06-30T23:49:34+01:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "25197",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "I need a function to call itself... (part of a search tree that climbs up a parent of a parent of a...).\nRight now it immediately hangs, and I can't get any msgs to print before it hangs up so troubleshooting is a problem...\nI DO have terminating conditions, but I can't see if they are working right.\nI tried a test case and I get a 'function not found' kind of message.\nthanks",
      "EditableFormat": "bbcode",
      "HTML": "I need a function to call itself... (part of a search tree that climbs up a parent of a parent of a...).<br/>Right now it immediately hangs, and I can't get any msgs to print before it hangs up so troubleshooting is a problem...<br/>I DO have terminating conditions, but I can't see if they are working right.<br/>I tried a test case and I get a 'function not found' kind of message.<br/>thanks",
      "PostDate": "2013-06-29T23:07:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25200",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's an example of a function that calls itself (looping; loops):\n\n[code:36x841kc]&lt;turnscript name=&quot;game_turns_turnscript&quot;&gt;\n  level_up_function\n  game&#46;turns=game&#46;turns+1\n&lt;/turnscript&gt;\n\n&lt;function name=&quot;level_up_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {\n    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)\n    game&#46;pov&#46;level = game&#46;pov&#46;level + 1\n    level_up_function\n  }\n&#93;&#93;&gt;&lt;/function&gt;[/code:36x841kc]",
      "EditableFormat": "bbcode",
      "HTML": "here's an example of a function that calls itself (looping; loops):<br/><br/><pre><code>&lt;turnscript name=&quot;game_turns_turnscript&quot;&gt;<br/>  level_up_function<br/>  game&#46;turns=game&#46;turns+1<br/>&lt;/turnscript&gt;<br/><br/>&lt;function name=&quot;level_up_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {<br/>    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)<br/>    game&#46;pov&#46;level = game&#46;pov&#46;level + 1<br/>    level_up_function<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;</code></pre>",
      "PostDate": "2013-06-30T00:49:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25201",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Recursion is definitely supported. If you're still having trouble, post the function! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Recursion is definitely supported. If you're still having trouble, post the function! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-06-30T01:37:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25203",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "Thanks guys.\nWhen I got the bugs worked out of my simple test case, it also immediately hangs Quests.\nHere's the entire test file.\n[code:3m8s1utc]&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;test2&quot;&gt;\n    &lt;gameid&gt;bb260e55-78d7-4835-a98e-8577930d2f5b&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;attr name=&quot;autodescription_description&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;\n    &lt;attr name=&quot;autodescription_youarein_useprefix&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n    &lt;attr name=&quot;autodescription_youcansee&quot; type=&quot;int&quot;&gt;3&lt;/attr&gt;\n    &lt;attr name=&quot;autodescription_youcango&quot; type=&quot;int&quot;&gt;4&lt;/attr&gt;\n    &lt;autodescription_youarein_newline /&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      StartRec\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n    msg (&quot;parameter&#58; &quot; + i)\n    if (i &gt; 3) {\n      return (i)\n    }\n    par = i+1\n    result = RecursionTest(par)\n    return (result)\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;StartRec&quot;&gt;\n    i = 1\n    result = RecursionTest(i)\n    msg (&quot;RESULT&#58; &quot; + result)\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:3m8s1utc]",
      "EditableFormat": "bbcode",
      "HTML": "Thanks guys.<br/>When I got the bugs worked out of my simple test case, it also immediately hangs Quests.<br/>Here's the entire test file.<br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4873&#46;16527--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;test2&quot;&gt;<br/>    &lt;gameid&gt;bb260e55-78d7-4835-a98e-8577930d2f5b&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;attr name=&quot;autodescription_description&quot; type=&quot;int&quot;&gt;2&lt;/attr&gt;<br/>    &lt;attr name=&quot;autodescription_youarein_useprefix&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>    &lt;attr name=&quot;autodescription_youcansee&quot; type=&quot;int&quot;&gt;3&lt;/attr&gt;<br/>    &lt;attr name=&quot;autodescription_youcango&quot; type=&quot;int&quot;&gt;4&lt;/attr&gt;<br/>    &lt;autodescription_youarein_newline /&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      StartRec<br/>    &lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    msg (&quot;parameter&#58; &quot; + i)<br/>    if (i &gt; 3) {<br/>      return (i)<br/>    }<br/>    par = i+1<br/>    result = RecursionTest(par)<br/>    return (result)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;StartRec&quot;&gt;<br/>    i = 1<br/>    result = RecursionTest(i)<br/>    msg (&quot;RESULT&#58; &quot; + result)<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2013-06-30T03:52:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25204",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "finally... figured out getting this bloody thing to work!\n\nI hope this is what you wanted it to do! (LOL)\n\n[code:97qhskfw]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      StartRec\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n    msg (&quot;parameter&#58; &quot; + i)\n    if (i &lt; 4) {\n      par = i+1\n      i=RecursionTest (par)\n    }\n    return (i)\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;StartRec&quot;&gt;\n    i = 1\n    result = RecursionTest(i)\n    msg (&quot;RESULT&#58; &quot; + result)\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:97qhskfw]\n\nenjoy! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "finally... figured out getting this bloody thing to work!<br/><br/>I hope this is what you wanted it to do! (LOL)<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      StartRec<br/>    &lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    msg (&quot;parameter&#58; &quot; + i)<br/>    if (i &lt; 4) {<br/>      par = i+1<br/>      i=RecursionTest (par)<br/>    }<br/>    return (i)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;StartRec&quot;&gt;<br/>    i = 1<br/>    result = RecursionTest(i)<br/>    msg (&quot;RESULT&#58; &quot; + result)<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>enjoy! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-06-30T06:23:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25205",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "thanks, it works.\nNow.....why?  The only main difference I can see is the lack of multiple return statements.\nMy real application using recursion is much more complex and I need to understand what won't fly.",
      "EditableFormat": "bbcode",
      "HTML": "thanks, it works.<br/>Now.....why?  The only main difference I can see is the lack of multiple return statements.<br/>My real application using recursion is much more complex and I need to understand what won't fly.",
      "PostDate": "2013-06-30T08:10:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25206",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "it took me a long time to figure out to do this:\n\ni=RecursionTest (par)\n\nas before when I had it just as this:\n\nRecursionTest (par)\n~OR~\nx=RecursionTest (par)\n\nI kept getting:\n\nparameter: 1\nparameter: 2\nparameter: 3\nparameter: 4\nRESULT: 1 or 2\n\nand even before this, with an earlier code set up, I got this:\n\nparameter: 1\nparameter: 2\nparameter: 3\nparameter: 4\nerror: ~&quot;could not do return script&quot;\nRESULT: 0\n\n-----------------------\n\nI was able to get the parameters:\n\nparameter: 1\nparameter: 2\nparameter: 3\nparameter: 4\n\nto work correctly pretty quickly, with this:\n\n[code:3g883qfv]&lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (&quot;parameter&#58; &quot; + i)\n  if (i &lt; 4) {\n    par = i+1\n    RecursionTest (par)\n  }\n&#93;&#93;&gt;&lt;/function&gt;[/code:3g883qfv]\n\nbut, I was having a hard time trying to figure out why it wouldn't then work with the &quot;return (i) for the RESULT: 4&quot;, as it had seemed that it should with it correctly updating for each of the parameters' values.\n\nthis is what was happening (as best as I understand it... barely at all, lol):\n\n[code:3g883qfv]&lt;function name=&quot;StartRec&quot;&gt;\n  i=1\n  result=RecursionTest (i -&gt; 1)\n    &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i -&gt; 1&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n      msg (&quot;parameter&#58; &quot; + 1)\n      if (1 &lt; 4) {\n        par = 1+1\n        RecursionTest (par -&gt; 2)\n          &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 2&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n            msg (&quot;parameter&#58; &quot; + 2)\n            if (2 &lt; 4) {\n              par = 2+1\n              RecursionTest (par -&gt; 3)\n                &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 3&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n                  msg (&quot;parameter&#58; &quot; + 3)\n                  if (3 &lt; 4) {\n                    par = 3+1\n                    RecursionTest (par -&gt; 4)\n                      &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 4&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;\n                        msg (&quot;parameter&#58; &quot; + 4)\n                \n                       (Quest comes to a missing link, hence its output of an~the ERROR message)\n\n            }\n            return (i -&gt; 0, 1, or 2 ~ due to never setting &quot;i&quot; as the updated~adder value from the repeated &quot;RecursionTests&quot;, we were using the repeatedly updated~adder &quot;par&quot; variable&#58; 1-&gt;2-&gt;3-&gt;4, but our &quot;i&quot; variable is unused, and remains as initially setted, at&#58; &quot;1&quot;)\n          &lt;/function&gt;\n  msg (&quot;RESULT&#58; result -&gt; 0, 1, or 2 ~ due to never setting &quot;i&quot; as the updated~adder value from the repeated &quot;RecursionTests&quot;, we were using the repeatedly updated~adder &quot;par&quot; variable&#58; 1-&gt;2-&gt;3-&gt;4, but our &quot;i&quot; variable is unused, and remains as initially setted, at&#58; &quot;1&quot;)\n&lt;/function&gt;[/code:3g883qfv]\n\nbut, as can be seen, we've got no connector~link to~for the &quot;return (i)&quot;, so quest sees a~the missing function's return value, thus the error: ~&quot;could not find function, no return value&quot;\n\nAND, we've never set the updating of the &quot;i&quot;, hence the (still mysterious) return of &quot;0 (zero)&quot;, and (non~less-mysterious) return of &quot;1&quot; or &quot;2&quot;, within the &quot;RESULT: X&quot;\n\n--------------------------\n\ntinker with my code yourself, to see how you can mess it up, and maybe understand better what is going on than I can, and it's easier for you to see the bad results yourself from tinkering with my code, than me trying to explain this to you without you getting confused from me not being able to recall exactly what I had coded when I got these bad results of mine, and nor do I want to re-tinker with it myself, as I've already done so long enough just to finally get my working code done for you, lol.",
      "EditableFormat": "bbcode",
      "HTML": "it took me a long time to figure out to do this:<br/><br/>i=RecursionTest (par)<br/><br/>as before when I had it just as this:<br/><br/>RecursionTest (par)<br/>~OR~<br/>x=RecursionTest (par)<br/><br/>I kept getting:<br/><br/>parameter: 1<br/>parameter: 2<br/>parameter: 3<br/>parameter: 4<br/>RESULT: 1 or 2<br/><br/>and even before this, with an earlier code set up, I got this:<br/><br/>parameter: 1<br/>parameter: 2<br/>parameter: 3<br/>parameter: 4<br/>error: ~&quot;could not do return script&quot;<br/>RESULT: 0<br/><br/>-----------------------<br/><br/>I was able to get the parameters:<br/><br/>parameter: 1<br/>parameter: 2<br/>parameter: 3<br/>parameter: 4<br/><br/>to work correctly pretty quickly, with this:<br/><br/><pre><code>&lt;function name=&quot;RecursionTest&quot; parameters=&quot;i&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (&quot;parameter&#58; &quot; + i)<br/>  if (i &lt; 4) {<br/>    par = i+1<br/>    RecursionTest (par)<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;</code></pre><br/><br/>but, I was having a hard time trying to figure out why it wouldn't then work with the &quot;return (i) for the RESULT: 4&quot;, as it had seemed that it should with it correctly updating for each of the parameters' values.<br/><br/>this is what was happening (as best as I understand it... barely at all, lol):<br/><br/><pre><code>&lt;function name=&quot;StartRec&quot;&gt;<br/>  i=1<br/>  result=RecursionTest (i -&gt; 1)<br/>    &lt;function name=&quot;RecursionTest&quot; parameters=&quot;i -&gt; 1&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>      msg (&quot;parameter&#58; &quot; + 1)<br/>      if (1 &lt; 4) {<br/>        par = 1+1<br/>        RecursionTest (par -&gt; 2)<br/>          &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 2&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>            msg (&quot;parameter&#58; &quot; + 2)<br/>            if (2 &lt; 4) {<br/>              par = 2+1<br/>              RecursionTest (par -&gt; 3)<br/>                &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 3&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>                  msg (&quot;parameter&#58; &quot; + 3)<br/>                  if (3 &lt; 4) {<br/>                    par = 3+1<br/>                    RecursionTest (par -&gt; 4)<br/>                      &lt;function name=&quot;RecursionTest&quot; parameters=&quot;par -&gt; 4&quot; type=&quot;int&quot;&gt;&lt;!&#91;CDATA&#91;<br/>                        msg (&quot;parameter&#58; &quot; + 4)<br/>                <br/>                       (Quest comes to a missing link, hence its output of an~the ERROR message)<br/><br/>            }<br/>            return (i -&gt; 0, 1, or 2 ~ due to never setting &quot;i&quot; as the updated~adder value from the repeated &quot;RecursionTests&quot;, we were using the repeatedly updated~adder &quot;par&quot; variable&#58; 1-&gt;2-&gt;3-&gt;4, but our &quot;i&quot; variable is unused, and remains as initially setted, at&#58; &quot;1&quot;)<br/>          &lt;/function&gt;<br/>  msg (&quot;RESULT&#58; result -&gt; 0, 1, or 2 ~ due to never setting &quot;i&quot; as the updated~adder value from the repeated &quot;RecursionTests&quot;, we were using the repeatedly updated~adder &quot;par&quot; variable&#58; 1-&gt;2-&gt;3-&gt;4, but our &quot;i&quot; variable is unused, and remains as initially setted, at&#58; &quot;1&quot;)<br/>&lt;/function&gt;</code></pre><br/><br/>but, as can be seen, we've got no connector~link to~for the &quot;return (i)&quot;, so quest sees a~the missing function's return value, thus the error: ~&quot;could not find function, no return value&quot;<br/><br/>AND, we've never set the updating of the &quot;i&quot;, hence the (still mysterious) return of &quot;0 (zero)&quot;, and (non~less-mysterious) return of &quot;1&quot; or &quot;2&quot;, within the &quot;RESULT: X&quot;<br/><br/>--------------------------<br/><br/>tinker with my code yourself, to see how you can mess it up, and maybe understand better what is going on than I can, and it's easier for you to see the bad results yourself from tinkering with my code, than me trying to explain this to you without you getting confused from me not being able to recall exactly what I had coded when I got these bad results of mine, and nor do I want to re-tinker with it myself, as I've already done so long enough just to finally get my working code done for you, lol.",
      "PostDate": "2013-06-30T08:27:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25207",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "welll thanks for your geek-out, it gives me something to work with at least!  Time to put on my thinking cap.  At least you got something to run.  With me getting a total lock-up there isn't much to do except hammer away until something gives <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nedit:  I replaced the line &quot;return(i)&quot; with &quot;return(par)&quot; which you would think should be just as harmless but I then get an error.  Methinks this is some kind of tomfoolery with local variables and parameter stacks.  I think I might be able to work out exactly where the limitation is.  Probably right about the time one of the other guru's wakes in his own time zone and knows exactly what the issue is.  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "EditableFormat": "bbcode",
      "HTML": "welll thanks for your geek-out, it gives me something to work with at least!  Time to put on my thinking cap.  At least you got something to run.  With me getting a total lock-up there isn't much to do except hammer away until something gives <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>edit:  I replaced the line &quot;return(i)&quot; with &quot;return(par)&quot; which you would think should be just as harmless but I then get an error.  Methinks this is some kind of tomfoolery with local variables and parameter stacks.  I think I might be able to work out exactly where the limitation is.  Probably right about the time one of the other guru's wakes in his own time zone and knows exactly what the issue is.  <!-- s:roll: --><img src=\"{SMILIES_PATH}/icon_rolleyes.gif\" alt=\":roll:\" title=\"Rolling Eyes\" /><!-- s:roll: -->",
      "PostDate": "2013-06-30T09:30:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25209",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I just edited my post, so refresh and look at it again, well just the &quot;this is how I think it works&quot; section anyways, as I think I got it hopefully explained correctly now... lol\n\n-----------\n\nI meant to take my working code, and change things (&quot;tinker&quot;) to try to get my bad results, as I might not be posting correctly what coding setup produced those bad results of mine that I was trying to explain about. Easier for you to change things, and see what bad things result from your changes to my code, then me trying to remember what I had done (what my code setup was like) to produce those bad results of mine (I went through a lot of code setups, with small tweaks, thus, I can't remember what caused what, lol).",
      "EditableFormat": "bbcode",
      "HTML": "I just edited my post, so refresh and look at it again, well just the &quot;this is how I think it works&quot; section anyways, as I think I got it hopefully explained correctly now... lol<br/><br/>-----------<br/><br/>I meant to take my working code, and change things (&quot;tinker&quot;) to try to get my bad results, as I might not be posting correctly what coding setup produced those bad results of mine that I was trying to explain about. Easier for you to change things, and see what bad things result from your changes to my code, then me trying to remember what I had done (what my code setup was like) to produce those bad results of mine (I went through a lot of code setups, with small tweaks, thus, I can't remember what caused what, lol).",
      "PostDate": "2013-06-30T09:35:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25211",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "The problem here is something I consider a flaw in Quest - the &quot;return&quot; statement does *not* cause execution flow to exit the function. It just sets a return value and then plods on.\n\nI really wish Alex would fix this. It's counterintuitive to every other language that I know of that has a &quot;return&quot; statement, and it causes grief like this. And it doesn't serve any useful purpose as it's currently implemented.\n\nTry this and you'll see:\n\n[code:1v98vra9]msg(&quot;before return&quot;)\nreturn (something)\nmsg(&quot;after return&quot;)[/code:1v98vra9]\n\nBoth msg's will execute.",
      "EditableFormat": "bbcode",
      "HTML": "The problem here is something I consider a flaw in Quest - the &quot;return&quot; statement does *not* cause execution flow to exit the function. It just sets a return value and then plods on.<br/><br/>I really wish Alex would fix this. It's counterintuitive to every other language that I know of that has a &quot;return&quot; statement, and it causes grief like this. And it doesn't serve any useful purpose as it's currently implemented.<br/><br/>Try this and you'll see:<br/><br/><pre><code>msg(&quot;before return&quot;)<br/>return (something)<br/>msg(&quot;after return&quot;)</code></pre><br/><br/>Both msg's will execute.",
      "PostDate": "2013-06-30T10:14:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25212",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "...and that explains why I studied physics and not programming.  But it clarifies SO much.  The scientific method only goes so far in the world of software...\n\n I took my original code:\n[code:27efo7yo]msg (&quot;parameter&#58; &quot; + i)\nif (i &gt;= 3) {\n  return (i)\n}\n  par = i+1\n  result = RecursionTest (par)\n  return (result)\n}[/code:27efo7yo]\n\nand just inserted a flow-controlling ELSE:\n[code:27efo7yo]msg (&quot;parameter&#58; &quot; + i)\nif (i &gt;= 3) {\n  return (i)\n}\nelse {\n  par = i+1\n  result = RecursionTest (par)\n  return (result)\n}[/code:27efo7yo]\n\nand it works great!.. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> I can go to bed now and fall asleep with dreams of productive coding caressing my troubled brow.\nthank you\n <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\n\nthanks",
      "EditableFormat": "bbcode",
      "HTML": "...and that explains why I studied physics and not programming.  But it clarifies SO much.  The scientific method only goes so far in the world of software...<br/><br/> I took my original code:<br/><pre><code>msg (&quot;parameter&#58; &quot; + i)<br/>if (i &gt;= 3) {<br/>  return (i)<br/>}<br/>  par = i+1<br/>  result = RecursionTest (par)<br/>  return (result)<br/>}</code></pre><br/><br/>and just inserted a flow-controlling ELSE:<br/><pre><code>msg (&quot;parameter&#58; &quot; + i)<br/>if (i &gt;= 3) {<br/>  return (i)<br/>}<br/>else {<br/>  par = i+1<br/>  result = RecursionTest (par)<br/>  return (result)<br/>}</code></pre><br/><br/>and it works great!.. <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->   <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: --> I can go to bed now and fall asleep with dreams of productive coding caressing my troubled brow.<br/>thank you<br/> <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/><br/>thanks",
      "PostDate": "2013-06-30T10:50:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25213",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2jah1phe]The problem here is something I consider a flaw in Quest - the &quot;return&quot; statement does *not* cause execution flow to exit the function. It just sets a return value and then plods on.\n\nI really wish Alex would fix this. It's counterintuitive to every other language that I know of that has a &quot;return&quot; statement, and it causes grief like this. And it doesn't serve any useful purpose as it's currently implemented.\n\nTry this and you'll see:\n\n[code:2jah1phe]msg(&quot;before return&quot;)\nreturn (something)\nmsg(&quot;after return&quot;)[/code:2jah1phe]\n\nBoth msg's will execute.[/quote:2jah1phe]\n\nUpon reflection I seem to remember some language way back that operated like this, Fortran maybe?  I just recall the need to account for the 'fall through'.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>The problem here is something I consider a flaw in Quest - the &quot;return&quot; statement does *not* cause execution flow to exit the function. It just sets a return value and then plods on.<br/><br/>I really wish Alex would fix this. It's counterintuitive to every other language that I know of that has a &quot;return&quot; statement, and it causes grief like this. And it doesn't serve any useful purpose as it's currently implemented.<br/><br/>Try this and you'll see:<br/><br/><pre><code>msg(&quot;before return&quot;)<br/>return (something)<br/>msg(&quot;after return&quot;)</code></pre><br/><br/>Both msg's will execute.</blockquote><br/><br/>Upon reflection I seem to remember some language way back that operated like this, Fortran maybe?  I just recall the need to account for the 'fall through'.",
      "PostDate": "2013-06-30T10:54:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25214",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well that explains it - I never studied Fortran <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Well that explains it - I never studied Fortran <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-06-30T10:56:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25217",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "You [i:mb3xsvss]could [/i:mb3xsvss]make the case that breaking control flow in the middle of functions leads to less clear and possibly confusing code. I guess you could say that about making return's behavior different than nearly every other language too though <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "EditableFormat": "bbcode",
      "HTML": "You <span style=\"font-style:italic;\">could </span>make the case that breaking control flow in the middle of functions leads to less clear and possibly confusing code. I guess you could say that about making return's behavior different than nearly every other language too though <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->.",
      "PostDate": "2013-06-30T18:32:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25218",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "whoa... I thought I had tried doing that Shadow, and it didn't work for me... obviously, I must not have done it exactly as you have (a small difference maybe, though I did try putting in the &quot;else&quot;... GRRRowles, laughs), or it woulda worked for me, lol.",
      "EditableFormat": "bbcode",
      "HTML": "whoa... I thought I had tried doing that Shadow, and it didn't work for me... obviously, I must not have done it exactly as you have (a small difference maybe, though I did try putting in the &quot;else&quot;... GRRRowles, laughs), or it woulda worked for me, lol.",
      "PostDate": "2013-06-30T19:19:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25220",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "George, I agree. I do try to have my functions (as much as possible) with single exit points. I think to really make that easier, Quest needs the ability to break out of a loop. (And even add &quot;goto&quot; - ok, I'm kidding.)",
      "EditableFormat": "bbcode",
      "HTML": "George, I agree. I do try to have my functions (as much as possible) with single exit points. I think to really make that easier, Quest needs the ability to break out of a loop. (And even add &quot;goto&quot; - ok, I'm kidding.)",
      "PostDate": "2013-06-30T19:28:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25221",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "why are you kidding about a script &quot;goto&quot; (like in command prompt language*), as wouldn't that be useful for us?\n\n*Command Prompt:\n\n(well, this isn't an example of breaking out of a loop, but it is of what a &quot;script goto&quot; does, I hope we're talking~thinking about the same thing anyways, lol)\n\n:start_character_creation\necho What is your name?\nset /p player_name=\n(etc etc etc coding)\necho Is this the character that you want?\necho Type 1 for yes or 2 for no\nset /p result=\nif %result%==2 goto start_character_creation",
      "EditableFormat": "bbcode",
      "HTML": "why are you kidding about a script &quot;goto&quot; (like in command prompt language*), as wouldn't that be useful for us?<br/><br/>*Command Prompt:<br/><br/>(well, this isn't an example of breaking out of a loop, but it is of what a &quot;script goto&quot; does, I hope we're talking~thinking about the same thing anyways, lol)<br/><br/>:start_character_creation<br/>echo What is your name?<br/>set /p player_name=<br/>(etc etc etc coding)<br/>echo Is this the character that you want?<br/>echo Type 1 for yes or 2 for no<br/>set /p result=<br/>if %result%==2 goto start_character_creation",
      "PostDate": "2013-06-30T19:37:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25223",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Because &quot;goto&quot; is considered the bane of structured code design, a jumping around in the code that results in hard-to-follow &quot;spaghetti&quot; code. I used to use &quot;gotos&quot; back in the BASIC days, as there were no loops structures back then, for example. But I haven't used a &quot;goto&quot; in perhaps 20 years now. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Because &quot;goto&quot; is considered the bane of structured code design, a jumping around in the code that results in hard-to-follow &quot;spaghetti&quot; code. I used to use &quot;gotos&quot; back in the BASIC days, as there were no loops structures back then, for example. But I haven't used a &quot;goto&quot; in perhaps 20 years now. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-06-30T20:27:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25226",
      "UserId": 0,
      "Username": "shadowphile",
      "UserAvatar": null,
      "UserGravatar": "e3cc24e20c3199b383451c382c2c0b17",
      "EditableText": "funny...this issue had nothing to do with recursion <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\nIt also suggests that any other functions I have may not be working right and I don't even now it!  Scanning all my code starting..now.",
      "EditableFormat": "bbcode",
      "HTML": "funny...this issue had nothing to do with recursion <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/>It also suggests that any other functions I have may not be working right and I don't even now it!  Scanning all my code starting..now.",
      "PostDate": "2013-06-30T22:23:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25230",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Ah, I see now, I didn't realize how messy and convoluted it can make your code structure, hehe. I've got a lot to learn about coding and its &quot;logic theory&quot; still, lol. I wasn't sure if you were being sarcastic in your remark about the &quot;goto&quot; so I had tried to ask about it in a neutral way, though I see I was right in my feeling that you were being sarcastic about using a &quot;script goto&quot;, and now I know why, too! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Ah, I see now, I didn't realize how messy and convoluted it can make your code structure, hehe. I've got a lot to learn about coding and its &quot;logic theory&quot; still, lol. I wasn't sure if you were being sarcastic in your remark about the &quot;goto&quot; so I had tried to ask about it in a neutral way, though I see I was right in my feeling that you were being sarcastic about using a &quot;script goto&quot;, and now I know why, too! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-06-30T23:49:34+01:00",
      "LastEditDate": null
    }
  ]
}
