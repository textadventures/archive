{
  "Topic": {
    "TopicId": "zfxqyhg55k_fafb0vpxwug",
    "ForumId": "10",
    "Title": "D10 combat",
    "LastUpdated": "2016-07-16T02:59:43.38836Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "565cbce1-c76a-46f2-b618-8931af3660b6",
      "UserId": 252673,
      "Username": "Bronteboghopper",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "da8dc7b31964ef21502656e11cfc4fbb",
      "EditableText": "I am looking to write a game with a combat system similar to WOD. Each person will roll a number of D10s in attack (depending on how tough they are) each 8, 9, 10 is a success (tens get a reroll).\r\n\r\nThe heroes defence is deducted from the attackers dice pool. So if you have an attack of 5 and a defence of one your final attack will consist of 4 dice being rolled.\r\n\r\nEach villain will attack after a set time has passed (say 5 seconds). The hero will also attack after a set time as well.\r\nIf a hero tries to flee before the end of combat there will be an attack of opportunity from the enemy.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am looking to write a game with a combat system similar to WOD. Each person will roll a number of D10s in attack (depending on how tough they are) each 8, 9, 10 is a success (tens get a reroll).</p>\n<p>The heroes defence is deducted from the attackers dice pool. So if you have an attack of 5 and a defence of one your final attack will consist of 4 dice being rolled.</p>\n<p>Each villain will attack after a set time has passed (say 5 seconds). The hero will also attack after a set time as well.<br>\nIf a hero tries to flee before the end of combat there will be an attack of opportunity from the enemy.</p>\n\n",
      "PostDate": "2016-07-16T02:59:43.38836Z",
      "LastEditDate": null
    },
    {
      "PostId": "ecba93d2-642f-44ac-a876-6c5955b5c4c6",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Whew.  Before you start writing a game with this kind of combat system, I suggest, and hope, that you have a high level of comfort with coding or using the Quest GUI.  This is pretty complex stuff.  Before someone jumps on here and spends a considerable amount of time offering advice or solutions for this, it would be a great comfort to know that you have some experience with Quest/coding.  If there is any level of doubt with this, I would suggest starting VERY small with some test games.  Create one room and one villain, create your code, and test it.  Start small.\r\n\r\nThere is at least one combat library out there (I believe it is authored by The Pixie), but I do not think it is geared toward what you are trying to implement.  If the community knows that you have a high level of experience with coding/Quest, then I'm sure they will offer great help.  If you do not have that level of experience, I fear that they would waste their time responding.\r\n\r\nI only say that because I am a code noob but have been using Quest for a couple years.  I have not attempted a combat system yet (essentially because I am not good enough myself), but I am trying to implement a VERY simple one with my most recent WIP.  What you are attempting is pretty advanced stuff.  Just a warning.\r\n\r\nBUT, if you are comfortable climbing this mountain, I'm sure help is on the way, but please let us (them) know your level of experience/comfortability  using Quest and your experience with code.\r\n\r\nI'd help, but I am in no position to suggest anything useful!  lol\r\n\r\nGood luck!\r\n\r\nXanMag",
      "EditableFormat": "markdown",
      "HTML": "<p>Whew.  Before you start writing a game with this kind of combat system, I suggest, and hope, that you have a high level of comfort with coding or using the Quest GUI.  This is pretty complex stuff.  Before someone jumps on here and spends a considerable amount of time offering advice or solutions for this, it would be a great comfort to know that you have some experience with Quest/coding.  If there is any level of doubt with this, I would suggest starting VERY small with some test games.  Create one room and one villain, create your code, and test it.  Start small.</p>\n<p>There is at least one combat library out there (I believe it is authored by The Pixie), but I do not think it is geared toward what you are trying to implement.  If the community knows that you have a high level of experience with coding/Quest, then I'm sure they will offer great help.  If you do not have that level of experience, I fear that they would waste their time responding.</p>\n<p>I only say that because I am a code noob but have been using Quest for a couple years.  I have not attempted a combat system yet (essentially because I am not good enough myself), but I am trying to implement a VERY simple one with my most recent WIP.  What you are attempting is pretty advanced stuff.  Just a warning.</p>\n<p>BUT, if you are comfortable climbing this mountain, I'm sure help is on the way, but please let us (them) know your level of experience/comfortability  using Quest and your experience with code.</p>\n<p>I'd help, but I am in no position to suggest anything useful!  lol</p>\n<p>Good luck!</p>\n<p>XanMag</p>\n\n",
      "PostDate": "2016-07-16T03:42:03.5148957Z",
      "LastEditDate": null
    },
    {
      "PostId": "433d7460-b553-433e-b666-997a2efb41b6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not familiar with WOD, but going from your post, if I understand it...\r\n\r\nalso, using actual clock-time is messy (especially via online play), so you might want to use the internal turns (which is basically any clicking on hyperlinks/buttons/etc and/or entering typed-in input while playing the game) instead.\r\n\r\nquest already nicely has a built-in dice rolling Function:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/diceroll.html\r\n\r\n***********\r\nHK Edit: found what WoD is, hehe: https://en.wikipedia.org/wiki/World_of_Darkness (excerpt seen below)\r\n\r\nThe new World of Darkness rules are much more streamlined than the previous system. One 10-sided die is rolled for any 'dot' possessed in Attributes and Skills, and 1 success is achieved for every die showing a result of 8 or higher. The \"10-again\" rule has been added, in that a 10 indicates a re-roll, and the 10 still counts as a success (this rule was present in the original WoD only for Traits ranked at least 4 out of the usual maximum of 5, and then only for a \"Specialty\" or particular sub-field of the Trait's application). If another 10 is rolled, this step is repeated until anything but a 10 is rolled. 'Exceptional Successes' are indicated by having 5 or more successes on the action and can be regulated by the Storyteller. 'Dramatic Failures' are now only possible on \"Chance\" die rolls: When a dice pool is reduced by penalties to 0 or less, a single Chance die is rolled. If a 10 is rolled, it is a success (and, as mentioned above, is re-rolled). If the result is less than 10 but not 1, then it is a 'Simple Failure'. On a Chance die, if the roll is a 1, then it is a 'Dramatic Failure', which is usually worse than a Simple Failure of the action and is regulated by the Storyteller (although examples of Dramatic Failures in certain situations are occasionally given).\r\n\r\nThe game also features a much more simplified combat system. In the old system, each attack made during a combat scene could easily involve 4 separate rolls and, in many cases, required more due to supernatural abilities possessed by the characters. Combat scenes involving large numbers of combatants could take a very long time to resolve. \r\n\r\nThe new system requires only 1 roll which is adjusted by the defensive abilities of the character being attacked and represents both the success and failure of the attack, as well as the damage inflicted (indicated by number of successes).\r\n**********\r\n\r\nusing the 'new (simplified) rule system'... though this too is a bit unclear (grr!), as I'm not quite sure of everything that you need from just your post's contents, here's an example:\r\n\r\n(also, this does NOT implement/include when the attacker and defender attacks, nor deals with if they flee/run away/escape or not) \r\n\r\n```\r\n<object name=\"player\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">10</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">5</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">8</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">4</attr>\r\n</object>\r\n\r\n<object name=\"dragon\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">11</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">6</attr>\r\n</object>\r\n\r\n// where-ever (whatever scripting/inside of whatever Element) you want to use to activate the Function:\r\ncombat_function (player, orc) // the 'player' attacks the 'orc'\r\ncombat_function (orc, player) // the 'orc' attacks the 'player'\r\ncombat_function (player, dragon) // the 'player' attacks the 'dragon'\r\ncombat_function (dragon, player) // the 'dragon' attacks the 'player'\r\n\r\n// your Function (what it does):\r\n<function name=\"combat_function\" parameters=\"attacker_object_parameter,defender_object_parameter\">\r\n  success_integer_variable = 0\r\n  failure_integer_variable = 0\r\n  damage_integer_variable = 0\r\n  number_of_dice_rolled_integer_variable = attacker_object_parameter.attack_integer_attribute - defender_object_parameter.defense_integer_attribute\r\n  if (number_of_dice_rolled_integer_variable < 1) {\r\n    msg (attacker_object_parameter.name + \"'s attack failed to penetrate \" + defender_object_parameter.name + \"'s defense.\")\r\n  } else {\r\n    while (number_of_dice_rolled_integer_variable > 0) {\r\n      roll_result_integer_variable = DiceRoll (\"1d10\")\r\n      if (roll_result_integer_variable = 10) {\r\n        success_integer_variable = success_integer_variable + 1\r\n      } else if (roll_result_integer_variable > 7) {\r\n        success_integer_variable = success_integer_variable + 1\r\n        damage_integer_variable = damage_integer_variable + roll_result_integer_variable // this is your accumulated (sum'ed up total) damage // if you need the individual damage for each roll, let me know\r\n        number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\r\n      } else {\r\n        failure_integer_variable = failure_integer_variable + 1\r\n        number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\r\n      }\r\n    }\r\n    // whatever scripting you want to do with your 'success_integer_variable', 'failure_integer_variable', and/or 'damage_integer_variable', goes here.\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not familiar with WOD, but going from your post, if I understand it...</p>\n<p>also, using actual clock-time is messy (especially via online play), so you might want to use the internal turns (which is basically any clicking on hyperlinks/buttons/etc and/or entering typed-in input while playing the game) instead.</p>\n<p>quest already nicely has a built-in dice rolling Function:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/diceroll.html</p>\n<hr>\n<p>HK Edit: found what WoD is, hehe: https://en.wikipedia.org/wiki/World_of_Darkness (excerpt seen below)</p>\n<p>The new World of Darkness rules are much more streamlined than the previous system. One 10-sided die is rolled for any 'dot' possessed in Attributes and Skills, and 1 success is achieved for every die showing a result of 8 or higher. The \"10-again\" rule has been added, in that a 10 indicates a re-roll, and the 10 still counts as a success (this rule was present in the original WoD only for Traits ranked at least 4 out of the usual maximum of 5, and then only for a \"Specialty\" or particular sub-field of the Trait's application). If another 10 is rolled, this step is repeated until anything but a 10 is rolled. 'Exceptional Successes' are indicated by having 5 or more successes on the action and can be regulated by the Storyteller. 'Dramatic Failures' are now only possible on \"Chance\" die rolls: When a dice pool is reduced by penalties to 0 or less, a single Chance die is rolled. If a 10 is rolled, it is a success (and, as mentioned above, is re-rolled). If the result is less than 10 but not 1, then it is a 'Simple Failure'. On a Chance die, if the roll is a 1, then it is a 'Dramatic Failure', which is usually worse than a Simple Failure of the action and is regulated by the Storyteller (although examples of Dramatic Failures in certain situations are occasionally given).</p>\n<p>The game also features a much more simplified combat system. In the old system, each attack made during a combat scene could easily involve 4 separate rolls and, in many cases, required more due to supernatural abilities possessed by the characters. Combat scenes involving large numbers of combatants could take a very long time to resolve.</p>\n<p>The new system requires only 1 roll which is adjusted by the defensive abilities of the character being attacked and represents both the success and failure of the attack, as well as the damage inflicted (indicated by number of successes).</p>\n<hr>\n<p>using the 'new (simplified) rule system'... though this too is a bit unclear (grr!), as I'm not quite sure of everything that you need from just your post's contents, here's an example:</p>\n<p>(also, this does NOT implement/include when the attacker and defender attacks, nor deals with if they flee/run away/escape or not)</p>\n<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;10&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;5&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;8&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;4&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"dragon\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;11&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;6&lt;/attr&gt;\n&lt;/object&gt;\n\n// where-ever (whatever scripting/inside of whatever Element) you want to use to activate the Function:\ncombat_function (player, orc) // the 'player' attacks the 'orc'\ncombat_function (orc, player) // the 'orc' attacks the 'player'\ncombat_function (player, dragon) // the 'player' attacks the 'dragon'\ncombat_function (dragon, player) // the 'dragon' attacks the 'player'\n\n// your Function (what it does):\n&lt;function name=\"combat_function\" parameters=\"attacker_object_parameter,defender_object_parameter\"&gt;\n  success_integer_variable = 0\n  failure_integer_variable = 0\n  damage_integer_variable = 0\n  number_of_dice_rolled_integer_variable = attacker_object_parameter.attack_integer_attribute - defender_object_parameter.defense_integer_attribute\n  if (number_of_dice_rolled_integer_variable &lt; 1) {\n    msg (attacker_object_parameter.name + \"'s attack failed to penetrate \" + defender_object_parameter.name + \"'s defense.\")\n  } else {\n    while (number_of_dice_rolled_integer_variable &gt; 0) {\n      roll_result_integer_variable = DiceRoll (\"1d10\")\n      if (roll_result_integer_variable = 10) {\n        success_integer_variable = success_integer_variable + 1\n      } else if (roll_result_integer_variable &gt; 7) {\n        success_integer_variable = success_integer_variable + 1\n        damage_integer_variable = damage_integer_variable + roll_result_integer_variable // this is your accumulated (sum'ed up total) damage // if you need the individual damage for each roll, let me know\n        number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\n      } else {\n        failure_integer_variable = failure_integer_variable + 1\n        number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\n      }\n    }\n    // whatever scripting you want to do with your 'success_integer_variable', 'failure_integer_variable', and/or 'damage_integer_variable', goes here.\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2016-07-16T07:24:37.8920671Z",
      "LastEditDate": "2016-07-16T07:46:10.6087476Z"
    },
    {
      "PostId": "eafcceb3-dc17-49c6-9992-946b0e49b47f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "My combat library is here:\r\nhttp://textadventures.co.uk/forum/samples/topic/4886/rpg-style-combat-library\r\n\r\nIt is worth looking at so you get an idea of how much coding will be required, if nothing else. I used a D&D style D20 system, but a WoD could be implemented as readily.  The exact mechanics do not impact on the code that heavily, what makes it big is allowing for all the possibilities. There is a trade-off between variety in monsters and options for the player against size of the code. I tried to keep mine simple, but still flexible enough to keep it interesting. When I did write a game, I added to the library even more!\r\n\r\nHaving timed events will make it more complicated and difficult to test as well. And as HK said, there are issues with it, so upload your game regularly to test it online too. I did consider doing that myself, and this thread might help a little bit.\r\nhttp://textadventures.co.uk/forum/samples/topic/4577/handling-cool-down",
      "EditableFormat": "markdown",
      "HTML": "<p>My combat library is here:<br>\nhttp://textadventures.co.uk/forum/samples/topic/4886/rpg-style-combat-library</p>\n<p>It is worth looking at so you get an idea of how much coding will be required, if nothing else. I used a D&amp;D style D20 system, but a WoD could be implemented as readily.  The exact mechanics do not impact on the code that heavily, what makes it big is allowing for all the possibilities. There is a trade-off between variety in monsters and options for the player against size of the code. I tried to keep mine simple, but still flexible enough to keep it interesting. When I did write a game, I added to the library even more!</p>\n<p>Having timed events will make it more complicated and difficult to test as well. And as HK said, there are issues with it, so upload your game regularly to test it online too. I did consider doing that myself, and this thread might help a little bit.<br>\nhttp://textadventures.co.uk/forum/samples/topic/4577/handling-cool-down</p>\n\n",
      "PostDate": "2016-07-16T07:45:51.7722579Z",
      "LastEditDate": null
    },
    {
      "PostId": "6445eeed-54b4-4135-93b0-8a0978680351",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I realise we are all being negative here. Combat can be done, but it will take time, and I guess that is true of all IF.",
      "EditableFormat": "markdown",
      "HTML": "<p>I realise we are all being negative here. Combat can be done, but it will take time, and I guess that is true of all IF.</p>\n\n",
      "PostDate": "2016-07-16T07:47:13.2070162Z",
      "LastEditDate": null
    },
    {
      "PostId": "4d94dec0-2b3c-4819-a76f-fa3dae47e7c5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": null,
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to concur with Pixie's post, some additional comments of my mine:\r\n\r\nunless you're doing the most simpliest of combat design, you're going to be, working with / using, some complex coding logic, as combat is not simple to implement. So, if you're completely new to coding, and/or especially with the logic involved, it will be difficult for you, and will take us (well me anyways - whereas Pixie's much better at teaching/explaining/walkthrough'ing this stuff than I am) some time, to teach and explain the stuff, as we try to help you with it.\r\n\r\nThis can all be done within the GUI~Editor (if you know that well, but not coding), but it'll still be difficult if you don't understand basic coding/game-making logic, regardless of whether you use the GUI~Editor, or try to do the coding directly.\r\n\r\nIf you can generally understand/follow my code above (in my previous post), then you should be okay with already understanding the code/game-making logic required, again regardless of whether you use the GUI~Editor or try to do direct coding. I haven't ever played any dice games myself, but I think that they seem to be similiar and thus helpful with/in developing such coding/game-making logic, as you somwhat do so with the rules and/or formulas/equations that you craft for such dice games.",
      "EditableFormat": "markdown",
      "HTML": "<p>to concur with Pixie's post, some additional comments of my mine:</p>\n<p>unless you're doing the most simpliest of combat design, you're going to be, working with / using, some complex coding logic, as combat is not simple to implement. So, if you're completely new to coding, and/or especially with the logic involved, it will be difficult for you, and will take us (well me anyways - whereas Pixie's much better at teaching/explaining/walkthrough'ing this stuff than I am) some time, to teach and explain the stuff, as we try to help you with it.</p>\n<p>This can all be done within the GUI~Editor (if you know that well, but not coding), but it'll still be difficult if you don't understand basic coding/game-making logic, regardless of whether you use the GUI~Editor, or try to do the coding directly.</p>\n<p>If you can generally understand/follow my code above (in my previous post), then you should be okay with already understanding the code/game-making logic required, again regardless of whether you use the GUI~Editor or try to do direct coding. I haven't ever played any dice games myself, but I think that they seem to be similiar and thus helpful with/in developing such coding/game-making logic, as you somwhat do so with the rules and/or formulas/equations that you craft for such dice games.</p>\n\n",
      "PostDate": "2016-07-16T08:00:16.903838Z",
      "LastEditDate": "2016-07-16T08:07:36.2494342Z"
    },
    {
      "PostId": "7a7c2aed-10a1-4a31-9dcd-1a3833877005",
      "UserId": 252673,
      "Username": "Bronteboghopper",
      "AvatarUrl": "https://secure.gravatar.com/avatar/da8dc7b31964ef21502656e11cfc4fbb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have very little experience and am just trying to scope it out.\r\n\r\nTiming (in real time) can be scrapped. Turns wise can be implemented.\r\n\r\nI guess what it would boil down to would be a an attack dice pool of D10s (set for each character) with the pool reduced by your opponents defence. Any successes cause one hit point of damage each.\r\n\r\nSo your character would start with an attack pool of 4 (maybe). And a defence of 1.\r\nOther characters would have set varying damage. You take it in turns to attack each other.\r\n\r\nWould that be easier. There would be three stats for each character. Attack defence and health\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have very little experience and am just trying to scope it out.</p>\n<p>Timing (in real time) can be scrapped. Turns wise can be implemented.</p>\n<p>I guess what it would boil down to would be a an attack dice pool of D10s (set for each character) with the pool reduced by your opponents defence. Any successes cause one hit point of damage each.</p>\n<p>So your character would start with an attack pool of 4 (maybe). And a defence of 1.<br>\nOther characters would have set varying damage. You take it in turns to attack each other.</p>\n<p>Would that be easier. There would be three stats for each character. Attack defence and health</p>\n\n",
      "PostDate": "2016-07-17T04:28:08.5736055Z",
      "LastEditDate": null
    },
    {
      "PostId": "948309a0-d9cf-4e3f-aa15-8c7bea644809",
      "UserId": 252673,
      "Username": "Bronteboghopper",
      "AvatarUrl": "https://secure.gravatar.com/avatar/da8dc7b31964ef21502656e11cfc4fbb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have very little experience and am just trying to scope it out.\r\n\r\nTiming (in real time) can be scrapped. Turns wise can be implemented.\r\n\r\nI guess what it would boil down to would be a an attack dice pool of D10s (set for each character) with the pool reduced by your opponents defence. Any successes cause one hit point of damage each.\r\n\r\nSo your character would start with an attack pool of 4 (maybe). And a defence of 1.\r\nOther characters would have set varying damage. You take it in turns to attack each other.\r\n\r\nWould that be easier. There would be three stats for each character. Attack defence and health\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I have very little experience and am just trying to scope it out.</p>\n<p>Timing (in real time) can be scrapped. Turns wise can be implemented.</p>\n<p>I guess what it would boil down to would be a an attack dice pool of D10s (set for each character) with the pool reduced by your opponents defence. Any successes cause one hit point of damage each.</p>\n<p>So your character would start with an attack pool of 4 (maybe). And a defence of 1.<br>\nOther characters would have set varying damage. You take it in turns to attack each other.</p>\n<p>Would that be easier. There would be three stats for each character. Attack defence and health</p>\n\n",
      "PostDate": "2016-07-17T04:29:12.2730495Z",
      "LastEditDate": null
    },
    {
      "PostId": "751d5c3f-3a4b-43de-ac62-ac59a810ce2a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\n<object name=\"player\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">10</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">5</attr>\r\n  <attr name=\"current_health_integer_attribute\" type=\"int\">50</attr>\r\n  <attr name=\"dead_boolean_attribute\" type=\"boolean\">false</attr>\r\n</object>\r\n\r\n<object name=\"orc\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">8</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">4</attr>\r\n  <attr name=\"current_health_integer_attribute\" type=\"int\">25</attr>\r\n  <attr name=\"dead_boolean_attribute\" type=\"boolean\">false</attr>\r\n</object>\r\n\r\n<object name=\"dragon\">\r\n  <attr name=\"attack_integer_attribute\" type=\"int\">11</attr>\r\n  <attr name=\"defense_integer_attribute\" type=\"int\">6</attr>\r\n  <attr name=\"current_health_integer_attribute\" type=\"int\">99</attr>\r\n  <attr name=\"dead_boolean_attribute\" type=\"boolean\">false</attr>\r\n</object>\r\n\r\n// where-ever (whatever scripting/inside of whatever Element) you want to use to activate the Function:\r\ncombat_function (player, orc) // the 'player' attacks the 'orc'\r\ncombat_function (orc, player) // the 'orc' attacks the 'player'\r\ncombat_function (player, dragon) // the 'player' attacks the 'dragon'\r\ncombat_function (dragon, player) // the 'dragon' attacks the 'player'\r\ncombat_function (orc, dragon) // the 'orc' attacks the 'dragon'\r\ncombat_function (dragon, orc) // the 'dragon' attacks the 'orc'\r\n\r\n// your Function (what it does):\r\n<function name=\"combat_function\" parameters=\"attacker_object_parameter,defender_object_parameter\"><![CDATA[\r\n  if (not attacker_object_parameter.dead_boolean_attribute and not defender_object_parameter.dead_boolean_attribute) {\r\n    success_integer_variable = 0\r\n    number_of_dice_rolled_integer_variable = attacker_object_parameter.attack_integer_attribute - defender_object_parameter.defense_integer_attribute\r\n    if (number_of_dice_rolled_integer_variable < 1) {\r\n      msg (attacker_object_parameter.name + \"'s attack failed to penetrate \" + defender_object_parameter.name + \"'s defense.\")\r\n    } else {\r\n      while (number_of_dice_rolled_integer_variable > 0) {\r\n        roll_result_integer_variable = DiceRoll (\"1d10\")\r\n        if (roll_result_integer_variable = 10) {\r\n          success_integer_variable = success_integer_variable + 1\r\n        } else if (roll_result_integer_variable > 7) {\r\n          success_integer_variable = success_integer_variable + 1\r\n          number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\r\n        } else {\r\n          number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\r\n        }\r\n      }\r\n      defender_object_parameter.current_health_integer_attribute = defender_object_parameter.current_health_integer_attribute - success_integer_variable\r\n      msg (attacker.object_parameter.name + \" attacks \" + defender_object_parameter.name + \" for \" + success_integer_variable + \" damage, leaving it with only \" + defender_object_parameter.current_health_attribute + \" life left.\")\r\n      if (defender_object_parameter.current_health_integer_attribute <= 0) {\r\n        if (defender_object_parameter = game.pov) {\r\n          msg (\"You were killed by \" + attacker_object_parameter + \".\")\r\n          msg (\"GAME OVER\")\r\n          finish\r\n        } else {\r\n          defender_object_parameter.dead_boolean_attribute = true\r\n          msg (defender_object_parameter.name + \" is killed by \" + attacker_object_parameter + \".\")\r\n        }\r\n      }\r\n    }\r\n  } else if (attacker_object_parameter.dead_boolean_attribute) {\r\n    msg (attacker_object_parameter.name + \" is dead, silly.\")\r\n  } else if (defender_object_parameter.dead_boolean_attribute) {\r\n    msg (defender_object_parameter.name + \" is dead, silly.\")\r\n  } else {\r\n    msg (attacker_object_parameter.name + \" and \" + defender_object_parameter.name + \" are both dead, silly.\")\r\n  }\r\n]]></function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>&lt;object name=\"player\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;10&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;5&lt;/attr&gt;\n  &lt;attr name=\"current_health_integer_attribute\" type=\"int\"&gt;50&lt;/attr&gt;\n  &lt;attr name=\"dead_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"orc\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;8&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;4&lt;/attr&gt;\n  &lt;attr name=\"current_health_integer_attribute\" type=\"int\"&gt;25&lt;/attr&gt;\n  &lt;attr name=\"dead_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"dragon\"&gt;\n  &lt;attr name=\"attack_integer_attribute\" type=\"int\"&gt;11&lt;/attr&gt;\n  &lt;attr name=\"defense_integer_attribute\" type=\"int\"&gt;6&lt;/attr&gt;\n  &lt;attr name=\"current_health_integer_attribute\" type=\"int\"&gt;99&lt;/attr&gt;\n  &lt;attr name=\"dead_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\n// where-ever (whatever scripting/inside of whatever Element) you want to use to activate the Function:\ncombat_function (player, orc) // the 'player' attacks the 'orc'\ncombat_function (orc, player) // the 'orc' attacks the 'player'\ncombat_function (player, dragon) // the 'player' attacks the 'dragon'\ncombat_function (dragon, player) // the 'dragon' attacks the 'player'\ncombat_function (orc, dragon) // the 'orc' attacks the 'dragon'\ncombat_function (dragon, orc) // the 'dragon' attacks the 'orc'\n\n// your Function (what it does):\n&lt;function name=\"combat_function\" parameters=\"attacker_object_parameter,defender_object_parameter\"&gt;&lt;![CDATA[\n  if (not attacker_object_parameter.dead_boolean_attribute and not defender_object_parameter.dead_boolean_attribute) {\n    success_integer_variable = 0\n    number_of_dice_rolled_integer_variable = attacker_object_parameter.attack_integer_attribute - defender_object_parameter.defense_integer_attribute\n    if (number_of_dice_rolled_integer_variable &lt; 1) {\n      msg (attacker_object_parameter.name + \"'s attack failed to penetrate \" + defender_object_parameter.name + \"'s defense.\")\n    } else {\n      while (number_of_dice_rolled_integer_variable &gt; 0) {\n        roll_result_integer_variable = DiceRoll (\"1d10\")\n        if (roll_result_integer_variable = 10) {\n          success_integer_variable = success_integer_variable + 1\n        } else if (roll_result_integer_variable &gt; 7) {\n          success_integer_variable = success_integer_variable + 1\n          number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\n        } else {\n          number_of_dice_rolled_integer_variable = number_of_dice_rolled_integer_variable - 1\n        }\n      }\n      defender_object_parameter.current_health_integer_attribute = defender_object_parameter.current_health_integer_attribute - success_integer_variable\n      msg (attacker.object_parameter.name + \" attacks \" + defender_object_parameter.name + \" for \" + success_integer_variable + \" damage, leaving it with only \" + defender_object_parameter.current_health_attribute + \" life left.\")\n      if (defender_object_parameter.current_health_integer_attribute &lt;= 0) {\n        if (defender_object_parameter = game.pov) {\n          msg (\"You were killed by \" + attacker_object_parameter + \".\")\n          msg (\"GAME OVER\")\n          finish\n        } else {\n          defender_object_parameter.dead_boolean_attribute = true\n          msg (defender_object_parameter.name + \" is killed by \" + attacker_object_parameter + \".\")\n        }\n      }\n    }\n  } else if (attacker_object_parameter.dead_boolean_attribute) {\n    msg (attacker_object_parameter.name + \" is dead, silly.\")\n  } else if (defender_object_parameter.dead_boolean_attribute) {\n    msg (defender_object_parameter.name + \" is dead, silly.\")\n  } else {\n    msg (attacker_object_parameter.name + \" and \" + defender_object_parameter.name + \" are both dead, silly.\")\n  }\n]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2016-07-17T05:00:36.4651507Z",
      "LastEditDate": null
    },
    {
      "PostId": "6ee05a0b-fadb-4056-aff3-9163c552374e",
      "UserId": 252673,
      "Username": "Bronteboghopper",
      "AvatarUrl": "https://secure.gravatar.com/avatar/da8dc7b31964ef21502656e11cfc4fbb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome thanks",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome thanks</p>\n\n",
      "PostDate": "2016-07-18T03:58:24.2210039Z",
      "LastEditDate": null
    }
  ]
}
