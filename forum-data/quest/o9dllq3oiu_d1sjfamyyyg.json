{
  "Topic": {
    "TopicId": "o9dllq3oiu_d1sjfamyyyg",
    "ForumId": "10",
    "Title": "Issue with creating a library: tab not showing when using  \"<onlydisplayif>xxx or yyy</onlydisplayif>\"",
    "LastUpdated": "2018-05-02T09:51:01.6138608Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3717c99c-382f-4ed7-a701-336bd077fe9e",
      "UserId": 329008,
      "Username": "Banjo",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d5c333b97093bc51f88066a6d36312ae?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(EDIT: Corrected code formatting)\r\n\r\nHi everyone!\r\n\r\nI'm new to Quest so might be missing something obvious, but I've been creating my own \"Survival Game\" library (with the plan to share it here once it's done) and it's almost done... except I've hit one snag:\r\n\r\nI'm using Tabs to make my features GUI friendly, which means showing and hiding some depending on what features are activated (true). However, I can't get this to work properly when using \"or\" between two attributes in a tab's \"onlydisplayif\" property.\r\n\r\nFor example:\r\n\r\n```\r\n   <tab>\r\n    <parent>_GameEditor</parent>\r\n    <caption>Needs</caption>\r\n    <onlydisplayif>game.showhunger or game.showthirst</onlydisplayif>\r\n```\r\n... doesn't work as expected. I thought that if showthirst OR showhunger was \"true\", the tab would be shown. However it seems only the first attribute before the \"or\" is recognised (\"showhunger\" in this example). If I swap showthirst and showhunger, then \"showthirst\" is only able to show or hide the tab.\r\n\r\nBUT here's the thing:\r\n\r\nWORKS:\r\nSet showhunger true, the tab appears...\r\nSet showhunger to false, the tab is hidden...\r\nSet showthirst to true... and the tab is shown (even though showhunger is false)\r\nThis is expected behavior, right?\r\n\r\nThen why does:\r\nSet showthirst true... tab isn't shown!\r\nSet showhunger to true, the tab is shown!\r\n\r\nShouldn't the \"or\" in my \"onlydisplayif\" example mean that *either* showhunger or showthirst will display the tab??\r\n\r\nIt's like it *needs* showhunger to be toggled on and off once before it recognises showthirst.\r\n\r\nI feel I've navigated a lot of new stuff learning to make a functioning library, but this one issue really has me stumped, and I'm convinced it's either a program bug or something very simple I've missed doing!\r\n\r\nEDIT:\r\nSorry, after *all* that, I tried:\r\n```\r\n  <tab>\r\n    <parent>_GameEditor</parent>\r\n    <caption>Needs</caption>\r\n    <onlydisplayif>(GetBoolean(game, \"showhunger\") or GetBoolean(game, \"showthirst\"))</onlydisplayif>\r\n```\r\n...and that works!\r\n\r\nThough I'm still confused why the original code didn't work and that one does, especially since my other \"onlydisplayif\" with single attributes don't seem to need GetBoolean calls...?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>(EDIT: Corrected code formatting)</p>\n<p>Hi everyone!</p>\n<p>I'm new to Quest so might be missing something obvious, but I've been creating my own \"Survival Game\" library (with the plan to share it here once it's done) and it's almost done... except I've hit one snag:</p>\n<p>I'm using Tabs to make my features GUI friendly, which means showing and hiding some depending on what features are activated (true). However, I can't get this to work properly when using \"or\" between two attributes in a tab's \"onlydisplayif\" property.</p>\n<p>For example:</p>\n<pre><code>   &lt;tab&gt;\n    &lt;parent&gt;_GameEditor&lt;/parent&gt;\n    &lt;caption&gt;Needs&lt;/caption&gt;\n    &lt;onlydisplayif&gt;game.showhunger or game.showthirst&lt;/onlydisplayif&gt;\n</code></pre>\n<p>... doesn't work as expected. I thought that if showthirst OR showhunger was \"true\", the tab would be shown. However it seems only the first attribute before the \"or\" is recognised (\"showhunger\" in this example). If I swap showthirst and showhunger, then \"showthirst\" is only able to show or hide the tab.</p>\n<p>BUT here's the thing:</p>\n<p>WORKS:<br>\nSet showhunger true, the tab appears...<br>\nSet showhunger to false, the tab is hidden...<br>\nSet showthirst to true... and the tab is shown (even though showhunger is false)<br>\nThis is expected behavior, right?</p>\n<p>Then why does:<br>\nSet showthirst true... tab isn't shown!<br>\nSet showhunger to true, the tab is shown!</p>\n<p>Shouldn't the \"or\" in my \"onlydisplayif\" example mean that <em>either</em> showhunger or showthirst will display the tab??</p>\n<p>It's like it <em>needs</em> showhunger to be toggled on and off once before it recognises showthirst.</p>\n<p>I feel I've navigated a lot of new stuff learning to make a functioning library, but this one issue really has me stumped, and I'm convinced it's either a program bug or something very simple I've missed doing!</p>\n<p>EDIT:<br>\nSorry, after <em>all</em> that, I tried:</p>\n<pre><code>  &lt;tab&gt;\n    &lt;parent&gt;_GameEditor&lt;/parent&gt;\n    &lt;caption&gt;Needs&lt;/caption&gt;\n    &lt;onlydisplayif&gt;(GetBoolean(game, \"showhunger\") or GetBoolean(game, \"showthirst\"))&lt;/onlydisplayif&gt;\n</code></pre>\n<p>...and that works!</p>\n<p>Though I'm still confused why the original code didn't work and that one does, especially since my other \"onlydisplayif\" with single attributes don't seem to need GetBoolean calls...?</p>\n\n",
      "PostDate": "2018-05-02T09:51:01.6138608Z",
      "LastEditDate": "2018-05-02T10:14:44.361395Z",
      "link": null
    },
    {
      "PostId": "4ed17c59-7c7c-4d7d-9628-5263de56fa53",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Until the attribute has been toggled once, it's unset/null rather than `false`.\r\nGetBoolean makes it work because it converts `null` to `false`.\r\n\r\nA truth table:\r\n* `true or true` → `true`\r\n* `true or false` → `true` (while the first two options are both true, the programmer could optimise `or`, making it return true as soon as it sees a true value. So it doesn't need to look at the second attribute)\r\n* `true or null` → `true` (Because of the optimisation mentioned above, it never looks at the second value, so no error)\r\n* `false or true` → `true`\r\n* `false or false` → `false`\r\n* `false or null` → error (treated as `false` by `<onlydisplayif>`)\r\n* `null or null` → error (treated as `false` by `<onlydisplayif>`)\r\n* `null or true` → error (treated as `false` by `<onlydisplayif>`) - this is the only one where you'd expect the tab to display but it doesn't\r\n* `null or false` → error (treated as `false` by `<onlydisplayif>`)\r\n\r\n> especially since my other \"onlydisplayif\" with single attributes don't seem to need GetBoolean calls...?\r\n\r\nWith single attributes, it doesn't display the tab until the attribute has been set. But that's what you expect.",
      "EditableFormat": "markdown",
      "HTML": "<p>Until the attribute has been toggled once, it's unset/null rather than <code>false</code>.<br>\nGetBoolean makes it work because it converts <code>null</code> to <code>false</code>.</p>\n<p>A truth table:</p>\n<ul>\n<li><code>true or true</code> → <code>true</code></li>\n<li><code>true or false</code> → <code>true</code> (while the first two options are both true, the programmer could optimise <code>or</code>, making it return true as soon as it sees a true value. So it doesn't need to look at the second attribute)</li>\n<li><code>true or null</code> → <code>true</code> (Because of the optimisation mentioned above, it never looks at the second value, so no error)</li>\n<li><code>false or true</code> → <code>true</code></li>\n<li><code>false or false</code> → <code>false</code></li>\n<li><code>false or null</code> → error (treated as <code>false</code> by <code>&lt;onlydisplayif&gt;</code>)</li>\n<li><code>null or null</code> → error (treated as <code>false</code> by <code>&lt;onlydisplayif&gt;</code>)</li>\n<li><code>null or true</code> → error (treated as <code>false</code> by <code>&lt;onlydisplayif&gt;</code>) - this is the only one where you'd expect the tab to display but it doesn't</li>\n<li><code>null or false</code> → error (treated as <code>false</code> by <code>&lt;onlydisplayif&gt;</code>)</li>\n</ul>\n<blockquote>\n<p>especially since my other \"onlydisplayif\" with single attributes don't seem to need GetBoolean calls...?</p>\n</blockquote>\n<p>With single attributes, it doesn't display the tab until the attribute has been set. But that's what you expect.</p>\n\n",
      "PostDate": "2018-05-02T13:42:16.8504791Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "83d90e4c-6cd2-40a2-a1f6-aa6074b5592e",
      "UserId": 329008,
      "Username": "Banjo",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d5c333b97093bc51f88066a6d36312ae?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks so much! That makes sense and helped clear it up for me. I appreciate it.\r\n\r\nAnd yes, that \"null or true\" was the one I was suspecting but couldn't figure out why it wasn't showing the tab! :)\r\n\r\nOut of curiosity, is it better practice for me to keep using GetBoolean (which works) for this then, or should I be setting all those attributes to defaults so they aren't \"null\" before checking for a tab?\r\n\r\n(aside from this puzzlement, it's been quite fun figuring out how to make a library for Quest!)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks so much! That makes sense and helped clear it up for me. I appreciate it.</p>\n<p>And yes, that \"null or true\" was the one I was suspecting but couldn't figure out why it wasn't showing the tab! :)</p>\n<p>Out of curiosity, is it better practice for me to keep using GetBoolean (which works) for this then, or should I be setting all those attributes to defaults so they aren't \"null\" before checking for a tab?</p>\n<p>(aside from this puzzlement, it's been quite fun figuring out how to make a library for Quest!)</p>\n\n",
      "PostDate": "2018-05-02T15:56:02.7048847Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
