{
  "Topic": {
    "TopicId": "ovo6wgb280_uoxdvhsytda",
    "ForumId": "10",
    "Title": "Randomizing Objects in Different Rooms",
    "LastUpdated": "2017-10-03T20:21:31.4445038Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "84ec7856-4f7a-438a-aa94-1079253d84b8",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do I make it so in every room, there are different chances (or equal chances) of different objects spawning in. Like rocks, sticks, leaves, etc. And a maximum to how much spawns in a room at once. Trying to best to avoid Libraries.",
      "EditableFormat": "markdown",
      "HTML": "<p>How do I make it so in every room, there are different chances (or equal chances) of different objects spawning in. Like rocks, sticks, leaves, etc. And a maximum to how much spawns in a room at once. Trying to best to avoid Libraries.</p>\n\n",
      "PostDate": "2017-10-03T20:21:31.4445038Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cf6df40c-607f-402e-bcb1-c8322b65592e",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The first.\r\n```\r\nfirsttime {\r\n  SpawnZombie (this)\r\n}\r\n```\r\n\r\nYou can also do it with attributes, but it's trickier.\r\n\r\n```\r\nif (game.spawn = 2) {\r\n  SpawnZombie (this)\r\n}\r\nelse {\r\n  msg (\"...But nothing came.\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The first.</p>\n<pre><code>firsttime {\n  SpawnZombie (this)\n}\n</code></pre>\n<p>You can also do it with attributes, but it's trickier.</p>\n<pre><code>if (game.spawn = 2) {\n  SpawnZombie (this)\n}\nelse {\n  msg (\"...But nothing came.\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-10-03T20:31:06.2097292Z",
      "LastEditDate": "2017-10-03T20:35:08.6770683Z",
      "link": null
    },
    {
      "PostId": "741fbdf7-3186-4c73-b9f5-666e1a5ffa18",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ugh... What?",
      "EditableFormat": "markdown",
      "HTML": "<p>Ugh... What?</p>\n\n",
      "PostDate": "2017-10-03T20:40:37.4587545Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d1f87c82-1a36-4048-bbee-c342dfac6bed",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think Empherdaen wants each room to have its own random \"window-dressing\", i.e., random stackable crafting objects for the player to collect.  I haven't dealt with cloning, so am not equipped to advise about that.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think Empherdaen wants each room to have its own random \"window-dressing\", i.e., random stackable crafting objects for the player to collect.  I haven't dealt with cloning, so am not equipped to advise about that.</p>\n\n",
      "PostDate": "2017-10-03T21:28:48.8325504Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8629dc79-4002-417a-a41f-ebc7a6d77104",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Right you are Dcoder.",
      "EditableFormat": "markdown",
      "HTML": "<p>Right you are Dcoder.</p>\n\n",
      "PostDate": "2017-10-03T21:39:13.0918608Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "17a16ad3-0d8a-43df-b262-3150ebb2f6d0",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey again Enpherdaen here is the first part in that same series https://www.youtube.com/watch?v=BUGNbe2--Yk it shows how to make randomized room spawner for items.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey again Enpherdaen here is the first part in that same series https://www.youtube.com/watch?v=BUGNbe2--Yk it shows how to make randomized room spawner for items.</p>\n\n",
      "PostDate": "2017-10-03T22:36:18.8663764Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "319cd128-76a5-4f1e-9a9a-bd957ee6eef9",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, very sorry. I misunderstood the question. I have reading difficulties, if you haven't noticed.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, very sorry. I misunderstood the question. I have reading difficulties, if you haven't noticed.</p>\n\n",
      "PostDate": "2017-10-03T22:43:26.0700808Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7cea08fc-73ad-449c-b37e-e2fad924e26d",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No problem Jmnevil54. Thanks Onimike.",
      "EditableFormat": "markdown",
      "HTML": "<p>No problem Jmnevil54. Thanks Onimike.</p>\n\n",
      "PostDate": "2017-10-03T22:49:57.5798103Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d747e216-687b-4a0d-8384-fd1464a9573d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here is one way to do it...\r\nI have a Split variable  that contains the index list of room descriptions.\r\nthat is then randomized.\r\nThen the rooms are numbered 1 through 20\r\nThat way, the 5th entry in the list is the description for room #5\r\nThen a switch to select which room description to show.\r\nThe same could be used to random items, one to a room.\r\nYou could also use a for loop to seed stuff in each room.\r\n\r\nhttp://textadventures.co.uk/games/view/g4jaujz2ceipk6vi3cfx0a/wumpus-3-0",
      "EditableFormat": "markdown",
      "HTML": "<p>Here is one way to do it...<br>\nI have a Split variable  that contains the index list of room descriptions.<br>\nthat is then randomized.<br>\nThen the rooms are numbered 1 through 20<br>\nThat way, the 5th entry in the list is the description for room #5<br>\nThen a switch to select which room description to show.<br>\nThe same could be used to random items, one to a room.<br>\nYou could also use a for loop to seed stuff in each room.</p>\n<p>http://textadventures.co.uk/games/view/g4jaujz2ceipk6vi3cfx0a/wumpus-3-0</p>\n\n",
      "PostDate": "2017-10-04T01:37:31.3956534Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2d07ee9a-d71e-45ec-aa51-07ad6447352f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n--------------------------------------------\r\n\r\nhere's an example:\r\n\r\n(not fully complete, some more error and exception handling can be added to the 'spawn_data_object.set_spawn_script_attribute' as I got tired, and can still be refactored/stream-lined/improved further such as reducing some code redundency via using Delegates with the Script Attributes, and the code logic/design itself can probably be done better too)\r\n\r\n```\r\n<game name=\"example_game\">\r\n  <attr name=\"pov\" type=\"object\">player</attr>\r\n  <attr name=\"start\" type=\"script\">\r\n    do (start_data_object, \"start_script_attribute\")\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"start_data_object\">\r\n\r\n  <attr name=\"start_script_attribute\" type=\"script\">\r\n    do (visitable_data_object, \"set_visitable_objectlist_script_attribute\")\r\n    do (visitable_data_object, \"set_visitable_objectlist_count_script_attribute\")\r\n    do (spawn_data_object, \"set_spawn_objectlist_script_attribute\")\r\n    do (spawn_data_object, \"set_spawn_objectlist_count_script_attribute\")\r\n    do (spawn_data_object, \"set_spawn_script_attribute\")\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"spawn_data_object\">\r\n\r\n  <attr name=\"max_spawn_count_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"spawn_objectlist_count_integer_attribute\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"spawn_objectlist_attribute\" type=\"objectlist\">rock;stick;leaf;bush;cave;bear;wolf</attr>\r\n\r\n  <attr name=\"set_max_spawn_count_script_attribute\" type=\"script\">\r\n    if (not HasInt (this, \"spawn_objectlist_count_integer_attribute\")) {\r\n      do (this, \"set_spawn_objectlist_count_script_attribute\")\r\n    }\r\n    msg (\"Max Spawn Count? (0 to \" + this.spawn_objectlist_count_integer_attribute + \")\")\r\n    get input {\r\n      if (IsInt (result)) {\r\n        input_integer_variable = ToInt (result)\r\n        if (input_integer_variable >= 0 and input_integer_variable <= this.spawn_objectlist_count_integer_attribute) {\r\n          this.max_spawn_count_integer_attribute = input_integer_variable\r\n        } else {\r\n          do (this, \"set_max_spawn_count_script_attribute\")\r\n        }\r\n      } else {\r\n        do (this, \"set_max_spawn_count_script_attribute\")\r\n      }\r\n    }\r\n  </attr>\r\n\r\n  <attr name=\"set_spawn_objectlist_count_script_attribute\" type=\"script\">\r\n    if (not HasAttribute (this, \"spawn_objectlist_attribute\")) {\r\n      do (this, \"set_spawn_objectlist_script_attribute\")\r\n    }\r\n    this.spawn_objectlist_count_integer_attribute = ListCount (this.spawn_objectlist_attribute)\r\n  </attr>\r\n\r\n  <attr name=\"set_spawn_objectlist_script_attribute\" type=\"script\">\r\n    if (not HasAttribute (this, \"spawn_objectlist_attribute\")) {\r\n      this.spawn_objectlist_attribute = NewObjectList ()\r\n    }\r\n    foreach (object_variable, GetDirectChildren (this)) {\r\n      if (not ListContains (this.spawn_objectlist_attribute, object_variable)) {\r\n        list add (this.spawn_objectlist_attribute, object_variable)\r\n      }\r\n    }\r\n    foreach (object_variable, this.spawn_objectlist_attribute) {\r\n      if (not Contains (this, object_variable)) {\r\n        list remove (this.spawn_objectlist_attribute, object_variable)\r\n      }\r\n    }\r\n  </attr>\r\n\r\n  <attr name=\"set_spawn_script_attribute\" type=\"script\">\r\n    foreach (visitable_object_variable, visitable_data_object.visitable_objectlist_attribute) {\r\n      spawn_objectlist_variable = NewObjectList ()\r\n      foreach (spawn_object_variable, this.spawn_objectlist_attribute) {\r\n        list add (spawn_objectlist_variable, spawn_object_variable)\r\n      }\r\n      do (this, \"set_max_spawn_count_script_attribute\")\r\n      ask (\"Random?\") {\r\n        if (result) {\r\n          for (not_used_variable, 1, this.max_spawn_count_integer_attribute) {\r\n            spawn_object_variable = ObjectListItem (spawn_objectlist_variable, GetRandomInt (0, this.max_spawn_count_integer_attribute - 1))\r\n            list remove (spawn_objectlist_variable, spawn_object_variable)\r\n            clone_object_variable = CloneObject (spawn_object_variable)\r\n            clone_object_variable.name_of_original_object_string_attribute = spawn_object_variable.name\r\n            clone_object_variable.parent = visitable_object_variable\r\n          }\r\n        } else {\r\n          for (not_used_variable, 1, this.max_spawn_count_integer_attribute) {\r\n            show menu (\"Select Item\", spawn_objectlist_variable, false) {\r\n              spawn_object_variable = result\r\n              list remove (spawn_objectlist_variable, spawn_object_variable)\r\n              clone_object_variable = CloneObject (spawn_object_variable)\r\n              clone_object_variable.name_of_original_object_string_attribute = spawn_object_variable.name\r\n              clone_object_variable.parent = visitable_object_variable\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  </attr>\r\n\r\n  <object name=\"rock\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"stick\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"leaf\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"bush\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"cave\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"bear\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n  <object name=\"wolf\">\r\n    <inherit name=\"spawn_type\" />\r\n  </object>\r\n\r\n</object>\r\n\r\n<object name=\"visitable_data_object\">\r\n\r\n  <attr name=\"visitable_objectlist_attribute\" type=\"objectlist\">room;room_2;room_3;room_4</attr>\r\n\r\n  <attr name=\"set_visitable_objectlist_count_script_attribute\" type=\"script\">\r\n    if (not HasAttribute (this, \"visitable_objectlist_attribute\")) {\r\n      do (this, \"set_visitable_objectlist_script_attribute\")\r\n    }\r\n    this.visitable_objectlist_count_integer_attribute = ListCount (this.visitable_objectlist_attribute)\r\n  </attr>\r\n\r\n  <attr name=\"set_visitable_objectlist_script_attribute\" type=\"script\">\r\n    if (not HasAttribute (this, \"visitable_objectlist_attribute\")) {\r\n      this.visitable_objectlist_attribute = NewObjectList ()\r\n    }\r\n    foreach (object_variable, GetDirectChildren (this)) {\r\n      if (not ListContains (this.visitable_objectlist_attribute, object_variable)) {\r\n        list add (this.visitable_objectlist_attribute, object_variable)\r\n      }\r\n    }\r\n    foreach (object_variable, this.visitable_objectlist_attribute) {\r\n      if (not Contains (this, object_variable)) {\r\n        list remove (this.visitable_objectlist_attribute, object_variable)\r\n      }\r\n    }\r\n  </attr>\r\n\r\n  <object name=\"room\">\r\n    <inherit name=\"visitable_type\" />\r\n  </object>\r\n\r\n  <object name=\"room_2\">\r\n    <inherit name=\"visitable_type\" />\r\n  </object>\r\n\r\n  <object name=\"room_3\">\r\n    <inherit name=\"visitable_type\" />\r\n  </object>\r\n\r\n  <object name=\"room_4\">\r\n    <inherit name=\"visitable_type\" />\r\n  </object>\r\n\r\n</object>\r\n\r\n<object name=\"player_data_object\">\r\n\r\n  <attr name=\"player_objectlist_attribute\" type=\"objectlist\">player</attr>\r\n\r\n  <object name=\"player\">\r\n    <inherit name=\"player_type\" />\r\n    <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n\r\n</object>\r\n\r\n<type name=\"player_type\">\r\n</type>\r\n\r\n<type name=\"visitable_type\">\r\n</type>\r\n\r\n<type name=\"spawn_type\">\r\n  <inherit name=\"clone_type\" />\r\n</type>\r\n\r\n<type name=\"clone_type\">\r\n  <attr name=\"name_of_original_object_string_attribute\" type=\"string\">unknown</attr>\r\n</type>\r\n```\r\n\r\n----------------\r\n\r\nask if you need any help implementing/adapting/adjusting this example into/for your game, and/or if it doesn't work (got errors), and/or need help with understanding it or how it works, or whatever else you need help with or whatever.",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>here's an example:</p>\n<p>(not fully complete, some more error and exception handling can be added to the 'spawn_data_object.set_spawn_script_attribute' as I got tired, and can still be refactored/stream-lined/improved further such as reducing some code redundency via using Delegates with the Script Attributes, and the code logic/design itself can probably be done better too)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"pov\" type=\"object\"&gt;player&lt;/attr&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    do (start_data_object, \"start_script_attribute\")\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"start_data_object\"&gt;\n\n  &lt;attr name=\"start_script_attribute\" type=\"script\"&gt;\n    do (visitable_data_object, \"set_visitable_objectlist_script_attribute\")\n    do (visitable_data_object, \"set_visitable_objectlist_count_script_attribute\")\n    do (spawn_data_object, \"set_spawn_objectlist_script_attribute\")\n    do (spawn_data_object, \"set_spawn_objectlist_count_script_attribute\")\n    do (spawn_data_object, \"set_spawn_script_attribute\")\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"spawn_data_object\"&gt;\n\n  &lt;attr name=\"max_spawn_count_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"spawn_objectlist_count_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"spawn_objectlist_attribute\" type=\"objectlist\"&gt;rock;stick;leaf;bush;cave;bear;wolf&lt;/attr&gt;\n\n  &lt;attr name=\"set_max_spawn_count_script_attribute\" type=\"script\"&gt;\n    if (not HasInt (this, \"spawn_objectlist_count_integer_attribute\")) {\n      do (this, \"set_spawn_objectlist_count_script_attribute\")\n    }\n    msg (\"Max Spawn Count? (0 to \" + this.spawn_objectlist_count_integer_attribute + \")\")\n    get input {\n      if (IsInt (result)) {\n        input_integer_variable = ToInt (result)\n        if (input_integer_variable &gt;= 0 and input_integer_variable &lt;= this.spawn_objectlist_count_integer_attribute) {\n          this.max_spawn_count_integer_attribute = input_integer_variable\n        } else {\n          do (this, \"set_max_spawn_count_script_attribute\")\n        }\n      } else {\n        do (this, \"set_max_spawn_count_script_attribute\")\n      }\n    }\n  &lt;/attr&gt;\n\n  &lt;attr name=\"set_spawn_objectlist_count_script_attribute\" type=\"script\"&gt;\n    if (not HasAttribute (this, \"spawn_objectlist_attribute\")) {\n      do (this, \"set_spawn_objectlist_script_attribute\")\n    }\n    this.spawn_objectlist_count_integer_attribute = ListCount (this.spawn_objectlist_attribute)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"set_spawn_objectlist_script_attribute\" type=\"script\"&gt;\n    if (not HasAttribute (this, \"spawn_objectlist_attribute\")) {\n      this.spawn_objectlist_attribute = NewObjectList ()\n    }\n    foreach (object_variable, GetDirectChildren (this)) {\n      if (not ListContains (this.spawn_objectlist_attribute, object_variable)) {\n        list add (this.spawn_objectlist_attribute, object_variable)\n      }\n    }\n    foreach (object_variable, this.spawn_objectlist_attribute) {\n      if (not Contains (this, object_variable)) {\n        list remove (this.spawn_objectlist_attribute, object_variable)\n      }\n    }\n  &lt;/attr&gt;\n\n  &lt;attr name=\"set_spawn_script_attribute\" type=\"script\"&gt;\n    foreach (visitable_object_variable, visitable_data_object.visitable_objectlist_attribute) {\n      spawn_objectlist_variable = NewObjectList ()\n      foreach (spawn_object_variable, this.spawn_objectlist_attribute) {\n        list add (spawn_objectlist_variable, spawn_object_variable)\n      }\n      do (this, \"set_max_spawn_count_script_attribute\")\n      ask (\"Random?\") {\n        if (result) {\n          for (not_used_variable, 1, this.max_spawn_count_integer_attribute) {\n            spawn_object_variable = ObjectListItem (spawn_objectlist_variable, GetRandomInt (0, this.max_spawn_count_integer_attribute - 1))\n            list remove (spawn_objectlist_variable, spawn_object_variable)\n            clone_object_variable = CloneObject (spawn_object_variable)\n            clone_object_variable.name_of_original_object_string_attribute = spawn_object_variable.name\n            clone_object_variable.parent = visitable_object_variable\n          }\n        } else {\n          for (not_used_variable, 1, this.max_spawn_count_integer_attribute) {\n            show menu (\"Select Item\", spawn_objectlist_variable, false) {\n              spawn_object_variable = result\n              list remove (spawn_objectlist_variable, spawn_object_variable)\n              clone_object_variable = CloneObject (spawn_object_variable)\n              clone_object_variable.name_of_original_object_string_attribute = spawn_object_variable.name\n              clone_object_variable.parent = visitable_object_variable\n            }\n          }\n        }\n      }\n    }\n  &lt;/attr&gt;\n\n  &lt;object name=\"rock\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"stick\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"leaf\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"bush\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"cave\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"bear\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"wolf\"&gt;\n    &lt;inherit name=\"spawn_type\" /&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"visitable_data_object\"&gt;\n\n  &lt;attr name=\"visitable_objectlist_attribute\" type=\"objectlist\"&gt;room;room_2;room_3;room_4&lt;/attr&gt;\n\n  &lt;attr name=\"set_visitable_objectlist_count_script_attribute\" type=\"script\"&gt;\n    if (not HasAttribute (this, \"visitable_objectlist_attribute\")) {\n      do (this, \"set_visitable_objectlist_script_attribute\")\n    }\n    this.visitable_objectlist_count_integer_attribute = ListCount (this.visitable_objectlist_attribute)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"set_visitable_objectlist_script_attribute\" type=\"script\"&gt;\n    if (not HasAttribute (this, \"visitable_objectlist_attribute\")) {\n      this.visitable_objectlist_attribute = NewObjectList ()\n    }\n    foreach (object_variable, GetDirectChildren (this)) {\n      if (not ListContains (this.visitable_objectlist_attribute, object_variable)) {\n        list add (this.visitable_objectlist_attribute, object_variable)\n      }\n    }\n    foreach (object_variable, this.visitable_objectlist_attribute) {\n      if (not Contains (this, object_variable)) {\n        list remove (this.visitable_objectlist_attribute, object_variable)\n      }\n    }\n  &lt;/attr&gt;\n\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"visitable_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"room_2\"&gt;\n    &lt;inherit name=\"visitable_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"room_3\"&gt;\n    &lt;inherit name=\"visitable_type\" /&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"room_4\"&gt;\n    &lt;inherit name=\"visitable_type\" /&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player_data_object\"&gt;\n\n  &lt;attr name=\"player_objectlist_attribute\" type=\"objectlist\"&gt;player&lt;/attr&gt;\n\n  &lt;object name=\"player\"&gt;\n    &lt;inherit name=\"player_type\" /&gt;\n    &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;type name=\"player_type\"&gt;\n&lt;/type&gt;\n\n&lt;type name=\"visitable_type\"&gt;\n&lt;/type&gt;\n\n&lt;type name=\"spawn_type\"&gt;\n  &lt;inherit name=\"clone_type\" /&gt;\n&lt;/type&gt;\n\n&lt;type name=\"clone_type\"&gt;\n  &lt;attr name=\"name_of_original_object_string_attribute\" type=\"string\"&gt;unknown&lt;/attr&gt;\n&lt;/type&gt;\n</code></pre>\n<hr>\n<p>ask if you need any help implementing/adapting/adjusting this example into/for your game, and/or if it doesn't work (got errors), and/or need help with understanding it or how it works, or whatever else you need help with or whatever.</p>\n\n",
      "PostDate": "2017-10-04T01:41:14.6853618Z",
      "LastEditDate": "2017-10-04T01:48:42.8578237Z",
      "link": null
    },
    {
      "PostId": "f9addda9-8ed1-4a40-8542-421d60986de7",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"Invalid XML: There are multiple root elements. Line 22, position 2\".",
      "EditableFormat": "markdown",
      "HTML": "<p>\"Invalid XML: There are multiple root elements. Line 22, position 2\".</p>\n\n",
      "PostDate": "2017-10-05T00:37:25.6203777Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
