{
  "Topic": {
    "TopicId": "iyyou-oq70cuq-9dmpteuw",
    "ForumId": "10",
    "Title": "How to delete all previous text except room description.",
    "LastUpdated": "2020-10-24T12:14:28.3910721Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "803bfdb7-e343-4964-a1e9-3db4769d028d",
      "UserId": 496842,
      "Username": "IzyaboiCallume",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have an issue where if I type the same command over and over it would flood my screen with that action I took,\r\nIt would look something like this:\r\n\r\n__\r\nThere is a pile of cookies here.\r\n\r\nyou pick it up\r\nyou pick it up\r\nyou pick it up\r\nyou pick it up\r\nyou pick it up\r\n__\r\n\r\nThe player would then have to scroll all the way up to read the room description again which could get very tedious especially when the player loots a chest filled with items.\r\n\r\nIs there a way for me to prevent this from happening? Maybe somehow delete previous commands/item descriptions without having to accidentally delete the room description. (please not that, in my game, the room's appearance can change, so I cant go with simply adding a script to print text and copy paste the room desctiption.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I have an issue where if I type the same command over and over it would flood my screen with that action I took,<br>\nIt would look something like this:</p>\n<p>__<br>\nThere is a pile of cookies here.</p>\n<p>you pick it up<br>\nyou pick it up<br>\nyou pick it up<br>\nyou pick it up<br>\nyou pick it up<br>\n__</p>\n<p>The player would then have to scroll all the way up to read the room description again which could get very tedious especially when the player loots a chest filled with items.</p>\n<p>Is there a way for me to prevent this from happening? Maybe somehow delete previous commands/item descriptions without having to accidentally delete the room description. (please not that, in my game, the room's appearance can change, so I cant go with simply adding a script to print text and copy paste the room desctiption.)</p>\n\n",
      "PostDate": "2020-10-24T12:14:28.3910721Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cb4c762c-40eb-4937-b87a-baa1248d894d",
      "UserId": 496842,
      "Username": "IzyaboiCallume",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "my main idea is this, if i press 'look at' on an object it would run this 3 scripts:\r\nfirst it would clear the screen\r\nthen it would give the item description\r\nthen afterwards it would print the room's current description\r\n\r\ni still dont know how i would achieve the third one tho, especially if the room description changes.",
      "EditableFormat": "markdown",
      "HTML": "<p>my main idea is this, if i press 'look at' on an object it would run this 3 scripts:<br>\nfirst it would clear the screen<br>\nthen it would give the item description<br>\nthen afterwards it would print the room's current description</p>\n<p>i still dont know how i would achieve the third one tho, especially if the room description changes.</p>\n\n",
      "PostDate": "2020-10-24T12:27:11.8257849Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bde178a5-66a5-48d9-9974-da5106eb2771",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are you looking at a way to do this for all commands, or just for look at?\r\n\r\nIn the case of lookat, it would be fairly simple to do. You could just put `ClearScreen` at the beginning of the script, and `ShowRoomDescription` at the end.\r\n\r\nIf you want to do the same for all commands, you could do that by modifying the core function `HandleCommand`. I would suggest searching in the code for that function to find\r\n```\r\n    if (not handled) {\r\n      StartTurnOutputSection\r\n```\r\nand change that to:\r\n```\r\n    if (not handled) {\r\n      ClearScreen\r\n      ShowRoomDescription\r\n      StartTurnOutputSection\r\n```\r\n\r\nThat way, when the player responds to a menu choice, the question will still be shown (which makes more sense), but when they enter a command, only the response to the current command appears.\r\n\r\nAlternatively, you could do some fancy CSS magic. One way I've looked at is to have a turnscript which starts a new output section, runs the function `ShowRoomDescription`, and then runs some simple javascript to capture the output and move it to  a div with `position: fixed`, replacing any current content of that div. This means that the room description is always at the top of the screen, but the output from other commands can scroll 'behind' it, and the description will update to reflect objects being taken or dropped.\r\n(I used a slightly different version of this on my game 'Circus', although that doesn't work properly on the desktop player because it uses `position: sticky` which isn't supported because desktop Quest runs a very old version of Chromium which doesn't support it)",
      "EditableFormat": "markdown",
      "HTML": "<p>Are you looking at a way to do this for all commands, or just for look at?</p>\n<p>In the case of lookat, it would be fairly simple to do. You could just put <code>ClearScreen</code> at the beginning of the script, and <code>ShowRoomDescription</code> at the end.</p>\n<p>If you want to do the same for all commands, you could do that by modifying the core function <code>HandleCommand</code>. I would suggest searching in the code for that function to find</p>\n<pre><code>    if (not handled) {\n      StartTurnOutputSection\n</code></pre>\n<p>and change that to:</p>\n<pre><code>    if (not handled) {\n      ClearScreen\n      ShowRoomDescription\n      StartTurnOutputSection\n</code></pre>\n<p>That way, when the player responds to a menu choice, the question will still be shown (which makes more sense), but when they enter a command, only the response to the current command appears.</p>\n<p>Alternatively, you could do some fancy CSS magic. One way I've looked at is to have a turnscript which starts a new output section, runs the function <code>ShowRoomDescription</code>, and then runs some simple javascript to capture the output and move it to  a div with <code>position: fixed</code>, replacing any current content of that div. This means that the room description is always at the top of the screen, but the output from other commands can scroll 'behind' it, and the description will update to reflect objects being taken or dropped.<br>\n(I used a slightly different version of this on my game 'Circus', although that doesn't work properly on the desktop player because it uses <code>position: sticky</code> which isn't supported because desktop Quest runs a very old version of Chromium which doesn't support it)</p>\n\n",
      "PostDate": "2020-10-24T14:56:22.7432448Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
