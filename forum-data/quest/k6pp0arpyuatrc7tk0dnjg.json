{
  "Topic": {
    "TopicId": "k6pp0arpyuatrc7tk0dnjg",
    "ForumId": "10",
    "Title": "How do I tell Quest this?",
    "LastUpdated": "2017-12-23T21:36:31.9012348Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e62beb83-49b9-4714-af35-ea3a46e8aebd",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "1. Pull up a list of all visible objects in reach of the player.\r\n2. Search for an object in the list with a specific alias that will have clones elsewhere.\r\n3. Apply a script to this specific clone and not anhy of the others.",
      "EditableFormat": "markdown",
      "HTML": "<ol>\n<li>Pull up a list of all visible objects in reach of the player.</li>\n<li>Search for an object in the list with a specific alias that will have clones elsewhere.</li>\n<li>Apply a script to this specific clone and not anhy of the others.</li>\n</ol>\n\n",
      "PostDate": "2017-12-23T21:36:31.9012348Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7ca77d4d-756b-4372-9200-e3f869511146",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The `ScopeReachable` function will do the first. Use `FilterByAttribute` to do the second, and loop over the result.\r\n```\r\nl1 = ScopeReachable()\r\nl2 = FilterByAttribute (l1, \"alias\", \"some alias\")\r\nforeach (obj, l2) {\r\n  do (obj, \"my script\")\r\n}\r\n```\r\nThis will run the script \"my script\" for every object in reach that is called \"some alias\" (it assumes they all have the script).",
      "EditableFormat": "markdown",
      "HTML": "<p>The <code>ScopeReachable</code> function will do the first. Use <code>FilterByAttribute</code> to do the second, and loop over the result.</p>\n<pre><code>l1 = ScopeReachable()\nl2 = FilterByAttribute (l1, \"alias\", \"some alias\")\nforeach (obj, l2) {\n  do (obj, \"my script\")\n}\n</code></pre>\n<p>This will run the script \"my script\" for every object in reach that is called \"some alias\" (it assumes they all have the script).</p>\n\n",
      "PostDate": "2017-12-24T11:39:04.1075582Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "97208d84-1aa1-432f-ba88-73b2c04abce1",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What's with the L1, L2?",
      "EditableFormat": "markdown",
      "HTML": "<p>What's with the L1, L2?</p>\n\n",
      "PostDate": "2017-12-28T16:27:20.6406473Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "90d10183-4797-4236-bf39-3cbfc13830a9",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "They are local variables, list one and list two. List one gets set to be a list of reachable objects. List two is that, but filtered so only those with the alias \"some alias\" are in the list. Then it iterates through each member of list two.",
      "EditableFormat": "markdown",
      "HTML": "<p>They are local variables, list one and list two. List one gets set to be a list of reachable objects. List two is that, but filtered so only those with the alias \"some alias\" are in the list. Then it iterates through each member of list two.</p>\n\n",
      "PostDate": "2017-12-28T16:29:25.0912382Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0e870028-41a1-4c3b-b88e-cac956ae1e4f",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well I'm not very good and screwing around by changing the script directly, so tell me if this makes any sense:\r\n```\r\nl1 = ScopeReachable()\r\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\r\nforeach (obj, l2) {\r\n  do (obj, \"if (Bow.arrows > 0) {    Bow.arrows = Bow.arrows - 1    if (RandomChance(Kill.chance))\r\n    RemoveObject (l2) {    }  }  else {    msg (\"You don't have any arrows.\")  }  \")\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>Well I'm not very good and screwing around by changing the script directly, so tell me if this makes any sense:</p>\n<pre><code>l1 = ScopeReachable()\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\nforeach (obj, l2) {\n  do (obj, \"if (Bow.arrows &gt; 0) {    Bow.arrows = Bow.arrows - 1    if (RandomChance(Kill.chance))\n    RemoveObject (l2) {    }  }  else {    msg (\"You don't have any arrows.\")  }  \")\n}\n</code></pre>\n\n",
      "PostDate": "2017-12-28T16:49:39.0368909Z",
      "LastEditDate": "2017-12-28T17:05:19.0888291Z",
      "link": null
    },
    {
      "PostId": "00a62903-1895-4417-8837-d21908c348be",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You'd probably need something like this:\r\n\r\n```\r\n//============================================================\r\n//   Set the script up.\r\n//============================================================\r\nmyScript => {\r\n  if (Bow.arrows > 0) {\r\n    Bow.arrows = Bow.arrows - 1    \r\n    if (RandomChance(Kill.chance)) {\r\n      RemoveObject (obj)\r\n    }\r\n  }\r\n  else {\r\n    msg (\"You don't have any arrows.\")  \r\n  } \r\n}\r\n//============================================================\r\n//  Now that the script is set up, set up the lists.\r\n//============================================================\r\nl1 = ScopeReachable()\r\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\r\n//============================================================\r\n// Now invoke the script for each object in the final list.\r\n//============================================================\r\nforeach (obj, l2) {\r\n  invoke(myScript)\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You'd probably need something like this:</p>\n<pre><code>//============================================================\n//   Set the script up.\n//============================================================\nmyScript =&gt; {\n  if (Bow.arrows &gt; 0) {\n    Bow.arrows = Bow.arrows - 1    \n    if (RandomChance(Kill.chance)) {\n      RemoveObject (obj)\n    }\n  }\n  else {\n    msg (\"You don't have any arrows.\")  \n  } \n}\n//============================================================\n//  Now that the script is set up, set up the lists.\n//============================================================\nl1 = ScopeReachable()\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\n//============================================================\n// Now invoke the script for each object in the final list.\n//============================================================\nforeach (obj, l2) {\n  invoke(myScript)\n}\n</code></pre>\n\n",
      "PostDate": "2017-12-28T18:13:20.2208623Z",
      "LastEditDate": "2017-12-28T18:16:37.6918611Z",
      "link": null
    },
    {
      "PostId": "1292982d-fe53-4932-9437-781720926f78",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your script for the boar should be in an attribute. Create an attribute under the original boar which you are making clones. Name it attack_boar or something you will recognize as an attack script. Then below the attributes box it will say \"String\", drop down in the box and select \"script\". Then add your script. when you attack you will use the \"do (obj, attack_boar) part of your script in your verb.\r\nThis part goes in the attribute script.\r\n```\r\nl1 = ScopeReachable()\r\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\r\nforeach (obj, l2) {\r\n if (Bow.arrows > 0) {   \r\n Bow.arrows = Bow.arrows - 1 \r\n}  \r\n if (RandomChance(Kill.chance)) {\r\n    RemoveObject (obj) \r\n }  \r\nelse {    \r\nmsg (\"You don't have any arrows.\")   \r\n}\r\n```\r\nI'm not sure the script is legit, but the directions are.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Your script for the boar should be in an attribute. Create an attribute under the original boar which you are making clones. Name it attack_boar or something you will recognize as an attack script. Then below the attributes box it will say \"String\", drop down in the box and select \"script\". Then add your script. when you attack you will use the \"do (obj, attack_boar) part of your script in your verb.<br>\nThis part goes in the attribute script.</p>\n<pre><code>l1 = ScopeReachable()\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\nforeach (obj, l2) {\n if (Bow.arrows &gt; 0) {   \n Bow.arrows = Bow.arrows - 1 \n}  \n if (RandomChance(Kill.chance)) {\n    RemoveObject (obj) \n }  \nelse {    \nmsg (\"You don't have any arrows.\")   \n}\n</code></pre>\n<p>I'm not sure the script is legit, but the directions are.</p>\n\n",
      "PostDate": "2017-12-28T18:18:45.4148851Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0d71faac-41a6-4819-8a05-82c7c105d946",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha. KV beat me to it!  Trust his script....",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha. KV beat me to it!  Trust his script....</p>\n\n",
      "PostDate": "2017-12-28T18:20:51.1530382Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "694cafcc-c1e7-4100-ac9b-c911ffd5ca93",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "K.V can you just write out exactly how to write the script? I'm too dumb to understand all the //notes.\r\n\r\nForge er, what's a string?",
      "EditableFormat": "markdown",
      "HTML": "<p>K.V can you just write out exactly how to write the script? I'm too dumb to understand all the //notes.</p>\n<p>Forge er, what's a string?</p>\n\n",
      "PostDate": "2017-12-29T17:48:34.8918856Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f2c382f-93cf-4d71-a2c2-b060783d52c5",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's cool.  Notes threw me off in the beginning, too.\r\n\r\nThat is a working script, though.\r\n\r\nQuest ignores the notes.  Each note is just to let you know what the next bit of code is doing.",
      "EditableFormat": "markdown",
      "HTML": "<p>It's cool.  Notes threw me off in the beginning, too.</p>\n<p>That is a working script, though.</p>\n<p>Quest ignores the notes.  Each note is just to let you know what the next bit of code is doing.</p>\n\n",
      "PostDate": "2017-12-29T18:08:31.9096916Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "abab9190-1fb7-491f-85f4-f203aeef5f0c",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Forgewright is right about setting up an attack_boar script attribute on the original boar, by the way. That would simplify things.\r\n\r\n...it seems like mrangel posted that code in some other thread concerning this, but I can't find it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Forgewright is right about setting up an attack_boar script attribute on the original boar, by the way. That would simplify things.</p>\n<p>...it seems like mrangel posted that code in some other thread concerning this, but I can't find it.</p>\n\n",
      "PostDate": "2017-12-29T18:14:43.1329194Z",
      "LastEditDate": "2017-12-29T18:16:10.4625004Z",
      "link": null
    },
    {
      "PostId": "706cae6d-ad8b-42e9-9721-d642ebd48c97",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, there have been quite a few posts about this but they all confuse me. Gosh working with clones is so difficult!",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, there have been quite a few posts about this but they all confuse me. Gosh working with clones is so difficult!</p>\n\n",
      "PostDate": "2017-12-29T19:20:00.839992Z",
      "LastEditDate": "2017-12-29T19:24:31.9174794Z",
      "link": null
    },
    {
      "PostId": "de14f942-5d65-4b1b-ad55-9a4823a62735",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A string: two things.\r\n\r\nA function thing.\r\nAny expression that has \"\" surrounding them.\r\nThat's all I got.",
      "EditableFormat": "markdown",
      "HTML": "<p>A string: two things.</p>\n<p>A function thing.<br>\nAny expression that has \"\" surrounding them.<br>\nThat's all I got.</p>\n\n",
      "PostDate": "2017-12-29T20:09:42.6156336Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "32e552e2-027d-45c9-b177-15a26b5e182b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**STRING**\r\n```\r\nmyVariable = \"1\"\r\n```\r\n**INTEGER**\r\n```\r\nmyVariable = 1\r\n```\r\n\r\n---\r\nhttp://docs.textadventures.co.uk/quest/types/",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>STRING</strong></p>\n<pre><code>myVariable = \"1\"\n</code></pre>\n<p><strong>INTEGER</strong></p>\n<pre><code>myVariable = 1\n</code></pre>\n<hr>\n<p>http://docs.textadventures.co.uk/quest/types/</p>\n\n",
      "PostDate": "2017-12-29T21:47:10.5999307Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "19472582-5342-482b-8f24-0f0b3ae7bcef",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's an example game with a boar call you can blow to make a boar show up.\r\n\r\n```\r\n<!--Saved by Quest 5.7.6404.15496-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Cloning Basics\">\r\n    <gameid>f56df349-ddd0-491b-a047-4f4be87a5212</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2017</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"boar_call\">\r\n        <inherit name=\"editor_object\" />\r\n        <alias>pig whistle</alias>\r\n        <look>A perfectly normal pig whistle (also known as a \"boar call\").</look>\r\n        <feature_usegive />\r\n        <usestandardverblist />\r\n        <displayverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Take</value>\r\n        </displayverbs>\r\n        <use type=\"script\">\r\n          if (Got(this)) {\r\n            msg (\"You blow on the pig whistle, and a new boar immediately appears.\")\r\n            newBoar = CloneObjectAndMoveHere(boar)\r\n            newBoar.prototype = boar\r\n          }\r\n          else {\r\n            msg (\"You need to be holding it to do that.\")\r\n          }\r\n        </use>\r\n        <blowon type=\"script\">\r\n          if (Got(this)) {\r\n            msg (\"You blow on the pig whistle, and a new boar immediately appears.\")\r\n            newBoar = CloneObjectAndMoveHere(boar)\r\n            newBoar.prototype = boar\r\n          }\r\n          else {\r\n            msg (\"You need to be holding it to do that.\")\r\n          }\r\n        </blowon>\r\n        <inventoryverbs type=\"stringlist\">\r\n          <value>Look at</value>\r\n          <value>Blow</value>\r\n          <value>Drop</value>\r\n        </inventoryverbs>\r\n      </object>\r\n    </object>\r\n  </object>\r\n  <object name=\"boar\">\r\n    <inherit name=\"editor_object\" />\r\n    <look>A wild boar.</look>\r\n    <alias>boar</alias>\r\n    <hit>You hit it, but it doesn't accomplish much (besides pissing the boar off).</hit>\r\n    <takemsg>You try, but the boar tries to bite you, so you decide against it.</takemsg>\r\n    <displayverbs type=\"stringlist\">\r\n      <value>Look at</value>\r\n      <value>Kill</value>\r\n    </displayverbs>\r\n    <alt type=\"stringlist\">\r\n      <value>pig</value>\r\n      <value>oinker</value>\r\n      <value>hog</value>\r\n    </alt>\r\n    <usestandardverblist />\r\n    <attack type=\"script\"><![CDATA[\r\n      msg (\"You attack the boar.<br/><br/>It puts up a little fight, but, in the end, you kill it.\")\r\n      newDeadBoar = CloneObjectAndMoveHere(dead_boar)\r\n      obj = this.name\r\n      destroy (obj)\r\n      game.lastobjects = NewObjectList()\r\n      list add (game.lastobjects, newDeadBoar)\r\n    ]]></attack>\r\n    <kill type=\"script\"><![CDATA[\r\n      msg (\"You attack the boar.<br/><br/>It puts up a little fight, but, in the end, you kill it.\")\r\n      newDeadBoar = CloneObjectAndMoveHere(dead_boar)\r\n      obj = this.name\r\n      destroy (obj)\r\n      game.lastobjects = NewObjectList()\r\n      list add (game.lastobjects, newDeadBoar)\r\n    ]]></kill>\r\n  </object>\r\n  <verb>\r\n    <property>attack</property>\r\n    <pattern>attack</pattern>\r\n    <defaultexpression>\"You can't attack \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <object name=\"dead_boar\">\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"surface\" />\r\n    <alias>dead boar</alias>\r\n    <look>Deader than a doornail.</look>\r\n    <feature_container />\r\n    <listchildren />\r\n    <hidechildren />\r\n    <displayverbs type=\"stringlist\">\r\n      <value>Look at</value>\r\n    </displayverbs>\r\n    <inventoryverbs type=\"stringlist\">\r\n      <value>Look at</value>\r\n      <value>Drop</value>\r\n    </inventoryverbs>\r\n    <takemsg>It's a little too heavy to tote around.</takemsg>\r\n    <object name=\"hide\">\r\n      <inherit name=\"editor_object\" />\r\n      <alias>hide</alias>\r\n      <look>The hide of a downed boar.</look>\r\n      <take />\r\n      <ontake type=\"script\">\r\n        this.alias = \"boar's hide\"\r\n      </ontake>\r\n    </object>\r\n    <object name=\"raw boar meat\">\r\n      <inherit name=\"editor_object\" />\r\n      <take />\r\n      <alias>raw boar meat</alias>\r\n      <look>The raw meat you acquired after killing a wild boar.</look>\r\n      <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n      <prefix>some</prefix>\r\n    </object>\r\n  </object>\r\n  <verb>\r\n    <property>blowon</property>\r\n    <pattern>blow on;blow</pattern>\r\n    <defaultexpression>\"You can't blow on;blow \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's an example game with a boar call you can blow to make a boar show up.</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6404.15496--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Cloning Basics\"&gt;\n    &lt;gameid&gt;f56df349-ddd0-491b-a047-4f4be87a5212&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2017&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"boar_call\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;alias&gt;pig whistle&lt;/alias&gt;\n        &lt;look&gt;A perfectly normal pig whistle (also known as a \"boar call\").&lt;/look&gt;\n        &lt;feature_usegive /&gt;\n        &lt;usestandardverblist /&gt;\n        &lt;displayverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Take&lt;/value&gt;\n        &lt;/displayverbs&gt;\n        &lt;use type=\"script\"&gt;\n          if (Got(this)) {\n            msg (\"You blow on the pig whistle, and a new boar immediately appears.\")\n            newBoar = CloneObjectAndMoveHere(boar)\n            newBoar.prototype = boar\n          }\n          else {\n            msg (\"You need to be holding it to do that.\")\n          }\n        &lt;/use&gt;\n        &lt;blowon type=\"script\"&gt;\n          if (Got(this)) {\n            msg (\"You blow on the pig whistle, and a new boar immediately appears.\")\n            newBoar = CloneObjectAndMoveHere(boar)\n            newBoar.prototype = boar\n          }\n          else {\n            msg (\"You need to be holding it to do that.\")\n          }\n        &lt;/blowon&gt;\n        &lt;inventoryverbs type=\"stringlist\"&gt;\n          &lt;value&gt;Look at&lt;/value&gt;\n          &lt;value&gt;Blow&lt;/value&gt;\n          &lt;value&gt;Drop&lt;/value&gt;\n        &lt;/inventoryverbs&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"boar\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;look&gt;A wild boar.&lt;/look&gt;\n    &lt;alias&gt;boar&lt;/alias&gt;\n    &lt;hit&gt;You hit it, but it doesn't accomplish much (besides pissing the boar off).&lt;/hit&gt;\n    &lt;takemsg&gt;You try, but the boar tries to bite you, so you decide against it.&lt;/takemsg&gt;\n    &lt;displayverbs type=\"stringlist\"&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n      &lt;value&gt;Kill&lt;/value&gt;\n    &lt;/displayverbs&gt;\n    &lt;alt type=\"stringlist\"&gt;\n      &lt;value&gt;pig&lt;/value&gt;\n      &lt;value&gt;oinker&lt;/value&gt;\n      &lt;value&gt;hog&lt;/value&gt;\n    &lt;/alt&gt;\n    &lt;usestandardverblist /&gt;\n    &lt;attack type=\"script\"&gt;&lt;![CDATA[\n      msg (\"You attack the boar.&lt;br/&gt;&lt;br/&gt;It puts up a little fight, but, in the end, you kill it.\")\n      newDeadBoar = CloneObjectAndMoveHere(dead_boar)\n      obj = this.name\n      destroy (obj)\n      game.lastobjects = NewObjectList()\n      list add (game.lastobjects, newDeadBoar)\n    ]]&gt;&lt;/attack&gt;\n    &lt;kill type=\"script\"&gt;&lt;![CDATA[\n      msg (\"You attack the boar.&lt;br/&gt;&lt;br/&gt;It puts up a little fight, but, in the end, you kill it.\")\n      newDeadBoar = CloneObjectAndMoveHere(dead_boar)\n      obj = this.name\n      destroy (obj)\n      game.lastobjects = NewObjectList()\n      list add (game.lastobjects, newDeadBoar)\n    ]]&gt;&lt;/kill&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;attack&lt;/property&gt;\n    &lt;pattern&gt;attack&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't attack \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;object name=\"dead_boar\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"surface\" /&gt;\n    &lt;alias&gt;dead boar&lt;/alias&gt;\n    &lt;look&gt;Deader than a doornail.&lt;/look&gt;\n    &lt;feature_container /&gt;\n    &lt;listchildren /&gt;\n    &lt;hidechildren /&gt;\n    &lt;displayverbs type=\"stringlist\"&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n    &lt;/displayverbs&gt;\n    &lt;inventoryverbs type=\"stringlist\"&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n      &lt;value&gt;Drop&lt;/value&gt;\n    &lt;/inventoryverbs&gt;\n    &lt;takemsg&gt;It's a little too heavy to tote around.&lt;/takemsg&gt;\n    &lt;object name=\"hide\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;alias&gt;hide&lt;/alias&gt;\n      &lt;look&gt;The hide of a downed boar.&lt;/look&gt;\n      &lt;take /&gt;\n      &lt;ontake type=\"script\"&gt;\n        this.alias = \"boar's hide\"\n      &lt;/ontake&gt;\n    &lt;/object&gt;\n    &lt;object name=\"raw boar meat\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;take /&gt;\n      &lt;alias&gt;raw boar meat&lt;/alias&gt;\n      &lt;look&gt;The raw meat you acquired after killing a wild boar.&lt;/look&gt;\n      &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n      &lt;prefix&gt;some&lt;/prefix&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;blowon&lt;/property&gt;\n    &lt;pattern&gt;blow on;blow&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't blow on;blow \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2017-12-29T22:20:14.7229205Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a8bb4f4b-acfd-4f10-a96e-604bf8de5a64",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/Te0Y5FPb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "#### **NOTES**\r\n\r\n---\r\nYou could just clone the object like this:\r\n```\r\nCloneObject(boar)\r\n```\r\n\r\n...but then you'd have to move it here because it wouldn't actually exist in the game world unless the original object (which is sometimes referred to as the prototype) was already in the location.  The boar is not in any room in this game, so moving the clone is a must.\r\n\r\nYou *could* move it here like this:\r\n\r\n```\r\nCloneObjectAndMove(boar, game.pov.parent)\r\n```\r\n\r\n...or you could use ```player.parent```, as long as you can't switch the game's point of view to any other objects during play:\r\n\r\n```\r\nCloneObjectAndMove(boar, player.parent)\r\n```\r\n\r\n\r\n...but, with ```player.parent``` *or* ```game.pov.parent```, you'd still be doing extra typing (and thinking).\r\n\r\nThe easiest way is to do it is like this:\r\n```\r\nCloneObjectAndMoveHere(boar)\r\n```\r\n\r\n---\r\n### Now, it gets a *little* more complicated.\r\n\r\n---\r\n<span style='font-size:130%;font-family:fantasy'>If we didn't want to add or change any attributes which were set only on this clone, we'd be finished</span> , but, the last time I saw your code, there was something checking to see if the boar was a clone (for some reason, which I can't recall).\r\n\r\nI *think* that attribute's name was ```original_object```.\r\n\r\nIf I'm remembering right, mrangel said he'd come across some code where The Pixie used an attribute named ```prototype``` to serve the same purpose.  (My memory is fuzzy, though.  I may have it backwards.)\r\n\r\nANYWAY, I used ```prototype``` in my example.  You may need to replace ```prototype``` with ```original_object```.  (I'd try out prototype first.  If that failed, I'd save a backup copy of the game (just in case), then flip to code view, enter **CTRL+H**, and replace \"prototype\" with \"original_object\".)\r\n\r\n```prototype``` is an object attribute, meaning you can set it's return value to an object (like **boar**).\r\n\r\n#### **So...**\r\n\r\nFirst, we want to know what clone we're dealing with as soon as we clone the boar, so instead of just putting this:\r\n```\r\nCloneObjectAndMoveHere(boar)\r\n```\r\n\r\n... we do it like this:\r\n```\r\nnewBoar = CloneObjectAndMoveHere(boar)\r\n```\r\n\r\nThis still does the same thing, as far as cloning the boar and moving it here is concerned, but it also lets us manipulate the newly created clone's attributes with the ```newBoar``` variable we just created.\r\n\r\nSo, now we can add a line of script which ties the clone to its original object (or prototype) like this:\r\n```\r\nnewBoar.prototype = boar\r\n```\r\n\r\nPut it together, and what have we got?\r\n\r\n```\r\nnewBoar = CloneObjectAndMoveHere(boar)\r\nnewBoar.prototype = boar\r\n```\r\n\r\nA fresh boar.  (\"Kill the pig!  Slit its throat!!!\")\r\n\r\n---\r\n\r\nFinally, if we want to know if the boar we're dealing with is a clone, we can do this:\r\n```\r\nif(HasAttribute(this,\"prototype\")){\r\n  //NOTE: object has prototype attribute, so it is a clone\r\n  if(this.prototype = boar){\r\n    //NOTE: object was cloned from boar\r\n    // Add some scripting here, if you want something to happen to clones of boar!\r\n    // Here's example scripting, but it's just a (very) dumb example:\r\n    msg(\"After a moment, the dead boar melts away, like a vinyl record in a Freddy Kreuger movie.  (It must have been a poorly engineered clone.)\")\r\n    destroy(this.name)\r\n  }\r\n}\r\n```\r\n\r\nHere's a similar script (which I tested as the KILL script), minus the notes:\r\n\r\n```\r\nif (HasAttribute(this,\"prototype\")) {\r\n  if (this.prototype = boar) {\r\n    msg (\"You attack the boar.<br/><br/>It puts up a small fight, but, before long, you slit its throat with your machete.<br/><br/>After a moment, you poke the boar, just to make sure it's really dead, and a deafening whistling sound blares from inside of it.<br/><br/>You're not exactly sure what's going on here, but you're pretty sure that's Mama Boar you can now see approaching at a very unsettling pace, and man!  She looks pissed-off!\")\r\n    newBoar = CloneObjectAndMoveHere(boar)\r\n    boar.mamaBoar = newBoar\r\n    newBoar.alias = \"Mama Boar\"\r\n    newBoar.look = \"She's much bigger than the one you just killed.  (Lots of bacon to be harvested!)\"\r\n    newScript => {\r\n      msg (\"You attack Mama Boar, but it does no good. (She is extremely thick-skinned!)\")\r\n    }\r\n    newBoar.kill = newScript\r\n    newBoar.attack = newScript\r\n    SetTimeout (30) {\r\n      msg (\"<br/>Mama Boar tires of your antics and wanders off.\")\r\n      destroy (boar.mamaBoar.name)\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n---\r\nI learned most of this by reading posts by mrangel, The Pixie, and HK.\r\n\r\nIf something works for you, I stole it from one of those guys.\r\n\r\nIf something throws an error, that's probably me (and I apologize in advance).",
      "EditableFormat": "markdown",
      "HTML": "<h4><strong>NOTES</strong></h4>\n<hr>\n<p>You could just clone the object like this:</p>\n<pre><code>CloneObject(boar)\n</code></pre>\n<p>...but then you'd have to move it here because it wouldn't actually exist in the game world unless the original object (which is sometimes referred to as the prototype) was already in the location.  The boar is not in any room in this game, so moving the clone is a must.</p>\n<p>You <em>could</em> move it here like this:</p>\n<pre><code>CloneObjectAndMove(boar, game.pov.parent)\n</code></pre>\n<p>...or you could use <code>player.parent</code>, as long as you can't switch the game's point of view to any other objects during play:</p>\n<pre><code>CloneObjectAndMove(boar, player.parent)\n</code></pre>\n<p>...but, with <code>player.parent</code> <em>or</em> <code>game.pov.parent</code>, you'd still be doing extra typing (and thinking).</p>\n<p>The easiest way is to do it is like this:</p>\n<pre><code>CloneObjectAndMoveHere(boar)\n</code></pre>\n<hr>\n<h3>Now, it gets a <em>little</em> more complicated.</h3>\n<hr>\n<p><span style=\"font-size: 130%; font-family: fantasy\">If we didn't want to add or change any attributes which were set only on this clone, we'd be finished</span> , but, the last time I saw your code, there was something checking to see if the boar was a clone (for some reason, which I can't recall).</p>\n<p>I <em>think</em> that attribute's name was <code>original_object</code>.</p>\n<p>If I'm remembering right, mrangel said he'd come across some code where The Pixie used an attribute named <code>prototype</code> to serve the same purpose.  (My memory is fuzzy, though.  I may have it backwards.)</p>\n<p>ANYWAY, I used <code>prototype</code> in my example.  You may need to replace <code>prototype</code> with <code>original_object</code>.  (I'd try out prototype first.  If that failed, I'd save a backup copy of the game (just in case), then flip to code view, enter <strong>CTRL+H</strong>, and replace \"prototype\" with \"original_object\".)</p>\n<p><code>prototype</code> is an object attribute, meaning you can set it's return value to an object (like <strong>boar</strong>).</p>\n<h4><strong>So...</strong></h4>\n<p>First, we want to know what clone we're dealing with as soon as we clone the boar, so instead of just putting this:</p>\n<pre><code>CloneObjectAndMoveHere(boar)\n</code></pre>\n<p>... we do it like this:</p>\n<pre><code>newBoar = CloneObjectAndMoveHere(boar)\n</code></pre>\n<p>This still does the same thing, as far as cloning the boar and moving it here is concerned, but it also lets us manipulate the newly created clone's attributes with the <code>newBoar</code> variable we just created.</p>\n<p>So, now we can add a line of script which ties the clone to its original object (or prototype) like this:</p>\n<pre><code>newBoar.prototype = boar\n</code></pre>\n<p>Put it together, and what have we got?</p>\n<pre><code>newBoar = CloneObjectAndMoveHere(boar)\nnewBoar.prototype = boar\n</code></pre>\n<p>A fresh boar.  (\"Kill the pig!  Slit its throat!!!\")</p>\n<hr>\n<p>Finally, if we want to know if the boar we're dealing with is a clone, we can do this:</p>\n<pre><code>if(HasAttribute(this,\"prototype\")){\n  //NOTE: object has prototype attribute, so it is a clone\n  if(this.prototype = boar){\n    //NOTE: object was cloned from boar\n    // Add some scripting here, if you want something to happen to clones of boar!\n    // Here's example scripting, but it's just a (very) dumb example:\n    msg(\"After a moment, the dead boar melts away, like a vinyl record in a Freddy Kreuger movie.  (It must have been a poorly engineered clone.)\")\n    destroy(this.name)\n  }\n}\n</code></pre>\n<p>Here's a similar script (which I tested as the KILL script), minus the notes:</p>\n<pre><code>if (HasAttribute(this,\"prototype\")) {\n  if (this.prototype = boar) {\n    msg (\"You attack the boar.&lt;br/&gt;&lt;br/&gt;It puts up a small fight, but, before long, you slit its throat with your machete.&lt;br/&gt;&lt;br/&gt;After a moment, you poke the boar, just to make sure it's really dead, and a deafening whistling sound blares from inside of it.&lt;br/&gt;&lt;br/&gt;You're not exactly sure what's going on here, but you're pretty sure that's Mama Boar you can now see approaching at a very unsettling pace, and man!  She looks pissed-off!\")\n    newBoar = CloneObjectAndMoveHere(boar)\n    boar.mamaBoar = newBoar\n    newBoar.alias = \"Mama Boar\"\n    newBoar.look = \"She's much bigger than the one you just killed.  (Lots of bacon to be harvested!)\"\n    newScript =&gt; {\n      msg (\"You attack Mama Boar, but it does no good. (She is extremely thick-skinned!)\")\n    }\n    newBoar.kill = newScript\n    newBoar.attack = newScript\n    SetTimeout (30) {\n      msg (\"&lt;br/&gt;Mama Boar tires of your antics and wanders off.\")\n      destroy (boar.mamaBoar.name)\n    }\n  }\n}\n</code></pre>\n<hr>\n<p>I learned most of this by reading posts by mrangel, The Pixie, and HK.</p>\n<p>If something works for you, I stole it from one of those guys.</p>\n<p>If something throws an error, that's probably me (and I apologize in advance).</p>\n\n",
      "PostDate": "2017-12-29T22:56:42.3766299Z",
      "LastEditDate": "2017-12-29T23:18:46.5509769Z",
      "link": null
    },
    {
      "PostId": "4d839fe8-1aa7-4c63-a88a-5ce0d69f9a82",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This does not seem to be working, is it properly written?\r\n\r\n```\r\nl1 = ScopeReachable()\r\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\r\nforeach (obj, l2) {\r\n  do (obj, \"if (Bow.arrows > 0) {    Bow.arrows = Bow.arrows - 1    if (RandomChance(Kill.chance))          RemoveObject (l2) {    }  }  else {    msg (\"You don't have any arrows.\")  }  \")\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>This does not seem to be working, is it properly written?</p>\n<pre><code>l1 = ScopeReachable()\nl2 = FilterByAttribute (l1, \"alias\", \"boar\")\nforeach (obj, l2) {\n  do (obj, \"if (Bow.arrows &gt; 0) {    Bow.arrows = Bow.arrows - 1    if (RandomChance(Kill.chance))          RemoveObject (l2) {    }  }  else {    msg (\"You don't have any arrows.\")  }  \")\n}\n</code></pre>\n\n",
      "PostDate": "2018-02-10T22:17:41.7433724Z",
      "LastEditDate": "2018-02-10T23:08:07.1122594Z",
      "link": null
    }
  ]
}
