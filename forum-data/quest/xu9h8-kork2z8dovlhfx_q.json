{
  "Topic": {
    "TopicId": "xu9h8-kork2z8dovlhfx_q",
    "ForumId": "10",
    "Title": "KV's GridImageLib -- Cropping an Image's Sides",
    "LastUpdated": "2018-07-07T07:09:44.6115467Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "97b440c8-de1c-4ec9-bc38-d25278449cee",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This has to do with an old library of KV's that he updated for Q5.8.  This library (GridImageLib) replaces the standard map room fill with any image, stored online or in the local game folder (I am using the local game folder).\r\n\r\nSo the library displays an image, but in order to make it fit the map room, the image is squished (i.e., the aspect ratio is negated and the image squished either horizontally or vertically).  What I want to do instead is to crop the image (the left/right sides) to fit the map room, so that the image is not distorted.  To do that, I found this page on w3schools:\r\n\r\nhttps://www.w3schools.com/css/css3_object-fit.asp\r\n\r\nKV's GridImageLib also includes a separate js script called \"GridImageLib.js\".  Here is the code for the library and for the js script:\r\n\r\n<details>\r\n<summary>+++ Click Here for Library +++</summary>\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n<!--\r\n\t\tGridImgLib \r\n\t\t\r\n\t\tby KV\r\n\t\t\r\n\t\tSpecial Guest Coders:  MrAngel & Dcoder\r\n\t\t\r\n\t\tVERSION 2.0\r\n\t\t\r\n\t\tThis will allow you to set a picture to display in place of a room's \r\n\t\tstandard map image.  \r\n\t\t\r\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\r\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\r\n\t\tcan use the file browser to import an image file, or you can enter a URL\r\n\t\tto use an online image.  \r\n\t\t\r\n\t\t(You can NOT enter the path to the file!  If using a local image,\r\n\t\tthe file MUST be in the game's main folder!!!)\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tIMPORTANT NOTE:\r\n\t\t\r\n\t\tIf you want to switch back to using the standard map image, you must completely\r\n\t\tremove the \"grid_image\" attribute from the room!!!\r\n\t\t\r\n\t\t===\r\n\t\t\r\n\t\tDesigned for Quest 5.7.1\r\n\t\tYear of publication: 2018\r\n\r\n-->\r\n\t<!--\r\n\t\r\n\tIMPORTANT:\r\n\tYou must add the following line to you User Interface Initialisation script:\r\n\t\r\n\tSetupGridImages\r\n\t\r\n\t-->\r\n  <library>\r\n  \r\n\t<function name=\"SetGridImgPath\" parameters=\"filename\">\r\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\r\n\t</function>\r\n  \r\n\t<function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"><![CDATA[\r\n\t\tif (room.grid_render) {\r\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\r\n\t\t\tif (room.parent <> null) {\r\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\r\n\t\t\t}\r\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\r\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\r\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\r\n\t\t\tif (HasString(room, \"grid_image\")) {\r\n\t\t\t  imgfile = false\r\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\r\n\t\t\t  room.imageid = room.name+\"-grid-image\"\r\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\r\n\t\t\t}\r\n\t\t\tif (LengthOf(room.grid_label) > 0) {\r\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\r\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\r\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\r\n\t\t\t}\r\n\t\t\tforeach (exit, AllExits()) {\r\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length > 0) {\r\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\r\n\t\t  }\r\n\t\t}\r\n\t]]></function>\r\n    \r\n  <function name=\"FinishTurn\">\r\n    if (HasAttribute(game,\"runturnscripts\")) {\r\n      if (GetBoolean(game,\"runturnscripts\")) {\r\n\t    if (not GetBoolean(game, \"suppressturnscripts\")) {\r\n\t  \t  RunTurnScripts\r\n\t\t  game.runturnscripts = false\r\n\t    }\r\n\t  }\r\n\t}\r\n\telse {\r\n\t  if (not GetBoolean(game, \"suppressturnscripts\")) {\r\n\t  \tRunTurnScripts\r\n\t  }\r\n\t}\r\n\tgame.suppressturnscripts = false\r\n\tUpdateStatusAttributes\r\n\tCheckDarkness\r\n\tUpdateObjectLinks\r\n  </function>\r\n  \r\n  <function name=\"AslSet\" parameters=\"data\">\r\n    //game.suppressturnscripts = true\r\n    data = Split(data,\"||\")\r\n\r\n    foreach (bit, data) {\r\n      stuff = Split(bit,\"=\")\r\n      obj_attr = stuff[0]\r\n      obj_attr = Split(obj_attr,\".\")\r\n\t  if (ListCount(obj_attr)>2){\r\n\t    exclude = obj_attr[ListCount(obj_attr)-1]\r\n\t    obj = Join(ListExclude(obj_attr,exclude),\".\")\r\n\t\tobj_attr = NewStringList()\r\n\t\tlist add (obj_attr, obj)\r\n\t\tlist add (obj_attr, exclude)\r\n\t  }\r\n\t  else {\r\n        obj = obj_attr[0]\r\n\t  }\r\n      obj = GetObject(obj)\r\n      attr = obj_attr[1]\r\n      val = stuff[1]\r\n      if (EndsWith(val,\"_toInt\")) {\r\n        val = ToInt(Replace(val,\"_toInt\",\"\"))\r\n      }\r\n      if(LCase(val)=\"true\"){\r\n        val = true\r\n      }\r\n      else if(LCase(val)=\"false\"){\r\n        val = false\r\n      }\r\n      else if (EndsWith(val,\"_toDouble\")) {\r\n        val = ToDouble(Replace(val,\"_toDouble\",\"\"))\r\n      }\r\n      set (obj, attr, val)\r\n    }\r\n  </function>\r\n  \r\n  <function name=\"SetupGridImages\"><![CDATA[\r\n\t  SetGridImgPath(\"\")\r\n\t  foreach (room, AllObjects()) {\r\n\t\tif (HasAttribute(room,\"grid_image\")) {\r\n\t\t  JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');checkImages();\")\r\n\t\t}\r\n\t  }\r\n  ]]></function>\r\n  \r\n\r\n\t<!--\r\n\tAdd a tab to the editor.\r\n\t-->\r\n\r\n\t<tab>\r\n\t\t<parent>_ObjectEditor</parent>\r\n\t\t<onlydisplayif>game.gridmap</onlydisplayif>\r\n\t\t<caption>Grid Image (optional)</caption>\r\n\t\t<title>Select an image to display in the map</title>\r\n\t\t<mustnotinherit>editor_object</mustnotinherit>\r\n\t\t<control>\r\n\t\t  <controltype>checkbox</controltype>\r\n\t\t  <caption>Enter a URL (or file name) instead of loading a local image</caption>\r\n\t\t  <attribute>gridimg_custompath</attribute>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not HasAttribute(this,\"gridimg_custompath\")</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t<caption>Grid Image</caption>\r\n\t\t\t<controltype>file</controltype>\r\n\t\t\t<attribute>grid_image</attribute>\r\n\t\t\t<source>[EditorImageFormats]</source>\r\n\t\t\t<filefiltername>Picture Files</filefiltername>\r\n\t\t\t<onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t<preview/>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t\t  <controltype>label</controltype>\r\n\t\t\t  <onlydisplayif>not this.gridimg_custompath</onlydisplayif>\r\n\t\t\t  <caption>THIS FILE WILL BE IMPORTED BY QUEST</caption>\r\n\t\t\t</control>\r\n\t\t<control>\r\n\t\t  <caption>Enter the URL or file name</caption>\r\n\t\t  <attribute>grid_image</attribute>\r\n\t\t  <controltype>textbox</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t</control>\r\n\t\t<control>\r\n\t\t  <controltype>label</controltype>\r\n\t\t  <onlydisplayif>this.gridimg_custompath</onlydisplayif>\r\n\t\t  <caption>IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!</caption>\r\n\t\t</control>\r\n\t</tab>\r\n  <javascript src=\"GridImageLib.js\" />\r\n  \r\n  </library>\r\n  ```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary>+++ Click Here for JS Script +++</summary>\r\n\r\n```\r\nvar questImagePath = \"\";\r\n\r\nsetImagePath = function(path) {\r\n  questImagePath = path;\r\n};\r\n\r\ngetFileUrlJS = function(filename){\r\n  if(filename.indexOf(\"://\") > 0) {\r\n\treturn (filename);\r\n  } else {\r\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\r\n  }\r\n};\r\nvar imagesToCheck = [];\r\n\r\nfunction checkImages(){\r\n\timagesToCheck.forEach(function(img){\r\n\t\tisFileGood(img)\r\n\t});\r\n};\r\n\r\nvar failedImgs = [];\r\n\r\nfunction imgFail(imgFailed){\r\n\tfailedImgs.push(imgFailed.src);\r\n};\r\n\r\n// This function has been updated by KV to clear out image elements that were accumulating while mapping new areas in a restored game.\r\nfunction isFileGood(url){\r\n    imgFile = getFileUrlJS(url);\r\n    $('body').append(\"<img style='display:none' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/>\");\r\n};\r\n\r\ncustomDrawImage = function(url){\r\n\tvar imgFile = getFileUrlJS(url);\r\n\tvar failnumber = failedImgs.indexOf(imgFile);\r\n\tif(failnumber === -1){\r\n\t\tASLEvent('AslSet', roomImageId.replace(\"-\",\".\").replace(\"grid-image\",\"grid_image\")+\"=\"+imgFile);\r\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\r\n\t}\r\n};\r\n```\r\n\r\n</details>\r\n\r\nSo what I tried to do was to change the last line of this function in the js script from this:\r\n```\r\nfunction isFileGood(url){\r\n    imgFile = getFileUrlJS(url);\r\n    $('body').append(\"<img style='display:none' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/>\");\r\n};\r\n```\r\nto this:\r\n```\r\nfunction isFileGood(url){\r\n    imgFile = getFileUrlJS(url);\r\n    $('body').append(\"<img style='display:none;object-fit:cover' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/>\");\r\n};\r\n```\r\nSpecifically, the part I changed was this...\r\n```\r\nstyle='display:none;object-fit:cover'\r\n```\r\n...which had no effect (image is still squished).  Any ideas on the correct syntax or fix?  Thanks.\r\n\r\n------------------------------------------------- filler for updating my post -------------------------------------------------------",
      "EditableFormat": "markdown",
      "HTML": "<p>This has to do with an old library of KV's that he updated for Q5.8.  This library (GridImageLib) replaces the standard map room fill with any image, stored online or in the local game folder (I am using the local game folder).</p>\n<p>So the library displays an image, but in order to make it fit the map room, the image is squished (i.e., the aspect ratio is negated and the image squished either horizontally or vertically).  What I want to do instead is to crop the image (the left/right sides) to fit the map room, so that the image is not distorted.  To do that, I found this page on w3schools:</p>\n<p>https://www.w3schools.com/css/css3_object-fit.asp</p>\n<p>KV's GridImageLib also includes a separate js script called \"GridImageLib.js\".  Here is the code for the library and for the js script:</p>\n<details>\n<summary>+++ Click Here for Library +++</summary>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n&lt;!--\n\t\tGridImgLib \n\t\t\n\t\tby KV\n\t\t\n\t\tSpecial Guest Coders:  MrAngel &amp; Dcoder\n\t\t\n\t\tVERSION 2.0\n\t\t\n\t\tThis will allow you to set a picture to display in place of a room's \n\t\tstandard map image.  \n\t\t\n\t\tAll you need to do is include this library along (make sure its js file is in the folder as well!), make sure the map is enabled,\n\t\tthen go to the new \"Grid Image\" tab on the room object.  From there, you\n\t\tcan use the file browser to import an image file, or you can enter a URL\n\t\tto use an online image.  \n\t\t\n\t\t(You can NOT enter the path to the file!  If using a local image,\n\t\tthe file MUST be in the game's main folder!!!)\n\t\t\n\t\t===\n\t\t\n\t\tIMPORTANT NOTE:\n\t\t\n\t\tIf you want to switch back to using the standard map image, you must completely\n\t\tremove the \"grid_image\" attribute from the room!!!\n\t\t\n\t\t===\n\t\t\n\t\tDesigned for Quest 5.7.1\n\t\tYear of publication: 2018\n\n--&gt;\n\t&lt;!--\n\t\n\tIMPORTANT:\n\tYou must add the following line to you User Interface Initialisation script:\n\t\n\tSetupGridImages\n\t\n\t--&gt;\n  &lt;library&gt;\n  \n\t&lt;function name=\"SetGridImgPath\" parameters=\"filename\"&gt;\n\t\tJS.setImagePath (GetFileUrl(\"_FILENAME_\"))\n\t&lt;/function&gt;\n  \n\t&lt;function name=\"Grid_DrawRoom\" parameters=\"room, redraw, playerobject\"&gt;&lt;![CDATA[\n\t\tif (room.grid_render) {\n\t\t  if (redraw or not Grid_GetRoomBooleanForPlayer(playerobject, room, \"grid_isdrawn\")) {\n\t\t\tif (room.parent &lt;&gt; null) {\n\t\t\t  Grid_DrawRoom (room.parent, redraw, playerobject)\n\t\t\t}\n\t\t\tgridx = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\")\n\t\t\tgridy = Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\")\n\t\t\tJS.Grid_DrawBox (gridx, gridy, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_width, room.grid_length, room.grid_border, room.grid_borderwidth, room.grid_fill, room.grid_bordersides)\n\t\t\tif (HasString(room, \"grid_image\")) {\n\t\t\t  imgfile = false\n\t\t\t  imgexts = Split(\".png;.jpeg;.gif;.jpg;svg\",\";\")\n\t\t\t  room.imageid = room.name+\"-grid-image\"\n\t\t\t  JS.eval (\"var roomImageId = '\"+room.imageid+\"';var gridX = '\"+gridx+\"';var gridY = '\"+gridy+\"';var roomGridWidth = '\"+room.grid_width+\"';var roomGridHeight = '\"+room.grid_length+\"';customDrawImage('\"+room.grid_image+\"');\")\n\t\t\t}\n\t\t\tif (LengthOf(room.grid_label) &gt; 0) {\n\t\t\t  label_x = Grid_GetGridCoordinateForPlayer(game.pov, room, \"x\") + room.grid_width/2.0\n\t\t\t  label_y = (Grid_GetGridCoordinateForPlayer(game.pov, room, \"y\") + room.grid_length/2.0) - 0.5\n\t\t\t  JS.Grid_DrawLabel (label_x, label_y, Grid_GetGridCoordinateForPlayer(game.pov, room, \"z\"), room.grid_label)\n\t\t\t}\n\t\t\tforeach (exit, AllExits()) {\n\t\t\t  if (exit.grid_render and exit.parent = room and exit.grid_length &gt; 0) {\n\t\t\t\tGrid_DrawLine (Grid_GetGridCoordinateForPlayer(game.pov, exit, \"x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"y\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_x\"), Grid_GetGridCoordinateForPlayer(game.pov, exit, \"end_y\"), game.mapexitcolour, game.mapexitwidth)\n\t\t\t  }\n\t\t\t}\n\t\t\tGrid_SetRoomBooleanForPlayer (playerobject, room, \"grid_isdrawn\", true)\n\t\t  }\n\t\t}\n\t]]&gt;&lt;/function&gt;\n    \n  &lt;function name=\"FinishTurn\"&gt;\n    if (HasAttribute(game,\"runturnscripts\")) {\n      if (GetBoolean(game,\"runturnscripts\")) {\n\t    if (not GetBoolean(game, \"suppressturnscripts\")) {\n\t  \t  RunTurnScripts\n\t\t  game.runturnscripts = false\n\t    }\n\t  }\n\t}\n\telse {\n\t  if (not GetBoolean(game, \"suppressturnscripts\")) {\n\t  \tRunTurnScripts\n\t  }\n\t}\n\tgame.suppressturnscripts = false\n\tUpdateStatusAttributes\n\tCheckDarkness\n\tUpdateObjectLinks\n  &lt;/function&gt;\n  \n  &lt;function name=\"AslSet\" parameters=\"data\"&gt;\n    //game.suppressturnscripts = true\n    data = Split(data,\"||\")\n\n    foreach (bit, data) {\n      stuff = Split(bit,\"=\")\n      obj_attr = stuff[0]\n      obj_attr = Split(obj_attr,\".\")\n\t  if (ListCount(obj_attr)&gt;2){\n\t    exclude = obj_attr[ListCount(obj_attr)-1]\n\t    obj = Join(ListExclude(obj_attr,exclude),\".\")\n\t\tobj_attr = NewStringList()\n\t\tlist add (obj_attr, obj)\n\t\tlist add (obj_attr, exclude)\n\t  }\n\t  else {\n        obj = obj_attr[0]\n\t  }\n      obj = GetObject(obj)\n      attr = obj_attr[1]\n      val = stuff[1]\n      if (EndsWith(val,\"_toInt\")) {\n        val = ToInt(Replace(val,\"_toInt\",\"\"))\n      }\n      if(LCase(val)=\"true\"){\n        val = true\n      }\n      else if(LCase(val)=\"false\"){\n        val = false\n      }\n      else if (EndsWith(val,\"_toDouble\")) {\n        val = ToDouble(Replace(val,\"_toDouble\",\"\"))\n      }\n      set (obj, attr, val)\n    }\n  &lt;/function&gt;\n  \n  &lt;function name=\"SetupGridImages\"&gt;&lt;![CDATA[\n\t  SetGridImgPath(\"\")\n\t  foreach (room, AllObjects()) {\n\t\tif (HasAttribute(room,\"grid_image\")) {\n\t\t  JS.eval (\"imagesToCheck.push('\"+room.grid_image+\"');checkImages();\")\n\t\t}\n\t  }\n  ]]&gt;&lt;/function&gt;\n  \n\n\t&lt;!--\n\tAdd a tab to the editor.\n\t--&gt;\n\n\t&lt;tab&gt;\n\t\t&lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n\t\t&lt;onlydisplayif&gt;game.gridmap&lt;/onlydisplayif&gt;\n\t\t&lt;caption&gt;Grid Image (optional)&lt;/caption&gt;\n\t\t&lt;title&gt;Select an image to display in the map&lt;/title&gt;\n\t\t&lt;mustnotinherit&gt;editor_object&lt;/mustnotinherit&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;checkbox&lt;/controltype&gt;\n\t\t  &lt;caption&gt;Enter a URL (or file name) instead of loading a local image&lt;/caption&gt;\n\t\t  &lt;attribute&gt;gridimg_custompath&lt;/attribute&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not HasAttribute(this,\"gridimg_custompath\")&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t&lt;caption&gt;Grid Image&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;file&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t\t&lt;source&gt;[EditorImageFormats]&lt;/source&gt;\n\t\t\t&lt;filefiltername&gt;Picture Files&lt;/filefiltername&gt;\n\t\t\t&lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t&lt;preview/&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t\t  &lt;onlydisplayif&gt;not this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t\t  &lt;caption&gt;THIS FILE WILL BE IMPORTED BY QUEST&lt;/caption&gt;\n\t\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;caption&gt;Enter the URL or file name&lt;/caption&gt;\n\t\t  &lt;attribute&gt;grid_image&lt;/attribute&gt;\n\t\t  &lt;controltype&gt;textbox&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t&lt;/control&gt;\n\t\t&lt;control&gt;\n\t\t  &lt;controltype&gt;label&lt;/controltype&gt;\n\t\t  &lt;onlydisplayif&gt;this.gridimg_custompath&lt;/onlydisplayif&gt;\n\t\t  &lt;caption&gt;IF ENTERING A FILE NAME, BE SURE THE FILE IS IN THE GAME'S FOLDER!!!&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t&lt;/tab&gt;\n  &lt;javascript src=\"GridImageLib.js\" /&gt;\n  \n  &lt;/library&gt;\n</code></pre>\n</details>\n<details>\n<summary>+++ Click Here for JS Script +++</summary>\n<pre><code>var questImagePath = \"\";\n\nsetImagePath = function(path) {\n  questImagePath = path;\n};\n\ngetFileUrlJS = function(filename){\n  if(filename.indexOf(\"://\") &gt; 0) {\n\treturn (filename);\n  } else {\n\treturn questImagePath.replace(\"_FILENAME_\", filename);\n  }\n};\nvar imagesToCheck = [];\n\nfunction checkImages(){\n\timagesToCheck.forEach(function(img){\n\t\tisFileGood(img)\n\t});\n};\n\nvar failedImgs = [];\n\nfunction imgFail(imgFailed){\n\tfailedImgs.push(imgFailed.src);\n};\n\n// This function has been updated by KV to clear out image elements that were accumulating while mapping new areas in a restored game.\nfunction isFileGood(url){\n    imgFile = getFileUrlJS(url);\n    $('body').append(\"&lt;img style='display:none' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/&gt;\");\n};\n\ncustomDrawImage = function(url){\n\tvar imgFile = getFileUrlJS(url);\n\tvar failnumber = failedImgs.indexOf(imgFile);\n\tif(failnumber === -1){\n\t\tASLEvent('AslSet', roomImageId.replace(\"-\",\".\").replace(\"grid-image\",\"grid_image\")+\"=\"+imgFile);\n\t\tgridApi.drawCustomLayerImage(roomImageId, imgFile, parseFloat(gridX), parseFloat(gridY), parseInt(roomGridWidth), parseInt(roomGridHeight));\n\t}\n};\n</code></pre>\n</details>\n<p>So what I tried to do was to change the last line of this function in the js script from this:</p>\n<pre><code>function isFileGood(url){\n    imgFile = getFileUrlJS(url);\n    $('body').append(\"&lt;img style='display:none' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/&gt;\");\n};\n</code></pre>\n<p>to this:</p>\n<pre><code>function isFileGood(url){\n    imgFile = getFileUrlJS(url);\n    $('body').append(\"&lt;img style='display:none;object-fit:cover' onload='$(this).remove();' onerror='imgFail(this);$(this).remove();' src='\"+imgFile+\"'/&gt;\");\n};\n</code></pre>\n<p>Specifically, the part I changed was this...</p>\n<pre><code>style='display:none;object-fit:cover'\n</code></pre>\n<p>...which had no effect (image is still squished).  Any ideas on the correct syntax or fix?  Thanks.</p>\n<p>------------------------------------------------- filler for updating my post -------------------------------------------------------</p>\n\n",
      "PostDate": "2018-07-07T07:09:44.6115467Z",
      "LastEditDate": "2018-07-07T07:17:24.6746994Z",
      "link": null
    },
    {
      "PostId": "1837ad93-2fc4-4a16-905c-b54b397bb6f5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The map uses the Canvas image renderer (in PaperScript) to draw the images. This screws up badly if the image doesn't exist or is unavailable.\r\n\r\nSo before doing that, KV's script creates an `<img>` tag which is _never displayed_, and exists only to test whether or not the image URL is valid. So, adding CSS to that tag won't have any effect.\r\n\r\nThe code you need to modify is the following function (which is in Grid.js, but I think it should work if you add it to your custom JS file and then change it).\r\n```\r\ngridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\r\n    var existing = customLayerImages[id];\r\n    var raster = existing ? existing : new Raster(url);\r\n    var resizeRaster = function() {\r\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\r\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\r\n    };\r\n    if (existing) {\r\n        resizeRaster();\r\n    } else {\r\n        raster.onLoad = resizeRaster;\r\n        addPathToCurrentLayerList(raster);\r\n        customLayerImages[id] = raster;\r\n    }\r\n}\r\n```\r\nIn particular, you want to change the line:\r\n```\r\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\r\n```\r\nto\r\n```\r\n        raster.scale(Math.max(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height));\r\n\r\n```\r\n(This will scale the image keeping its aspect ratio constant. I don't know if this will crop the image, or overflow outside it.)\r\n\r\nReally, it would be easier to crop your images to the right aspect ratio first.",
      "EditableFormat": "markdown",
      "HTML": "<p>The map uses the Canvas image renderer (in PaperScript) to draw the images. This screws up badly if the image doesn't exist or is unavailable.</p>\n<p>So before doing that, KV's script creates an <code>&lt;img&gt;</code> tag which is <em>never displayed</em>, and exists only to test whether or not the image URL is valid. So, adding CSS to that tag won't have any effect.</p>\n<p>The code you need to modify is the following function (which is in Grid.js, but I think it should work if you add it to your custom JS file and then change it).</p>\n<pre><code>gridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\n    var existing = customLayerImages[id];\n    var raster = existing ? existing : new Raster(url);\n    var resizeRaster = function() {\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\n    };\n    if (existing) {\n        resizeRaster();\n    } else {\n        raster.onLoad = resizeRaster;\n        addPathToCurrentLayerList(raster);\n        customLayerImages[id] = raster;\n    }\n}\n</code></pre>\n<p>In particular, you want to change the line:</p>\n<pre><code>        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\n</code></pre>\n<p>to</p>\n<pre><code>        raster.scale(Math.max(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height));\n\n</code></pre>\n<p>(This will scale the image keeping its aspect ratio constant. I don't know if this will crop the image, or overflow outside it.)</p>\n<p>Really, it would be easier to crop your images to the right aspect ratio first.</p>\n\n",
      "PostDate": "2018-07-07T08:25:54.1057535Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4caaa394-d9fa-4870-a1c5-aa23929b3ab3",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah.  What mrangel said sounds accurate.\r\n\r\n(He is the person to thank for 99% of GridImageLib.  Basically, the only thing mrangel didn't do was package it all up into a library.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah.  What mrangel said sounds accurate.</p>\n<p>(He is the person to thank for 99% of GridImageLib.  Basically, the only thing mrangel didn't do was package it all up into a library.)</p>\n\n",
      "PostDate": "2018-07-07T19:39:33.0105564Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ce96ee6-30d1-4aed-a4c5-d4b174651108",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel!  I will probably just follow your last suggestion and figure out how to proportionally crop my images in photoshop elements first.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel!  I will probably just follow your last suggestion and figure out how to proportionally crop my images in photoshop elements first.</p>\n\n",
      "PostDate": "2018-07-07T19:45:34.5352096Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
