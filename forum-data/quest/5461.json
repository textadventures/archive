{
  "Topic": {
    "TopicId": "5461",
    "ForumId": "10",
    "Title": "How to Temporarily Disable Player Input Without Letting The Player Know?",
    "LastUpdated": "2015-09-05T13:08:44+01:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "37861",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "The idea is, whilst having a conversation, you can choose a hyperlink(a dialogue choice), which will offend a NPC, and that should be punctuated by 5 seconds of &quot;silence&quot;, so, no reply for 5 seconds. The problem is, that I would like it if the player would be able to choose other dialogue choices without the NPC replying and also no new dialogue choices appearing, before the tension is resolved. \nI know, that I could achieve that with a variable and a lot of if-scripts, but I was wondering if there was a more elegant or efficient or time-consuming way.",
      "EditableFormat": "bbcode",
      "HTML": "The idea is, whilst having a conversation, you can choose a hyperlink(a dialogue choice), which will offend a NPC, and that should be punctuated by 5 seconds of &quot;silence&quot;, so, no reply for 5 seconds. The problem is, that I would like it if the player would be able to choose other dialogue choices without the NPC replying and also no new dialogue choices appearing, before the tension is resolved. <br/>I know, that I could achieve that with a variable and a lot of if-scripts, but I was wondering if there was a more elegant or efficient or time-consuming way.",
      "PostDate": "2015-09-04T20:35:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37867",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "there's always: Timers, and maybe you can use also:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/textfx_typewriter.html\">http://docs.textadventures.co.uk/quest/ ... riter.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/textfx_unscramble.html\">http://docs.textadventures.co.uk/quest/ ... amble.html</a><!-- m -->\n\nalso, you can use Integer Attributes too (you 'decrease~count down or increase~count up' it after each later script, or if able outside of a script block, via internal turns via through using Turnscripts and~or the special 'changed' Script Attribute, but it'll require more scripting~coding design work than using a Timer",
      "EditableFormat": "bbcode",
      "HTML": "there's always: Timers, and maybe you can use also:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/textfx_typewriter.html\">http://docs.textadventures.co.uk/quest/ ... riter.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/corelibrary/textfx_unscramble.html\">http://docs.textadventures.co.uk/quest/ ... amble.html</a><!-- m --><br/><br/>also, you can use Integer Attributes too (you 'decrease~count down or increase~count up' it after each later script, or if able outside of a script block, via internal turns via through using Turnscripts and~or the special 'changed' Script Attribute, but it'll require more scripting~coding design work than using a Timer",
      "PostDate": "2015-09-05T06:54:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37871",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Ok, so I fixed the title because I realised it wasn't at all what I was looking for. \nSo, what I want is this situation:\n-----------------------------------\nNPC: &quot;That was funny, right?&quot;\n\nPC: 1.&quot;Sure.&quot;&lt;--(chosen)\n      2.&quot;Haha.&quot;\n      3.&quot;Where am I?&quot;\n\n(5 second pause)\nNPC:&quot;Then why didn't you laugh?&quot;\n\nPC: 1.&quot;What?&quot;\n      2.&quot;Where am I?&quot;&lt;--(chosen)\n\nNPC: (nothing)\n\nPC:1.&quot;What?&quot;\n---------------------------------------\nSo, when &quot;Sure.&quot; is chosen, you piss the NPC off and there is &quot;tension&quot;. While there is &quot;tension&quot;, I want the player to be able to say anything, it enabled by that point, but I want the NPC to not reply to anything but the things that potentially will resolve the &quot;tension&quot;. So, I know I could make a variable &quot;room.tension&quot; and I could put an if script &quot;if (room.tension=true)&quot; into all the commands, to make this work, but I want the player to have a lot of dialogue choices and that would be a lot of work, so I was just wondering if there is a more simple or elegant way to go about this.\nIs it clear at all?",
      "EditableFormat": "bbcode",
      "HTML": "Ok, so I fixed the title because I realised it wasn't at all what I was looking for. <br/>So, what I want is this situation:<br/>-----------------------------------<br/>NPC: &quot;That was funny, right?&quot;<br/><br/>PC: 1.&quot;Sure.&quot;&lt;--(chosen)<br/>      2.&quot;Haha.&quot;<br/>      3.&quot;Where am I?&quot;<br/><br/>(5 second pause)<br/>NPC:&quot;Then why didn't you laugh?&quot;<br/><br/>PC: 1.&quot;What?&quot;<br/>      2.&quot;Where am I?&quot;&lt;--(chosen)<br/><br/>NPC: (nothing)<br/><br/>PC:1.&quot;What?&quot;<br/>---------------------------------------<br/>So, when &quot;Sure.&quot; is chosen, you piss the NPC off and there is &quot;tension&quot;. While there is &quot;tension&quot;, I want the player to be able to say anything, it enabled by that point, but I want the NPC to not reply to anything but the things that potentially will resolve the &quot;tension&quot;. So, I know I could make a variable &quot;room.tension&quot; and I could put an if script &quot;if (room.tension=true)&quot; into all the commands, to make this work, but I want the player to have a lot of dialogue choices and that would be a lot of work, so I was just wondering if there is a more simple or elegant way to go about this.<br/>Is it clear at all?",
      "PostDate": "2015-09-05T09:38:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37878",
      "UserId": 0,
      "Username": "chellkafka",
      "UserAvatar": null,
      "UserGravatar": "eff29d4fab3b92a9d9ccd647e42bf40f",
      "EditableText": "Alright, so I think I figured out a way how to do it. I bring the player to another room, paste the turn script that shows the dialogue choices into the room without pasting the commands that are addressed by the hyperlinks and then use a getinput-script for the dialogue choices that will bring him back to the other room. It worked so far in playtesting.\nIf anyone finds a flaw in that plan, please, write.",
      "EditableFormat": "bbcode",
      "HTML": "Alright, so I think I figured out a way how to do it. I bring the player to another room, paste the turn script that shows the dialogue choices into the room without pasting the commands that are addressed by the hyperlinks and then use a getinput-script for the dialogue choices that will bring him back to the other room. It worked so far in playtesting.<br/>If anyone finds a flaw in that plan, please, write.",
      "PostDate": "2015-09-05T12:48:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37879",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "So assuming you don't wan't the player to be able to do anything outside your scripted responses (ie: no walking away, looking in their inventory or any number of things the player could freely do if they weren't talking to an npc), then I believe I have a solution for you.\n\nI'm  not sure how your scripting your npc dialogue, but for this case you'll want to use a [url=http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/get_input&#46;html:218a63ef]get input[/url:218a63ef]. Basically it creates a temporary 'result' variable that stores whatever the player enters next, and doesn't consider that text for any other actions. This allows you to make a completely controlled situation where the player cannot enter any commands that you don't specifically allow.\n\nThe second part is using a [url=http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/switch&#46;html:218a63ef]switch[/url:218a63ef] to set up some scripted responses to the players options. You can use a series of if/elses here as well but I prefer switches in this case personally. Now something you will need to account for is that the [b:218a63ef]get input[/b:218a63ef] will only check the first input, so you will need a method of restarting the input section of the script when the player doesn't choose an acceptable option, which will also be used to prevent the player from leaving the conversation during the tension period, only allowing them to attempt different responses until it is resolved.\n\nTo create a loop in the conversation I would recommend creating the looping section as its own function or script separate from the rest of the related script. While it may take a little bit to figure out and get used to, I would say using a script type attribute on the npc would be the best option I know of to keep things organized. Fortunately it's not actually that hard, you will just need to create an appropriately named attribute on the npc, set the type to script, then you can activate it with the [url=http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/do&#46;html:218a63ef]do[/url:218a63ef] script. This will then allow you to restart the code that keeps the conversation going until you want it to end.\n\nSo time for some examples of how this actually looks put together\n[code:218a63ef]\n//whatever happens that starts the npc interraction\n\nmsg (&quot;That was funny, right?&quot;)\nmsg (&quot;&quot;)\n\ndo(NPC, &quot;ConvoLoop&quot;)\n\n/&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;\n//this is what goes in the ConvoLoop attribute of the npc\n\nif (npc&#46;tension = 0) {\nmsg(&quot;{command&#58;1&#58;1&#46;&quot;Sure&#46;&quot; &quot;)}\nmsg(&quot;{command&#58;2&#58;2&#46;&quot;Haha&#46;&quot; &quot;)\nmsg(&quot;{command&#58;3&#58;3&#46;&quot;Where am I?&quot; &quot;)\n\nget input {\n  if (npc&#46;tension &lt; 5){\n  //when tension reaches desired level for npc response, ignore player input and have npc continue the conversation\n    switch(result)\n      case (1) {\n        npc&#46;tension = 1\n        do(NPC, &quot;ConvoLoop&quot;)\n      }\n    \n      case (2) {\n        if (npc&#46;tension = 0)\n          //default response\n        else\n          do(NPC, &quot;ConvoLoop&quot;)\n        }\n      \n      case (3) {\n        do(NPC, &quot;ConvoLoop&quot;\n      }\n  }\n  else\n    //continue conversation from here after npc finally responds\n}\n[/code:218a63ef]\nThis isn't by any means complete,  more of an outline of how I would get the results your looking for, there will likely be quite a bit more too it depending on how you want the conversation to be able to play out, but hopefully this helps some. Important to note that in this script the tension timer never actually increases, that will have to be done separately depending on how you decide to control it.",
      "EditableFormat": "bbcode",
      "HTML": "So assuming you don't wan't the player to be able to do anything outside your scripted responses (ie: no walking away, looking in their inventory or any number of things the player could freely do if they weren't talking to an npc), then I believe I have a solution for you.<br/><br/>I'm  not sure how your scripting your npc dialogue, but for this case you'll want to use a <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/get_input&#46;html\" rel=\"nofollow\">get input</a>. Basically it creates a temporary 'result' variable that stores whatever the player enters next, and doesn't consider that text for any other actions. This allows you to make a completely controlled situation where the player cannot enter any commands that you don't specifically allow.<br/><br/>The second part is using a <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/switch&#46;html\" rel=\"nofollow\">switch</a> to set up some scripted responses to the players options. You can use a series of if/elses here as well but I prefer switches in this case personally. Now something you will need to account for is that the <span style=\"font-weight:bold;\">get input</span> will only check the first input, so you will need a method of restarting the input section of the script when the player doesn't choose an acceptable option, which will also be used to prevent the player from leaving the conversation during the tension period, only allowing them to attempt different responses until it is resolved.<br/><br/>To create a loop in the conversation I would recommend creating the looping section as its own function or script separate from the rest of the related script. While it may take a little bit to figure out and get used to, I would say using a script type attribute on the npc would be the best option I know of to keep things organized. Fortunately it's not actually that hard, you will just need to create an appropriately named attribute on the npc, set the type to script, then you can activate it with the <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/scripts/do&#46;html\" rel=\"nofollow\">do</a> script. This will then allow you to restart the code that keeps the conversation going until you want it to end.<br/><br/>So time for some examples of how this actually looks put together<br/><pre><code><br/>//whatever happens that starts the npc interraction<br/><br/>msg (&quot;That was funny, right?&quot;)<br/>msg (&quot;&quot;)<br/><br/>do(NPC, &quot;ConvoLoop&quot;)<br/><br/>/&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;<br/>//this is what goes in the ConvoLoop attribute of the npc<br/><br/>if (npc&#46;tension = 0) {<br/>msg(&quot;{command&#58;1&#58;1&#46;&quot;Sure&#46;&quot; &quot;)}<br/>msg(&quot;{command&#58;2&#58;2&#46;&quot;Haha&#46;&quot; &quot;)<br/>msg(&quot;{command&#58;3&#58;3&#46;&quot;Where am I?&quot; &quot;)<br/><br/>get input {<br/>  if (npc&#46;tension &lt; 5){<br/>  //when tension reaches desired level for npc response, ignore player input and have npc continue the conversation<br/>    switch(result)<br/>      case (1) {<br/>        npc&#46;tension = 1<br/>        do(NPC, &quot;ConvoLoop&quot;)<br/>      }<br/>    <br/>      case (2) {<br/>        if (npc&#46;tension = 0)<br/>          //default response<br/>        else<br/>          do(NPC, &quot;ConvoLoop&quot;)<br/>        }<br/>      <br/>      case (3) {<br/>        do(NPC, &quot;ConvoLoop&quot;<br/>      }<br/>  }<br/>  else<br/>    //continue conversation from here after npc finally responds<br/>}<br/></code></pre><br/>This isn't by any means complete,  more of an outline of how I would get the results your looking for, there will likely be quite a bit more too it depending on how you want the conversation to be able to play out, but hopefully this helps some. Important to note that in this script the tension timer never actually increases, that will have to be done separately depending on how you decide to control it.",
      "PostDate": "2015-09-05T13:08:44+01:00",
      "LastEditDate": null
    }
  ]
}
