{
  "Topic": {
    "TopicId": "9m2lavmzregstombcuxrba",
    "ForumId": "10",
    "Title": "Fun with Doors",
    "LastUpdated": "2018-02-20T01:26:08.9510591Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4f536787-26f3-480e-82e6-5935dcb16e9b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### Hello!\r\n\r\nI am playing with doors today.\r\n\r\n(Can you say \"doors\"?  Good!  I knew you could!!!)\r\n\r\n\r\n---\r\n### **First, I shall go by the docs.**\r\n\r\nI shall create a game, going by this:\r\nhttp://docs.textadventures.co.uk/quest/setting_up_door.html\r\n\r\n\r\nThe code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Setting Up a Door\">\r\n    <gameid>ca59e082-5ff5-4efe-b0b5-253efd93432b</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <scopebackdrop type=\"script\">\r\n      if (game.pov.parent = kitchen) {\r\n        list add (items, door)\r\n      }\r\n    </scopebackdrop>\r\n    <description><![CDATA[Example game.<br/><br/>Code from:  http://docs.textadventures.co.uk/quest/setting_up_door.html]]></description>\r\n    <author>textadventures</author>\r\n    <subtitle>(Code entered by K.V.)</subtitle>\r\n  </game>\r\n  <object name=\"lounge\">\r\n    <inherit name=\"editor_room\" />\r\n    <description>The lounge is very retro. The door west is {either door.isopen:open|closed}.</description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit name=\"exit to kitchen\" alias=\"west\" to=\"kitchen\">\r\n      <inherit name=\"westdirection\" />\r\n      <locked />\r\n      <lockmessage>The door is closed.</lockmessage>\r\n    </exit>\r\n    <object name=\"door\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"openable\" />\r\n      <scenery />\r\n      <feature_container />\r\n      <openscript type=\"script\">\r\n        exit to kitchen.locked = false\r\n        exit to lounge.locked = false\r\n        this.isopen = true\r\n      </openscript>\r\n      <closescript type=\"script\">\r\n        exit to kitchen.locked = true\r\n        exit to lounge.locked = true\r\n        this.isopen = false\r\n      </closescript>\r\n    </object>\r\n  </object>\r\n  <object name=\"kitchen\">\r\n    <inherit name=\"editor_room\" />\r\n    <description>The kitchen is very small. The door east is {either door.isopen:open|closed}.</description>\r\n    <exit name=\"exit to lounge\" alias=\"east\" to=\"lounge\">\r\n      <inherit name=\"eastdirection\" />\r\n      <locked />\r\n      <lockmessage>The door is closed.</lockmessage>\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n[Setting Up a Door - Play online](http://textadventures.co.uk/games/view/jvxrgy6xeemyememec6-da/setting-up-a-door)\r\n\r\n---\r\n### **That works as intended, but...**\r\n\r\nI prefer the way doors work in the classic games.\r\n\r\nSpecifically, if a door is closed (but not locked), you automatically open it when going through it.\r\n\r\nInform 7 makes it quite easy to handle doors.\r\n\r\n...and, before you say, \"well, go use Inform, then,\" allow me to retort in advance:  I don't want to.  I'd rather use Quest.  Hence this experiment.\r\n\r\nI'm just showing that this is easy to do with other software.  \r\n\r\n...and anything can be done with Quest, you know.  (Ahem.)  I just want Quest to be all that it can be.  (You know. Like the U.S. Army?  (Remember that jingle?))  Anyway...\r\n\r\nHere's an example Inform 7 game's entire code:\r\n\r\n<details>\r\n\r\n```\r\n\"Setting Up a Door\" \r\n\r\nThe Lounge is a room.  \r\n\r\nThe description of lounge is \"The lounge is very retro.[paragraph break]You can go west.\".\r\n\r\nWest from the lounge is a door called an exit1.  \r\n\r\nThe printed name of exit1 is \"door\".   \r\n\r\nUnderstand \"door\" as exit1.\r\n\r\nDescription of exit1 is \"It is [if exit1 is open]open[else]closed[end if].\".\r\n\r\nThe Kitchen is west from exit1.\r\n\r\nDescription of kitchen is \"The kitchen is very small.[paragraph break]You can go east.\".\r\n```\r\n\r\n</details>\r\n\r\n---\r\n#### ***The output:***\r\n\r\n```\r\n\r\nLounge\r\nThe lounge is very retro.\r\n\r\nYou can go west.\r\n\r\nYou can see a door here.\r\n\r\n>w\r\n(first opening the door)\r\n\r\nKitchen\r\nThe kitchen is very small.\r\n\r\nYou can go east.\r\n\r\nYou can see a door here.\r\n\r\n>\r\n```\r\n\r\n---\r\n[Setting Up a Door (gblorb)- Play online](http://textadventures.co.uk/games/view/mvwg89u02umebdduu0cfvq/setting-up-a-door-gblorb)\r\n\r\n\r\n\r\n---\r\n## **Quest Can Do That!**\r\n\r\n### **Setting Up a Door (Version 2)**\r\n\r\nI changed quite a few things in the first example.\r\n\r\nI lost the code with the locked exits, and I added scripts to the exit instead.\r\n\r\nIt's really the same script on both exits:\r\n\r\n```\r\nif (not GetBoolean(door,\"locked\")) {\r\n  if (not door.isopen) {\r\n    door.isopen = true\r\n    msg (\"(You open the door first.)\")\r\n  }\r\n  game.pov.parent = this.to\r\n}\r\nelse {\r\n  msg (\"The door is locked.\")\r\n}\r\n```\r\n\r\n---\r\nThis now behaves just like an INFOCOM game would.\r\n\r\nExample game  code:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Setting Up a Door (Version 2)\">\r\n    <gameid>395830cf-795d-48f1-a85b-01fd3a7540cd</gameid>\r\n    <version>2.3</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <feature_advancedscripts />\r\n    <description><![CDATA[Example game.<br/><br/>Code from:  http://docs.textadventures.co.uk/quest/setting_up_door.html<br/><br/>Modified by K.V.]]></description>\r\n    <author>K.V.</author>\r\n    <subtitle type=\"string\"></subtitle>\r\n    <attr name=\"autodescription_description\" type=\"int\">2</attr>\r\n    <attr name=\"autodescription_youcango\" type=\"int\">4</attr>\r\n    <attr name=\"autodescription_youcansee\" type=\"int\">3</attr>\r\n    <attr name=\"autodescription_youarein_useprefix\" type=\"boolean\">false</attr>\r\n    <autodescription_youcango_newline />\r\n    <scopebackdrop type=\"script\">\r\n      if (game.pov.parent = kitchen) {\r\n        list add (items, door)\r\n      }\r\n    </scopebackdrop>\r\n  </game>\r\n  <object name=\"lounge\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[The lounge is very retro. <br/>]]></description>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Lounge</alias>\r\n    <enter type=\"script\">\r\n      msg (\"You can see a  {object:door}.\")\r\n      door.scenery = false\r\n    </enter>\r\n    <beforeenter type=\"script\">\r\n      door.scenery = true\r\n    </beforeenter>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit name=\"exit to kitchen\" alias=\"west\" to=\"kitchen\">\r\n      <inherit name=\"westdirection\" />\r\n      <message type=\"string\"></message>\r\n      <runscript />\r\n      <script type=\"script\">\r\n        if (not GetBoolean(door,\"locked\")) {\r\n          if (not door.isopen) {\r\n            door.isopen = true\r\n            msg (\"(You open the door first.)\")\r\n          }\r\n          game.pov.parent = this.to\r\n        }\r\n        else {\r\n          msg (\"The door is locked.\")\r\n        }\r\n      </script>\r\n    </exit>\r\n    <object name=\"door\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"openable\" />\r\n      <feature_container />\r\n      <look>It is {either door.isopen:open|closed}.</look>\r\n      <displayverbs type=\"stringlist\">\r\n        <value>Look at</value>\r\n        <value>Open</value>\r\n        <value>Close</value>\r\n      </displayverbs>\r\n      <takemsg>It's fixed in place.</takemsg>\r\n      <attr name=\"enter_verb\" type=\"script\">\r\n        if (not GetBoolean(this,\"locked\")) {\r\n          if (not this.isopen) {\r\n            this.isopen = true\r\n            msg (\"(You open it first.)\")\r\n          }\r\n          if (game.pov.parent = lounge) {\r\n            game.pov.parent = kitchen\r\n          }\r\n          else {\r\n            game.pov.parent = lounge\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It is locked.\")\r\n        }\r\n      </attr>\r\n      <openscript type=\"script\">\r\n        if (not GetBoolean(this,\"locked\")) {\r\n          this.isopen = true\r\n          msg (\"Opened.\")\r\n        }\r\n        else {\r\n          msg (\"It is locked.\")\r\n        }\r\n      </openscript>\r\n      <closescript type=\"script\">\r\n        this.isopen = false\r\n        msg (\"Closed.\")\r\n      </closescript>\r\n    </object>\r\n  </object>\r\n  <object name=\"kitchen\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[The kitchen is very small. <br/>]]></description>\r\n    <usedefaultprefix type=\"boolean\">false</usedefaultprefix>\r\n    <alias>Kitchen</alias>\r\n    <enter type=\"script\">\r\n      msg (\"You can see a  {object:door}.\")\r\n    </enter>\r\n    <exit name=\"exit to lounge\" alias=\"east\" to=\"lounge\">\r\n      <inherit name=\"eastdirection\" />\r\n      <runscript />\r\n      <script type=\"script\">\r\n        if (not GetBoolean(door,\"locked\")) {\r\n          if (not door.isopen) {\r\n            door.isopen = true\r\n            msg (\"(You open the door first.)\")\r\n          }\r\n          game.pov.parent = this.to\r\n        }\r\n        else {\r\n          msg (\"The door is locked.\")\r\n        }\r\n      </script>\r\n    </exit>\r\n  </object>\r\n  <verb name=\"enter_verb\">\r\n    <pattern>enter #object#</pattern>\r\n    <defaultexpression>\"You can't enter \" + object.article + \".\"</defaultexpression>\r\n    <property>enter_verb</property>\r\n  </verb>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\n[Setting Up a Door (Version 2) - Play online](http://textadventures.co.uk/games/view/0igraljsukumyielhf90jq/setting-up-a-door-version-2)\r\n\r\n---\r\n## NEXT TIME ON FUN WITH DOORS:\r\n\r\n#### **Making the door lockable**",
      "EditableFormat": "markdown",
      "HTML": "<h3>Hello!</h3>\n<p>I am playing with doors today.</p>\n<p>(Can you say \"doors\"?  Good!  I knew you could!!!)</p>\n<hr>\n<h3><strong>First, I shall go by the docs.</strong></h3>\n<p>I shall create a game, going by this:<br>\nhttp://docs.textadventures.co.uk/quest/setting_up_door.html</p>\n<p>The code:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Setting Up a Door\"&gt;\n    &lt;gameid&gt;ca59e082-5ff5-4efe-b0b5-253efd93432b&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;scopebackdrop type=\"script\"&gt;\n      if (game.pov.parent = kitchen) {\n        list add (items, door)\n      }\n    &lt;/scopebackdrop&gt;\n    &lt;description&gt;&lt;![CDATA[Example game.&lt;br/&gt;&lt;br/&gt;Code from:  http://docs.textadventures.co.uk/quest/setting_up_door.html]]&gt;&lt;/description&gt;\n    &lt;author&gt;textadventures&lt;/author&gt;\n    &lt;subtitle&gt;(Code entered by K.V.)&lt;/subtitle&gt;\n  &lt;/game&gt;\n  &lt;object name=\"lounge\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;The lounge is very retro. The door west is {either door.isopen:open|closed}.&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit name=\"exit to kitchen\" alias=\"west\" to=\"kitchen\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n      &lt;locked /&gt;\n      &lt;lockmessage&gt;The door is closed.&lt;/lockmessage&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"door\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"openable\" /&gt;\n      &lt;scenery /&gt;\n      &lt;feature_container /&gt;\n      &lt;openscript type=\"script\"&gt;\n        exit to kitchen.locked = false\n        exit to lounge.locked = false\n        this.isopen = true\n      &lt;/openscript&gt;\n      &lt;closescript type=\"script\"&gt;\n        exit to kitchen.locked = true\n        exit to lounge.locked = true\n        this.isopen = false\n      &lt;/closescript&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"kitchen\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;The kitchen is very small. The door east is {either door.isopen:open|closed}.&lt;/description&gt;\n    &lt;exit name=\"exit to lounge\" alias=\"east\" to=\"lounge\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n      &lt;locked /&gt;\n      &lt;lockmessage&gt;The door is closed.&lt;/lockmessage&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p><a href=\"http://textadventures.co.uk/games/view/jvxrgy6xeemyememec6-da/setting-up-a-door\">Setting Up a Door - Play online</a></p>\n<hr>\n<h3><strong>That works as intended, but...</strong></h3>\n<p>I prefer the way doors work in the classic games.</p>\n<p>Specifically, if a door is closed (but not locked), you automatically open it when going through it.</p>\n<p>Inform 7 makes it quite easy to handle doors.</p>\n<p>...and, before you say, \"well, go use Inform, then,\" allow me to retort in advance:  I don't want to.  I'd rather use Quest.  Hence this experiment.</p>\n<p>I'm just showing that this is easy to do with other software.</p>\n<p>...and anything can be done with Quest, you know.  (Ahem.)  I just want Quest to be all that it can be.  (You know. Like the U.S. Army?  (Remember that jingle?))  Anyway...</p>\n<p>Here's an example Inform 7 game's entire code:</p>\n<details>\n<pre><code>\"Setting Up a Door\" \n\nThe Lounge is a room.  \n\nThe description of lounge is \"The lounge is very retro.[paragraph break]You can go west.\".\n\nWest from the lounge is a door called an exit1.  \n\nThe printed name of exit1 is \"door\".   \n\nUnderstand \"door\" as exit1.\n\nDescription of exit1 is \"It is [if exit1 is open]open[else]closed[end if].\".\n\nThe Kitchen is west from exit1.\n\nDescription of kitchen is \"The kitchen is very small.[paragraph break]You can go east.\".\n</code></pre>\n</details>\n<hr>\n<h4><strong><em>The output:</em></strong></h4>\n<pre><code>\nLounge\nThe lounge is very retro.\n\nYou can go west.\n\nYou can see a door here.\n\n&gt;w\n(first opening the door)\n\nKitchen\nThe kitchen is very small.\n\nYou can go east.\n\nYou can see a door here.\n\n&gt;\n</code></pre>\n<hr>\n<p><a href=\"http://textadventures.co.uk/games/view/mvwg89u02umebdduu0cfvq/setting-up-a-door-gblorb\">Setting Up a Door (gblorb)- Play online</a></p>\n<hr>\n<h2><strong>Quest Can Do That!</strong></h2>\n<h3><strong>Setting Up a Door (Version 2)</strong></h3>\n<p>I changed quite a few things in the first example.</p>\n<p>I lost the code with the locked exits, and I added scripts to the exit instead.</p>\n<p>It's really the same script on both exits:</p>\n<pre><code>if (not GetBoolean(door,\"locked\")) {\n  if (not door.isopen) {\n    door.isopen = true\n    msg (\"(You open the door first.)\")\n  }\n  game.pov.parent = this.to\n}\nelse {\n  msg (\"The door is locked.\")\n}\n</code></pre>\n<hr>\n<p>This now behaves just like an INFOCOM game would.</p>\n<p>Example game  code:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Setting Up a Door (Version 2)\"&gt;\n    &lt;gameid&gt;395830cf-795d-48f1-a85b-01fd3a7540cd&lt;/gameid&gt;\n    &lt;version&gt;2.3&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;description&gt;&lt;![CDATA[Example game.&lt;br/&gt;&lt;br/&gt;Code from:  http://docs.textadventures.co.uk/quest/setting_up_door.html&lt;br/&gt;&lt;br/&gt;Modified by K.V.]]&gt;&lt;/description&gt;\n    &lt;author&gt;K.V.&lt;/author&gt;\n    &lt;subtitle type=\"string\"&gt;&lt;/subtitle&gt;\n    &lt;attr name=\"autodescription_description\" type=\"int\"&gt;2&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcango\" type=\"int\"&gt;4&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youcansee\" type=\"int\"&gt;3&lt;/attr&gt;\n    &lt;attr name=\"autodescription_youarein_useprefix\" type=\"boolean\"&gt;false&lt;/attr&gt;\n    &lt;autodescription_youcango_newline /&gt;\n    &lt;scopebackdrop type=\"script\"&gt;\n      if (game.pov.parent = kitchen) {\n        list add (items, door)\n      }\n    &lt;/scopebackdrop&gt;\n  &lt;/game&gt;\n  &lt;object name=\"lounge\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[The lounge is very retro. &lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Lounge&lt;/alias&gt;\n    &lt;enter type=\"script\"&gt;\n      msg (\"You can see a  {object:door}.\")\n      door.scenery = false\n    &lt;/enter&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      door.scenery = true\n    &lt;/beforeenter&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit name=\"exit to kitchen\" alias=\"west\" to=\"kitchen\"&gt;\n      &lt;inherit name=\"westdirection\" /&gt;\n      &lt;message type=\"string\"&gt;&lt;/message&gt;\n      &lt;runscript /&gt;\n      &lt;script type=\"script\"&gt;\n        if (not GetBoolean(door,\"locked\")) {\n          if (not door.isopen) {\n            door.isopen = true\n            msg (\"(You open the door first.)\")\n          }\n          game.pov.parent = this.to\n        }\n        else {\n          msg (\"The door is locked.\")\n        }\n      &lt;/script&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"door\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"openable\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;look&gt;It is {either door.isopen:open|closed}.&lt;/look&gt;\n      &lt;displayverbs type=\"stringlist\"&gt;\n        &lt;value&gt;Look at&lt;/value&gt;\n        &lt;value&gt;Open&lt;/value&gt;\n        &lt;value&gt;Close&lt;/value&gt;\n      &lt;/displayverbs&gt;\n      &lt;takemsg&gt;It's fixed in place.&lt;/takemsg&gt;\n      &lt;attr name=\"enter_verb\" type=\"script\"&gt;\n        if (not GetBoolean(this,\"locked\")) {\n          if (not this.isopen) {\n            this.isopen = true\n            msg (\"(You open it first.)\")\n          }\n          if (game.pov.parent = lounge) {\n            game.pov.parent = kitchen\n          }\n          else {\n            game.pov.parent = lounge\n          }\n        }\n        else {\n          msg (\"It is locked.\")\n        }\n      &lt;/attr&gt;\n      &lt;openscript type=\"script\"&gt;\n        if (not GetBoolean(this,\"locked\")) {\n          this.isopen = true\n          msg (\"Opened.\")\n        }\n        else {\n          msg (\"It is locked.\")\n        }\n      &lt;/openscript&gt;\n      &lt;closescript type=\"script\"&gt;\n        this.isopen = false\n        msg (\"Closed.\")\n      &lt;/closescript&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"kitchen\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[The kitchen is very small. &lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;usedefaultprefix type=\"boolean\"&gt;false&lt;/usedefaultprefix&gt;\n    &lt;alias&gt;Kitchen&lt;/alias&gt;\n    &lt;enter type=\"script\"&gt;\n      msg (\"You can see a  {object:door}.\")\n    &lt;/enter&gt;\n    &lt;exit name=\"exit to lounge\" alias=\"east\" to=\"lounge\"&gt;\n      &lt;inherit name=\"eastdirection\" /&gt;\n      &lt;runscript /&gt;\n      &lt;script type=\"script\"&gt;\n        if (not GetBoolean(door,\"locked\")) {\n          if (not door.isopen) {\n            door.isopen = true\n            msg (\"(You open the door first.)\")\n          }\n          game.pov.parent = this.to\n        }\n        else {\n          msg (\"The door is locked.\")\n        }\n      &lt;/script&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;verb name=\"enter_verb\"&gt;\n    &lt;pattern&gt;enter #object#&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't enter \" + object.article + \".\"&lt;/defaultexpression&gt;\n    &lt;property&gt;enter_verb&lt;/property&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p><a href=\"http://textadventures.co.uk/games/view/0igraljsukumyielhf90jq/setting-up-a-door-version-2\">Setting Up a Door (Version 2) - Play online</a></p>\n<hr>\n<h2>NEXT TIME ON FUN WITH DOORS:</h2>\n<h4><strong>Making the door lockable</strong></h4>\n\n",
      "PostDate": "2018-02-20T01:26:08.9510591Z",
      "LastEditDate": "2018-02-20T15:23:26.0968612Z",
      "link": null
    },
    {
      "PostId": "688c42e0-2aaa-4385-bc7a-81bce26e4810",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could you apply this to every door in the game with a simple start script or would you need to use this for every door you have?  Just curious.",
      "EditableFormat": "markdown",
      "HTML": "<p>Could you apply this to every door in the game with a simple start script or would you need to use this for every door you have?  Just curious.</p>\n\n",
      "PostDate": "2018-02-20T04:45:26.8110706Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d2d9531-4ffa-48fe-9885-889abe5e5d9c",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Quite apart from the fact that KV's code works splendidly, I wonder why you install a door when it opens itself. OK, if the doors are locked, I can understand, there's something else you have to do with it. But doors just to walk through?",
      "EditableFormat": "markdown",
      "HTML": "<p>Quite apart from the fact that KV's code works splendidly, I wonder why you install a door when it opens itself. OK, if the doors are locked, I can understand, there's something else you have to do with it. But doors just to walk through?</p>\n\n",
      "PostDate": "2018-02-20T06:39:06.5042632Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "247ef052-d503-4d49-b318-d9f8f47c5290",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Could you apply this to every door in the game with a simple start script or would you need to use this for every door you have?\r\n\r\nThe door would need to know which room you were in and which exit's script to run.\r\n\r\n>I wonder why you install a door when it opens itself. OK, if the doors are locked, I can understand, there's something else you have to do with it. But doors just to walk through?\r\n\r\nThis is just the base to build upon.  I'll be making the door lockable tomorrow.\r\n\r\n...but this is also just for atmosphere.  \r\n\r\nPlus, if you mention a door in a game, I believe there should be a functional door to interact with, and that everything concerning said door should make sense.\r\n\r\n Those who grew up playing the same text adventures as yours truly are accustomed to the pointless doors, too.  Anything else seems... different.\r\n\r\nAlso (as a silly example), there may be a scenario where you need to close the door to keep out an animal (or the weather).  This way, you could still just exit the room without the hassle of having to open the door.  But, if you didn't close it on the way out, the animal (or the weather) would creep into the room and wreak havoc.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Could you apply this to every door in the game with a simple start script or would you need to use this for every door you have?</p>\n</blockquote>\n<p>The door would need to know which room you were in and which exit's script to run.</p>\n<blockquote>\n<p>I wonder why you install a door when it opens itself. OK, if the doors are locked, I can understand, there's something else you have to do with it. But doors just to walk through?</p>\n</blockquote>\n<p>This is just the base to build upon.  I'll be making the door lockable tomorrow.</p>\n<p>...but this is also just for atmosphere.</p>\n<p>Plus, if you mention a door in a game, I believe there should be a functional door to interact with, and that everything concerning said door should make sense.</p>\n<p>Those who grew up playing the same text adventures as yours truly are accustomed to the pointless doors, too.  Anything else seems... different.</p>\n<p>Also (as a silly example), there may be a scenario where you need to close the door to keep out an animal (or the weather).  This way, you could still just exit the room without the hassle of having to open the door.  But, if you didn't close it on the way out, the animal (or the weather) would creep into the room and wreak havoc.</p>\n\n",
      "PostDate": "2018-02-20T07:15:59.689047Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d9771fbc-e31c-4b97-a0cb-c0d0f8f34dea",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could you somehow put a global code in and refer to any object with the alias “door” and if “visible” that handles that?  I guess that would screw stuff up if there are two doors in the same room, huh?  Just thinking out loud.  Perhaps I shouldn’t?  Lol",
      "EditableFormat": "markdown",
      "HTML": "<p>Could you somehow put a global code in and refer to any object with the alias “door” and if “visible” that handles that?  I guess that would screw stuff up if there are two doors in the same room, huh?  Just thinking out loud.  Perhaps I shouldn’t?  Lol</p>\n\n",
      "PostDate": "2018-02-20T11:18:29.2227131Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6fe9ba5d-266b-40fc-be9a-5847a0fb629a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd assume that each door would have attributes referring to the other side of the door, and to the exit.\r\n```\r\ndoor.changedisopen => {\r\n  this.otherside.isopen = this.isopen\r\n  if (this.isopen) {\r\n    // may as well change the \r\n    this.exit.script = null\r\n  }\r\n  else {\r\n    this.exit.script = this.exit.openandgo\r\n  }\r\n}\r\ndoor.changedlocked => {\r\n  this.otherside.locked = this.locked\r\n  this.exit.locked = this.locked\r\n}\r\nexit_with_door.openandgo => {\r\n  if (not GetBoolean(this.door, \"isopen\")) {\r\n    TryOpenClose (true, this.door)\r\n  }\r\n  if (GetBoolean(this.door, \"isopen\")) {\r\n    game.pov.parent = this.to\r\n  }\r\n}\r\n```\r\n(also, one that I've already used versions of)\r\n```\r\ndoor.changedparent => {\r\n  this.exit.parent = this.parent\r\n  this.otherside.to = this.parent\r\n}\r\ndoor.changedto => {\r\n  this.exit.to = this.to\r\n  this.otherside.parent = this.to\r\n}\r\n```\r\n(just in case a wizard decides to start moving exits around; having the doors and exits move as a unit is going to save a lot of errors)\r\n\r\nThough… I'm not sure why there's a separate door object. Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs, but I can't remember what circumstances that applies in.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd assume that each door would have attributes referring to the other side of the door, and to the exit.</p>\n<pre><code>door.changedisopen =&gt; {\n  this.otherside.isopen = this.isopen\n  if (this.isopen) {\n    // may as well change the \n    this.exit.script = null\n  }\n  else {\n    this.exit.script = this.exit.openandgo\n  }\n}\ndoor.changedlocked =&gt; {\n  this.otherside.locked = this.locked\n  this.exit.locked = this.locked\n}\nexit_with_door.openandgo =&gt; {\n  if (not GetBoolean(this.door, \"isopen\")) {\n    TryOpenClose (true, this.door)\n  }\n  if (GetBoolean(this.door, \"isopen\")) {\n    game.pov.parent = this.to\n  }\n}\n</code></pre>\n<p>(also, one that I've already used versions of)</p>\n<pre><code>door.changedparent =&gt; {\n  this.exit.parent = this.parent\n  this.otherside.to = this.parent\n}\ndoor.changedto =&gt; {\n  this.exit.to = this.to\n  this.otherside.parent = this.to\n}\n</code></pre>\n<p>(just in case a wizard decides to start moving exits around; having the doors and exits move as a unit is going to save a lot of errors)</p>\n<p>Though… I'm not sure why there's a separate door object. Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs, but I can't remember what circumstances that applies in.</p>\n\n",
      "PostDate": "2018-02-20T12:07:48.8599565Z",
      "LastEditDate": "2018-02-20T12:19:34.4920879Z",
      "link": null
    },
    {
      "PostId": "4b87da30-2f56-486f-83ad-1ed1fc02ce3b",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Though… I'm not sure why there's a separate door object. Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs, but I can't remember what circumstances that applies in.\r\n\r\nThat would be nice! ",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Though… I'm not sure why there's a separate door object. Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs, but I can't remember what circumstances that applies in.</p>\n</blockquote>\n<p>That would be nice!</p>\n\n",
      "PostDate": "2018-02-20T13:28:52.9106343Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4f476ba1-8442-4ddf-9aa7-e1aa387c004d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Could you somehow put a global code in and refer to any object with the alias “door” and if “visible” that handles that? I guess that would screw stuff up if there are two doors in the same room, huh?\r\n\r\nI'm working on a library right now.\r\n\r\nIn order to keep from messing things up, the game creator will have a 'Door Settings' tab with a few options to set up.\r\n\r\n---\r\n\r\n\r\n>I'd assume that each door would have attributes referring to the other side of the door, and to the exit.\r\n\r\nI've done that in other games, but I'm just using a single door and adding it to the ```scopebackdrop``` in this example.  It is scripted to know the two exits it could be representing, though.\r\n\r\nI've also had one door that moved with to the adjacent room before.  That worked just as well as two doors with change scripts on the necessary attributes.\r\n\r\nI prefer the \"two doors that appear to be one door\" method. My plan was to kick these examples off with basic scripts, then make things more complicated as we go along.\r\n\r\n---\r\n>Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs\r\n\r\nThis would be super-sweet!  (At least I think it would.  We wouldn't be able to just click on a link to go, though.  Unless we made one directional exit and one 'door' exit with a menu when clicking the link.  ...which would be as much work as creating an exit and a door...  Hrmm...)\r\n\r\nI tried adding a look script to an exit, but it says I can't see that.\r\n\r\nEven when you make an exit \"look only\", you still can't examine it.  That just allows you to enter your own string to print when the player enters LOOK #direction#.  If you don't set up look only exits for each direction, it will just say \"You look \"+direction+\".\"\r\n\r\nI did NOT try adding a display verb though...\r\n\r\nI shall look into that.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Could you somehow put a global code in and refer to any object with the alias “door” and if “visible” that handles that? I guess that would screw stuff up if there are two doors in the same room, huh?</p>\n</blockquote>\n<p>I'm working on a library right now.</p>\n<p>In order to keep from messing things up, the game creator will have a 'Door Settings' tab with a few options to set up.</p>\n<hr>\n<blockquote>\n<p>I'd assume that each door would have attributes referring to the other side of the door, and to the exit.</p>\n</blockquote>\n<p>I've done that in other games, but I'm just using a single door and adding it to the <code>scopebackdrop</code> in this example.  It is scripted to know the two exits it could be representing, though.</p>\n<p>I've also had one door that moved with to the adjacent room before.  That worked just as well as two doors with change scripts on the necessary attributes.</p>\n<p>I prefer the \"two doors that appear to be one door\" method. My plan was to kick these examples off with basic scripts, then make things more complicated as we go along.</p>\n<hr>\n<blockquote>\n<p>Can't the door and the exit be the same object? I half remember seeing code that causes an exit to be treated like a 'real' object if it has displayverbs</p>\n</blockquote>\n<p>This would be super-sweet!  (At least I think it would.  We wouldn't be able to just click on a link to go, though.  Unless we made one directional exit and one 'door' exit with a menu when clicking the link.  ...which would be as much work as creating an exit and a door...  Hrmm...)</p>\n<p>I tried adding a look script to an exit, but it says I can't see that.</p>\n<p>Even when you make an exit \"look only\", you still can't examine it.  That just allows you to enter your own string to print when the player enters LOOK #direction#.  If you don't set up look only exits for each direction, it will just say \"You look \"+direction+\".\"</p>\n<p>I did NOT try adding a display verb though...</p>\n<p>I shall look into that.</p>\n\n",
      "PostDate": "2018-02-20T17:09:08.9005627Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "21666fde-c26d-41d2-a0d1-1e2c4286bc98",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Now I think about it, that's probably a neat way to avoid having excessive numbers of door objects around. You could have a couple of door objects that are placed in scope, or are moved to wherever the player is by the `enterroom` script. Maybe have the script clone the door as many times as is necessary for the exits in the room.\r\n\r\nI'm imagining a 'door' tab on the exit, with a checkbox \"is a door\", and a space for an adjective or alias (default is the exit's alias). So your enterroom and/or scope script could create a couple of door clones and alias them \"east door\", \"wooden west door\", \"metal west door\". The open/locked status of the doors would be tied to that of the exit, so unlocking the door unlocks the exit too.",
      "EditableFormat": "markdown",
      "HTML": "<p>Now I think about it, that's probably a neat way to avoid having excessive numbers of door objects around. You could have a couple of door objects that are placed in scope, or are moved to wherever the player is by the <code>enterroom</code> script. Maybe have the script clone the door as many times as is necessary for the exits in the room.</p>\n<p>I'm imagining a 'door' tab on the exit, with a checkbox \"is a door\", and a space for an adjective or alias (default is the exit's alias). So your enterroom and/or scope script could create a couple of door clones and alias them \"east door\", \"wooden west door\", \"metal west door\". The open/locked status of the doors would be tied to that of the exit, so unlocking the door unlocks the exit too.</p>\n\n",
      "PostDate": "2018-02-20T19:21:53.9791383Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7bd33b89-5d1d-4945-87a2-d3a52f8461a7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've got a library created.  I only need to polish up the scripts concerning doors that can be unlocked from one side but not from the other.\r\n\r\nGotta run to town real quick now, but I'll be posting a link soon.\r\n\r\n---\r\nI might also go with what mrangel just suggested, making it so it keeps track of which key works which door, depending on the game.pov.parent.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've got a library created.  I only need to polish up the scripts concerning doors that can be unlocked from one side but not from the other.</p>\n<p>Gotta run to town real quick now, but I'll be posting a link soon.</p>\n<hr>\n<p>I might also go with what mrangel just suggested, making it so it keeps track of which key works which door, depending on the game.pov.parent.</p>\n\n",
      "PostDate": "2018-02-20T20:08:30.3275823Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f6b0f5cf-42fc-4919-9017-f9263c52d62b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "going off of 'mrangel' post:\r\n\r\nI too feel that the best design would be to have a single door object (as more doors are just redundant objects) (and this applies to all types of objects too, not just doors, lol), which handles all it uses/applications within the game, similar to my thread asking for any help/advice/feedback/code/design for a 'menu system', I've just created (I'm currently and still working on character creation, and most of that gets solved with creating/completing a menu system, so I made a thread hoping to get whatever help/advice/ideas/feedback/coding/designs/etc I can from others, as I try to get some satisfactory design for a menu system on my own in the meantime, lol).",
      "EditableFormat": "markdown",
      "HTML": "<p>going off of 'mrangel' post:</p>\n<p>I too feel that the best design would be to have a single door object (as more doors are just redundant objects) (and this applies to all types of objects too, not just doors, lol), which handles all it uses/applications within the game, similar to my thread asking for any help/advice/feedback/code/design for a 'menu system', I've just created (I'm currently and still working on character creation, and most of that gets solved with creating/completing a menu system, so I made a thread hoping to get whatever help/advice/ideas/feedback/coding/designs/etc I can from others, as I try to get some satisfactory design for a menu system on my own in the meantime, lol).</p>\n\n",
      "PostDate": "2018-02-20T21:02:26.248565Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "54d6f0dd-e149-474c-adc5-d51bc1b37ace",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here's a link to [the post concerning the library](http://textadventures.co.uk/forum/samples/topic/zhv4fj1xvks2s5poao3c2a/doorlib#ec9281a5-c607-4600-8b49-eb3f7a6adcda).\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Here's a link to <a href=\"http://textadventures.co.uk/forum/samples/topic/zhv4fj1xvks2s5poao3c2a/doorlib#ec9281a5-c607-4600-8b49-eb3f7a6adcda\">the post concerning the library</a>.</p>\n\n",
      "PostDate": "2018-02-20T22:38:05.1269204Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "93fcc2ef-a3f2-464c-a40f-6bcd5a41725d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think my method, having given it a bit more thought, would be to have the library create door objects as they're needed. That way, any custom behaviour (like doors that are only locked in one direction) can be represented by attributes/scripts attached to the exits themselves; and checked/called by the scripts on the door objects. From the point of view of someone using the library, it acts as if the library adds features to the exit; and the door objects are entirely transparent.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think my method, having given it a bit more thought, would be to have the library create door objects as they're needed. That way, any custom behaviour (like doors that are only locked in one direction) can be represented by attributes/scripts attached to the exits themselves; and checked/called by the scripts on the door objects. From the point of view of someone using the library, it acts as if the library adds features to the exit; and the door objects are entirely transparent.</p>\n\n",
      "PostDate": "2018-02-21T00:16:34.184357Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1bd5e6ce-7d69-42c7-acc6-98f090f0b219",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's exactly what my library does.\r\n\r\n(If we separately decided that would be the best method in the end, it can't be wrong!  (Can it?))\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/36456557-1b04eb2a-166b-11e8-951f-9429f15e73ce.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/36456580-2b438032-166b-11e8-8173-84b42f4486bc.png)\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/zhv4fj1xvks2s5poao3c2a/doorlib#ec9281a5-c607-4600-8b49-eb3f7a6adcda\r\n\r\nhttps://gist.github.com/KVonGit/fff1a46e758d5b3859075256a5253ec2\r\n\r\n\r\n---\r\nPS\r\n\r\nI just fixed the typo in the note under \"Locking\".\r\n\r\nIf anyone sees  any other errors (or notices something I've left out), please let me know.",
      "EditableFormat": "markdown",
      "HTML": "<p>That's exactly what my library does.</p>\n<p>(If we separately decided that would be the best method in the end, it can't be wrong!  (Can it?))</p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/36456557-1b04eb2a-166b-11e8-951f-9429f15e73ce.png\" alt=\"image\"></p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/36456580-2b438032-166b-11e8-8173-84b42f4486bc.png\" alt=\"image\"></p>\n<p>http://textadventures.co.uk/forum/samples/topic/zhv4fj1xvks2s5poao3c2a/doorlib#ec9281a5-c607-4600-8b49-eb3f7a6adcda</p>\n<p>https://gist.github.com/KVonGit/fff1a46e758d5b3859075256a5253ec2</p>\n<hr>\n<p>PS</p>\n<p>I just fixed the typo in the note under \"Locking\".</p>\n<p>If anyone sees  any other errors (or notices something I've left out), please let me know.</p>\n\n",
      "PostDate": "2018-02-21T00:24:41.8571789Z",
      "LastEditDate": "2018-02-21T00:27:37.490899Z",
      "link": null
    },
    {
      "PostId": "26e1b43b-2567-49f1-a3f8-366114ac46b0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"this will overwrite any existing exit script\" :p\r\n\r\nI always try to avoid those cases. How about…\r\n\r\nBefore you set `exit.script => {` etc, have `exit.script_after_door_open = exit.script`. And then in the exit script, replace `game.pov.parent = this.to` with:\r\n```\r\n  if (HasScript(this, \"script_after_door_open\")) {\r\n    do(this, \"script_after_door_open\")\r\n  }\r\n  else {\r\n    game.pov.parent = this.to\r\n  }\r\n```\r\n\r\nThat way, any existing exit scripts still get run.",
      "EditableFormat": "markdown",
      "HTML": "<p>\"this will overwrite any existing exit script\" :p</p>\n<p>I always try to avoid those cases. How about…</p>\n<p>Before you set <code>exit.script =&gt; {</code> etc, have <code>exit.script_after_door_open = exit.script</code>. And then in the exit script, replace <code>game.pov.parent = this.to</code> with:</p>\n<pre><code>  if (HasScript(this, \"script_after_door_open\")) {\n    do(this, \"script_after_door_open\")\n  }\n  else {\n    game.pov.parent = this.to\n  }\n</code></pre>\n<p>That way, any existing exit scripts still get run.</p>\n\n",
      "PostDate": "2018-02-21T00:39:44.8450213Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e2fb677a-ff25-4b35-b2bf-82d74a116476",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hot damn!  That's a good idea!\r\n\r\n (Pardon my French.)\r\n\r\nI thought about something along those lines for a second, but decided any existing exit scripts may coincide with the replacement.\r\n\r\nI can't think of any possible paradoxes now, though...\r\n\r\n---\r\nEDIT\r\n\r\nWhat if there was an exit script set up that moved the player before (or after) the door's exit script moved the player?\r\n\r\nI think it might be safer to add the message:\r\n\r\n\"If you wish to do fancy things in your exit script, create your own door object and set up the exit's script manually.\"\r\n\r\n---\r\n\r\nANOTHER EDIT:\r\n\r\nOr I could put all of that on a type, and have the exit inherit the type when selecting 'Has a door' from a drop-down menu.\r\n\r\nThen, they could go into the attributes and change those attributes once the exit has inherited them.  \r\n\r\nNah...\r\n\r\nI think putting a note that you need to set up a door object and code the exit script yourself if you want things to behave differently is the best option.\r\n\r\nI'm setting up all sorts of things that work together to make these doors and exits work together without offering an easy way to add some unknown script into the mix.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hot damn!  That's a good idea!</p>\n<p>(Pardon my French.)</p>\n<p>I thought about something along those lines for a second, but decided any existing exit scripts may coincide with the replacement.</p>\n<p>I can't think of any possible paradoxes now, though...</p>\n<hr>\n<p>EDIT</p>\n<p>What if there was an exit script set up that moved the player before (or after) the door's exit script moved the player?</p>\n<p>I think it might be safer to add the message:</p>\n<p>\"If you wish to do fancy things in your exit script, create your own door object and set up the exit's script manually.\"</p>\n<hr>\n<p>ANOTHER EDIT:</p>\n<p>Or I could put all of that on a type, and have the exit inherit the type when selecting 'Has a door' from a drop-down menu.</p>\n<p>Then, they could go into the attributes and change those attributes once the exit has inherited them.</p>\n<p>Nah...</p>\n<p>I think putting a note that you need to set up a door object and code the exit script yourself if you want things to behave differently is the best option.</p>\n<p>I'm setting up all sorts of things that work together to make these doors and exits work together without offering an easy way to add some unknown script into the mix.</p>\n\n",
      "PostDate": "2018-02-21T01:26:56.8814234Z",
      "LastEditDate": "2018-02-21T01:37:21.103775Z",
      "link": null
    },
    {
      "PostId": "413e26d6-db2c-4e1e-b299-b7a0b31d59b2",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the same is done with 'templates' in Pixie's libraries and chase's 'wearables' (equipment) library (pixie used some of this for his equipment library):\r\n\r\npseudocode (I've not studied template usage/coding yet):\r\n\r\nif has template, do template message/whatever\r\nelse, do normal/custom message/whatever\r\n\r\nand also with some of quest's built-in stuff using (pseudocode):\r\n\r\nif script, run script\r\nelse, do normal message/response:  msg/look/etc-verbs-commands (string)",
      "EditableFormat": "markdown",
      "HTML": "<p>the same is done with 'templates' in Pixie's libraries and chase's 'wearables' (equipment) library (pixie used some of this for his equipment library):</p>\n<p>pseudocode (I've not studied template usage/coding yet):</p>\n<p>if has template, do template message/whatever<br>\nelse, do normal/custom message/whatever</p>\n<p>and also with some of quest's built-in stuff using (pseudocode):</p>\n<p>if script, run script<br>\nelse, do normal message/response:  msg/look/etc-verbs-commands (string)</p>\n\n",
      "PostDate": "2018-02-21T01:37:45.3120613Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b43a300e-3501-4e9c-824f-62d5537de396",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the current exit script when you have an 'opening door' message:\r\n\r\n\r\n(EDITED)\r\n```\r\n  if (GetBoolean (exit,\"hasdoormsg\")){\r\n\texit.runscript = true\r\n\texit.doormsg = \"(You open the door first.)\"\r\n\tif (HasString(exit,\"customdoormsg\")){\r\n\t  if (not exit.customdoormsg = \"\") {\r\n\t\texit.doormsg = exit.customdoormsg\r\n\t  }\r\n\t}\r\n\texit.script => {\r\n\t  if (not GetBoolean(this.door,\"locked\")) {\r\n\t\tif (not this.door.isopen) {\r\n\t\t  this.door.isopen = true\r\n\t\t   msg (this.doormsg)\r\n\t\t   if (HasAttribute(this.door,\"otherside\")){\r\n\t\t\t if(GetBoolean(this.door.otherside,\"locked\")){\r\n\t\t\t   msg(\"The door closes behind you.\")\r\n\t\t\t   this.door.isopen = false\r\n\t\t\t }\r\n\t\t   }\r\n\t\t}\r\n\t\tgame.pov.parent = this.to\r\n\t  }\r\n\t  else {\r\n\t\tmsg (\"The door is locked.\")\r\n\t  }\r\n\t}\r\n  }\r\n\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the current exit script when you have an 'opening door' message:</p>\n<p>(EDITED)</p>\n<pre><code>  if (GetBoolean (exit,\"hasdoormsg\")){\n\texit.runscript = true\n\texit.doormsg = \"(You open the door first.)\"\n\tif (HasString(exit,\"customdoormsg\")){\n\t  if (not exit.customdoormsg = \"\") {\n\t\texit.doormsg = exit.customdoormsg\n\t  }\n\t}\n\texit.script =&gt; {\n\t  if (not GetBoolean(this.door,\"locked\")) {\n\t\tif (not this.door.isopen) {\n\t\t  this.door.isopen = true\n\t\t   msg (this.doormsg)\n\t\t   if (HasAttribute(this.door,\"otherside\")){\n\t\t\t if(GetBoolean(this.door.otherside,\"locked\")){\n\t\t\t   msg(\"The door closes behind you.\")\n\t\t\t   this.door.isopen = false\n\t\t\t }\n\t\t   }\n\t\t}\n\t\tgame.pov.parent = this.to\n\t  }\n\t  else {\n\t\tmsg (\"The door is locked.\")\n\t  }\n\t}\n  }\n\n</code></pre>\n\n",
      "PostDate": "2018-02-21T01:52:56.691268Z",
      "LastEditDate": "2018-02-21T02:00:25.8552543Z",
      "link": null
    },
    {
      "PostId": "bbdea821-402d-4dea-b98e-3f402b413048",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> What if there was an exit script set up that moved the player before (or after) the door's exit script moved the player?\r\n\r\nThe door's exit script is the one that is called first. The exit's original exit script is called after the door has been opened (if it isn't locked). If there is an original exit script, then it is responsible for moving the player.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>What if there was an exit script set up that moved the player before (or after) the door's exit script moved the player?</p>\n</blockquote>\n<p>The door's exit script is the one that is called first. The exit's original exit script is called after the door has been opened (if it isn't locked). If there is an original exit script, then it is responsible for moving the player.</p>\n\n",
      "PostDate": "2018-02-21T02:32:38.3178124Z",
      "LastEditDate": "2018-02-21T02:33:00.0978772Z",
      "link": null
    },
    {
      "PostId": "cfeb7c59-7abc-43f2-abef-31b7f3173a4a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh!!!\r\n\r\nSorry.  You explained it perfectly the first time, with attached code.  I was just reading too quickly, and that isn't actually reading, is it?\r\n\r\nSo, like this?\r\n\r\n\r\n**EDITED**\r\n```\r\nif (HasScript(exit,\"script\")) {\r\n  exit.script_bak = exit.script\r\n}\r\nexit.script => {\r\n  if (not GetBoolean(this.door,\"locked\")) {\r\n    if (not this.door.isopen) {\r\n      this.door.isopen = true\r\n      msg (this.doormsg)\r\n      if (HasAttribute(this.door,\"otherside\")) {\r\n        if (GetBoolean(this.door.otherside,\"locked\")) {\r\n          msg (\"The door closes behind you.\")\r\n          this.door.isopen = false\r\n        }\r\n      }\r\n    }\r\n    if (HasAttribute(this,\"script_bak\")) {\r\n      do (this, \"script_bak\")\r\n    }\r\n    else {\r\n      game.pov.parent = this.to\r\n    }\r\n  }\r\n  else {\r\n    msg (\"The door is locked.\")\r\n  }\r\n}\r\n```\r\n\r\n\r\n---\r\nWouldn't the creator still need to add the door message script to the exit's script if altering it during play?  (If so, I could change my note in the editor to convey that message.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh!!!</p>\n<p>Sorry.  You explained it perfectly the first time, with attached code.  I was just reading too quickly, and that isn't actually reading, is it?</p>\n<p>So, like this?</p>\n<p><strong>EDITED</strong></p>\n<pre><code>if (HasScript(exit,\"script\")) {\n  exit.script_bak = exit.script\n}\nexit.script =&gt; {\n  if (not GetBoolean(this.door,\"locked\")) {\n    if (not this.door.isopen) {\n      this.door.isopen = true\n      msg (this.doormsg)\n      if (HasAttribute(this.door,\"otherside\")) {\n        if (GetBoolean(this.door.otherside,\"locked\")) {\n          msg (\"The door closes behind you.\")\n          this.door.isopen = false\n        }\n      }\n    }\n    if (HasAttribute(this,\"script_bak\")) {\n      do (this, \"script_bak\")\n    }\n    else {\n      game.pov.parent = this.to\n    }\n  }\n  else {\n    msg (\"The door is locked.\")\n  }\n}\n</code></pre>\n<hr>\n<p>Wouldn't the creator still need to add the door message script to the exit's script if altering it during play?  (If so, I could change my note in the editor to convey that message.)</p>\n\n",
      "PostDate": "2018-02-21T03:00:09.3930357Z",
      "LastEditDate": "2018-02-21T04:07:51.5909303Z",
      "link": null
    },
    {
      "PostId": "b440ebfb-198d-4584-b4e2-5d7d15cba7ed",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah; there should be a note that if you need to modify the exit's script during play, you need to modify script_bak instead. But the majority of cases, at least, it works transparently.\r\n\r\n... now my brain's coming up with something quite silly:\r\n```\r\nexit.exit_with_door => {\r\n  [...] the exit script\r\n}\r\nexit.changedscript => {\r\n  if (not this.script = this.exit_with_door) {\r\n    if (HasScript(this, \"script\")) {\r\n      this.script_bak = this.script\r\n    }\r\n    else {\r\n      this.script_bak = null\r\n    }\r\n    this.script = this.exit_with_door\r\n  }\r\n}\r\ndo (exit, \"changedscript\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah; there should be a note that if you need to modify the exit's script during play, you need to modify script_bak instead. But the majority of cases, at least, it works transparently.</p>\n<p>... now my brain's coming up with something quite silly:</p>\n<pre><code>exit.exit_with_door =&gt; {\n  [...] the exit script\n}\nexit.changedscript =&gt; {\n  if (not this.script = this.exit_with_door) {\n    if (HasScript(this, \"script\")) {\n      this.script_bak = this.script\n    }\n    else {\n      this.script_bak = null\n    }\n    this.script = this.exit_with_door\n  }\n}\ndo (exit, \"changedscript\")\n</code></pre>\n\n",
      "PostDate": "2018-02-21T08:28:13.1549445Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f8eab0a-8344-4b50-8617-abc040922106",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That is a good idea!\r\n\r\n```\r\n// Script in progress\r\n// This is where the script begins to deal with the exit script\r\n//<!--\r\n// 1. Back up any existing script first (this runs at startup, so any exit script set up during editing will still run)\r\n//-->\r\nif (HasAttribute(exit,\"script\")){\r\n  exit.script_bak = exit.script\r\n}\r\n//<!--\r\n// 2. Set up the required exit script as 'exit_with_door' so it can be accessed if the script is changed during play\r\n//-->\r\nexit.exit_with_door => {\r\n  if (GetBoolean(this.door,\"locked\")) {\r\n    msg (\"The door is locked.\")\r\n  }\r\n  else {\r\n    if (not this.door.isopen) {\r\n      this.door.isopen = true\r\n      msg (this.doormsg)\r\n      if (HasAttribute(this.door,\"otherside\")) {\r\n        if (GetBoolean(this.door.otherside,\"locked\")) {\r\n          msg (\"The door closes behind you.\")\r\n          this.door.isopen = false\r\n        }\r\n      }\r\n    }\r\n    // If the user created an exit script, run it instead of just moving the player.\r\n    if (HasAttribute(this,\"script_bak\")) {\r\n      do (this, \"script_bak\")\r\n    }\r\n    else {\r\n      game.pov.parent = this.to\r\n    }\r\n  }\r\n}\r\n//<!--\r\n// 3. Set the 'exit_with_door' script up as the actual exit script\r\n//-->\r\nexit.script = exit.exit_with_door\r\n//<!--\r\n// 4. Safety control: if the player changes the exit script during play, this will restore the exit_with_door script, and run the new script after dealing with doors.\r\n// NOTE: The original script_bak will be lost, but this would happen if this was just a normal script that was changed during play.\r\n//-->\r\nexit.changedscript => {\r\n  if (not this.script = this.exit_with_door) {\r\n    if (HasScript(this, \"script\")) {\r\n      this.script_bak = this.script\r\n    }\r\n    else {\r\n      this.script_bak = null\r\n    }\r\n    this.script = this.exit_with_door\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>That is a good idea!</p>\n<pre><code>// Script in progress\n// This is where the script begins to deal with the exit script\n//&lt;!--\n// 1. Back up any existing script first (this runs at startup, so any exit script set up during editing will still run)\n//--&gt;\nif (HasAttribute(exit,\"script\")){\n  exit.script_bak = exit.script\n}\n//&lt;!--\n// 2. Set up the required exit script as 'exit_with_door' so it can be accessed if the script is changed during play\n//--&gt;\nexit.exit_with_door =&gt; {\n  if (GetBoolean(this.door,\"locked\")) {\n    msg (\"The door is locked.\")\n  }\n  else {\n    if (not this.door.isopen) {\n      this.door.isopen = true\n      msg (this.doormsg)\n      if (HasAttribute(this.door,\"otherside\")) {\n        if (GetBoolean(this.door.otherside,\"locked\")) {\n          msg (\"The door closes behind you.\")\n          this.door.isopen = false\n        }\n      }\n    }\n    // If the user created an exit script, run it instead of just moving the player.\n    if (HasAttribute(this,\"script_bak\")) {\n      do (this, \"script_bak\")\n    }\n    else {\n      game.pov.parent = this.to\n    }\n  }\n}\n//&lt;!--\n// 3. Set the 'exit_with_door' script up as the actual exit script\n//--&gt;\nexit.script = exit.exit_with_door\n//&lt;!--\n// 4. Safety control: if the player changes the exit script during play, this will restore the exit_with_door script, and run the new script after dealing with doors.\n// NOTE: The original script_bak will be lost, but this would happen if this was just a normal script that was changed during play.\n//--&gt;\nexit.changedscript =&gt; {\n  if (not this.script = this.exit_with_door) {\n    if (HasScript(this, \"script\")) {\n      this.script_bak = this.script\n    }\n    else {\n      this.script_bak = null\n    }\n    this.script = this.exit_with_door\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2018-02-21T15:07:19.351001Z",
      "LastEditDate": "2018-02-21T15:08:59.8909964Z",
      "link": null
    },
    {
      "PostId": "b7b9bce2-5e47-40ee-8feb-a9c790e3909a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is just to keep from running into an error if the ```script``` attribute is changed to something other than a script; correct?\r\n\r\n```\r\nif (HasScript(this, \"script\")) {\r\n      this.script_bak = this.script\r\n    }\r\n    else {\r\n      // This is not a script!  DELETE IT!!!\r\n      this.script_bak = null\r\n    }\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This is just to keep from running into an error if the <code>script</code> attribute is changed to something other than a script; correct?</p>\n<pre><code>if (HasScript(this, \"script\")) {\n      this.script_bak = this.script\n    }\n    else {\n      // This is not a script!  DELETE IT!!!\n      this.script_bak = null\n    }\n</code></pre>\n\n",
      "PostDate": "2018-02-21T15:12:28.8748195Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8a032b7f-167f-484e-aff7-87be254bebeb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This is just to keep from running into an error if the script attribute is changed to something other than a script; correct?\r\n\r\nYep. It also means that the final line `do (exit, \"changedscript\")` will set up the initial values of both script and script_bak correctly whether or not the exit already has a script. Though I think you've chosen to do that manually instead.\r\n\r\n(I've been poking a library for my own use that provides AddScriptAttribute and RemoveScriptAttribute functions. If there's already a script there it puts the scripts into a list and then sets the actual script attribute to its own script that iterates over them. This is probably why I rarely finish anything)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This is just to keep from running into an error if the script attribute is changed to something other than a script; correct?</p>\n</blockquote>\n<p>Yep. It also means that the final line <code>do (exit, \"changedscript\")</code> will set up the initial values of both script and script_bak correctly whether or not the exit already has a script. Though I think you've chosen to do that manually instead.</p>\n<p>(I've been poking a library for my own use that provides AddScriptAttribute and RemoveScriptAttribute functions. If there's already a script there it puts the scripts into a list and then sets the actual script attribute to its own script that iterates over them. This is probably why I rarely finish anything)</p>\n\n",
      "PostDate": "2018-02-21T18:11:46.8622121Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8642f712-14d2-4fb1-9dd8-13b356747c9a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> the final line ```do (exit, \"changedscript\")``` will set up the initial values of both script and script_bak correctly whether or not the exit already has a script. \r\n\r\nI was going to ask about that.  I see now, though.  I was thinking about what that would do during play, but that's just going to run during the door creation process.\r\n\r\n---\r\n> Though I think you've chosen to do that manually instead.\r\n\r\nI see why I was confused now.\r\n\r\nI think I recently added the bit where it backs up the exit's script early on in the door creation process.\r\n\r\n---\r\n>AddScriptAttribute and RemoveScriptAttribute functions. \r\n>>If there's already a script there it puts the scripts into a list and then sets the actual script attribute to its own script that iterates over them.\r\n\r\n\\> steal mrangel's functions\r\nStolen.\r\n\r\n\r\n---\r\n> This is probably why I rarely finish anything\r\n\r\nYou and me both!\r\n\r\nAt least you finish your short stories!  (Or at least some of them.  You probably have some 'trunk novels', abandoned projects, etc.)  \r\n\r\nI've got around 50 unfinished tales.  (I do plan to finish about ten of them, though.)\r\n\r\n(Maybe I should start outlining a story before I begin writing.  Nah!  Then I'd know how it was going to end, so I'd have no reason to finish!)\r\n\r\nGetting stuck while writing one of my stories is actually what made me get into creating text adventures.\r\n\r\nI created the world, then dropped all the players into it, exactly where the story trailed off, and I (almost literally) dove into the story.\r\n\r\nI know what happens in that particular tale now.  If I can ever stop playing with Quest, I shall write the rest of it!  (Bwahahahaha!)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>the final line <code>do (exit, \"changedscript\")</code> will set up the initial values of both script and script_bak correctly whether or not the exit already has a script.</p>\n</blockquote>\n<p>I was going to ask about that.  I see now, though.  I was thinking about what that would do during play, but that's just going to run during the door creation process.</p>\n<hr>\n<blockquote>\n<p>Though I think you've chosen to do that manually instead.</p>\n</blockquote>\n<p>I see why I was confused now.</p>\n<p>I think I recently added the bit where it backs up the exit's script early on in the door creation process.</p>\n<hr>\n<blockquote>\n<p>AddScriptAttribute and RemoveScriptAttribute functions.</p>\n<blockquote>\n<p>If there's already a script there it puts the scripts into a list and then sets the actual script attribute to its own script that iterates over them.</p>\n</blockquote>\n</blockquote>\n<p>&gt; steal mrangel's functions<br>\nStolen.</p>\n<hr>\n<blockquote>\n<p>This is probably why I rarely finish anything</p>\n</blockquote>\n<p>You and me both!</p>\n<p>At least you finish your short stories!  (Or at least some of them.  You probably have some 'trunk novels', abandoned projects, etc.)</p>\n<p>I've got around 50 unfinished tales.  (I do plan to finish about ten of them, though.)</p>\n<p>(Maybe I should start outlining a story before I begin writing.  Nah!  Then I'd know how it was going to end, so I'd have no reason to finish!)</p>\n<p>Getting stuck while writing one of my stories is actually what made me get into creating text adventures.</p>\n<p>I created the world, then dropped all the players into it, exactly where the story trailed off, and I (almost literally) dove into the story.</p>\n<p>I know what happens in that particular tale now.  If I can ever stop playing with Quest, I shall write the rest of it!  (Bwahahahaha!)</p>\n\n",
      "PostDate": "2018-02-21T18:51:01.5691292Z",
      "LastEditDate": "2018-02-21T18:52:05.8882823Z",
      "link": null
    },
    {
      "PostId": "946a71a4-4d04-4452-a2ac-660a9f170547",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> At least you finish your short stories! (Or at least some of them. You probably have some 'trunk novels', abandoned projects, etc.)\r\n\r\nStarting October 2nd 2014 (I think; could have been 2015) I started a short story every day for 444 days. Finished about half of them, and probably only half of those were finished the same day. That's why I'm managing to put out so many short story collections. (New one uploaded this morning, on pre-order for next week. Still drawing on the same pool of stories)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>At least you finish your short stories! (Or at least some of them. You probably have some 'trunk novels', abandoned projects, etc.)</p>\n</blockquote>\n<p>Starting October 2nd 2014 (I think; could have been 2015) I started a short story every day for 444 days. Finished about half of them, and probably only half of those were finished the same day. That's why I'm managing to put out so many short story collections. (New one uploaded this morning, on pre-order for next week. Still drawing on the same pool of stories)</p>\n\n",
      "PostDate": "2018-02-21T18:56:42.5542072Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "df61384a-92f7-46c1-bf48-e827f628a357",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In re-implementing an old game that mentioned doors in almost every location, I had to insert over 100 scenery door objects. They mostly had the same description \"A plain internal door with no lock\". Copy and paste meant that the objects could be added quickly but I implemented 'open' and 'use' to take the player automatically through the doors which meant setting up the target location in each case. It would have been nice if I'd been able to describe an 'exit' as a 'door' so that 'go east', 'open east door' and 'use east door' all had the same effect...but oh well, it's done now!\r\n\r\nIn following this discussion, I remembered that rooms can be described as 'room and/or object' and was expecting that if, for example, I was in the 'old kitchen' (name of the room), and said it was a 'room and/or object' I would be able to 'examine kitchen' and get the description set up for it. Alas, it just says the usual 'I can't see that'! What is this feature for?",
      "EditableFormat": "markdown",
      "HTML": "<p>In re-implementing an old game that mentioned doors in almost every location, I had to insert over 100 scenery door objects. They mostly had the same description \"A plain internal door with no lock\". Copy and paste meant that the objects could be added quickly but I implemented 'open' and 'use' to take the player automatically through the doors which meant setting up the target location in each case. It would have been nice if I'd been able to describe an 'exit' as a 'door' so that 'go east', 'open east door' and 'use east door' all had the same effect...but oh well, it's done now!</p>\n<p>In following this discussion, I remembered that rooms can be described as 'room and/or object' and was expecting that if, for example, I was in the 'old kitchen' (name of the room), and said it was a 'room and/or object' I would be able to 'examine kitchen' and get the description set up for it. Alas, it just says the usual 'I can't see that'! What is this feature for?</p>\n\n",
      "PostDate": "2018-02-21T19:45:16.2758264Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b969abea-1bc0-4317-90b2-3d47125009ee",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I believe it's for enterable objects which are found in a room.\r\n\r\nThe ```look``` attribute is for when you examine it from outside.\r\n\r\nThe ```description``` is for the inside (or room) description.\r\n\r\n---\r\nI have thought about adding a scenery object with the same alias as the room to each room.  The look script would just call ```ShowRoomDescription```.\r\n\r\n(I've seen quite a few people playing text adventures who tried to **X KITCHEN** while they were in the kitchen.   It is a logical thing to try.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I believe it's for enterable objects which are found in a room.</p>\n<p>The <code>look</code> attribute is for when you examine it from outside.</p>\n<p>The <code>description</code> is for the inside (or room) description.</p>\n<hr>\n<p>I have thought about adding a scenery object with the same alias as the room to each room.  The look script would just call <code>ShowRoomDescription</code>.</p>\n<p>(I've seen quite a few people playing text adventures who tried to <strong>X KITCHEN</strong> while they were in the kitchen.   It is a logical thing to try.)</p>\n\n",
      "PostDate": "2018-02-21T21:26:41.6679426Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c67146af-9401-4ce2-8e5d-8900b1db21c3",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I've seen quite a few people playing text adventures who tried to X KITCHEN while they were in the kitchen. It is a logical thing to try.\r\n\r\nI agree but adding a scenery object for each room feels unsatisfactory when effectively there is already an object describing the room. The modern expectation seems to be that every item mentioned should be examinable, which would include the room and any exits mentioned.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I've seen quite a few people playing text adventures who tried to X KITCHEN while they were in the kitchen. It is a logical thing to try.</p>\n</blockquote>\n<p>I agree but adding a scenery object for each room feels unsatisfactory when effectively there is already an object describing the room. The modern expectation seems to be that every item mentioned should be examinable, which would include the room and any exits mentioned.</p>\n\n",
      "PostDate": "2018-02-21T22:50:22.4143769Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3fe3a8c9-8dda-44e4-b203-ab2b270aecc2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> every item mentioned should be examinable, which would include the room and any exits mentioned\r\n\r\nI try to make this happen.\r\n\r\n\"I can't see that.\"\r\n\r\nGrrr...\r\n\r\nBack in the day, they didn't have enough space to fit all of that text into the game, but it's just laziness nowadays.\r\n\r\nI would make a gamebook if I didn't feel like creating every object I mentioned in the prose.\r\n\r\n...but I've been called unpleasant things for paying too much attention to the details my whole life, so... there's that.\r\n\r\n---\r\n> adding a scenery object for each room feels unsatisfactory when effectively there is already an object describing the room.\r\n\r\nThis is where the plot thickens.\r\n\r\nWe have a new feature which allows us to control the scope of a command.\r\n\r\nThis modified ```lookat``` command will show the room description, objects list, and exits list.\r\n\r\n```\r\n  <command name=\"lookat\">\r\n    <pattern>look at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#</pattern>\r\n    <script>\r\n      if (GetBoolean(object, \"hidechildren\")) {\r\n        object.hidechildren = false\r\n      }\r\n// START OF FIRST SECTION ADDED \r\n      if (object = game.pov.parent) {\r\n        bak = game.autodescription_youarein\r\n        game.autodescription_youarein = 0\r\n        ShowRoomDescription\r\n        game.autodescription_youarein = bak\r\n      }\r\n//  END OF FIRST SECTION (CHANGED NEXT LINE TO ELSE IF)\r\n      else if (TypeOf(object, \"look\") = \"script\") {\r\n        do (object, \"look\")\r\n      }\r\n      else {\r\n        lookdesc = \"\"\r\n        if (HasString(object, \"look\")) {\r\n          lookdesc = object.look\r\n        }\r\n        if (LengthOf(lookdesc) = 0) {\r\n          lookdesc = Template(\"DefaultObjectDescription\")\r\n        }\r\n        if (GetBoolean(object, \"switchedon\")) {\r\n          if (HasString(object, \"switchedondesc\")) {\r\n            lookdesc = lookdesc + \" \" + object.switchedondesc\r\n          }\r\n        }\r\n        else {\r\n          if (HasString(object, \"switchedoffdesc\")) {\r\n            lookdesc = lookdesc + \" \" + object.switchedoffdesc\r\n          }\r\n        }\r\n        isDark = CheckDarkness()\r\n        if (isDark and not GetBoolean(object, \"lightsource\")) {\r\n          lookdesc = DynamicTemplate(\"LookAtDarkness\", object)\r\n        }\r\n        msg (lookdesc)\r\n      }\r\n      ListObjectContents (object)\r\n    </script>\r\n<!-- START OF SECOND SECTION ADDED -->\r\n    <changecommandscope type=\"script\">\r\n      list add (items, game.pov.parent)\r\n    </changecommandscope>\r\n<!-- END OF SECOND SECTION ADDED -->\r\n  </command>\r\n```\r\n\r\n\r\nhttp://docs.textadventures.co.uk/quest/advanced_scope.html",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>every item mentioned should be examinable, which would include the room and any exits mentioned</p>\n</blockquote>\n<p>I try to make this happen.</p>\n<p>\"I can't see that.\"</p>\n<p>Grrr...</p>\n<p>Back in the day, they didn't have enough space to fit all of that text into the game, but it's just laziness nowadays.</p>\n<p>I would make a gamebook if I didn't feel like creating every object I mentioned in the prose.</p>\n<p>...but I've been called unpleasant things for paying too much attention to the details my whole life, so... there's that.</p>\n<hr>\n<blockquote>\n<p>adding a scenery object for each room feels unsatisfactory when effectively there is already an object describing the room.</p>\n</blockquote>\n<p>This is where the plot thickens.</p>\n<p>We have a new feature which allows us to control the scope of a command.</p>\n<p>This modified <code>lookat</code> command will show the room description, objects list, and exits list.</p>\n<pre><code>  &lt;command name=\"lookat\"&gt;\n    &lt;pattern&gt;look at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#&lt;/pattern&gt;\n    &lt;script&gt;\n      if (GetBoolean(object, \"hidechildren\")) {\n        object.hidechildren = false\n      }\n// START OF FIRST SECTION ADDED \n      if (object = game.pov.parent) {\n        bak = game.autodescription_youarein\n        game.autodescription_youarein = 0\n        ShowRoomDescription\n        game.autodescription_youarein = bak\n      }\n//  END OF FIRST SECTION (CHANGED NEXT LINE TO ELSE IF)\n      else if (TypeOf(object, \"look\") = \"script\") {\n        do (object, \"look\")\n      }\n      else {\n        lookdesc = \"\"\n        if (HasString(object, \"look\")) {\n          lookdesc = object.look\n        }\n        if (LengthOf(lookdesc) = 0) {\n          lookdesc = Template(\"DefaultObjectDescription\")\n        }\n        if (GetBoolean(object, \"switchedon\")) {\n          if (HasString(object, \"switchedondesc\")) {\n            lookdesc = lookdesc + \" \" + object.switchedondesc\n          }\n        }\n        else {\n          if (HasString(object, \"switchedoffdesc\")) {\n            lookdesc = lookdesc + \" \" + object.switchedoffdesc\n          }\n        }\n        isDark = CheckDarkness()\n        if (isDark and not GetBoolean(object, \"lightsource\")) {\n          lookdesc = DynamicTemplate(\"LookAtDarkness\", object)\n        }\n        msg (lookdesc)\n      }\n      ListObjectContents (object)\n    &lt;/script&gt;\n&lt;!-- START OF SECOND SECTION ADDED --&gt;\n    &lt;changecommandscope type=\"script\"&gt;\n      list add (items, game.pov.parent)\n    &lt;/changecommandscope&gt;\n&lt;!-- END OF SECOND SECTION ADDED --&gt;\n  &lt;/command&gt;\n</code></pre>\n<p>http://docs.textadventures.co.uk/quest/advanced_scope.html</p>\n\n",
      "PostDate": "2018-02-21T23:41:12.1792512Z",
      "LastEditDate": "2018-02-22T00:09:37.1638789Z",
      "link": null
    },
    {
      "PostId": "1cbf33a6-645b-4577-b9e3-01a342af41c4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could (I think) even allow things like \"examine room\" without having an object for each... have a regex pattern something like `^(look ?(at)?|x|exam|examine)\\s+((?<text>around|room|self|floor|sky|pockets|ceiling|busy|)|(?<object>.+))$`\r\nThen the script...\r\n```\r\nif (IsDefined(\"text\")) {\r\n  switch(Trim(LCase(text))) {\r\n    case (\"\", \"room\", \"around\") {\r\n      object = game.pov.parent\r\n    }\r\n    case (\"self\") {\r\n      object = game.pov\r\n    }\r\n    case (\"pockets\") {\r\n      do (inventory, \"script\")\r\n    }\r\n    case (\"busy\") {\r\n      msg (\"Why? Is the boss coming?\")\r\n    }\r\n    default {\r\n      if (HasString(game.pov.parent, text+\"desc\")) {\r\n        msg (GetString(game.pov.parent, text+\"desc\"))\r\n      }\r\n      else if (HasScript(game.pov.parent, text+\"desc\")) {\r\n        do (game.pov.parent, text+\"desc\")\r\n      }\r\n      else {\r\n        msg (\"The \"+text+\" here looks pretty ordinary\")\r\n      }\r\n    }\r\n  }\r\n}\r\nif (IsDefined(\"object\")) {\r\n  [...] everything else here\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You could (I think) even allow things like \"examine room\" without having an object for each... have a regex pattern something like <code>^(look ?(at)?|x|exam|examine)\\s+((?&lt;text&gt;around|room|self|floor|sky|pockets|ceiling|busy|)|(?&lt;object&gt;.+))$</code><br>\nThen the script...</p>\n<pre><code>if (IsDefined(\"text\")) {\n  switch(Trim(LCase(text))) {\n    case (\"\", \"room\", \"around\") {\n      object = game.pov.parent\n    }\n    case (\"self\") {\n      object = game.pov\n    }\n    case (\"pockets\") {\n      do (inventory, \"script\")\n    }\n    case (\"busy\") {\n      msg (\"Why? Is the boss coming?\")\n    }\n    default {\n      if (HasString(game.pov.parent, text+\"desc\")) {\n        msg (GetString(game.pov.parent, text+\"desc\"))\n      }\n      else if (HasScript(game.pov.parent, text+\"desc\")) {\n        do (game.pov.parent, text+\"desc\")\n      }\n      else {\n        msg (\"The \"+text+\" here looks pretty ordinary\")\n      }\n    }\n  }\n}\nif (IsDefined(\"object\")) {\n  [...] everything else here\n}\n</code></pre>\n\n",
      "PostDate": "2018-02-22T02:39:21.8969864Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "55232b4d-8aea-44dd-b271-5d61d087d298",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks guys, I'll experiment!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks guys, I'll experiment!</p>\n\n",
      "PostDate": "2018-02-22T09:47:20.8627954Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5392430c-b719-4875-84f7-bdbe928a6895",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...sorry, struggling to fit this together! Can you put the code into a complete game and send it to me at ...?\r\nThanks!!",
      "EditableFormat": "markdown",
      "HTML": "<p>...sorry, struggling to fit this together! Can you put the code into a complete game and send it to me at ...?<br>\nThanks!!</p>\n\n",
      "PostDate": "2018-02-22T17:28:05.7258363Z",
      "LastEditDate": "2018-02-22T17:58:45.923902Z",
      "link": null
    },
    {
      "PostId": "d928e8e2-7d3c-460f-b3fc-3b7f1066f7e2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\n### ``` <game name=\"You Can X the Room!\">```\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"You Can X the Room!\">\r\n    <gameid>eb50d167-bd03-4f23-9908-48369a7083f5</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n    <command name=\"lookat\">\r\n    <pattern>look at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#</pattern>\r\n    <script>\r\n      if (GetBoolean(object, \"hidechildren\")) {\r\n        object.hidechildren = false\r\n      }\r\n// START OF FIRST SECTION ADDED \r\n      if (object = game.pov.parent) {\r\n        bak = game.autodescription_youarein\r\n        game.autodescription_youarein = 0\r\n        ShowRoomDescription\r\n        game.autodescription_youarein = bak\r\n      }\r\n//  END OF FIRST SECTION (CHANGED NEXT LINE TO ELSE IF)\r\n      else if (TypeOf(object, \"look\") = \"script\") {\r\n        do (object, \"look\")\r\n      }\r\n      else {\r\n        lookdesc = \"\"\r\n        if (HasString(object, \"look\")) {\r\n          lookdesc = object.look\r\n        }\r\n        if (LengthOf(lookdesc) = 0) {\r\n          lookdesc = Template(\"DefaultObjectDescription\")\r\n        }\r\n        if (GetBoolean(object, \"switchedon\")) {\r\n          if (HasString(object, \"switchedondesc\")) {\r\n            lookdesc = lookdesc + \" \" + object.switchedondesc\r\n          }\r\n        }\r\n        else {\r\n          if (HasString(object, \"switchedoffdesc\")) {\r\n            lookdesc = lookdesc + \" \" + object.switchedoffdesc\r\n          }\r\n        }\r\n        isDark = CheckDarkness()\r\n        if (isDark and not GetBoolean(object, \"lightsource\")) {\r\n          lookdesc = DynamicTemplate(\"LookAtDarkness\", object)\r\n        }\r\n        msg (lookdesc)\r\n      }\r\n      ListObjectContents (object)\r\n    </script>\r\n<!-- START OF SECOND SECTION ADDED -->\r\n    <changecommandscope type=\"script\">\r\n      list add (items, game.pov.parent)\r\n    </changecommandscope>\r\n<!-- END OF SECOND SECTION ADDED -->\r\n  </command>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[This is the main room's description.<br/><br/>I would have written something funny here, but I couldn't come up with anything.<br/>]]></description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"second room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"second room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description><![CDATA[This is the description of the second room. <br/><br/>(If you can read this, you must be bored.)<br/>]]></description>\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nI emailed it, too (for some reason; I'm crazy).\r\n\r\nIf I were you, I'd edit my email address out of that post before Google takes a snapshot of this page.  All the spam-bots will share your info with each other!\r\n\r\n(I advise only sharing email addresses via PM.  This is just based on my experience.)",
      "EditableFormat": "markdown",
      "HTML": "<h3><code>&lt;game name=\"You Can X the Room!\"&gt;</code></h3>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"You Can X the Room!\"&gt;\n    &lt;gameid&gt;eb50d167-bd03-4f23-9908-48369a7083f5&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n    &lt;command name=\"lookat\"&gt;\n    &lt;pattern&gt;look at #object#; look #object#; x #object#; examine #object#; exam #object#; ex #object#&lt;/pattern&gt;\n    &lt;script&gt;\n      if (GetBoolean(object, \"hidechildren\")) {\n        object.hidechildren = false\n      }\n// START OF FIRST SECTION ADDED \n      if (object = game.pov.parent) {\n        bak = game.autodescription_youarein\n        game.autodescription_youarein = 0\n        ShowRoomDescription\n        game.autodescription_youarein = bak\n      }\n//  END OF FIRST SECTION (CHANGED NEXT LINE TO ELSE IF)\n      else if (TypeOf(object, \"look\") = \"script\") {\n        do (object, \"look\")\n      }\n      else {\n        lookdesc = \"\"\n        if (HasString(object, \"look\")) {\n          lookdesc = object.look\n        }\n        if (LengthOf(lookdesc) = 0) {\n          lookdesc = Template(\"DefaultObjectDescription\")\n        }\n        if (GetBoolean(object, \"switchedon\")) {\n          if (HasString(object, \"switchedondesc\")) {\n            lookdesc = lookdesc + \" \" + object.switchedondesc\n          }\n        }\n        else {\n          if (HasString(object, \"switchedoffdesc\")) {\n            lookdesc = lookdesc + \" \" + object.switchedoffdesc\n          }\n        }\n        isDark = CheckDarkness()\n        if (isDark and not GetBoolean(object, \"lightsource\")) {\n          lookdesc = DynamicTemplate(\"LookAtDarkness\", object)\n        }\n        msg (lookdesc)\n      }\n      ListObjectContents (object)\n    &lt;/script&gt;\n&lt;!-- START OF SECOND SECTION ADDED --&gt;\n    &lt;changecommandscope type=\"script\"&gt;\n      list add (items, game.pov.parent)\n    &lt;/changecommandscope&gt;\n&lt;!-- END OF SECOND SECTION ADDED --&gt;\n  &lt;/command&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[This is the main room's description.&lt;br/&gt;&lt;br/&gt;I would have written something funny here, but I couldn't come up with anything.&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"second room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"second room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;&lt;![CDATA[This is the description of the second room. &lt;br/&gt;&lt;br/&gt;(If you can read this, you must be bored.)&lt;br/&gt;]]&gt;&lt;/description&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>I emailed it, too (for some reason; I'm crazy).</p>\n<p>If I were you, I'd edit my email address out of that post before Google takes a snapshot of this page.  All the spam-bots will share your info with each other!</p>\n<p>(I advise only sharing email addresses via PM.  This is just based on my experience.)</p>\n\n",
      "PostDate": "2018-02-22T17:40:34.3877016Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "37335e64-a256-4264-94bd-c7a8f92781f5",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV. I've edited out my email address and copied the code into one of my games to see if there are any unexpected side effects. Will report back later...",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV. I've edited out my email address and copied the code into one of my games to see if there are any unexpected side effects. Will report back later...</p>\n\n",
      "PostDate": "2018-02-22T18:00:57.385137Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59c11dce-eda7-4e42-9e8d-052da69f3a74",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Thanks KV. I've edited out my email address and copied the code\r\n\r\nWord up.\r\n\r\nLet us know, please, sir.\r\n\r\n---\r\nI seriously got a butt-load of emails when I dropped my old address in a post one time.  \r\n\r\nIf anyone else wishes to share some code with you via email, I'm thinking they'll just shoot you a PM, asking for your address.\r\n\r\n---\r\n>You could (I think) even allow things like \"examine room\" without having an object for each... have a regex pattern something like ```^(look ?(at)?|x|exam|examine)\\s+((?<text>around|room|self|floor|sky|pockets|ceiling|busy|)|(?<object>.+))$```\r\n\r\nHey, this is a neat idea!\r\n\r\nYou don't even have to alter the existing ```lookat``` for this one.  You can just add this with a different name, with a slightly modified RegEx pattern and script.\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"lookat (lookat code by mrangel)\">\r\n    <gameid>de34b7f4-5295-481e-b035-e7ed252fc0c1</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"placeholder\">\r\n      <inherit name=\"editor_object\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"newlookat\">\r\n    <pattern type=\"string\"><![CDATA[^(look ?(at)?|x|exam|examine)\\s+(?<text>around|room|self|floor|sky|pockets|ceiling|busy|)$]]></pattern>\r\n    <script>\r\n      switch (Trim(LCase(text))) {\r\n        case (\"\", \"room\", \"around\") {\r\n          object = game.pov.parent\r\n        }\r\n        case (\"self\") {\r\n          object = game.pov\r\n        }\r\n        case (\"pockets\") {\r\n          do (inventory, \"script\")\r\n        }\r\n        case (\"busy\") {\r\n          msg (\"Why? Is the boss coming?\")\r\n        }\r\n        default {\r\n          if (HasString(game.pov.parent, text+\"desc\")) {\r\n            msg (GetString(game.pov.parent, text+\"desc\"))\r\n          }\r\n          else if (HasScript(game.pov.parent, text+\"desc\")) {\r\n            do (game.pov.parent, text+\"desc\")\r\n          }\r\n          else {\r\n            msg (\"The \"+text+\" here looks pretty ordinary\")\r\n          }\r\n        }\r\n      }\r\n    </script>\r\n  </command>\r\n</asl>\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Thanks KV. I've edited out my email address and copied the code</p>\n</blockquote>\n<p>Word up.</p>\n<p>Let us know, please, sir.</p>\n<hr>\n<p>I seriously got a butt-load of emails when I dropped my old address in a post one time.</p>\n<p>If anyone else wishes to share some code with you via email, I'm thinking they'll just shoot you a PM, asking for your address.</p>\n<hr>\n<blockquote>\n<p>You could (I think) even allow things like \"examine room\" without having an object for each... have a regex pattern something like <code>^(look ?(at)?|x|exam|examine)\\s+((?&lt;text&gt;around|room|self|floor|sky|pockets|ceiling|busy|)|(?&lt;object&gt;.+))$</code></p>\n</blockquote>\n<p>Hey, this is a neat idea!</p>\n<p>You don't even have to alter the existing <code>lookat</code> for this one.  You can just add this with a different name, with a slightly modified RegEx pattern and script.</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"lookat (lookat code by mrangel)\"&gt;\n    &lt;gameid&gt;de34b7f4-5295-481e-b035-e7ed252fc0c1&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"placeholder\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"newlookat\"&gt;\n    &lt;pattern type=\"string\"&gt;&lt;![CDATA[^(look ?(at)?|x|exam|examine)\\s+(?&lt;text&gt;around|room|self|floor|sky|pockets|ceiling|busy|)$]]&gt;&lt;/pattern&gt;\n    &lt;script&gt;\n      switch (Trim(LCase(text))) {\n        case (\"\", \"room\", \"around\") {\n          object = game.pov.parent\n        }\n        case (\"self\") {\n          object = game.pov\n        }\n        case (\"pockets\") {\n          do (inventory, \"script\")\n        }\n        case (\"busy\") {\n          msg (\"Why? Is the boss coming?\")\n        }\n        default {\n          if (HasString(game.pov.parent, text+\"desc\")) {\n            msg (GetString(game.pov.parent, text+\"desc\"))\n          }\n          else if (HasScript(game.pov.parent, text+\"desc\")) {\n            do (game.pov.parent, text+\"desc\")\n          }\n          else {\n            msg (\"The \"+text+\" here looks pretty ordinary\")\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-02-22T18:40:44.7002716Z",
      "LastEditDate": "2018-02-22T19:18:07.2038308Z",
      "link": null
    },
    {
      "PostId": "9fd817c2-08e1-433f-85f9-52b989cc46ee",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Will report back later...\r\n\r\nThat seemed to work well in my game. The only 'problem' was a few name clashes which brought up the menu but that is what would have happened anyway if I'd added a new object for each location. \r\n\r\nIt feels wrong to be redefining 'examine' so perhaps there is a case for making this code the new default?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Will report back later...</p>\n</blockquote>\n<p>That seemed to work well in my game. The only 'problem' was a few name clashes which brought up the menu but that is what would have happened anyway if I'd added a new object for each location.</p>\n<p>It feels wrong to be redefining 'examine' so perhaps there is a case for making this code the new default?</p>\n\n",
      "PostDate": "2018-02-22T19:11:02.1150993Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7fdd1dea-21ab-4f13-95a8-708d2f0a8b5e",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...sorry, there a problem! The room really needs to be a recognisable object regardless of the operation applied to it:\r\n\r\nYou are in an old kitchen.\r\n: x kitchen\r\nYou are in an old kitchen.\r\n:search kitchen\r\nI can't see that. (kitchen)",
      "EditableFormat": "markdown",
      "HTML": "<p>...sorry, there a problem! The room really needs to be a recognisable object regardless of the operation applied to it:</p>\n<p>You are in an old kitchen.<br>\n: x kitchen<br>\nYou are in an old kitchen.<br>\n:search kitchen<br>\nI can't see that. (kitchen)</p>\n\n",
      "PostDate": "2018-02-22T19:19:22.2353355Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e062ca40-95b1-43f7-b8e6-0f8db1ceb4bd",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">It feels wrong to be redefining 'examine' \r\n\r\nThat's what Quest is all about!\r\n\r\nModify those scripts!  Make your game stand out!\r\n\r\n(Why am I yelling?!?!)\r\n\r\nJust be sure to include the instructions when entering HELP (or something like that).\r\n\r\n---\r\n>perhaps there is a case for making this code the new default?\r\n\r\nI'm not in charge of anything (just a Quest user), but I have created a few pull requests with code that changed the way the default commands worked and have been enlightened a bit as to how things may effect game creators...\r\n\r\n#### One scenario:\r\n\r\nYou have been writing a game for months (maybe even years).  \r\n\r\nYou have gone through the trouble of adding a scenery object in each room with an alias which matches the room's alias, just so people can X the room.\r\n\r\nYou've also gone out of the way to make sure no items which could be in scope simultaneously have similar aliases, hence avoiding the player ever seeing the disambiguation menu.\r\n\r\nYou open Quest.  It says there's an updated version of Quest.  So, you update.\r\n\r\nNow, when you load your game, press 'Play', and enter **X ROOM**, it says:\r\n\r\n**Which do you mean?\r\n[1\\. a room]()\r\n[2\\. a room]()**\r\n\r\n---\r\nIt's also important to note here that any published game (meaning  a .quest file as opposed to an .aslx file) which was published before an update to Quest would not be effected by any changes made to a built-in command.\r\n\r\nWhen you compile the game, Quest adds all the functions to your game's code.\r\n\r\nThis is also the case if you have copied a default command into your game.\r\n\r\nSo, if you had this modified ```lookat``` command in a game right now, then Pixie updated the ```lookat``` command in Quest, you could open that game in the updated version of Quest and your modified ```lookat``` command would still be what your game used.\r\n\r\nAlternatively, any existing .aslx files without a ```lookat``` command copied to the main game's code would use Quest's built-in command.\r\n\r\n\r\nSo... to avoid all of this possible confusion, it seems that the default stuff is only altered when:\r\nA\\. It's a bug fix\r\nB\\. It wouldn't effect games people are currently editing\r\n\r\n...and, to make it so we can still pretty much do whatever we wish to our own games, we can modify (or add) whatever code we wish on our end.\r\n\r\n(NOTE: I'm not just explaining this to you.  You probably already know most (if not all) of this.  This is just for any new folks who may be reading this.  (I'm really bored today.))\r\n\r\n---\r\nNow that I've rambled on incessantly (sorry), I'll share this:\r\n\r\n[LookAtRoomLib.aslx](https://gist.github.com/KVonGit/f771c47b275871a0e64602a6f318c0ef)\r\n\r\nIt's almost as much work to include this library as it would be to just copy the code into full code view, but not quite.\r\n\r\n---\r\n[mrangel's method](http://textadventures.co.uk/forum/quest/topic/9m2lavmzregstombcuxrba/fun-with-doors#1cbf33a6-645b-4577-b9e3-01a342af41c4) is pretty nice, too.\r\n\r\nYou'd have to custom tailor it a little, but not much.\r\n\r\nPlus, you can add an attribute to the room on the fly, and his script will either print the string value of that attribute, or run its script, depending on its type.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It feels wrong to be redefining 'examine'</p>\n</blockquote>\n<p>That's what Quest is all about!</p>\n<p>Modify those scripts!  Make your game stand out!</p>\n<p>(Why am I yelling?!?!)</p>\n<p>Just be sure to include the instructions when entering HELP (or something like that).</p>\n<hr>\n<blockquote>\n<p>perhaps there is a case for making this code the new default?</p>\n</blockquote>\n<p>I'm not in charge of anything (just a Quest user), but I have created a few pull requests with code that changed the way the default commands worked and have been enlightened a bit as to how things may effect game creators...</p>\n<h4>One scenario:</h4>\n<p>You have been writing a game for months (maybe even years).</p>\n<p>You have gone through the trouble of adding a scenery object in each room with an alias which matches the room's alias, just so people can X the room.</p>\n<p>You've also gone out of the way to make sure no items which could be in scope simultaneously have similar aliases, hence avoiding the player ever seeing the disambiguation menu.</p>\n<p>You open Quest.  It says there's an updated version of Quest.  So, you update.</p>\n<p>Now, when you load your game, press 'Play', and enter <strong>X ROOM</strong>, it says:</p>\n<p><strong>Which do you mean?<br>\n<a href=\"\">1. a room</a><br>\n<a href=\"\">2. a room</a></strong></p>\n<hr>\n<p>It's also important to note here that any published game (meaning  a .quest file as opposed to an .aslx file) which was published before an update to Quest would not be effected by any changes made to a built-in command.</p>\n<p>When you compile the game, Quest adds all the functions to your game's code.</p>\n<p>This is also the case if you have copied a default command into your game.</p>\n<p>So, if you had this modified <code>lookat</code> command in a game right now, then Pixie updated the <code>lookat</code> command in Quest, you could open that game in the updated version of Quest and your modified <code>lookat</code> command would still be what your game used.</p>\n<p>Alternatively, any existing .aslx files without a <code>lookat</code> command copied to the main game's code would use Quest's built-in command.</p>\n<p>So... to avoid all of this possible confusion, it seems that the default stuff is only altered when:<br>\nA. It's a bug fix<br>\nB. It wouldn't effect games people are currently editing</p>\n<p>...and, to make it so we can still pretty much do whatever we wish to our own games, we can modify (or add) whatever code we wish on our end.</p>\n<p>(NOTE: I'm not just explaining this to you.  You probably already know most (if not all) of this.  This is just for any new folks who may be reading this.  (I'm really bored today.))</p>\n<hr>\n<p>Now that I've rambled on incessantly (sorry), I'll share this:</p>\n<p><a href=\"https://gist.github.com/KVonGit/f771c47b275871a0e64602a6f318c0ef\">LookAtRoomLib.aslx</a></p>\n<p>It's almost as much work to include this library as it would be to just copy the code into full code view, but not quite.</p>\n<hr>\n<p><a href=\"http://textadventures.co.uk/forum/quest/topic/9m2lavmzregstombcuxrba/fun-with-doors#1cbf33a6-645b-4577-b9e3-01a342af41c4\">mrangel's method</a> is pretty nice, too.</p>\n<p>You'd have to custom tailor it a little, but not much.</p>\n<p>Plus, you can add an attribute to the room on the fly, and his script will either print the string value of that attribute, or run its script, depending on its type.</p>\n\n",
      "PostDate": "2018-02-22T19:57:57.522874Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0b97a85f-3875-447d-98dd-99edc0fad2c5",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I guess the conclusion here is that while exits and rooms look like objects to modern players, when Quest was first developed that probably wasn't the case. At this stage, rather than modify Quest, it is probably easier to just add objects for these items, and it does have the advantage of providing greater control.  I'll do that in my next game updates. Thanks for the discussion!",
      "EditableFormat": "markdown",
      "HTML": "<p>I guess the conclusion here is that while exits and rooms look like objects to modern players, when Quest was first developed that probably wasn't the case. At this stage, rather than modify Quest, it is probably easier to just add objects for these items, and it does have the advantage of providing greater control.  I'll do that in my next game updates. Thanks for the discussion!</p>\n\n",
      "PostDate": "2018-02-22T21:01:17.259592Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2920ab03-0307-4de8-8cc6-e3c749ddd64f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">\\>search kitchen\r\nI can't see that. (kitchen)\r\n\r\nI missed this post.\r\n\r\nWhen you say:\r\n> it is probably easier to just add objects for these items, and it does have the advantage of providing greater control. \r\n\r\nYou are correct.\r\n\r\nLetting us examine things we can't interact with otherwise is extremely confusing.\r\n\r\nIf one were to add non-existent things to scope in the ```lookat``` command, they'd need to add most of said things to ```take``` and all the other commands like that, too.  (Except for busy.  Who would try to TAKE BUSY?  Not me!  (I like \"look busy\"!  That is FUNNY!))",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>&gt;search kitchen<br>\nI can't see that. (kitchen)</p>\n</blockquote>\n<p>I missed this post.</p>\n<p>When you say:</p>\n<blockquote>\n<p>it is probably easier to just add objects for these items, and it does have the advantage of providing greater control.</p>\n</blockquote>\n<p>You are correct.</p>\n<p>Letting us examine things we can't interact with otherwise is extremely confusing.</p>\n<p>If one were to add non-existent things to scope in the <code>lookat</code> command, they'd need to add most of said things to <code>take</code> and all the other commands like that, too.  (Except for busy.  Who would try to TAKE BUSY?  Not me!  (I like \"look busy\"!  That is FUNNY!))</p>\n\n",
      "PostDate": "2018-02-22T21:11:42.3929245Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "605cdcf9-fc5b-401f-b234-28234b693732",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Finally added the DoorLib to my game. Excellent. I too had always added a door object and added a script to exit that would first check if door was locked or opened. Sooo much easier with the lib. Glad it has the 'look' as well. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Finally added the DoorLib to my game. Excellent. I too had always added a door object and added a script to exit that would first check if door was locked or opened. Sooo much easier with the lib. Glad it has the 'look' as well.</p>\n\n",
      "PostDate": "2018-03-13T05:40:56.5230572Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4f038b6f-288a-4a88-b22c-562e5ba3d68b",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "oh, I added this to the 'this.openscript =>\r\n```\r\nif (HasScript(this.exit,\"onopen\")){\r\n  do (this.exit,\"onopen\")\r\n}\r\n```\r\n an attribute 'onopen' script should be added to the exit as well and will then run when the door is opened. \r\n\r\nIn my case a woman will see you and scream. Of course doing this will/may require the women's scope to be added to the 'items' list in case the player wants to interact with her. Another can of worms...but I like to be able to look through openings and open doors to see whats up ahead before moving. Many games will move you to the next room when you open a door. A assume this is to avoid a mess of player commands being dealt with, but I'm doing the extra work cause' thats how I roll\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>oh, I added this to the 'this.openscript =&gt;</p>\n<pre><code>if (HasScript(this.exit,\"onopen\")){\n  do (this.exit,\"onopen\")\n}\n</code></pre>\n<p>an attribute 'onopen' script should be added to the exit as well and will then run when the door is opened.</p>\n<p>In my case a woman will see you and scream. Of course doing this will/may require the women's scope to be added to the 'items' list in case the player wants to interact with her. Another can of worms...but I like to be able to look through openings and open doors to see whats up ahead before moving. Many games will move you to the next room when you open a door. A assume this is to avoid a mess of player commands being dealt with, but I'm doing the extra work cause' thats how I roll</p>\n\n",
      "PostDate": "2018-03-13T06:26:06.7175774Z",
      "LastEditDate": "2018-03-13T06:30:34.928016Z",
      "link": null
    },
    {
      "PostId": "498717f6-40cf-45be-9120-8b4cbd70f5b4",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey!  Nice!\r\n\r\nI just updated the library.  There is now an option to run a script on the \"Door Settings\" tab.\r\n\r\nhttps://github.com/KVonGit/QuestStuff/blob/master/libraries/DoorLib.aslx\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/37326828-dcff1cea-2661-11e8-806f-f2729d31d79f.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey!  Nice!</p>\n<p>I just updated the library.  There is now an option to run a script on the \"Door Settings\" tab.</p>\n<p>https://github.com/KVonGit/QuestStuff/blob/master/libraries/DoorLib.aslx</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/37326828-dcff1cea-2661-11e8-806f-f2729d31d79f.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2018-03-13T06:57:32.7266447Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "225d5bba-7dc7-4d1d-a530-b82ef94a3f6a",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How about letting the creator enter a description to the\"Look\" message. Right now it just says if it is locked or open. being able to add a description would be nice. Perhaps to describe the door then you can have the locked or open script run.",
      "EditableFormat": "markdown",
      "HTML": "<p>How about letting the creator enter a description to the\"Look\" message. Right now it just says if it is locked or open. being able to add a description would be nice. Perhaps to describe the door then you can have the locked or open script run.</p>\n\n",
      "PostDate": "2018-03-13T08:06:32.9291487Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e527e198-c218-4ede-9c84-573ee189d0d2",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Damn, you keep thinking of good stuff!\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/37358322-c8ac062a-26b8-11e8-9be3-64bfacff9669.png)\r\n\r\n---\r\nUpdated again:\r\n\r\nhttps://github.com/KVonGit/QuestStuff/blob/master/libraries/DoorLib.aslx",
      "EditableFormat": "markdown",
      "HTML": "<p>Damn, you keep thinking of good stuff!</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/37358322-c8ac062a-26b8-11e8-9be3-64bfacff9669.png\" alt=\"image\"></p>\n<hr>\n<p>Updated again:</p>\n<p>https://github.com/KVonGit/QuestStuff/blob/master/libraries/DoorLib.aslx</p>\n\n",
      "PostDate": "2018-03-13T17:19:51.0627699Z",
      "LastEditDate": "2018-03-13T17:22:39.4685997Z",
      "link": null
    },
    {
      "PostId": "7ec75e59-7092-4ecf-a0a1-9c73f2731cbf",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Looks much more clean and neat now too!",
      "EditableFormat": "markdown",
      "HTML": "<p>Looks much more clean and neat now too!</p>\n\n",
      "PostDate": "2018-03-14T00:10:07.2812731Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
