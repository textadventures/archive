{
  "Topic": {
    "TopicId": "yaysibwzkecdsndntsannq",
    "ForumId": "10",
    "Title": "One use only object links",
    "LastUpdated": "2024-02-07T21:11:29.7212778Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "66326382-196b-4a8c-9876-58d7eab1428c",
      "UserId": 579655,
      "Username": "Jennifer Wren",
      "AvatarUrl": "https://i.imgur.com/t1XUS1Kb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How can I make an object link with a verb that is disabled after use? \r\nConversely, how can I write a command Link into the middle of a popup 's long text?\r\n\r\nI finally realized I can just make the object invisible as soon as it has been used. However, that will involve a lot of making one object visible in the room in some cases and another object visible in other cases, and rarely but sometimes both. That's 66 x four scripts to write add make object visible before. So, I'm really feeling like a short cut, because it also means I have to scan each line of text for which it is.",
      "EditableFormat": "markdown",
      "HTML": "<p>How can I make an object link with a verb that is disabled after use?<br>\nConversely, how can I write a command Link into the middle of a popup 's long text?</p>\n<p>I finally realized I can just make the object invisible as soon as it has been used. However, that will involve a lot of making one object visible in the room in some cases and another object visible in other cases, and rarely but sometimes both. That's 66 x four scripts to write add make object visible before. So, I'm really feeling like a short cut, because it also means I have to scan each line of text for which it is.</p>\n\n",
      "PostDate": "2024-02-07T21:11:29.7212778Z",
      "LastEditDate": "2024-02-07T23:42:55.012233Z",
      "link": null
    },
    {
      "PostId": "4cb69db2-a569-41fb-aba2-3788ac8015a0",
      "UserId": 31991,
      "Username": "daeun",
      "AvatarUrl": "https://i.imgur.com/Xvt8zzBb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I dunno but these links might be helpful.\r\n>Coding…\r\nSo how do you actually add and remove verbs? We have an object called “hat”, and we want to add a “Wear” verb to the inventory list. One approach is to create a new list each time. This is easily done with the Split function. This takes two strings, the first being a list of verbs, seperated by semi-colons, the second just a semi-colon, telling Quest what to break the first list on.\r\n\r\n>  hat.inventoryverbs = Split(\"look at;Drop;Wear\", \";\")\r\nThen when the hat is worn:\r\n\r\n>  hat.inventoryverbs = Split(\"look at;Remove\", \";\")\r\nThat will not work if there are potentially other verbs that may or may not be there, and you are better off assign the attribute each time using `ListConbine:\r\n\r\n> object.displayverbs = ListCombine(object.displayverbs, Split(\"Attack\"))\r\nWhen you want to remove the verb, it should be safe to use list remove as you know the object has the list, given you set it yourself earlier. To be extra safe, check the list has the verb first.\r\n\r\n> if (ListContains(object.displayverbs, \"Attack\")) {\r\n  list remove (object.displayverbs, \"Attack\")\r\n}\r\n\r\nhttps://docs.textadventures.co.uk/quest/display_verbs.html\r\n\r\n>CommandLink\r\nCommandLink (string command, string link text)\r\nReturns a string containing the XML required to display a hyperlink. When the hyperlink is clicked, the specified player command will be run. For example:\r\n\r\n> msg (CommandLink(\"undo\", \"Click here to undo the previous turn\"))\r\noutputs a link titled “Click here to undo the previous turn” - when clicked, the “undo” player command is run.\r\nSee also: ObjectLink\r\n\r\n\r\nhttps://docs.textadventures.co.uk/quest/functions/corelibrary/commandlink.html",
      "EditableFormat": "markdown",
      "HTML": "<p>I dunno but these links might be helpful.</p>\n<blockquote>\n<p>Coding…<br>\nSo how do you actually add and remove verbs? We have an object called “hat”, and we want to add a “Wear” verb to the inventory list. One approach is to create a new list each time. This is easily done with the Split function. This takes two strings, the first being a list of verbs, seperated by semi-colons, the second just a semi-colon, telling Quest what to break the first list on.</p>\n</blockquote>\n<blockquote>\n<p>hat.inventoryverbs = Split(\"look at;Drop;Wear\", \";\")<br>\nThen when the hat is worn:</p>\n</blockquote>\n<blockquote>\n<p>hat.inventoryverbs = Split(\"look at;Remove\", \";\")<br>\nThat will not work if there are potentially other verbs that may or may not be there, and you are better off assign the attribute each time using `ListConbine:</p>\n</blockquote>\n<blockquote>\n<p>object.displayverbs = ListCombine(object.displayverbs, Split(\"Attack\"))<br>\nWhen you want to remove the verb, it should be safe to use list remove as you know the object has the list, given you set it yourself earlier. To be extra safe, check the list has the verb first.</p>\n</blockquote>\n<blockquote>\n<p>if (ListContains(object.displayverbs, \"Attack\")) {<br>\nlist remove (object.displayverbs, \"Attack\")<br>\n}</p>\n</blockquote>\n<p>https://docs.textadventures.co.uk/quest/display_verbs.html</p>\n<blockquote>\n<p>CommandLink<br>\nCommandLink (string command, string link text)<br>\nReturns a string containing the XML required to display a hyperlink. When the hyperlink is clicked, the specified player command will be run. For example:</p>\n</blockquote>\n<blockquote>\n<p>msg (CommandLink(\"undo\", \"Click here to undo the previous turn\"))<br>\noutputs a link titled “Click here to undo the previous turn” - when clicked, the “undo” player command is run.<br>\nSee also: ObjectLink</p>\n</blockquote>\n<p>https://docs.textadventures.co.uk/quest/functions/corelibrary/commandlink.html</p>\n\n",
      "PostDate": "2024-02-12T16:51:18.0669191Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
