{
  "Topic": {
    "TopicId": "3ap3gqnvd06wxnawdrtzjw",
    "ForumId": "10",
    "Title": "Giving Items to Inanimate Objects?",
    "LastUpdated": "2018-04-13T07:35:46.6323598Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ab2aaea9-d277-4484-adf6-9397fa248b2f",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Following recent discussions on 'take all' and the meaning of 'it', one other oddity I'd like to raise is the default response for 'give A to B' when B is inanimate. As inanimate objects can't 'want' anything, I would expect something like \"You can't do that\" rather than \"It doesn't want it\"?\r\n\r\nPerhaps a related issue is that 'animate' objects can only be male or female? Is there a case for introducing an 'other animate' type?",
      "EditableFormat": "markdown",
      "HTML": "<p>Following recent discussions on 'take all' and the meaning of 'it', one other oddity I'd like to raise is the default response for 'give A to B' when B is inanimate. As inanimate objects can't 'want' anything, I would expect something like \"You can't do that\" rather than \"It doesn't want it\"?</p>\n<p>Perhaps a related issue is that 'animate' objects can only be male or female? Is there a case for introducing an 'other animate' type?</p>\n\n",
      "PostDate": "2018-04-13T07:35:46.6323598Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41c7f0d7-84ee-4583-b862-19028d91f804",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...which could also be the default type of the player!",
      "EditableFormat": "markdown",
      "HTML": "<p>...which could also be the default type of the player!</p>\n\n",
      "PostDate": "2018-04-13T07:41:43.8233813Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fafc4bbd-8e01-48e6-b22e-364334d22251",
      "UserId": 327619,
      "Username": "-=Darchy=-",
      "AvatarUrl": "https://i.imgur.com/Q1Yd2jRb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In the case of a robot/android this would be another type of non-sex animate type that could be implemented.",
      "EditableFormat": "markdown",
      "HTML": "<p>In the case of a robot/android this would be another type of non-sex animate type that could be implemented.</p>\n\n",
      "PostDate": "2018-04-13T08:46:49.0117069Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5a79e407-4bbe-4046-9fcf-75872a4c2e72",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Being \"male\" determines that an object is referred to as \"he\".\r\nBeing \"female\" determines that an object is referred to as \"she\".\r\nBeing \"inanimate\" determines that an object is referred to as \"it\".\r\n\r\nWhat would \"other animate\" do that \"inanimate\" doesn't do already?\r\n\r\nIt's maybe not obvious, but these types only determine the *grammatical gender* of an object.\r\n\r\nI think \"It doesn't want it\" is a perfectly good response. If you try to give an object to a statue, or a mirror, or a rock, it makes perfect sense that you will be able to offer the item, but an inanimate recipient won't respond. The wording seems a bit silly in some cases, but in those cases the player was entering a silly command.\r\n\r\nOr another way to think about it: If there was a \"other animate\" option, where do you draw the line? Is a statue \"other animate\" or \"inanimate\"? You don't know until it moves. So Quest lets the player choose. If the player types \"put ring on statue\", they're treating it as inanimate, and the response line is appropriate. If the player types \"give ring to statue\", the player is assuming the statue is animate, and the response is appropriate.\r\n\r\nThe living-vs-static distinction, as far as Quest is concerned, is determined by what the player is trying to do. The \"inanimate\" type is just a flag that the object should be referred to as \"it\".",
      "EditableFormat": "markdown",
      "HTML": "<p>Being \"male\" determines that an object is referred to as \"he\".<br>\nBeing \"female\" determines that an object is referred to as \"she\".<br>\nBeing \"inanimate\" determines that an object is referred to as \"it\".</p>\n<p>What would \"other animate\" do that \"inanimate\" doesn't do already?</p>\n<p>It's maybe not obvious, but these types only determine the <em>grammatical gender</em> of an object.</p>\n<p>I think \"It doesn't want it\" is a perfectly good response. If you try to give an object to a statue, or a mirror, or a rock, it makes perfect sense that you will be able to offer the item, but an inanimate recipient won't respond. The wording seems a bit silly in some cases, but in those cases the player was entering a silly command.</p>\n<p>Or another way to think about it: If there was a \"other animate\" option, where do you draw the line? Is a statue \"other animate\" or \"inanimate\"? You don't know until it moves. So Quest lets the player choose. If the player types \"put ring on statue\", they're treating it as inanimate, and the response line is appropriate. If the player types \"give ring to statue\", the player is assuming the statue is animate, and the response is appropriate.</p>\n<p>The living-vs-static distinction, as far as Quest is concerned, is determined by what the player is trying to do. The \"inanimate\" type is just a flag that the object should be referred to as \"it\".</p>\n\n",
      "PostDate": "2018-04-13T10:49:19.7283943Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e3a2fb2c-7a85-45c0-8096-a6afd288d545",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">What would \"other animate\" do that \"inanimate\" doesn't do already?\r\n\r\nWithout the distinction, the only practical default response to an inanimate object being given an item is \"It doesn't want it\", which effectively brings the inanimate object to life! ...and, as a player, I may then be tempted to offer more items. \r\n\r\n...it also seems odd that, by default, the player is an 'inanimate object'. \r\n>Or another way to think about it: If there was an \"other animate\" option, where do you draw the line? Is a statue \"other animate\" or \"inanimate\"? You don't know until it moves. \r\n\r\nSorry, I don't follow this argument? What line do you mean? The game designer should be deciding if the statue is 'animate' or 'inanimate' and providing responses appropriately? The player finds out through interaction with the statue. I'm pointing out that the default response to 'give' is making all statues seem 'animate' regardless of the designer's intentions. ",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>What would \"other animate\" do that \"inanimate\" doesn't do already?</p>\n</blockquote>\n<p>Without the distinction, the only practical default response to an inanimate object being given an item is \"It doesn't want it\", which effectively brings the inanimate object to life! ...and, as a player, I may then be tempted to offer more items.</p>\n<p>...it also seems odd that, by default, the player is an 'inanimate object'.</p>\n<blockquote>\n<p>Or another way to think about it: If there was an \"other animate\" option, where do you draw the line? Is a statue \"other animate\" or \"inanimate\"? You don't know until it moves.</p>\n</blockquote>\n<p>Sorry, I don't follow this argument? What line do you mean? The game designer should be deciding if the statue is 'animate' or 'inanimate' and providing responses appropriately? The player finds out through interaction with the statue. I'm pointing out that the default response to 'give' is making all statues seem 'animate' regardless of the designer's intentions.</p>\n\n",
      "PostDate": "2018-04-13T13:01:18.2917203Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4ad0f0a7-53db-466c-9f29-343e1bf1efad",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I do not think we will be changing this, but if you want to do that for your game you can override the DefaultGive template to this:\r\n```\r\nDefaultGiveFunc(object1, object2)\r\n```\r\nThen create a function DefaultGiveFunc that returns a string, and has two attributes, obj1 and obj2. Then paste in this code:\r\n```\r\nif (DoesInherit(obj1, \"npc_type\")) {\r\n  return (WriteVerb(obj1, \"do\") + \" not want \" + obj2.article + \".\")\r\n}\r\nelse {\r\n  return (\"That doesn't work.\")\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>I do not think we will be changing this, but if you want to do that for your game you can override the DefaultGive template to this:</p>\n<pre><code>DefaultGiveFunc(object1, object2)\n</code></pre>\n<p>Then create a function DefaultGiveFunc that returns a string, and has two attributes, obj1 and obj2. Then paste in this code:</p>\n<pre><code>if (DoesInherit(obj1, \"npc_type\")) {\n  return (WriteVerb(obj1, \"do\") + \" not want \" + obj2.article + \".\")\n}\nelse {\n  return (\"That doesn't work.\")\n}\n</code></pre>\n\n",
      "PostDate": "2018-04-13T14:09:32.7836436Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a73878c9-3c16-4d78-93c9-3e80184d5440",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In the case of a robot/android this would be another type of non-sex animate type that could be implemented.\r\n\r\nWhen I make a generic robot type, I make it male (or female) but not named, then change the pronouns to \"it\" and \"its\".  \r\n\r\nThen I make it a surface and change the prefixes to \"which is carrying\" and \"It is carrying\", and set it to list children when examined.\r\n\r\nThen I set up Use/Give on it.  Under \"Give something to this\" I put ```msg(\"The robot has not been programmed to take things.\")```.   \r\n\r\nThen I add a \"speak to\" verb, which prints: ```The robot emits a series of \"blips\" and \"bloops\". ```  \r\n\r\nI add a take message: ```The robot is much too heavy to pick up.```\r\n\r\nFinally, I add Pixie's [NpcLib](https://github.com/ThePix/quest/wiki/Library:-Independent-NPCs) and the give the robot plenty of stuff to do during play.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In the case of a robot/android this would be another type of non-sex animate type that could be implemented.</p>\n</blockquote>\n<p>When I make a generic robot type, I make it male (or female) but not named, then change the pronouns to \"it\" and \"its\".</p>\n<p>Then I make it a surface and change the prefixes to \"which is carrying\" and \"It is carrying\", and set it to list children when examined.</p>\n<p>Then I set up Use/Give on it.  Under \"Give something to this\" I put <code>msg(\"The robot has not been programmed to take things.\")</code>.</p>\n<p>Then I add a \"speak to\" verb, which prints: <code>The robot emits a series of \"blips\" and \"bloops\".</code></p>\n<p>I add a take message: <code>The robot is much too heavy to pick up.</code></p>\n<p>Finally, I add Pixie's <a href=\"https://github.com/ThePix/quest/wiki/Library:-Independent-NPCs\">NpcLib</a> and the give the robot plenty of stuff to do during play.</p>\n\n",
      "PostDate": "2018-04-13T14:26:28.3948754Z",
      "LastEditDate": "2018-04-13T16:01:07.3076318Z",
      "link": null
    },
    {
      "PostId": "89d106da-a906-4741-989a-03b79b418e2f",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">I do not think we will be changing this\r\n\r\nIf I'm the only one who thinks this is an issue, that makes sense.\r\n\r\n>you can override the DefaultGive template\r\n\r\nI think you are overestimating my technical knowledge! Where and how exactly do I make that change? Does it mean tinkering with the published version of the game or can I do it within Quest (high level or code view)? ",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I do not think we will be changing this</p>\n</blockquote>\n<p>If I'm the only one who thinks this is an issue, that makes sense.</p>\n<blockquote>\n<p>you can override the DefaultGive template</p>\n</blockquote>\n<p>I think you are overestimating my technical knowledge! Where and how exactly do I make that change? Does it mean tinkering with the published version of the game or can I do it within Quest (high level or code view)?</p>\n\n",
      "PostDate": "2018-04-13T15:15:08.2541895Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a6c76a42-d3f9-464f-b36f-ccfc19f36a1f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Where and how exactly do I make that change? \r\n\r\nBest method:\r\nhttp://docs.textadventures.co.uk/quest/overriding.html\r\n\r\n---\r\nEasy out:\r\nhttps://github.com/KVonGit/QuestStuff/wiki/GIVE-TO-something-inanimate",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Where and how exactly do I make that change?</p>\n</blockquote>\n<p>Best method:<br>\nhttp://docs.textadventures.co.uk/quest/overriding.html</p>\n<hr>\n<p>Easy out:<br>\nhttps://github.com/KVonGit/QuestStuff/wiki/GIVE-TO-something-inanimate</p>\n\n",
      "PostDate": "2018-04-13T15:26:38.466611Z",
      "LastEditDate": "2018-04-13T16:04:05.8916748Z",
      "link": null
    },
    {
      "PostId": "a5a4a274-9db3-4dda-a164-c887be62cb1f",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks KV, but my focus here is simply to avoid scenery objects seeming more important than they really are. To bring two classic games up to date I added hundreds of scenery objects for everything mentioned in location descriptions (walls, paths, ceilings, dust, flowers, doors...). I would hate to mislead the player into wasting time interacting with any of these objects because of an animate default response. If there is an easy way to change the response in one place, I'll take that route.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks KV, but my focus here is simply to avoid scenery objects seeming more important than they really are. To bring two classic games up to date I added hundreds of scenery objects for everything mentioned in location descriptions (walls, paths, ceilings, dust, flowers, doors...). I would hate to mislead the player into wasting time interacting with any of these objects because of an animate default response. If there is an easy way to change the response in one place, I'll take that route.</p>\n\n",
      "PostDate": "2018-04-13T15:41:09.9230742Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d5782f04-204f-47ed-9701-524f64e5de8a",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry KV, my responses are a bit out of step! I've installed the code to change the default give response, and am happy with the result. Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry KV, my responses are a bit out of step! I've installed the code to change the default give response, and am happy with the result. Thanks!</p>\n\n",
      "PostDate": "2018-04-13T15:52:50.3361936Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "144d466f-3ed7-48c8-a9d9-903ff8259b6a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  If there is an easy way to change the response in one place, I'll take that route.\r\n\r\nI'm not quite sure I'm following you.\r\n\r\nIf you follow that link, it shows you how to add the code Pixie suggested in full code view.  You'd only need to do that once in each game.\r\n\r\n\r\n---\r\nIf you don't want to add that code to each game, you could create a library and add it to each game.\r\n\r\n\r\nGiveLib.aslx\r\n```\r\n<?xml version=\"1.0\"?>\r\n<library>\r\n  <dynamictemplate name=\"DefaultGive\">DefaultGiveFunc(object1, object2)</dynamictemplate>\r\n\r\n  <function name=\"DefaultGiveFunc\" parameters=\"object1, object2\" type=\"string\">\r\n    if (DoesInherit(object1, \"npc_type\")) {\r\n      return (WriteVerb(object1, \"do\") + \" not want \" + object2.article + \".\")\r\n    }\r\n    else {\r\n      return (\"That doesn't work.\")\r\n    }\r\n  </function>\r\n</library>\r\n```\r\n\r\n---\r\nIf adding a library to every game seems like too much work, you'd have to edit the core files in the Quest program's directory in the Program Files directory (or the Program Files (x86) directory) in your computer.  **This is dangerous** (especially if you don't know how everything in that directory works, individually and together), plus you'd need Administrative Privileges in Windows to do that (which I believe most people do, but it's really a 50/50 shot; you may or may not be the master of your PC).\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If there is an easy way to change the response in one place, I'll take that route.</p>\n</blockquote>\n<p>I'm not quite sure I'm following you.</p>\n<p>If you follow that link, it shows you how to add the code Pixie suggested in full code view.  You'd only need to do that once in each game.</p>\n<hr>\n<p>If you don't want to add that code to each game, you could create a library and add it to each game.</p>\n<p>GiveLib.aslx</p>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;library&gt;\n  &lt;dynamictemplate name=\"DefaultGive\"&gt;DefaultGiveFunc(object1, object2)&lt;/dynamictemplate&gt;\n\n  &lt;function name=\"DefaultGiveFunc\" parameters=\"object1, object2\" type=\"string\"&gt;\n    if (DoesInherit(object1, \"npc_type\")) {\n      return (WriteVerb(object1, \"do\") + \" not want \" + object2.article + \".\")\n    }\n    else {\n      return (\"That doesn't work.\")\n    }\n  &lt;/function&gt;\n&lt;/library&gt;\n</code></pre>\n<hr>\n<p>If adding a library to every game seems like too much work, you'd have to edit the core files in the Quest program's directory in the Program Files directory (or the Program Files (x86) directory) in your computer.  <strong>This is dangerous</strong> (especially if you don't know how everything in that directory works, individually and together), plus you'd need Administrative Privileges in Windows to do that (which I believe most people do, but it's really a 50/50 shot; you may or may not be the master of your PC).</p>\n\n",
      "PostDate": "2018-04-13T15:56:45.5077679Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "667cb15f-95b2-4adc-bc40-53dc2c3b8305",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Sorry KV, my responses are a bit out of step! I've installed the code to change the default give response, and am happy with the result. Thanks!\r\n\r\nYou're cool, DavyB!  Glad you got it working!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Sorry KV, my responses are a bit out of step! I've installed the code to change the default give response, and am happy with the result. Thanks!</p>\n</blockquote>\n<p>You're cool, DavyB!  Glad you got it working!</p>\n\n",
      "PostDate": "2018-04-13T15:58:06.4140124Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
