{
  "Topic": {
    "TopicId": "l5shmzqm00_actlrsuj19q",
    "ForumId": "10",
    "Title": "Creating a basic function call...",
    "LastUpdated": "2017-09-23T18:07:37.2341974Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a1724d63-1894-4637-b25c-27eaaa0c21b8",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "HI,\r\n\r\nI'm looking to redesign my \"buy\" command, and figured a few function calls might greatly reduce the amount of needed code. Problem is that for whatever reason, even though I set the function to have a return value of integer and stated what formal parameter I'd want to return, it doesn't return it.\r\n\r\nSo, before I post the function call code this is what is supposed to happen before it:\r\n1. You start with 300 soul shards (currency)\r\n2. You don't start with the spell (which is what the function checks for)\r\n3. The debug command calls the function, and uses the variable player.SoulShards to replace CurrentShards.\r\n\r\nFunction Call code:\r\n```if (Spellbook.KnowArcaneZap = false) {\r\n  ShardCost = 100\r\n  CurrentShards = CurrentShards - ShardCost\r\n  Spellbook.KnowArcaneZap = true\r\n  return (CurrentShards)\r\n}\r\n```\r\n\r\nNow it properly gives the spell, and then sets my player.SoulShards to 0 for some reason. \r\n\r\nThis is my first foray into Quest functions, and I don't know what I'm doing wrong. And the quest documentation isn't the most helpful either.\r\n\r\nAny help would be appreciated.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>HI,</p>\n<p>I'm looking to redesign my \"buy\" command, and figured a few function calls might greatly reduce the amount of needed code. Problem is that for whatever reason, even though I set the function to have a return value of integer and stated what formal parameter I'd want to return, it doesn't return it.</p>\n<p>So, before I post the function call code this is what is supposed to happen before it:</p>\n<ol>\n<li>You start with 300 soul shards (currency)</li>\n<li>You don't start with the spell (which is what the function checks for)</li>\n<li>The debug command calls the function, and uses the variable player.SoulShards to replace CurrentShards.</li>\n</ol>\n<p>Function Call code:</p>\n<pre><code>  ShardCost = 100\n  CurrentShards = CurrentShards - ShardCost\n  Spellbook.KnowArcaneZap = true\n  return (CurrentShards)\n}\n</code></pre>\n<p>Now it properly gives the spell, and then sets my player.SoulShards to 0 for some reason.</p>\n<p>This is my first foray into Quest functions, and I don't know what I'm doing wrong. And the quest documentation isn't the most helpful either.</p>\n<p>Any help would be appreciated.</p>\n\n",
      "PostDate": "2017-09-23T18:07:37.2341974Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29b6ff90-5ee8-4df9-a472-f9341c291618",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's some examples (didn't do every combination, but you should get the idea... if not, ask for help!):\r\n\r\n(the main usual issue for people new to coding: they don't realize that something must be done with a returned value, it/data can't just \"float around\" in code, not doing anything / not being used by anything. A returned value MUST be stored in a VARIABLE or be used as an argument/input in a Function/Command/Object+Script_Attribute+Delgate call/usage)\r\n\r\n```\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"example_string_attribute\" type=\"string\">unknown</attr>\r\n  <attr name=\"example_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"example_boolean_attribute\" type=\"boolean\">false</attr>\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    no_return_value_no_parameter_function\r\n\r\n    game.example_string_attribute = return_string_value_function\r\n    msg (game.example_string_attribute)\r\n    msg (return_string_value_function)\r\n\r\n    game.example_string_attribute = return_string_value_function_2\r\n    msg (game.example_string_attribute)\r\n    msg (return_string_value_function_2)\r\n\r\n    game.example_integer_attribute = return_integer_value_function + 5\r\n    msg (game.example_integer_attribute)\r\n    msg (return_integer_value_function)\r\n\r\n    game.example_integer_attribute = return_integer_value_function_2 + 5\r\n    msg (game.example_integer_attribute)\r\n    msg (return_integer_value_function_2)\r\n\r\n    game.example_boolean_attribute = return_boolean_value_function\r\n    msg (game.example_boolean_attribute)\r\n    msg (return_boolean_value_function)\r\n\r\n    game.example_boolean_attribute = return_boolean_value_function_2\r\n    msg (game.example_boolean_attribute)\r\n    msg (return_boolean_value_function_2)\r\n\r\n    game.example_boolean_attribute = return_boolean_value_function_3\r\n    msg (game.example_boolean_attribute)\r\n    msg (return_boolean_value_function_3)\r\n\r\n    string_parameter_function (\"H\", \"K\")\r\n\r\n    integer_parameter_function (37, 21)\r\n\r\n    boolean_parameter_function (true, false)\r\n\r\n    boolean_parameter_function_2 (true, false)\r\n\r\n    game.example_integer_attribute = return_integer_value_and_parameter_function\r\n    msg (game.example_integer_attribute)\r\n    msg (return_integer_value_and_parameter_function)\r\n\r\n  </attr>\r\n</game>\r\n\r\n<function name=\"no_return_value_no_parameter_function\">\r\n  msg (\"hi\")\r\n</function>\r\n\r\n<function name=\"return_string_value_function\" type=\"string\">\r\n  return (\"bye\")\r\n</function>\r\n\r\n<function name=\"return_string_value_function_2\" type=\"string\">\r\n  example_string_variable = \"okay\"\r\n  return (example_string_variable)\r\n</function>\r\n\r\n<function name=\"return_integer_value_function\" type=\"int\">\r\n  return (10)\r\n</function>\r\n\r\n<function name=\"return_integer_value_function_2\" type=\"int\">\r\n  example_integer_variable = 7\r\n  return (example_integer_variable)\r\n</function>\r\n\r\n<function name=\"return_boolean_value_function\" type=\"boolean\">\r\n  return (true)\r\n</function>\r\n\r\n<function name=\"return_boolean_value_function_2\" type=\"boolean\">\r\n  return (false)\r\n</function>\r\n\r\n<function name=\"return_boolean_value_function_3\" type=\"boolean\">\r\n  example_boolean_variable = true\r\n  return (example_boolean_variable)\r\n</function>\r\n\r\n<function name=\"string_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\">\r\n  msg (example_parameter_1 + example_parameter_2)\r\n</function>\r\n\r\n<function name=\"integer_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\">\r\n  msg (example_parameter_1 + example_parameter_2)\r\n</function>\r\n\r\n<function name=\"boolean_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\">\r\n  msg (example_parameter_1 and example_parameter_2)\r\n</function>\r\n\r\n<function name=\"boolean_parameter_function_2\" parameters=\"example_parameter_1, example_parameter_2\">\r\n  msg (example_parameter_1 or example_parameter_2)\r\n</function>\r\n\r\n<function name=\"return_integer_value_and_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\" type=\"int\">\r\n  return (example_parameter_1 + example_parameter_2)\r\n</function>",
      "EditableFormat": "markdown",
      "HTML": "<p>here's some examples (didn't do every combination, but you should get the idea... if not, ask for help!):</p>\n<p>(the main usual issue for people new to coding: they don't realize that something must be done with a returned value, it/data can't just \"float around\" in code, not doing anything / not being used by anything. A returned value MUST be stored in a VARIABLE or be used as an argument/input in a Function/Command/Object+Script_Attribute+Delgate call/usage)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"example_string_attribute\" type=\"string\"&gt;unknown&lt;/attr&gt;\n  &lt;attr name=\"example_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"example_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    no_return_value_no_parameter_function\n\n    game.example_string_attribute = return_string_value_function\n    msg (game.example_string_attribute)\n    msg (return_string_value_function)\n\n    game.example_string_attribute = return_string_value_function_2\n    msg (game.example_string_attribute)\n    msg (return_string_value_function_2)\n\n    game.example_integer_attribute = return_integer_value_function + 5\n    msg (game.example_integer_attribute)\n    msg (return_integer_value_function)\n\n    game.example_integer_attribute = return_integer_value_function_2 + 5\n    msg (game.example_integer_attribute)\n    msg (return_integer_value_function_2)\n\n    game.example_boolean_attribute = return_boolean_value_function\n    msg (game.example_boolean_attribute)\n    msg (return_boolean_value_function)\n\n    game.example_boolean_attribute = return_boolean_value_function_2\n    msg (game.example_boolean_attribute)\n    msg (return_boolean_value_function_2)\n\n    game.example_boolean_attribute = return_boolean_value_function_3\n    msg (game.example_boolean_attribute)\n    msg (return_boolean_value_function_3)\n\n    string_parameter_function (\"H\", \"K\")\n\n    integer_parameter_function (37, 21)\n\n    boolean_parameter_function (true, false)\n\n    boolean_parameter_function_2 (true, false)\n\n    game.example_integer_attribute = return_integer_value_and_parameter_function\n    msg (game.example_integer_attribute)\n    msg (return_integer_value_and_parameter_function)\n\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;function name=\"no_return_value_no_parameter_function\"&gt;\n  msg (\"hi\")\n&lt;/function&gt;\n\n&lt;function name=\"return_string_value_function\" type=\"string\"&gt;\n  return (\"bye\")\n&lt;/function&gt;\n\n&lt;function name=\"return_string_value_function_2\" type=\"string\"&gt;\n  example_string_variable = \"okay\"\n  return (example_string_variable)\n&lt;/function&gt;\n\n&lt;function name=\"return_integer_value_function\" type=\"int\"&gt;\n  return (10)\n&lt;/function&gt;\n\n&lt;function name=\"return_integer_value_function_2\" type=\"int\"&gt;\n  example_integer_variable = 7\n  return (example_integer_variable)\n&lt;/function&gt;\n\n&lt;function name=\"return_boolean_value_function\" type=\"boolean\"&gt;\n  return (true)\n&lt;/function&gt;\n\n&lt;function name=\"return_boolean_value_function_2\" type=\"boolean\"&gt;\n  return (false)\n&lt;/function&gt;\n\n&lt;function name=\"return_boolean_value_function_3\" type=\"boolean\"&gt;\n  example_boolean_variable = true\n  return (example_boolean_variable)\n&lt;/function&gt;\n\n&lt;function name=\"string_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\"&gt;\n  msg (example_parameter_1 + example_parameter_2)\n&lt;/function&gt;\n\n&lt;function name=\"integer_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\"&gt;\n  msg (example_parameter_1 + example_parameter_2)\n&lt;/function&gt;\n\n&lt;function name=\"boolean_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\"&gt;\n  msg (example_parameter_1 and example_parameter_2)\n&lt;/function&gt;\n\n&lt;function name=\"boolean_parameter_function_2\" parameters=\"example_parameter_1, example_parameter_2\"&gt;\n  msg (example_parameter_1 or example_parameter_2)\n&lt;/function&gt;\n\n&lt;function name=\"return_integer_value_and_parameter_function\" parameters=\"example_parameter_1, example_parameter_2\" type=\"int\"&gt;\n  return (example_parameter_1 + example_parameter_2)\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-23T20:42:47.6979189Z",
      "LastEditDate": "2017-09-23T20:47:33.8696985Z",
      "link": null
    },
    {
      "PostId": "8b91989c-dcd8-4a25-b816-5c67c1108df9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Objects and their Script Attributes + Delegates:\r\n\r\nin quest, Delegates looks and acts like a Prototype for a Function (if you know programming languages), except it gives an Object's Script Attribute the same functionality (return values, and arguments/parameters/inputs) as a Function. Now that I learned how to use Delegates, I like them a lot better than global Functions, as Objects are much more powerful (encapsulation and organization), compared to (global) Functions.\r\n\r\n```\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"Core.aslx\" />\r\n\r\n<delegate name=\"two_integer_parameters_and_return_value_delegate\" type=\"int\" parameters=\"integer_parameter_1, integer_parameter_2\" />\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"example_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n   game.example_integer_attribute = do (arithmetic_object, \"addition_of_two_integers_script_attribute\", 6, 2)\r\n   msg (game.example_integer_attribute)\r\n\r\n   game.example_integer_attribute = do (arithmetic_object, \"subtraction_of_two_integers_script_attribute\", 6, 2)\r\n   msg (game.example_integer_attribute)\r\n\r\n   game.example_integer_attribute = do (arithmetic_object, \"multiplication_of_two_integers_script_attribute\", 6, 2)\r\n   msg (game.example_integer_attribute)\r\n\r\n   game.example_integer_attribute = do (arithmetic_object, \"division_of_two_integers_script_attribute\", 6, 2)\r\n   msg (game.example_integer_attribute)\r\n\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"arithmetic_object\">\r\n\r\n  <attr name=\"addition_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\">\r\n    return (integer_parameter_1 + integer_parameter_2)\r\n  </attr>\r\n\r\n  <attr name=\"multiplication_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\">\r\n    return (integer_parameter_1 * integer_parameter_2)\r\n  </attr>\r\n\r\n  <attr name=\"subtraction_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\">\r\n    return (integer_parameter_1 - integer_parameter_2)\r\n  </attr>\r\n\r\n  <attr name=\"division_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\">\r\n    return (integer_parameter_1 / integer_parameter_2)\r\n  </attr>\r\n\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Objects and their Script Attributes + Delegates:</p>\n<p>in quest, Delegates looks and acts like a Prototype for a Function (if you know programming languages), except it gives an Object's Script Attribute the same functionality (return values, and arguments/parameters/inputs) as a Function. Now that I learned how to use Delegates, I like them a lot better than global Functions, as Objects are much more powerful (encapsulation and organization), compared to (global) Functions.</p>\n<pre><code>&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"Core.aslx\" /&gt;\n\n&lt;delegate name=\"two_integer_parameters_and_return_value_delegate\" type=\"int\" parameters=\"integer_parameter_1, integer_parameter_2\" /&gt;\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"example_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n   game.example_integer_attribute = do (arithmetic_object, \"addition_of_two_integers_script_attribute\", 6, 2)\n   msg (game.example_integer_attribute)\n\n   game.example_integer_attribute = do (arithmetic_object, \"subtraction_of_two_integers_script_attribute\", 6, 2)\n   msg (game.example_integer_attribute)\n\n   game.example_integer_attribute = do (arithmetic_object, \"multiplication_of_two_integers_script_attribute\", 6, 2)\n   msg (game.example_integer_attribute)\n\n   game.example_integer_attribute = do (arithmetic_object, \"division_of_two_integers_script_attribute\", 6, 2)\n   msg (game.example_integer_attribute)\n\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"arithmetic_object\"&gt;\n\n  &lt;attr name=\"addition_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\"&gt;\n    return (integer_parameter_1 + integer_parameter_2)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"multiplication_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\"&gt;\n    return (integer_parameter_1 * integer_parameter_2)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"subtraction_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\"&gt;\n    return (integer_parameter_1 - integer_parameter_2)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"division_of_two_integers_script_attribute\" type=\"two_integer_parameters_and_return_value_delegate\"&gt;\n    return (integer_parameter_1 / integer_parameter_2)\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-23T20:59:32.6176682Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4e2b406d-d223-4930-b4b2-06c6bcc49d32",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Perhaps I should have also mentioned this code:\r\n\r\n```BuySpells (player.SoulShards)\r\nplayer.SoulShards = BuySpells(player.SoulShards)\r\nmsg (\"You buy the spell Arcane Zap. Your current Soul Shards are = \" + player.SoulShards + \".\")\r\n```\r\n\r\nThe command calls the function, BuySpells, with player.SoulShards replacing the formal parameter and then afterwards my current Soul Shards is turned into the value that CurrentShards in the function; the value that was supposed to be returned.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Perhaps I should have also mentioned this code:</p>\n<pre><code>player.SoulShards = BuySpells(player.SoulShards)\nmsg (\"You buy the spell Arcane Zap. Your current Soul Shards are = \" + player.SoulShards + \".\")\n</code></pre>\n<p>The command calls the function, BuySpells, with player.SoulShards replacing the formal parameter and then afterwards my current Soul Shards is turned into the value that CurrentShards in the function; the value that was supposed to be returned.</p>\n\n",
      "PostDate": "2017-09-23T21:46:32.7553954Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "563b54c2-78a8-4d78-94b0-a8063a0e8ce4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@lordpalandus: The code you posted looks fine. If it doesn't behave as expected, I'd think the error is elsewhere.\r\n\r\nCan you show us the whole function, and the line that calls it?",
      "EditableFormat": "markdown",
      "HTML": "<p>@lordpalandus: The code you posted looks fine. If it doesn't behave as expected, I'd think the error is elsewhere.</p>\n<p>Can you show us the whole function, and the line that calls it?</p>\n\n",
      "PostDate": "2017-09-23T21:49:03.1063093Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6645cb1-3b46-4540-8cd5-29d96676d0f3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, replied at around the same time.\r\nThat code snippet also looks fine; so I think the issue must be elsewhere in the function.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, replied at around the same time.<br>\nThat code snippet also looks fine; so I think the issue must be elsewhere in the function.</p>\n\n",
      "PostDate": "2017-09-23T21:53:40.6027343Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "31cbb1c7-e2ba-4dd5-ab44-c2e373440150",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oops didn't post the full command (named debug):\r\n\r\n```\r\nBuySpells (player.SoulShards)\r\nplayer.SoulShards = BuySpells(player.SoulShards)\r\nmsg (\"You buy the spell Arcane Zap. Your current Soul Shards are = \" + player.SoulShards + \".\")\r\n```\r\n\r\nThen the actual stuff that happens in the function call:\r\n\r\n```\r\nif (Spellbook.KnowArcaneZap = false) {\r\n  ShardCost = 100\r\n  CurrentShards = CurrentShards - ShardCost\r\n  Spellbook.KnowArcaneZap = true\r\n  return (CurrentShards)\r\n}\r\n```\r\n\r\nTo me it should be working; it takes player.SoulShards to replace the formal parameter CurrentShards.\r\n\r\nBut for some reason the returned value isn't being returned or something. \r\n\r\nThat is literally all the code being used in the function call and the command that calls the function.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Oops didn't post the full command (named debug):</p>\n<pre><code>BuySpells (player.SoulShards)\nplayer.SoulShards = BuySpells(player.SoulShards)\nmsg (\"You buy the spell Arcane Zap. Your current Soul Shards are = \" + player.SoulShards + \".\")\n</code></pre>\n<p>Then the actual stuff that happens in the function call:</p>\n<pre><code>if (Spellbook.KnowArcaneZap = false) {\n  ShardCost = 100\n  CurrentShards = CurrentShards - ShardCost\n  Spellbook.KnowArcaneZap = true\n  return (CurrentShards)\n}\n</code></pre>\n<p>To me it should be working; it takes player.SoulShards to replace the formal parameter CurrentShards.</p>\n<p>But for some reason the returned value isn't being returned or something.</p>\n<p>That is literally all the code being used in the function call and the command that calls the function.</p>\n\n",
      "PostDate": "2017-09-23T22:18:55.7489306Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e23bf53-b232-44fc-8178-2ca39e3e3d38",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Can you show us the function header for BuySpells() as that may be something that can cause issues and you seem to be overlooking it.\r\nFor me personally I actually would pass the entire player object through and then extract the contents of the attribute inside the function, you could then update the player object there too.",
      "EditableFormat": "markdown",
      "HTML": "<p>Can you show us the function header for BuySpells() as that may be something that can cause issues and you seem to be overlooking it.<br>\nFor me personally I actually would pass the entire player object through and then extract the contents of the attribute inside the function, you could then update the player object there too.</p>\n\n",
      "PostDate": "2017-09-23T22:22:30.6923965Z",
      "LastEditDate": "2017-09-23T22:25:28.4032161Z",
      "link": null
    },
    {
      "PostId": "e18f549a-77e9-43c6-ab1b-cee17cabff44",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "With regard to your current issue. If you call that command when the attribute `Spellbook.KnowArcaneZap` exists and is false, it will set it to true and reduce the player's soulshards by 100.\r\nIf you call it when `Spellbook.KnowArcaneZap` is already true, it will not change it, but will still display the messae saying you learned it, and will set the player's soul shards to zero (because the `return` statement is inside the `if` block so is never reached).",
      "EditableFormat": "markdown",
      "HTML": "<p>With regard to your current issue. If you call that command when the attribute <code>Spellbook.KnowArcaneZap</code> exists and is false, it will set it to true and reduce the player's soulshards by 100.<br>\nIf you call it when <code>Spellbook.KnowArcaneZap</code> is already true, it will not change it, but will still display the messae saying you learned it, and will set the player's soul shards to zero (because the <code>return</code> statement is inside the <code>if</code> block so is never reached).</p>\n\n",
      "PostDate": "2017-09-23T22:42:15.9329665Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a0b42ef9-299c-473a-a254-fddebed8073d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(If you don't mind me poking my nose in, I'd suggest a more practical organisation would be to have a function `BuySpell` which takes a spell name as its parameter. It seems redundant to pass in player.SoulShards as a parameter, because I haven't seen anything in your game that suggests spells are ever bought using points from a different pool.\r\n\r\nIf I was working on this, the function would look something like…\r\n```\r\n<function name=\"BuySpell\" parameters=\"SpellName\" type=\"boolean\">\r\n  ShortSpellName = Replace (SpellName, \" \", \"\")\r\n  if (GetBoolean (Spellbook, \"Known\"+ShortSpellName)) {\r\n    msg (\"You already have the spell \"+SpellName)\r\n    return (false)\r\n  }\r\n  cost = GetSpellCost(SpellName)\r\n  if (cost = -1) {\r\n    return (false)\r\n  }\r\n  if (cost > player.SoulShards) {\r\n    msg (SpellName+\" costs \"+cost+\" Soul Shards, but you only have \"+player.SoulShards+\".\")\r\n    return (false)\r\n  }\r\n  player.SoulShards = player.SoulShards - cost\r\n  set (Spellbook, \"Known\"+ShortSpellName, true)\r\n  msg (\"You buy the spell \"+SpellName+\". Your current Soul Shards are = \" + player.SoulShards + \".\")\r\n  return (true)\r\n</function>\r\n\r\n<function name=\"GetSpellCost\" parameters=\"SpellName\" type=\"integer\">\r\n  ShortSpellName = Replace (SpellName, \" \", \"\")\r\n  switch (ShortSpellName) {\r\n    case (\"ArcaneZap\", \"AnotherSpell\", \"ListOfSpellsThatCost100\", \"SomeSpell\") {\r\n      return (100)\r\n    }\r\n    case (\"MorePowerfulSpell\", \"TheseAllCost200\", \"SomeOtherSpell\") {\r\n      return (200)\r\n    }\r\n    case (\"SuperUberSpell\") {\r\n      return (1000)\r\n    }\r\n    default {\r\n      msg (\"there isn't a spell called \"+SpellName)\r\n      return (-1)\r\n    }\r\n  }\r\n</function>\r\n```\r\nJust off the top of my head; hopefully you can see the logic there)",
      "EditableFormat": "markdown",
      "HTML": "<p>(If you don't mind me poking my nose in, I'd suggest a more practical organisation would be to have a function <code>BuySpell</code> which takes a spell name as its parameter. It seems redundant to pass in player.SoulShards as a parameter, because I haven't seen anything in your game that suggests spells are ever bought using points from a different pool.</p>\n<p>If I was working on this, the function would look something like…</p>\n<pre><code>&lt;function name=\"BuySpell\" parameters=\"SpellName\" type=\"boolean\"&gt;\n  ShortSpellName = Replace (SpellName, \" \", \"\")\n  if (GetBoolean (Spellbook, \"Known\"+ShortSpellName)) {\n    msg (\"You already have the spell \"+SpellName)\n    return (false)\n  }\n  cost = GetSpellCost(SpellName)\n  if (cost = -1) {\n    return (false)\n  }\n  if (cost &gt; player.SoulShards) {\n    msg (SpellName+\" costs \"+cost+\" Soul Shards, but you only have \"+player.SoulShards+\".\")\n    return (false)\n  }\n  player.SoulShards = player.SoulShards - cost\n  set (Spellbook, \"Known\"+ShortSpellName, true)\n  msg (\"You buy the spell \"+SpellName+\". Your current Soul Shards are = \" + player.SoulShards + \".\")\n  return (true)\n&lt;/function&gt;\n\n&lt;function name=\"GetSpellCost\" parameters=\"SpellName\" type=\"integer\"&gt;\n  ShortSpellName = Replace (SpellName, \" \", \"\")\n  switch (ShortSpellName) {\n    case (\"ArcaneZap\", \"AnotherSpell\", \"ListOfSpellsThatCost100\", \"SomeSpell\") {\n      return (100)\n    }\n    case (\"MorePowerfulSpell\", \"TheseAllCost200\", \"SomeOtherSpell\") {\n      return (200)\n    }\n    case (\"SuperUberSpell\") {\n      return (1000)\n    }\n    default {\n      msg (\"there isn't a spell called \"+SpellName)\n      return (-1)\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>Just off the top of my head; hopefully you can see the logic there)</p>\n\n",
      "PostDate": "2017-09-23T23:01:22.3233574Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "91cfe204-f950-4b53-bf09-0271c0ceb85e",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do I show you the function header? When I select all the code bits in the UI and hit code view, the code I posted is all the stuff selected.\r\n\r\nWell, with the function I posted, I did it with a race that doesn't start with Arcane Zap, so its false by default. However, it sets my Soul Shards to 0 after calling the function. It doesn't reduce it by 100, it reduces it by effectively 300; or it multiplies by 0 whatever is currently stored in my player.SoulShards variable. \r\n\r\nThe way I have spells and spell names setup is quite a bit more complex than what you are assuming. Spells in my game are setup in this fashion:\r\n\r\n1. The spellbook has a Boolean variable called KnowArcaneZap. If it is false, you cannot cast the spell. If it is true, then you can. \r\n2. All spells in the spellbook default to false. You learn spells by buying them or finding a spellbook as loot, and in either case, will set the Boolean for the spellbook, to true.\r\n3. Once the spell is known, you cast it by using one of two commands = cast #text# or cast #text# at #object#. Damage spells use the cast spell at target command, whereas buffs, or indirect casting spells use cast spell command.\r\n4. The name of the spell, does nothing, except is used to navigate the switches and if-else conditionals until the spell is actually cast, mana points are depleted and the effect of the spell occurs. \r\n\r\nThat is in a nutshell how my casting system works. There may be more elegant ways of casting spells, but after spending about 4-5 months devising, designing, and developing this specific spellcasting system, I'm unsure of how it could be done better. Each spell is not an object, as I've found that the way I do spells, they don't need to be... plus as the quest engine only allows you to do stuff to objects if they are visible, I didn't want the player's inventory to be bloated with spell objects. ",
      "EditableFormat": "markdown",
      "HTML": "<p>How do I show you the function header? When I select all the code bits in the UI and hit code view, the code I posted is all the stuff selected.</p>\n<p>Well, with the function I posted, I did it with a race that doesn't start with Arcane Zap, so its false by default. However, it sets my Soul Shards to 0 after calling the function. It doesn't reduce it by 100, it reduces it by effectively 300; or it multiplies by 0 whatever is currently stored in my player.SoulShards variable.</p>\n<p>The way I have spells and spell names setup is quite a bit more complex than what you are assuming. Spells in my game are setup in this fashion:</p>\n<ol>\n<li>The spellbook has a Boolean variable called KnowArcaneZap. If it is false, you cannot cast the spell. If it is true, then you can.</li>\n<li>All spells in the spellbook default to false. You learn spells by buying them or finding a spellbook as loot, and in either case, will set the Boolean for the spellbook, to true.</li>\n<li>Once the spell is known, you cast it by using one of two commands = cast #text# or cast #text# at #object#. Damage spells use the cast spell at target command, whereas buffs, or indirect casting spells use cast spell command.</li>\n<li>The name of the spell, does nothing, except is used to navigate the switches and if-else conditionals until the spell is actually cast, mana points are depleted and the effect of the spell occurs.</li>\n</ol>\n<p>That is in a nutshell how my casting system works. There may be more elegant ways of casting spells, but after spending about 4-5 months devising, designing, and developing this specific spellcasting system, I'm unsure of how it could be done better. Each spell is not an object, as I've found that the way I do spells, they don't need to be... plus as the quest engine only allows you to do stuff to objects if they are visible, I didn't want the player's inventory to be bloated with spell objects.</p>\n\n",
      "PostDate": "2017-09-24T00:37:41.8094692Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6927930b-d2de-4864-9fc9-3215c6cf9500",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n--------------------\r\n\r\nterminology:\r\n\r\n```\r\n// Function's 'definition' (setup / creation):\r\n\r\n<function name=\"example_function\" parameters=\"example_parameter\" type=\"string\"> <!-- Function's 'header/signature' (special parameters/attributes and etc, starting tag block line) -->\r\n  // Function's 'body' (contents: scripting):\r\n  return (example_parameter)\r\n</function>\r\n\r\n// Function's call/usage/activation/execution, scripting example:\r\n\r\ngame.example_string_attribute = example_function (\"hi\")\r\n```\r\n\r\n----------------\r\n\r\nif you're using only the web/on-line version, then you can't get at the full game code to see your Function (unless you download your game). You can click on your Function (in the left side's \"tree of stuff\"), and you'll have to look at (and tell/post to us): what are your adding parameters' names, if your Function has a return value and what type is it, and lastly, your Function's scripting (its body). Lastly, you then got to tell/post us, the Function call/usage scripting lines of it.\r\n\r\n------------\r\n\r\notherwise, there's a notepaper like button in the menu bar at the top of the screen, this is a toggle between the GUI/Editor mode and Code View (this is the full game code) mode. Or, you can just right click on your game file and open it up with a text editor software (notepad, wordpad, notepad++, Apple: text editor, etc). You then just find your Function in your game code.\r\n\r\n-----------------------\r\n\r\nThere's also the individual scripting note-paper-like button on the popup window in the middle of the screen for individual scripting Elements (Verbs, Functions, Commands, etc), that lets you go into code view only for that specific scripting Element's scripting (body).",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>terminology:</p>\n<pre><code>// Function's 'definition' (setup / creation):\n\n&lt;function name=\"example_function\" parameters=\"example_parameter\" type=\"string\"&gt; &lt;!-- Function's 'header/signature' (special parameters/attributes and etc, starting tag block line) --&gt;\n  // Function's 'body' (contents: scripting):\n  return (example_parameter)\n&lt;/function&gt;\n\n// Function's call/usage/activation/execution, scripting example:\n\ngame.example_string_attribute = example_function (\"hi\")\n</code></pre>\n<hr>\n<p>if you're using only the web/on-line version, then you can't get at the full game code to see your Function (unless you download your game). You can click on your Function (in the left side's \"tree of stuff\"), and you'll have to look at (and tell/post to us): what are your adding parameters' names, if your Function has a return value and what type is it, and lastly, your Function's scripting (its body). Lastly, you then got to tell/post us, the Function call/usage scripting lines of it.</p>\n<hr>\n<p>otherwise, there's a notepaper like button in the menu bar at the top of the screen, this is a toggle between the GUI/Editor mode and Code View (this is the full game code) mode. Or, you can just right click on your game file and open it up with a text editor software (notepad, wordpad, notepad++, Apple: text editor, etc). You then just find your Function in your game code.</p>\n<hr>\n<p>There's also the individual scripting note-paper-like button on the popup window in the middle of the screen for individual scripting Elements (Verbs, Functions, Commands, etc), that lets you go into code view only for that specific scripting Element's scripting (body).</p>\n\n",
      "PostDate": "2017-09-24T03:10:44.2052017Z",
      "LastEditDate": "2017-09-24T03:15:20.2557878Z",
      "link": null
    },
    {
      "PostId": "09cc46f1-49ba-4e83-a03f-c97866dba1ff",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">How do I show you the function header?\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30779152-132851f4-a0ae-11e7-88c7-d75578f63b04.png)\r\n\r\n---\r\nIf you're online, you can download the entire game's .aslx file, then open that in a text editor, and copy and paste the whole thing here.  (Or to a GitHub Gist, if it's really long.  Then just drop a link to the Gist here.)\r\n\r\n---\r\nIf you have the desktop editor:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/30779174-ac3b752e-a0ae-11e7-8369-ed9dd85bac7a.png)\r\n\r\n\r\n---\r\nThat will get you into the full code view.\r\n\r\n```CTRL+A```\r\n```CTRL+C```\r\n\r\nThen come back here and:\r\n\r\n<pre><code>\r\n```\r\nCTRL+V\r\n```\r\n</code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>How do I show you the function header?</p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30779152-132851f4-a0ae-11e7-88c7-d75578f63b04.png\" alt=\"image\"></p>\n<hr>\n<p>If you're online, you can download the entire game's .aslx file, then open that in a text editor, and copy and paste the whole thing here.  (Or to a GitHub Gist, if it's really long.  Then just drop a link to the Gist here.)</p>\n<hr>\n<p>If you have the desktop editor:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/30779174-ac3b752e-a0ae-11e7-8369-ed9dd85bac7a.png\" alt=\"image\"></p>\n<hr>\n<p>That will get you into the full code view.</p>\n<p><code>CTRL+A</code><br>\n<code>CTRL+C</code></p>\n<p>Then come back here and:</p>\n<pre><code>\n```\nCTRL+V\n```\n</code></pre>\n\n",
      "PostDate": "2017-09-24T03:27:10.4559322Z",
      "LastEditDate": "2017-09-24T03:31:31.5490489Z",
      "link": null
    },
    {
      "PostId": "34004c31-c83f-4d8d-9a94-09d36a66e0fe",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm prototyping the code in my actual game, and the source file for it is over 800kb. So, if I posted the entire code base, expect about 30,000+ lines of code; trying to read through that gives me a headache just thinking of it.\r\n\r\nWell if it is hitting that code view button, then 100% of the code I posted is ALL that the function does and contains.\r\n\r\nIt has 1 formal parameter; CurrentShards\r\nIt has a return value of CurrentShards\r\n\r\nI don't know why it isn't working and what other code you need, as there is no other code to provide you.\r\n\r\nI have to say, I have a lot easier time doing function calls in C++, than I do in Quest. Create a function declaration, a function definition, and have a place in your code that calls the function, replacing the arguments for the format parameters and then return a value of type int or double, or nothing. Probably helps that I can declare variables all by themselves, rather than be forced to declare member variables of a class.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm prototyping the code in my actual game, and the source file for it is over 800kb. So, if I posted the entire code base, expect about 30,000+ lines of code; trying to read through that gives me a headache just thinking of it.</p>\n<p>Well if it is hitting that code view button, then 100% of the code I posted is ALL that the function does and contains.</p>\n<p>It has 1 formal parameter; CurrentShards<br>\nIt has a return value of CurrentShards</p>\n<p>I don't know why it isn't working and what other code you need, as there is no other code to provide you.</p>\n<p>I have to say, I have a lot easier time doing function calls in C++, than I do in Quest. Create a function declaration, a function definition, and have a place in your code that calls the function, replacing the arguments for the format parameters and then return a value of type int or double, or nothing. Probably helps that I can declare variables all by themselves, rather than be forced to declare member variables of a class.</p>\n\n",
      "PostDate": "2017-09-24T07:56:08.0273046Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b5a00b8-4891-4e2d-b82d-57ba3fb2c82d",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay I fiddled around with it, and got it to work... sort of. I don't understand why it is working, buy yah.\r\n\r\nSo, what I did, was I removed the CurrentShards - 100, from within the if-else branch, and had it built into the return value. The issue with this is that it should only cost the player if they don't know the spell.\r\n\r\nDon't know why it is not performing the calculation in the if-else but will run it outside of the if-else. THAT is a headscratcher. \r\n\r\nEDIT: I think I kind of know what is going on, but why it is going on doesn't make sense to me.\r\n\r\nThe only way the function will work, is if you build the subtraction calculation INTO the return value, and not pass the value to the returned value.\r\n\r\nSo it will not accept this:\r\n\r\nCurrentShards = CurrentShards - 100\r\nreturn (CurrentShards)\r\n-> If you do it this way, then for some reason it returns 0 or a null value, and that's why my soul shards gets reset to 0.\r\n\r\nHowever it will accept this:\r\n\r\nreturn (CurrentShards - 100)\r\n\r\nThe strange thing is that it is properly using the value of the argument player.SoulShards to replace the formal parameter CurrentShards.\r\n\r\nThis just confuses the hell out of me. Why does it work one way and not the other?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay I fiddled around with it, and got it to work... sort of. I don't understand why it is working, buy yah.</p>\n<p>So, what I did, was I removed the CurrentShards - 100, from within the if-else branch, and had it built into the return value. The issue with this is that it should only cost the player if they don't know the spell.</p>\n<p>Don't know why it is not performing the calculation in the if-else but will run it outside of the if-else. THAT is a headscratcher.</p>\n<p>EDIT: I think I kind of know what is going on, but why it is going on doesn't make sense to me.</p>\n<p>The only way the function will work, is if you build the subtraction calculation INTO the return value, and not pass the value to the returned value.</p>\n<p>So it will not accept this:</p>\n<p>CurrentShards = CurrentShards - 100<br>\nreturn (CurrentShards)<br>\n-&gt; If you do it this way, then for some reason it returns 0 or a null value, and that's why my soul shards gets reset to 0.</p>\n<p>However it will accept this:</p>\n<p>return (CurrentShards - 100)</p>\n<p>The strange thing is that it is properly using the value of the argument player.SoulShards to replace the formal parameter CurrentShards.</p>\n<p>This just confuses the hell out of me. Why does it work one way and not the other?</p>\n\n",
      "PostDate": "2017-09-24T08:09:48.4443113Z",
      "LastEditDate": "2017-09-24T08:18:59.4155125Z",
      "link": null
    },
    {
      "PostId": "65b032e5-3e6c-4acc-8827-89b035499892",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think 'mrangel' answered it in this post:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/l5shmzqm00_actlrsuj19q/creating-a-basic-function-call#e18f549a-77e9-43c6-ab1b-cee17cabff44\r\n\r\n----------\r\n\r\nso, try this fix:\r\n\r\n(I assume that 'CurrentShards' is given a Value somehow, lol)\r\n\r\n```\r\nif (Spellbook.KnowArcaneZap = false) {\r\n  ShardCost = 100\r\n  CurrentShards = CurrentShards - ShardCost\r\n  Spellbook.KnowArcaneZap = true\r\n}\r\nreturn (CurrentShards)\r\n```\r\n\r\n-------------\r\n\r\nas to why it returns '0', that's probably because it's programmed to do that, the returned '0' represents an error: a Value wasn't returned, when one was suppose to be returned.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think 'mrangel' answered it in this post:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/l5shmzqm00_actlrsuj19q/creating-a-basic-function-call#e18f549a-77e9-43c6-ab1b-cee17cabff44</p>\n<hr>\n<p>so, try this fix:</p>\n<p>(I assume that 'CurrentShards' is given a Value somehow, lol)</p>\n<pre><code>if (Spellbook.KnowArcaneZap = false) {\n  ShardCost = 100\n  CurrentShards = CurrentShards - ShardCost\n  Spellbook.KnowArcaneZap = true\n}\nreturn (CurrentShards)\n</code></pre>\n<hr>\n<p>as to why it returns '0', that's probably because it's programmed to do that, the returned '0' represents an error: a Value wasn't returned, when one was suppose to be returned.</p>\n\n",
      "PostDate": "2017-09-24T08:50:27.5668429Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "86ae4ced-0c23-486d-a431-299a9bedc2d9",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The best way to debug something like that is to use a debug msg() like this:\r\n\r\n```\r\nMsg(\"Current shards before calc: \" + CurrentShards)\r\nCurrentShards = CurrentShards - 100\r\nMsg(\"Current shards after calc: \" + CurrentShards)\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The best way to debug something like that is to use a debug msg() like this:</p>\n<pre><code>Msg(\"Current shards before calc: \" + CurrentShards)\nCurrentShards = CurrentShards - 100\nMsg(\"Current shards after calc: \" + CurrentShards)\n</code></pre>\n\n",
      "PostDate": "2017-09-24T08:53:49.4979044Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59d70043-eec4-471d-8c93-4ee0ab8e2795",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I see that you got it (mostly) working now.  That's awesome!",
      "EditableFormat": "markdown",
      "HTML": "<p>I see that you got it (mostly) working now.  That's awesome!</p>\n\n",
      "PostDate": "2017-09-24T09:07:22.7739491Z",
      "LastEditDate": "2017-09-24T09:36:16.7306811Z",
      "link": null
    },
    {
      "PostId": "6f2ed8ba-d925-43f9-a435-d40b9d961e75",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan ; ... CurrentShards is the formal parameter, and as such the function fails unless you have an argument that gives it a value. If it was a local variable, then the function wouldn't care. But if you have a formal parameter, at least for C++, you need to fill it with something. In this case, it is player.SoulShards (the variable that holds your currency) which starts at 300. \r\n\r\nLogically, it should in theory take the value in SoulShards (300), and then subtract 100 = 200, and then pass that value to return value (CurrentShards) which should contain the value 200. But it doesn't. When you build the subtraction into the return value (CurrentShards - 100) then it will properly do the subtraction and return a value of 200. Else it returns 0. For whatever reason.",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan ; ... CurrentShards is the formal parameter, and as such the function fails unless you have an argument that gives it a value. If it was a local variable, then the function wouldn't care. But if you have a formal parameter, at least for C++, you need to fill it with something. In this case, it is player.SoulShards (the variable that holds your currency) which starts at 300.</p>\n<p>Logically, it should in theory take the value in SoulShards (300), and then subtract 100 = 200, and then pass that value to return value (CurrentShards) which should contain the value 200. But it doesn't. When you build the subtraction into the return value (CurrentShards - 100) then it will properly do the subtraction and return a value of 200. Else it returns 0. For whatever reason.</p>\n\n",
      "PostDate": "2017-09-24T16:13:16.9441778Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "aba4c3e3-16a2-40c8-8b48-755209a6456b",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I had a game that was 850+ kb. I talked to The Pixie about it. It turns out most of that is image data.\r\n\r\nI only have one picture in the game and one picture for the game listing. I just had to upload it multiple times to get the right size. If I deleted the old files, it would be around 200-350+ kb.",
      "EditableFormat": "markdown",
      "HTML": "<p>I had a game that was 850+ kb. I talked to The Pixie about it. It turns out most of that is image data.</p>\n<p>I only have one picture in the game and one picture for the game listing. I just had to upload it multiple times to get the right size. If I deleted the old files, it would be around 200-350+ kb.</p>\n\n",
      "PostDate": "2017-09-24T19:04:47.318725Z",
      "LastEditDate": "2017-09-24T19:05:30.3700535Z",
      "link": null
    },
    {
      "PostId": "d6843f73-7cce-4bcb-9e83-92edea7251bd",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@lordpalandus So, why don't you do player.SouldShards = player.SoulSards - 100__? Is it for aesthetic reasons?\r\n\r\nThat's how I do it.",
      "EditableFormat": "markdown",
      "HTML": "<p>@lordpalandus So, why don't you do player.SouldShards = player.SoulSards - 100__? Is it for aesthetic reasons?</p>\n<p>That's how I do it.</p>\n\n",
      "PostDate": "2017-09-24T19:17:42.6778056Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0ce0214c-c557-4aef-828d-3e644dd786c4",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well my game is all text and code, and no images. Plus the new V4 source is about 1,200 kb now. \r\n\r\nI am doing it that way with the current system. But I was hoping to have the system replaced with function calls, but it doesn't look like function calls will help to reduce my spell purchasing code. Might be useful elsewhere, but not in spell purchasing. \r\n\r\nProbably. I'll have to see when I begin my major code refactor tomorrow, as I just released V4 beta of my game; its in the WIP section of the browser playable games here. Probably tomorrow as I've been working hard enough today to get V4 out to playtesters, and need a break from coding.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well my game is all text and code, and no images. Plus the new V4 source is about 1,200 kb now.</p>\n<p>I am doing it that way with the current system. But I was hoping to have the system replaced with function calls, but it doesn't look like function calls will help to reduce my spell purchasing code. Might be useful elsewhere, but not in spell purchasing.</p>\n<p>Probably. I'll have to see when I begin my major code refactor tomorrow, as I just released V4 beta of my game; its in the WIP section of the browser playable games here. Probably tomorrow as I've been working hard enough today to get V4 out to playtesters, and need a break from coding.</p>\n\n",
      "PostDate": "2017-09-24T22:19:19.3875168Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3db170c9-5637-4df6-8426-e97eb298fc36",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do you have so much code? Why is it 1,200 kb? How did you even count the lines of code?",
      "EditableFormat": "markdown",
      "HTML": "<p>How do you have so much code? Why is it 1,200 kb? How did you even count the lines of code?</p>\n\n",
      "PostDate": "2017-09-24T22:49:12.1364417Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "043936ac-3080-42c4-aebb-a2a022525cb5",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Lots of switches, if-else conditionals, and quite a few turnscripts.\r\n\r\nI plan to reduce a lot of that down, so hopefully after the refactor it will be back to being less than 1000 kb.",
      "EditableFormat": "markdown",
      "HTML": "<p>Lots of switches, if-else conditionals, and quite a few turnscripts.</p>\n<p>I plan to reduce a lot of that down, so hopefully after the refactor it will be back to being less than 1000 kb.</p>\n\n",
      "PostDate": "2017-09-25T00:17:29.5212386Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4ad49da8-2f1c-4192-9cdf-dd46f9f3166d",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks. But how did you count the lines of code?",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks. But how did you count the lines of code?</p>\n\n",
      "PostDate": "2017-09-25T00:45:32.1279813Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29781555-8137-44e1-8965-bcf5bc78b6d9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's software/programs that do (and display) it for you (for example, notepad++, probably any IDE/SDK, like visual basic)",
      "EditableFormat": "markdown",
      "HTML": "<p>there's software/programs that do (and display) it for you (for example, notepad++, probably any IDE/SDK, like visual basic)</p>\n\n",
      "PostDate": "2017-09-25T00:57:17.6780166Z",
      "LastEditDate": "2017-09-25T00:58:21.768257Z",
      "link": null
    },
    {
      "PostId": "11cde72d-9c86-493e-bd62-754beb543288",
      "UserId": 307193,
      "Username": "lordpalandus",
      "AvatarUrl": "https://secure.gravatar.com/avatar/637feacf8e8a52834eaa284e96f879bf?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, with a bit of refactoring, and using function calls to reduce some redundancy, I've gotten it down to about 1090 kb. Not quite finished with the code refactor, but I'm definitely making significant progress. And the best thing is that it will be significantly easier to add to the code later on.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, with a bit of refactoring, and using function calls to reduce some redundancy, I've gotten it down to about 1090 kb. Not quite finished with the code refactor, but I'm definitely making significant progress. And the best thing is that it will be significantly easier to add to the code later on.</p>\n\n",
      "PostDate": "2017-09-30T07:32:33.040192Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
