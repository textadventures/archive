{
  "Topic": {
    "TopicId": "frir7uqrlesyeg8hzvhe7g",
    "ForumId": "10",
    "Title": "Attribute byte limit?",
    "LastUpdated": "2017-01-18T15:08:33.6072306Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3b256d7d-b9af-475b-9915-592c907a3240",
      "UserId": 208856,
      "Username": "Groctel",
      "AvatarUrl": "http://i.imgur.com/hoKlmU5b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I was moving and copying attributes strings for a script I developed and realised that the longest strings are not transferred and make the script crash. Is this because there is a limit on the size in bytes an attribute con hold or did I break the engine again?\r\n\r\nThanks :D",
      "EditableFormat": "markdown",
      "HTML": "<p>So I was moving and copying attributes strings for a script I developed and realised that the longest strings are not transferred and make the script crash. Is this because there is a limit on the size in bytes an attribute con hold or did I break the engine again?</p>\n<p>Thanks :D</p>\n\n",
      "PostDate": "2017-01-18T15:08:33.6072306Z",
      "LastEditDate": null
    },
    {
      "PostId": "d32ffae3-4171-46ea-af4c-34b257b5dce6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yes, all Attribute/Data Types should have a size limit, though not sure with how exactly quest works, though maybe you just made some code mistake, or maybe it could be that both occured. Can we see your code of it? (we may need to see the entire game code too, to be certain no mistakes were made with the code too).\r\n\r\na simple testing you can do, is to try shortening your strings, and if that causes the problem to disappear, then examine the part that you removed, checking to see if there's any errors in the code (or post it here and we can do that), and if there's not, then start adding/removing the size of the string, until you find it's size / the cutoff length where it goes from working to error.\r\n\r\nfor a pretend example:\r\n\r\nour new 'alphabet_string' Attribute/Data Type's size limit: 26 (in real example would be some size/number/amount of memory units) \r\n\r\nalphabet_string = \"a\" ---> NO error\r\nalphabet_string = \"abcdefghijklmnopqrstuvwxyz\" ---> NO error\r\nalphabet_string = \"abcdefghijklmnopqrstuvwxyzAAAA\" ---> ERROR (size limit exceeded: technically, this is a human coding error too, lol)\r\nalphabet_string = 12345 ----> ERROR (human coding error: incorrect values for Attribute/Data Type)\r\n\r\n---------\r\n\r\ngoogle search: data type size\r\n\r\n(you'll get links for many various languages --- they can differ between languages: the smallest memory unit is the 'bit', but this only exists within the machine code language, the lowest language --- closest to the physical hardware/circuitry itself -- which the machine code is just literally a bunch of logical '0' and '1' bits --- completely UN-readable by humans, whereas all other languages are higher languages as they build up to make it more human friendly and more capable, so they use larger memory sizes, X bytes: 1 byte = 8 bits: the byte is the smallest memory unit that you can act-upon/manipulate via in the low-level Assembly Language: don't confuse the '0' and '1' numbers of higher level languages for the logical bits of '0' and '1', as they're characters/symbols, which are 'Char' and/or 'String' Data Types: X bytes in size, for their created Data Types: primitive data types such as the 'Integer' Data Type and the non-primitive data types such as the 'String' Data Type) --- but again, I don't know how quest works.",
      "EditableFormat": "markdown",
      "HTML": "<p>yes, all Attribute/Data Types should have a size limit, though not sure with how exactly quest works, though maybe you just made some code mistake, or maybe it could be that both occured. Can we see your code of it? (we may need to see the entire game code too, to be certain no mistakes were made with the code too).</p>\n<p>a simple testing you can do, is to try shortening your strings, and if that causes the problem to disappear, then examine the part that you removed, checking to see if there's any errors in the code (or post it here and we can do that), and if there's not, then start adding/removing the size of the string, until you find it's size / the cutoff length where it goes from working to error.</p>\n<p>for a pretend example:</p>\n<p>our new 'alphabet_string' Attribute/Data Type's size limit: 26 (in real example would be some size/number/amount of memory units)</p>\n<p>alphabet_string = \"a\" ---&gt; NO error<br>\nalphabet_string = \"abcdefghijklmnopqrstuvwxyz\" ---&gt; NO error<br>\nalphabet_string = \"abcdefghijklmnopqrstuvwxyzAAAA\" ---&gt; ERROR (size limit exceeded: technically, this is a human coding error too, lol)<br>\nalphabet_string = 12345 ----&gt; ERROR (human coding error: incorrect values for Attribute/Data Type)</p>\n<hr>\n<p>google search: data type size</p>\n<p>(you'll get links for many various languages --- they can differ between languages: the smallest memory unit is the 'bit', but this only exists within the machine code language, the lowest language --- closest to the physical hardware/circuitry itself -- which the machine code is just literally a bunch of logical '0' and '1' bits --- completely UN-readable by humans, whereas all other languages are higher languages as they build up to make it more human friendly and more capable, so they use larger memory sizes, X bytes: 1 byte = 8 bits: the byte is the smallest memory unit that you can act-upon/manipulate via in the low-level Assembly Language: don't confuse the '0' and '1' numbers of higher level languages for the logical bits of '0' and '1', as they're characters/symbols, which are 'Char' and/or 'String' Data Types: X bytes in size, for their created Data Types: primitive data types such as the 'Integer' Data Type and the non-primitive data types such as the 'String' Data Type) --- but again, I don't know how quest works.</p>\n\n",
      "PostDate": "2017-01-18T16:38:04.4472095Z",
      "LastEditDate": "2017-01-18T21:52:19.2267572Z"
    }
  ]
}
