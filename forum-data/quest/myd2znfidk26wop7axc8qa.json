{
  "Topic": {
    "TopicId": "myd2znfidk26wop7axc8qa",
    "ForumId": "10",
    "Title": "\"JS.setCompassDirections\" Doesn't Work  [SOLVED]",
    "LastUpdated": "2019-06-06T05:04:47.2796341Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e59cb1d5-27c9-4d29-afbb-43cd3c967dfc",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found the explanation to use this JS function under the Quest documentation here:\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/request.html\r\n\r\n<center>(about 2/3 down the page under the heading \"<i>SetCompassDirections</i>\")</center><br>\r\n\r\nI made a bare-bones game and put the function in question...\r\n```\r\nJS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\r\n```\r\n...in a room's \"Before entering\", \"After entering\", and local turn scripts.  Note that the ```south``` exit has been changed to ```whatever```.  Then I changed the ```whatever``` exit's alias to \"whatever\" as per the Quest doc's instructions.\r\n\r\nOUTCOME -\r\nAfter you enter the room with the changed compass, the exit link \"whatever\" in the room's description DOES work when you mouseclick it.  However, mouseclicking on the compass (on the \"whatever\" direction) does NOT work, nor does typing \"whatever\" as a directional command.  In both failed cases, Quest responds, \"I don't understand your command.\"\r\n\r\nI tried making the ```whatever``` exit a non-directional exit, but there was no change.  Also added \"whatever\" to the default ```go``` command's regex command pattern with no effect.  Any way to make this work?  Thanks.\r\n\r\n<details>\r\n\r\n```\r\n\r\n<!--Saved by Quest 5.8.6809.15141-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"JS.setCompassDirections\">\r\n    <gameid>d5423aaf-7ab6-49f6-adc0-9bd80c0eb7e0</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2019</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"room2\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"room2\">\r\n    <inherit name=\"editor_room\" />\r\n    <enter type=\"script\">\r\n      JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\r\n    </enter>\r\n    <beforeenter type=\"script\">\r\n      JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\r\n    </beforeenter>\r\n    <exit alias=\"whatever\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <turnscript name=\"ChangeCompass\">\r\n      <script>\r\n        JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\r\n      </script>\r\n      <enabled />\r\n    </turnscript>\r\n  </object>\r\n</asl>\r\n\r\n```\r\n\r\n</details>\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I found the explanation to use this JS function under the Quest documentation here:</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/request.html</p>\n<center>(about 2/3 down the page under the heading \"<i>SetCompassDirections</i>\")</center><br>\n<p>I made a bare-bones game and put the function in question...</p>\n<pre><code>JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\n</code></pre>\n<p>...in a room's \"Before entering\", \"After entering\", and local turn scripts.  Note that the <code>south</code> exit has been changed to <code>whatever</code>.  Then I changed the <code>whatever</code> exit's alias to \"whatever\" as per the Quest doc's instructions.</p>\n<p>OUTCOME -<br>\nAfter you enter the room with the changed compass, the exit link \"whatever\" in the room's description DOES work when you mouseclick it.  However, mouseclicking on the compass (on the \"whatever\" direction) does NOT work, nor does typing \"whatever\" as a directional command.  In both failed cases, Quest responds, \"I don't understand your command.\"</p>\n<p>I tried making the <code>whatever</code> exit a non-directional exit, but there was no change.  Also added \"whatever\" to the default <code>go</code> command's regex command pattern with no effect.  Any way to make this work?  Thanks.</p>\n<details>\n<pre><code>\n&lt;!--Saved by Quest 5.8.6809.15141--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"JS.setCompassDirections\"&gt;\n    &lt;gameid&gt;d5423aaf-7ab6-49f6-adc0-9bd80c0eb7e0&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2019&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"room2\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"room2\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;enter type=\"script\"&gt;\n      JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\n    &lt;/enter&gt;\n    &lt;beforeenter type=\"script\"&gt;\n      JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\n    &lt;/beforeenter&gt;\n    &lt;exit alias=\"whatever\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;turnscript name=\"ChangeCompass\"&gt;\n      &lt;script&gt;\n        JS.setCompassDirections (\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\n      &lt;/script&gt;\n      &lt;enabled /&gt;\n    &lt;/turnscript&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n\n</code></pre>\n</details>\n\n",
      "PostDate": "2019-06-06T05:04:47.2796341Z",
      "LastEditDate": "2019-06-08T04:52:05.3942351Z",
      "link": null
    },
    {
      "PostId": "bcd3cac3-dc87-43aa-9d05-9a8cf32daf77",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the text from the Quest doc's instruction for use of ```JS.setCompassDirections``` from the link cited in the last post:\r\n\r\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nSetCompassDirections\r\n\r\nTakes a semi-colon separated list of compass direction names and assigns them to the compass buttons. As of Quest 5.7.2, use JS instead, for example:\r\n```\r\nJS.setCompassDirections(\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\r\n```\r\nThese names will also then not appear as exits in the “Places and Objects” list. The default is as shown in the example. The compass directions must be specified in the same order and there must be the same number of elements in the list. The exit in the compass rose will only be active if the alias of the exit matches the text you set here.\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nI'm going to mark this as an issue on Github.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the text from the Quest doc's instruction for use of <code>JS.setCompassDirections</code> from the link cited in the last post:</p>\n<hr>\n<p>SetCompassDirections</p>\n<p>Takes a semi-colon separated list of compass direction names and assigns them to the compass buttons. As of Quest 5.7.2, use JS instead, for example:</p>\n<pre><code>JS.setCompassDirections(\"northwest;north;northeast;west;east;southwest;whatever;southeast;up;down;in;out\")\n</code></pre>\n<p>These names will also then not appear as exits in the “Places and Objects” list. The default is as shown in the example. The compass directions must be specified in the same order and there must be the same number of elements in the list. The exit in the compass rose will only be active if the alias of the exit matches the text you set here.</p>\n<hr>\n<p>I'm going to mark this as an issue on Github.</p>\n\n",
      "PostDate": "2019-06-06T20:53:11.3506605Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "95e0a624-c6fe-44b0-bf0f-593979b02aa0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Also added \"whatever\" to the default go command's regex command pattern with no effect.\r\n\r\nThat should work.\r\nCan you show the pattern you're changing it to?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Also added \"whatever\" to the default go command's regex command pattern with no effect.</p>\n</blockquote>\n<p>That should work.<br>\nCan you show the pattern you're changing it to?</p>\n\n",
      "PostDate": "2019-06-06T21:51:41.3045957Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cdfb4592-0673-4b20-a3e9-7161ca1cc192",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, I figured it out.  It DOES work if you do the following 4 things:\r\n\r\n1) Put the modified ```JS.setCompassDirections ()``` in the room's \"After entering...\" script.  This has to be changed/reset in the same manner when the player enters adjoining rooms.\r\n\r\n2) Change the exit's alias to ```whatever```.\r\n\r\n3) Make the exit non-directional.\r\n\r\n4) Add \"whatever\" to the default ```go``` command's regex pattern.\r\n\r\nThe reason I had trouble was because I did #3 and #4 separately, but not simultaneously.  I did not mark this on GitHub, but the Quest documentation should probably be edited to reflect this additional info.\r\n\r\nThanks mrangel for the response.  I've been using KV's Nautical Library to do this same thing, but it wasn't designed to change individual rooms' compass directions (although it is still very nice for what it does).",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, I figured it out.  It DOES work if you do the following 4 things:</p>\n<ol>\n<li>\n<p>Put the modified <code>JS.setCompassDirections ()</code> in the room's \"After entering...\" script.  This has to be changed/reset in the same manner when the player enters adjoining rooms.</p>\n</li>\n<li>\n<p>Change the exit's alias to <code>whatever</code>.</p>\n</li>\n<li>\n<p>Make the exit non-directional.</p>\n</li>\n<li>\n<p>Add \"whatever\" to the default <code>go</code> command's regex pattern.</p>\n</li>\n</ol>\n<p>The reason I had trouble was because I did #3 and #4 separately, but not simultaneously.  I did not mark this on GitHub, but the Quest documentation should probably be edited to reflect this additional info.</p>\n<p>Thanks mrangel for the response.  I've been using KV's Nautical Library to do this same thing, but it wasn't designed to change individual rooms' compass directions (although it is still very nice for what it does).</p>\n\n",
      "PostDate": "2019-06-08T04:50:10.1737223Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d3b0ad3e-86f7-4c2e-b800-9ab4321a8dc0",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "After further experimentation with a mapped game, I've concluded that the altered exit should actually stay directional, but the exit's ```alt``` list should have the appropriate directional names added to it.  Otherwise, unknown coordinate errors get spewed out.  And the new exit aliases should also be added to the default ```lookdir``` command.\r\n\r\nThis is a powerful function -- I don't know why there isn't more interest/discussion regarding this.  Maybe I'm just slow to catch on to it?",
      "EditableFormat": "markdown",
      "HTML": "<p>After further experimentation with a mapped game, I've concluded that the altered exit should actually stay directional, but the exit's <code>alt</code> list should have the appropriate directional names added to it.  Otherwise, unknown coordinate errors get spewed out.  And the new exit aliases should also be added to the default <code>lookdir</code> command.</p>\n<p>This is a powerful function -- I don't know why there isn't more interest/discussion regarding this.  Maybe I'm just slow to catch on to it?</p>\n\n",
      "PostDate": "2019-06-09T08:20:52.6007371Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
