{
  "Topic": {
    "TopicId": "pfztx-_fuugx2_auhmrs3q",
    "ForumId": "10",
    "Title": "Ammunition and food.",
    "LastUpdated": "2020-03-21T20:26:00.3450042Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "c02be229-4c49-4a47-86d0-c3de7182f2de",
      "UserId": 470844,
      "Username": "duckfarm1",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How do i make consumables and ammunition diminish in my story. ",
      "EditableFormat": "markdown",
      "HTML": "<p>How do i make consumables and ammunition diminish in my story.</p>\n\n",
      "PostDate": "2020-03-21T20:26:00.3450042Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e6133da-13cc-47a0-ada5-a2db41aaeeec",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll do my best to answer this since no one has yet. This definitely works, but... Others would likely do this much more efficiently than I so... maybe wait for their response?  Anyway, here's how I would do it in my hacky, poor-coding sort of way:\r\n\r\n1.  Create an object called \"ammunition\".  Make sure it is in the players inventory AND make sure the box next to 'can be dropped' (on the inventory tab) is NOT ticked.  If the player doesn't start the game with ammo or a weapon, you can also tick it as invisible to start the game and run a script to make it visible once weapon and ammo are found.\r\n2.  Click on the attributes tab of the ammunition object.\r\n3. Click 'Add' next to 'Attributes'.  Name it something like 'AmmoCount'\r\n4.  Select integer attribute and set it to 0 (zero).\r\n5.  Create ammo objects.  In my sample, I made a 'twenty pack ammo' and a 'fifty pack ammo'.\r\n6.  On the inventory tab for those objects, I clicked 'run a script' under the take section.\r\n7.  Select 'Set variable or attribute' from the options.\r\n8.  In the first box, type 'ammunition.AmmoCount' and in the second box, type 'ammunition.AmmoCount + 20'.  The plus 20 is for the twenty pack.  For the fifty pack, I changed it to 50.  If you are doing one ammo per pick up, it would be  + 1.\r\n9.  For ME, I also added a script here to remove an object.  I removed the ammo pack that I picked up because it prevents the player from dropping it and picking it up over and over again, racking up their ammo count.\r\n10.  Make a gun object.\r\n11.  Click on verbs tab for the gun object.  Type in 'fire'.\r\n12.  Choose Run a script.\r\n13.  Select an 'If' script.  \r\n14.  Click on the 'expression' box and select 'object attribute equals'.\r\n15.  In the object box, select object.  In the box just to the right of that, type 'ammunition' and in the attribute box type 'AmmoCount'.  In the box to the right of the equal sign (=), type in '0'\r\n16.  In the Then part of this If  script, run a print message script and type a message like \"You pull the trigger, but nothing happens!  You're empty!\"\r\n17.  In the else part of this If script, add a print message script and type a message like \"You fire the gun.\"  Also add a Set a variable or attribute script and, in the first box, type in 'ammunition.AmmoCount'.  In the second box, select expression, and in the third box, type in 'ammunition.AmmoCount - 1'\r\n18.  Go back to your ammunition object and choose to run a script under the \"look at\" section under the Set Up tab.\r\n19.  Select the print a message script and make sure 'expression' is in the first box.\r\n20.  In the second box next to expression, type the following\r\n\"You have \" + ammunition.AmmoCount + \" ammo remaining.\"\r\nexactly as is.  Or, change the \"You have \"  or the \" ammo remaining.\" parts to whatever you want.\r\n\r\nBingo.  Done.  You can do the same thing for your food items.\r\n\r\nI don't think I missed any steps.\r\n\r\nIf you use this method and need help, please ask.\r\n\r\nEDIT:  If you fire the gun at certain things, like you would likely do, you can copy paste the code for the fire verb, on the thing you want it fired at.  For example... if there is a zombie you want to shoot, maybe add a 'shoot' verb on the zombie and run scripts for killing or wounding the zombie IF the player is carrying the gun/weapon.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll do my best to answer this since no one has yet. This definitely works, but... Others would likely do this much more efficiently than I so... maybe wait for their response?  Anyway, here's how I would do it in my hacky, poor-coding sort of way:</p>\n<ol>\n<li>Create an object called \"ammunition\".  Make sure it is in the players inventory AND make sure the box next to 'can be dropped' (on the inventory tab) is NOT ticked.  If the player doesn't start the game with ammo or a weapon, you can also tick it as invisible to start the game and run a script to make it visible once weapon and ammo are found.</li>\n<li>Click on the attributes tab of the ammunition object.</li>\n<li>Click 'Add' next to 'Attributes'.  Name it something like 'AmmoCount'</li>\n<li>Select integer attribute and set it to 0 (zero).</li>\n<li>Create ammo objects.  In my sample, I made a 'twenty pack ammo' and a 'fifty pack ammo'.</li>\n<li>On the inventory tab for those objects, I clicked 'run a script' under the take section.</li>\n<li>Select 'Set variable or attribute' from the options.</li>\n<li>In the first box, type 'ammunition.AmmoCount' and in the second box, type 'ammunition.AmmoCount + 20'.  The plus 20 is for the twenty pack.  For the fifty pack, I changed it to 50.  If you are doing one ammo per pick up, it would be  + 1.</li>\n<li>For ME, I also added a script here to remove an object.  I removed the ammo pack that I picked up because it prevents the player from dropping it and picking it up over and over again, racking up their ammo count.</li>\n<li>Make a gun object.</li>\n<li>Click on verbs tab for the gun object.  Type in 'fire'.</li>\n<li>Choose Run a script.</li>\n<li>Select an 'If' script.</li>\n<li>Click on the 'expression' box and select 'object attribute equals'.</li>\n<li>In the object box, select object.  In the box just to the right of that, type 'ammunition' and in the attribute box type 'AmmoCount'.  In the box to the right of the equal sign (=), type in '0'</li>\n<li>In the Then part of this If  script, run a print message script and type a message like \"You pull the trigger, but nothing happens!  You're empty!\"</li>\n<li>In the else part of this If script, add a print message script and type a message like \"You fire the gun.\"  Also add a Set a variable or attribute script and, in the first box, type in 'ammunition.AmmoCount'.  In the second box, select expression, and in the third box, type in 'ammunition.AmmoCount - 1'</li>\n<li>Go back to your ammunition object and choose to run a script under the \"look at\" section under the Set Up tab.</li>\n<li>Select the print a message script and make sure 'expression' is in the first box.</li>\n<li>In the second box next to expression, type the following<br>\n\"You have \" + ammunition.AmmoCount + \" ammo remaining.\"<br>\nexactly as is.  Or, change the \"You have \"  or the \" ammo remaining.\" parts to whatever you want.</li>\n</ol>\n<p>Bingo.  Done.  You can do the same thing for your food items.</p>\n<p>I don't think I missed any steps.</p>\n<p>If you use this method and need help, please ask.</p>\n<p>EDIT:  If you fire the gun at certain things, like you would likely do, you can copy paste the code for the fire verb, on the thing you want it fired at.  For example... if there is a zombie you want to shoot, maybe add a 'shoot' verb on the zombie and run scripts for killing or wounding the zombie IF the player is carrying the gun/weapon.</p>\n\n",
      "PostDate": "2020-03-23T23:18:04.0478166Z",
      "LastEditDate": "2020-03-23T23:24:15.6226167Z",
      "link": null
    }
  ]
}
