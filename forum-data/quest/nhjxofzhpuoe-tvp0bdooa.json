{
  "Topic": {
    "TopicId": "nhjxofzhpuoe-tvp0bdooa",
    "ForumId": "10",
    "Title": "Removing a Cloned Item Without Using \"This\" [Solved]",
    "LastUpdated": "2019-11-07T01:40:36.4015333Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "49f71d0e-34b4-426c-a820-3c10237d00f4",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/HEtnsWqb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was curious if there was a way to remove a cloned item without using \"**this**\" just like we do for regular objects. For example...\r\n```\r\nRemoveObject (bootybum)\r\n```\r\nI noticed we have a **CloneObjectAndMove** and so on but I wasn't sure how to remove one, except maybe by using alias?\r\n\r\nAnyway, the reason I don't want to use \"*this*\" is because I've been trying to eliminate using that script in my game as much as possible. I heard a couple of years ago that if Quest updated again and/or moved to being browser-based it would be extremely difficult to incorporate a 'this' script. So as a precaution, I've been removing it wherever possible. \r\n\r\nObviously, the problem is when using cloned items is that they don't get removed with *RemoveObject* \r\n\r\nIs there another way?\r\n\r\nThank you ahead of time! I greatly appreciate it!\r\n\r\nAnonynn. \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I was curious if there was a way to remove a cloned item without using \"<strong>this</strong>\" just like we do for regular objects. For example...</p>\n<pre><code>RemoveObject (bootybum)\n</code></pre>\n<p>I noticed we have a <strong>CloneObjectAndMove</strong> and so on but I wasn't sure how to remove one, except maybe by using alias?</p>\n<p>Anyway, the reason I don't want to use \"<em>this</em>\" is because I've been trying to eliminate using that script in my game as much as possible. I heard a couple of years ago that if Quest updated again and/or moved to being browser-based it would be extremely difficult to incorporate a 'this' script. So as a precaution, I've been removing it wherever possible.</p>\n<p>Obviously, the problem is when using cloned items is that they don't get removed with <em>RemoveObject</em></p>\n<p>Is there another way?</p>\n<p>Thank you ahead of time! I greatly appreciate it!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2019-11-07T01:40:36.4015333Z",
      "LastEditDate": "2019-11-12T19:04:53.0097851Z",
      "link": null
    },
    {
      "PostId": "61c2fd80-1cd4-45f4-b49b-67768c7ab0b4",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Can you use a function to find the name and alias?\r\n\r\n ```\r\nmsg (this.name)\r\nmsg (this.alias)\r\n```\r\n\r\nAnd then maybe you can use its name?",
      "EditableFormat": "markdown",
      "HTML": "<p>Can you use a function to find the name and alias?</p>\n<pre><code>msg (this.name)\nmsg (this.alias)\n</code></pre>\n<p>And then maybe you can use its name?</p>\n\n",
      "PostDate": "2019-11-07T02:15:25.1450389Z",
      "LastEditDate": "2019-11-07T02:15:48.297762Z",
      "link": null
    },
    {
      "PostId": "bba7ec93-ee3d-45e2-a26e-92a138637e77",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The various `CloneObject` functions return an object reference.\r\n\r\n(Edited to fix errors)\r\n\r\nSo you could do `game.someattribute = CloneObjectAndMoveHere (some object)`, and later on you can do `RemoveObject (game.someattribute)`.\r\n\r\n<hr />\r\n\r\nOr if you want to remove all the clones of a particular object in the current room:\r\n```\r\nlist_of_clones = FilterByAttribute (ScopeVisible(), \"prototype\", original_object_that_was_cloned)\r\nforeach (obj, list_of_clones) {\r\n  RemoveObject (obj)\r\n}\r\n```\r\n\r\n<hr />\r\n\r\nIf you want to remove the particular object that the player used a verb on, then you need to use `this`. And if you have a reference to `this`, why not use it?\r\n\r\n<hr />\r\n\r\n> I heard a couple of years ago that if Quest updated again and/or moved to being browser-based it would be extremely difficult to incorporate a 'this' script.\r\n\r\nThat's extremely unlikely. `this` or some equivalent is at the core of OO programming; every OO language has it, and you really can't do without it. It might not work the same, but it would still be there.\r\n\r\nMoving to Javascript, it's conceivable that the name of the variable might change (to avoid confusion between `this` and `$this`); or it might stay as `this` but become a reserved word rather than a variable.\r\n\r\n(In Quest, you can do `this = SomeObject` in the middle of a script to change which object `this` refers to. This is probably a bad idea and will be confusing for anyone trying to debug your code, but it's valid. In javascript, it would be an error. Similarly, in places where there is no `this` (in a function or in a script which isn't attached to an object), Quest allows you to create a normal variable called \"this\". Javascript doesn't)",
      "EditableFormat": "markdown",
      "HTML": "<p>The various <code>CloneObject</code> functions return an object reference.</p>\n<p>(Edited to fix errors)</p>\n<p>So you could do <code>game.someattribute = CloneObjectAndMoveHere (some object)</code>, and later on you can do <code>RemoveObject (game.someattribute)</code>.</p>\n<hr>\n<p>Or if you want to remove all the clones of a particular object in the current room:</p>\n<pre><code>list_of_clones = FilterByAttribute (ScopeVisible(), \"prototype\", original_object_that_was_cloned)\nforeach (obj, list_of_clones) {\n  RemoveObject (obj)\n}\n</code></pre>\n<hr>\n<p>If you want to remove the particular object that the player used a verb on, then you need to use <code>this</code>. And if you have a reference to <code>this</code>, why not use it?</p>\n<hr>\n<blockquote>\n<p>I heard a couple of years ago that if Quest updated again and/or moved to being browser-based it would be extremely difficult to incorporate a 'this' script.</p>\n</blockquote>\n<p>That's extremely unlikely. <code>this</code> or some equivalent is at the core of OO programming; every OO language has it, and you really can't do without it. It might not work the same, but it would still be there.</p>\n<p>Moving to Javascript, it's conceivable that the name of the variable might change (to avoid confusion between <code>this</code> and <code>$this</code>); or it might stay as <code>this</code> but become a reserved word rather than a variable.</p>\n<p>(In Quest, you can do <code>this = SomeObject</code> in the middle of a script to change which object <code>this</code> refers to. This is probably a bad idea and will be confusing for anyone trying to debug your code, but it's valid. In javascript, it would be an error. Similarly, in places where there is no <code>this</code> (in a function or in a script which isn't attached to an object), Quest allows you to create a normal variable called \"this\". Javascript doesn't)</p>\n\n",
      "PostDate": "2019-11-07T09:28:33.0452981Z",
      "LastEditDate": "2019-11-11T09:27:25.382611Z",
      "link": null
    },
    {
      "PostId": "c828a67c-0839-40bf-bea6-0e38cf9118f3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> if Quest updated again and/or moved to being browser-based\r\n\r\nAlso worth noting that there are a few ways to go about making an entirely javascript-based version of Quest. One (which I believe they're doing for Quest 6) is to make a javascript library that includes many of the same function names as Quest. In this case it's a new engine, and converting your game to it would involve rewriting all of your code anyway. Or there's the option I prefer, writing a JS interpreter that can read Quest's script language. This would be a lot more work for the developers, but should mean that most existing games will work fine.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>if Quest updated again and/or moved to being browser-based</p>\n</blockquote>\n<p>Also worth noting that there are a few ways to go about making an entirely javascript-based version of Quest. One (which I believe they're doing for Quest 6) is to make a javascript library that includes many of the same function names as Quest. In this case it's a new engine, and converting your game to it would involve rewriting all of your code anyway. Or there's the option I prefer, writing a JS interpreter that can read Quest's script language. This would be a lot more work for the developers, but should mean that most existing games will work fine.</p>\n\n",
      "PostDate": "2019-11-07T09:38:00.0172219Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "24a78b33-2e6a-4ae9-8968-b417a8dba68c",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What unsolved this?\r\n\r\n---\r\nPrint expression.\r\n```\r\nmsg (this.name)\r\nmsg (this.alias)\r\n```\r\nRemove object.\r\n```\r\nRemoveObject (this)\r\n```\r\n\r\nIs this what you want?",
      "EditableFormat": "markdown",
      "HTML": "<p>What unsolved this?</p>\n<hr>\n<p>Print expression.</p>\n<pre><code>msg (this.name)\nmsg (this.alias)\n</code></pre>\n<p>Remove object.</p>\n<pre><code>RemoveObject (this)\n</code></pre>\n<p>Is this what you want?</p>\n\n",
      "PostDate": "2019-11-11T02:35:13.4113226Z",
      "LastEditDate": "2019-11-11T02:37:49.3795615Z",
      "link": null
    },
    {
      "PostId": "a3d6d985-08dd-4691-a650-830125217f08",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/HEtnsWqb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh good! So using \"this\" won't be a problem then? I was curious how Types were going to get transferred if that was the case but it sounds like everything should be fine. Whew! I was really worried there. I probably will just continue to use \"this\" as little as possible but it's a load off knowing it won't be mandatory. @_@ That was giving me anxiety. \r\n\r\nThanks for all the replies and explanations! Mr.Angel and Jmnevil54 :) \r\n\r\nBut yes, Jmnevil54 --- that would work but it wouldn't really solve the original issue xD However since the issue isn't an issue, you're would be a nice alternative workaround. But RemoveObject (this) should be fine.\r\n\r\nThank you both so much!\r\n\r\nAnonynn.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh good! So using \"this\" won't be a problem then? I was curious how Types were going to get transferred if that was the case but it sounds like everything should be fine. Whew! I was really worried there. I probably will just continue to use \"this\" as little as possible but it's a load off knowing it won't be mandatory. @_@ That was giving me anxiety.</p>\n<p>Thanks for all the replies and explanations! Mr.Angel and Jmnevil54 :)</p>\n<p>But yes, Jmnevil54 --- that would work but it wouldn't really solve the original issue xD However since the issue isn't an issue, you're would be a nice alternative workaround. But RemoveObject (this) should be fine.</p>\n<p>Thank you both so much!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2019-11-12T19:04:27.3999457Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
