{
  "Topic": {
    "TopicId": "blfxo_qiaemuiarxjrnpgw",
    "ForumId": "10",
    "Title": "Saving as .exe?",
    "LastUpdated": "2018-05-19T22:47:33.9560503Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5ae63741-9438-4e9f-b199-5a7449becc57",
      "UserId": 360405,
      "Username": "Blue10291",
      "AvatarUrl": "https://secure.gravatar.com/avatar/beb4d969dd9a84be6153d6602d1129b3?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Having your friend download QUEST or opening the browser just to play your game is not something I'd like.\r\nIs there really any way to save a game made in Quest as an .exe? or at least convert the quest files to .exe?\r\n\r\nI was looking around and I seemed to recall someone named \"Alex\" is able to do it, not sure if that's an inside joke that I don't get or it's for real.",
      "EditableFormat": "markdown",
      "HTML": "<p>Having your friend download QUEST or opening the browser just to play your game is not something I'd like.<br>\nIs there really any way to save a game made in Quest as an .exe? or at least convert the quest files to .exe?</p>\n<p>I was looking around and I seemed to recall someone named \"Alex\" is able to do it, not sure if that's an inside joke that I don't get or it's for real.</p>\n\n",
      "PostDate": "2018-05-19T22:47:33.9560503Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "48d44c43-53f6-430f-b9b7-6deb0f1ab2e0",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You are going to need the program to run the game so it must be downloaded.  Or, provide them the link to your game and they can play it online.  Maybe someone will come around and give you some other advice but those are the two ways that I know of to play Quest games (as well as any other TA programs that I am aware of).",
      "EditableFormat": "markdown",
      "HTML": "<p>You are going to need the program to run the game so it must be downloaded.  Or, provide them the link to your game and they can play it online.  Maybe someone will come around and give you some other advice but those are the two ways that I know of to play Quest games (as well as any other TA programs that I am aware of).</p>\n\n",
      "PostDate": "2018-05-19T22:56:19.8367222Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e407d4ba-9579-4e3e-8a5d-160484945b17",
      "UserId": 360208,
      "Username": "CodeNick",
      "AvatarUrl": "https://secure.gravatar.com/avatar/759c6a15a72f2500107323208d0f5434?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It has to be in a aslx file.",
      "EditableFormat": "markdown",
      "HTML": "<p>It has to be in a aslx file.</p>\n\n",
      "PostDate": "2018-05-20T00:02:57.5962667Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "403dca53-dade-4af9-b756-62788895421e",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Someone, with Quest code experience, should be able to compile the script into an .exe file...\r\nBut, it would require putting the Quest code into the script to make it into an .exe...\r\nUntil then, your best bet is to play online, or download Quest.exe, and run the script from there...\r\n\r\nOr, you could learn programming and program your game in that and compile your own game...\r\nI know Visual Basic, after learning that, then how to program your own text parser, and how to do the room creations, then object use, then.... (the rest)… Well, you get the picture.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Someone, with Quest code experience, should be able to compile the script into an .exe file...<br>\nBut, it would require putting the Quest code into the script to make it into an .exe...<br>\nUntil then, your best bet is to play online, or download Quest.exe, and run the script from there...</p>\n<p>Or, you could learn programming and program your game in that and compile your own game...<br>\nI know Visual Basic, after learning that, then how to program your own text parser, and how to do the room creations, then object use, then.... (the rest)… Well, you get the picture.</p>\n\n",
      "PostDate": "2018-05-20T04:25:37.9565545Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3f6eb495-c537-40b1-ba89-dd7db0a8c8cc",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Having your friend download QUEST or opening the browser just to play your game is not something I'd like.\r\n\r\nThis is necessary to play every format I know of, except for Tads.\r\n\r\nInfocom games need Frotz.\r\n\r\nRecent Inform games need Glulxe, Git, Zoom, or Gargoyle.\r\n\r\n...and you have to learn Tads' programming language to write a game with Tads.\r\n\r\n---\r\n> Is there really any way to save a game made in Quest as an .exe? or at least convert the quest files to .exe?\r\n\r\nIf you're familiar with programming, you can probably use [Inno Setup](http://www.jrsoftware.org/isinfo.php) to package your .quest game file along with a BAT file and the Quest files from the Release directory when you build Quest from the source code in Visual Studio.\r\n\r\n---\r\nLet's say our game file's name is gamename.quest, and it is in the current working directory.\r\n\r\nNow, we also have a \"Quest 5\" directory (which contains all the files necessary to run Quest) in the working directory.\r\n\r\nExecuting this BAT script would open gamename.quest in Quest:\r\n\r\nPlay.bat\r\n```\r\n@echo off\r\nstart \"Quest 5\\Quest.exe\" gamename.quest\r\n```\r\n\r\n---\r\nYou would need to know how to modify this code to include your game, and install everything to whatever directory name you like.  BUT, if the player already has Quest installed, some of this code would cause *your* version of Quest to take over as far as the Windows registry was concerned.\r\n\r\n\r\nsetup.iss (included with Quest's source code)\r\n\r\n```\r\n; Based on Modular InnoSetup Dependency Installer:\r\n; github.com/stfx/innodependencyinstaller\r\n; codeproject.com/Articles/20868/NET-Framework-1-1-2-0-3-5-Installer-for-InnoSetup\r\n\r\n#define QuestVersion '5.8.0'\r\n#define SetupVersion '580'\r\n\r\n[Setup]\r\nAppName=Quest\r\nAppVersion={#QuestVersion}\r\nAppVerName=Quest {#QuestVersion}\r\nAppCopyright=Copyright Â© 2017/2018 Andy Joel, 1998-2016 Alex Warren\r\nVersionInfoVersion={#QuestVersion}\r\nAppPublisher=Andy Joel\r\nAppPublisherURL=http://textadventures.co.uk/\r\nAppSupportURL=http://textadventures.co.uk/help\r\nAppUpdatesURL=http://textadventures.co.uk/quest/desktop\r\nOutputBaseFilename=quest{#SetupVersion}\r\nDefaultGroupName=Quest\r\nDefaultDirName={pf}\\Quest 5\r\nUninstallDisplayIcon={app}\\Quest.exe\r\nOutputDir=bin\r\nSourceDir=.\r\nAllowNoIcons=yes\r\nSolidCompression=yes\r\nPrivilegesRequired=admin\r\nChangesAssociations=yes\r\nMinVersion=6.0\r\nUsePreviousSetupType=no\r\n\r\n[Languages]\r\nName: \"en\"; MessagesFile: \"compiler:Default.isl\"\r\n\r\n[Files]\r\nSource: \"..\\Quest\\bin\\x86\\Release\\*.*\"; Excludes: \"*.vshost.*,*.pdb,\\*.xml\"; DestDir: \"{app}\"; Flags: recursesubdirs\r\nSource: \"..\\Dependencies\\vcredist_x86.exe\"; DestDir: \"{tmp}\"\r\n\r\n[Tasks]\r\nName: \"desktopicon\"; Description: \"{cm:CreateDesktopIcon}\"; GroupDescription: \"{cm:AdditionalIcons}\"; Flags: unchecked\r\n\r\n[Icons]\r\nName: \"{group}\\Quest\"; Filename: \"{app}\\Quest.exe\"\r\nName: \"{commondesktop}\\Quest\"; Filename: \"{app}\\Quest.exe\"; Tasks: desktopicon; WorkingDir: {app}\r\n\r\n[Run]\r\nFilename: \"{tmp}\\vcredist_x86.exe\"; Parameters: \"/quiet\"; StatusMsg: \"Installing components...\"\r\nFilename: \"{app}\\Quest.exe\"; Description: \"Launch Quest\"; Flags: nowait postinstall skipifsilent\r\n\r\n[Registry]\r\n; File association: ASLX\r\nRoot: HKCR; Subkey: \".aslx\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-aslx\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-aslx\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game Source\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-aslx\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-aslx\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n; File association: QUEST\r\nRoot: HKCR; Subkey: \".quest\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-quest\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-quest\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-quest\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-quest\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n; File association: QUEST-SAVE\r\nRoot: HKCR; Subkey: \".quest-save\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-quest-save\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-quest-save\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Saved Game\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-quest-save\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-quest-save\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n; File association: ASL\r\nRoot: HKCR; Subkey: \".asl\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-asl\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-asl\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-asl\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-asl\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n; File association: CAS\r\nRoot: HKCR; Subkey: \".cas\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-cas\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-cas\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-cas\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-cas\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n; File association: QSG\r\nRoot: HKCR; Subkey: \".qsg\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-qsg\"; Flags: uninsdeletevalue\r\nRoot: HKCR; Subkey: \"Quest-qsg\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Saved Game\"; Flags: uninsdeletekey\r\nRoot: HKCR; Subkey: \"Quest-qsg\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\r\nRoot: HKCR; Subkey: \"Quest-qsg\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\r\n\r\n\r\n#include \"scripts\\products.iss\"\r\n#include \"scripts\\products\\stringversion.iss\"\r\n#include \"scripts\\products\\winversion.iss\"\r\n#include \"scripts\\products\\fileversion.iss\"\r\n#include \"scripts\\products\\dotnetfxversion.iss\"\r\n#include \"scripts\\products\\dotnetfx40client.iss\"\r\n#include \"scripts\\products\\dotnetfx40full.iss\"\r\n\r\n[CustomMessages]\r\nwin_sp_title=Windows %1 Service Pack %2\r\n\r\n[Code]\r\nfunction InitializeSetup(): boolean;\r\nbegin\r\n\t//init windows version\r\n\tinitwinversion();\r\n\r\n\tif (not netfxinstalled(NetFx40Client, '') and not netfxinstalled(NetFx40Full, '')) then\r\n\t\tdotnetfx40client();\r\n\r\n\tResult := true;\r\nend;\r\n```\r\n\r\n---\r\nYou could change the Setup settings from Quest to your game's name, the icon to whatever you like, and be sure to change the Registry settings so they wouldn't interfere with an official version of Quest, if already installed on the user's machine.\r\n\r\nTo have the installer run your game instead of just launching Quest, you could change this line:\r\n```\r\nFilename: \"{app}\\Quest.exe\"; Description: \"Launch Quest\"; Flags: nowait postinstall skipifsilent\r\n```\r\n\r\n...to:\r\n```\r\nFilename: \"{app}\\Play.bat\"; Description: \"Play the Game\"; Flags: nowait postinstall skipifsilent\r\n```\r\n\r\n---\r\n...of course, you'd need to make sure you had all your files in whatever directories to which you point in your BAT file when loading the game.  It may be easier to put the game file in the \"Quest 5\" folder and change the BAT script to:\r\n\r\n```\r\n@echo off\r\nstart \"Quest 5\\Quest.exe\" \"Quest 5\\gamename.quest\"\r\n```\r\n\r\n...and I'm not certain this would run correctly from the installer.  This is because I'm not sure what the BAT file would consider to be the current working directory.  I am sure that runs the game from the command line as long as both paths are correct.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Having your friend download QUEST or opening the browser just to play your game is not something I'd like.</p>\n</blockquote>\n<p>This is necessary to play every format I know of, except for Tads.</p>\n<p>Infocom games need Frotz.</p>\n<p>Recent Inform games need Glulxe, Git, Zoom, or Gargoyle.</p>\n<p>...and you have to learn Tads' programming language to write a game with Tads.</p>\n<hr>\n<blockquote>\n<p>Is there really any way to save a game made in Quest as an .exe? or at least convert the quest files to .exe?</p>\n</blockquote>\n<p>If you're familiar with programming, you can probably use <a href=\"http://www.jrsoftware.org/isinfo.php\">Inno Setup</a> to package your .quest game file along with a BAT file and the Quest files from the Release directory when you build Quest from the source code in Visual Studio.</p>\n<hr>\n<p>Let's say our game file's name is gamename.quest, and it is in the current working directory.</p>\n<p>Now, we also have a \"Quest 5\" directory (which contains all the files necessary to run Quest) in the working directory.</p>\n<p>Executing this BAT script would open gamename.quest in Quest:</p>\n<p>Play.bat</p>\n<pre><code>@echo off\nstart \"Quest 5\\Quest.exe\" gamename.quest\n</code></pre>\n<hr>\n<p>You would need to know how to modify this code to include your game, and install everything to whatever directory name you like.  BUT, if the player already has Quest installed, some of this code would cause <em>your</em> version of Quest to take over as far as the Windows registry was concerned.</p>\n<p>setup.iss (included with Quest's source code)</p>\n<pre><code>; Based on Modular InnoSetup Dependency Installer:\n; github.com/stfx/innodependencyinstaller\n; codeproject.com/Articles/20868/NET-Framework-1-1-2-0-3-5-Installer-for-InnoSetup\n\n#define QuestVersion '5.8.0'\n#define SetupVersion '580'\n\n[Setup]\nAppName=Quest\nAppVersion={#QuestVersion}\nAppVerName=Quest {#QuestVersion}\nAppCopyright=Copyright Â© 2017/2018 Andy Joel, 1998-2016 Alex Warren\nVersionInfoVersion={#QuestVersion}\nAppPublisher=Andy Joel\nAppPublisherURL=http://textadventures.co.uk/\nAppSupportURL=http://textadventures.co.uk/help\nAppUpdatesURL=http://textadventures.co.uk/quest/desktop\nOutputBaseFilename=quest{#SetupVersion}\nDefaultGroupName=Quest\nDefaultDirName={pf}\\Quest 5\nUninstallDisplayIcon={app}\\Quest.exe\nOutputDir=bin\nSourceDir=.\nAllowNoIcons=yes\nSolidCompression=yes\nPrivilegesRequired=admin\nChangesAssociations=yes\nMinVersion=6.0\nUsePreviousSetupType=no\n\n[Languages]\nName: \"en\"; MessagesFile: \"compiler:Default.isl\"\n\n[Files]\nSource: \"..\\Quest\\bin\\x86\\Release\\*.*\"; Excludes: \"*.vshost.*,*.pdb,\\*.xml\"; DestDir: \"{app}\"; Flags: recursesubdirs\nSource: \"..\\Dependencies\\vcredist_x86.exe\"; DestDir: \"{tmp}\"\n\n[Tasks]\nName: \"desktopicon\"; Description: \"{cm:CreateDesktopIcon}\"; GroupDescription: \"{cm:AdditionalIcons}\"; Flags: unchecked\n\n[Icons]\nName: \"{group}\\Quest\"; Filename: \"{app}\\Quest.exe\"\nName: \"{commondesktop}\\Quest\"; Filename: \"{app}\\Quest.exe\"; Tasks: desktopicon; WorkingDir: {app}\n\n[Run]\nFilename: \"{tmp}\\vcredist_x86.exe\"; Parameters: \"/quiet\"; StatusMsg: \"Installing components...\"\nFilename: \"{app}\\Quest.exe\"; Description: \"Launch Quest\"; Flags: nowait postinstall skipifsilent\n\n[Registry]\n; File association: ASLX\nRoot: HKCR; Subkey: \".aslx\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-aslx\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-aslx\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game Source\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-aslx\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-aslx\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n; File association: QUEST\nRoot: HKCR; Subkey: \".quest\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-quest\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-quest\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-quest\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-quest\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n; File association: QUEST-SAVE\nRoot: HKCR; Subkey: \".quest-save\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-quest-save\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-quest-save\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Saved Game\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-quest-save\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-quest-save\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n; File association: ASL\nRoot: HKCR; Subkey: \".asl\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-asl\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-asl\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-asl\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-asl\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n; File association: CAS\nRoot: HKCR; Subkey: \".cas\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-cas\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-cas\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Game\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-cas\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-cas\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n; File association: QSG\nRoot: HKCR; Subkey: \".qsg\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest-qsg\"; Flags: uninsdeletevalue\nRoot: HKCR; Subkey: \"Quest-qsg\"; ValueType: string; ValueName: \"\"; ValueData: \"Quest Saved Game\"; Flags: uninsdeletekey\nRoot: HKCR; Subkey: \"Quest-qsg\\DefaultIcon\"; ValueType: string; ValueName: \"\"; ValueData: \"{app}\\QUEST.EXE,0\"\nRoot: HKCR; Subkey: \"Quest-qsg\\shell\\open\\command\"; ValueType: string; ValueName: \"\"; ValueData: \"\"\"{app}\\QUEST.EXE\"\" \"\"%1\"\"\"\n\n\n#include \"scripts\\products.iss\"\n#include \"scripts\\products\\stringversion.iss\"\n#include \"scripts\\products\\winversion.iss\"\n#include \"scripts\\products\\fileversion.iss\"\n#include \"scripts\\products\\dotnetfxversion.iss\"\n#include \"scripts\\products\\dotnetfx40client.iss\"\n#include \"scripts\\products\\dotnetfx40full.iss\"\n\n[CustomMessages]\nwin_sp_title=Windows %1 Service Pack %2\n\n[Code]\nfunction InitializeSetup(): boolean;\nbegin\n\t//init windows version\n\tinitwinversion();\n\n\tif (not netfxinstalled(NetFx40Client, '') and not netfxinstalled(NetFx40Full, '')) then\n\t\tdotnetfx40client();\n\n\tResult := true;\nend;\n</code></pre>\n<hr>\n<p>You could change the Setup settings from Quest to your game's name, the icon to whatever you like, and be sure to change the Registry settings so they wouldn't interfere with an official version of Quest, if already installed on the user's machine.</p>\n<p>To have the installer run your game instead of just launching Quest, you could change this line:</p>\n<pre><code>Filename: \"{app}\\Quest.exe\"; Description: \"Launch Quest\"; Flags: nowait postinstall skipifsilent\n</code></pre>\n<p>...to:</p>\n<pre><code>Filename: \"{app}\\Play.bat\"; Description: \"Play the Game\"; Flags: nowait postinstall skipifsilent\n</code></pre>\n<hr>\n<p>...of course, you'd need to make sure you had all your files in whatever directories to which you point in your BAT file when loading the game.  It may be easier to put the game file in the \"Quest 5\" folder and change the BAT script to:</p>\n<pre><code>@echo off\nstart \"Quest 5\\Quest.exe\" \"Quest 5\\gamename.quest\"\n</code></pre>\n<p>...and I'm not certain this would run correctly from the installer.  This is because I'm not sure what the BAT file would consider to be the current working directory.  I am sure that runs the game from the command line as long as both paths are correct.</p>\n\n",
      "PostDate": "2018-05-20T04:57:03.0074245Z",
      "LastEditDate": "2018-05-22T13:51:39.8086127Z",
      "link": null
    }
  ]
}
