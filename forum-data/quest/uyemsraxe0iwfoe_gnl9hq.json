{
  "Topic": {
    "TopicId": "uyemsraxe0iwfoe_gnl9hq",
    "ForumId": "10",
    "Title": "How to script specific text each turn for several",
    "LastUpdated": "2018-03-26T22:19:27.6524292Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1a7615b2-6269-4a59-9546-cf527abb227f",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi so what I want to do is start an event like as a fight. The event will last a certain amount of terms, for example ten. The player has lets say three actions they can make, punch, bob, or block. Now what actions they choose per each ten turns has not change in the fights out come, but each turn each action gets a different response scripted for that specific turn. So turn one has a different answer for all they actions, as does two and so on. But its always the same responses per action on a specific turn. beacuse I want each turn to reflect the progress of the fight which will end at ten turns. \r\nHow do I go about doing this?\r\nI assume I would use the show menu each turn with a split for each action. And probably a variable or something that counts from 1-10, with code like if turn = 2 then do this answer, turn now = 3 or something. Now idea how to code this though?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi so what I want to do is start an event like as a fight. The event will last a certain amount of terms, for example ten. The player has lets say three actions they can make, punch, bob, or block. Now what actions they choose per each ten turns has not change in the fights out come, but each turn each action gets a different response scripted for that specific turn. So turn one has a different answer for all they actions, as does two and so on. But its always the same responses per action on a specific turn. beacuse I want each turn to reflect the progress of the fight which will end at ten turns.<br>\nHow do I go about doing this?<br>\nI assume I would use the show menu each turn with a split for each action. And probably a variable or something that counts from 1-10, with code like if turn = 2 then do this answer, turn now = 3 or something. Now idea how to code this though?</p>\n\n",
      "PostDate": "2018-03-26T22:19:27.6524292Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a2075ac9-9b9f-47e0-808a-a787ff6aa15f",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Uh... I'm having some trouble following what you're trying to accomplish. Could you try again with better grammar, or post an example of what you'd like your game to do?",
      "EditableFormat": "markdown",
      "HTML": "<p>Uh... I'm having some trouble following what you're trying to accomplish. Could you try again with better grammar, or post an example of what you'd like your game to do?</p>\n\n",
      "PostDate": "2018-03-26T22:34:53.651535Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3d604b27-9acd-4174-8c97-e2117a2279af",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well I can put it the fight last ten turns of the game. and the player has three actions to make one of per turn and each turn those three actions have a different answer specific to that turn.\r\nSo,\r\nTurn 1\r\nAnswers tier 1\r\n\r\nTurn 2 \r\nAnswers tier 2\r\n\r\nAt the end of ten turns the fight is over and the out come is not affected by which choices each turn the player made.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well I can put it the fight last ten turns of the game. and the player has three actions to make one of per turn and each turn those three actions have a different answer specific to that turn.<br>\nSo,<br>\nTurn 1<br>\nAnswers tier 1</p>\n<p>Turn 2<br>\nAnswers tier 2</p>\n<p>At the end of ten turns the fight is over and the out come is not affected by which choices each turn the player made.</p>\n\n",
      "PostDate": "2018-03-26T22:53:29.7252665Z",
      "LastEditDate": "2018-03-26T22:54:00.851535Z",
      "link": null
    },
    {
      "PostId": "64da5eed-89c6-420e-ae7c-ccfe78816d5c",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So... let me see if I understand it.\r\n\r\nTurn 1\r\nPlayer inputs an action.\r\nIf Action 1, run Action1-Turn1\r\nIf Action2, run Action2-Turn1\r\n\r\nTurn 2\r\nPlayer inputs an action\r\nIf Action1, run Action1-Turn2\r\nIf Action2, run Action2-Turn2\r\n\r\nAnd etc?",
      "EditableFormat": "markdown",
      "HTML": "<p>So... let me see if I understand it.</p>\n<p>Turn 1<br>\nPlayer inputs an action.<br>\nIf Action 1, run Action1-Turn1<br>\nIf Action2, run Action2-Turn1</p>\n<p>Turn 2<br>\nPlayer inputs an action<br>\nIf Action1, run Action1-Turn2<br>\nIf Action2, run Action2-Turn2</p>\n<p>And etc?</p>\n\n",
      "PostDate": "2018-03-27T00:35:23.4394433Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a892d02c-23ec-4509-99f6-a4f24a0f3015",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Io... I think you got it...\r\nThickar... You have your idea, and I bet you have it pictured of what you want, but just haven't put the two together yet...\r\nOne easy way would be to make 10 \"rooms\", called Round_1... Round_2... Round_3... and so on...\r\nafter the player enters his command, say what the player did, then move the player to the next \"room\".\r\nAfter Round_10, move the player to Round_End, and describe weighter (I still can't spell that %%$@#%^ word!!!)\r\nthe player won or lost, and how badly they got beat up...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Io... I think you got it...<br>\nThickar... You have your idea, and I bet you have it pictured of what you want, but just haven't put the two together yet...<br>\nOne easy way would be to make 10 \"rooms\", called Round_1... Round_2... Round_3... and so on...<br>\nafter the player enters his command, say what the player did, then move the player to the next \"room\".<br>\nAfter Round_10, move the player to Round_End, and describe weighter (I still can't spell that %%$@#%^ word!!!)<br>\nthe player won or lost, and how badly they got beat up...</p>\n\n",
      "PostDate": "2018-03-27T03:30:42.0233924Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e32abb5e-8d32-4d31-8100-0e34759887c9",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ya I think you got it Io, is there a way to do it with out making a room for each turn, I want to use this process quite a few time and having that many rooms would make organization tough",
      "EditableFormat": "markdown",
      "HTML": "<p>Ya I think you got it Io, is there a way to do it with out making a room for each turn, I want to use this process quite a few time and having that many rooms would make organization tough</p>\n\n",
      "PostDate": "2018-03-27T03:34:16.6654051Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d754be47-254c-4beb-a8ab-774b088148e4",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thickar yes, there is. I know there is, because I did a similar thing in my game.\r\n\r\nThis is my method, adapted for what you want.  There may be simpler ones:\r\n\r\nFirst, create a room. Let's call it FightRoom. Fight room has NO text in it. Zero. Nada. Zip.\r\n\r\nTurn 1 comes. Move the player to FightRoom. Whatever text we want for Turn 1, we'll use print to insert it! Have the player input an action, and depending on what it is, print more text.\r\n\r\nNow Turn 2. How do we do this?\r\n\r\nFirst, in FightRoom, go to 'Before entering' and add 'Clear the screen'. Now, we call a function  called 'ResetRoom'. It moves the player super-fast to a textless empty room called Empty, then BACK to FightRoom.\r\n\r\nNow we're ready to begin Turn 2. Once Turn 2's text-action-text is done, ResetRoom, and call Turn 3. Turn 4. Etc.\r\n\r\nEdit: Actually, in retrospect, my game needed ResetRoom but yours from the sound of it doesn't. You can just call 'Clear the screen' without worrying about other rooms.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thickar yes, there is. I know there is, because I did a similar thing in my game.</p>\n<p>This is my method, adapted for what you want.  There may be simpler ones:</p>\n<p>First, create a room. Let's call it FightRoom. Fight room has NO text in it. Zero. Nada. Zip.</p>\n<p>Turn 1 comes. Move the player to FightRoom. Whatever text we want for Turn 1, we'll use print to insert it! Have the player input an action, and depending on what it is, print more text.</p>\n<p>Now Turn 2. How do we do this?</p>\n<p>First, in FightRoom, go to 'Before entering' and add 'Clear the screen'. Now, we call a function  called 'ResetRoom'. It moves the player super-fast to a textless empty room called Empty, then BACK to FightRoom.</p>\n<p>Now we're ready to begin Turn 2. Once Turn 2's text-action-text is done, ResetRoom, and call Turn 3. Turn 4. Etc.</p>\n<p>Edit: Actually, in retrospect, my game needed ResetRoom but yours from the sound of it doesn't. You can just call 'Clear the screen' without worrying about other rooms.</p>\n\n",
      "PostDate": "2018-03-27T03:41:06.7320672Z",
      "LastEditDate": "2018-03-27T03:46:22.8097668Z",
      "link": null
    },
    {
      "PostId": "570f7f5b-6a14-4185-8adb-d42fe0960e28",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks thats a good idea, but I still need a way to keep track of the changing of the turns relative to when the fight started. So since the turn count can vary when the feet started, how should I do this?\r\nA variable that increases with each passing turn maybe? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks thats a good idea, but I still need a way to keep track of the changing of the turns relative to when the fight started. So since the turn count can vary when the feet started, how should I do this?<br>\nA variable that increases with each passing turn maybe?</p>\n\n",
      "PostDate": "2018-03-27T04:01:47.8690312Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6bf07ff4-541d-4ef9-8eeb-da251bb537fe",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thickar that's the simplest way: Player.Turn as an integer, and whenever a turn ends, Player.Turn=Player.Turn+1.\r\n\r\nIf you have multiple encounters, and either each turn is different or you START at different turns, then I recommend some additional variable to keep track of that. Call it Player.Fight, it can be a string or an integer.\r\n\r\nSo example: We have two encounters. In one we fight a zombie, in another we fight a skeleton. For the zombie we start an earlier turn, and the skeleton we start a later turn; as we fight the zombie we knock its flesh off and turn it into a skeleton.\r\n\r\nWhen starting the fight:\r\n\r\nIf Player.Fight=Zombie, Player.Turn=1\r\nelse if Player.Fight=Skeleton, Player.Turn=5 (Note, if you have a LOT of fights, Switch is preferable to a giant stack of if/else)\r\n\r\nAnd if you want the Zombie's turn 7 to vary from the Skeleton's turn 7, then that's a simple case too if 'If Player.Fight=Skeleton' and such.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thickar that's the simplest way: Player.Turn as an integer, and whenever a turn ends, Player.Turn=Player.Turn+1.</p>\n<p>If you have multiple encounters, and either each turn is different or you START at different turns, then I recommend some additional variable to keep track of that. Call it Player.Fight, it can be a string or an integer.</p>\n<p>So example: We have two encounters. In one we fight a zombie, in another we fight a skeleton. For the zombie we start an earlier turn, and the skeleton we start a later turn; as we fight the zombie we knock its flesh off and turn it into a skeleton.</p>\n<p>When starting the fight:</p>\n<p>If Player.Fight=Zombie, Player.Turn=1<br>\nelse if Player.Fight=Skeleton, Player.Turn=5 (Note, if you have a LOT of fights, Switch is preferable to a giant stack of if/else)</p>\n<p>And if you want the Zombie's turn 7 to vary from the Skeleton's turn 7, then that's a simple case too if 'If Player.Fight=Skeleton' and such.</p>\n\n",
      "PostDate": "2018-03-27T04:07:42.8233091Z",
      "LastEditDate": "2018-03-27T04:17:57.5421764Z",
      "link": null
    },
    {
      "PostId": "f079bd7d-a0ef-4c13-b629-42e3c8509965",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you just want to display messages, I wouldn't bother with a fight room. I'd just set it up as a function. For example, call the function `DoFight`; it could look something like this:\r\n\r\n```\r\nif (not HasInt(game, \"fightTurn\")) {\r\n  game.fightTurn = 0\r\n  game.fightResults = NewDictionary()\r\n  dictionary add (game.fightResults, \"punch\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\r\n  dictionary add (game.fightResults, \"bob\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\r\n  dictionary add (game.fightResults, \"block\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\r\n}\r\nmsg (\"Fight! Round \"+game.fightTurn)\r\nShowMenu(\"What do you do?\", Split(\"punch;bob;block\"). false) {\r\n  fightResults = DictionaryItem(game.fightResults, result)\r\n  msg (ListItem (fightResults, game.fightTurn))\r\n  game.fightTurn = game.fightTurn + 1\r\n  if (game.fightTurn < ListCount(fightResults)) {\r\n    DoFight\r\n  }\r\n  else {\r\n    game.fightTurn = null\r\n    game.fightResults = null\r\n    msg (\"Congratulations! You won!\")\r\n    // If you want to do anything else after the fight, put it here\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>If you just want to display messages, I wouldn't bother with a fight room. I'd just set it up as a function. For example, call the function <code>DoFight</code>; it could look something like this:</p>\n<pre><code>if (not HasInt(game, \"fightTurn\")) {\n  game.fightTurn = 0\n  game.fightResults = NewDictionary()\n  dictionary add (game.fightResults, \"punch\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\n  dictionary add (game.fightResults, \"bob\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\n  dictionary add (game.fightResults, \"block\", Split(\"turn 1 response;turn 2 response;turn 3 response;etc\"))\n}\nmsg (\"Fight! Round \"+game.fightTurn)\nShowMenu(\"What do you do?\", Split(\"punch;bob;block\"). false) {\n  fightResults = DictionaryItem(game.fightResults, result)\n  msg (ListItem (fightResults, game.fightTurn))\n  game.fightTurn = game.fightTurn + 1\n  if (game.fightTurn &lt; ListCount(fightResults)) {\n    DoFight\n  }\n  else {\n    game.fightTurn = null\n    game.fightResults = null\n    msg (\"Congratulations! You won!\")\n    // If you want to do anything else after the fight, put it here\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2018-03-27T09:47:48.9459883Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
