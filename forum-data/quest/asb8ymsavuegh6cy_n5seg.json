{
  "Topic": {
    "TopicId": "asb8ymsavuegh6cy_n5seg",
    "ForumId": "10",
    "Title": "Even more complex character descriptions!",
    "LastUpdated": "2017-07-06T18:42:21.5651268Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b59218c8-1392-43e3-bfea-12cae9ccb720",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nRight, I've got a bit of stuff where I'm not sure what's going wrong. Quick Rundown:\r\n\r\n```player.tattooed``` is currently the placeholder for if the player has any scars or not. Boolean that starts false.\r\n```player.tattoos``` is the attribute that tells what the player is scarred (in this case) with.\r\n\r\nIn game, I have a ```Test``` verb that will tell me the status of these attributes. \r\n\r\nFor the sake of testing, I made a drink that applies:\r\n```player.tattooed = True```\r\n```player.tattoos= Goblin```\r\nTest function returns that these two come out fine. ```{player.tattooed}``` returns **true** and ```{player.tattoos}``` returns **Goblin**.\r\n\r\nSo, I'm pretty sure that all works fine. Now the bit I'm having issues with.\r\n\r\n```\r\nbody covered in {player.skincolour} skin {if player.tattooed=True:{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}{player.plevel=C:unsightly}{player.plevel=D:glossy}{player.plevel=E:faint} scars. {player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.}{player.plevel=B:You hope there’s some way to remove the marks.}{player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.}{player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.}{player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning. The one {Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly} is currently your favourite.}}}\r\n```\r\nNot a finished product but an interesting test. I'm pretty sure all the brackets are correct, and that I've used things correctly, but when it comes to print:\r\n\r\n**body covered in X skin**\r\n\r\nI'm guessing I've done something wrong with the if function at the start, if this is compatible with the current version of Quest?\r\n\r\n**Bonus Question** Something I've been struggling on a little while now.\r\n\r\nI know for commands there is a way to make it so more than one word can be used to activate them. I'm trying to do the same with a ```get input``` thing.\r\n\r\nI've tried various things, but I should probably just show my code.\r\n\r\n```\r\nif (result = (\"e;east;East;E\".\";\")) {\r\n  msg (\"You go east\r\n  .\")\r\n}\r\nelse if (result = (\"w;west;West;W\".\";\")) {\r\n}\r\n```\r\nIdeally it would make it so any of the inputs there would activate this ```Get Input```. Then I just need to figure out how to make it loop if the answer is wrong.  And put selectable options in text. So much work to be done x__X",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Right, I've got a bit of stuff where I'm not sure what's going wrong. Quick Rundown:</p>\n<p><code>player.tattooed</code> is currently the placeholder for if the player has any scars or not. Boolean that starts false.<br>\n<code>player.tattoos</code> is the attribute that tells what the player is scarred (in this case) with.</p>\n<p>In game, I have a <code>Test</code> verb that will tell me the status of these attributes.</p>\n<p>For the sake of testing, I made a drink that applies:<br>\n<code>player.tattooed = True</code><br>\n<code>player.tattoos= Goblin</code><br>\nTest function returns that these two come out fine. <code>{player.tattooed}</code> returns <strong>true</strong> and <code>{player.tattoos}</code> returns <strong>Goblin</strong>.</p>\n<p>So, I'm pretty sure that all works fine. Now the bit I'm having issues with.</p>\n<pre><code>body covered in {player.skincolour} skin {if player.tattooed=True:{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}{player.plevel=C:unsightly}{player.plevel=D:glossy}{player.plevel=E:faint} scars. {player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.}{player.plevel=B:You hope there’s some way to remove the marks.}{player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.}{player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.}{player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning. The one {Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly} is currently your favourite.}}}\n</code></pre>\n<p>Not a finished product but an interesting test. I'm pretty sure all the brackets are correct, and that I've used things correctly, but when it comes to print:</p>\n<p><strong>body covered in X skin</strong></p>\n<p>I'm guessing I've done something wrong with the if function at the start, if this is compatible with the current version of Quest?</p>\n<p><strong>Bonus Question</strong> Something I've been struggling on a little while now.</p>\n<p>I know for commands there is a way to make it so more than one word can be used to activate them. I'm trying to do the same with a <code>get input</code> thing.</p>\n<p>I've tried various things, but I should probably just show my code.</p>\n<pre><code>if (result = (\"e;east;East;E\".\";\")) {\n  msg (\"You go east\n  .\")\n}\nelse if (result = (\"w;west;West;W\".\";\")) {\n}\n</code></pre>\n<p>Ideally it would make it so any of the inputs there would activate this <code>Get Input</code>. Then I just need to figure out how to make it loop if the answer is wrong.  And put selectable options in text. So much work to be done x__X</p>\n\n",
      "PostDate": "2017-07-06T18:42:21.5651268Z",
      "LastEditDate": "2017-07-06T20:13:33.6801578Z",
      "link": null
    },
    {
      "PostId": "82dcd752-e314-435d-ba9d-ef4e3c50617f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "for the 'player.tattoos = Goblin', are you using this as an Object Attribute where 'Goblin' is an actual Object in your game with its own Attributes, or are you using this as a String Attribute and 'Goblin' is just a text/string that you can then use to do whatever with (string match/check in 'if' Scripts or even get the Object of it via 'GetObject (NAME_OF_STRING_VALE)' Function) ???\r\n\r\nif it's suppose to be a String Attribute, then you need the double quotes on 'Goblin', see here: player.tattoos = \"Goblin\", and if you created the Attribute through the GUI/Editor, make sure it's Attribute Type is set as a 'string' (as a String Attribute).\r\n\r\nif it's suppose to be an Object (reference/pointer) Attribute, then it's fine as is (as Object reference/pointer Values do NOT have the double quotes)\r\n\r\nas for your description string... this is really complicated stuff to do with the text processor commands... you might want to use normal scripting instead as it'll be far less complicated getting it correct and working...\r\n\r\nbut let me try... with using the text processor commands (will be a good challenge even for me, and one I might fail at too, lol)...\r\n\r\n-------------\r\n\r\nI'm going to assume your 'player.tattoos = goblin' is a String Attribute for this: player.tattoos = \"Goblin\", but if it's an Object Attribute, let me know and I'll see if it'd require any adjusting for the desccription string below\r\n\r\nalso, make sure all of your spellings are correct/matching, for example did you use 'colour' everywhere, or did you use 'colour' and 'color', which wouldn't be matching up. Or example: 'tattooed' vs accidentally doing: 'tattood'\r\n\r\n```\r\n// this is how I did it, to make it easier on me:\r\n// (and hopefully, it works, lol)\r\n\r\nmsg\r\n(\"\r\n  body covered in\r\n  {\r\n    player.skincolour\r\n  }\r\n  skin,\r\n  {\r\n    if player.tattooed:\r\n    {\r\n      if player.tattoos=Goblin: marked all over with\r\n      {\r\n        if player.plevel=A:horrifc\r\n      }\r\n      {\r\n        if player.plevel=B:awful\r\n      }\r\n      {\r\n        if player.plevel=C:unsightly\r\n      }\r\n      {\r\n        if player.plevel=D:glossy\r\n      }\r\n      {\r\n        if player.plevel=E:faint\r\n      }\r\n      scars.\r\n      {\r\n        if player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.\r\n      }\r\n      {\r\n        if player.plevel=B:You hope there’s some way to remove the marks.\r\n      }\r\n      {\r\n        if player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.\r\n      }\r\n      {\r\n        if player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.\r\n      }\r\n      {\r\n        if player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning.\r\n      }\r\n      The one\r\n      {\r\n        Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly\r\n      }\r\n      is currently your favourite.\r\n    }\r\n  }\r\n\")\r\n\r\n// then, I put it back into a block/paragraph (making sure I get the correct/desired spacing for when it reads/displays during game play):\r\n\r\nmsg (\"body covered in {player.skincolour} skin, {if player.tattooed:{if player.tattoos=Goblin:marked all over with {if player.plevel=A:horrifc}{if player.plevel=B:awful}{if player.plevel=C:unsightly}{if player.plevel=D:glossy}{if player.plevel=E:faint} scars. {if player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.}{if player.plevel=B:You hope there’s some way to remove the marks.}{if player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.}{if player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.}{if player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning.} The one {Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly} is currently your favourite.}}\")\r\n```\r\n\r\n-------\r\n\r\nask if you need help with anything, and/or let me know if it doesn't work.",
      "EditableFormat": "markdown",
      "HTML": "<p>for the 'player.tattoos = Goblin', are you using this as an Object Attribute where 'Goblin' is an actual Object in your game with its own Attributes, or are you using this as a String Attribute and 'Goblin' is just a text/string that you can then use to do whatever with (string match/check in 'if' Scripts or even get the Object of it via 'GetObject (NAME_OF_STRING_VALE)' Function) ???</p>\n<p>if it's suppose to be a String Attribute, then you need the double quotes on 'Goblin', see here: player.tattoos = \"Goblin\", and if you created the Attribute through the GUI/Editor, make sure it's Attribute Type is set as a 'string' (as a String Attribute).</p>\n<p>if it's suppose to be an Object (reference/pointer) Attribute, then it's fine as is (as Object reference/pointer Values do NOT have the double quotes)</p>\n<p>as for your description string... this is really complicated stuff to do with the text processor commands... you might want to use normal scripting instead as it'll be far less complicated getting it correct and working...</p>\n<p>but let me try... with using the text processor commands (will be a good challenge even for me, and one I might fail at too, lol)...</p>\n<hr>\n<p>I'm going to assume your 'player.tattoos = goblin' is a String Attribute for this: player.tattoos = \"Goblin\", but if it's an Object Attribute, let me know and I'll see if it'd require any adjusting for the desccription string below</p>\n<p>also, make sure all of your spellings are correct/matching, for example did you use 'colour' everywhere, or did you use 'colour' and 'color', which wouldn't be matching up. Or example: 'tattooed' vs accidentally doing: 'tattood'</p>\n<pre><code>// this is how I did it, to make it easier on me:\n// (and hopefully, it works, lol)\n\nmsg\n(\"\n  body covered in\n  {\n    player.skincolour\n  }\n  skin,\n  {\n    if player.tattooed:\n    {\n      if player.tattoos=Goblin: marked all over with\n      {\n        if player.plevel=A:horrifc\n      }\n      {\n        if player.plevel=B:awful\n      }\n      {\n        if player.plevel=C:unsightly\n      }\n      {\n        if player.plevel=D:glossy\n      }\n      {\n        if player.plevel=E:faint\n      }\n      scars.\n      {\n        if player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.\n      }\n      {\n        if player.plevel=B:You hope there’s some way to remove the marks.\n      }\n      {\n        if player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.\n      }\n      {\n        if player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.\n      }\n      {\n        if player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning.\n      }\n      The one\n      {\n        Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly\n      }\n      is currently your favourite.\n    }\n  }\n\")\n\n// then, I put it back into a block/paragraph (making sure I get the correct/desired spacing for when it reads/displays during game play):\n\nmsg (\"body covered in {player.skincolour} skin, {if player.tattooed:{if player.tattoos=Goblin:marked all over with {if player.plevel=A:horrifc}{if player.plevel=B:awful}{if player.plevel=C:unsightly}{if player.plevel=D:glossy}{if player.plevel=E:faint} scars. {if player.plevel=A:You itch for some way to remove the horrible marks, and the memories that come with them.}{if player.plevel=B:You hope there’s some way to remove the marks.}{if player.plevel=C:While you wonder if there’s some way of getting rid of the marks, you can’t deny there’s a little… Toughness to the whole thing.}{if player.plevel=D:There’s something neat about having your ‘scoreboard’ spread across you like that, marks of survival.}{if player.plevel=E:You wear the scars with pride, every one a badge of honour that comes with memories vivid enough to have you grinning.} The one {Random:over your eye:across your cheek:down your lip:over your forhead:down your arm:across your belly} is currently your favourite.}}\")\n</code></pre>\n<hr>\n<p>ask if you need help with anything, and/or let me know if it doesn't work.</p>\n\n",
      "PostDate": "2017-07-06T20:46:22.7715048Z",
      "LastEditDate": "2017-07-06T21:06:14.3306019Z",
      "link": null
    },
    {
      "PostId": "b8fe88f5-507e-49e1-b08a-f823c1c38f02",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "as for your second/bonus question:\r\n\r\n```\r\nget input {\r\n  if (LCase (result) = \"e\" or LCase (result) = \"east\") { // if you had lots of options, then it'd be better to have them as items in a List/Dictionary Attribute and use iteration (foreach) on them, but this is a bit more complex stuff (using Lists/Dictionaries)\r\n    msg (\"You go east.\")\r\n  } else if (LCase (result) = \"w\" or LCase (result) = \"west\") {\r\n    msg (\"You go west.\")\r\n  } else if (LCase (result) = \"n\" or LCase (result) = \"north\") {\r\n    msg (\"You go north.\")\r\n  } else if (LCase (result) = \"s\" or LCase (result) = \"south\") {\r\n    msg (\"You go south.\")\r\n  }\r\n}\r\n```\r\n\r\n--------\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/string/lcase.html\r\n\r\n```\r\nthe 'LCase' Function takes whatever your String Value is (whatever pattern of upper/lower/upper+lower cases it is), and makes every letter (alphabet) character of it, be lower case. And then we care that full lower case value to another full lower case value if (LCase (\"EAST\") [ ----->  if (\"east\")] = \"east\") -----> if (\"east\" = \"east\")\r\n```\r\n\r\n-------------\r\n\r\n--------------------------\r\n\r\nalternatively, you could do this (but it's just better to work with lower case, so don't do this, lol):\r\n\r\n```\r\nget input {\r\n  if (UCase (result) = \"E\" or UCase (result) = \"EAST\") {\r\n    msg (\"You go east.\")\r\n  } else if (UCase (result) = \"W\" or UCase (result) = \"WEST\") {\r\n    msg (\"You go west.\")\r\n  } else if (UCase (result) = \"N\" or UCase (result) = \"NORTH\") {\r\n    msg (\"You go north.\")\r\n  } else if (UCase (result) = \"S\" or UCase (result) = \"SOUTH\") {\r\n    msg (\"You go south.\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>as for your second/bonus question:</p>\n<pre><code>get input {\n  if (LCase (result) = \"e\" or LCase (result) = \"east\") { // if you had lots of options, then it'd be better to have them as items in a List/Dictionary Attribute and use iteration (foreach) on them, but this is a bit more complex stuff (using Lists/Dictionaries)\n    msg (\"You go east.\")\n  } else if (LCase (result) = \"w\" or LCase (result) = \"west\") {\n    msg (\"You go west.\")\n  } else if (LCase (result) = \"n\" or LCase (result) = \"north\") {\n    msg (\"You go north.\")\n  } else if (LCase (result) = \"s\" or LCase (result) = \"south\") {\n    msg (\"You go south.\")\n  }\n}\n</code></pre>\n<hr>\n<p>http://docs.textadventures.co.uk/quest/functions/string/lcase.html</p>\n<pre><code>the 'LCase' Function takes whatever your String Value is (whatever pattern of upper/lower/upper+lower cases it is), and makes every letter (alphabet) character of it, be lower case. And then we care that full lower case value to another full lower case value if (LCase (\"EAST\") [ -----&gt;  if (\"east\")] = \"east\") -----&gt; if (\"east\" = \"east\")\n</code></pre>\n<hr>\n<hr>\n<p>alternatively, you could do this (but it's just better to work with lower case, so don't do this, lol):</p>\n<pre><code>get input {\n  if (UCase (result) = \"E\" or UCase (result) = \"EAST\") {\n    msg (\"You go east.\")\n  } else if (UCase (result) = \"W\" or UCase (result) = \"WEST\") {\n    msg (\"You go west.\")\n  } else if (UCase (result) = \"N\" or UCase (result) = \"NORTH\") {\n    msg (\"You go north.\")\n  } else if (UCase (result) = \"S\" or UCase (result) = \"SOUTH\") {\n    msg (\"You go south.\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2017-07-06T20:59:25.0091409Z",
      "LastEditDate": "2017-07-06T21:02:42.632699Z",
      "link": null
    },
    {
      "PostId": "218c4835-a884-48b1-9eef-4017d0fdaf2b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You have missed a load of `if`s. You have:\r\n```\r\nbody covered in {player.skincolour} skin {if player.tattooed=True:{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}\r\n```\r\nShould be\r\n```\r\nbody covered in {player.skincolour} skin {if player.tattooed=True:{if player.tattoos=Goblin: marked all over with {if player.plevel=A:horrific}{if player.plevel=B:awful}\r\n```\r\nPersonally, I would just have one attribute. If the goblin has none, set it to `null` (which is the same as no attribute). Then you can just do:\r\n```\r\nbody covered in {player.skincolour} skin {if player.tattoos=Goblin: marked all over with {if player.plevel=A:horrific}{if player.plevel=B:awful}\r\n```\r\nFor the bonus question, see here:\r\nhttp://docs.textadventures.co.uk/quest/asking_a_question.html\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>You have missed a load of <code>if</code>s. You have:</p>\n<pre><code>body covered in {player.skincolour} skin {if player.tattooed=True:{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}\n</code></pre>\n<p>Should be</p>\n<pre><code>body covered in {player.skincolour} skin {if player.tattooed=True:{if player.tattoos=Goblin: marked all over with {if player.plevel=A:horrific}{if player.plevel=B:awful}\n</code></pre>\n<p>Personally, I would just have one attribute. If the goblin has none, set it to <code>null</code> (which is the same as no attribute). Then you can just do:</p>\n<pre><code>body covered in {player.skincolour} skin {if player.tattoos=Goblin: marked all over with {if player.plevel=A:horrific}{if player.plevel=B:awful}\n</code></pre>\n<p>For the bonus question, see here:<br>\nhttp://docs.textadventures.co.uk/quest/asking_a_question.html</p>\n\n",
      "PostDate": "2017-07-06T21:27:07.4258994Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "18032c25-6e3c-4a3d-be9d-d59d604e2789",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}{player.plevel=C:unsightly}{player.plevel=D:glossy}{player.plevel=E:faint}\r\nOr... If you change the player.plevel from A to E to the text value...\r\nor ...\r\nPL=Split(\"horrific, awful, unsightly, glossy, faint}\", \",\")\r\nthen...\r\nchange A - E to 0 - 4\r\nso that...\r\nscars=StringListItem(PL, player.plevel)\r\n... marked all over with {scars} scars...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>...{player.tattoos=Goblin: marked all over with {player.plevel=A:horrific}{player.plevel=B:awful}{player.plevel=C:unsightly}{player.plevel=D:glossy}{player.plevel=E:faint}<br>\nOr... If you change the player.plevel from A to E to the text value...<br>\nor ...<br>\nPL=Split(\"horrific, awful, unsightly, glossy, faint}\", \",\")<br>\nthen...<br>\nchange A - E to 0 - 4<br>\nso that...<br>\nscars=StringListItem(PL, player.plevel)<br>\n... marked all over with {scars} scars...</p>\n\n",
      "PostDate": "2017-07-07T02:50:48.6961106Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
