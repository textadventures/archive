{
  "Topic": {
    "TopicId": "-j8fmchrp0yvdst4o4nq8w",
    "ForumId": "10",
    "Title": "Change color of map grid labels?",
    "LastUpdated": "2017-08-13T01:59:32.0227461Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e0a353be-a377-4914-8d99-cc5ed5a31875",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I use a black background.  The map grid labels are also in black though.  So I tried changing their colors to white with these:\r\n```\r\nGarden.grid_label = {color:White:Garden}\r\nGarden.grid_label = {=color:White:Garden}\r\nGarden.grid_label = {evalcolor:White:Garden}\r\nGarden.grid_label = {eval:color:White:Garden}\r\n```\r\nGet error messages.  Any other ideas welcome.",
      "EditableFormat": "markdown",
      "HTML": "<p>I use a black background.  The map grid labels are also in black though.  So I tried changing their colors to white with these:</p>\n<pre><code>Garden.grid_label = {color:White:Garden}\nGarden.grid_label = {=color:White:Garden}\nGarden.grid_label = {evalcolor:White:Garden}\nGarden.grid_label = {eval:color:White:Garden}\n</code></pre>\n<p>Get error messages.  Any other ideas welcome.</p>\n\n",
      "PostDate": "2017-08-13T01:59:32.0227461Z",
      "LastEditDate": "2017-08-13T02:04:37.5265153Z",
      "link": null
    },
    {
      "PostId": "0375990f-702a-4b0d-b431-5b5fa9ad6597",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Check your second line...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Check your second line...</p>\n\n",
      "PostDate": "2017-08-13T02:03:40.3379733Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ca5e3f16-053b-46d1-8ebe-8539c11c05e5",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Quest doesn't like my second line:\r\n```\r\nError running script: Error compiling expression '=color:White:Garden': SyntaxError: Unexpected token \"=\"; expected one of \"NOT\", \"-\", <INTEGER>, <REAL>, <STRING_LITERAL>, \"True\", \"False\", <HEX_LITERAL>, <CHAR_LITERAL>, \"null\", <DATETIME>, <TIMESPAN>, \"(\", <IDENTIFIER>, \"if\", or \"cast\"Line: 1, Column: 1\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Quest doesn't like my second line:</p>\n<pre><code>Error running script: Error compiling expression '=color:White:Garden': SyntaxError: Unexpected token \"=\"; expected one of \"NOT\", \"-\", &lt;INTEGER&gt;, &lt;REAL&gt;, &lt;STRING_LITERAL&gt;, \"True\", \"False\", &lt;HEX_LITERAL&gt;, &lt;CHAR_LITERAL&gt;, \"null\", &lt;DATETIME&gt;, &lt;TIMESPAN&gt;, \"(\", &lt;IDENTIFIER&gt;, \"if\", or \"cast\"Line: 1, Column: 1\n</code></pre>\n\n",
      "PostDate": "2017-08-13T02:06:53.3563685Z",
      "LastEditDate": "2017-08-13T02:07:43.3439992Z",
      "link": null
    },
    {
      "PostId": "6e03588b-2dcd-4651-8f2c-70b9084b3c16",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, mine was a good guess, but actually, I'm not sure what you are trying to do...\r\n(I'm rather new with Quest)\r\nDoes your first line work?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, mine was a good guess, but actually, I'm not sure what you are trying to do...<br>\n(I'm rather new with Quest)<br>\nDoes your first line work?</p>\n\n",
      "PostDate": "2017-08-13T02:12:16.8858525Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4bf52c58-04e6-4035-84f5-00cfd6aacea0",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The first line does nothing, doesn't even print out \"Garden\".  No error message though.\r\n\r\nI'm trying to change the color of the map grid labels (like \"Garden\") to another color like white because you can't see them against a black background.",
      "EditableFormat": "markdown",
      "HTML": "<p>The first line does nothing, doesn't even print out \"Garden\".  No error message though.</p>\n<p>I'm trying to change the color of the map grid labels (like \"Garden\") to another color like white because you can't see them against a black background.</p>\n\n",
      "PostDate": "2017-08-13T02:15:37.8815218Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "88e583e5-b41a-4fa6-8f60-d26e4a4c41a0",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How did you get the black background?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>How did you get the black background?</p>\n\n",
      "PostDate": "2017-08-13T03:00:55.313185Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2f55e46b-d02c-49e5-b3b3-10c744b4f981",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just changed the background color under the game object --> Display --> Background.  The map color becomes the same as the background color.  I'm not sure if that is what you're asking...",
      "EditableFormat": "markdown",
      "HTML": "<p>I just changed the background color under the game object --&gt; Display --&gt; Background.  The map color becomes the same as the background color.  I'm not sure if that is what you're asking...</p>\n\n",
      "PostDate": "2017-08-13T08:28:17.7057326Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "440bf9a1-49b7-4a5a-a2e2-ec2a68b87b86",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Neat tricks...\r\nThat is what I was asking for...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Neat tricks...<br>\nThat is what I was asking for...</p>\n\n",
      "PostDate": "2017-08-13T16:00:43.782599Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "90cac5f4-4db5-4aec-a596-cc7edbdb6e3b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think thee is a way to change that.\r\nsorry.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think thee is a way to change that.<br>\nsorry.</p>\n\n",
      "PostDate": "2017-08-13T16:18:27.7641736Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d573265e-a73c-43a1-b1a2-8f7781bfaa3e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is probably a HTML class that sets it. It migjt even be called grid_label. If it is you could set the colour like this:\r\n\r\n    JS.setCss(\".grid_label\", \"color:yellow\")\r\n\r\nI cannot check but that might point you (or others) in the right direction.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is probably a HTML class that sets it. It migjt even be called grid_label. If it is you could set the colour like this:</p>\n<pre><code>JS.setCss(\".grid_label\", \"color:yellow\")\n</code></pre>\n<p>I cannot check but that might point you (or others) in the right direction.</p>\n\n",
      "PostDate": "2017-08-14T07:53:43.5246699Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cfc7e884-45c2-4b52-abb3-19ab60762939",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried the Pixie's code with no success.  It looks like there might be a typo \".\" in front of \"grid_label\".  So I also tried:\r\n```\r\nJS.setCss(\"grid_label\", \"color:yellow\")\r\nJS.setCss(\"grid_label\", \"color=yellow\")\r\nJS.setCss(\"grid_label\", \"yellow\")\r\n```\r\nNo luck though.  Thanks for trying Lizerd and Pix.",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried the Pixie's code with no success.  It looks like there might be a typo \".\" in front of \"grid_label\".  So I also tried:</p>\n<pre><code>JS.setCss(\"grid_label\", \"color:yellow\")\nJS.setCss(\"grid_label\", \"color=yellow\")\nJS.setCss(\"grid_label\", \"yellow\")\n</code></pre>\n<p>No luck though.  Thanks for trying Lizerd and Pix.</p>\n\n",
      "PostDate": "2017-08-14T20:28:18.3238342Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d404e1c0-a35a-4649-bf26-5bffec501f68",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I just ended up doing a workaround by changing the map background color so that you can read the grid labels:\r\n```\r\nJS.eval (\"$('#gridPanel').css('background-color', 'Gray')\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I just ended up doing a workaround by changing the map background color so that you can read the grid labels:</p>\n<pre><code>JS.eval (\"$('#gridPanel').css('background-color', 'Gray')\")\n</code></pre>\n\n",
      "PostDate": "2017-08-14T21:04:45.9797821Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ec21d755-9ed2-495d-9ae5-310ab919ed8d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The dot is because i eas guessing it was a class rather than an id. However classes can ne tricky for things that have not be displayed yet. If you can wait s couple of weeks i will have a proper look.",
      "EditableFormat": "markdown",
      "HTML": "<p>The dot is because i eas guessing it was a class rather than an id. However classes can ne tricky for things that have not be displayed yet. If you can wait s couple of weeks i will have a proper look.</p>\n\n",
      "PostDate": "2017-08-14T21:45:11.7903535Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7246482e-90b6-426e-a4f8-92b573711d4f",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks Pix, it's certainly not urgent.  Enjoy your time off!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks Pix, it's certainly not urgent.  Enjoy your time off!</p>\n\n",
      "PostDate": "2017-08-15T00:17:17.31904Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eb443e70-993c-4ca4-8899-d869920616c1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm just guessing here (actually, I think I read this somewhere, but can't find it...), but doesn't the map have something to do with on-the-fly SVG rendering (or something like that)?\r\n\r\nThere's barely any code in the CSS...\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/29301332-02aea30a-8141-11e7-9bcc-6456c948e1e3.png)\r\n\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/29301357-2d6e7296-8141-11e7-97d1-270c74b654c7.png)\r\n\r\n---\r\n\r\n\r\nIs this where the magic lies? (only a guess)\r\n\r\n```\r\ngridApi.drawLabel = function(x, y, z, text) {\r\n    activateLayer(z);\r\n    var pointText = new PointText(gridPoint(x, y));\r\n    pointText.justification = \"center\";\r\n    pointText.fillColor = \"black\";\r\n    pointText.content = text;\r\n    allPaths.push(pointText);\r\n};\r\n```\r\n\r\n\r\n<details><summary>Click here to view ui.html (code)</summary>\r\n\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <script type=\"text/javascript\" src=\"res://local/jquery-2.1.1.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"res://local/jquery-ui.min.js\"></script>\r\n    <script type=\"text/javascript\" src=\"res://local/jquery.multi-open-accordion-1.5.3.js\"></script>\r\n    <script type=\"text/javascript\" src=\"res://local/playercore.js\"></script>\r\n    <script type=\"text/javascript\" src=\"res://local/desktopplayer.js\"></script>\r\n\t<script type=\"text/javascript\" src=\"res://local/paper.js\"></script>\r\n\t<script type=\"text/paperscript\" canvas=\"gridCanvas\">\r\n        var scale, gridX, gridY, player,\r\n    playerVector, playerDestination,\r\n    offsetVector, offsetDestination,\r\n    allPaths = [],\r\n    customLayerPaths = [],\r\n    customLayerObjects = {},\r\n    customLayerSvg = {},\r\n    customLayerImages = {},\r\n    layers = [],\r\n    maxLayer = 7,\r\n    currentLayer = 0,\r\n    offset = new Point(0, 0),\r\n    symbols = {},\r\n    newShapePoints = [];\r\n\r\nfor (var i = -maxLayer; i <= maxLayer; i++) {\r\n    var layer = new Layer();\r\n    layers.push(project.activeLayer);\r\n}\r\n\r\nvar customLayer = new Layer(),\r\n    customLayerOffset = new Point(0, 0);\r\n\r\ncustomLayer.visible = false;\r\n\r\nfunction activateLayer(index) {\r\n    showCustomLayer(false);\r\n    layers[getLayerIndex(index)].activate();\r\n    layers[getLayerIndex(index)].opacity = 1;\r\n    if (currentLayer != index) {\r\n        layers[getLayerIndex(currentLayer)].opacity = 0.2;\r\n        currentLayer = index;\r\n    }\r\n}\r\n\r\nfunction getLayerIndex(index) {\r\n    if (index < -maxLayer || index > maxLayer) {\r\n        alert(\"Layer out of bounds. Current layer range: -\" + maxLayer + \" to \" + maxLayer);\r\n    }\r\n    // layers array represents z-indexes from -maxLayer to maxLayer\r\n    return index + maxLayer;\r\n}\r\n\r\nactivateLayer(currentLayer);\r\n\r\ngridApi.setScale = function(newScale) {\r\n    scale = newScale;\r\n    gridX = new Point(scale, 0);\r\n    gridY = new Point(0, scale);\r\n};\r\n\r\ngridApi.setZoom = function(zoom) {\r\n    paper.view.zoom = zoom;\r\n};\r\n\r\ngridApi.zoomIn = function(amount) {\r\n    paper.view.zoom = paper.view.zoom * (Math.pow(1.1, amount));\r\n};\r\n\r\nfunction onMouseDrag(event) {\r\n    updateOffset(event.delta);\r\n}\r\n\r\nfunction onMouseUp(event) {\r\n    var x = getGridSquareX(event.point);\r\n    var y = getGridSquareY(event.point);\r\n    ASLEvent(\"JS_GridSquareClick\", x + \";\" + y);\r\n}\r\n\r\nfunction updateOffset(delta) {\r\n    setOffset(getOffset() + delta);\r\n    var paths;\r\n    if (project.activeLayer == customLayer) {\r\n        paths = customLayerPaths;\r\n    }\r\n    else {\r\n        paths = allPaths;\r\n    }\r\n    for (var i = 0; i < paths.length; i++) {\r\n        paths[i].position += delta;\r\n    }\r\n    if (playerDestination && project.activeLayer != customLayer) {\r\n        playerDestination += delta;\r\n    }\r\n}\r\n\r\nfunction getOffset() {\r\n    if (project.activeLayer == customLayer) {\r\n        return customLayerOffset;\r\n    }\r\n    return offset;\r\n}\r\n\r\nfunction setOffset(value) {\r\n    if (project.activeLayer == customLayer) {\r\n        customLayerOffset = value;\r\n    }\r\n    else {\r\n        offset = value;\r\n    }\r\n}\r\n\r\nfunction onFrame(event) {\r\n    if (playerVector) {\r\n        var distance = player.position - playerDestination;\r\n        if (distance.length > playerVector.length) {\r\n            player.position += playerVector;\r\n        }\r\n        else {\r\n            player.position = playerDestination;\r\n            playerVector = null;\r\n            playerDestination = null;\r\n\r\n            var playerPositionAbsolute = player.position - offset;\r\n            offsetDestination = paper.view.center - playerPositionAbsolute;\r\n\r\n            offsetVector = (offsetDestination-offset) / 10;\r\n        }\r\n    }\r\n    if (offsetVector) {\r\n        var distance = offset - offsetDestination;\r\n        if (distance.length > offsetVector.length) {\r\n            updateOffset(offsetVector);\r\n        }\r\n        else {\r\n            updateOffset(offsetDestination-offset);\r\n            offsetVector = null;\r\n            offsetDestination = null;\r\n        }\r\n    }\r\n}\r\n\r\ngridApi.drawGrid = function(minX, minY, maxX, maxY, border) {\r\n\r\n    function gridLine(start, end) {\r\n        var path = new Path();\r\n        path.strokeColor = border;\r\n        path.add(start, end);\r\n        addPathToCurrentLayerList(path);\r\n    }\r\n\r\n    // draw the vertical lines\r\n    for (var x = minX; x <= maxX; x++) {\r\n        var start = gridPoint(x, minY);\r\n        var end = gridPoint(x, maxY);\r\n        gridLine(start, end);\r\n    }\r\n\r\n    // draw the horizontal lines\r\n    for (var y = minY; y <= maxY; y++) {\r\n        var start = gridPoint(minX, y);\r\n        var end = gridPoint(maxX, y);\r\n        gridLine(start, end);\r\n    }\r\n};\r\n\r\nfunction gridPoint(x, y) {\r\n    return (gridX * x) + (gridY * y) + getOffset();\r\n}\r\n\r\nfunction getGridSquareX(point) {\r\n    return Math.floor(((point - getOffset()) / gridX).x);\r\n}\r\n\r\nfunction getGridSquareY(point) {\r\n    return Math.floor(((point - getOffset()) / gridY).y);\r\n}\r\n\r\nfunction gridPointNudge(x, y, nudgeX, nudgeY) {\r\n    var result = gridPoint(x, y);\r\n    result.x += nudgeX;\r\n    result.y += nudgeY;\r\n    return result;\r\n}\r\n\r\nvar firstBox = true;\r\n\r\ngridApi.drawBox = function(x, y, z, width, height, border, borderWidth, fill, sides) {\r\n    activateLayer(z);\r\n    // if this is the very first room, centre the canvas by updating the offset\r\n    if (firstBox) {\r\n        var centrePoint = gridPoint(x + width / 2, y + height / 2);\r\n        var offsetX = paper.view.center.x - centrePoint.x;\r\n        var offsetY = paper.view.center.y - centrePoint.y;\r\n        updateOffset(new Point(offsetX, offsetY));\r\n        firstBox = false;\r\n    }\r\n    var path = null;\r\n    var points = [gridPoint(x, y), gridPoint(x + width, y), gridPoint(x + width, y + height), gridPoint(x, y + height)];\r\n    // sides is encoded with bits to represent NESW\r\n    var draw = [sides & 8, sides & 4, sides & 2, sides & 1];\r\n    for (var i = 0; i < 4; i++) {\r\n        var next = (i + 1) % 4;\r\n        if (draw[i]) {\r\n            if (path == null) {\r\n                path = new Path();\r\n                allPaths.push(path);\r\n                if (borderWidth > 0) {\r\n                    path.strokeColor = border;\r\n                    path.strokeWidth = borderWidth;\r\n                }\r\n                path.add(points[i]);\r\n            }\r\n            path.add(points[next]);\r\n        } else {\r\n            path = null;\r\n        }\r\n    }\r\n    var fillPath;\r\n    if (sides == 15) {\r\n        fillPath = path;\r\n    } else {\r\n        fillPath = new Path();\r\n        fillPath.add(points[0], points[1], points[2], points[3]);\r\n        allPaths.push(fillPath);\r\n    }\r\n    fillPath.fillColor = fill;\r\n    fillPath.closed = true;\r\n};\r\n\r\ngridApi.drawLine = function(x1, y1, x2, y2, border, borderWidth) {\r\n    var path = new Path;\r\n    path.strokeColor = border;\r\n    path.strokeWidth = borderWidth;\r\n    path.add(gridPoint(x1, y1));\r\n    path.add(gridPoint(x2, y2));\r\n    addPathToCurrentLayerList(path);\r\n};\r\n\r\ngridApi.drawArrow = function (id, x1, y1, x2, y2, border, borderWidth) {\r\n    clearExistingObject(id);\r\n    \r\n    var linePath = new Path;\r\n    var start = gridPoint(x1, y1);\r\n    var end = gridPoint(x2, y2);\r\n    linePath.strokeColor = border;\r\n    linePath.strokeWidth = borderWidth;\r\n    linePath.add(start);\r\n    linePath.add(end);\r\n    addPathToCurrentLayerList(linePath);\r\n\r\n    var vector = end - start;\r\n    var arrowVector = vector.normalize(10);\r\n    var arrowheadPath = new Path([\r\n        end + arrowVector.rotate(150),\r\n        end,\r\n        end + arrowVector.rotate(-150)\r\n    ]);\r\n    arrowheadPath.strokeColor = border;\r\n    arrowheadPath.strokeWidth = borderWidth;\r\n    addPathToCurrentLayerList(arrowheadPath);\r\n\r\n    customLayerObjects[id] = [linePath, arrowheadPath];\r\n};\r\n\r\nfunction addPathToCurrentLayerList(path) {\r\n    if (project.activeLayer == customLayer) {\r\n        customLayerPaths.push(path);\r\n    }\r\n    else {\r\n        allPaths.push(path);\r\n    }\r\n}\r\n\r\ngridApi.drawPlayer = function(x, y, z, radius, border, borderWidth, fill) {\r\n    activateLayer(z);\r\n    if (!player) {\r\n        player = new Path.Circle(gridPoint(x, y), radius);\r\n        player.strokeColor = border;\r\n        player.strokeWidth = borderWidth;\r\n        player.fillColor = fill;\r\n        player.fillColor = fill;\r\n        allPaths.push(player);\r\n\r\n        var playerPositionAbsolute = player.position - offset;\r\n        var offsetDestinationX = paper.view.center.x - playerPositionAbsolute.x;\r\n        var offsetDestinationY = paper.view.center.y - playerPositionAbsolute.y;\r\n\r\n        offsetDestination = new Point(offsetDestinationX, offsetDestinationY);\r\n        offsetVector = (offsetDestination - offset);\r\n    } else {\r\n        playerDestination = gridPoint(x, y);\r\n        playerVector = (playerDestination - player.position) / 10;\r\n        // move player to the end of the activeLayer so it gets drawn on top\r\n        project.activeLayer.addChild(player);\r\n    }\r\n};\r\n\r\ngridApi.drawLabel = function(x, y, z, text) {\r\n    activateLayer(z);\r\n    var pointText = new PointText(gridPoint(x, y));\r\n    pointText.justification = \"center\";\r\n    pointText.fillColor = \"black\";\r\n    pointText.content = text;\r\n    allPaths.push(pointText);\r\n};\r\n\r\nfunction showCustomLayer(visible) {\r\n    if (visible != customLayer.visible) {\r\n        customLayer.visible = visible;\r\n        for (var idx = 0; idx < layers.length; idx++) {\r\n            layers[idx].visible = !visible;\r\n        }\r\n        if (visible) {\r\n            customLayer.activate();\r\n        }\r\n        else {\r\n            layers[getLayerIndex(currentLayer)].activate();\r\n        }\r\n    }\r\n}\r\n\r\ngridApi.showCustomLayer = function(visible) {\r\n    showCustomLayer(visible);\r\n};\r\n\r\ngridApi.clearCustomLayer = function() {\r\n    customLayer.removeChildren();\r\n};\r\n\r\ngridApi.clearAllLayers = function () {\r\n    player = null;\r\n    $.each(layers, function(idx, layer) {\r\n        layer.removeChildren();\r\n    });\r\n};\r\n\r\ngridApi.setCentre = function(x, y) {\r\n    var centrePoint = gridPoint(x, y);\r\n    var offsetX = paper.view.center.x - centrePoint.x;\r\n    var offsetY = paper.view.center.y - centrePoint.y;\r\n    var curOffset = getOffset();\r\n    updateOffset(new Point(offsetX, offsetY));\r\n};\r\n\r\ngridApi.drawCustomLayerSquare = function(id, x, y, width, height, text, fill) {\r\n    var points = [];\r\n    points.push(gridPointNudge(x, y, 1, 1));\r\n    points.push(gridPointNudge(x + width, y, -1, 1));\r\n    points.push(gridPointNudge(x + width, y + height, -1, -1));\r\n    points.push(gridPointNudge(x, y + height, 1, -1));\r\n\r\n    var textPoint = gridPoint(x + width / 2, y + height / 2);\r\n    gridApi.drawCustomLayerObject(id, points, text, textPoint, fill, fill);\r\n};\r\n\r\nfunction clearExistingObject(id) {\r\n    var existing = customLayerObjects[id];\r\n    if (existing) {\r\n        for (var idx in existing) {\r\n            var path = existing[idx];\r\n            // TO DO: Should remove path from layer and layerlist array\r\n            path.visible = false;\r\n        }\r\n    }\r\n}\r\n\r\ngridApi.drawCustomLayerObject = function (id, points, text, textPoint, border, fill, opacity) {\r\n    clearExistingObject(id);\r\n\r\n    var paths = new Array();\r\n    path = new Path();\r\n    path.strokeColor = border;\r\n    $.each(points, function(index, value) {\r\n        path.add(value);\r\n    });\r\n    path.fillColor = fill;\r\n    path.closed = true;\r\n    if (typeof opacity != \"undefined\") {\r\n        path.opacity = opacity;\r\n    }\r\n    addPathToCurrentLayerList(path);\r\n    paths.push(path);\r\n\r\n    if (text) {\r\n        var pointText = new PointText(textPoint);\r\n        pointText.justification = \"center\";\r\n        pointText.fillColor = \"black\";\r\n        pointText.content = text;\r\n        if (typeof opacity != \"undefined\") {\r\n            pointText.opacity = opacity;\r\n        }\r\n        addPathToCurrentLayerList(pointText);\r\n        paths.push(pointText);\r\n    }\r\n\r\n    customLayerObjects[id] = paths;\r\n};\r\n\r\ngridApi.loadSvg = function (data, id) {\r\n    var svg = paper.project.importSVG(data);\r\n    if (svg) {\r\n        symbols[id] = new Symbol(svg);\r\n    }\r\n};\r\n\r\ngridApi.drawCustomLayerSvg = function (id, symbolId, x, y, width, height) {\r\n    if (symbolId in symbols) {\r\n        var existing = customLayerSvg[id];\r\n        var placedSymbol = existing ? existing : symbols[symbolId].place();\r\n        placedSymbol.scale(gridX.x * width / placedSymbol.bounds.width, gridY.y * height / placedSymbol.bounds.height);\r\n        placedSymbol.position = gridPoint(x, y) + placedSymbol.bounds.size / 2;\r\n        if (!existing) addPathToCurrentLayerList(placedSymbol);\r\n        customLayerSvg[id] = placedSymbol;\r\n    } else {\r\n        console.log(\"No symbol loaded with id '\" + symbolId + \"'\");\r\n    }\r\n};\r\n\r\ngridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\r\n    var existing = customLayerImages[id];\r\n    var raster = existing ? existing : new Raster(url);\r\n    var resizeRaster = function() {\r\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\r\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\r\n    };\r\n    if (existing) {\r\n        resizeRaster();\r\n    } else {\r\n        raster.onLoad = resizeRaster;\r\n        addPathToCurrentLayerList(raster);\r\n        customLayerImages[id] = raster;\r\n    }    \r\n}\r\n\r\ngridApi.addNewShapePoint = function (x, y) {\r\n    newShapePoints.push([x, y]);\r\n};\r\n\r\ngridApi.drawShape = function (id, border, fill, opacity) {\r\n    var points = [];\r\n    for (var idx in newShapePoints) {\r\n        var xy = newShapePoints[idx];\r\n        points.push(gridPoint(xy[0], xy[1]));\r\n    }\r\n    gridApi.drawCustomLayerObject(id, points, null, null, border, fill, opacity);\r\n    newShapePoints = [];\r\n};\r\n\r\ngridApi.onLoad();\r\n\r\n\t</script>\r\n    \r\n    <link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/jquery-ui.min.css\" />\r\n    <link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/playercore.css\" />\r\n    <link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/desktopplayer.css\" />\r\n    \r\n    <title></title>\r\n</head>\r\n<body>\r\n    <div id=\"gameBorder\">\r\n    <div id=\"status\" class=\"ui-widget-header\">\r\n        <div id=\"controlButtons\">\r\n            <button type=\"button\" id=\"cmdExitFullScreen\" style=\"display: none\">Exit Full Screen</button>\r\n            <button type=\"button\" id=\"cmdSave\" style=\"display: none\">Save</button>\r\n        </div>\r\n        <div id=\"location\">\r\n        </div>\r\n    </div>\r\n    <div id=\"gamePanes\" style=\"background:transparent;\">\r\n        <div id=\"gamePanesRunning\">\r\n            <h3 id=\"inventoryLabel\"><span class=\"accordion-header-text\">Inventory</span></h3>\r\n            <div id=\"inventoryAccordion\">\r\n                <div id=\"inventoryWrapper\" class=\"elementListWrapper\">\r\n                    <ol id=\"lstInventory\" class=\"elementList\">\r\n                    </ol>\r\n                </div>\r\n                <div class=\"verbButtons\">\r\n                    <button id=\"cmdInventory1\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory2\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory3\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory4\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory5\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory6\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory7\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory8\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdInventory9\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"></button>\r\n                </div>\r\n            </div>\r\n            <h3 id=\"statusVarsLabel\"><span class=\"accordion-header-text\">Status</span></h3>\r\n            <div id=\"statusVarsAccordion\">\r\n                <div id=\"statusVars\">\r\n                </div>\r\n            </div>\r\n            <h3 id=\"placesObjectsLabel\"><span class=\"accordion-header-text\">Places and Objects</span></h3>\r\n            <div id=\"placesObjectsAccordion\">\r\n                <div id=\"placesObjectsWrapper\" class=\"elementListWrapper\">\r\n                    <ol id=\"lstPlacesObjects\" class=\"elementList\">\r\n                    </ol>\r\n                </div>\r\n                <div id=\"placesObjectsButtons\" class=\"verbButtons\">\r\n                    <button id=\"cmdPlacesObjects1\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects2\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects3\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects4\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects5\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects6\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects7\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects8\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                    <button id=\"cmdPlacesObjects9\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"></button>\r\n                </div>\r\n            </div>\r\n            <div id=\"commandPane\"      class=\"ui-helper-reset ui-widget ui-state-active\" style=\"border-radius: 5px;text-align:center;display:none;padding:2px;min-height: 25px;margin-top:10px; border-top:1px solid rgb(121, 183, 231)\">\r\n                <h3 id=\"commandPaneHeading\"><span class=\"accordion-header-text\">Commands</span></h3>\r\n            </div>\r\n            <div id=\"customStatusPane\" class=\"ui-helper-reset ui-widget ui-state-active\" style=\"border-radius: 5px;text-align:center;display:none;padding:2px;min-height: 25px;margin-top:10px; border-top:1px solid rgb(121, 183, 231)\">\r\n                <h3><span class=\"accordion-header-text\">Status</span></h3>\r\n            </div>\r\n            <h3 id=\"compassLabel\"><span class=\"accordion-header-text\">Compass</span></h3>\r\n            <div id=\"compassAccordion\">\r\n                <table id=\"compassTable\">\r\n                    <tr>\r\n                        <td>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassNW\" class=\"compassbutton\" type=\"button\" title=\"go northwest\"\r\n                                            onclick=\"compassClick(_compassDirs[0]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassN\" class=\"compassbutton\" type=\"button\" title=\"go north\"\r\n                                            onclick=\"compassClick(_compassDirs[1]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassNE\" class=\"compassbutton\" type=\"button\" title=\"go northeast\"\r\n                                            onclick=\"compassClick(_compassDirs[2]);\"></button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassW\" class=\"compassbutton\" type=\"button\" title=\"go west\"\r\n                                            onclick=\"compassClick(_compassDirs[3]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        &nbsp;\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassE\" class=\"compassbutton\" type=\"button\" title=\"go east\"\r\n                                            onclick=\"compassClick(_compassDirs[4]);\"></button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassSW\" class=\"compassbutton\" type=\"button\" title=\"go southwest\"\r\n                                            onclick=\"compassClick(_compassDirs[5]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassS\" class=\"compassbutton\" type=\"button\" title=\"go south\"\r\n                                            onclick=\"compassClick(_compassDirs[6]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassSE\" class=\"compassbutton\" type=\"button\" title=\"go southeast\"\r\n                                            onclick=\"compassClick(_compassDirs[7]);\"></button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                        <td>\r\n                            <table>\r\n                                <tr>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassU\" class=\"compassbutton\" type=\"button\" title=\"go up\"\r\n                                            onclick=\"compassClick(_compassDirs[8]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassIn\" class=\"compassbutton\" type=\"button\" title=\"go in\"\r\n                                            onclick=\"compassClick(_compassDirs[10]);\">in</button>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassD\" class=\"compassbutton\" type=\"button\" title=\"go down\"\r\n                                            onclick=\"compassClick(_compassDirs[9]);\"></button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button id=\"cmdCompassOut\" class=\"compassbutton\" type=\"button\" title=\"go out\"\r\n                                            onclick=\"compassClick(_compassDirs[11]);\">out</button>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div id=\"gamePanesFinished\">\r\n            <h2>Game Over</h2>\r\n            <p>This game has finished.</p>\r\n        </div>\r\n    </div>\r\n    <div id=\"gamePanel\"></div>\r\n    <div id=\"gridPanel\">\r\n        <canvas id=\"gridCanvas\" width=\"700\" height=\"300\" keepalive=\"true\">\r\n            <p><b>The graphical map cannot be displayed</b></p>\r\n            <p>Your web browser does not support the graphical map. To see the map, please upgrade to Chrome, Safari, Firefox or Internet Explorer 9.</p>\r\n        </canvas>\r\n    </div>\r\n    <div id=\"gameContent\">\r\n        <div id=\"gamePanelSpacer\"></div>\r\n        <div id=\"divOutput\">\r\n            <div id=\"outputData\" style=\"display: none\" data-divcount=\"0\"></div>\r\n            <h1 id=\"gameTitle\">\r\n                Loading...</h1>\r\n        </div>\r\n        <div id=\"txtCommandSpacer\"></div>\r\n        <div id=\"txtCommandDiv\">\r\n            <span id=\"txtCommandPrompt\"></span>\r\n            <input type=\"text\" x-webkit-speech id=\"txtCommand\" onkeydown=\"return commandKey(event);\" placeholder=\"Type here...\"\r\n                autofocus />\r\n            <a id=\"endWaitLink\" onclick=\"endWait();\" class=\"cmdlink\" style=\"display: none\">Continue...</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id=\"dialog\" title=\"Menu\">\r\n    <p id=\"dialogCaption\">\r\n    </p>\r\n    <select id=\"dialogOptions\" size=\"3\">\r\n    </select>\r\n</div>\r\n<div id=\"msgbox\" title=\"Question\">\r\n    <p id=\"msgboxCaption\">\r\n    </p>\r\n</div>\r\n</body>\r\n</html>\r\n\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm just guessing here (actually, I think I read this somewhere, but can't find it...), but doesn't the map have something to do with on-the-fly SVG rendering (or something like that)?</p>\n<p>There's barely any code in the CSS...</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/29301332-02aea30a-8141-11e7-9bcc-6456c948e1e3.png\" alt=\"image\"></p>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/29301357-2d6e7296-8141-11e7-97d1-270c74b654c7.png\" alt=\"image\"></p>\n<hr>\n<p>Is this where the magic lies? (only a guess)</p>\n<pre><code>gridApi.drawLabel = function(x, y, z, text) {\n    activateLayer(z);\n    var pointText = new PointText(gridPoint(x, y));\n    pointText.justification = \"center\";\n    pointText.fillColor = \"black\";\n    pointText.content = text;\n    allPaths.push(pointText);\n};\n</code></pre>\n<details><summary>Click here to view ui.html (code)</summary>\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"res://local/jquery-2.1.1.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"res://local/jquery-ui.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"res://local/jquery.multi-open-accordion-1.5.3.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"res://local/playercore.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"res://local/desktopplayer.js\"&gt;&lt;/script&gt;\n\t&lt;script type=\"text/javascript\" src=\"res://local/paper.js\"&gt;&lt;/script&gt;\n\t&lt;script type=\"text/paperscript\" canvas=\"gridCanvas\"&gt;\n        var scale, gridX, gridY, player,\n    playerVector, playerDestination,\n    offsetVector, offsetDestination,\n    allPaths = [],\n    customLayerPaths = [],\n    customLayerObjects = {},\n    customLayerSvg = {},\n    customLayerImages = {},\n    layers = [],\n    maxLayer = 7,\n    currentLayer = 0,\n    offset = new Point(0, 0),\n    symbols = {},\n    newShapePoints = [];\n\nfor (var i = -maxLayer; i &lt;= maxLayer; i++) {\n    var layer = new Layer();\n    layers.push(project.activeLayer);\n}\n\nvar customLayer = new Layer(),\n    customLayerOffset = new Point(0, 0);\n\ncustomLayer.visible = false;\n\nfunction activateLayer(index) {\n    showCustomLayer(false);\n    layers[getLayerIndex(index)].activate();\n    layers[getLayerIndex(index)].opacity = 1;\n    if (currentLayer != index) {\n        layers[getLayerIndex(currentLayer)].opacity = 0.2;\n        currentLayer = index;\n    }\n}\n\nfunction getLayerIndex(index) {\n    if (index &lt; -maxLayer || index &gt; maxLayer) {\n        alert(\"Layer out of bounds. Current layer range: -\" + maxLayer + \" to \" + maxLayer);\n    }\n    // layers array represents z-indexes from -maxLayer to maxLayer\n    return index + maxLayer;\n}\n\nactivateLayer(currentLayer);\n\ngridApi.setScale = function(newScale) {\n    scale = newScale;\n    gridX = new Point(scale, 0);\n    gridY = new Point(0, scale);\n};\n\ngridApi.setZoom = function(zoom) {\n    paper.view.zoom = zoom;\n};\n\ngridApi.zoomIn = function(amount) {\n    paper.view.zoom = paper.view.zoom * (Math.pow(1.1, amount));\n};\n\nfunction onMouseDrag(event) {\n    updateOffset(event.delta);\n}\n\nfunction onMouseUp(event) {\n    var x = getGridSquareX(event.point);\n    var y = getGridSquareY(event.point);\n    ASLEvent(\"JS_GridSquareClick\", x + \";\" + y);\n}\n\nfunction updateOffset(delta) {\n    setOffset(getOffset() + delta);\n    var paths;\n    if (project.activeLayer == customLayer) {\n        paths = customLayerPaths;\n    }\n    else {\n        paths = allPaths;\n    }\n    for (var i = 0; i &lt; paths.length; i++) {\n        paths[i].position += delta;\n    }\n    if (playerDestination &amp;&amp; project.activeLayer != customLayer) {\n        playerDestination += delta;\n    }\n}\n\nfunction getOffset() {\n    if (project.activeLayer == customLayer) {\n        return customLayerOffset;\n    }\n    return offset;\n}\n\nfunction setOffset(value) {\n    if (project.activeLayer == customLayer) {\n        customLayerOffset = value;\n    }\n    else {\n        offset = value;\n    }\n}\n\nfunction onFrame(event) {\n    if (playerVector) {\n        var distance = player.position - playerDestination;\n        if (distance.length &gt; playerVector.length) {\n            player.position += playerVector;\n        }\n        else {\n            player.position = playerDestination;\n            playerVector = null;\n            playerDestination = null;\n\n            var playerPositionAbsolute = player.position - offset;\n            offsetDestination = paper.view.center - playerPositionAbsolute;\n\n            offsetVector = (offsetDestination-offset) / 10;\n        }\n    }\n    if (offsetVector) {\n        var distance = offset - offsetDestination;\n        if (distance.length &gt; offsetVector.length) {\n            updateOffset(offsetVector);\n        }\n        else {\n            updateOffset(offsetDestination-offset);\n            offsetVector = null;\n            offsetDestination = null;\n        }\n    }\n}\n\ngridApi.drawGrid = function(minX, minY, maxX, maxY, border) {\n\n    function gridLine(start, end) {\n        var path = new Path();\n        path.strokeColor = border;\n        path.add(start, end);\n        addPathToCurrentLayerList(path);\n    }\n\n    // draw the vertical lines\n    for (var x = minX; x &lt;= maxX; x++) {\n        var start = gridPoint(x, minY);\n        var end = gridPoint(x, maxY);\n        gridLine(start, end);\n    }\n\n    // draw the horizontal lines\n    for (var y = minY; y &lt;= maxY; y++) {\n        var start = gridPoint(minX, y);\n        var end = gridPoint(maxX, y);\n        gridLine(start, end);\n    }\n};\n\nfunction gridPoint(x, y) {\n    return (gridX * x) + (gridY * y) + getOffset();\n}\n\nfunction getGridSquareX(point) {\n    return Math.floor(((point - getOffset()) / gridX).x);\n}\n\nfunction getGridSquareY(point) {\n    return Math.floor(((point - getOffset()) / gridY).y);\n}\n\nfunction gridPointNudge(x, y, nudgeX, nudgeY) {\n    var result = gridPoint(x, y);\n    result.x += nudgeX;\n    result.y += nudgeY;\n    return result;\n}\n\nvar firstBox = true;\n\ngridApi.drawBox = function(x, y, z, width, height, border, borderWidth, fill, sides) {\n    activateLayer(z);\n    // if this is the very first room, centre the canvas by updating the offset\n    if (firstBox) {\n        var centrePoint = gridPoint(x + width / 2, y + height / 2);\n        var offsetX = paper.view.center.x - centrePoint.x;\n        var offsetY = paper.view.center.y - centrePoint.y;\n        updateOffset(new Point(offsetX, offsetY));\n        firstBox = false;\n    }\n    var path = null;\n    var points = [gridPoint(x, y), gridPoint(x + width, y), gridPoint(x + width, y + height), gridPoint(x, y + height)];\n    // sides is encoded with bits to represent NESW\n    var draw = [sides &amp; 8, sides &amp; 4, sides &amp; 2, sides &amp; 1];\n    for (var i = 0; i &lt; 4; i++) {\n        var next = (i + 1) % 4;\n        if (draw[i]) {\n            if (path == null) {\n                path = new Path();\n                allPaths.push(path);\n                if (borderWidth &gt; 0) {\n                    path.strokeColor = border;\n                    path.strokeWidth = borderWidth;\n                }\n                path.add(points[i]);\n            }\n            path.add(points[next]);\n        } else {\n            path = null;\n        }\n    }\n    var fillPath;\n    if (sides == 15) {\n        fillPath = path;\n    } else {\n        fillPath = new Path();\n        fillPath.add(points[0], points[1], points[2], points[3]);\n        allPaths.push(fillPath);\n    }\n    fillPath.fillColor = fill;\n    fillPath.closed = true;\n};\n\ngridApi.drawLine = function(x1, y1, x2, y2, border, borderWidth) {\n    var path = new Path;\n    path.strokeColor = border;\n    path.strokeWidth = borderWidth;\n    path.add(gridPoint(x1, y1));\n    path.add(gridPoint(x2, y2));\n    addPathToCurrentLayerList(path);\n};\n\ngridApi.drawArrow = function (id, x1, y1, x2, y2, border, borderWidth) {\n    clearExistingObject(id);\n    \n    var linePath = new Path;\n    var start = gridPoint(x1, y1);\n    var end = gridPoint(x2, y2);\n    linePath.strokeColor = border;\n    linePath.strokeWidth = borderWidth;\n    linePath.add(start);\n    linePath.add(end);\n    addPathToCurrentLayerList(linePath);\n\n    var vector = end - start;\n    var arrowVector = vector.normalize(10);\n    var arrowheadPath = new Path([\n        end + arrowVector.rotate(150),\n        end,\n        end + arrowVector.rotate(-150)\n    ]);\n    arrowheadPath.strokeColor = border;\n    arrowheadPath.strokeWidth = borderWidth;\n    addPathToCurrentLayerList(arrowheadPath);\n\n    customLayerObjects[id] = [linePath, arrowheadPath];\n};\n\nfunction addPathToCurrentLayerList(path) {\n    if (project.activeLayer == customLayer) {\n        customLayerPaths.push(path);\n    }\n    else {\n        allPaths.push(path);\n    }\n}\n\ngridApi.drawPlayer = function(x, y, z, radius, border, borderWidth, fill) {\n    activateLayer(z);\n    if (!player) {\n        player = new Path.Circle(gridPoint(x, y), radius);\n        player.strokeColor = border;\n        player.strokeWidth = borderWidth;\n        player.fillColor = fill;\n        player.fillColor = fill;\n        allPaths.push(player);\n\n        var playerPositionAbsolute = player.position - offset;\n        var offsetDestinationX = paper.view.center.x - playerPositionAbsolute.x;\n        var offsetDestinationY = paper.view.center.y - playerPositionAbsolute.y;\n\n        offsetDestination = new Point(offsetDestinationX, offsetDestinationY);\n        offsetVector = (offsetDestination - offset);\n    } else {\n        playerDestination = gridPoint(x, y);\n        playerVector = (playerDestination - player.position) / 10;\n        // move player to the end of the activeLayer so it gets drawn on top\n        project.activeLayer.addChild(player);\n    }\n};\n\ngridApi.drawLabel = function(x, y, z, text) {\n    activateLayer(z);\n    var pointText = new PointText(gridPoint(x, y));\n    pointText.justification = \"center\";\n    pointText.fillColor = \"black\";\n    pointText.content = text;\n    allPaths.push(pointText);\n};\n\nfunction showCustomLayer(visible) {\n    if (visible != customLayer.visible) {\n        customLayer.visible = visible;\n        for (var idx = 0; idx &lt; layers.length; idx++) {\n            layers[idx].visible = !visible;\n        }\n        if (visible) {\n            customLayer.activate();\n        }\n        else {\n            layers[getLayerIndex(currentLayer)].activate();\n        }\n    }\n}\n\ngridApi.showCustomLayer = function(visible) {\n    showCustomLayer(visible);\n};\n\ngridApi.clearCustomLayer = function() {\n    customLayer.removeChildren();\n};\n\ngridApi.clearAllLayers = function () {\n    player = null;\n    $.each(layers, function(idx, layer) {\n        layer.removeChildren();\n    });\n};\n\ngridApi.setCentre = function(x, y) {\n    var centrePoint = gridPoint(x, y);\n    var offsetX = paper.view.center.x - centrePoint.x;\n    var offsetY = paper.view.center.y - centrePoint.y;\n    var curOffset = getOffset();\n    updateOffset(new Point(offsetX, offsetY));\n};\n\ngridApi.drawCustomLayerSquare = function(id, x, y, width, height, text, fill) {\n    var points = [];\n    points.push(gridPointNudge(x, y, 1, 1));\n    points.push(gridPointNudge(x + width, y, -1, 1));\n    points.push(gridPointNudge(x + width, y + height, -1, -1));\n    points.push(gridPointNudge(x, y + height, 1, -1));\n\n    var textPoint = gridPoint(x + width / 2, y + height / 2);\n    gridApi.drawCustomLayerObject(id, points, text, textPoint, fill, fill);\n};\n\nfunction clearExistingObject(id) {\n    var existing = customLayerObjects[id];\n    if (existing) {\n        for (var idx in existing) {\n            var path = existing[idx];\n            // TO DO: Should remove path from layer and layerlist array\n            path.visible = false;\n        }\n    }\n}\n\ngridApi.drawCustomLayerObject = function (id, points, text, textPoint, border, fill, opacity) {\n    clearExistingObject(id);\n\n    var paths = new Array();\n    path = new Path();\n    path.strokeColor = border;\n    $.each(points, function(index, value) {\n        path.add(value);\n    });\n    path.fillColor = fill;\n    path.closed = true;\n    if (typeof opacity != \"undefined\") {\n        path.opacity = opacity;\n    }\n    addPathToCurrentLayerList(path);\n    paths.push(path);\n\n    if (text) {\n        var pointText = new PointText(textPoint);\n        pointText.justification = \"center\";\n        pointText.fillColor = \"black\";\n        pointText.content = text;\n        if (typeof opacity != \"undefined\") {\n            pointText.opacity = opacity;\n        }\n        addPathToCurrentLayerList(pointText);\n        paths.push(pointText);\n    }\n\n    customLayerObjects[id] = paths;\n};\n\ngridApi.loadSvg = function (data, id) {\n    var svg = paper.project.importSVG(data);\n    if (svg) {\n        symbols[id] = new Symbol(svg);\n    }\n};\n\ngridApi.drawCustomLayerSvg = function (id, symbolId, x, y, width, height) {\n    if (symbolId in symbols) {\n        var existing = customLayerSvg[id];\n        var placedSymbol = existing ? existing : symbols[symbolId].place();\n        placedSymbol.scale(gridX.x * width / placedSymbol.bounds.width, gridY.y * height / placedSymbol.bounds.height);\n        placedSymbol.position = gridPoint(x, y) + placedSymbol.bounds.size / 2;\n        if (!existing) addPathToCurrentLayerList(placedSymbol);\n        customLayerSvg[id] = placedSymbol;\n    } else {\n        console.log(\"No symbol loaded with id '\" + symbolId + \"'\");\n    }\n};\n\ngridApi.drawCustomLayerImage = function(id, url, x, y, width, height) {\n    var existing = customLayerImages[id];\n    var raster = existing ? existing : new Raster(url);\n    var resizeRaster = function() {\n        raster.scale(gridX.x * width / raster.bounds.width, gridY.y * height / raster.bounds.height);\n        raster.position = gridPoint(x, y) + raster.bounds.size / 2;\n    };\n    if (existing) {\n        resizeRaster();\n    } else {\n        raster.onLoad = resizeRaster;\n        addPathToCurrentLayerList(raster);\n        customLayerImages[id] = raster;\n    }    \n}\n\ngridApi.addNewShapePoint = function (x, y) {\n    newShapePoints.push([x, y]);\n};\n\ngridApi.drawShape = function (id, border, fill, opacity) {\n    var points = [];\n    for (var idx in newShapePoints) {\n        var xy = newShapePoints[idx];\n        points.push(gridPoint(xy[0], xy[1]));\n    }\n    gridApi.drawCustomLayerObject(id, points, null, null, border, fill, opacity);\n    newShapePoints = [];\n};\n\ngridApi.onLoad();\n\n\t&lt;/script&gt;\n    \n    &lt;link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/jquery-ui.min.css\" /&gt;\n    &lt;link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/playercore.css\" /&gt;\n    &lt;link rel=\"Stylesheet\" type=\"text/css\" href=\"res://local/desktopplayer.css\" /&gt;\n    \n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"gameBorder\"&gt;\n    &lt;div id=\"status\" class=\"ui-widget-header\"&gt;\n        &lt;div id=\"controlButtons\"&gt;\n            &lt;button type=\"button\" id=\"cmdExitFullScreen\" style=\"display: none\"&gt;Exit Full Screen&lt;/button&gt;\n            &lt;button type=\"button\" id=\"cmdSave\" style=\"display: none\"&gt;Save&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;div id=\"location\"&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id=\"gamePanes\" style=\"background:transparent;\"&gt;\n        &lt;div id=\"gamePanesRunning\"&gt;\n            &lt;h3 id=\"inventoryLabel\"&gt;&lt;span class=\"accordion-header-text\"&gt;Inventory&lt;/span&gt;&lt;/h3&gt;\n            &lt;div id=\"inventoryAccordion\"&gt;\n                &lt;div id=\"inventoryWrapper\" class=\"elementListWrapper\"&gt;\n                    &lt;ol id=\"lstInventory\" class=\"elementList\"&gt;\n                    &lt;/ol&gt;\n                &lt;/div&gt;\n                &lt;div class=\"verbButtons\"&gt;\n                    &lt;button id=\"cmdInventory1\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory2\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory3\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory4\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory5\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory6\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory7\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory8\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdInventory9\" type=\"button\" onclick=\"paneButtonClick('#lstInventory',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;h3 id=\"statusVarsLabel\"&gt;&lt;span class=\"accordion-header-text\"&gt;Status&lt;/span&gt;&lt;/h3&gt;\n            &lt;div id=\"statusVarsAccordion\"&gt;\n                &lt;div id=\"statusVars\"&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;h3 id=\"placesObjectsLabel\"&gt;&lt;span class=\"accordion-header-text\"&gt;Places and Objects&lt;/span&gt;&lt;/h3&gt;\n            &lt;div id=\"placesObjectsAccordion\"&gt;\n                &lt;div id=\"placesObjectsWrapper\" class=\"elementListWrapper\"&gt;\n                    &lt;ol id=\"lstPlacesObjects\" class=\"elementList\"&gt;\n                    &lt;/ol&gt;\n                &lt;/div&gt;\n                &lt;div id=\"placesObjectsButtons\" class=\"verbButtons\"&gt;\n                    &lt;button id=\"cmdPlacesObjects1\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects2\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects3\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects4\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects5\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects6\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects7\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects8\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                    &lt;button id=\"cmdPlacesObjects9\" type=\"button\" onclick=\"paneButtonClick('#lstPlacesObjects',$(this));\" style=\"display:none\"&gt;&lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div id=\"commandPane\"      class=\"ui-helper-reset ui-widget ui-state-active\" style=\"border-radius: 5px;text-align:center;display:none;padding:2px;min-height: 25px;margin-top:10px; border-top:1px solid rgb(121, 183, 231)\"&gt;\n                &lt;h3 id=\"commandPaneHeading\"&gt;&lt;span class=\"accordion-header-text\"&gt;Commands&lt;/span&gt;&lt;/h3&gt;\n            &lt;/div&gt;\n            &lt;div id=\"customStatusPane\" class=\"ui-helper-reset ui-widget ui-state-active\" style=\"border-radius: 5px;text-align:center;display:none;padding:2px;min-height: 25px;margin-top:10px; border-top:1px solid rgb(121, 183, 231)\"&gt;\n                &lt;h3&gt;&lt;span class=\"accordion-header-text\"&gt;Status&lt;/span&gt;&lt;/h3&gt;\n            &lt;/div&gt;\n            &lt;h3 id=\"compassLabel\"&gt;&lt;span class=\"accordion-header-text\"&gt;Compass&lt;/span&gt;&lt;/h3&gt;\n            &lt;div id=\"compassAccordion\"&gt;\n                &lt;table id=\"compassTable\"&gt;\n                    &lt;tr&gt;\n                        &lt;td&gt;\n                            &lt;table&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassNW\" class=\"compassbutton\" type=\"button\" title=\"go northwest\"\n                                            onclick=\"compassClick(_compassDirs[0]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassN\" class=\"compassbutton\" type=\"button\" title=\"go north\"\n                                            onclick=\"compassClick(_compassDirs[1]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassNE\" class=\"compassbutton\" type=\"button\" title=\"go northeast\"\n                                            onclick=\"compassClick(_compassDirs[2]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassW\" class=\"compassbutton\" type=\"button\" title=\"go west\"\n                                            onclick=\"compassClick(_compassDirs[3]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &amp;nbsp;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassE\" class=\"compassbutton\" type=\"button\" title=\"go east\"\n                                            onclick=\"compassClick(_compassDirs[4]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassSW\" class=\"compassbutton\" type=\"button\" title=\"go southwest\"\n                                            onclick=\"compassClick(_compassDirs[5]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassS\" class=\"compassbutton\" type=\"button\" title=\"go south\"\n                                            onclick=\"compassClick(_compassDirs[6]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassSE\" class=\"compassbutton\" type=\"button\" title=\"go southeast\"\n                                            onclick=\"compassClick(_compassDirs[7]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                            &lt;/table&gt;\n                        &lt;/td&gt;\n                        &lt;td&gt;\n                            &lt;table&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassU\" class=\"compassbutton\" type=\"button\" title=\"go up\"\n                                            onclick=\"compassClick(_compassDirs[8]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassIn\" class=\"compassbutton\" type=\"button\" title=\"go in\"\n                                            onclick=\"compassClick(_compassDirs[10]);\"&gt;in&lt;/button&gt;\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                                &lt;tr&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassD\" class=\"compassbutton\" type=\"button\" title=\"go down\"\n                                            onclick=\"compassClick(_compassDirs[9]);\"&gt;&lt;/button&gt;\n                                    &lt;/td&gt;\n                                    &lt;td&gt;\n                                        &lt;button id=\"cmdCompassOut\" class=\"compassbutton\" type=\"button\" title=\"go out\"\n                                            onclick=\"compassClick(_compassDirs[11]);\"&gt;out&lt;/button&gt;\n                                    &lt;/td&gt;\n                                &lt;/tr&gt;\n                            &lt;/table&gt;\n                        &lt;/td&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div id=\"gamePanesFinished\"&gt;\n            &lt;h2&gt;Game Over&lt;/h2&gt;\n            &lt;p&gt;This game has finished.&lt;/p&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id=\"gamePanel\"&gt;&lt;/div&gt;\n    &lt;div id=\"gridPanel\"&gt;\n        &lt;canvas id=\"gridCanvas\" width=\"700\" height=\"300\" keepalive=\"true\"&gt;\n            &lt;p&gt;&lt;b&gt;The graphical map cannot be displayed&lt;/b&gt;&lt;/p&gt;\n            &lt;p&gt;Your web browser does not support the graphical map. To see the map, please upgrade to Chrome, Safari, Firefox or Internet Explorer 9.&lt;/p&gt;\n        &lt;/canvas&gt;\n    &lt;/div&gt;\n    &lt;div id=\"gameContent\"&gt;\n        &lt;div id=\"gamePanelSpacer\"&gt;&lt;/div&gt;\n        &lt;div id=\"divOutput\"&gt;\n            &lt;div id=\"outputData\" style=\"display: none\" data-divcount=\"0\"&gt;&lt;/div&gt;\n            &lt;h1 id=\"gameTitle\"&gt;\n                Loading...&lt;/h1&gt;\n        &lt;/div&gt;\n        &lt;div id=\"txtCommandSpacer\"&gt;&lt;/div&gt;\n        &lt;div id=\"txtCommandDiv\"&gt;\n            &lt;span id=\"txtCommandPrompt\"&gt;&lt;/span&gt;\n            &lt;input type=\"text\" x-webkit-speech id=\"txtCommand\" onkeydown=\"return commandKey(event);\" placeholder=\"Type here...\"\n                autofocus /&gt;\n            &lt;a id=\"endWaitLink\" onclick=\"endWait();\" class=\"cmdlink\" style=\"display: none\"&gt;Continue...&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"dialog\" title=\"Menu\"&gt;\n    &lt;p id=\"dialogCaption\"&gt;\n    &lt;/p&gt;\n    &lt;select id=\"dialogOptions\" size=\"3\"&gt;\n    &lt;/select&gt;\n&lt;/div&gt;\n&lt;div id=\"msgbox\" title=\"Question\"&gt;\n    &lt;p id=\"msgboxCaption\"&gt;\n    &lt;/p&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre>\n</details>\n\n",
      "PostDate": "2017-08-15T03:48:50.1838924Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "50ecbff3-0e89-4b44-b6db-31293ca3d2c8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "C:\\Program Files (x86)\\Quest 5\\grid.js\r\n\r\n\r\nI made a back-up of the original file, then modified one line: ```pointText.fillColor = \"green\";```\r\n\r\nBegins at line 389:\r\n\r\n\r\n\r\n```\r\ngridApi.drawLabel = function(x, y, z, text) {\r\n    activateLayer(z);\r\n    var pointText = new PointText(gridPoint(x, y));\r\n    pointText.justification = \"center\";\r\n    pointText.fillColor = \"green\";\r\n    pointText.content = text;\r\n    allPaths.push(pointText);\r\n};\r\n```\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/29301794-56400baa-8144-11e7-9f87-ffd16bcfb9b8.png)\r\n\r\n\r\n---\r\nNOTE: I don't know why I chose to use green rather than yellow in the example...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>C:\\Program Files (x86)\\Quest 5\\grid.js</p>\n<p>I made a back-up of the original file, then modified one line: <code>pointText.fillColor = \"green\";</code></p>\n<p>Begins at line 389:</p>\n<pre><code>gridApi.drawLabel = function(x, y, z, text) {\n    activateLayer(z);\n    var pointText = new PointText(gridPoint(x, y));\n    pointText.justification = \"center\";\n    pointText.fillColor = \"green\";\n    pointText.content = text;\n    allPaths.push(pointText);\n};\n</code></pre>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/29301794-56400baa-8144-11e7-9f87-ffd16bcfb9b8.png\" alt=\"image\"></p>\n<hr>\n<p>NOTE: I don't know why I chose to use green rather than yellow in the example...</p>\n\n",
      "PostDate": "2017-08-15T04:02:14.5945296Z",
      "LastEditDate": "2017-08-15T04:04:12.7503972Z",
      "link": null
    },
    {
      "PostId": "fb7c8e1b-36c6-4ac1-bb8c-234cff1bcebf",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was just about to ask you where you found the code while you were doing your second post!\r\n\r\nAwesome KV!  Great detective work!  I'm experimenting with it now.  You can't change it in-game, so trying to find a grid label color that is just right.  Thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>I was just about to ask you where you found the code while you were doing your second post!</p>\n<p>Awesome KV!  Great detective work!  I'm experimenting with it now.  You can't change it in-game, so trying to find a grid label color that is just right.  Thanks!</p>\n\n",
      "PostDate": "2017-08-15T04:05:30.8052828Z",
      "LastEditDate": "2017-08-15T04:19:50.5503932Z",
      "link": null
    },
    {
      "PostId": "cecf86e7-2cd9-4ca8-9c6f-ae00500f0b20",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```grep -r \"gridApi.drawLabel\" *```\r\n\r\nI've got a BASH! shell. Bwahahaha!\r\n\r\n---\r\nBut I found it in the HTML Tools before I knew what to search for:\r\n\r\n\r\nThe first two pictures (in the above post) were steps 1 & 2.\r\n\r\nThen, I clicked 'sources' and found this:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/29302145-4a2f138a-8147-11e7-8422-9178bae11a4b.png)\r\n\r\n---\r\nFrom there, grep saved the day!\r\n\r\n\r\n---\r\nNOTE:  I tried using ```JS.set``` with all sorts of different things before altering the file in the program's directory, but to no avail. ",
      "EditableFormat": "markdown",
      "HTML": "<p><code>grep -r \"gridApi.drawLabel\" *</code></p>\n<p>I've got a BASH! shell. Bwahahaha!</p>\n<hr>\n<p>But I found it in the HTML Tools before I knew what to search for:</p>\n<p>The first two pictures (in the above post) were steps 1 &amp; 2.</p>\n<p>Then, I clicked 'sources' and found this:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/29302145-4a2f138a-8147-11e7-8422-9178bae11a4b.png\" alt=\"image\"></p>\n<hr>\n<p>From there, grep saved the day!</p>\n<hr>\n<p>NOTE:  I tried using <code>JS.set</code> with all sorts of different things before altering the file in the program's directory, but to no avail.</p>\n\n",
      "PostDate": "2017-08-15T04:23:21.3390772Z",
      "LastEditDate": "2017-08-15T04:25:55.1876962Z",
      "link": null
    },
    {
      "PostId": "75eb4b4a-07b4-4c67-9af7-df732ecdea2a",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm learning a lot from you, KV, as well as Pix and everyone else.  Thanks again!",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm learning a lot from you, KV, as well as Pix and everyone else.  Thanks again!</p>\n\n",
      "PostDate": "2017-08-15T05:02:23.4280218Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d867100e-6315-4289-92e8-9ce35ca12cdb",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No way!\r\n\r\n<del>It is I who is learning from ***you***. </del>\r\n\r\n<del>(Wait, is that 'whom'? Let's see... I think that would mean I'd have to say, 'it is me whom is...'  ...nah... It is I who is learning from the Dcoder whom  posed the inquiry. (Wait, is that 'who'? Let's see... yep. 'The Dcoder, from whom the inquiry originated'...))</del>\r\n\r\nIt is I who is learning from ***you***, the Dcoder from whom the inquiry originated!\r\n\r\n---\r\nThere has to be another clue...\r\n\r\nHow is this  checking to see if we have set up a custom border color?\r\n\r\nTherein, I believe, lies the key to being able to set this within the game.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>No way!</p>\n<p><del>It is I who is learning from <strong><em>you</em></strong>. </del></p>\n<p><del>(Wait, is that 'whom'? Let's see... I think that would mean I'd have to say, 'it is me whom is...'  ...nah... It is I who is learning from the Dcoder whom  posed the inquiry. (Wait, is that 'who'? Let's see... yep. 'The Dcoder, from whom the inquiry originated'...))</del></p>\n<p>It is I who is learning from <strong><em>you</em></strong>, the Dcoder from whom the inquiry originated!</p>\n<hr>\n<p>There has to be another clue...</p>\n<p>How is this  checking to see if we have set up a custom border color?</p>\n<p>Therein, I believe, lies the key to being able to set this within the game.</p>\n\n",
      "PostDate": "2017-08-15T06:46:45.9830711Z",
      "LastEditDate": "2017-08-15T06:48:53.4076756Z",
      "link": null
    },
    {
      "PostId": "accfbd7e-b352-48a0-ba56-3f290ab47fe5",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Haha!  You just keep running with it!",
      "EditableFormat": "markdown",
      "HTML": "<p>Haha!  You just keep running with it!</p>\n\n",
      "PostDate": "2017-08-15T07:00:04.6927113Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a9849943-2b3c-4143-8d5a-0190c1d30e84",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I do not think that will work, I am afraid. The grid.js file will not be included when you publish your game, so changes too it will not be present when others play it. It will need a change in Quest itself; it will be pretty trivial but not sure when the next update will be.",
      "EditableFormat": "markdown",
      "HTML": "<p>I do not think that will work, I am afraid. The grid.js file will not be included when you publish your game, so changes too it will not be present when others play it. It will need a change in Quest itself; it will be pretty trivial but not sure when the next update will be.</p>\n\n",
      "PostDate": "2017-08-30T10:05:18.0751974Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
