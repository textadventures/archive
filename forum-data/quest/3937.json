{
  "Topic": {
    "TopicId": "3937",
    "ForumId": "10",
    "Title": "% symbol explanation",
    "LastUpdated": "2013-09-29T08:38:33+01:00",
    "ReplyCount": 3
  },
  "Posts": [
    {
      "PostId": "26417",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm currently trying to work on learning+developing my own coding for time+date, and have looked at Pixie's Clock Library that uses the &quot;%&quot; (percent) symbol, but I don't quite understand what it exactly does (or how it's doing what it does).\n\nThe reason is that my coding is surely a lot more messy (big &quot;if~switch&quot; code chunks, lol) without being able to implement this &quot;%&quot; symbol, than if I were able to implement this &quot;%&quot; symbol into my coding.\n\nI'm not sure how to google it either, as I don't know what programming language it falls under (or just which one Pixie is using for the &quot;%&quot; symbol in his~her Clock Library).\n\nI tried searching for it, first using xml but its usage that I found and read about is not what I need, then I tried using javascript, and its usage returns the remainder from a division calculation. Is this what is being done in Pixie's Clock Library, or is there still some other programming language that uses the &quot;%&quot; symbol for whatever might be going on in Pixie's Clock Library?, since I can't quite realize what is going on with the &quot;%&quot; symbol just by looking at the code, as I'm not that great with understanding math stuff too, sighs.\n\nSo, if someone, could explain to me how the &quot;%&quot; symbol functions~does~works or what it is doing exactly in Pixie's Clock Library, I'd be very appreciative! And, also if you could tell me what programming language it is being used by (or which it belongs to ~ whatever), so I can google it myself in the future (should I need to) to re-learn it (if I forget or something, lol), I'd also be appreciative, as well. I don't want to try to google every single programming language to try to find which it belongs to or is being used by, lol~heh...\n\n-----------\n\nPixie's Clock Library:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2580\">viewtopic.php?f=18&amp;t=2580</a><!-- l -->\n\n[code:99o90rrp]&lt;library&gt;\n&lt;!--\n\nA simple module that lets you track game time in your game&#46;\n\nFeel free to modify this code as you wish&#46;\n\nThe Pixie\nthe_pix@hotmail&#46;com\n\n--&gt;\n\n\n  &lt;object name=&quot;game_clock&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n    &lt;time type=&quot;int&quot;&gt;0&lt;/time&gt;\n    &lt;changedtime type=&quot;script&quot;&gt;\n      if (HasString(player, &quot;clock&quot;)) {\n        player&#46;clock = TimeAsString()\n      }\n    &lt;/changedtime&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;clock&quot;&gt;\n    &lt;pattern&gt;clock&lt;/pattern&gt;\n    &lt;script&gt;\n      msg (&quot;You look at your watch&#58; It's &quot; + TimeAsString())\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;turnscript&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n\t\tif (game_clock&#46;oldroom =player&#46;parent){\n\t\t\tIncTime (1)\n\t\t} else {\n\t\t\tIncTime (5)\n\t\t\tgame_clock&#46;oldroom =player&#46;parent\n\t\t}\t\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n\n  &lt;function name=&quot;PartOfDay&quot; type=&quot;int&quot;&gt;\n    tmp = game_clock&#46;time % (60 * 24)\n    return (tmp / 60 / 6)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsDusk&quot; type=&quot;boolean&quot;&gt;\n    hour = (game_clock&#46;time / 60) % 24\n    return (hour = 18)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsNight&quot; type=&quot;boolean&quot;&gt;\n    return (PartOfDay() = 0)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsMorning&quot; type=&quot;boolean&quot;&gt;\n    return (PartOfDay() = 1)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsAfternoon&quot; type=&quot;boolean&quot;&gt;\n    return (PartOfDay() = 2)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsEvening&quot; type=&quot;boolean&quot;&gt;\n    return (PartOfDay() = 3)\n  &lt;/function&gt;\n  &lt;function name=&quot;BusinessExit&quot; parameters=&quot;exit, time, opening&quot;&gt;\n    if (IsBusinessClosed(opening)) {\n      msg (&quot;That way is closed at this time of day&#46;&quot;)\n    }\n    else {\n      MoveObject (player, exit&#46;to)\n      IncTime (time - 1)\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;LongExit&quot; parameters=&quot;exit, time&quot;&gt;\n    MoveObject (player, exit&#46;to)\n    IncTime (time - 1)\n  &lt;/function&gt;\n  &lt;function name=&quot;IsBusinessClosed&quot; parameters=&quot;opening&quot; type=&quot;boolean&quot;&gt;\n    c = Mid(opening, PartOfDay() + 1, 1)\n    return (c = &quot;n&quot;) \n  &lt;/function&gt;\n  &lt;function name=&quot;TimeAsString&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    minutes = game_clock&#46;time % 60\n    hours24 = (game_clock&#46;time / 60) % 24\n    hours = hours24 % 12\n    if (hours = 0) {\n      hours = 12\n    }\n    days = game_clock&#46;time / (60 * 24) + 1\n    if (minutes &lt; 10) {\n      s = &quot;Day &quot; + days + &quot;, &quot; + hours + &quot;&#58;0&quot; + minutes\n    }\n    else {\n      s = &quot;Day &quot; + days + &quot;, &quot; + hours + &quot;&#58;&quot; + minutes\n    }\n    if (hours24 &lt; 12) {\n      return (s + &quot; am&quot;)\n    }\n    else {\n      return (s + &quot; pm&quot;)\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;IncTime&quot; parameters=&quot;addendum&quot;&gt;\n    game_clock&#46;time = game_clock&#46;time + addendum\n  &lt;/function&gt;\n  &lt;function name=&quot;GetTime&quot; type=&quot;int&quot;&gt;\n    return (game_clock&#46;time)\n  &lt;/function&gt;\n&lt;/library&gt;[/code:99o90rrp]",
      "EditableFormat": "bbcode",
      "HTML": "I'm currently trying to work on learning+developing my own coding for time+date, and have looked at Pixie's Clock Library that uses the &quot;%&quot; (percent) symbol, but I don't quite understand what it exactly does (or how it's doing what it does).<br/><br/>The reason is that my coding is surely a lot more messy (big &quot;if~switch&quot; code chunks, lol) without being able to implement this &quot;%&quot; symbol, than if I were able to implement this &quot;%&quot; symbol into my coding.<br/><br/>I'm not sure how to google it either, as I don't know what programming language it falls under (or just which one Pixie is using for the &quot;%&quot; symbol in his~her Clock Library).<br/><br/>I tried searching for it, first using xml but its usage that I found and read about is not what I need, then I tried using javascript, and its usage returns the remainder from a division calculation. Is this what is being done in Pixie's Clock Library, or is there still some other programming language that uses the &quot;%&quot; symbol for whatever might be going on in Pixie's Clock Library?, since I can't quite realize what is going on with the &quot;%&quot; symbol just by looking at the code, as I'm not that great with understanding math stuff too, sighs.<br/><br/>So, if someone, could explain to me how the &quot;%&quot; symbol functions~does~works or what it is doing exactly in Pixie's Clock Library, I'd be very appreciative! And, also if you could tell me what programming language it is being used by (or which it belongs to ~ whatever), so I can google it myself in the future (should I need to) to re-learn it (if I forget or something, lol), I'd also be appreciative, as well. I don't want to try to google every single programming language to try to find which it belongs to or is being used by, lol~heh...<br/><br/>-----------<br/><br/>Pixie's Clock Library:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2580\">viewtopic.php?f=18&amp;t=2580</a><!-- l --><br/><br/><pre><code>&lt;library&gt;<br/>&lt;!--<br/><br/>A simple module that lets you track game time in your game&#46;<br/><br/>Feel free to modify this code as you wish&#46;<br/><br/>The Pixie<br/>the_pix@hotmail&#46;com<br/><br/>--&gt;<br/><br/><br/>  &lt;object name=&quot;game_clock&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>    &lt;time type=&quot;int&quot;&gt;0&lt;/time&gt;<br/>    &lt;changedtime type=&quot;script&quot;&gt;<br/>      if (HasString(player, &quot;clock&quot;)) {<br/>        player&#46;clock = TimeAsString()<br/>      }<br/>    &lt;/changedtime&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;clock&quot;&gt;<br/>    &lt;pattern&gt;clock&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      msg (&quot;You look at your watch&#58; It's &quot; + TimeAsString())<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;turnscript&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>\t\tif (game_clock&#46;oldroom =player&#46;parent){<br/>\t\t\tIncTime (1)<br/>\t\t} else {<br/>\t\t\tIncTime (5)<br/>\t\t\tgame_clock&#46;oldroom =player&#46;parent<br/>\t\t}\t<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/><br/>  &lt;function name=&quot;PartOfDay&quot; type=&quot;int&quot;&gt;<br/>    tmp = game_clock&#46;time % (60 * 24)<br/>    return (tmp / 60 / 6)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsDusk&quot; type=&quot;boolean&quot;&gt;<br/>    hour = (game_clock&#46;time / 60) % 24<br/>    return (hour = 18)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsNight&quot; type=&quot;boolean&quot;&gt;<br/>    return (PartOfDay() = 0)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsMorning&quot; type=&quot;boolean&quot;&gt;<br/>    return (PartOfDay() = 1)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsAfternoon&quot; type=&quot;boolean&quot;&gt;<br/>    return (PartOfDay() = 2)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsEvening&quot; type=&quot;boolean&quot;&gt;<br/>    return (PartOfDay() = 3)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;BusinessExit&quot; parameters=&quot;exit, time, opening&quot;&gt;<br/>    if (IsBusinessClosed(opening)) {<br/>      msg (&quot;That way is closed at this time of day&#46;&quot;)<br/>    }<br/>    else {<br/>      MoveObject (player, exit&#46;to)<br/>      IncTime (time - 1)<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;LongExit&quot; parameters=&quot;exit, time&quot;&gt;<br/>    MoveObject (player, exit&#46;to)<br/>    IncTime (time - 1)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;IsBusinessClosed&quot; parameters=&quot;opening&quot; type=&quot;boolean&quot;&gt;<br/>    c = Mid(opening, PartOfDay() + 1, 1)<br/>    return (c = &quot;n&quot;) <br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;TimeAsString&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    minutes = game_clock&#46;time % 60<br/>    hours24 = (game_clock&#46;time / 60) % 24<br/>    hours = hours24 % 12<br/>    if (hours = 0) {<br/>      hours = 12<br/>    }<br/>    days = game_clock&#46;time / (60 * 24) + 1<br/>    if (minutes &lt; 10) {<br/>      s = &quot;Day &quot; + days + &quot;, &quot; + hours + &quot;&#58;0&quot; + minutes<br/>    }<br/>    else {<br/>      s = &quot;Day &quot; + days + &quot;, &quot; + hours + &quot;&#58;&quot; + minutes<br/>    }<br/>    if (hours24 &lt; 12) {<br/>      return (s + &quot; am&quot;)<br/>    }<br/>    else {<br/>      return (s + &quot; pm&quot;)<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;IncTime&quot; parameters=&quot;addendum&quot;&gt;<br/>    game_clock&#46;time = game_clock&#46;time + addendum<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;GetTime&quot; type=&quot;int&quot;&gt;<br/>    return (game_clock&#46;time)<br/>  &lt;/function&gt;<br/>&lt;/library&gt;</code></pre>",
      "PostDate": "2013-09-29T00:43:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26421",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "That is the &quot;modulo operator&quot;, also known as &quot;modulus operator&quot;, also known as the &quot;mod operator&quot; or just &quot;mod&quot;. It returns the remainder after division (rather than the quotient).\n\nLet's say you have an ever increasing number of hours. You can see how many days have passed by dividing by 24. And the remainder (which '%' calculates) is the current hour (0-23) in the current day:\n\ndays = hours / 24 (as an integer)\nhour = hours % 24\n\nLet's say 30 hours have elapsed. Then days would be 1, and hour (which is the remainder of 30 / 24) would be 6. So it would be 6AM one day hence.\n\nYou typically use mod where you have something cyclic, though it's not limited to that. Time is a good application, since seconds go from 0-59 and then repeat, minutes go from 0-59 and then repeat, hours go from 0-24, etc.\n\nIf 250 seconds had elapsed, that would be 4 minutes and 10 seconds. And 250 % 60 gives you the 10.",
      "EditableFormat": "bbcode",
      "HTML": "That is the &quot;modulo operator&quot;, also known as &quot;modulus operator&quot;, also known as the &quot;mod operator&quot; or just &quot;mod&quot;. It returns the remainder after division (rather than the quotient).<br/><br/>Let's say you have an ever increasing number of hours. You can see how many days have passed by dividing by 24. And the remainder (which '%' calculates) is the current hour (0-23) in the current day:<br/><br/>days = hours / 24 (as an integer)<br/>hour = hours % 24<br/><br/>Let's say 30 hours have elapsed. Then days would be 1, and hour (which is the remainder of 30 / 24) would be 6. So it would be 6AM one day hence.<br/><br/>You typically use mod where you have something cyclic, though it's not limited to that. Time is a good application, since seconds go from 0-59 and then repeat, minutes go from 0-59 and then repeat, hours go from 0-24, etc.<br/><br/>If 250 seconds had elapsed, that would be 4 minutes and 10 seconds. And 250 % 60 gives you the 10.",
      "PostDate": "2013-09-29T01:44:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26423",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah, thank you Jayna! So, Pixie's usage of the % symbol is doing the &quot;operator modulo&quot; (whatever, meh. I guess it's latin, but it sounds stupid, lol ~ so I don't like it, lol), the remainder functionality, and I presume this is using the javacript language, or are there multiple languages that use the % symbol as the modulo too?\n\nthe xml's usage had nothing to do with remainder functionality (operator modulo):\n\n<!-- m --><a class=\"postlink\" href=\"http://stackoverflow.com/questions/4414389/android-xml-percent-symbol\">http://stackoverflow.com/questions/4414 ... ent-symbol</a><!-- m -->\n\nit uses the % symbol for some variable usage or something, I think... (haven't really read up on this too much yet): %a\n\n&lt;string formatted=&quot;false&quot;&gt;%a + %a == 2%a&lt;/string&gt;\n\nI think the basic command line prompt on computers (run -&gt; cmd.exe), also uses the % symbol in this same way as the xml, with something to do with variables (I have been trying to learn this &quot;language&quot;, cmd.exe, as I figured I'd start with one of the simpliest for trying to learn another language, lol. Though, it's a bit too simplistic~limited and thus a bit of effort to learn to do stuff with it, on top of trying to decipher what the commands and their switches do, along with the correct syntax ~ format, GRRR!, lol. Looking at other programming languages makes me appreciate Alex' quest coding, in how noob-friendly it is! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->)\n\nanyways, (was going off on a tangent, lol), thank you, as I now know it is indeed the modulo usage. Now, I just need to be able to follow how Pixie is using it in his~her Clock Library... it's used a bit more complex'ly... it'll take me awhile to get it... as I'm not that good with math stuff... heh.\n\nI get it's math usage at the basic level (again thank you, for the very clear+concise explanations you give in your posts!):\n\ndays = hours / 24 (as an integer)\nhour = hours % 24\n\nstarting_hours = 30\ndays = 1\nhour = 6\n\nit'll just take me a bit to understand the jump to how Pixie is using it... hehe. I wish I was better with math stuff... sighs.\n\n-----------\n\nand yes, this % symbol (operator modulo) will definately make the coding much cleaner, than my simplistic but large &quot;if&quot; script blocks, lol:\n\n(I've just started on this stuff ~ before posting about how to use the % symbol... so this is very preliminary... below)\n\n[code:1gpl9uqj]&lt;library&gt;\n\n&lt;!-- Libraries --&gt;\n\n&lt;!-- Templates --&gt;\n\n&lt;!-- Verbs --&gt;\n\n&lt;!-- Commands --&gt;\n\n&lt;!-- Functions --&gt;\n\n&lt;!-- Turn Scripts --&gt;\n\n  &lt;turnscript name=&quot;global_events_turnscript&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (global_data_object&#46;second_integer = 60) {\n\t  global_data_object&#46;minute_integer = global_data_object&#46;minute_integer + 1\n\t  global_data_object&#46;second_integer = 0\n\t}\n\tif (global_data_object&#46;minute_integer = 60) {\n\t  global_data_object&#46;hour_integer = global_data_object&#46;hour_integer + 1\n\t  global_data_object&#46;minute_integer = 0\n\t}\n\tif (global_data_object&#46;hour_integer = 24) {\n\t  global_data_object&#46;day_integer = global_data_object&#46;day_integer + 1\n\t  global_data_object&#46;hour_integer = 0\n\t}\n\tif (global_data_object&#46;day_integer &gt;= 0 and global_data_object&#46;day_integer &lt; 7) {\n\t  global_data_object&#46;week_integer = 0\n\t} else if (global_data_object&#46;day_integer &gt;= 7 and global_data_object&#46;day_integer &lt; 14) {\n\t  global_data_object&#46;week_integer = 1\n\t} else if (global_data_object&#46;day_integer &gt;= 14 and global_data_object&#46;day_integer &lt; 21) {\n\t  global_data_object&#46;week_integer = 2\n\t} else if (global_data_object&#46;day_integer &gt;= 21 and global_data_object&#46;day_integer &lt; 28) {\n\t  global_data_object&#46;week_integer = 3\n\t}\n\tswitch (global_data_object&#46;month_integer) {\n\t  case (0 or 2 or 4 or 6 or 7 or 9 or 11) {\n\t    if (global_data_object&#46;day_integer = 31) {\n\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1\n\t\t  global_data_object&#46;day_integer = 0\n\t\t  global_data_object&#46;week_integer = 0\n\t\t}\n\t  }\n\t  case (3 or 5 or 8 or 10) {\n\t    if (global_data_object&#46;day_integer = 30) {\n\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1\n\t\t  global_data_object&#46;day_integer = 0\n\t\t  global_data_object&#46;week_integer = 0\n\t\t}\n\t  }\n\t  case (1) {\n\t    if (global_data_object&#46;day_integer = 28) {\n\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1\n\t\t  global_data_object&#46;day_integer = 0\n\t\t  global_data_object&#46;week_integer = 0\n\t\t}\n\t  }\n\t}\n    global_data_object&#46;second_integer = global_data_object&#46;second_integer + 1\n\tglobal_data_object&#46;global_turns = global_data_object&#46;global_turns + 1\n  &#93;&#93;&gt;&lt;/turnscript&gt;\n\n&lt;!-- Timers --&gt;\n\n&lt;!-- Object Types --&gt;\n\n&lt;!-- Attributes --&gt;\n\n&lt;!-- Strings --&gt;\n\n  &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;\n  &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;\n\n  &lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;\n  &lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;\n\n&lt;!-- Booleans --&gt;\n\n&lt;!-- Integers --&gt;\n\n  &lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;\n  \n  &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;\n  &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;\n  &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;\n  \n  &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;\n  &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;\n  &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;\n  &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;\n  \n&lt;!-- Doubles --&gt;\n\n&lt;!-- Lists --&gt;\n\n&lt;!-- String Lists --&gt;\n\n  &lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;\n  &lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;monday;tuesday;wednesday;thursday;friday;saturday;sunday&lt;/days_of_the_week&gt;\n\n&lt;!-- Object Lists --&gt;\n\n&lt;!-- Dictionaries --&gt;\n\n&lt;!-- String Dictionaries --&gt;\n\n&lt;!-- Object Dictionaries --&gt;\n\n&lt;!-- Script Dictionaries --&gt;\n\n&lt;!-- Scripts --&gt;\n\n&lt;!-- Inherited --&gt;\n\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n\n&lt;!-- Objects --&gt;\n\n&lt;!-- Objects --&gt;\n\n&lt;!-- Data Objects --&gt;\n\n  &lt;object name=&quot;global_data_object&quot;&gt;\n  \n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t\n\t&lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;\n\t\n\t&lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;\n    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;\n\t\n\t&lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;\n\t&lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;monday;tuesday;wednesday;thursday;friday;saturday;sunday&lt;/days_of_the_week&gt;\n\t\n\t&lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;\n\t\n\t&lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;\n    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;\n    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;\n\t\n\t&lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;\n\t\n\t&lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;\n    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;\n\t&lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;\n    &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;\n\n\t&lt;/object&gt;\n  \n&lt;/library&gt;[/code:1gpl9uqj]\n\n(and, now I can utilize the % symbol, or soon ~ it's still a bit complicated when you're trying to make a whole time+date system even while now understanding what is and how the % symbol works ~ anyways, hehe)\n\nya, see that big &quot;if&quot; turnscript script block? the % symbol is very much appreciated, lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> Hopefully with enough ingenuity from myself, I can make that big &quot;if&quot; turnscript script block dissapear, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "ah, thank you Jayna! So, Pixie's usage of the % symbol is doing the &quot;operator modulo&quot; (whatever, meh. I guess it's latin, but it sounds stupid, lol ~ so I don't like it, lol), the remainder functionality, and I presume this is using the javacript language, or are there multiple languages that use the % symbol as the modulo too?<br/><br/>the xml's usage had nothing to do with remainder functionality (operator modulo):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://stackoverflow.com/questions/4414389/android-xml-percent-symbol\">http://stackoverflow.com/questions/4414 ... ent-symbol</a><!-- m --><br/><br/>it uses the % symbol for some variable usage or something, I think... (haven't really read up on this too much yet): %a<br/><br/>&lt;string formatted=&quot;false&quot;&gt;%a + %a == 2%a&lt;/string&gt;<br/><br/>I think the basic command line prompt on computers (run -&gt; cmd.exe), also uses the % symbol in this same way as the xml, with something to do with variables (I have been trying to learn this &quot;language&quot;, cmd.exe, as I figured I'd start with one of the simpliest for trying to learn another language, lol. Though, it's a bit too simplistic~limited and thus a bit of effort to learn to do stuff with it, on top of trying to decipher what the commands and their switches do, along with the correct syntax ~ format, GRRR!, lol. Looking at other programming languages makes me appreciate Alex' quest coding, in how noob-friendly it is! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->)<br/><br/>anyways, (was going off on a tangent, lol), thank you, as I now know it is indeed the modulo usage. Now, I just need to be able to follow how Pixie is using it in his~her Clock Library... it's used a bit more complex'ly... it'll take me awhile to get it... as I'm not that good with math stuff... heh.<br/><br/>I get it's math usage at the basic level (again thank you, for the very clear+concise explanations you give in your posts!):<br/><br/>days = hours / 24 (as an integer)<br/>hour = hours % 24<br/><br/>starting_hours = 30<br/>days = 1<br/>hour = 6<br/><br/>it'll just take me a bit to understand the jump to how Pixie is using it... hehe. I wish I was better with math stuff... sighs.<br/><br/>-----------<br/><br/>and yes, this % symbol (operator modulo) will definately make the coding much cleaner, than my simplistic but large &quot;if&quot; script blocks, lol:<br/><br/>(I've just started on this stuff ~ before posting about how to use the % symbol... so this is very preliminary... below)<br/><br/><pre><code>&lt;library&gt;<br/><br/>&lt;!-- Libraries --&gt;<br/><br/>&lt;!-- Templates --&gt;<br/><br/>&lt;!-- Verbs --&gt;<br/><br/>&lt;!-- Commands --&gt;<br/><br/>&lt;!-- Functions --&gt;<br/><br/>&lt;!-- Turn Scripts --&gt;<br/><br/>  &lt;turnscript name=&quot;global_events_turnscript&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (global_data_object&#46;second_integer = 60) {<br/>\t  global_data_object&#46;minute_integer = global_data_object&#46;minute_integer + 1<br/>\t  global_data_object&#46;second_integer = 0<br/>\t}<br/>\tif (global_data_object&#46;minute_integer = 60) {<br/>\t  global_data_object&#46;hour_integer = global_data_object&#46;hour_integer + 1<br/>\t  global_data_object&#46;minute_integer = 0<br/>\t}<br/>\tif (global_data_object&#46;hour_integer = 24) {<br/>\t  global_data_object&#46;day_integer = global_data_object&#46;day_integer + 1<br/>\t  global_data_object&#46;hour_integer = 0<br/>\t}<br/>\tif (global_data_object&#46;day_integer &gt;= 0 and global_data_object&#46;day_integer &lt; 7) {<br/>\t  global_data_object&#46;week_integer = 0<br/>\t} else if (global_data_object&#46;day_integer &gt;= 7 and global_data_object&#46;day_integer &lt; 14) {<br/>\t  global_data_object&#46;week_integer = 1<br/>\t} else if (global_data_object&#46;day_integer &gt;= 14 and global_data_object&#46;day_integer &lt; 21) {<br/>\t  global_data_object&#46;week_integer = 2<br/>\t} else if (global_data_object&#46;day_integer &gt;= 21 and global_data_object&#46;day_integer &lt; 28) {<br/>\t  global_data_object&#46;week_integer = 3<br/>\t}<br/>\tswitch (global_data_object&#46;month_integer) {<br/>\t  case (0 or 2 or 4 or 6 or 7 or 9 or 11) {<br/>\t    if (global_data_object&#46;day_integer = 31) {<br/>\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1<br/>\t\t  global_data_object&#46;day_integer = 0<br/>\t\t  global_data_object&#46;week_integer = 0<br/>\t\t}<br/>\t  }<br/>\t  case (3 or 5 or 8 or 10) {<br/>\t    if (global_data_object&#46;day_integer = 30) {<br/>\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1<br/>\t\t  global_data_object&#46;day_integer = 0<br/>\t\t  global_data_object&#46;week_integer = 0<br/>\t\t}<br/>\t  }<br/>\t  case (1) {<br/>\t    if (global_data_object&#46;day_integer = 28) {<br/>\t\t  global_data_object&#46;month_integer = global_data_object&#46;month_integer + 1<br/>\t\t  global_data_object&#46;day_integer = 0<br/>\t\t  global_data_object&#46;week_integer = 0<br/>\t\t}<br/>\t  }<br/>\t}<br/>    global_data_object&#46;second_integer = global_data_object&#46;second_integer + 1<br/>\tglobal_data_object&#46;global_turns = global_data_object&#46;global_turns + 1<br/>  &#93;&#93;&gt;&lt;/turnscript&gt;<br/><br/>&lt;!-- Timers --&gt;<br/><br/>&lt;!-- Object Types --&gt;<br/><br/>&lt;!-- Attributes --&gt;<br/><br/>&lt;!-- Strings --&gt;<br/><br/>  &lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;<br/>  &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;<br/><br/>  &lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;<br/>  &lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;<br/><br/>&lt;!-- Booleans --&gt;<br/><br/>&lt;!-- Integers --&gt;<br/><br/>  &lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;<br/>  <br/>  &lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;<br/>  &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;<br/>  &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;<br/>  <br/>  &lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;<br/>  &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;<br/>  &lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;<br/>  &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;<br/>  <br/>&lt;!-- Doubles --&gt;<br/><br/>&lt;!-- Lists --&gt;<br/><br/>&lt;!-- String Lists --&gt;<br/><br/>  &lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;<br/>  &lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;monday;tuesday;wednesday;thursday;friday;saturday;sunday&lt;/days_of_the_week&gt;<br/><br/>&lt;!-- Object Lists --&gt;<br/><br/>&lt;!-- Dictionaries --&gt;<br/><br/>&lt;!-- String Dictionaries --&gt;<br/><br/>&lt;!-- Object Dictionaries --&gt;<br/><br/>&lt;!-- Script Dictionaries --&gt;<br/><br/>&lt;!-- Scripts --&gt;<br/><br/>&lt;!-- Inherited --&gt;<br/><br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/><br/>&lt;!-- Objects --&gt;<br/><br/>&lt;!-- Objects --&gt;<br/><br/>&lt;!-- Data Objects --&gt;<br/><br/>  &lt;object name=&quot;global_data_object&quot;&gt;<br/>  <br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t<br/>\t&lt;global_turns type=&quot;int&quot;&gt;0&lt;/global_turns&gt;<br/>\t<br/>\t&lt;day_string type=&quot;string&quot;&gt;&lt;/day_string&gt;<br/>    &lt;month_string type=&quot;string&quot;&gt;&lt;/month_string&gt;<br/>\t<br/>\t&lt;months_of_the_year type=&quot;simplestringlist&quot;&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/months_of_the_year&gt;<br/>\t&lt;days_of_the_week type=&quot;simplestringlist&quot;&gt;monday;tuesday;wednesday;thursday;friday;saturday;sunday&lt;/days_of_the_week&gt;<br/>\t<br/>\t&lt;clock_time type=&quot;string&quot;&gt;global_data_object&#46;hour_integer + &quot;&#58;&quot; + global_data_object&#46;minute_integer + &quot;&#58;&quot; + global_data_object&#46;second_integer&lt;/clock_time&gt;<br/>\t<br/>\t&lt;second_integer type=&quot;int&quot;&gt;0&lt;/second_integer&gt;<br/>    &lt;minute_integer type=&quot;int&quot;&gt;0&lt;/minute_integer&gt;<br/>    &lt;hour_integer type=&quot;int&quot;&gt;0&lt;/hour_integer&gt;<br/>\t<br/>\t&lt;date_time type=&quot;string&quot;&gt;global_data_object&#46;month_integer + 1 + &quot;/&quot; + global_data_object&#46;day_integer + 1 + &quot;/&quot; + global_data_object&#46;year_integer&lt;/date_time&gt;<br/>\t<br/>\t&lt;day_integer type=&quot;int&quot;&gt;0&lt;/day_integer&gt;<br/>    &lt;week_integer type=&quot;int&quot;&gt;0&lt;/week_integer&gt;<br/>\t&lt;month_integer type=&quot;int&quot;&gt;0&lt;/month_integer&gt;<br/>    &lt;year_integer type=&quot;int&quot;&gt;0&lt;/year_integer&gt;<br/><br/>\t&lt;/object&gt;<br/>  <br/>&lt;/library&gt;</code></pre><br/><br/>(and, now I can utilize the % symbol, or soon ~ it's still a bit complicated when you're trying to make a whole time+date system even while now understanding what is and how the % symbol works ~ anyways, hehe)<br/><br/>ya, see that big &quot;if&quot; turnscript script block? the % symbol is very much appreciated, lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> Hopefully with enough ingenuity from myself, I can make that big &quot;if&quot; turnscript script block dissapear, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-09-29T02:55:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26424",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yeah! the math inept (struggling) HK has finally understood how the % symbol usage works in Pixie's Clock Library, as seen by my feeble use of visual examples in understanding it, as seen below, lol:\n\n[quote=&quot;MJ&quot;:6xnddtzs]\n\nSource:\n\n<!-- m --><a class=\"postlink\" href=\"http://uk.answers.yahoo.com/question/index?qid=20080710034216AA8yyPP\">http://uk.answers.yahoo.com/question/in ... 216AA8yyPP</a><!-- m -->\n\nMJ user:\n\nThere are 365.25 days in a year.\n\n365 in a non leap year and 366 in a leap every (every fourth year there is a [HK Edit: from 19th to 29th] day in February)\n\nWe say 52 weeks because it's convenient even though it does only account for 364 days.\n\nMissing 1 day in a normal year and 2 days in a leap year.\n\nIf you count up the days in all the months of a non leap year you will see there are 365\n\nJan 31\nFeb 28\nMar 31\nApr 30\nMay 31\nJun 30\nJul 31\nAug 31\nSept 30\nOct 31\nNov 30\nDec 31\n\nEquals 365 <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:6xnddtzs]\n\n[code:6xnddtzs]&lt;!-- My Own Notes --&gt;\n\n(putting this into~as code will be the easy part, lol&#46; Whereas, understanding this stuff, was the hard part, ya I got it understood now but it took me a long time, I HATE MATH!, heh)\n\n// (turns / 1) % 60 = seconds\n// turns % 60 = seconds\n// 000 % 60 -&gt; 000 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 000 - 000 = 00\n// 001 % 60 -&gt; 001 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 001 - 000 = 01\n// 059 % 60 -&gt; 059 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 059 - 000 = 59\n// 060 % 60 -&gt; 060 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 060 - 060 = 00\n// 061 % 60 -&gt; 061 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 061 - 060 = 01\n// 119 % 60 -&gt; 119 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 119 - 060 = 59\n// 120 % 60 -&gt; 120 / 60 = 2 -&gt; 2 x 60 = 120 -&gt; 120 - 120 = 00\n// 121 % 60 -&gt; 121 / 60 = 2 -&gt; 2 x 60 = 120 -&gt; 121 - 120 = 01\n\n// (turns / 60) % 60 = minutes\n// 0059 / 60 = 00 -&gt; 00 % 60 -&gt; 00 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 00 - 00 = 00\n// 0060 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01\n// 0061 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01\n// 0119 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01\n// 0120 / 60 = 02 -&gt; 02 % 60 -&gt; 02 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 02 - 00 = 02\n// 0121 / 60 = 02 -&gt; 02 % 60 -&gt; 02 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 02 - 00 = 02\n// 3599 / 60 = 59 -&gt; 59 % 60 -&gt; 59 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 59 - 00 = 59\n// 3600 / 60 = 60 -&gt; 60 % 60 -&gt; 60 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 60 - 60 = 00\n// 3601 / 60 = 60 -&gt; 60 % 60 -&gt; 60 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 60 - 60 = 00\n// 3660 / 60 = 61 -&gt; 61 % 60 -&gt; 61 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 61 - 60 = 01\n\n// hours_24 (military time)\n// (turns / 3600) % 24 = hours_24\n// 03599 / 3600 = 00 -&gt; 00 % 24 -&gt; 00 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 00 - 00 = 00 (midnight)\n// 03600 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)\n// 03601 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)\n// 03660 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)\n// 07200 / 3600 = 02 -&gt; 02 % 24 -&gt; 02 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 02 - 00 = 02 (am)\n// 43200 / 3600 = 12 -&gt; 12 % 24 -&gt; 12 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 12 - 00 = 12 (noon)\n// 82800 / 3600 = 23 -&gt; 23 % 24 -&gt; 23 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 23 - 00 = 23 (pm)\n// 86400 / 3600 = 24 -&gt; 24 % 24 -&gt; 24 / 24 = 1 -&gt; 1 x 24 = 24 -&gt; 24 - 24 = 00 (midnight)\n// 90000 / 3600 = 25 -&gt; 25 % 24 -&gt; 25 / 24 = 1 -&gt; 1 x 24 = 24 -&gt; 25 - 24 = 01 (am)\n\n// hours_12 (civilian time)\n// hours_24 % 12 = hours_12\n// 00 % 12 -&gt; 00 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 00 - 00 = 00 (midnight)\n// 01 % 12 -&gt; 01 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 01 - 00 = 01 (am)\n// 11 % 12 -&gt; 11 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 11 - 00 = 11 (am)\n// 12 % 12 -&gt; 12 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 12 - 12 = 00 (noon)\n// 13 % 12 -&gt; 13 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 13 - 12 = 01 (pm)\n// 23 % 12 -&gt; 23 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 23 - 12 = 11 (pm)\n// 24 % 12 -&gt; 24 / 12 = 2 -&gt; 2 x 12 = 24 -&gt; 24 - 24 = 00 (midnight)\n\n// if (hours_24 = 12) {\n// -&gt; hours_12 = 12 (noon)\n// } else if (hours_24 = 00) {\n// -&gt; hours_12 = 12 (midnight)\n// }\n\n// days_365 (day out of the year)\n// (turns / (3600 x 24)) % 365 = days_365\n\n// days_31 (day out of the months&#58; January, March, May, July, August, October, and December)\n// (turns / (3600 x 24)) % 31 = days_31\n\n// days_30 (day out of the months&#58; April, June, September, and November)\n// (turns / (3600 x 24)) % 30 = days_30\n\n// days_28 (day out of the month&#58; February)\n// (turns / (3600 x 24)) % 28 = days_28\n\n// due to that a year is actually equal to 365&#46;25 days\n// for every 4th year, there's an extra (+1) day (or 29 days) in February\n// days_29 (day out of the month&#58; February)\n// (turns / (3600 x 24)) % 29 = days_29[/code:6xnddtzs]\n\n-------------------------\n\nobviously, I'll use large increments of &quot;turns&quot;, lol.\n\nOr, I've even been thinking about using maybe a Timer instead for the &quot;turns&quot; attribute... if a Timer can count~add by seconds (I haven't really looked at Timers at all, except way back when I did the tutorial ~ which I can't remember about, lol)\n\nalso, how large of number sizes can quest handle? is there any limit upon a number's size?",
      "EditableFormat": "bbcode",
      "HTML": "yeah! the math inept (struggling) HK has finally understood how the % symbol usage works in Pixie's Clock Library, as seen by my feeble use of visual examples in understanding it, as seen below, lol:<br/><br/><blockquote><cite>MJ wrote:</cite><br/><br/>Source:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://uk.answers.yahoo.com/question/index?qid=20080710034216AA8yyPP\">http://uk.answers.yahoo.com/question/in ... 216AA8yyPP</a><!-- m --><br/><br/>MJ user:<br/><br/>There are 365.25 days in a year.<br/><br/>365 in a non leap year and 366 in a leap every (every fourth year there is a [HK Edit: from 19th to 29th] day in February)<br/><br/>We say 52 weeks because it's convenient even though it does only account for 364 days.<br/><br/>Missing 1 day in a normal year and 2 days in a leap year.<br/><br/>If you count up the days in all the months of a non leap year you will see there are 365<br/><br/>Jan 31<br/>Feb 28<br/>Mar 31<br/>Apr 30<br/>May 31<br/>Jun 30<br/>Jul 31<br/>Aug 31<br/>Sept 30<br/>Oct 31<br/>Nov 30<br/>Dec 31<br/><br/>Equals 365 <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/><pre><code>&lt;!-- My Own Notes --&gt;<br/><br/>(putting this into~as code will be the easy part, lol&#46; Whereas, understanding this stuff, was the hard part, ya I got it understood now but it took me a long time, I HATE MATH!, heh)<br/><br/>// (turns / 1) % 60 = seconds<br/>// turns % 60 = seconds<br/>// 000 % 60 -&gt; 000 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 000 - 000 = 00<br/>// 001 % 60 -&gt; 001 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 001 - 000 = 01<br/>// 059 % 60 -&gt; 059 / 60 = 0 -&gt; 0 x 60 = 000 -&gt; 059 - 000 = 59<br/>// 060 % 60 -&gt; 060 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 060 - 060 = 00<br/>// 061 % 60 -&gt; 061 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 061 - 060 = 01<br/>// 119 % 60 -&gt; 119 / 60 = 1 -&gt; 1 x 60 = 060 -&gt; 119 - 060 = 59<br/>// 120 % 60 -&gt; 120 / 60 = 2 -&gt; 2 x 60 = 120 -&gt; 120 - 120 = 00<br/>// 121 % 60 -&gt; 121 / 60 = 2 -&gt; 2 x 60 = 120 -&gt; 121 - 120 = 01<br/><br/>// (turns / 60) % 60 = minutes<br/>// 0059 / 60 = 00 -&gt; 00 % 60 -&gt; 00 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 00 - 00 = 00<br/>// 0060 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01<br/>// 0061 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01<br/>// 0119 / 60 = 01 -&gt; 01 % 60 -&gt; 01 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 01 - 00 = 01<br/>// 0120 / 60 = 02 -&gt; 02 % 60 -&gt; 02 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 02 - 00 = 02<br/>// 0121 / 60 = 02 -&gt; 02 % 60 -&gt; 02 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 02 - 00 = 02<br/>// 3599 / 60 = 59 -&gt; 59 % 60 -&gt; 59 / 60 = 0 -&gt; 0 x 60 = 00 -&gt; 59 - 00 = 59<br/>// 3600 / 60 = 60 -&gt; 60 % 60 -&gt; 60 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 60 - 60 = 00<br/>// 3601 / 60 = 60 -&gt; 60 % 60 -&gt; 60 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 60 - 60 = 00<br/>// 3660 / 60 = 61 -&gt; 61 % 60 -&gt; 61 / 60 = 1 -&gt; 1 x 60 = 60 -&gt; 61 - 60 = 01<br/><br/>// hours_24 (military time)<br/>// (turns / 3600) % 24 = hours_24<br/>// 03599 / 3600 = 00 -&gt; 00 % 24 -&gt; 00 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 00 - 00 = 00 (midnight)<br/>// 03600 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)<br/>// 03601 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)<br/>// 03660 / 3600 = 01 -&gt; 01 % 24 -&gt; 01 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 01 - 00 = 01 (am)<br/>// 07200 / 3600 = 02 -&gt; 02 % 24 -&gt; 02 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 02 - 00 = 02 (am)<br/>// 43200 / 3600 = 12 -&gt; 12 % 24 -&gt; 12 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 12 - 00 = 12 (noon)<br/>// 82800 / 3600 = 23 -&gt; 23 % 24 -&gt; 23 / 24 = 0 -&gt; 0 x 24 = 00 -&gt; 23 - 00 = 23 (pm)<br/>// 86400 / 3600 = 24 -&gt; 24 % 24 -&gt; 24 / 24 = 1 -&gt; 1 x 24 = 24 -&gt; 24 - 24 = 00 (midnight)<br/>// 90000 / 3600 = 25 -&gt; 25 % 24 -&gt; 25 / 24 = 1 -&gt; 1 x 24 = 24 -&gt; 25 - 24 = 01 (am)<br/><br/>// hours_12 (civilian time)<br/>// hours_24 % 12 = hours_12<br/>// 00 % 12 -&gt; 00 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 00 - 00 = 00 (midnight)<br/>// 01 % 12 -&gt; 01 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 01 - 00 = 01 (am)<br/>// 11 % 12 -&gt; 11 / 12 = 0 -&gt; 0 x 12 = 00 -&gt; 11 - 00 = 11 (am)<br/>// 12 % 12 -&gt; 12 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 12 - 12 = 00 (noon)<br/>// 13 % 12 -&gt; 13 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 13 - 12 = 01 (pm)<br/>// 23 % 12 -&gt; 23 / 12 = 1 -&gt; 1 x 12 = 12 -&gt; 23 - 12 = 11 (pm)<br/>// 24 % 12 -&gt; 24 / 12 = 2 -&gt; 2 x 12 = 24 -&gt; 24 - 24 = 00 (midnight)<br/><br/>// if (hours_24 = 12) {<br/>// -&gt; hours_12 = 12 (noon)<br/>// } else if (hours_24 = 00) {<br/>// -&gt; hours_12 = 12 (midnight)<br/>// }<br/><br/>// days_365 (day out of the year)<br/>// (turns / (3600 x 24)) % 365 = days_365<br/><br/>// days_31 (day out of the months&#58; January, March, May, July, August, October, and December)<br/>// (turns / (3600 x 24)) % 31 = days_31<br/><br/>// days_30 (day out of the months&#58; April, June, September, and November)<br/>// (turns / (3600 x 24)) % 30 = days_30<br/><br/>// days_28 (day out of the month&#58; February)<br/>// (turns / (3600 x 24)) % 28 = days_28<br/><br/>// due to that a year is actually equal to 365&#46;25 days<br/>// for every 4th year, there's an extra (+1) day (or 29 days) in February<br/>// days_29 (day out of the month&#58; February)<br/>// (turns / (3600 x 24)) % 29 = days_29</code></pre><br/><br/>-------------------------<br/><br/>obviously, I'll use large increments of &quot;turns&quot;, lol.<br/><br/>Or, I've even been thinking about using maybe a Timer instead for the &quot;turns&quot; attribute... if a Timer can count~add by seconds (I haven't really looked at Timers at all, except way back when I did the tutorial ~ which I can't remember about, lol)<br/><br/>also, how large of number sizes can quest handle? is there any limit upon a number's size?",
      "PostDate": "2013-09-29T08:38:33+01:00",
      "LastEditDate": null
    }
  ]
}
