{
  "Topic": {
    "TopicId": "phudludxiuqxocu5q8_mnw",
    "ForumId": "10",
    "Title": "Quick question on integers",
    "LastUpdated": "2017-06-17T09:08:26.414141Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "26d9aa2d-aa42-4fa0-a36c-59b21dce8f1d",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nGot a question when it comes to numbers and attributes.\r\n\r\nSay I want to make an attribute, Purity. And this can both raise or lower depending on the player's actions. It has a minimum of zero, and a maximum of 100.\r\n\r\nFirst question is: How (preferably in the GUI) can I make it so an attribute has a maximum value, I.e my Purity cannot go above 100. \r\n\r\nWould this require some kind of turn script that checks my purity every turn and if It goes If Purity > 100 set attribute Purity 100? And vice-versa for going negative?\r\n\r\nSecond question. Setting different interactions with objects, such as if the player were to drink something. At purity 0 it would have response A. At purity 20 it would have response B. 40 response C, etc.\r\n\r\nNow originally I was thinking, If purity >=20 then do response B. But then if my purity is 40, and I also have if purity >40=  C, then the two would conflict? It might seem simple, and I'm sure I've seen it before, but how could I set a range? I.e if Purity between 0 and 20, 21 and 40, 41 and 60.",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Got a question when it comes to numbers and attributes.</p>\n<p>Say I want to make an attribute, Purity. And this can both raise or lower depending on the player's actions. It has a minimum of zero, and a maximum of 100.</p>\n<p>First question is: How (preferably in the GUI) can I make it so an attribute has a maximum value, I.e my Purity cannot go above 100.</p>\n<p>Would this require some kind of turn script that checks my purity every turn and if It goes If Purity &gt; 100 set attribute Purity 100? And vice-versa for going negative?</p>\n<p>Second question. Setting different interactions with objects, such as if the player were to drink something. At purity 0 it would have response A. At purity 20 it would have response B. 40 response C, etc.</p>\n<p>Now originally I was thinking, If purity &gt;=20 then do response B. But then if my purity is 40, and I also have if purity &gt;40=  C, then the two would conflict? It might seem simple, and I'm sure I've seen it before, but how could I set a range? I.e if Purity between 0 and 20, 21 and 40, 41 and 60.</p>\n\n",
      "PostDate": "2017-06-17T09:08:26.414141Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf7a193d-ca1e-489a-88df-15460fdf632c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Best way to cap an attribute is with a change script (assuming you are using the desktop version). Go to the _Attributes_ tab, and select the Purity attribute. Then click on \"Add change script\". Paste in this code (click the \"Code view\" icon, paste this in, then click the icon again, and it will look like it was done in the GUI):\r\n```\r\nif (this.Purity < 0) {\r\n  this.Purity = 0\r\n}\r\nif (this.Purity > 100) {\r\n  this.Purity = 100\r\n}\r\n```\r\nNow whenever Purity changes, this will fire and ensure it is in range.\r\n\r\n> Now originally I was thinking, If purity >=20 then do response B. But then if my purity is 40, and I also have if purity >40= C, then the two would conflict? It might seem simple, and I'm sure I've seen it before, but how could I set a range? I.e if Purity between 0 and 20, 21 and 40, 41 and 60.\r\n\r\nDo it in reverse order, so the over 80 first, \"else if\" over 60, then \"else if\" 40. If it is 65, it will not fire the first, as it is not over 80, it will for the next, as desired, and it will not for the rest because it has already done.",
      "EditableFormat": "markdown",
      "HTML": "<p>Best way to cap an attribute is with a change script (assuming you are using the desktop version). Go to the <em>Attributes</em> tab, and select the Purity attribute. Then click on \"Add change script\". Paste in this code (click the \"Code view\" icon, paste this in, then click the icon again, and it will look like it was done in the GUI):</p>\n<pre><code>if (this.Purity &lt; 0) {\n  this.Purity = 0\n}\nif (this.Purity &gt; 100) {\n  this.Purity = 100\n}\n</code></pre>\n<p>Now whenever Purity changes, this will fire and ensure it is in range.</p>\n<blockquote>\n<p>Now originally I was thinking, If purity &gt;=20 then do response B. But then if my purity is 40, and I also have if purity &gt;40= C, then the two would conflict? It might seem simple, and I'm sure I've seen it before, but how could I set a range? I.e if Purity between 0 and 20, 21 and 40, 41 and 60.</p>\n</blockquote>\n<p>Do it in reverse order, so the over 80 first, \"else if\" over 60, then \"else if\" 40. If it is 65, it will not fire the first, as it is not over 80, it will for the next, as desired, and it will not for the rest because it has already done.</p>\n\n",
      "PostDate": "2017-06-17T09:37:19.5409459Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "98bcb1ed-c1b5-40f7-8631-6cc65a120d60",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can take a look at this thread too, as it's about the same topic of handling ranges of Values:\r\n\r\nhttp://textadventures.co.uk/forum/general/topic/9szbwwsseu2ralhrcchdtw/please-halp-creating-different-responses-based-on-score-range\r\n\r\nask if you got any questions, and/or need help on how to do the stuff in the gUI/Editor.",
      "EditableFormat": "markdown",
      "HTML": "<p>you can take a look at this thread too, as it's about the same topic of handling ranges of Values:</p>\n<p>http://textadventures.co.uk/forum/general/topic/9szbwwsseu2ralhrcchdtw/please-halp-creating-different-responses-based-on-score-range</p>\n<p>ask if you got any questions, and/or need help on how to do the stuff in the gUI/Editor.</p>\n\n",
      "PostDate": "2017-06-17T11:53:58.6375251Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "04a5f9f6-e372-49b1-8363-48c51e8b8fed",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "An alternative approach is to divide the number by 20. If you divide an integer by an integer, you will get an integer, with the value rounded down, so\r\n\r\n0-19 -> 0\r\n20-39 -> 1\r\netc\r\n\r\nthen you could do:\r\n```\r\nif ((player.Purity / 20) = 0) {\r\n  msg (\"Potty mouth!\")\r\n}\r\nelse if ((player.Purity / 20) = 1) {\r\netc.",
      "EditableFormat": "markdown",
      "HTML": "<p>An alternative approach is to divide the number by 20. If you divide an integer by an integer, you will get an integer, with the value rounded down, so</p>\n<p>0-19 -&gt; 0<br>\n20-39 -&gt; 1<br>\netc</p>\n<p>then you could do:</p>\n<pre><code>if ((player.Purity / 20) = 0) {\n  msg (\"Potty mouth!\")\n}\nelse if ((player.Purity / 20) = 1) {\netc.\n</code></pre>\n\n",
      "PostDate": "2017-06-17T12:31:48.2592481Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0dfaea10-52a4-44de-9182-dfc96f1d83bc",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Further question. I'm trying to use the purity attribute in text. Now I get I can add words in by going  {player.purity>=50: alluring} into the text, but is there a way to use that ```else if``` you had up there? Say  {player.purity<=75: alluring / else if player.purity<=50: interesting  / else if player.purity<=25:  disgusting}  What's the proper way to insert the 'Else if' command into text?\r\n\r\nAlthough I'm about to make a wild guess of \r\n\r\n``` {player.purity<=75: alluring { else if player.purity<=50: interesting  { else if player.purity<=25:  disgusting}}}```\r\n\r\nAnd see if it works.",
      "EditableFormat": "markdown",
      "HTML": "<p>Further question. I'm trying to use the purity attribute in text. Now I get I can add words in by going  {player.purity&gt;=50: alluring} into the text, but is there a way to use that <code>else if</code> you had up there? Say  {player.purity&lt;=75: alluring / else if player.purity&lt;=50: interesting  / else if player.purity&lt;=25:  disgusting}  What's the proper way to insert the 'Else if' command into text?</p>\n<p>Although I'm about to make a wild guess of</p>\n<p><code>{player.purity&lt;=75: alluring { else if player.purity&lt;=50: interesting { else if player.purity&lt;=25: disgusting}}}</code></p>\n<p>And see if it works.</p>\n\n",
      "PostDate": "2017-06-25T00:04:26.8160322Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "777bf7ec-dab7-4e30-9259-efce11f94030",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sadly no. You would need two `if` directives for each range:\r\n\r\n> {if player.purity<=75: {if player.purity>50:alluring}}\r\n\r\nAlternatively, you could have the change script set a string attribute, say \"purity_as_string\". Then it is just:\r\n\r\n> {player.purity_as_string}",
      "EditableFormat": "markdown",
      "HTML": "<p>Sadly no. You would need two <code>if</code> directives for each range:</p>\n<blockquote>\n<p>{if player.purity&lt;=75: {if player.purity&gt;50:alluring}}</p>\n</blockquote>\n<p>Alternatively, you could have the change script set a string attribute, say \"purity_as_string\". Then it is just:</p>\n<blockquote>\n<p>{player.purity_as_string}</p>\n</blockquote>\n\n",
      "PostDate": "2017-06-25T07:43:13.6342668Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f58f8ccd-a3f3-4757-8aad-d468ded95660",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Aha, I see. In that case I might devise a system of levels, where player.purity will bestow a player.plevel of A, B, C, D, E or F...\r\n\r\nif player.Purity = <80 set attribute A\r\nif player.Purity = <60 set attribute B\r\nif player.Purity = <40 set attribute C\r\n\r\nEtc, so I don't have to tread on my toes with numbers in the text. Probably going to be simpler.",
      "EditableFormat": "markdown",
      "HTML": "<p>Aha, I see. In that case I might devise a system of levels, where player.purity will bestow a player.plevel of A, B, C, D, E or F...</p>\n<p>if player.Purity = &lt;80 set attribute A<br>\nif player.Purity = &lt;60 set attribute B<br>\nif player.Purity = &lt;40 set attribute C</p>\n<p>Etc, so I don't have to tread on my toes with numbers in the text. Probably going to be simpler.</p>\n\n",
      "PostDate": "2017-06-25T13:44:08.4962465Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "748c6ac0-ab2e-4add-827d-9c312e6927a3",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For anyone else wondering about this mechanic, here's the result I'm going to try now.\r\n\r\n```\r\nif (player.purity = <90) {\r\n  set (player, \"plevel\", \"A\")\r\n}\r\nelse if (player.purity = <70) {\r\n  set (player, \"plevel\", \"B\")\r\n}\r\nelse if (player.purity = <50) {\r\n  set (player, \"plevel\", C)\r\n}\r\nelse if (player.purity = <20) {\r\n  set (player, \"plevel\", D)\r\n}\r\nelse {\r\n  set (player, \"plevel\", E)\r\n}\r\n```\r\n\r\n**Edit: Checking back, when I try and use a Test command that prints {player.plevel} I encounter an issue where it just prints (Script) I wonder if I've screwed up here.**\r\n\r\nI had initially set that as a script attribute, probably where I went wrong. It's now a Turn Script.\r\n\r\n```\r\nif (player.purity =< 90) {\r\n  player.plevel = \"A\"\r\n}\r\nelse if (player.purity =< 70) {\r\n  player.plevel = \"B\"\r\n}\r\nelse if (player.purity =< 50) {\r\n  player.plevel = \"C\"\r\n}\r\nelse if (player.purity =< 20) {\r\n  player.plevel = \"D\"\r\n}\r\nelse {\r\n  player.plevel = \"E\"\r\n}\r\n```\r\n\r\nBut when I use the Test command that prints {player.plevel} I get\r\n\r\n```Error running script: Error compiling expression 'player.purity =< 90': SyntaxError: Unexpected token \"<\"; expected one of \"-\", <INTEGER>, <REAL>, <STRING_LITERAL>, \"True\", \"False\", <HEX_LITERAL>, <CHAR_LITERAL>, \"null\", <DATETIME>, <TIMESPAN>, \"(\", <IDENTIFIER>, \"if\", or \"cast\"Line: 1, Column: 24```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>For anyone else wondering about this mechanic, here's the result I'm going to try now.</p>\n<pre><code>if (player.purity = &lt;90) {\n  set (player, \"plevel\", \"A\")\n}\nelse if (player.purity = &lt;70) {\n  set (player, \"plevel\", \"B\")\n}\nelse if (player.purity = &lt;50) {\n  set (player, \"plevel\", C)\n}\nelse if (player.purity = &lt;20) {\n  set (player, \"plevel\", D)\n}\nelse {\n  set (player, \"plevel\", E)\n}\n</code></pre>\n<p><strong>Edit: Checking back, when I try and use a Test command that prints {player.plevel} I encounter an issue where it just prints (Script) I wonder if I've screwed up here.</strong></p>\n<p>I had initially set that as a script attribute, probably where I went wrong. It's now a Turn Script.</p>\n<pre><code>if (player.purity =&lt; 90) {\n  player.plevel = \"A\"\n}\nelse if (player.purity =&lt; 70) {\n  player.plevel = \"B\"\n}\nelse if (player.purity =&lt; 50) {\n  player.plevel = \"C\"\n}\nelse if (player.purity =&lt; 20) {\n  player.plevel = \"D\"\n}\nelse {\n  player.plevel = \"E\"\n}\n</code></pre>\n<p>But when I use the Test command that prints {player.plevel} I get</p>\n<p><code>Error running script: Error compiling expression 'player.purity =&lt; 90': SyntaxError: Unexpected token \"&lt;\"; expected one of \"-\", &lt;INTEGER&gt;, &lt;REAL&gt;, &lt;STRING_LITERAL&gt;, \"True\", \"False\", &lt;HEX_LITERAL&gt;, &lt;CHAR_LITERAL&gt;, \"null\", &lt;DATETIME&gt;, &lt;TIMESPAN&gt;, \"(\", &lt;IDENTIFIER&gt;, \"if\", or \"cast\"Line: 1, Column: 24</code></p>\n\n",
      "PostDate": "2017-06-25T13:51:02.5667742Z",
      "LastEditDate": "2017-06-25T14:15:09.1204189Z",
      "link": null
    },
    {
      "PostId": "a4deeb70-2ec2-44de-8826-2736d3f85785",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would guess you have a script call \"plevel\" on the player, and so  {player.plevel} is trying to print that. You will need to change the name of one of them.\r\n\r\nAlso, your comparisons should be `<=` not `=<`.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would guess you have a script call \"plevel\" on the player, and so  {player.plevel} is trying to print that. You will need to change the name of one of them.</p>\n<p>Also, your comparisons should be <code>&lt;=</code> not <code>=&lt;</code>.</p>\n\n",
      "PostDate": "2017-06-25T14:39:25.0764273Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "290ee538-0f6b-48c3-8994-2e570f965ff6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "if/when you do this directly in code, you need to have your scripting within the 'CDATA' tag, as this tells quest that the '<' and '>' characters/symbols are to be seen as 'greater/lesser than' operations/operators, and not as syntax tags. If you do scripting through the GUI/Editor, it handles it for you, so you don't need the CDATA tag.\r\n\r\nalso, your logic (and syntax) is incorrect too, see below for fixes\r\n\r\n------------\r\n\r\nexamples:\r\n\r\n```\r\n// example of using the 'CDATA' tag:\r\n\r\n// ERROR:\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" attr name=\"script\">\r\n    if (player.current_life < 1) {\r\n      msg (\"You were killed or have died.\")\r\n      msg (\"GAME OVER\")\r\n      finish\r\n    }\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"current_life\" type=\"int\">999</attr>\r\n</object>\r\n\r\n// NO error:\r\n\r\n<game name=\"example_game\">\r\n  <attr name=\"start\" attr name=\"script\">\r\n    <![CDATA[\r\n      if (player.current_life < 1) {\r\n        msg (\"You were killed or have died.\")\r\n        msg (\"GAME OVER\")\r\n        finish\r\n      }\r\n    ]]>\r\n  </attr>\r\n</game>\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"current_life\" type=\"int\">999</attr>\r\n</object>\r\n\r\n//same for the other scripting containing Elements, for example:\r\n\r\n<function name=\"example_function\">\r\n  <![CDATA[\r\n    if (player.current_life < 1) {\r\n      msg (\"You were killed or have died.\")\r\n      msg (\"GAME OVER\")\r\n      finish\r\n    }\r\n  ]]>\r\n</function>\r\n```\r\n\r\n-------------------------\r\n\r\nand here's examples of doing the correct logic:\r\n\r\n// if creating the Attributes through the GUI/Editor ('whatever' Object -> 'Attribute' Tab -> Attribute box -> Add):\r\n// test.score would be set as an Integer Attribute (Attribute Type: int)\r\n// test.grade would be set as a String Attribute (Attribute Type: string)\r\n\r\n// when using scripting to create/set an Attribute and its initial Value and/or change an Attribute's Value, quest uses/parses the Value as to determine what type of Attribute the Attribute is, for example, any Value in double quotes is a String Value (and thus the Attribute will be a String Attribute).\r\n\r\n```\r\n// high to low:\r\n\r\nif (test.score > 89) {\r\n  test.grade = \"A\"\r\n} else if (test.score > 79) {\r\n  test.grade = \"B\"\r\n} else if (test.score > 69) {\r\n  test.grade = \"C\"\r\n} else if (test.score > 59) {\r\n  test.grade = \"D\"\r\n} else {\r\n  test.grade = \"F\"\r\n}\r\n\r\n// low to high:\r\n\r\nif (test.score < 60) {\r\n  test.grade = \"F\"\r\n} else if (test.score < 70) {\r\n  test.grade = \"D\"\r\n} else if (test.score < 80) {\r\n  test.grade = \"C\"\r\n} else if (test.score < 90) {\r\n  test.grade = \"B\"\r\n} else {\r\n  test.grade = \"A\"\r\n}\r\n```\r\n\r\n--------------\r\n\r\nwith the logic you had:\r\n\r\n```\r\n// showing you the fixed up syntax you needed for them:\r\n\r\nif (player.purity <= 90) { // you probably need your '=' and '<' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  set (player, \"plevel\", \"A\")\r\n}\r\nelse if (player.purity <= 70) { // you probably need your '=' and '<' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  set (player, \"plevel\", \"B\")\r\n}\r\nelse if (player.purity <= 50) { // you probably need your '=' and '<' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  set (player, \"plevel\", \"C\") // you forgot the double quotes on your 'C' Value to make it be a String Value\r\n}\r\nelse if (player.purity <= 20) { // you probably need your '=' and '<' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  set (player, \"plevel\", \"D\") // you forgot the double quotes on your 'D' Value to make it be a String Value\r\n}\r\nelse {\r\n  set (player, \"plevel\", \"E\") // you forgot the double quotes on your 'E' Value to make it be a String Value\r\n}\r\n\r\nor\r\n\r\nif (player.purity <= 90) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  player.plevel = \"A\"\r\n}\r\nelse if (player.purity <= 70) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  player.plevel = \"B\"\r\n}\r\nelse if (player.purity <= 50) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  player.plevel = \"C\"\r\n}\r\nelse if (player.purity <= 20) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: <= (NO error) vs: =< (ERROR!)\r\n  player.plevel = \"D\"\r\n}\r\nelse {\r\n  player.plevel = \"E\"\r\n}\r\n```\r\n\r\nhere's the logic steps going on:\r\n\r\nif (player.purity <= 90) // if 90 or less, do the nested script below, or otherwise (your Value is OVER 90) goto/jump-to the first 'else if' below\r\n-> // blah scripting\r\nelse if (player.purity <= 70) // if 70 or less, do the nested script below... HOWEVER your value is (ALWAYS) OVER 90 (see above), so you'll NEVER do the nested script below, and so you goto/jump-to the next 'else if'... and have the exact same problem/issue... this continues for all of your 'else ifs' as your Value is OVER 90 and they're checking for if your Value is (decreasingly) under 90 (70, 50, 20).\r\nHOWEVER, you will get to the 'else' which will do it's nested script, as it doesn't check your Value.",
      "EditableFormat": "markdown",
      "HTML": "<p>if/when you do this directly in code, you need to have your scripting within the 'CDATA' tag, as this tells quest that the '&lt;' and '&gt;' characters/symbols are to be seen as 'greater/lesser than' operations/operators, and not as syntax tags. If you do scripting through the GUI/Editor, it handles it for you, so you don't need the CDATA tag.</p>\n<p>also, your logic (and syntax) is incorrect too, see below for fixes</p>\n<hr>\n<p>examples:</p>\n<pre><code>// example of using the 'CDATA' tag:\n\n// ERROR:\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" attr name=\"script\"&gt;\n    if (player.current_life &lt; 1) {\n      msg (\"You were killed or have died.\")\n      msg (\"GAME OVER\")\n      finish\n    }\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;999&lt;/attr&gt;\n&lt;/object&gt;\n\n// NO error:\n\n&lt;game name=\"example_game\"&gt;\n  &lt;attr name=\"start\" attr name=\"script\"&gt;\n    &lt;![CDATA[\n      if (player.current_life &lt; 1) {\n        msg (\"You were killed or have died.\")\n        msg (\"GAME OVER\")\n        finish\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n&lt;/game&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"current_life\" type=\"int\"&gt;999&lt;/attr&gt;\n&lt;/object&gt;\n\n//same for the other scripting containing Elements, for example:\n\n&lt;function name=\"example_function\"&gt;\n  &lt;![CDATA[\n    if (player.current_life &lt; 1) {\n      msg (\"You were killed or have died.\")\n      msg (\"GAME OVER\")\n      finish\n    }\n  ]]&gt;\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>and here's examples of doing the correct logic:</p>\n<p>// if creating the Attributes through the GUI/Editor ('whatever' Object -&gt; 'Attribute' Tab -&gt; Attribute box -&gt; Add):<br>\n// test.score would be set as an Integer Attribute (Attribute Type: int)<br>\n// test.grade would be set as a String Attribute (Attribute Type: string)</p>\n<p>// when using scripting to create/set an Attribute and its initial Value and/or change an Attribute's Value, quest uses/parses the Value as to determine what type of Attribute the Attribute is, for example, any Value in double quotes is a String Value (and thus the Attribute will be a String Attribute).</p>\n<pre><code>// high to low:\n\nif (test.score &gt; 89) {\n  test.grade = \"A\"\n} else if (test.score &gt; 79) {\n  test.grade = \"B\"\n} else if (test.score &gt; 69) {\n  test.grade = \"C\"\n} else if (test.score &gt; 59) {\n  test.grade = \"D\"\n} else {\n  test.grade = \"F\"\n}\n\n// low to high:\n\nif (test.score &lt; 60) {\n  test.grade = \"F\"\n} else if (test.score &lt; 70) {\n  test.grade = \"D\"\n} else if (test.score &lt; 80) {\n  test.grade = \"C\"\n} else if (test.score &lt; 90) {\n  test.grade = \"B\"\n} else {\n  test.grade = \"A\"\n}\n</code></pre>\n<hr>\n<p>with the logic you had:</p>\n<pre><code>// showing you the fixed up syntax you needed for them:\n\nif (player.purity &lt;= 90) { // you probably need your '=' and '&lt;' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  set (player, \"plevel\", \"A\")\n}\nelse if (player.purity &lt;= 70) { // you probably need your '=' and '&lt;' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  set (player, \"plevel\", \"B\")\n}\nelse if (player.purity &lt;= 50) { // you probably need your '=' and '&lt;' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  set (player, \"plevel\", \"C\") // you forgot the double quotes on your 'C' Value to make it be a String Value\n}\nelse if (player.purity &lt;= 20) { // you probably need your '=' and '&lt;' next to each other (as you had a space between them), also the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  set (player, \"plevel\", \"D\") // you forgot the double quotes on your 'D' Value to make it be a String Value\n}\nelse {\n  set (player, \"plevel\", \"E\") // you forgot the double quotes on your 'E' Value to make it be a String Value\n}\n\nor\n\nif (player.purity &lt;= 90) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  player.plevel = \"A\"\n}\nelse if (player.purity &lt;= 70) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  player.plevel = \"B\"\n}\nelse if (player.purity &lt;= 50) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  player.plevel = \"C\"\n}\nelse if (player.purity &lt;= 20) { // the '=' has to be on the right side and the 'greater/lesser than' on the left side: &lt;= (NO error) vs: =&lt; (ERROR!)\n  player.plevel = \"D\"\n}\nelse {\n  player.plevel = \"E\"\n}\n</code></pre>\n<p>here's the logic steps going on:</p>\n<p>if (player.purity &lt;= 90) // if 90 or less, do the nested script below, or otherwise (your Value is OVER 90) goto/jump-to the first 'else if' below<br>\n-&gt; // blah scripting<br>\nelse if (player.purity &lt;= 70) // if 70 or less, do the nested script below... HOWEVER your value is (ALWAYS) OVER 90 (see above), so you'll NEVER do the nested script below, and so you goto/jump-to the next 'else if'... and have the exact same problem/issue... this continues for all of your 'else ifs' as your Value is OVER 90 and they're checking for if your Value is (decreasingly) under 90 (70, 50, 20).<br>\nHOWEVER, you will get to the 'else' which will do it's nested script, as it doesn't check your Value.</p>\n\n",
      "PostDate": "2017-06-25T15:01:03.2050602Z",
      "LastEditDate": "2017-06-25T15:09:05.7343724Z",
      "link": null
    },
    {
      "PostId": "fc9caee0-35dc-4ed2-829e-39cc9422ae1b",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, right. It was me messing up the comparisons, as well as using < when I should have had >. Correct format for anyone wanting to do 'levels' based on meter, make this into a turn script with an integer attribute for your meter and a string attribute for your level.\r\n\r\n```\r\nif (player.purity => 90) {\r\n  player.plevel = \"A\"\r\n}\r\nelse if (player.purity => 70) {\r\n  player.plevel = \"B\"\r\n}\r\nelse if (player.purity => 50) {\r\n  player.plevel = \"C\"\r\n}\r\nelse if (player.purity => 20) {\r\n  player.plevel = \"D\"\r\n}\r\nelse {\r\n  player.plevel = \"E\"\r\n}\r\n```\r\n\r\nThis seems to be working with {player.plevel} returning the desired character in a test command. Thanks for all the help!",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, right. It was me messing up the comparisons, as well as using &lt; when I should have had &gt;. Correct format for anyone wanting to do 'levels' based on meter, make this into a turn script with an integer attribute for your meter and a string attribute for your level.</p>\n<pre><code>if (player.purity =&gt; 90) {\n  player.plevel = \"A\"\n}\nelse if (player.purity =&gt; 70) {\n  player.plevel = \"B\"\n}\nelse if (player.purity =&gt; 50) {\n  player.plevel = \"C\"\n}\nelse if (player.purity =&gt; 20) {\n  player.plevel = \"D\"\n}\nelse {\n  player.plevel = \"E\"\n}\n</code></pre>\n<p>This seems to be working with {player.plevel} returning the desired character in a test command. Thanks for all the help!</p>\n\n",
      "PostDate": "2017-06-25T15:08:56.2516432Z",
      "LastEditDate": "2017-06-25T15:12:20.1924442Z",
      "link": null
    },
    {
      "PostId": "398ccf62-8386-4501-94e7-d1cd7fed0886",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can use a Turnscript, but also there's the special 'changed' Script Attribute that can be used for this type of stuff too:\r\n\r\n(there's pros and cons to both Turnscripts and the special 'changed' Script Attributes)\r\n\r\n```\r\n// the special 'changed' script:\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n  <attr name=\"purity\" type=\"int\">-1</attr>\r\n  <attr name=\"plevel\" type=\"string\">unknown</attr>\r\n  <attr name=\"changedpurity\" type=\"script\">\r\n    <![CDATA[\r\n      // ----------------------------------------------------------------------\r\n      // this is just if you want to keep it's Value within 0 to 100:\r\n\r\n      if (player.purity > 100) {\r\n        player.purity = 100\r\n      }\r\n      else if player.purity < 0) {\r\n        player.purity = 0\r\n      }\r\n      // ------------------------------------------\r\n      if (player.purity >= 90) {\r\n        player.plevel = \"A\"\r\n      }\r\n      else if (player.purity >= 70) {\r\n        player.plevel = \"B\"\r\n      }\r\n      else if (player.purity >= 50) {\r\n        player.plevel = \"C\"\r\n      }\r\n      else if (player.purity >= 20) {\r\n        player.plevel = \"D\"\r\n      }\r\n      else {\r\n        player.plevel = \"E\"\r\n      }\r\n    ]]>\r\n  </attr>\r\n</object>\r\n\r\n<object name=\"room\">\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you can use a Turnscript, but also there's the special 'changed' Script Attribute that can be used for this type of stuff too:</p>\n<p>(there's pros and cons to both Turnscripts and the special 'changed' Script Attributes)</p>\n<pre><code>// the special 'changed' script:\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;attr name=\"purity\" type=\"int\"&gt;-1&lt;/attr&gt;\n  &lt;attr name=\"plevel\" type=\"string\"&gt;unknown&lt;/attr&gt;\n  &lt;attr name=\"changedpurity\" type=\"script\"&gt;\n    &lt;![CDATA[\n      // ----------------------------------------------------------------------\n      // this is just if you want to keep it's Value within 0 to 100:\n\n      if (player.purity &gt; 100) {\n        player.purity = 100\n      }\n      else if player.purity &lt; 0) {\n        player.purity = 0\n      }\n      // ------------------------------------------\n      if (player.purity &gt;= 90) {\n        player.plevel = \"A\"\n      }\n      else if (player.purity &gt;= 70) {\n        player.plevel = \"B\"\n      }\n      else if (player.purity &gt;= 50) {\n        player.plevel = \"C\"\n      }\n      else if (player.purity &gt;= 20) {\n        player.plevel = \"D\"\n      }\n      else {\n        player.plevel = \"E\"\n      }\n    ]]&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2017-06-25T15:17:26.3357615Z",
      "LastEditDate": "2017-06-25T15:21:37.0790335Z",
      "link": null
    }
  ]
}
