{
  "Topic": {
    "TopicId": "3185",
    "ForumId": "10",
    "Title": "Invoking inherited type scripts",
    "LastUpdated": "2012-09-03T13:09:26+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "21303",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you have an object that inherits from a subtype, is there a way to invoke a script in that inherited subtype?\n\nAn example might make it clearer:\n\nLet's say you have a base type with an attribute. That base type is used in a number of places. The base type has a &quot;changed&quot; attribute script with default behavior. Let's say that in one of your derived objects, you want to extend that behavior by adding your own &quot;changed&quot; script at the object level, processing some custom code there, and then invoking the inherited type behavior.\n\nIs there a way from the object to invoke the overridden attribute script contained in the type? \n\n(This is not critical. I can architect things other ways. But it's a standard pardigm/idion in object-oriented languages, and I was curious.<!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "If you have an object that inherits from a subtype, is there a way to invoke a script in that inherited subtype?<br/><br/>An example might make it clearer:<br/><br/>Let's say you have a base type with an attribute. That base type is used in a number of places. The base type has a &quot;changed&quot; attribute script with default behavior. Let's say that in one of your derived objects, you want to extend that behavior by adding your own &quot;changed&quot; script at the object level, processing some custom code there, and then invoking the inherited type behavior.<br/><br/>Is there a way from the object to invoke the overridden attribute script contained in the type? <br/><br/>(This is not critical. I can architect things other ways. But it's a standard pardigm/idion in object-oriented languages, and I was curious.<!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2012-09-02T20:54:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21304",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "This is on the list (albeit quite low priority at the moment) <!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/354\">http://quest.codeplex.com/workitem/354</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "This is on the list (albeit quite low priority at the moment) <!-- m --><a class=\"postlink\" href=\"http://quest.codeplex.com/workitem/354\">http://quest.codeplex.com/workitem/354</a><!-- m -->",
      "PostDate": "2012-09-03T10:57:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "21305",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Perfect! Thanks.",
      "EditableFormat": "bbcode",
      "HTML": "Perfect! Thanks.",
      "PostDate": "2012-09-03T13:09:26+01:00",
      "LastEditDate": null
    }
  ]
}
