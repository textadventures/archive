{
  "Topic": {
    "TopicId": "jgeiq-lhc0iuhiakntydoa",
    "ForumId": "10",
    "Title": "Player Cannot Equip Sentret Because Of Inherited Type",
    "LastUpdated": "2019-07-08T07:36:06.4384109Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "64957489-d723-4345-9e7b-46f254c9e1cb",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was working on my game, Pokemon Type Harley Johto And Sinnoh, and I had another problem. I can't equip certain Pokemon, even after editing the equip command. The game says there is an inherited type the object needs to be equipped. It probably has something to do with that. I'm using a modified version of the Pixie's Zombie Survival game. I keep getting this error.\r\n\r\njj\r\n\r\nThis is the code for my equip command.\r\n```\r\nif (not HasAttribute(object, \"damage\")) {\r\n  msg (\"That's not something you can equip.\")\r\n}\r\nelse if (not object.parent = player) {\r\n  msg (\"You are not carrying it.\")\r\n}\r\nelse if (object = player.equipped) {\r\n  msg (\"You already have.\")\r\n}\r\nelse {\r\n  if (HasAttribute (object, \"dead\")) {\r\n    if (not HasAttribute(object, \"damage\")) {\r\n      msg (\"That's not something you can equip.\")\r\n    }\r\n    else if (not object.parent = player) {\r\n      msg (\"You are not carrying it.\")\r\n    }\r\n    else if (object = player.equipped) {\r\n      msg (\"You already have.\")\r\n    }\r\n    else {\r\n      if (player.equipped = null) {\r\n        msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\r\n      }\r\n      else {\r\n        msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\r\n        list add (player.equipped.inventoryverbs, \"Equip\")\r\n        list remove (player.equipped.inventoryverbs, \"Unequip\")\r\n        player.equipped.alias = Replace(player.equipped.alias, \" (equipped)\", \"\")\r\n      }\r\n      player.equipped = object\r\n      list add (object.inventoryverbs, \"Unequip\")\r\n      list remove (object.inventoryverbs, \"Equip\")\r\n      object.alias = object.alias + \" (equipped)\"\r\n    }\r\n  }\r\n  else {\r\n    if (player.equipped = null) {\r\n      msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\r\n    }\r\n    else {\r\n      msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\r\n      list add (player.equipped.inventoryverbs, \"Equip\")\r\n      list remove (player.equipped.inventoryverbs, \"Unequip\")\r\n      player.equipped.alias = Replace(player.equipped.alias, \" (equipped)\", \"\")\r\n    }\r\n    player.equipped = object\r\n    list add (object.inventoryverbs, \"Unequip\")\r\n    list remove (object.inventoryverbs, \"Equip\")\r\n    object.alias = object.alias + \" (equipped)\"\r\n  }\r\n}\r\nWeaponUpdate\r\n```\r\n\r\nThis is the code for my SpawnSentret function.\r\n```\r\nplayer.current_room = player.parent\r\nplayer.old_room = player.current_room\r\nMoveObject (player, Battle Room)\r\nif (HasInt(game, \"crittercount\")) {\r\n  game.crittercount = game.crittercount + 1\r\n}\r\nelse {\r\n  game.crittercount = 1\r\n}\r\ncreate (\"crittercount\" + game.crittercount)\r\nobj = GetObject(\"crittercount\" + game.crittercount)\r\nobj.parent = room\r\nobj.displayverbs = Split(\"Look at;Attack;Direct Hit;Stat;Status\", \";\")\r\nobj.dead = false\r\nobj.hero = false\r\nobj.changedhitpoints => {\r\n  if (this.hitpoints < 1) {\r\n    this.dead = true\r\n    msg (\"It whited out!\")\r\n    player.exp = player.exp + 20\r\n    player.pokedollar = player.pokedollar + 5\r\n    roll2 = GetRandomInt(1,20)\r\n    pokeroll = player.catchrate + roll2\r\n    if (pokeroll > 16) {\r\n      if (player.team > 7) {\r\n        MoveObject (this, PC)\r\n        this.displayverbs = Split(\"Look at;Equip;Reload\", \";\")\r\n        msg (\"object.alias was moved to the PC.\")\r\n        obj.hero = true\r\n        player.parent = player.old_room\r\n      }\r\n      else {\r\n        this.displayverbs = Split(\"Look at;Equip;Reload\", \";\")\r\n        AddToInventory (this)\r\n        obj.hero = true\r\n        player.team = player.team + 1\r\n        player.parent = player.old_room\r\n      }\r\n    }\r\n    else {\r\n      RemoveObject (this)\r\n      player.parent = player.old_room\r\n    }\r\n  }\r\n}\r\nobj.element = \"Normal\"\r\nobj.alias = \"Sentret\"\r\nobj.listalias = CapFirst(obj.alias)\r\nobj.look = ProcessText(\"A \" + obj.alias + \". A normal type. A very cautious PokÃ©mon, it raises itself up using its tail to get a better view of its surroundings.\")\r\nobj.critdesc = \"A well-placed blow by #attacker# sends you reeling (#hits# hits).\"\r\nobj.attackdesc = \"#Attacker# hits you (#hits# hits).\"\r\nobj.missdesc = \"#Attacker# misses you.\"\r\nobj.hitpoints = 20\r\nobj.max = 20\r\nobj.damage = 3\r\nobj.maxdamage = 3\r\nobj.attack = 1\r\nobj.maxattack = 1\r\nobj.defence = 0\r\nobj.maxdefence = 0\r\nobj.armour = 0\r\nobj.maxarmour = 0\r\nobj.speed = 10\r\nobj.maxspeed = 10\r\nobj.contestpoints = 100\r\nobj.maxcontestpoints = 100\r\nobj.tough = 5\r\nobj.maxtough = 5\r\nobj.beauty = 6\r\nobj.maxbeauty = 6\r\nobj.cool = 4\r\nobj.maxcool = 4\r\nobj.smart = 2\r\nobj.maxsmart = 2\r\nobj.cute = 4\r\nobj.maxcute = 4\r\nobj.trainerpoke = false\r\nobj.faint = false\r\nobj.selectweapon => {\r\n  this.weapon = GetObject(PickOneString(\"Struggle;Quick Attack;Scratch\"))\r\n}\r\nobj.selectattack => {\r\n  this.weapon = GetObject(PickOneString(\"Struggle;Quick Attack;Scratch\"))\r\n}\r\nthis.firearmdamage = 4\r\nthis.firearmattack = 2\r\nthis.ammo = 20\r\nthis.ammomax = 20\r\n```\r\n\r\nThis is the link to my game.\r\nhttp://textadventures.co.uk/games/view/5jllte-m4e2e2whw4gf5jq/pokemon-type-harley-johto-and-sinnoh",
      "EditableFormat": "markdown",
      "HTML": "<p>I was working on my game, Pokemon Type Harley Johto And Sinnoh, and I had another problem. I can't equip certain Pokemon, even after editing the equip command. The game says there is an inherited type the object needs to be equipped. It probably has something to do with that. I'm using a modified version of the Pixie's Zombie Survival game. I keep getting this error.</p>\n<p>jj</p>\n<p>This is the code for my equip command.</p>\n<pre><code>if (not HasAttribute(object, \"damage\")) {\n  msg (\"That's not something you can equip.\")\n}\nelse if (not object.parent = player) {\n  msg (\"You are not carrying it.\")\n}\nelse if (object = player.equipped) {\n  msg (\"You already have.\")\n}\nelse {\n  if (HasAttribute (object, \"dead\")) {\n    if (not HasAttribute(object, \"damage\")) {\n      msg (\"That's not something you can equip.\")\n    }\n    else if (not object.parent = player) {\n      msg (\"You are not carrying it.\")\n    }\n    else if (object = player.equipped) {\n      msg (\"You already have.\")\n    }\n    else {\n      if (player.equipped = null) {\n        msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\n      }\n      else {\n        msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\n        list add (player.equipped.inventoryverbs, \"Equip\")\n        list remove (player.equipped.inventoryverbs, \"Unequip\")\n        player.equipped.alias = Replace(player.equipped.alias, \" (equipped)\", \"\")\n      }\n      player.equipped = object\n      list add (object.inventoryverbs, \"Unequip\")\n      list remove (object.inventoryverbs, \"Equip\")\n      object.alias = object.alias + \" (equipped)\"\n    }\n  }\n  else {\n    if (player.equipped = null) {\n      msg (\"You equip your \" + GetDisplayAlias(object) + \".\")\n    }\n    else {\n      msg (\"You put away your \" + GetDisplayAlias(player.equipped) + \" and equip your \" + GetDisplayAlias(object) + \".\")\n      list add (player.equipped.inventoryverbs, \"Equip\")\n      list remove (player.equipped.inventoryverbs, \"Unequip\")\n      player.equipped.alias = Replace(player.equipped.alias, \" (equipped)\", \"\")\n    }\n    player.equipped = object\n    list add (object.inventoryverbs, \"Unequip\")\n    list remove (object.inventoryverbs, \"Equip\")\n    object.alias = object.alias + \" (equipped)\"\n  }\n}\nWeaponUpdate\n</code></pre>\n<p>This is the code for my SpawnSentret function.</p>\n<pre><code>player.current_room = player.parent\nplayer.old_room = player.current_room\nMoveObject (player, Battle Room)\nif (HasInt(game, \"crittercount\")) {\n  game.crittercount = game.crittercount + 1\n}\nelse {\n  game.crittercount = 1\n}\ncreate (\"crittercount\" + game.crittercount)\nobj = GetObject(\"crittercount\" + game.crittercount)\nobj.parent = room\nobj.displayverbs = Split(\"Look at;Attack;Direct Hit;Stat;Status\", \";\")\nobj.dead = false\nobj.hero = false\nobj.changedhitpoints =&gt; {\n  if (this.hitpoints &lt; 1) {\n    this.dead = true\n    msg (\"It whited out!\")\n    player.exp = player.exp + 20\n    player.pokedollar = player.pokedollar + 5\n    roll2 = GetRandomInt(1,20)\n    pokeroll = player.catchrate + roll2\n    if (pokeroll &gt; 16) {\n      if (player.team &gt; 7) {\n        MoveObject (this, PC)\n        this.displayverbs = Split(\"Look at;Equip;Reload\", \";\")\n        msg (\"object.alias was moved to the PC.\")\n        obj.hero = true\n        player.parent = player.old_room\n      }\n      else {\n        this.displayverbs = Split(\"Look at;Equip;Reload\", \";\")\n        AddToInventory (this)\n        obj.hero = true\n        player.team = player.team + 1\n        player.parent = player.old_room\n      }\n    }\n    else {\n      RemoveObject (this)\n      player.parent = player.old_room\n    }\n  }\n}\nobj.element = \"Normal\"\nobj.alias = \"Sentret\"\nobj.listalias = CapFirst(obj.alias)\nobj.look = ProcessText(\"A \" + obj.alias + \". A normal type. A very cautious PokÃ©mon, it raises itself up using its tail to get a better view of its surroundings.\")\nobj.critdesc = \"A well-placed blow by #attacker# sends you reeling (#hits# hits).\"\nobj.attackdesc = \"#Attacker# hits you (#hits# hits).\"\nobj.missdesc = \"#Attacker# misses you.\"\nobj.hitpoints = 20\nobj.max = 20\nobj.damage = 3\nobj.maxdamage = 3\nobj.attack = 1\nobj.maxattack = 1\nobj.defence = 0\nobj.maxdefence = 0\nobj.armour = 0\nobj.maxarmour = 0\nobj.speed = 10\nobj.maxspeed = 10\nobj.contestpoints = 100\nobj.maxcontestpoints = 100\nobj.tough = 5\nobj.maxtough = 5\nobj.beauty = 6\nobj.maxbeauty = 6\nobj.cool = 4\nobj.maxcool = 4\nobj.smart = 2\nobj.maxsmart = 2\nobj.cute = 4\nobj.maxcute = 4\nobj.trainerpoke = false\nobj.faint = false\nobj.selectweapon =&gt; {\n  this.weapon = GetObject(PickOneString(\"Struggle;Quick Attack;Scratch\"))\n}\nobj.selectattack =&gt; {\n  this.weapon = GetObject(PickOneString(\"Struggle;Quick Attack;Scratch\"))\n}\nthis.firearmdamage = 4\nthis.firearmattack = 2\nthis.ammo = 20\nthis.ammomax = 20\n</code></pre>\n<p>This is the link to my game.<br>\nhttp://textadventures.co.uk/games/view/5jllte-m4e2e2whw4gf5jq/pokemon-type-harley-johto-and-sinnoh</p>\n\n",
      "PostDate": "2019-07-08T07:36:06.4384109Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5b7aa3e-68d2-45b4-995a-be2a426a283c",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, I can't play my game right now for some odd reason. I will get the error later.\r\nFrom memory, it said something like: Cannot modify list. Clone list first before modifying its contents.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, I can't play my game right now for some odd reason. I will get the error later.<br>\nFrom memory, it said something like: Cannot modify list. Clone list first before modifying its contents.</p>\n\n",
      "PostDate": "2019-07-08T07:42:16.7230053Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa375b4a-6bcf-4e89-b9ab-cda128b60016",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is actually in the docs, on this page, almost at the bottom:\r\nhttp://docs.textadventures.co.uk/quest/problems.html\r\n\r\nThe problem is that a list attribute is defined in the type, not the object itself. When you add or remove an item from the list, Quest objects because the change would affect every object of the type, which would probably be a bug.\r\n\r\nIf you add this to the end of your spawn script, it should solve it.\r\n```\r\nobject.inventoryverbs = Split(\"Look at;Drop;Wield\")\r\n```\r\nBy the way, I would guess the last four lines of the spawn script should say \"obj\" rather than \"this\". ",
      "EditableFormat": "markdown",
      "HTML": "<p>This is actually in the docs, on this page, almost at the bottom:<br>\nhttp://docs.textadventures.co.uk/quest/problems.html</p>\n<p>The problem is that a list attribute is defined in the type, not the object itself. When you add or remove an item from the list, Quest objects because the change would affect every object of the type, which would probably be a bug.</p>\n<p>If you add this to the end of your spawn script, it should solve it.</p>\n<pre><code>object.inventoryverbs = Split(\"Look at;Drop;Wield\")\n</code></pre>\n<p>By the way, I would guess the last four lines of the spawn script should say \"obj\" rather than \"this\".</p>\n\n",
      "PostDate": "2019-07-08T09:33:49.218487Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b89f2810-47d7-4964-bc48-b1b4cdc3b250",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "as Pixie already explained in his post and the link in it:\r\n\r\nthat's the one issue with using the: Object Types / Types\r\n\r\nthey're great, if you never alter/change their Attributes' Values\r\n\r\nunfortunately, adding/removing items/options/etc in a List Attribute, is altering/changing its Values (as the items/options/etc are its Values)\r\n\r\n-----------\r\n\r\nthe reason is that the 'Object Types / Types', are Inherited Attributes, and Inherited Attributes are locked/blocked/prevented from being changed/altered\r\n\r\n----------\r\n\r\nso, since you can't change/alter the Inherited Attributes within your Object Types / Types, what do you do?\r\n\r\nyou got to just create the same Attribute, which will over-ride/over-write the Inherited Attribute, and thus, since it is a normal Attribute, you can now change/alter its Values all you want, which generally makes the entire point of having Object Types / Types, a big waste, except in some niche cases\r\n\r\n---------\r\n\r\nObject Types / Types, have a very niche use\r\n\r\nusually, it's better just to create an Object and give it the Attributes you want, and then you can reference that Object, doing whatever you want with its Attributes, as usually you don't need every Object to have the same Attributes (and which can't be changed/altered as they're Inherited Attributes), but just a single Object with the needed Attributes, which you can just reference, for whatever use of it (the Object) and them (the Object's Attributes) that you need",
      "EditableFormat": "markdown",
      "HTML": "<p>as Pixie already explained in his post and the link in it:</p>\n<p>that's the one issue with using the: Object Types / Types</p>\n<p>they're great, if you never alter/change their Attributes' Values</p>\n<p>unfortunately, adding/removing items/options/etc in a List Attribute, is altering/changing its Values (as the items/options/etc are its Values)</p>\n<hr>\n<p>the reason is that the 'Object Types / Types', are Inherited Attributes, and Inherited Attributes are locked/blocked/prevented from being changed/altered</p>\n<hr>\n<p>so, since you can't change/alter the Inherited Attributes within your Object Types / Types, what do you do?</p>\n<p>you got to just create the same Attribute, which will over-ride/over-write the Inherited Attribute, and thus, since it is a normal Attribute, you can now change/alter its Values all you want, which generally makes the entire point of having Object Types / Types, a big waste, except in some niche cases</p>\n<hr>\n<p>Object Types / Types, have a very niche use</p>\n<p>usually, it's better just to create an Object and give it the Attributes you want, and then you can reference that Object, doing whatever you want with its Attributes, as usually you don't need every Object to have the same Attributes (and which can't be changed/altered as they're Inherited Attributes), but just a single Object with the needed Attributes, which you can just reference, for whatever use of it (the Object) and them (the Object's Attributes) that you need</p>\n\n",
      "PostDate": "2019-07-08T10:41:23.8627595Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b6428fe2-049f-4d46-991c-6864aba61b37",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie got the right answer, but I think the line of code should be:\r\n<pre><code style=\"color: green\">obj.inventoryverbs = Split(\"Look at;Drop;Equip\")</code></pre>\r\n\r\nI also notice that the last 4 lines of your spawn function have `this` instead of <code style=\"color: green\">obj</code>. This probably just displays an error message that you ignore, but it's always better to fix errors before they cause a problem, because when something goes wrong it will take a lot of time to find the problem.",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie got the right answer, but I think the line of code should be:</p>\n<pre><code style=\"color: green\">obj.inventoryverbs = Split(\"Look at;Drop;Equip\")</code></pre>\n<p>I also notice that the last 4 lines of your spawn function have <code>this</code> instead of <code style=\"color: green\">obj</code>. This probably just displays an error message that you ignore, but it's always better to fix errors before they cause a problem, because when something goes wrong it will take a lot of time to find the problem.</p>\n\n",
      "PostDate": "2019-07-08T11:08:39.5351772Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "125f60d3-257a-476d-ae50-c8d5e8b32865",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you everyone!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you everyone!</p>\n\n",
      "PostDate": "2019-07-10T09:06:26.5722681Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
