{
  "Topic": {
    "TopicId": "d14uzrdhfeuclz-qjsu8aa",
    "ForumId": "10",
    "Title": "Passing a string through a function call",
    "LastUpdated": "2020-07-06T23:33:08.2153296Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "439979c5-884a-4a0c-aa93-92c96c31c146",
      "UserId": 490497,
      "Username": "Hawkseye502",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, first post - I'm having some difficulty working with functions and a string I'd like to pass to it when calling it.\r\n\r\nThe function is \"delaymessage\" - I'd like for it to pass the message provided after a certain time. The problem is that I'm either thrown an error or nothing happens between using \"\" or not.\r\n\r\nDo I need to define the string.. globally somehow? Thanks!\r\n\r\n---Game chat---\r\nHello! Press any button to begin...\r\nDebug message - end of startup \"wait for key press\"\r\ndebug - delaymessage end of script\r\nYou are in a room.\r\nError running script: Error compiling expression 'string': Unknown object or variable 'string'\r\n---end of chat---\r\n\r\n```\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Flipfloppaddywalk\">\r\n    <gameid>0374d24c-1d6e-4d8e-84cf-2a43d6aaf7fb</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2020</firstpublished>\r\n    <start type=\"script\">\r\n      msg (\"Hello! Press any button to begin...\")\r\n      wait {\r\n        delaymessage (2, \"..before we get to that, what would you do for a klon-.. ah forget it.\")\r\n      }\r\n      msg (\"Debug message - end of startup \\\"wait for key press\\\"\")\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\">\r\n    SetTimeout (time) {\r\n      msg (string)\r\n    }\r\n    msg (\"debug - delaymessage end of script\")\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, first post - I'm having some difficulty working with functions and a string I'd like to pass to it when calling it.</p>\n<p>The function is \"delaymessage\" - I'd like for it to pass the message provided after a certain time. The problem is that I'm either thrown an error or nothing happens between using \"\" or not.</p>\n<p>Do I need to define the string.. globally somehow? Thanks!</p>\n<p>---Game chat---<br>\nHello! Press any button to begin...<br>\nDebug message - end of startup \"wait for key press\"<br>\ndebug - delaymessage end of script<br>\nYou are in a room.<br>\nError running script: Error compiling expression 'string': Unknown object or variable 'string'<br>\n---end of chat---</p>\n<pre><code>&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Flipfloppaddywalk\"&gt;\n    &lt;gameid&gt;0374d24c-1d6e-4d8e-84cf-2a43d6aaf7fb&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      msg (\"Hello! Press any button to begin...\")\n      wait {\n        delaymessage (2, \"..before we get to that, what would you do for a klon-.. ah forget it.\")\n      }\n      msg (\"Debug message - end of startup \\\"wait for key press\\\"\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;\n    SetTimeout (time) {\n      msg (string)\n    }\n    msg (\"debug - delaymessage end of script\")\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2020-07-06T23:33:08.2153296Z",
      "LastEditDate": "2020-07-06T23:35:20.3417592Z",
      "link": null
    },
    {
      "PostId": "d3982632-27f7-430c-80e6-93c0c0856a85",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You're not passing the string to `SetTimeout` - so it's not accessible inside that function.\r\n\r\nThere's another function, I believe it's SetTimeoutId, which allows you to give your timeout a name. This means that you can give it an attribute to pass the message into the timer.\r\n\r\nAlternatively, you could use the Javascript SetTimeout function, which doesn't have these scope issues.",
      "EditableFormat": "markdown",
      "HTML": "<p>You're not passing the string to <code>SetTimeout</code> - so it's not accessible inside that function.</p>\n<p>There's another function, I believe it's SetTimeoutId, which allows you to give your timeout a name. This means that you can give it an attribute to pass the message into the timer.</p>\n<p>Alternatively, you could use the Javascript SetTimeout function, which doesn't have these scope issues.</p>\n\n",
      "PostDate": "2020-07-07T07:45:54.3708812Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b9b45d71-c759-4d23-bef4-5764390dc67b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**Method 1 - timer with attribute**\r\n\r\n(it looks like `SetTimeoutID` uses `invoke` rather than `do`, which makes this harder than it needs to be - we have to create our own timer.)\r\n\r\nThis is basically a copy of the core function `SetTimeout`, changed to take a string instead of a script.\r\n```\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\">\r\n    timername = GetUniqueElementName(\"timeout\")\r\n    create timer (timername)\r\n    timer = GetTimer (timername)\r\n    timer.message = string\r\n    timer.interval = time\r\n    timer.script => {\r\n      msg (this.message)\r\n      destroy (this.name)\r\n    }\r\n    EnableTimer (timer)\r\n  </function>\r\n```\r\n\r\n**Method 2 - using a global attribute**\r\n\r\nThis is what I've seen a lot of people on these forums recommending when they use timers, and some libraries that people have shared use this method. This may be a **bad idea** because there is only one `game.delayedmessage` attribute, which acts like a global variable. This means that if you call your function again before the first message has appeared, it will display the second message when the first one should have appeared.\r\n\r\nYou can use this simple method if you're *absolutely sure* that you will never have two delayed messages on the same turn, and that the player will never enter a command that triggers another one before the last one has appeared.\r\n```\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\">\r\n    game.delayedmessage = string\r\n    SetTimeout (time) {\r\n      msg (game.delayedmessage)\r\n    }\r\n    msg (\"debug - delaymessage end of script\")\r\n  </function>\r\n```\r\n\r\n**Method 3 - Using Javascript**\r\n\r\nJavascript functions have closures and inherited scope (a function created inside another function can access all local variables from the outer function). So if you use javascript, it's a bit neater. This also makes the timing more accurate, and means that the delayed message appearing won't dismiss any verb menus that the player just clicked on.\r\n\r\nFirst you want to create the javascript function, using a bit of JS code:\r\n```\r\ndelaymessage = function (time, message) {\r\n  setTimeout (function () {\r\n    addTextAndScroll(message);\r\n  }, time);\r\n};\r\n```\r\n\r\nIf you're on the desktop editor, you can put this in a .js file and include it in your game (I'm not sure of the details, I use the web version). Or if you're on the web, you'd shrink it down to a single line and put it in your game's UI Initialisation script, like this:\r\n```\r\nJS.eval(\"delaymessage = function (t,m) {setTimeout(function() {addTextAndScroll(m);},t);};\")\r\n```\r\n\r\nThen you could do `JS.delaymessage (2000, \"..before we get to that, what would you do for a klon-.. ah forget it.\")` in Quest.\r\n(Note: I used 2000 because javascript timeouts are in milliseconds)\r\n\r\nHmmâ€¦ there might be a small problem with this. Because `msg` automatically adds formatting information to your text, and `addText` doesn't.\r\n\r\nSo, I think you'd want to use a Quest function that calls the JS one:\r\n```\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\">\r\n    JS.delayedmessage (time * 1000, \"<span style=\\\"\" + GetCurrentTextFormat() +\"\\\">\" + string + \"</span>\")\r\n    msg (\"debug - delaymessage end of script\")\r\n  </function>\r\n```\r\nI think that's probably the best solution.",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>Method 1 - timer with attribute</strong></p>\n<p>(it looks like <code>SetTimeoutID</code> uses <code>invoke</code> rather than <code>do</code>, which makes this harder than it needs to be - we have to create our own timer.)</p>\n<p>This is basically a copy of the core function <code>SetTimeout</code>, changed to take a string instead of a script.</p>\n<pre><code>  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;\n    timername = GetUniqueElementName(\"timeout\")\n    create timer (timername)\n    timer = GetTimer (timername)\n    timer.message = string\n    timer.interval = time\n    timer.script =&gt; {\n      msg (this.message)\n      destroy (this.name)\n    }\n    EnableTimer (timer)\n  &lt;/function&gt;\n</code></pre>\n<p><strong>Method 2 - using a global attribute</strong></p>\n<p>This is what I've seen a lot of people on these forums recommending when they use timers, and some libraries that people have shared use this method. This may be a <strong>bad idea</strong> because there is only one <code>game.delayedmessage</code> attribute, which acts like a global variable. This means that if you call your function again before the first message has appeared, it will display the second message when the first one should have appeared.</p>\n<p>You can use this simple method if you're <em>absolutely sure</em> that you will never have two delayed messages on the same turn, and that the player will never enter a command that triggers another one before the last one has appeared.</p>\n<pre><code>  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;\n    game.delayedmessage = string\n    SetTimeout (time) {\n      msg (game.delayedmessage)\n    }\n    msg (\"debug - delaymessage end of script\")\n  &lt;/function&gt;\n</code></pre>\n<p><strong>Method 3 - Using Javascript</strong></p>\n<p>Javascript functions have closures and inherited scope (a function created inside another function can access all local variables from the outer function). So if you use javascript, it's a bit neater. This also makes the timing more accurate, and means that the delayed message appearing won't dismiss any verb menus that the player just clicked on.</p>\n<p>First you want to create the javascript function, using a bit of JS code:</p>\n<pre><code>delaymessage = function (time, message) {\n  setTimeout (function () {\n    addTextAndScroll(message);\n  }, time);\n};\n</code></pre>\n<p>If you're on the desktop editor, you can put this in a .js file and include it in your game (I'm not sure of the details, I use the web version). Or if you're on the web, you'd shrink it down to a single line and put it in your game's UI Initialisation script, like this:</p>\n<pre><code>JS.eval(\"delaymessage = function (t,m) {setTimeout(function() {addTextAndScroll(m);},t);};\")\n</code></pre>\n<p>Then you could do <code>JS.delaymessage (2000, \"..before we get to that, what would you do for a klon-.. ah forget it.\")</code> in Quest.<br>\n(Note: I used 2000 because javascript timeouts are in milliseconds)</p>\n<p>Hmmâ€¦ there might be a small problem with this. Because <code>msg</code> automatically adds formatting information to your text, and <code>addText</code> doesn't.</p>\n<p>So, I think you'd want to use a Quest function that calls the JS one:</p>\n<pre><code>  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;\n    JS.delayedmessage (time * 1000, \"&lt;span style=\\\"\" + GetCurrentTextFormat() +\"\\\"&gt;\" + string + \"&lt;/span&gt;\")\n    msg (\"debug - delaymessage end of script\")\n  &lt;/function&gt;\n</code></pre>\n<p>I think that's probably the best solution.</p>\n\n",
      "PostDate": "2020-07-07T11:26:55.4889936Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "44f29bba-3893-48b3-a2ac-60010cc590be",
      "UserId": 490497,
      "Username": "Hawkseye502",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This looks amazing, thank you for giving a thorough answer! \r\n\r\nStill having an issue. I used the quest \"javascript call\" function route, getting this error;\r\n```\r\nInvalid XML: '\\' is an unexpected token. The expected token is '\"' or '''. Line 27, position 51.\r\n```\r\n\r\n\r\n*** For those researching... how to include javascript on desktop version <3\r\n you can add javascript (.js files) or create your own by right clicking 'functions' in quest and selecting \"+ Javascript\" - it should work on any menu item afaik. Provide a name and open it in notepad. Edit. Save. Done. Jump out of script mode and back into it and it should be included at the bottom of the script.\r\n***\r\n\r\n\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Flipfloppaddywalk\">\r\n    <gameid>0374d24c-1d6e-4d8e-84cf-2a43d6aaf7fb</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2020</firstpublished>\r\n    <start type=\"script\">\r\n      msg (\"Hello! Press any button to begin...\")\r\n      wait {\r\n        delaymessage (2, \"..before we get to that, what would you do for a klon-.. ah forget it.\")\r\n      }\r\n      msg (\"Debug message - end of startup \\\"wait for key press\\\"\")\r\n    </start>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <javascript src=\"delayedmessage.js\" />\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\">\r\n    \tJS.delayedmessage (time * 1000, \"<span style=\\\"\" + GetCurrentTextFormat() +\"\\\">\" + string + \"</span>\")\r\n    \tmsg (\"debug - delaymessage end of script\")\r\n  </function>\r\n</asl>\r\n```\r\n\r\nAny theories on how to tackle this one? It looks to me like it should work.. thanks again!",
      "EditableFormat": "markdown",
      "HTML": "<p>This looks amazing, thank you for giving a thorough answer!</p>\n<p>Still having an issue. I used the quest \"javascript call\" function route, getting this error;</p>\n<pre><code>Invalid XML: '\\' is an unexpected token. The expected token is '\"' or '''. Line 27, position 51.\n</code></pre>\n<p>*** For those researching... how to include javascript on desktop version &lt;3<br>\nyou can add javascript (.js files) or create your own by right clicking 'functions' in quest and selecting \"+ Javascript\" - it should work on any menu item afaik. Provide a name and open it in notepad. Edit. Save. Done. Jump out of script mode and back into it and it should be included at the bottom of the script.</p>\n<hr>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Flipfloppaddywalk\"&gt;\n    &lt;gameid&gt;0374d24c-1d6e-4d8e-84cf-2a43d6aaf7fb&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n    &lt;start type=\"script\"&gt;\n      msg (\"Hello! Press any button to begin...\")\n      wait {\n        delaymessage (2, \"..before we get to that, what would you do for a klon-.. ah forget it.\")\n      }\n      msg (\"Debug message - end of startup \\\"wait for key press\\\"\")\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;javascript src=\"delayedmessage.js\" /&gt;\n  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;\n    \tJS.delayedmessage (time * 1000, \"&lt;span style=\\\"\" + GetCurrentTextFormat() +\"\\\"&gt;\" + string + \"&lt;/span&gt;\")\n    \tmsg (\"debug - delaymessage end of script\")\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>Any theories on how to tackle this one? It looks to me like it should work.. thanks again!</p>\n\n",
      "PostDate": "2020-07-08T02:01:33.6977445Z",
      "LastEditDate": "2020-07-08T02:04:34.7270171Z",
      "link": null
    },
    {
      "PostId": "de176c4c-ccdc-4ab1-9dc9-64947fa0a5ba",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry, my bad. I think that should be:\r\n```\r\n  <function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"><![CDATA[\r\n    JS.delayedmessage (time * 1000, \"<span style=\\\"\" + GetCurrentTextFormat() +\"\\\">\" + string + \"</span>\")\r\n    msg (\"debug - delaymessage end of script\")\r\n  ]]></function>\r\n```\r\n\r\nThe CDATA tags separate any `<` and `>` characters within the script, so they aren't parsed as part of Quest's XML structure.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry, my bad. I think that should be:</p>\n<pre><code>  &lt;function name=\"delaymessage\" parameters=\"time, string\" type=\"boolean\"&gt;&lt;![CDATA[\n    JS.delayedmessage (time * 1000, \"&lt;span style=\\\"\" + GetCurrentTextFormat() +\"\\\"&gt;\" + string + \"&lt;/span&gt;\")\n    msg (\"debug - delaymessage end of script\")\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>The CDATA tags separate any <code>&lt;</code> and <code>&gt;</code> characters within the script, so they aren't parsed as part of Quest's XML structure.</p>\n\n",
      "PostDate": "2020-07-08T06:28:43.9258659Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
