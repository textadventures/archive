{
  "Topic": {
    "TopicId": "e0zeu5_4c0ege_7jifuaqq",
    "ForumId": "10",
    "Title": "Does Quest ever try to implicitly (or silently) take something?",
    "LastUpdated": "2021-05-12T19:57:30.6731898Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3a40187e-2aad-4914-9a4d-fa5c83c3f53a",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm wondering if there are any commands which require an object to be held where Quest will try to take the object automatically before continuing the action.\r\n\r\nI can't find any code that looks like it does this, and I can't recall it ever happening. Just checking.\r\n\r\nI ***think*** Quest always tells you \"You're not holding that.\"  I don't think it ever tries to pick anything up for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm wondering if there are any commands which require an object to be held where Quest will try to take the object automatically before continuing the action.</p>\n<p>I can't find any code that looks like it does this, and I can't recall it ever happening. Just checking.</p>\n<p>I <strong><em>think</em></strong> Quest always tells you \"You're not holding that.\"  I don't think it ever tries to pick anything up for you.</p>\n\n",
      "PostDate": "2021-05-12T19:57:30.6731898Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ddbc3fa5-fa3b-4e63-ab57-e91229e417ee",
      "UserId": 532723,
      "Username": "Bumper2016",
      "AvatarUrl": "https://i.imgur.com/8oXZvP0b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think that happens,. There are some codes you can create where within another action an object is added to your inventory without picking it up. Other than that I doubt quest will auto add something to your inventory.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think that happens,. There are some codes you can create where within another action an object is added to your inventory without picking it up. Other than that I doubt quest will auto add something to your inventory.</p>\n\n",
      "PostDate": "2021-06-15T14:00:41.1092635Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ae5a24ef-c425-48a3-8db7-abf646c27791",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\n> I doubt quest will auto add something to your inventory.\r\n\r\nYou are correct.\r\n\r\n...but sometimes (in old, awesome text adventures; as well as in games created with Inform, which does its best to behave just like those old, awesome text adventures) things are implicitly taken because they must be held to perform an action.\r\n\r\nThe only instance I've found in Quest is when you are holding a container (or surface) and the object is in (or on) said container (or surface).\r\n\r\n...but Quest just considers that \"holding\" the object (which I can't argue against). Plus, Quest doesn't try to take it first; so, that also (sort of, technically) excludes the action.\r\n\r\n---\r\nA Z-machine game will try to implicitly take things you need to be holding before attempting to carry out the command.\r\n\r\nFor instance, **SHOW STEAK TO DRAGON**\r\n\r\nYou need to be holding something to show it to someone in a Z-machine game (for some reason), you see, and in Quest. . .\r\n\r\nWait.  Bad example. Quest's ```show``` command just confused me.\r\n\r\nQuest:\r\n\r\n```\r\n> show steak to dragon\r\nI can't see that. (steak to dragon)\r\n```\r\n\r\n---\r\nInform 7:\r\n\r\n```\r\n>show steak to dragon\r\n(first taking the steak)\r\nThe dragon is unimpressed.\r\n```\r\n\r\n---\r\nRestarting. . .\r\n\r\n---\r\n**PUT STEAK IN PIT**\r\n\r\nIn this scenario, there is a steak in the room, and there is also a pit (which is an open container).\r\n\r\nYou are not holding the steak.\r\n\r\nBy default, if using Inform to author the game, this will happen:\r\n\r\n```\r\nDragon's Lair\r\nYou can see a dragon, a steak and a Pit of Nowhere (empty) here.\r\n\r\n>put steak in pit\r\n(first taking the steak)\r\nYou put the steak into the Pit of Nowhere.\r\n\r\n```\r\n\r\n---\r\nIn Quest:\r\n\r\n```\r\nYou are in a Dragon's Lair.\r\nYou can see a dragon, a steak and a Pit of Nowhere.\r\n\r\n> put steak in pit\r\nYou are not carrying it.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<blockquote>\n<p>I doubt quest will auto add something to your inventory.</p>\n</blockquote>\n<p>You are correct.</p>\n<p>...but sometimes (in old, awesome text adventures; as well as in games created with Inform, which does its best to behave just like those old, awesome text adventures) things are implicitly taken because they must be held to perform an action.</p>\n<p>The only instance I've found in Quest is when you are holding a container (or surface) and the object is in (or on) said container (or surface).</p>\n<p>...but Quest just considers that \"holding\" the object (which I can't argue against). Plus, Quest doesn't try to take it first; so, that also (sort of, technically) excludes the action.</p>\n<hr>\n<p>A Z-machine game will try to implicitly take things you need to be holding before attempting to carry out the command.</p>\n<p>For instance, <strong>SHOW STEAK TO DRAGON</strong></p>\n<p>You need to be holding something to show it to someone in a Z-machine game (for some reason), you see, and in Quest. . .</p>\n<p>Wait.  Bad example. Quest's <code>show</code> command just confused me.</p>\n<p>Quest:</p>\n<pre><code>&gt; show steak to dragon\nI can't see that. (steak to dragon)\n</code></pre>\n<hr>\n<p>Inform 7:</p>\n<pre><code>&gt;show steak to dragon\n(first taking the steak)\nThe dragon is unimpressed.\n</code></pre>\n<hr>\n<p>Restarting. . .</p>\n<hr>\n<p><strong>PUT STEAK IN PIT</strong></p>\n<p>In this scenario, there is a steak in the room, and there is also a pit (which is an open container).</p>\n<p>You are not holding the steak.</p>\n<p>By default, if using Inform to author the game, this will happen:</p>\n<pre><code>Dragon's Lair\nYou can see a dragon, a steak and a Pit of Nowhere (empty) here.\n\n&gt;put steak in pit\n(first taking the steak)\nYou put the steak into the Pit of Nowhere.\n\n</code></pre>\n<hr>\n<p>In Quest:</p>\n<pre><code>You are in a Dragon's Lair.\nYou can see a dragon, a steak and a Pit of Nowhere.\n\n&gt; put steak in pit\nYou are not carrying it.\n</code></pre>\n\n",
      "PostDate": "2021-06-15T15:53:56.3163845Z",
      "LastEditDate": "2021-06-15T16:11:52.52804Z",
      "link": null
    },
    {
      "PostId": "24ecfba2-bef4-4864-93f3-90a12210032a",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let's do that again, but this time the player is holding a plate and the steak is on the plate.\r\n\r\nInform 7:\r\n\r\n```\r\nDragon's Lair\r\nYou can see a dragon and a Pit of Nowhere (empty) here.\r\n\r\n>i\r\nYou are carrying:\r\n  a plate\r\n    a steak\r\n\r\n>put steak in pit\r\n(first taking the steak)\r\nYou put the steak into the Pit of Nowhere.\r\n\r\n>\r\n```\r\n\r\n---\r\nQuest\r\n\r\n```\r\nYou are in a Dragon's Lair.\r\nYou can see a dragon and a Pit of Nowhere.\r\n\r\n> i\r\nYou are carrying a plate (on which there is a steak).\r\n\r\n> put steak in pit\r\nDone.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Let's do that again, but this time the player is holding a plate and the steak is on the plate.</p>\n<p>Inform 7:</p>\n<pre><code>Dragon's Lair\nYou can see a dragon and a Pit of Nowhere (empty) here.\n\n&gt;i\nYou are carrying:\n  a plate\n    a steak\n\n&gt;put steak in pit\n(first taking the steak)\nYou put the steak into the Pit of Nowhere.\n\n&gt;\n</code></pre>\n<hr>\n<p>Quest</p>\n<pre><code>You are in a Dragon's Lair.\nYou can see a dragon and a Pit of Nowhere.\n\n&gt; i\nYou are carrying a plate (on which there is a steak).\n\n&gt; put steak in pit\nDone.\n</code></pre>\n\n",
      "PostDate": "2021-06-15T16:12:47.7401622Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2902c6ee-40c4-4f0d-9569-d8129a9078ca",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One more time, except this time the steak's ```take``` response is set to say ```\"It's too hot to handle!\"``` rather than allowing it to be taken. (This might not make sense to you, having not played the game up until this scene, but, well, I'll tell you: the steak was cooked to perfection just before this scene. Therefore, it is too hot to handle.)\r\n\r\nInform 7\r\n\r\n```\r\nDragon's Lair\r\nYou can see a dragon and a Pit of Nowhere (empty) here.\r\n\r\n>i\r\nYou are carrying:\r\n  a plate\r\n    a steak\r\n\r\n>put steak in pit\r\n(first taking the steak)\r\nIt's too hot to handle!\r\n\r\n>\r\n```\r\n\r\n---\r\nQuest\r\n\r\n```\r\nYou are in a Dragon's Lair.\r\nYou can see a dragon and a Pit of Nowhere.\r\n\r\n> put steak in pit\r\nDone.\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>One more time, except this time the steak's <code>take</code> response is set to say <code>\"It's too hot to handle!\"</code> rather than allowing it to be taken. (This might not make sense to you, having not played the game up until this scene, but, well, I'll tell you: the steak was cooked to perfection just before this scene. Therefore, it is too hot to handle.)</p>\n<p>Inform 7</p>\n<pre><code>Dragon's Lair\nYou can see a dragon and a Pit of Nowhere (empty) here.\n\n&gt;i\nYou are carrying:\n  a plate\n    a steak\n\n&gt;put steak in pit\n(first taking the steak)\nIt's too hot to handle!\n\n&gt;\n</code></pre>\n<hr>\n<p>Quest</p>\n<pre><code>You are in a Dragon's Lair.\nYou can see a dragon and a Pit of Nowhere.\n\n&gt; put steak in pit\nDone.\n</code></pre>\n\n",
      "PostDate": "2021-06-15T16:13:11.2186616Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "928e0d73-2da9-4cac-b015-a21e2ba995d1",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "But what happens if you try to take the steak yourself first, you ask?\r\n\r\nInform 7:\r\n\r\n```\r\nDragon's Lair\r\nYou can see a dragon and a Pit of Nowhere (empty) here.\r\n\r\n>i\r\nYou are carrying:\r\n  a plate\r\n    a steak\r\n\r\n>take steak\r\nIt's too hot to handle!\r\n\r\n>put steak in pit\r\n(first taking the steak)\r\nIt's too hot to handle!\r\n\r\n>\r\n```\r\n\r\n---\r\nQuest:\r\n\r\n```\r\nYou are in a Dragon's Lair.\r\nYou can see a dragon and a Pit of Nowhere.\r\n\r\n> i\r\nYou are carrying a plate (on which there is a steak).\r\n\r\n> take steak\r\nIt's too hot to handle!\r\n\r\n> put steak in pit\r\nDone.\r\n```\r\n\r\n---\r\nSo, I guess Quest sort of *does* implicitly take that steak, but Quest is not aware that it is doing it.\r\n\r\n---\r\nWhat if we try to drop the steak?\r\n\r\nInform 7:\r\n\r\n```\r\nDragon's Lair\r\nYou can see a dragon and a Pit of Nowhere (empty) here.\r\n\r\n>i\r\nYou are carrying:\r\n  a plate\r\n    a steak\r\n\r\n>drop steak\r\nYou haven't got that.\r\n```\r\n\r\n---\r\nQuest\r\n\r\n```\r\nYou are in a Dragon's Lair.\r\nYou can see a dragon and a Pit of Nowhere.\r\n\r\n> i\r\nYou are carrying a plate (on which there is a steak).\r\n\r\n> drop steak\r\nYou drop it.\r\n```\r\n\r\n---\r\nI think Inform handles it better up until that last command, and I don't think Quest or Inform handle dropping the steak which is on the plate the player is holding correctly.\r\n\r\nInform just sees that it isn't directly held and says you don't have it.\r\n\r\nQuest doesn't try to take it from the container/surface before trying to drop it. (I'm assuming Quest is not turning the plate upside down to drop it. If so, how does Quest know it isn't a slice of Ooey-Gooey Caramel Pie (which is pretty much stuck to the plate)?)\r\n\r\n---\r\nAnyway, I was only asking because I am porting an old game to Quest, and the old game has an object attribute which is checked whenever trying to implicitly take something. I couldn't think of a time Quest ever \"tried taking something first\", but I thought it wise to check before deciding the attribute would never be used in Quest.\r\n\r\nI'd honestly forgotten about this until your post, but now I realize there are bugs in my port. dum-Dum-DUM!!!\r\n\r\nQuick, somebody call the Verminator!\r\n\r\nOn second thought, just call Kelly Bundy!\r\n\r\nWait. . .\r\n\r\nYou know what? If someone could just call Christina Applegate for me, that would be great; mm-kay? Tell her I am her age, and I've always admired her for her mind and her looks.\r\n\r\n---\r\nSorry; I get totally distracted whenever I think about Christina Applegate. . .\r\n\r\nI do very much appreciate your response, Bumper2016!\r\n\r\nYour answer is correct. I'm just a crazy guy doing crazy things, and I completely failed to explain what I meant in my initial post, if you can dig that. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>But what happens if you try to take the steak yourself first, you ask?</p>\n<p>Inform 7:</p>\n<pre><code>Dragon's Lair\nYou can see a dragon and a Pit of Nowhere (empty) here.\n\n&gt;i\nYou are carrying:\n  a plate\n    a steak\n\n&gt;take steak\nIt's too hot to handle!\n\n&gt;put steak in pit\n(first taking the steak)\nIt's too hot to handle!\n\n&gt;\n</code></pre>\n<hr>\n<p>Quest:</p>\n<pre><code>You are in a Dragon's Lair.\nYou can see a dragon and a Pit of Nowhere.\n\n&gt; i\nYou are carrying a plate (on which there is a steak).\n\n&gt; take steak\nIt's too hot to handle!\n\n&gt; put steak in pit\nDone.\n</code></pre>\n<hr>\n<p>So, I guess Quest sort of <em>does</em> implicitly take that steak, but Quest is not aware that it is doing it.</p>\n<hr>\n<p>What if we try to drop the steak?</p>\n<p>Inform 7:</p>\n<pre><code>Dragon's Lair\nYou can see a dragon and a Pit of Nowhere (empty) here.\n\n&gt;i\nYou are carrying:\n  a plate\n    a steak\n\n&gt;drop steak\nYou haven't got that.\n</code></pre>\n<hr>\n<p>Quest</p>\n<pre><code>You are in a Dragon's Lair.\nYou can see a dragon and a Pit of Nowhere.\n\n&gt; i\nYou are carrying a plate (on which there is a steak).\n\n&gt; drop steak\nYou drop it.\n</code></pre>\n<hr>\n<p>I think Inform handles it better up until that last command, and I don't think Quest or Inform handle dropping the steak which is on the plate the player is holding correctly.</p>\n<p>Inform just sees that it isn't directly held and says you don't have it.</p>\n<p>Quest doesn't try to take it from the container/surface before trying to drop it. (I'm assuming Quest is not turning the plate upside down to drop it. If so, how does Quest know it isn't a slice of Ooey-Gooey Caramel Pie (which is pretty much stuck to the plate)?)</p>\n<hr>\n<p>Anyway, I was only asking because I am porting an old game to Quest, and the old game has an object attribute which is checked whenever trying to implicitly take something. I couldn't think of a time Quest ever \"tried taking something first\", but I thought it wise to check before deciding the attribute would never be used in Quest.</p>\n<p>I'd honestly forgotten about this until your post, but now I realize there are bugs in my port. dum-Dum-DUM!!!</p>\n<p>Quick, somebody call the Verminator!</p>\n<p>On second thought, just call Kelly Bundy!</p>\n<p>Wait. . .</p>\n<p>You know what? If someone could just call Christina Applegate for me, that would be great; mm-kay? Tell her I am her age, and I've always admired her for her mind and her looks.</p>\n<hr>\n<p>Sorry; I get totally distracted whenever I think about Christina Applegate. . .</p>\n<p>I do very much appreciate your response, Bumper2016!</p>\n<p>Your answer is correct. I'm just a crazy guy doing crazy things, and I completely failed to explain what I meant in my initial post, if you can dig that. :)</p>\n\n",
      "PostDate": "2021-06-15T16:13:55.1799325Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8186cb02-6376-4acd-82c2-f0841f95e204",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmm…\r\n\r\n(edited; silly mistake)\r\n```\r\n  <function name=\"AddToResolvedNames\" parameters=\"var, result\">\r\n    scope = Split (GetScoping(game.pov.currentcommandpattern.scope, variable))\r\n    success = false\r\n    if (TypeOf(result) = \"object\") {\r\n      if (result.type = \"object\") {\r\n        if (ListContains (scope, \"inventory\") and not Contains (game.pov, result)) {\r\n          msg (\"(first taking the {object:\" + result.name + \"})\")\r\n          DoTake (result, false)\r\n          success = Contains (game.pov, result)\r\n        }\r\n        else {\r\n          success = true\r\n        }\r\n        list add (game.pov.currentcommandresolvedobjects, result)\r\n      }\r\n    }\r\n    else if (TypeOf(result) = \"objectlist\") {\r\n      if (ListContains (scope, \"inventory\")) {\r\n        needs_to_take = NewObjectList()\r\n        foreach (obj, result) {\r\n          if (not Contains (game.pov, obj)) {\r\n            list add (needs_to_take, obj)\r\n          }\r\n          else {\r\n            success = true\r\n          }\r\n        }\r\n        if (ListCount (needs_to_take) > 0) {\r\n          msg (\"(First taking the \" + FormatList (needs_to_take, \", \", \" and \", \"\") + \")\")\r\n          multiple = ListCount (needs_to_take) > 1\r\n          location = game.pov.parent\r\n          foreach (obj, needs_to_take) {\r\n            DoTake (obj, multiple)\r\n            if (Contains (game.pov, obj)) {\r\n              success = true\r\n            }\r\n            else {\r\n              list remove (result, obj)\r\n            }\r\n          }\r\n          if (not location = game.pov.parent) {\r\n            // If taking an object made us teleport, cancel the command\r\n            // Is there a way to check for game over too?\r\n            success = false\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        success = true\r\n      }\r\n      foreach (obj, result) {\r\n        if (obj.type = \"object\") {\r\n          list add (game.pov.currentcommandresolvedobjects, obj)\r\n        }\r\n      }\r\n    }\r\n    dictionary add(game.pov.currentcommandresolvedelements, var, result)\r\n\r\n    // If we tried and failed to automatically pick up objects, abort the command\r\n    // So that we don't get both \"It's too heavy\" and \"I'm not holding it\" errors\r\n    //    (if the player specified a list of objects, we carry on with any that actually succeeded)\r\n    if (success) {\r\n      ResolveNextName\r\n    }\r\n    else {\r\n      FinishTurn\r\n      HandleNextCommandQueueItem()\r\n    }\r\n  </function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmm…</p>\n<p>(edited; silly mistake)</p>\n<pre><code>  &lt;function name=\"AddToResolvedNames\" parameters=\"var, result\"&gt;\n    scope = Split (GetScoping(game.pov.currentcommandpattern.scope, variable))\n    success = false\n    if (TypeOf(result) = \"object\") {\n      if (result.type = \"object\") {\n        if (ListContains (scope, \"inventory\") and not Contains (game.pov, result)) {\n          msg (\"(first taking the {object:\" + result.name + \"})\")\n          DoTake (result, false)\n          success = Contains (game.pov, result)\n        }\n        else {\n          success = true\n        }\n        list add (game.pov.currentcommandresolvedobjects, result)\n      }\n    }\n    else if (TypeOf(result) = \"objectlist\") {\n      if (ListContains (scope, \"inventory\")) {\n        needs_to_take = NewObjectList()\n        foreach (obj, result) {\n          if (not Contains (game.pov, obj)) {\n            list add (needs_to_take, obj)\n          }\n          else {\n            success = true\n          }\n        }\n        if (ListCount (needs_to_take) &gt; 0) {\n          msg (\"(First taking the \" + FormatList (needs_to_take, \", \", \" and \", \"\") + \")\")\n          multiple = ListCount (needs_to_take) &gt; 1\n          location = game.pov.parent\n          foreach (obj, needs_to_take) {\n            DoTake (obj, multiple)\n            if (Contains (game.pov, obj)) {\n              success = true\n            }\n            else {\n              list remove (result, obj)\n            }\n          }\n          if (not location = game.pov.parent) {\n            // If taking an object made us teleport, cancel the command\n            // Is there a way to check for game over too?\n            success = false\n          }\n        }\n      }\n      else {\n        success = true\n      }\n      foreach (obj, result) {\n        if (obj.type = \"object\") {\n          list add (game.pov.currentcommandresolvedobjects, obj)\n        }\n      }\n    }\n    dictionary add(game.pov.currentcommandresolvedelements, var, result)\n\n    // If we tried and failed to automatically pick up objects, abort the command\n    // So that we don't get both \"It's too heavy\" and \"I'm not holding it\" errors\n    //    (if the player specified a list of objects, we carry on with any that actually succeeded)\n    if (success) {\n      ResolveNextName\n    }\n    else {\n      FinishTurn\n      HandleNextCommandQueueItem()\n    }\n  &lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2021-06-15T17:10:50.9227581Z",
      "LastEditDate": "2021-06-15T22:47:18.3279202Z",
      "link": null
    },
    {
      "PostId": "17174d99-1cc8-47b2-83ad-bcaa6895fcbd",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hehehe.\r\n\r\nAt first, I thought you were just copying and pasting the [existing code](https://github.com/textadventures/quest/blob/28b466b83125efdaf9bcdec1013b81e207cbfe09/WorldModel/WorldModel/Core/CoreParser.aslx#L359-L383). I was like, 'word?!?' Ha ha!\r\n\r\nI never would have thought about modifying ```AddToResolvedNames``` to handle this. I was too busy wondering how many functions would be involved, when I should have been wondering which function they all use.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hehehe.</p>\n<p>At first, I thought you were just copying and pasting the <a href=\"https://github.com/textadventures/quest/blob/28b466b83125efdaf9bcdec1013b81e207cbfe09/WorldModel/WorldModel/Core/CoreParser.aslx#L359-L383\">existing code</a>. I was like, 'word?!?' Ha ha!</p>\n<p>I never would have thought about modifying <code>AddToResolvedNames</code> to handle this. I was too busy wondering how many functions would be involved, when I should have been wondering which function they all use.</p>\n\n",
      "PostDate": "2021-06-15T17:27:26.636938Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6cbf28df-3d0d-46da-9e56-eba10d805149",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It was more complicated than I expected, because of the multiple commands. But I think this is probably the best place to handle it; after all the names have been parsed, but before the command is run.\r\n\r\nIt will come up with some oddness if picking up an object triggers a game over; but otherwise I think it's fairly good.",
      "EditableFormat": "markdown",
      "HTML": "<p>It was more complicated than I expected, because of the multiple commands. But I think this is probably the best place to handle it; after all the names have been parsed, but before the command is run.</p>\n<p>It will come up with some oddness if picking up an object triggers a game over; but otherwise I think it's fairly good.</p>\n\n",
      "PostDate": "2021-06-15T22:45:57.425104Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
