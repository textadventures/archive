{
  "Topic": {
    "TopicId": "sv6y0pbboki72tkfjy0j0a",
    "ForumId": "10",
    "Title": "How to wait the entire resolution of a function before continuing the caller ?",
    "LastUpdated": "2018-08-22T12:40:24.2084697Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "48586d3b-2c8a-4d99-b818-514a002dbc31",
      "UserId": 369970,
      "Username": "Selsynn",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a verb that called a function. The function awaits the answer of the player, but quest go and continue with the instruction after the function.\r\nWhat do I need to do await all is clear ?\r\n\r\nMy actual code (I suppress all that is not important for the loop)\r\nVerb\r\n```\r\ndeck.RedoPowerCards = NewObjectList()\r\nPassThroughAllCardsForTheirPower (GetDirectChildren(deck))\r\nwhile (ListCount(deck.RedoPowerCards) > 0 ) {\r\n  redoCards = deck.RedoPowerCards\r\n  deck.RedoPowerCards = NewObjectList ()\r\n  PassThroughAllCardsForTheirPower (redoCards)\r\n}\r\n```\r\n\r\nFunction PassThroughAllCardsForTheirPower \r\n```\r\nforeach (card, list) {\r\n  if (card.prototype=\"card\" ) {\r\n    player.card = card\r\n    ExecutePowerCard\r\n  }\r\n}\r\n```\r\n\r\nFunction ExecutePowerCard\r\n```\r\n  options = Split( \"Yes, now;Wait, not now;I don't want to use this power\", \";\")\r\n  ShowMenu (\"Do you want to run the power ?\", options, false) {\r\n    switch (CapFirst(result)){\r\n      case (\"Wait, not now\",\"Wait\") {\r\n        list add (deck.RedoPowerCards, player.card)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nProblem : the menu does not wait in the switch to have the answer before doing the end of the function, and so the end of the caller... So he never go in the while.\r\n\r\nQuestion: how to force quest to await the player result ?\r\nI understand that we can nest the code, but in this case, it's strange to nest as it is in function.\r\n\r\nThank you in advance!",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a verb that called a function. The function awaits the answer of the player, but quest go and continue with the instruction after the function.<br>\nWhat do I need to do await all is clear ?</p>\n<p>My actual code (I suppress all that is not important for the loop)<br>\nVerb</p>\n<pre><code>deck.RedoPowerCards = NewObjectList()\nPassThroughAllCardsForTheirPower (GetDirectChildren(deck))\nwhile (ListCount(deck.RedoPowerCards) &gt; 0 ) {\n  redoCards = deck.RedoPowerCards\n  deck.RedoPowerCards = NewObjectList ()\n  PassThroughAllCardsForTheirPower (redoCards)\n}\n</code></pre>\n<p>Function PassThroughAllCardsForTheirPower</p>\n<pre><code>foreach (card, list) {\n  if (card.prototype=\"card\" ) {\n    player.card = card\n    ExecutePowerCard\n  }\n}\n</code></pre>\n<p>Function ExecutePowerCard</p>\n<pre><code>  options = Split( \"Yes, now;Wait, not now;I don't want to use this power\", \";\")\n  ShowMenu (\"Do you want to run the power ?\", options, false) {\n    switch (CapFirst(result)){\n      case (\"Wait, not now\",\"Wait\") {\n        list add (deck.RedoPowerCards, player.card)\n      }\n    }\n  }\n</code></pre>\n<p>Problem : the menu does not wait in the switch to have the answer before doing the end of the function, and so the end of the caller... So he never go in the while.</p>\n<p>Question: how to force quest to await the player result ?<br>\nI understand that we can nest the code, but in this case, it's strange to nest as it is in function.</p>\n<p>Thank you in advance!</p>\n\n",
      "PostDate": "2018-08-22T12:40:24.2084697Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67b7ce4c-5eb2-4c59-9ef7-fc4d8abfad91",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The function finishes immediately.\r\n\r\nShowMenu does *not* wait for the player to enter a response. It displays a message to the player, and then makes a note of some code to run when the player responds. So ShowMenu has finished as soon as the menu is displayed, and the function containing it has also finished.\r\n\r\nIf you've got a loop which gives the player several menus, it might be more efficient to instead set it as a turnscript, which works out the next question the player needs to answer and displays a single menu.\r\n\r\nI've dealt with similar situations by giving the game object a \"pending_code\" attribute, a list of scripts and parameters. You can have a function which adds code to that list, and a turnscript which goes through the list removing items and executing them, until one of them displays a menu which requires user input.",
      "EditableFormat": "markdown",
      "HTML": "<p>The function finishes immediately.</p>\n<p>ShowMenu does <em>not</em> wait for the player to enter a response. It displays a message to the player, and then makes a note of some code to run when the player responds. So ShowMenu has finished as soon as the menu is displayed, and the function containing it has also finished.</p>\n<p>If you've got a loop which gives the player several menus, it might be more efficient to instead set it as a turnscript, which works out the next question the player needs to answer and displays a single menu.</p>\n<p>I've dealt with similar situations by giving the game object a \"pending_code\" attribute, a list of scripts and parameters. You can have a function which adds code to that list, and a turnscript which goes through the list removing items and executing them, until one of them displays a menu which requires user input.</p>\n\n",
      "PostDate": "2018-08-22T13:15:56.7827873Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "013bd2ec-f636-458a-804d-eb3abdec686c",
      "UserId": 369970,
      "Username": "Selsynn",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you.\r\nI'm redesigning this aspect of the game to get away from the problem. \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you.<br>\nI'm redesigning this aspect of the game to get away from the problem.</p>\n\n",
      "PostDate": "2018-08-22T20:35:59.1212747Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "518d8c78-c655-4574-a7b9-9a599d83d31b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n----------------------\r\n\r\nunfortunately, with/in quest, its 'while', 'for', and 'foreach' Scripts/Functions can NOT be stopped/breaked/paused (they do NOT wait for player input, and thus you get an ERROR, as the scripting is a lot faster than you can physically input, and thus two (or more) instances of getting inputs come up, which quest/computer can't handle, and hence the ERROR)\r\n\r\nso, you got to use a check (the 'if/switch/WHATEVER' Scripts/Functions) along with looping and/or recursion, (aka, calling the function within the function), if you're getting any input by the player, a simple example (using a Function):\r\n\r\n```\r\n<function name=\"loop_function\">\r\n  msg (\"loop? (y/n)\")\r\n  get input {\r\n    if (result = \"y\") {\r\n      loop_function\r\n    } else {\r\n      msg (\"You chose to quit the looping\")\r\n    }\r\n  }\r\n</function>\r\n```\r\n\r\n----------------------------------------\r\n\r\nif you want to have following scripts wait until the above scripts are done... you can try the 'on ready' (but ask mrangel, or pixie or pertex, to explain when/why/how/for-what it works and doesn't work, as it was a bit confusing for me with trying to understand mrangel's, or was it pertex' or pixie ??? - agh - getting old can't remember who it was who explained it to me, lol, attempt at explaining it to me, or jsut try it... if it works... it works... if it doesn't work... it doesn't work... lol):\r\n\r\nhttp://docs.textadventures.co.uk/quest/scripts/on_ready.html\r\n\r\n```\r\n// whatever scripting 1\r\non ready {\r\n  // scripting 2 that you want to wait before running/executing until the scripting 1 is done\r\n}\r\n```\r\n------------\r\n\r\nif all else (all of the above) fails....\r\n\r\nyou just got to get more creative with your scripting/code design.... unfortunately (or fortunately, lol)... quest requires you to be creative... some times... lol",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>unfortunately, with/in quest, its 'while', 'for', and 'foreach' Scripts/Functions can NOT be stopped/breaked/paused (they do NOT wait for player input, and thus you get an ERROR, as the scripting is a lot faster than you can physically input, and thus two (or more) instances of getting inputs come up, which quest/computer can't handle, and hence the ERROR)</p>\n<p>so, you got to use a check (the 'if/switch/WHATEVER' Scripts/Functions) along with looping and/or recursion, (aka, calling the function within the function), if you're getting any input by the player, a simple example (using a Function):</p>\n<pre><code>&lt;function name=\"loop_function\"&gt;\n  msg (\"loop? (y/n)\")\n  get input {\n    if (result = \"y\") {\n      loop_function\n    } else {\n      msg (\"You chose to quit the looping\")\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>if you want to have following scripts wait until the above scripts are done... you can try the 'on ready' (but ask mrangel, or pixie or pertex, to explain when/why/how/for-what it works and doesn't work, as it was a bit confusing for me with trying to understand mrangel's, or was it pertex' or pixie ??? - agh - getting old can't remember who it was who explained it to me, lol, attempt at explaining it to me, or jsut try it... if it works... it works... if it doesn't work... it doesn't work... lol):</p>\n<p>http://docs.textadventures.co.uk/quest/scripts/on_ready.html</p>\n<pre><code>// whatever scripting 1\non ready {\n  // scripting 2 that you want to wait before running/executing until the scripting 1 is done\n}\n</code></pre>\n<hr>\n<p>if all else (all of the above) fails....</p>\n<p>you just got to get more creative with your scripting/code design.... unfortunately (or fortunately, lol)... quest requires you to be creative... some times... lol</p>\n\n",
      "PostDate": "2018-08-23T03:27:48.1107626Z",
      "LastEditDate": "2018-08-23T03:42:09.8509693Z",
      "link": null
    }
  ]
}
