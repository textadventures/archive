{
  "Topic": {
    "TopicId": "uaoro-v23u6wmgxhweqxea",
    "ForumId": "10",
    "Title": "How to change a template while the game is running?",
    "LastUpdated": "2018-10-15T01:47:49.986473Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9b4092fd-3ea3-44a9-9b99-89e04622666d",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I'm running a game where most of it is in first person, but there is this one part that is a different character then the player so I want to be in the third person. I was given this library that does just that, but it makes the game third person from the start and I want it to change from first to third when the player object changes. I know I can do this by changing the templates like \"You are in\" to he is in\" and things like that. But is there away to alter the templates out side of a library while the game is running?",
      "EditableFormat": "markdown",
      "HTML": "<p>So I'm running a game where most of it is in first person, but there is this one part that is a different character then the player so I want to be in the third person. I was given this library that does just that, but it makes the game third person from the start and I want it to change from first to third when the player object changes. I know I can do this by changing the templates like \"You are in\" to he is in\" and things like that. But is there away to alter the templates out side of a library while the game is running?</p>\n\n",
      "PostDate": "2018-10-15T01:47:49.986473Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "383be130-57e4-4f14-8e6f-c5b8f1a49f88",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "game.pov = object\r\nThen you have to follow a bunch of other set variables stuff.",
      "EditableFormat": "markdown",
      "HTML": "<p>game.pov = object<br>\nThen you have to follow a bunch of other set variables stuff.</p>\n\n",
      "PostDate": "2018-10-15T04:06:47.9912637Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "10f245f8-00c6-41ec-aa92-eabcf9cb5800",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think you could change a template, but in this case it wouldn't help you anyway. Because the \"you are in\" prefix can be changed for each room; so it is set to the default YouAreIn template in the editor, when the room is created. So you don't want to change the template, you want to change a string attribute of every room object.\r\n\r\nWhen changing person, you could do something like:\r\n```\r\nforeach (room, AllRooms()) {\r\n  room.descprefix = Replace (room.descprefix, \"You are\", \"He is\")\r\n}\r\n```\r\n\r\nThen you'd have to change a lot of other things, such as the default response for verbs. You would have to change some templates, but the \"YouAreIn\" template isn't one of them.\r\n\r\nReally, it would be better to make the templates work so that they can display the right text either way.\r\n\r\nFor example, you could replace \"You are in\" with `{=CapFirst(WriteVerb(game.pov, \"be\")) in`. - which would be displayed as \"You are in\" or \"He is in\", depending whether the current player object's `gender` attribute is \"you\" or \"he\".\r\n\r\nYou can change all of the templates in the same way in the editor, using WriteVerb to make the text automatically adjust depending on the player object's gender.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think you could change a template, but in this case it wouldn't help you anyway. Because the \"you are in\" prefix can be changed for each room; so it is set to the default YouAreIn template in the editor, when the room is created. So you don't want to change the template, you want to change a string attribute of every room object.</p>\n<p>When changing person, you could do something like:</p>\n<pre><code>foreach (room, AllRooms()) {\n  room.descprefix = Replace (room.descprefix, \"You are\", \"He is\")\n}\n</code></pre>\n<p>Then you'd have to change a lot of other things, such as the default response for verbs. You would have to change some templates, but the \"YouAreIn\" template isn't one of them.</p>\n<p>Really, it would be better to make the templates work so that they can display the right text either way.</p>\n<p>For example, you could replace \"You are in\" with <code>{=CapFirst(WriteVerb(game.pov, \"be\")) in</code>. - which would be displayed as \"You are in\" or \"He is in\", depending whether the current player object's <code>gender</code> attribute is \"you\" or \"he\".</p>\n<p>You can change all of the templates in the same way in the editor, using WriteVerb to make the text automatically adjust depending on the player object's gender.</p>\n\n",
      "PostDate": "2018-10-15T08:12:07.2984798Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "63167788-e38e-4725-9ab6-c496bf6d31df",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel\r\nthat code for the prefixes worked great, do you have one for other ones like \"you can\"?",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel<br>\nthat code for the prefixes worked great, do you have one for other ones like \"you can\"?</p>\n\n",
      "PostDate": "2018-10-16T03:41:22.7506552Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1adf5971-ce99-4586-9033-9f83fff41cc5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For just about all the templates, you can use WriteVerb.\r\nA while back I searched for \"you\" in the English language file and changed all of them, I'll see if I can find that thread.\r\n\r\nI never got as far as testing this, but here's my attempt at changing all the templates:\r\n```\r\n\t<dynamictemplate name=\"UnresolvedLocation\">CapFirst(game.pov.gender) + \" can't go there.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"TakeSuccessful\">WriteVerb(game.pov, \"pick\") + \" \" + object.article + \" up.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"TakeUnsuccessful\">CapFirst(game.pov.gender) + \" can't take \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"MaxObjectsInInventory\">CapFirst(game.pov.gender) + \" can't carry any more items.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"MaxObjectsInContainer\">CapFirst(game.pov.gender) + \" can't put more items in \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"SeeListHeader\">CapFirst(game.pov.gender) + \" can see\"</dynamictemplate>\r\n\t<dynamictemplate name=\"GoListHeader\">CapFirst(game.pov) + \" can go\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NotCarryingAnything\">WriteVerb(game.pov, \"be\") + \" not carrying anything.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CarryingListHeader\">WriteVerb(game.pov, \"be\") + \" carrying\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DropSuccessful\">WriteVerb(game.pov, \"drop\") + \" \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DropUnsuccessful\">CapFirst(game.pov.gender) + \" can't drop \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"ObjectCannotBeStored\">CapFirst(game.pov.gender) + \" can't put \" + object.article + \" there.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"AlreadyTaken\">\"You are already carrying \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NotCarrying\">\"You are not carrying \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CantUse\">CapFirst(game.pov.gender) + \" can't use \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CantGive\">CapFirst(game.pov.gender) + \" can't give \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"YouAreIn\">WriteVerb(game.pov, \"be\") + \" in\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CantOpen\">CapFirst(game.pov.gender) + \" can't open \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CantClose\">CapFirst(game.pov.gender) + \" can't close \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"OpenSuccessful\">WriteVerb(game.pov, \"open\") + \" \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CloseSuccessful\">WriteVerb(game.pov, \"close\") + \" \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotDoThat\">CapFirst(game.pov.gender) + \" can't do that.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NoKey\">WriteVerb(game.pov, \"do\") + \" not have the key.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotLockOpen\">CapFirst(game.pov.gender) + \" cannot lock \" + object.article + \" when \" + object.gender + \" \" + Conjugate(object, \"be\") + \" open.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"SwitchedOn\">WriteVerb(game.pov, \"turn\") + \" \" + object.article + \" on.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"SwitchedOff\">WriteVerb(game.pov, \"turn\") + \" \" + object.article + \" off.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"Eaten\">WriteVerb(game.pov, \"eat\") + \" \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"YouLooking\">WriteVerb(game.pov, \"be\") + \" looking \" + text +\".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NothingToDrop\">WriteVerb(game.pov, \"have\") + \" nothing to drop.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NothingToWear\">WriteVerb(game.pov, \"have\") + \" nothing to wear.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NothingToRemove\">WriteVerb(game.pov, \"have\") + \" nothing to take off.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"WearSuccessful\">WriteVerb(game.pov, \"put\") + \" \" + object.article + \" on.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"WearUnsuccessful\">CapFirst(game.pov.gender) + \" can't wear \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotWearIfNotHeld\">CapFirst(game.pov.gender) + \" would need to get \" + object.article + \" before \" + game.pov.article + \" can put \" + object.article + \" on.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotRemoveIfNotHeld\">CapFirst(game.pov.gender) + \"would need to get \" + object.article + \" before \" + game.pov.article + \" can take \" + object.article + \" off.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"AlreadyWearing\">WriteVerb(game.pov, \"be\") + \" already wearing \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotRemoveIfNotWearing\">WriteVerb(game.pov, \"be\") + \" not wearing \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"NotRemovable\">CapFirst(game.pov.gender) + \" cannot remove \" + object.article + \"!\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotWearOver\">CapFirst(game.pov.gender) + \" cannot wear that over \" + GetDisplayGarment(object) + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"CannotWearWith\">CapFirst(game.pov.gender) + \" cannot wear that while wearing \" + GetDisplayGarment(object) + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"RemoveSuccessful\">WriteVerb(game.pov, \"take\") + \" \" + object.article + \" off.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"RemoveFirst\">CapFirst(game.pov.gender) + \" can't remove that while wearing \" + GetDisplayGarment(object) + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultBuy\">CapFirst(game.pov.gender) + \" can't buy \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultClimb\">CapFirst(game.pov.gender) + \" can't climb \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultDrink\">CapFirst(game.pov.gender) + \" can't drink \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultEat\">CapFirst(game.pov.gender) + \" can't eat \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultHit\">CapFirst(game.pov.gender) + \" can't hit \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultKill\">CapFirst(game.pov.gender) + \" can't kill \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultKiss\">CapFirst(game.pov.gender) + \" can't kiss \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultKnock\">CapFirst(game.pov.gender) + \" can't knock \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultLick\">CapFirst(game.pov.gender) + \" can't lick \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultLie\">CapFirst(game.pov.gender) + \" can't lie on \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultListenTo\">WriteVerb(game.pov, \"listen\") + \", but \" + object.gender + \" makes no sound.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultLock\">CapFirst(game.pov.gender) + \" can't lock \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultMove\">CapFirst(game.pov.gender) + \" can't move \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultPull\">CapFirst(game.pov.gender) + \" can't pull \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultPush\">CapFirst(game.pov.gender) + \" can't push \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultRead\">CapFirst(game.pov.gender) + \" can't read \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultSearch\">CapFirst(game.pov.gender) + \" can't search \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultShow\">CapFirst(game.pov.gender) + \" can't show \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultSit\">CapFirst(game.pov.gender) + \" can't sit on \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultSmell\">WriteVerb(game.pov, \"sniff\") + \", but \" + object.gender + \" doesn't smell of much.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTaste\">CapFirst(game.pov.gender) + \" can't taste \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultThrow\">CapFirst(game.pov.gender) + \" can't throw \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTie\">CapFirst(game.pov.gender) + \" can't tie \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTouch\">CapFirst(game.pov.gender) + \" can't touch \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTurnOn\">CapFirst(game.pov.gender) + \" can't turn \" + object.article + \" on.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTurnOff\">CapFirst(game.pov.gender) + \" can't turn \" + object.article + \" off.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultTurn\">CapFirst(game.pov.gender) + \" can't turn \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultUnlock\">CapFirst(game.pov.gender) + \" can't unlock \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultUntie\">CapFirst(game.pov.gender) + \" can't untie \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultUseOn\">CapFirst(game.pov.gender) + \" can't use \" + object2.article + \" that way.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultWear\">CapFirst(game.pov.gender) + \" can't wear \" + object.article + \".\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultListen\">CapFirst(game.pov.gender) + \" can't hear much.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"DefaultJump\">WriteVerb(game.pov, \"jump\") + \", but nothing happens.\"</dynamictemplate>\r\n\t<dynamictemplate name=\"EditorVerbDefaultExpression\">CapFirst(game.pov.gender) + \" can't #verb# \" + object.article + \".\"</dynamictemplate>\r\n```\r\n(Changing them all to dynamic templates was probably an inefficient way of doing it. I could have used the text processor instead. But I don't think there should be any problem with those)\r\n\r\nI was actually doing this originally because I wanted my game to use \"I\" for the player character, recreating the first computer game I played; but it should all work for \"you\" or \"he\" as well. With all these templates in, changing the player pronoun is as simple as changing the player object's `gender` attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>For just about all the templates, you can use WriteVerb.<br>\nA while back I searched for \"you\" in the English language file and changed all of them, I'll see if I can find that thread.</p>\n<p>I never got as far as testing this, but here's my attempt at changing all the templates:</p>\n<pre><code>\t&lt;dynamictemplate name=\"UnresolvedLocation\"&gt;CapFirst(game.pov.gender) + \" can't go there.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"TakeSuccessful\"&gt;WriteVerb(game.pov, \"pick\") + \" \" + object.article + \" up.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"TakeUnsuccessful\"&gt;CapFirst(game.pov.gender) + \" can't take \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"MaxObjectsInInventory\"&gt;CapFirst(game.pov.gender) + \" can't carry any more items.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"MaxObjectsInContainer\"&gt;CapFirst(game.pov.gender) + \" can't put more items in \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"SeeListHeader\"&gt;CapFirst(game.pov.gender) + \" can see\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"GoListHeader\"&gt;CapFirst(game.pov) + \" can go\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NotCarryingAnything\"&gt;WriteVerb(game.pov, \"be\") + \" not carrying anything.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CarryingListHeader\"&gt;WriteVerb(game.pov, \"be\") + \" carrying\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DropSuccessful\"&gt;WriteVerb(game.pov, \"drop\") + \" \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DropUnsuccessful\"&gt;CapFirst(game.pov.gender) + \" can't drop \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"ObjectCannotBeStored\"&gt;CapFirst(game.pov.gender) + \" can't put \" + object.article + \" there.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"AlreadyTaken\"&gt;\"You are already carrying \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NotCarrying\"&gt;\"You are not carrying \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CantUse\"&gt;CapFirst(game.pov.gender) + \" can't use \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CantGive\"&gt;CapFirst(game.pov.gender) + \" can't give \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"YouAreIn\"&gt;WriteVerb(game.pov, \"be\") + \" in\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CantOpen\"&gt;CapFirst(game.pov.gender) + \" can't open \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CantClose\"&gt;CapFirst(game.pov.gender) + \" can't close \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"OpenSuccessful\"&gt;WriteVerb(game.pov, \"open\") + \" \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CloseSuccessful\"&gt;WriteVerb(game.pov, \"close\") + \" \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotDoThat\"&gt;CapFirst(game.pov.gender) + \" can't do that.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NoKey\"&gt;WriteVerb(game.pov, \"do\") + \" not have the key.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotLockOpen\"&gt;CapFirst(game.pov.gender) + \" cannot lock \" + object.article + \" when \" + object.gender + \" \" + Conjugate(object, \"be\") + \" open.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"SwitchedOn\"&gt;WriteVerb(game.pov, \"turn\") + \" \" + object.article + \" on.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"SwitchedOff\"&gt;WriteVerb(game.pov, \"turn\") + \" \" + object.article + \" off.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"Eaten\"&gt;WriteVerb(game.pov, \"eat\") + \" \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"YouLooking\"&gt;WriteVerb(game.pov, \"be\") + \" looking \" + text +\".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NothingToDrop\"&gt;WriteVerb(game.pov, \"have\") + \" nothing to drop.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NothingToWear\"&gt;WriteVerb(game.pov, \"have\") + \" nothing to wear.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NothingToRemove\"&gt;WriteVerb(game.pov, \"have\") + \" nothing to take off.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"WearSuccessful\"&gt;WriteVerb(game.pov, \"put\") + \" \" + object.article + \" on.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"WearUnsuccessful\"&gt;CapFirst(game.pov.gender) + \" can't wear \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotWearIfNotHeld\"&gt;CapFirst(game.pov.gender) + \" would need to get \" + object.article + \" before \" + game.pov.article + \" can put \" + object.article + \" on.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotRemoveIfNotHeld\"&gt;CapFirst(game.pov.gender) + \"would need to get \" + object.article + \" before \" + game.pov.article + \" can take \" + object.article + \" off.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"AlreadyWearing\"&gt;WriteVerb(game.pov, \"be\") + \" already wearing \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotRemoveIfNotWearing\"&gt;WriteVerb(game.pov, \"be\") + \" not wearing \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"NotRemovable\"&gt;CapFirst(game.pov.gender) + \" cannot remove \" + object.article + \"!\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotWearOver\"&gt;CapFirst(game.pov.gender) + \" cannot wear that over \" + GetDisplayGarment(object) + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"CannotWearWith\"&gt;CapFirst(game.pov.gender) + \" cannot wear that while wearing \" + GetDisplayGarment(object) + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"RemoveSuccessful\"&gt;WriteVerb(game.pov, \"take\") + \" \" + object.article + \" off.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"RemoveFirst\"&gt;CapFirst(game.pov.gender) + \" can't remove that while wearing \" + GetDisplayGarment(object) + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultBuy\"&gt;CapFirst(game.pov.gender) + \" can't buy \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultClimb\"&gt;CapFirst(game.pov.gender) + \" can't climb \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultDrink\"&gt;CapFirst(game.pov.gender) + \" can't drink \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultEat\"&gt;CapFirst(game.pov.gender) + \" can't eat \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultHit\"&gt;CapFirst(game.pov.gender) + \" can't hit \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultKill\"&gt;CapFirst(game.pov.gender) + \" can't kill \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultKiss\"&gt;CapFirst(game.pov.gender) + \" can't kiss \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultKnock\"&gt;CapFirst(game.pov.gender) + \" can't knock \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultLick\"&gt;CapFirst(game.pov.gender) + \" can't lick \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultLie\"&gt;CapFirst(game.pov.gender) + \" can't lie on \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultListenTo\"&gt;WriteVerb(game.pov, \"listen\") + \", but \" + object.gender + \" makes no sound.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultLock\"&gt;CapFirst(game.pov.gender) + \" can't lock \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultMove\"&gt;CapFirst(game.pov.gender) + \" can't move \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultPull\"&gt;CapFirst(game.pov.gender) + \" can't pull \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultPush\"&gt;CapFirst(game.pov.gender) + \" can't push \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultRead\"&gt;CapFirst(game.pov.gender) + \" can't read \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultSearch\"&gt;CapFirst(game.pov.gender) + \" can't search \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultShow\"&gt;CapFirst(game.pov.gender) + \" can't show \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultSit\"&gt;CapFirst(game.pov.gender) + \" can't sit on \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultSmell\"&gt;WriteVerb(game.pov, \"sniff\") + \", but \" + object.gender + \" doesn't smell of much.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTaste\"&gt;CapFirst(game.pov.gender) + \" can't taste \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultThrow\"&gt;CapFirst(game.pov.gender) + \" can't throw \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTie\"&gt;CapFirst(game.pov.gender) + \" can't tie \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTouch\"&gt;CapFirst(game.pov.gender) + \" can't touch \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTurnOn\"&gt;CapFirst(game.pov.gender) + \" can't turn \" + object.article + \" on.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTurnOff\"&gt;CapFirst(game.pov.gender) + \" can't turn \" + object.article + \" off.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultTurn\"&gt;CapFirst(game.pov.gender) + \" can't turn \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultUnlock\"&gt;CapFirst(game.pov.gender) + \" can't unlock \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultUntie\"&gt;CapFirst(game.pov.gender) + \" can't untie \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultUseOn\"&gt;CapFirst(game.pov.gender) + \" can't use \" + object2.article + \" that way.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultWear\"&gt;CapFirst(game.pov.gender) + \" can't wear \" + object.article + \".\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultListen\"&gt;CapFirst(game.pov.gender) + \" can't hear much.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"DefaultJump\"&gt;WriteVerb(game.pov, \"jump\") + \", but nothing happens.\"&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=\"EditorVerbDefaultExpression\"&gt;CapFirst(game.pov.gender) + \" can't #verb# \" + object.article + \".\"&lt;/dynamictemplate&gt;\n</code></pre>\n<p>(Changing them all to dynamic templates was probably an inefficient way of doing it. I could have used the text processor instead. But I don't think there should be any problem with those)</p>\n<p>I was actually doing this originally because I wanted my game to use \"I\" for the player character, recreating the first computer game I played; but it should all work for \"you\" or \"he\" as well. With all these templates in, changing the player pronoun is as simple as changing the player object's <code>gender</code> attribute.</p>\n\n",
      "PostDate": "2018-10-16T09:11:12.8756363Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4e4dc8f5-3dc7-48d5-9cf4-df6e95074a6f",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I remember that thread and I tried to use those dynamic teplate code out side a library and I always get this error that's why I started this thread\r\nError running script: Invalid variable name '<template___SPACE___name' in '<template___SPACE___name = \"SeeListHeader\">=CapFirst(player.pov_alias)'",
      "EditableFormat": "markdown",
      "HTML": "<p>I remember that thread and I tried to use those dynamic teplate code out side a library and I always get this error that's why I started this thread<br>\nError running script: Invalid variable name '&lt;template___SPACE___name' in '&lt;template___SPACE___name = \"SeeListHeader\"&gt;=CapFirst(player.pov_alias)'</p>\n\n",
      "PostDate": "2018-10-17T01:50:27.0056269Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "334aac1d-bee8-416b-85c2-bf7918bb23aa",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That sounds like you're putting the XML in a script.\r\n\r\nIt doesn't go in a script. You need to either put it in a library, or put it into your game file in full code view, after (and at the same level as) the `<include ref=\"English.aslx\" />` directive.\r\n\r\nI don't think it's possible to change a template once the game has started; but it should be possible to make a template which will display the right thing in all circumstances.",
      "EditableFormat": "markdown",
      "HTML": "<p>That sounds like you're putting the XML in a script.</p>\n<p>It doesn't go in a script. You need to either put it in a library, or put it into your game file in full code view, after (and at the same level as) the <code>&lt;include ref=\"English.aslx\" /&gt;</code> directive.</p>\n<p>I don't think it's possible to change a template once the game has started; but it should be possible to make a template which will display the right thing in all circumstances.</p>\n\n",
      "PostDate": "2018-10-17T09:11:49.6022266Z",
      "LastEditDate": "2018-10-17T09:13:05.0404761Z",
      "link": null
    },
    {
      "PostId": "b740b8ad-102b-430f-8bf4-1b36aae8774c",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You mention getting it to do the right thing under the right circumstances before but you were kind of vague can you give me a more detailed explanation?. Like do I use what if sentences in the library or? Like for instance if this object is the current point of view then use he or she rather than you",
      "EditableFormat": "markdown",
      "HTML": "<p>You mention getting it to do the right thing under the right circumstances before but you were kind of vague can you give me a more detailed explanation?. Like do I use what if sentences in the library or? Like for instance if this object is the current point of view then use he or she rather than you</p>\n\n",
      "PostDate": "2018-10-17T17:21:56.6670817Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "220ed204-d54e-4505-86bf-0d3662958299",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Actaually, that's what happens when you put spaces in attributes.\r\n\r\nIf template is an attribute, it would be \"template name\" which comes out as \"template___SPACE___name\". Don't ask me why.\r\n\r\nTry templatename instead, if you can find it...",
      "EditableFormat": "markdown",
      "HTML": "<p>Actaually, that's what happens when you put spaces in attributes.</p>\n<p>If template is an attribute, it would be \"template name\" which comes out as \"template___SPACE___name\". Don't ask me why.</p>\n<p>Try templatename instead, if you can find it...</p>\n\n",
      "PostDate": "2018-10-17T19:45:14.5682437Z",
      "LastEditDate": "2018-10-17T19:45:57.138144Z",
      "link": null
    },
    {
      "PostId": "4e7c8d86-d9ba-4e1d-9046-cb1c06df5831",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ jmnevil54 tried it no luck\r\n@mrangel So same question to you from my previous post",
      "EditableFormat": "markdown",
      "HTML": "<p>@ jmnevil54 tried it no luck<br>\n@mrangel So same question to you from my previous post</p>\n\n",
      "PostDate": "2018-10-17T20:27:34.3700765Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2be97c29-158a-4f90-a90b-daeb595672a6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> You mention getting it to do the right thing under the right circumstances before but you were kind of vague can you give me a more detailed explanation?. Like do I use what if sentences in the library or? Like for instance if this object is the current point of view then use he or she rather than you\r\n\r\nYou use the `WriteVerb` function.\r\n\r\nTaking a random example from the templates I posted above:\r\n`<dynamictemplate name=\"NothingToDrop\">WriteVerb(game.pov, \"have\") + \" nothing to drop.\"</dynamictemplate>`\r\n\r\nThis is the template which is displayed if the player types \"drop all\" when they're not carrying anything.\r\nThe default one in quest just says \"You have nothing to drop.\"\r\n\r\nThe one I gave you will say \"You have nothing to drop\" if the POV object's gender is set to \"you\". If the POV object's gender is \"he\", it will say \"He has nothing to drop.\" instead.\r\n\r\nWriteVerb automatically selects the correct form of a verb to use, depending if the gender is \"I\", \"you\", \"he\", \"she\", \"it\", \"they\", or \"we\".\r\n\r\nThe templates I've given you will display the right message for the gender of the current POV object. So you don't need to change the template during the game.\r\nI made that list by taking the entire English language pack, and changing every template that has \"you\" in it to use the gender of the POV object instead. (Except for some of the help messages, where 'you' seems to mean the actual player rather than their character)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>You mention getting it to do the right thing under the right circumstances before but you were kind of vague can you give me a more detailed explanation?. Like do I use what if sentences in the library or? Like for instance if this object is the current point of view then use he or she rather than you</p>\n</blockquote>\n<p>You use the <code>WriteVerb</code> function.</p>\n<p>Taking a random example from the templates I posted above:<br>\n<code>&lt;dynamictemplate name=\"NothingToDrop\"&gt;WriteVerb(game.pov, \"have\") + \" nothing to drop.\"&lt;/dynamictemplate&gt;</code></p>\n<p>This is the template which is displayed if the player types \"drop all\" when they're not carrying anything.<br>\nThe default one in quest just says \"You have nothing to drop.\"</p>\n<p>The one I gave you will say \"You have nothing to drop\" if the POV object's gender is set to \"you\". If the POV object's gender is \"he\", it will say \"He has nothing to drop.\" instead.</p>\n<p>WriteVerb automatically selects the correct form of a verb to use, depending if the gender is \"I\", \"you\", \"he\", \"she\", \"it\", \"they\", or \"we\".</p>\n<p>The templates I've given you will display the right message for the gender of the current POV object. So you don't need to change the template during the game.<br>\nI made that list by taking the entire English language pack, and changing every template that has \"you\" in it to use the gender of the POV object instead. (Except for some of the help messages, where 'you' seems to mean the actual player rather than their character)</p>\n\n",
      "PostDate": "2018-10-17T21:09:07.7420501Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "20167214-104a-4762-8dcc-a136cbe22f52",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel\r\nOkay so the code and information you gave me, works on every template I have tried except \"Can see,\" and \"Can go\" I tired Capfirst, and write verb and nothing changed. I did try the \"Drop all\" command it did You drop when first person, and She dropped like you said it would in third.\r\nSo why does the \"Can see\" and \"Can go\" not work?",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel<br>\nOkay so the code and information you gave me, works on every template I have tried except \"Can see,\" and \"Can go\" I tired Capfirst, and write verb and nothing changed. I did try the \"Drop all\" command it did You drop when first person, and She dropped like you said it would in third.<br>\nSo why does the \"Can see\" and \"Can go\" not work?</p>\n\n",
      "PostDate": "2018-10-19T02:44:18.6242308Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67304378-7266-4b3e-804c-e9f43eec70e9",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, my mistake. I was still getting used to the system when I compiled this list originally.\r\n\r\nEvery room has its own strings for \"You can see\" and \"You can go\". These are set based on the template _when you create the room in the editor_, so making them dynamic templates won't work.\r\n\r\nI'm not sure, but I think they should work with the text processor versions:\r\n```\r\n        <template name=\"SeeListHeader\">{=CapFirst(game.pov.gender)} can see</template>\r\n\t<template name=\"GoListHeader\">{=CapFirst(game.pov)} can go</template>\r\n```\r\n\r\nAny rooms you've already created in the game will have these strings already set. So you could either go to each room on the editor, and change `You can see` to `{=CapFirst(game.pov.gender)} can see` on the room tab; or you could put some code within your 'start' script to change them all when the game starts:\r\n```\r\nforeach (room, AllRooms() {\r\n  if (HasString (room, \"descprefix\")) {\r\n    room.descprefix = Replace (room.descprefix, \"You are\", \"{=CapFirst(WriteVerb(game.pov,\\\"be\\\"))}\")\r\n  }\r\n  if (HasString (room, \"objectslistprefix\")) {\r\n    room.objectslistprefix = Replace (room.objectslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\r\n  }\r\n  if (HasString (room, \"exitslistprefix\")) {\r\n    room.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\r\n  }\r\n}\r\n```\r\n(That will change the \"You are in\", \"You can see\", and \"You can go\" strings for all rooms)",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, my mistake. I was still getting used to the system when I compiled this list originally.</p>\n<p>Every room has its own strings for \"You can see\" and \"You can go\". These are set based on the template <em>when you create the room in the editor</em>, so making them dynamic templates won't work.</p>\n<p>I'm not sure, but I think they should work with the text processor versions:</p>\n<pre><code>        &lt;template name=\"SeeListHeader\"&gt;{=CapFirst(game.pov.gender)} can see&lt;/template&gt;\n\t&lt;template name=\"GoListHeader\"&gt;{=CapFirst(game.pov)} can go&lt;/template&gt;\n</code></pre>\n<p>Any rooms you've already created in the game will have these strings already set. So you could either go to each room on the editor, and change <code>You can see</code> to <code>{=CapFirst(game.pov.gender)} can see</code> on the room tab; or you could put some code within your 'start' script to change them all when the game starts:</p>\n<pre><code>foreach (room, AllRooms() {\n  if (HasString (room, \"descprefix\")) {\n    room.descprefix = Replace (room.descprefix, \"You are\", \"{=CapFirst(WriteVerb(game.pov,\\\"be\\\"))}\")\n  }\n  if (HasString (room, \"objectslistprefix\")) {\n    room.objectslistprefix = Replace (room.objectslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\n  }\n  if (HasString (room, \"exitslistprefix\")) {\n    room.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\n  }\n}\n</code></pre>\n<p>(That will change the \"You are in\", \"You can see\", and \"You can go\" strings for all rooms)</p>\n\n",
      "PostDate": "2018-10-19T10:05:16.8690298Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7f815336-2575-4be2-8e51-8dc731ef9486",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(Unfortunately, there's a problem with using `WriteVerb(game.pov, \"can\")` - but it's a problem with the English language, that Quest can't easily fix. Because there's two different verbs \"can\", that conjugate differently. If a guy works at a canning factory, it's correct to say \"He cans peaches\" or something. There's no easy way for Quest to guess whether you want \"He can\" or \"He cans\" without understanding the sentence; so that's one verb that `WriteVerb` doesn't work for right now)",
      "EditableFormat": "markdown",
      "HTML": "<p>(Unfortunately, there's a problem with using <code>WriteVerb(game.pov, \"can\")</code> - but it's a problem with the English language, that Quest can't easily fix. Because there's two different verbs \"can\", that conjugate differently. If a guy works at a canning factory, it's correct to say \"He cans peaches\" or something. There's no easy way for Quest to guess whether you want \"He can\" or \"He cans\" without understanding the sentence; so that's one verb that <code>WriteVerb</code> doesn't work for right now)</p>\n\n",
      "PostDate": "2018-10-19T10:12:52.956464Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "590276ab-ce22-4960-896e-f72e97f0f2c3",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ mrangel, what if instead I use the phrase \"is able\"? Like is able to see, or is able to go?",
      "EditableFormat": "markdown",
      "HTML": "<p>@ mrangel, what if instead I use the phrase \"is able\"? Like is able to see, or is able to go?</p>\n\n",
      "PostDate": "2018-10-19T22:59:56.486057Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bd62c3a8-7978-4e30-b612-c20ae6d0720a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep. `{=WriteVerb(game.pov, \"be\")}` will give you \"You are\", \"I am\", \"He is\", \"She is\" etc.\r\n\r\nOr you can just stick with `{=CapFirst(game.pov.gender)} can` to have \"I can\"/\"You can\"/\"He can\"/etc, and that will work. It just means that when you're writing these, you have to remember that \"can\" is different all the other verbs.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep. <code>{=WriteVerb(game.pov, \"be\")}</code> will give you \"You are\", \"I am\", \"He is\", \"She is\" etc.</p>\n<p>Or you can just stick with <code>{=CapFirst(game.pov.gender)} can</code> to have \"I can\"/\"You can\"/\"He can\"/etc, and that will work. It just means that when you're writing these, you have to remember that \"can\" is different all the other verbs.</p>\n\n",
      "PostDate": "2018-10-20T08:51:26.1646133Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f92c7294-af22-4fe7-850a-0ffd28816802",
      "UserId": 286484,
      "Username": "Thickar",
      "AvatarUrl": "https://secure.gravatar.com/avatar/434855216bf750dd1c371f6f5006c8e5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay one last thing, your {=WriteVerb(game.pov, \"be\")} or {=CapFirst(game.pov.gender)} , where do I put it? In a library or in a script? and do I added it to more code like \r\nif (HasString (room, \"exitslistprefix\")) {\r\n    room.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\r\n  }",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay one last thing, your {=WriteVerb(game.pov, \"be\")} or {=CapFirst(game.pov.gender)} , where do I put it? In a library or in a script? and do I added it to more code like<br>\nif (HasString (room, \"exitslistprefix\")) {<br>\nroom.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")<br>\n}</p>\n\n",
      "PostDate": "2018-10-25T00:38:29.7610606Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9e0472f3-99c5-4b52-a644-a03915374a50",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> where do I put it? In a library or in a script?\r\n\r\nOK… there's three parts to this.\r\n\r\n1. The templates that I listed above (`<template` and `<dynamictemplate` lines) can either go in your game file, or in a library. If you put them into your game file in full code view, they should go after the line `<include ref=\"English.aslx\" />`.\r\n\r\n2. You'd have to change \"You\" to `{=CapFirst(game.pov.gender)}` in the \"You can see\", \"You can go\", and \"You are in\" lines for every room you already created. These are on the room tab in the editor. If you have a lot of rooms already, you can put this script (now with a typo fixed) in your game's \"start\" script instead:\r\n>     foreach (room, AllRooms()) {\r\n>       if (HasString (room, \"descprefix\")) {\r\n>         room.descprefix = Replace (room.descprefix, \"You are\", \"{=CapFirst(WriteVerb(game.pov,\\\"be\\\"))}\")\r\n>       }\r\n>       if (HasString (room, \"objectslistprefix\")) {\r\n>         room.objectslistprefix = Replace (room.objectslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\r\n>       }\r\n>       if (HasString (room, \"exitslistprefix\")) {\r\n>         room.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\r\n>       }\r\n>     }\r\n\r\n3. Anywhere your script includes a message that includes the word 'you', you would replace it with a text processor command. `{=game.pov.gender}` will give \"you\", \"he\", or \"she\" as appropriate. `{=CapFirst(game.pov.gender)}` will give \"You\", \"He\", or \"She\" for the start of a sentence. `{=WriteVerb(game.pov, \"be\")}` will give \"you are\" or \"he is\". Depending how much of your game's text you've already written, finding all of these could be a time-consuming process (though you only need to do it for places and events that could be reached with more than one character).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>where do I put it? In a library or in a script?</p>\n</blockquote>\n<p>OK… there's three parts to this.</p>\n<ol>\n<li>\n<p>The templates that I listed above (<code>&lt;template</code> and <code>&lt;dynamictemplate</code> lines) can either go in your game file, or in a library. If you put them into your game file in full code view, they should go after the line <code>&lt;include ref=\"English.aslx\" /&gt;</code>.</p>\n</li>\n<li>\n<p>You'd have to change \"You\" to <code>{=CapFirst(game.pov.gender)}</code> in the \"You can see\", \"You can go\", and \"You are in\" lines for every room you already created. These are on the room tab in the editor. If you have a lot of rooms already, you can put this script (now with a typo fixed) in your game's \"start\" script instead:</p>\n</li>\n</ol>\n<blockquote>\n<pre><code>foreach (room, AllRooms()) {\n  if (HasString (room, \"descprefix\")) {\n    room.descprefix = Replace (room.descprefix, \"You are\", \"{=CapFirst(WriteVerb(game.pov,\\\"be\\\"))}\")\n  }\n  if (HasString (room, \"objectslistprefix\")) {\n    room.objectslistprefix = Replace (room.objectslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\n  }\n  if (HasString (room, \"exitslistprefix\")) {\n    room.exitslistprefix = Replace (room.exitslistprefix, \"You \", \"{=CapFirst(game.pov.gender)}\")\n  }\n}\n</code></pre>\n</blockquote>\n<ol start=\"3\">\n<li>Anywhere your script includes a message that includes the word 'you', you would replace it with a text processor command. <code>{=game.pov.gender}</code> will give \"you\", \"he\", or \"she\" as appropriate. <code>{=CapFirst(game.pov.gender)}</code> will give \"You\", \"He\", or \"She\" for the start of a sentence. <code>{=WriteVerb(game.pov, \"be\")}</code> will give \"you are\" or \"he is\". Depending how much of your game's text you've already written, finding all of these could be a time-consuming process (though you only need to do it for places and events that could be reached with more than one character).</li>\n</ol>\n\n",
      "PostDate": "2018-10-25T10:20:29.3934537Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
