{
  "Topic": {
    "TopicId": "wbj-5dgykkgebpqbovmxfa",
    "ForumId": "10",
    "Title": "How to prevent the player from inputting a specific set of strings after asked a question?",
    "LastUpdated": "2020-07-31T00:02:53.5630983Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3983dc77-d572-4f05-8422-e8c6fe85f9af",
      "UserId": 493771,
      "Username": "Dr. Grizzly",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a7536a7c5b32e43f4ef07e773f3d0242?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, say I am asking a player their occupation, but I don't want them to input certain occupations, like \"lawyer\", for example. If they input \"lawyer\" after the \"get input\", they'll be asked the question again and ask for their input, but if they choose another one I don't want them to, then they will be asked again. I want it to loop until they choose an occupation that is available. My code currently looks like this:\r\n\r\n```msg (\"Do you remember who you are? What is your character's occupation?\")\r\nmsg (\"\")\r\nget input {\r\n  set (player, \"occupation\", result)\r\n  if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\r\n    msg (\"Originallity is a virtue, try again\")\r\n    undo\r\n  }\r\n  else {\r\n    msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\r\n    msg (\"\")\r\n```\r\n\r\nHowever, when it comes to the \"undo\" part, it says there is nothing to undo and the thing breaks and the next questions can't be asked. Would using a list help?\r\n\r\nIf possible please answer in the normal view because I'm not too trained in code view yet. Could you help me resolve this? Thank you very much!",
      "EditableFormat": "markdown",
      "HTML": "<p>So, say I am asking a player their occupation, but I don't want them to input certain occupations, like \"lawyer\", for example. If they input \"lawyer\" after the \"get input\", they'll be asked the question again and ask for their input, but if they choose another one I don't want them to, then they will be asked again. I want it to loop until they choose an occupation that is available. My code currently looks like this:</p>\n<pre><code>msg (\"\")\nget input {\n  set (player, \"occupation\", result)\n  if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\n    msg (\"Originallity is a virtue, try again\")\n    undo\n  }\n  else {\n    msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\n    msg (\"\")\n</code></pre>\n<p>However, when it comes to the \"undo\" part, it says there is nothing to undo and the thing breaks and the next questions can't be asked. Would using a list help?</p>\n<p>If possible please answer in the normal view because I'm not too trained in code view yet. Could you help me resolve this? Thank you very much!</p>\n\n",
      "PostDate": "2020-07-31T00:02:53.5630983Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ae280f07-a4f8-40c9-a1a0-56fa8f3962f5",
      "UserId": 924,
      "Username": "Pertex",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4cc1e52f99452e841ecf4cbee9eadde9?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How is this part of code called? Is it part of a command?",
      "EditableFormat": "markdown",
      "HTML": "<p>How is this part of code called? Is it part of a command?</p>\n\n",
      "PostDate": "2020-07-31T08:10:56.3965887Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "107a0e04-72fd-446b-9d14-6159c0a9f052",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The most common way to do this would be to put the question in a function. Then if the response isn't acceptable, you can just call the function again.\r\n\r\nIf you're going to be asking a lot of questions and you don't want to have a lot of functions, you could just use a script attribute to store the script, so you can use it again. For example:\r\n```\r\ngame.question_response_script => {\r\n  set (player, \"occupation\", result)\r\n  if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\r\n    msg (\"Originallity is a virtue, try again\")\r\n    msg (\"\")\r\n    get input {\r\n      do (game, \"question_response_script\", QuickParams (\"result\", result))\r\n    }\r\n  }\r\n  else {\r\n    msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\r\n    msg (\"\")\r\n  }\r\n}\r\nmsg (\"\")\r\nget input {\r\n  do (game, \"question_response_script\", QuickParams (\"result\", result))\r\n}\r\n```\r\nor\r\n```\r\ngame.ask_occupation => {\r\n  msg (\"\")\r\n  get input {\r\n    set (player, \"occupation\", result)\r\n    if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\r\n      msg (\"Originallity is a virtue, try again\")\r\n      do (game, \"ask_occupation\")\r\n    }\r\n    else {\r\n      msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\r\n      msg (\"\")\r\n    }\r\n  }\r\n}\r\ndo (game, \"ask_occupation\")\r\n```\r\n\r\nIf you're asking a lot of questions, it might end up neater to make a scriptdictionary, with the keys as the questions and each script handling one response. So you could have a function which asks the first question in the dictionary, and then calls itself again (either repeating the same question, or moving onto the next one after it gets a right answer).",
      "EditableFormat": "markdown",
      "HTML": "<p>The most common way to do this would be to put the question in a function. Then if the response isn't acceptable, you can just call the function again.</p>\n<p>If you're going to be asking a lot of questions and you don't want to have a lot of functions, you could just use a script attribute to store the script, so you can use it again. For example:</p>\n<pre><code>game.question_response_script =&gt; {\n  set (player, \"occupation\", result)\n  if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\n    msg (\"Originallity is a virtue, try again\")\n    msg (\"\")\n    get input {\n      do (game, \"question_response_script\", QuickParams (\"result\", result))\n    }\n  }\n  else {\n    msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\n    msg (\"\")\n  }\n}\nmsg (\"\")\nget input {\n  do (game, \"question_response_script\", QuickParams (\"result\", result))\n}\n</code></pre>\n<p>or</p>\n<pre><code>game.ask_occupation =&gt; {\n  msg (\"\")\n  get input {\n    set (player, \"occupation\", result)\n    if ((IsRegexMatch  (\"\\\\b(lawyer|gardener|doctor|coordinator|explorer)\\\\b\", LCase (result)))) {\n      msg (\"Originallity is a virtue, try again\")\n      do (game, \"ask_occupation\")\n    }\n    else {\n      msg (\"So your occupation is \" + player.occupation + \", what an interesting job you have. Now that we know what you do, what's your name? (only first name)\")\n      msg (\"\")\n    }\n  }\n}\ndo (game, \"ask_occupation\")\n</code></pre>\n<p>If you're asking a lot of questions, it might end up neater to make a scriptdictionary, with the keys as the questions and each script handling one response. So you could have a function which asks the first question in the dictionary, and then calls itself again (either repeating the same question, or moving onto the next one after it gets a right answer).</p>\n\n",
      "PostDate": "2020-07-31T09:03:17.7389457Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
