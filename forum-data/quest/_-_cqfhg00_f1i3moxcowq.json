{
  "Topic": {
    "TopicId": "_-_cqfhg00_f1i3moxcowq",
    "ForumId": "10",
    "Title": "Recalling A Menu Question [SOLVED]",
    "LastUpdated": "2018-09-28T02:53:15.3637426Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "264b7e95-cf7a-4abc-bc7c-854e6a7c1c9c",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nI wasn't quite sure how to recall a menu with options if it isn't based around a function. If it's a function, after choosing something you can just recall the function again but when a function isn't involved how do you go about recalling a menu?\r\n```\r\nobjecthere.menuhere  ??\r\n```\r\nAnyone know?\r\n\r\nAnonynn. \r\n\r\nEDIT:\r\nThis is a StringList Menu on an Object too if that helps. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>I wasn't quite sure how to recall a menu with options if it isn't based around a function. If it's a function, after choosing something you can just recall the function again but when a function isn't involved how do you go about recalling a menu?</p>\n<pre><code>objecthere.menuhere  ??\n</code></pre>\n<p>Anyone know?</p>\n<p>Anonynn.</p>\n<p>EDIT:<br>\nThis is a StringList Menu on an Object too if that helps.</p>\n\n",
      "PostDate": "2018-09-28T02:53:15.3637426Z",
      "LastEditDate": "2018-10-08T05:27:06.161182Z",
      "link": null
    },
    {
      "PostId": "6c70d214-2111-4fdb-a2dc-cc77547c03dc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You need to run the code again, so putting it in a function is the most obvious way.\r\nIf you don't want to do that, you can still call the same menu in more than one place.\r\n\r\nTo avoid having to type multiple copies of the same script, you can put the menu response script into a script attribute.\r\nFor example:\r\n`ShowMenu (\"What colour is your hair?\", Split(\"blond;brown;black;red\", true, player.haircolour_menu_callback))`\r\nThat assumes that the player has a script attribute `haircolour_menu_callback` which will be called (with a `result` variable) when a menu option is chosen.\r\n\r\nHope I'm making sense here :p\r\n\r\nOr you could grab my _Tomb of the Dead_ demo and yank some of the functions out of it. `Question` acts like ShowMenu but will wait until the previous menu is answered if you call it multiple times in the same turn; and `RedoThis()` lets you repeat the last question. This is powered by the `WhenReady` function (which is like \"on ready\" but also waits for menus), and `whenready` turnscript. Not sure if there's any more of the functions required to support those ones.",
      "EditableFormat": "markdown",
      "HTML": "<p>You need to run the code again, so putting it in a function is the most obvious way.<br>\nIf you don't want to do that, you can still call the same menu in more than one place.</p>\n<p>To avoid having to type multiple copies of the same script, you can put the menu response script into a script attribute.<br>\nFor example:<br>\n<code>ShowMenu (\"What colour is your hair?\", Split(\"blond;brown;black;red\", true, player.haircolour_menu_callback))</code><br>\nThat assumes that the player has a script attribute <code>haircolour_menu_callback</code> which will be called (with a <code>result</code> variable) when a menu option is chosen.</p>\n<p>Hope I'm making sense here :p</p>\n<p>Or you could grab my <em>Tomb of the Dead</em> demo and yank some of the functions out of it. <code>Question</code> acts like ShowMenu but will wait until the previous menu is answered if you call it multiple times in the same turn; and <code>RedoThis()</code> lets you repeat the last question. This is powered by the <code>WhenReady</code> function (which is like \"on ready\" but also waits for menus), and <code>whenready</code> turnscript. Not sure if there's any more of the functions required to support those ones.</p>\n\n",
      "PostDate": "2018-09-28T08:56:58.277255Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dab45314-c230-4b3a-bbe7-b63a347e5976",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So that would work with an object's menu too? Trying to see if I understand correctly. \r\n\r\nLike for example...\r\n\r\nnpcname.blahmenu\r\n\r\n```\r\n    }\r\n    case (\"Option 1\") {\r\n   npcname.blahmenu_callback\r\n    }\r\n    case (\"Option 2\") {\r\n    }\r\n    case (\"Option 3\") {\r\n    }\r\n  }\r\n```\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So that would work with an object's menu too? Trying to see if I understand correctly.</p>\n<p>Like for example...</p>\n<p>npcname.blahmenu</p>\n<pre><code>    }\n    case (\"Option 1\") {\n   npcname.blahmenu_callback\n    }\n    case (\"Option 2\") {\n    }\n    case (\"Option 3\") {\n    }\n  }\n</code></pre>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-09-28T18:31:31.6007579Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f0f3fd88-b01e-4563-8221-1bde28b4abee",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure what you mean by an object's menu here.\r\n\r\nIf you mean that one of the options in the menu calls the same menu again, you could do that like:\r\n\r\n```\r\n// Create a script attribute (or do it in the attributes tab if you prefer)\r\nnpcname.blahmenu_callback => {\r\n  switch (result) {\r\n    case (\"Option 1\") {\r\n      ShowMenu (\"Try again:\", Split (\"Option 2;Option 3;Option 4\"), true, npcname.blahmenu_callback)\r\n    }\r\n    case (\"Option 2\") {\r\n      // Other stuff here\r\n    }\r\n    case (\"Option 3\") {\r\n      // Other stuff here\r\n    }\r\n    case (\"Option 4\") {\r\n      // Just as an example of what you can do,\r\n      //    this option can only be chosen if the player tried option 1 first\r\n    }\r\n  }\r\n}\r\n\r\n// And then actually call the menu using that callback:\r\nShowMenu (\"Which option would you like?\", Split (\"Option 1;Option 2;Option 3\"), true, npcname.blahmenu_callback)",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure what you mean by an object's menu here.</p>\n<p>If you mean that one of the options in the menu calls the same menu again, you could do that like:</p>\n<pre><code>// Create a script attribute (or do it in the attributes tab if you prefer)\nnpcname.blahmenu_callback =&gt; {\n  switch (result) {\n    case (\"Option 1\") {\n      ShowMenu (\"Try again:\", Split (\"Option 2;Option 3;Option 4\"), true, npcname.blahmenu_callback)\n    }\n    case (\"Option 2\") {\n      // Other stuff here\n    }\n    case (\"Option 3\") {\n      // Other stuff here\n    }\n    case (\"Option 4\") {\n      // Just as an example of what you can do,\n      //    this option can only be chosen if the player tried option 1 first\n    }\n  }\n}\n\n// And then actually call the menu using that callback:\nShowMenu (\"Which option would you like?\", Split (\"Option 1;Option 2;Option 3\"), true, npcname.blahmenu_callback)\n</code></pre>\n\n",
      "PostDate": "2018-09-28T19:10:10.7056387Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5f266771-2550-4ae1-bdea-9cc9f569d786",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So basically what I want to do is instead of having a menu that's tied to a function (where prompting the menu would be just calling the function again after each choice has been chosen), I have a menu that's tied to an object. So after the player picks a choice in the menu on this object, it'll recall the entire menu again. If I can do that with the scripts above....I think we're golden!\r\n\r\nI'm confused though. \r\n\r\nSo when you have a menu with a function, you recall it by doing this...\r\n```\r\nFUNCTION NAME: Blahblah.\r\n\r\nShowMenu (\"\", game.blargh, true) {\r\nswitch (result) {\r\n  case (\"Build A Fire\") {\r\nBlahblah\r\n}\r\ncase (\"Roast Marshmellows\") {\r\nBlahblah\r\n}\r\n}\r\n```\r\n^--- so I'm wondering if I do this for a menu on an object to recall it...\r\n```\r\nOBJECT NAME: Blahblah.\r\nSTRING LIST blahblahmenu\r\n\r\nShowMenu (\"\", npcobject.blahblahmenu, true) {\r\nswitch (result) {\r\n  case (\"Build A Fire\") {\r\nBlahblah.blahblahmenu\r\n}\r\ncase (\"Roast Marshmellows\") {\r\nBlahblah.blahblahmenu\r\n}\r\n}\r\n```\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So basically what I want to do is instead of having a menu that's tied to a function (where prompting the menu would be just calling the function again after each choice has been chosen), I have a menu that's tied to an object. So after the player picks a choice in the menu on this object, it'll recall the entire menu again. If I can do that with the scripts above....I think we're golden!</p>\n<p>I'm confused though.</p>\n<p>So when you have a menu with a function, you recall it by doing this...</p>\n<pre><code>FUNCTION NAME: Blahblah.\n\nShowMenu (\"\", game.blargh, true) {\nswitch (result) {\n  case (\"Build A Fire\") {\nBlahblah\n}\ncase (\"Roast Marshmellows\") {\nBlahblah\n}\n}\n</code></pre>\n<p>^--- so I'm wondering if I do this for a menu on an object to recall it...</p>\n<pre><code>OBJECT NAME: Blahblah.\nSTRING LIST blahblahmenu\n\nShowMenu (\"\", npcobject.blahblahmenu, true) {\nswitch (result) {\n  case (\"Build A Fire\") {\nBlahblah.blahblahmenu\n}\ncase (\"Roast Marshmellows\") {\nBlahblah.blahblahmenu\n}\n}\n</code></pre>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-09-28T20:45:27.8459069Z",
      "LastEditDate": "2018-09-28T20:52:24.7548176Z",
      "link": null
    },
    {
      "PostId": "0163de61-8d15-4873-920e-c0119a5fa36f",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unless you already explained that and I'm a goofus and didn't understand it lol.\r\n\r\nAnonynn.",
      "EditableFormat": "markdown",
      "HTML": "<p>Unless you already explained that and I'm a goofus and didn't understand it lol.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-09-29T13:41:31.7738987Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cab96e86-1155-478a-8364-ad6c9cc18cc1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n---------------------\r\n\r\nto do/run/execute/activate/re-do/loop/re-run/re-execute/re-activate an Object's Script Attribute:\r\n\r\ninvoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE)\r\nor\r\ndo (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\")\r\n\r\n---------\r\n\r\nfor an example:\r\n\r\n(the 'game' is an Object, a special Object, but it's still an Object, and its 'start' Script Attribute, while a special Script Attribute, is still a Script Attribute, lol)\r\n\r\n```\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"count\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n    game.count = game.count + 1\r\n    msg (\"Count: \" + game.count)\r\n    if (not game.count = 5) {\r\n      invoke (game.start) // or: do (game, \"start\")\r\n    }\r\n  </attr>\r\n\r\n</game>\r\n```\r\n\r\n----------\r\n\r\ncomplete/full examples (Functions, Object's Script Attributes, and Delegates + Object Script Attributes):\r\n\r\n```\r\n<include ref=\"English.aslx\" />\r\n<include ref=\"Core.aslx\" />\r\n\r\n<delegate name=\"example_delegate_1\" parameters=\"example_parameter_1\"/>\r\n\r\n<delegate name=\"example_delegate_2\" type=\"string\"/>\r\n\r\n<delegate name=\"example_delegate_3\" parameters=\"example_parameter_3\" type=\"string\" />\r\n\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"count\" type=\"int\">0</attr>\r\n  <attr name=\"count_0\" type=\"int\">0</attr>\r\n  <attr name=\"count_1\" type=\"int\">0</attr>\r\n  <attr name=\"count_2\" type=\"int\">0</attr>\r\n  <attr name=\"count_3\" type=\"int\">0</attr>\r\n  <attr name=\"count_4\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    game.count = game.count + 1\r\n    msg (\"Count: \" + game.count)\r\n    if (not game.count = 5) {\r\n      invoke (game.count) // or: do (game, \"count\")\r\n    }\r\n\r\n    invoke (example_object.example_script_attribute_0) // or: do (example_object, \"example_script_attribute_0\")\r\n\r\n    rundelegate (example_object, \"example_script_attribute_1\", \"ep1\")\r\n\r\n    string_variable = \"Example Return 2: \" + RunDelegateFunction (example_object, \"example_script_attribute_2\")\r\n    msg (string_variable)\r\n\r\n    string_variable = \"Example Return 3: \" + RunDelegateFunction (example_object, \"example_script_attribute_3\", \"ep3\")\r\n    msg (string_variable)\r\n\r\n    example_function\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"example_object\">\r\n\r\n  <attr name=\"example_script_attribute_0\" type=\"script\">\r\n    game.count_0 = game.count_0 + 1\r\n    msg (\"Count 0: \" + game.count_0)\r\n    if (not game.count_0 = 5) {\r\n      invoke (example_object.example_script_attribute) // or: do (example_object, \"example_script_attribute\")\r\n    }\r\n  </attr>\r\n\r\n  <attr name=\"example_script_attribute_1\" type=\"example_delegate_1\">\r\n    game.count_1 = game.count_1 + 1\r\n    msg (\"Count 1: \" + game.count_1)\r\n    msg (\"Example Parameter 1: \" + example_parameter_1)\r\n    if (not game.count_1 = 5) {\r\n      rundelegate (example_object, \"example_script_attribute_1\", \"ep1\")\r\n    }\r\n  </attr>\r\n\r\n  <attr name=\"example_script_attribute_2\" type=\"example_delegate_2\">\r\n    game.count_2 = game.count_2 + 1\r\n    msg (\"Count 2: \" + game.count_2)\r\n    if (not game.count_1 = 5) {\r\n      string_variable = RunDelegateFunction (example_object, \"example_script_attribute_2\")\r\n    } else {\r\n      return (\"example_return_string_2\")\r\n    }\r\n  </attr>\r\n\r\n  <attr name=\"example_script_attribute_3\" type=\"example_delegate_3\">\r\n    game.count_3 = game.count_3 + 1\r\n    msg (\"Count 3: \" + game.count_3)\r\n    msg (\"Example Parameter 3: \" + example_parameter_3)\r\n    if (not game.count_3 = 5) {\r\n      string_variable = RunDelegateFunction (example_object, \"example_script_attribute_3\", \"ep3\")\r\n    } else {\r\n      return (\"example_return_string_3\")\r\n    }\r\n  </attr>\r\n\r\n</object>\r\n\r\n<function name=\"example_function\">\r\n  game.count_4 = game.count_4 + 1\r\n  msg (\"Count 4: \" + game.count_4)\r\n  if (not game.count_4 = 5) {\r\n    example_function\r\n  }\r\n</function>\r\n\r\n<!--\r\nFunctions can of course also have return values, parameters, or both (return values and parameters) -- was too lazy to show them\r\n\r\n(the Delegate usage basically makes an Object's Script Attribute be the same as a Function: able to have parameters, return values, and/or both: parameters and return values)\r\n-->\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>to do/run/execute/activate/re-do/loop/re-run/re-execute/re-activate an Object's Script Attribute:</p>\n<p>invoke (NAME_OF_OBJECT.NAME_OF_SCRIPT_ATTRIBUTE)<br>\nor<br>\ndo (NAME_OF_OBJECT, \"NAME_OF_SCRIPT_ATTRIBUTE\")</p>\n<hr>\n<p>for an example:</p>\n<p>(the 'game' is an Object, a special Object, but it's still an Object, and its 'start' Script Attribute, while a special Script Attribute, is still a Script Attribute, lol)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"count\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    game.count = game.count + 1\n    msg (\"Count: \" + game.count)\n    if (not game.count = 5) {\n      invoke (game.start) // or: do (game, \"start\")\n    }\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n</code></pre>\n<hr>\n<p>complete/full examples (Functions, Object's Script Attributes, and Delegates + Object Script Attributes):</p>\n<pre><code>&lt;include ref=\"English.aslx\" /&gt;\n&lt;include ref=\"Core.aslx\" /&gt;\n\n&lt;delegate name=\"example_delegate_1\" parameters=\"example_parameter_1\"/&gt;\n\n&lt;delegate name=\"example_delegate_2\" type=\"string\"/&gt;\n\n&lt;delegate name=\"example_delegate_3\" parameters=\"example_parameter_3\" type=\"string\" /&gt;\n\n&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"count\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"count_0\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"count_1\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"count_2\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"count_3\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"count_4\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    game.count = game.count + 1\n    msg (\"Count: \" + game.count)\n    if (not game.count = 5) {\n      invoke (game.count) // or: do (game, \"count\")\n    }\n\n    invoke (example_object.example_script_attribute_0) // or: do (example_object, \"example_script_attribute_0\")\n\n    rundelegate (example_object, \"example_script_attribute_1\", \"ep1\")\n\n    string_variable = \"Example Return 2: \" + RunDelegateFunction (example_object, \"example_script_attribute_2\")\n    msg (string_variable)\n\n    string_variable = \"Example Return 3: \" + RunDelegateFunction (example_object, \"example_script_attribute_3\", \"ep3\")\n    msg (string_variable)\n\n    example_function\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"example_object\"&gt;\n\n  &lt;attr name=\"example_script_attribute_0\" type=\"script\"&gt;\n    game.count_0 = game.count_0 + 1\n    msg (\"Count 0: \" + game.count_0)\n    if (not game.count_0 = 5) {\n      invoke (example_object.example_script_attribute) // or: do (example_object, \"example_script_attribute\")\n    }\n  &lt;/attr&gt;\n\n  &lt;attr name=\"example_script_attribute_1\" type=\"example_delegate_1\"&gt;\n    game.count_1 = game.count_1 + 1\n    msg (\"Count 1: \" + game.count_1)\n    msg (\"Example Parameter 1: \" + example_parameter_1)\n    if (not game.count_1 = 5) {\n      rundelegate (example_object, \"example_script_attribute_1\", \"ep1\")\n    }\n  &lt;/attr&gt;\n\n  &lt;attr name=\"example_script_attribute_2\" type=\"example_delegate_2\"&gt;\n    game.count_2 = game.count_2 + 1\n    msg (\"Count 2: \" + game.count_2)\n    if (not game.count_1 = 5) {\n      string_variable = RunDelegateFunction (example_object, \"example_script_attribute_2\")\n    } else {\n      return (\"example_return_string_2\")\n    }\n  &lt;/attr&gt;\n\n  &lt;attr name=\"example_script_attribute_3\" type=\"example_delegate_3\"&gt;\n    game.count_3 = game.count_3 + 1\n    msg (\"Count 3: \" + game.count_3)\n    msg (\"Example Parameter 3: \" + example_parameter_3)\n    if (not game.count_3 = 5) {\n      string_variable = RunDelegateFunction (example_object, \"example_script_attribute_3\", \"ep3\")\n    } else {\n      return (\"example_return_string_3\")\n    }\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;function name=\"example_function\"&gt;\n  game.count_4 = game.count_4 + 1\n  msg (\"Count 4: \" + game.count_4)\n  if (not game.count_4 = 5) {\n    example_function\n  }\n&lt;/function&gt;\n\n&lt;!--\nFunctions can of course also have return values, parameters, or both (return values and parameters) -- was too lazy to show them\n\n(the Delegate usage basically makes an Object's Script Attribute be the same as a Function: able to have parameters, return values, and/or both: parameters and return values)\n--&gt;\n</code></pre>\n\n",
      "PostDate": "2018-09-29T14:11:43.582133Z",
      "LastEditDate": "2018-09-29T14:29:50.7102145Z",
      "link": null
    },
    {
      "PostId": "c69857f0-49d7-43f7-8127-39302a1e36c0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you just want to have a function that's specific to an object, you'd structure it exacly like a function, but put it in a script attribute.\r\n\r\nRather than\r\n```\r\nFunctionName()\r\n```\r\nyou invoke it by:\r\n```\r\ndo (objectname,\"attributename\")\r\n```\r\n\r\nThe example in my previous post shows a different way of structuring it (I think slightly more efficient).",
      "EditableFormat": "markdown",
      "HTML": "<p>If you just want to have a function that's specific to an object, you'd structure it exacly like a function, but put it in a script attribute.</p>\n<p>Rather than</p>\n<pre><code>FunctionName()\n</code></pre>\n<p>you invoke it by:</p>\n<pre><code>do (objectname,\"attributename\")\n</code></pre>\n<p>The example in my previous post shows a different way of structuring it (I think slightly more efficient).</p>\n\n",
      "PostDate": "2018-09-29T15:40:29.9049923Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "95734b97-954e-4a77-8b0e-3e939b2d6e78",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hola Hk! \r\n\r\nI'm not sure how your post pertains to my question/and I'm having trouble deciphering all that!\r\n\r\n xD I just need a non-function menu to repeat.\r\n\r\nAnonynn.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hola Hk!</p>\n<p>I'm not sure how your post pertains to my question/and I'm having trouble deciphering all that!</p>\n<p>xD I just need a non-function menu to repeat.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-09-29T15:40:48.0756011Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fc526a93-c9eb-440d-8d66-fa54cc23ef90",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, so ....\r\n\r\nI would go...\r\n```\r\ndo (objectname, \"blahblahmenu\")\r\n```\r\n?\r\n\r\nAnonynn",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, so ....</p>\n<p>I would go...</p>\n<pre><code>do (objectname, \"blahblahmenu\")\n</code></pre>\n<p>?</p>\n<p>Anonynn</p>\n\n",
      "PostDate": "2018-09-29T15:43:23.3707605Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3ddd5ec2-ecc5-44cf-915b-0bf073eafac4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(sorry about the confusion)\r\n\r\n------------------\r\n\r\nalmost...\r\n\r\nyour scripting (menu + etc code) has to be within an Object's Script Attribute\r\n\r\n```\r\n<game name=\"example\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n    do (Blahblah, \"blah\") // or: invoke (Blahblah.blah)\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"npcobject\">\r\n\r\n  <blahblahmenu type=\"stringlist\">\r\n\r\n    <value>Build A Fire</value>\r\n    <value>Roast Marshmellows</value>\r\n\r\n  </blahblahmenu>\r\n\r\n</object>\r\n\r\n<object name=\"Blahblah\">\r\n\r\n  <attr name=\"blah\" type=\"script\">\r\n    ShowMenu (\"Select choice\", npcobject.blahblahmenu, true) {\r\n      switch (result) {\r\n        case (\"Build A Fire\") {\r\n          // blah scripting\r\n        }\r\n        case (\"Roast Marshmellows\") {\r\n          // blah scripting\r\n        }\r\n      }\r\n      on ready {\r\n        ask (\"Repeat?\") {\r\n          if (result) {\r\n            msg (\"You chose to repeat the menu selection\")\r\n            do (Blahblah, \"blah\") // or: invoke (Blahblah.blah)\r\n          } else {\r\n            msg (\"You chose NOT to repeat the menu selection\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  </attr>\r\n\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(sorry about the confusion)</p>\n<hr>\n<p>almost...</p>\n<p>your scripting (menu + etc code) has to be within an Object's Script Attribute</p>\n<pre><code>&lt;game name=\"example\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n    do (Blahblah, \"blah\") // or: invoke (Blahblah.blah)\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"npcobject\"&gt;\n\n  &lt;blahblahmenu type=\"stringlist\"&gt;\n\n    &lt;value&gt;Build A Fire&lt;/value&gt;\n    &lt;value&gt;Roast Marshmellows&lt;/value&gt;\n\n  &lt;/blahblahmenu&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"Blahblah\"&gt;\n\n  &lt;attr name=\"blah\" type=\"script\"&gt;\n    ShowMenu (\"Select choice\", npcobject.blahblahmenu, true) {\n      switch (result) {\n        case (\"Build A Fire\") {\n          // blah scripting\n        }\n        case (\"Roast Marshmellows\") {\n          // blah scripting\n        }\n      }\n      on ready {\n        ask (\"Repeat?\") {\n          if (result) {\n            msg (\"You chose to repeat the menu selection\")\n            do (Blahblah, \"blah\") // or: invoke (Blahblah.blah)\n          } else {\n            msg (\"You chose NOT to repeat the menu selection\")\n          }\n        }\n      }\n    }\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2018-09-29T17:18:12.2147589Z",
      "LastEditDate": "2018-09-29T17:27:43.6640289Z",
      "link": null
    },
    {
      "PostId": "58891fb9-b881-4b8a-9f56-c963db86c209",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I was finally able to test this...\r\n```\r\ndo (objectname,\"attributename\")\r\n```\r\nApplying at it after each choice. But it didn't repeat the menu. Any advice?\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So I was finally able to test this...</p>\n<pre><code>do (objectname,\"attributename\")\n</code></pre>\n<p>Applying at it after each choice. But it didn't repeat the menu. Any advice?</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-10-08T00:19:37.4667876Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f732051b-4fd0-48d4-ad2c-d40b1c0219f5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "is 'objectname' the name of the Object (or is it a variable that is holding/pointing-to the Object) that has the Script Attribute that has the menu code?\r\n\r\nis 'attributename' the name of the Script Attribute that has the menu code?\r\n\r\n-----\r\n\r\nor, is your menu code within a Command? (and thus not within an Object's Script Attribute)\r\n\r\nexample (could be a bit different in how your Command's scripting is done):\r\n\r\n```\r\n<command name=\"example_command\">\r\n  <pattern>example</pattern>\r\n  <script>\r\n    show menu (\"blah\", Split (\"blah1;blah2;blah3\", \";\"), false) {\r\n      switch (result) {\r\n        case (\"blah1\") {\r\n          // I'm just using the 'ask' Function, so to prevent it from being an endless/infinite loop should you only choose 'blah1' repeatedly:\r\n          ask (\"again?\") {\r\n            if (result) {\r\n              do (example_command, \"script\") // or: invoke (example_command.script) // or: do (this, \"script\") // or: invoke (this.script)\r\n            } else {\r\n              msg (\"blah 1\")\r\n            }\r\n          }\r\n        }\r\n        case (\"blah2\") {\r\n          msg (\"blah 2\")\r\n        }\r\n        case (\"blah3\") {\r\n          msg (\"blah 3\")\r\n        }\r\n    }\r\n  </script>\r\n</command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>is 'objectname' the name of the Object (or is it a variable that is holding/pointing-to the Object) that has the Script Attribute that has the menu code?</p>\n<p>is 'attributename' the name of the Script Attribute that has the menu code?</p>\n<hr>\n<p>or, is your menu code within a Command? (and thus not within an Object's Script Attribute)</p>\n<p>example (could be a bit different in how your Command's scripting is done):</p>\n<pre><code>&lt;command name=\"example_command\"&gt;\n  &lt;pattern&gt;example&lt;/pattern&gt;\n  &lt;script&gt;\n    show menu (\"blah\", Split (\"blah1;blah2;blah3\", \";\"), false) {\n      switch (result) {\n        case (\"blah1\") {\n          // I'm just using the 'ask' Function, so to prevent it from being an endless/infinite loop should you only choose 'blah1' repeatedly:\n          ask (\"again?\") {\n            if (result) {\n              do (example_command, \"script\") // or: invoke (example_command.script) // or: do (this, \"script\") // or: invoke (this.script)\n            } else {\n              msg (\"blah 1\")\n            }\n          }\n        }\n        case (\"blah2\") {\n          msg (\"blah 2\")\n        }\n        case (\"blah3\") {\n          msg (\"blah 3\")\n        }\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2018-10-08T00:53:38.4397105Z",
      "LastEditDate": "2018-10-08T01:02:26.980472Z",
      "link": null
    },
    {
      "PostId": "826313ed-1980-4ab5-9525-74a7082006d2",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The objectname is the name of the object that the menu is nested in. \r\n\r\nThe attribute name is the String List on the object's attribute list which is the menu I'm trying to repeat. \r\n\r\nAnd nope, it would be easy if the menu were on a function or a command cause you would just recall the function or the command to bring up the menu. Since this menu I'm working on is on an object, I have no idea how to recall it.\r\n\r\nAnonynn.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>The objectname is the name of the object that the menu is nested in.</p>\n<p>The attribute name is the String List on the object's attribute list which is the menu I'm trying to repeat.</p>\n<p>And nope, it would be easy if the menu were on a function or a command cause you would just recall the function or the command to bring up the menu. Since this menu I'm working on is on an object, I have no idea how to recall it.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-10-08T00:58:15.0426806Z",
      "LastEditDate": "2018-10-08T01:07:55.8370966Z",
      "link": null
    },
    {
      "PostId": "425d6125-6d7f-4992-a644-93ae92738eb9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah, \"The attribute name is the String List on the object's attribute list (Anonynn)\", there's your problem!\r\n\r\nthis needs to be the name of the Script Attribute (the Verb) itself, as you're looping the whole script, which includes the displayment menu within it\r\n\r\n```\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    do (example_object, \"example_script_attribute\")\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"example_object\">\r\n\r\n  <example_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>red</value>\r\n    <value>blue</value>\r\n    <value>yellow</value>\r\n\r\n  </example_stringlist_attribute>\r\n\r\n  <attr name=\"example_script_attribute\" type=\"script\">\r\n\r\n    show menu (\"Color?\", example_object.example_stringlist_attribute, false) {\r\n      switch (result) {\r\n        case (\"red\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              do (example_object, \"example_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        }\r\n        case (\"blue\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              do (example_object, \"example_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        }\r\n        case (\"yellow\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              do (example_object, \"example_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  </attr>\r\n\r\n</object>\r\n```\r\n\r\n---------\r\n\r\nif you only want to loop the menu displayment... that's a bit more tricky (as you got to use another Function or Script Attribute within that Script Attribute, to hold the menu displayment code, so you can only loop that menu displayment script instead of the full script/code of stuff)",
      "EditableFormat": "markdown",
      "HTML": "<p>ah, \"The attribute name is the String List on the object's attribute list (Anonynn)\", there's your problem!</p>\n<p>this needs to be the name of the Script Attribute (the Verb) itself, as you're looping the whole script, which includes the displayment menu within it</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    do (example_object, \"example_script_attribute\")\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"example_object\"&gt;\n\n  &lt;example_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;red&lt;/value&gt;\n    &lt;value&gt;blue&lt;/value&gt;\n    &lt;value&gt;yellow&lt;/value&gt;\n\n  &lt;/example_stringlist_attribute&gt;\n\n  &lt;attr name=\"example_script_attribute\" type=\"script\"&gt;\n\n    show menu (\"Color?\", example_object.example_stringlist_attribute, false) {\n      switch (result) {\n        case (\"red\") {\n          ask (\"Again?\") {\n            if (result) {\n              do (example_object, \"example_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        }\n        case (\"blue\") {\n          ask (\"Again?\") {\n            if (result) {\n              do (example_object, \"example_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        }\n        case (\"yellow\") {\n          ask (\"Again?\") {\n            if (result) {\n              do (example_object, \"example_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        }\n      }\n    }\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>if you only want to loop the menu displayment... that's a bit more tricky (as you got to use another Function or Script Attribute within that Script Attribute, to hold the menu displayment code, so you can only loop that menu displayment script instead of the full script/code of stuff)</p>\n\n",
      "PostDate": "2018-10-08T01:06:21.7611298Z",
      "LastEditDate": "2018-10-08T01:13:16.386998Z",
      "link": null
    },
    {
      "PostId": "cda4f4cd-e375-4aa7-83a8-265b8c61f7d2",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I know little to nothing about object attributes. I do this with my menus. This is in my Pokemon game.\r\n\r\nFirst room.\r\n```\r\nSetTimeout (3) {\r\n}\r\nmsg (\"Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii!!!<br/>....<br/>Righto.<br/><br/>Now, the Pokémon... They are... magical creatures. Sometimes they are animals, and sometimes they are objects (such as Pokéballs) that come to life.<br/><br/><br/>You are.... um... in your room.<br/>Commands you should know; Heal Oran Berry me, Heal Sitrus Berry me, Rest me, Access object, Egress object, Look at object, x object, Check object, Scan object<br/><br/>Equip Pokemon.<br/>Save often. I recommend saving every 30 minutes.<br/><br/>Do you need any other help?\")\r\na show menu\r\nmsg (\"Testing. 1. 2. 3.\")\r\n```\r\nThe function\r\na show menu\r\n```\r\noptions = Split(\"Pokemon;The Game;The Anime;Card Game;Combat;Items;Finish Game;Item Limit\", \";\")\r\nShowMenu (\"Pokémon Information\", options, true) {\r\n  switch (result) {\r\n    case (\"Pokemon\") {\r\n      msg (\"\")\r\n      msg (\"Depending on whether you've watched the anime, played the game, read the manga, etc., Pokemon are either magical animals so overpowered you enslave them, or they are magical animals that are your friends, who, for some reason, follow you because you've beat them in battle, I assume that's Greek or anime logic, or something.<br/>This is satire, and parody. Be prepared for drunk old men, and intoxicated Slowpoke.<br/><br/>Pokemon is an RPG game.<br/>The name is short for \\\"Pocket Monsters.\\\" The Japanese developers thought  the name wouldn't catch on in the West, so they renamed it \\\"Pokemon.\\\" Don't ask me why, I think Pocket Monsters is better.\")\r\n      a show menu\r\n    }\r\n    case (\"The Game\") {\r\n      msg (\"\")\r\n      msg (\"Ah yes, the game. The original game is a simple RPG. The original games were Pokemon Green in Blue, released in Japan in 1995. They were released as Red and Blue in the US and more in 1997. It can be summed up as follows: 20 minutes story, 300 hours grinding, 5 minutes x 8 gym leaders = 40 minutes for gym leaders, 5 minutes x 5 bosses = 25 minutes for the Elite Four, 200 hours trading/completing the Pokedex, and an optional 200 hours battling. Most casual/novice players stop after they've caught the final legendary, believing they completed the final game. The actual fun parts of the game are all online, and if you can't do that (and you don't have a friend/buy multiple games) you basically have an un-glorified Pokédex. Pokemon Diamond sucks in particular since you can't connect online anymore, and you can't get Spiritomb... sorry, I'm just complaining...\")\r\n      a show menu\r\n    }\r\n    case (\"The Anime\") {\r\n      msg (\"\")\r\n      msg (\"Ah yes, the anime. The anime has run from 1998 (or 1997 JP), onward until today. And who knows if it will stop? There are actually multiple anime series based on the games, but there is one that is very famous: the one with Ash Ketchum and his Pikachu. The anime can be summed up as follows: Funny but awkward first season with a noticably lacking budget, a second season without Brock, and Ash actually won a league, the Johto series which was 90% filler and went on forever, an okay Advanced Series, an Awesome Battle Frontier series with major improvement past all former series, a decent Sinnoh series, and all the other series so far were just 'meh.' Currently, they are having a series where Ash Ketchum goes to school. Seriously. Pokemon Sun and Moon. Look it up. Also, Ketchum is an actual English last name. Wikipedia. https://en.wikipedia.org/wiki/Ketchum_(surname) There are also various other small episodes shows, mainly written for new games. An example: The Pokémon Mystery Dungeon Series. I also recommend Pokémon Generations and Pokémon Origins.\")\r\n      a show menu\r\n    }\r\n    case (\"c\") {\r\n      msg (\"\")\r\n      msg (\"Ohhh.... yeah, the Card game. This is different since I don't play the card game. I only collect them... for fun. And I like to look at them. As far as I know, the card game can be bought at any Walmart, usually for around $4-$5 per pack. The inside usually contains one good card, some okay cards, and if you're unlucky you'll get a Caterpie card. The game is played in a Magic the Gathering type fashion. Each 'Trainer' has 20 HP points. You try to 'faint' (but everyone says kill) the other Pokemon/trainer. There are energy cards. You get the gist of it. The good part about this game, is at least you don't have to blurt out \\\"I activate my Voltorb... now I use my Electroshock for 30 damage on your active Pokemon.\\\" ...Usually.\")\r\n      a show menu\r\n    }\r\n    case (\"d\") {\r\n      msg (\"\")\r\n      msg (\"Combat coming soon. Just set the Pokémon. Remember to save!\")\r\n      a show menu\r\n    }\r\n    case (\"e\") {\r\n      msg (\"\")\r\n      msg (\"The berries heal health, and heal other status ailments. Oran Berries and Sitrus Berries heal health. Full restore heals health and heal all status conditions. Pecha Berries heal poison. More about items soon to come.\")\r\n      a show menu\r\n    }\r\n    case (\"l\") {\r\n      msg (\"\")\r\n      msg (\"There is no ending. It's an open world RPG. To win the game, you will need to get 8 badges, and then defeat the Elite Four. I'm not even done editing the game yet...\")\r\n      a show menu\r\n    }\r\n    case (\"f\") {\r\n      msg (\"\")\r\n      msg (\"You have an inventory limit of 50 items. You have a Pokémon team limit of 8 Pokémon.\")\r\n      a show menu\r\n    }\r\n    case (g) {\r\n      msg (\"Explaining Pokemon Catching Morality:\")\r\n    }\r\n  }\r\n}\r\n```\r\n The menu currently doesn't work because the cases currently don't match, but you should be able to copy it fine. Just call the funcrion name again.",
      "EditableFormat": "markdown",
      "HTML": "<p>I know little to nothing about object attributes. I do this with my menus. This is in my Pokemon game.</p>\n<p>First room.</p>\n<pre><code>SetTimeout (3) {\n}\nmsg (\"Hiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii!!!&lt;br/&gt;....&lt;br/&gt;Righto.&lt;br/&gt;&lt;br/&gt;Now, the Pokémon... They are... magical creatures. Sometimes they are animals, and sometimes they are objects (such as Pokéballs) that come to life.&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;You are.... um... in your room.&lt;br/&gt;Commands you should know; Heal Oran Berry me, Heal Sitrus Berry me, Rest me, Access object, Egress object, Look at object, x object, Check object, Scan object&lt;br/&gt;&lt;br/&gt;Equip Pokemon.&lt;br/&gt;Save often. I recommend saving every 30 minutes.&lt;br/&gt;&lt;br/&gt;Do you need any other help?\")\na show menu\nmsg (\"Testing. 1. 2. 3.\")\n</code></pre>\n<p>The function<br>\na show menu</p>\n<pre><code>options = Split(\"Pokemon;The Game;The Anime;Card Game;Combat;Items;Finish Game;Item Limit\", \";\")\nShowMenu (\"Pokémon Information\", options, true) {\n  switch (result) {\n    case (\"Pokemon\") {\n      msg (\"\")\n      msg (\"Depending on whether you've watched the anime, played the game, read the manga, etc., Pokemon are either magical animals so overpowered you enslave them, or they are magical animals that are your friends, who, for some reason, follow you because you've beat them in battle, I assume that's Greek or anime logic, or something.&lt;br/&gt;This is satire, and parody. Be prepared for drunk old men, and intoxicated Slowpoke.&lt;br/&gt;&lt;br/&gt;Pokemon is an RPG game.&lt;br/&gt;The name is short for \\\"Pocket Monsters.\\\" The Japanese developers thought  the name wouldn't catch on in the West, so they renamed it \\\"Pokemon.\\\" Don't ask me why, I think Pocket Monsters is better.\")\n      a show menu\n    }\n    case (\"The Game\") {\n      msg (\"\")\n      msg (\"Ah yes, the game. The original game is a simple RPG. The original games were Pokemon Green in Blue, released in Japan in 1995. They were released as Red and Blue in the US and more in 1997. It can be summed up as follows: 20 minutes story, 300 hours grinding, 5 minutes x 8 gym leaders = 40 minutes for gym leaders, 5 minutes x 5 bosses = 25 minutes for the Elite Four, 200 hours trading/completing the Pokedex, and an optional 200 hours battling. Most casual/novice players stop after they've caught the final legendary, believing they completed the final game. The actual fun parts of the game are all online, and if you can't do that (and you don't have a friend/buy multiple games) you basically have an un-glorified Pokédex. Pokemon Diamond sucks in particular since you can't connect online anymore, and you can't get Spiritomb... sorry, I'm just complaining...\")\n      a show menu\n    }\n    case (\"The Anime\") {\n      msg (\"\")\n      msg (\"Ah yes, the anime. The anime has run from 1998 (or 1997 JP), onward until today. And who knows if it will stop? There are actually multiple anime series based on the games, but there is one that is very famous: the one with Ash Ketchum and his Pikachu. The anime can be summed up as follows: Funny but awkward first season with a noticably lacking budget, a second season without Brock, and Ash actually won a league, the Johto series which was 90% filler and went on forever, an okay Advanced Series, an Awesome Battle Frontier series with major improvement past all former series, a decent Sinnoh series, and all the other series so far were just 'meh.' Currently, they are having a series where Ash Ketchum goes to school. Seriously. Pokemon Sun and Moon. Look it up. Also, Ketchum is an actual English last name. Wikipedia. https://en.wikipedia.org/wiki/Ketchum_(surname) There are also various other small episodes shows, mainly written for new games. An example: The Pokémon Mystery Dungeon Series. I also recommend Pokémon Generations and Pokémon Origins.\")\n      a show menu\n    }\n    case (\"c\") {\n      msg (\"\")\n      msg (\"Ohhh.... yeah, the Card game. This is different since I don't play the card game. I only collect them... for fun. And I like to look at them. As far as I know, the card game can be bought at any Walmart, usually for around $4-$5 per pack. The inside usually contains one good card, some okay cards, and if you're unlucky you'll get a Caterpie card. The game is played in a Magic the Gathering type fashion. Each 'Trainer' has 20 HP points. You try to 'faint' (but everyone says kill) the other Pokemon/trainer. There are energy cards. You get the gist of it. The good part about this game, is at least you don't have to blurt out \\\"I activate my Voltorb... now I use my Electroshock for 30 damage on your active Pokemon.\\\" ...Usually.\")\n      a show menu\n    }\n    case (\"d\") {\n      msg (\"\")\n      msg (\"Combat coming soon. Just set the Pokémon. Remember to save!\")\n      a show menu\n    }\n    case (\"e\") {\n      msg (\"\")\n      msg (\"The berries heal health, and heal other status ailments. Oran Berries and Sitrus Berries heal health. Full restore heals health and heal all status conditions. Pecha Berries heal poison. More about items soon to come.\")\n      a show menu\n    }\n    case (\"l\") {\n      msg (\"\")\n      msg (\"There is no ending. It's an open world RPG. To win the game, you will need to get 8 badges, and then defeat the Elite Four. I'm not even done editing the game yet...\")\n      a show menu\n    }\n    case (\"f\") {\n      msg (\"\")\n      msg (\"You have an inventory limit of 50 items. You have a Pokémon team limit of 8 Pokémon.\")\n      a show menu\n    }\n    case (g) {\n      msg (\"Explaining Pokemon Catching Morality:\")\n    }\n  }\n}\n</code></pre>\n<p>The menu currently doesn't work because the cases currently don't match, but you should be able to copy it fine. Just call the funcrion name again.</p>\n\n",
      "PostDate": "2018-10-08T01:11:44.5377274Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e5476ad2-b90a-40f0-8fc2-e3eb1d9c8708",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, I don't need the entire verb to repeat, just the menu itself. Sorry about the confusion @_@ \r\n\r\nSo you're saying I need to create a function anyway and recall the menu from there like I've been doing with all the other normal menus?\r\n\r\nUPDATE: jmnevil54\r\nThat's what I'm trying to do I think, my code looks similar to yours. Lemme try just using the menu phrase itself.\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, I don't need the entire verb to repeat, just the menu itself. Sorry about the confusion @_@</p>\n<p>So you're saying I need to create a function anyway and recall the menu from there like I've been doing with all the other normal menus?</p>\n<p>UPDATE: jmnevil54<br>\nThat's what I'm trying to do I think, my code looks similar to yours. Lemme try just using the menu phrase itself.</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-10-08T01:13:19.1424189Z",
      "LastEditDate": "2018-10-08T01:17:24.8123008Z",
      "link": null
    },
    {
      "PostId": "3dacbde2-f4ba-4994-b5eb-ce9c0d30ac4c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n--------------\r\n\r\nah, okay... you want just the menu to be displayed again, no wonder you're having trouble, as this is a bit more tricky than just repeating the entire script/verb again\r\n\r\nhere's an example for you (using another Script Attribute, instead of using a Function):\r\n\r\nthe code has both repeating the entire script and repeating the menu displayment only within the entire script\r\n\r\n(there's quite a few methods/designs... this is just one... might need to tailor/match the right method/design to your game/code design needs)\r\n\r\n```\r\n<game name=\"example_game\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    ClearScreen\r\n\r\n    msg (\"Color? (Type in the number of/for your selection)\")\r\n\r\n    do (example_object, \"menu_displayment_script_attribute\")\r\n\r\n    do (example_object, \"menu_handling_script_attribute\")\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"example_object\">\r\n\r\n  <example_stringlist_attribute type=\"stringlist\">\r\n\r\n    <value>red</value>\r\n    <value>blue</value>\r\n    <value>yellow</value>\r\n\r\n  </example_stringlist_attribute>\r\n\r\n  <attr name=\"menu_displayment_script_attribute\" type=\"script\">\r\n\r\n    DisplayList (example_object.example_stringlist_attribute, true)\r\n\r\n  </attr>\r\n\r\n  <attr name=\"menu_handling_script_attribute\" type=\"script\">\r\n\r\n    get input {\r\n      switch (result) {\r\n        case (\"1\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              ClearScreen\r\n              msg (\"Color? (Type in the number of/for your selection)\")\r\n              do (example_object, \"menu_displayment_script_attribute\")\r\n              do (example_object, \"menu_handling_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        }\r\n        case (\"2\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              ClearScreen\r\n              msg (\"Color? (Type in the number of/for your selection)\")\r\n              do (example_object, \"menu_displayment_script_attribute\")\r\n              do (example_object, \"menu_handling_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        }\r\n        case (\"3\") {\r\n          ask (\"Again?\") {\r\n            if (result) {\r\n              ClearScreen\r\n              msg (\"Color? (Type in the number of/for your selection)\")\r\n              do (example_object, \"menu_displayment_script_attribute\")\r\n              do (example_object, \"menu_handling_script_attribute\")\r\n            } else {\r\n              msg (\"Color: \" + result)\r\n            }\r\n          }\r\n        } default {\r\n          msg (\"wrong input, try again\")\r\n          wait {\r\n            ClearScreen\r\n            msg (\"Color? (Type in the number of/for your selection)\")\r\n            do (example_object, \"menu_displayment_script_attribute\")\r\n            do (example_object, \"menu_handling_script_attribute\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  </attr>\r\n\r\n</object>\r\n```\r\n\r\n---------\r\n\r\nthe above code can be improved by putting/running/nesting the two Script Attributes within another Script Attribute and adjusting some of the code around to match up with it\r\n\r\nso you got:\r\n\r\nthe 'main' script attribute (let's call it 'main_script_attribute' for example here)\r\n-> sub script attribute 1 (in the example above, this would be the 'menu displayment' script attribute)\r\n-> sub script attribute 2 (in the example above, this would be the 'menu handling' script attribute)\r\n\r\nwhich allows you to selectively repeat any of them or any combination of them (the main script attribute which does the entire operations/code/scripting, just the sub script attribute 1, jsut the sub script attribute 2, just the sub script attributes 1 and 2, etc etc etc whatever combinations)\r\n\r\n(too lazy to show an example of it, at least for now... if you want an example, ask, and I'll post/write up an example, jsut not right now, lol)\r\n\r\n-----------\r\n\r\nyes, as mrangel said, its the same as having functions (or multiple functions) within functions, as that allows you to call whatever functions and/or combinations of functions, you want\r\n\r\nexcept its with Objects and Script Attributes instead\r\n\r\n(and if you use Delegates with Objects and Script Attributes, then its exactly the same as Functions: being able to return values and take data/inputs/arguments/parameters)",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>ah, okay... you want just the menu to be displayed again, no wonder you're having trouble, as this is a bit more tricky than just repeating the entire script/verb again</p>\n<p>here's an example for you (using another Script Attribute, instead of using a Function):</p>\n<p>the code has both repeating the entire script and repeating the menu displayment only within the entire script</p>\n<p>(there's quite a few methods/designs... this is just one... might need to tailor/match the right method/design to your game/code design needs)</p>\n<pre><code>&lt;game name=\"example_game\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    ClearScreen\n\n    msg (\"Color? (Type in the number of/for your selection)\")\n\n    do (example_object, \"menu_displayment_script_attribute\")\n\n    do (example_object, \"menu_handling_script_attribute\")\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"example_object\"&gt;\n\n  &lt;example_stringlist_attribute type=\"stringlist\"&gt;\n\n    &lt;value&gt;red&lt;/value&gt;\n    &lt;value&gt;blue&lt;/value&gt;\n    &lt;value&gt;yellow&lt;/value&gt;\n\n  &lt;/example_stringlist_attribute&gt;\n\n  &lt;attr name=\"menu_displayment_script_attribute\" type=\"script\"&gt;\n\n    DisplayList (example_object.example_stringlist_attribute, true)\n\n  &lt;/attr&gt;\n\n  &lt;attr name=\"menu_handling_script_attribute\" type=\"script\"&gt;\n\n    get input {\n      switch (result) {\n        case (\"1\") {\n          ask (\"Again?\") {\n            if (result) {\n              ClearScreen\n              msg (\"Color? (Type in the number of/for your selection)\")\n              do (example_object, \"menu_displayment_script_attribute\")\n              do (example_object, \"menu_handling_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        }\n        case (\"2\") {\n          ask (\"Again?\") {\n            if (result) {\n              ClearScreen\n              msg (\"Color? (Type in the number of/for your selection)\")\n              do (example_object, \"menu_displayment_script_attribute\")\n              do (example_object, \"menu_handling_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        }\n        case (\"3\") {\n          ask (\"Again?\") {\n            if (result) {\n              ClearScreen\n              msg (\"Color? (Type in the number of/for your selection)\")\n              do (example_object, \"menu_displayment_script_attribute\")\n              do (example_object, \"menu_handling_script_attribute\")\n            } else {\n              msg (\"Color: \" + result)\n            }\n          }\n        } default {\n          msg (\"wrong input, try again\")\n          wait {\n            ClearScreen\n            msg (\"Color? (Type in the number of/for your selection)\")\n            do (example_object, \"menu_displayment_script_attribute\")\n            do (example_object, \"menu_handling_script_attribute\")\n          }\n        }\n      }\n    }\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>the above code can be improved by putting/running/nesting the two Script Attributes within another Script Attribute and adjusting some of the code around to match up with it</p>\n<p>so you got:</p>\n<p>the 'main' script attribute (let's call it 'main_script_attribute' for example here)<br>\n-&gt; sub script attribute 1 (in the example above, this would be the 'menu displayment' script attribute)<br>\n-&gt; sub script attribute 2 (in the example above, this would be the 'menu handling' script attribute)</p>\n<p>which allows you to selectively repeat any of them or any combination of them (the main script attribute which does the entire operations/code/scripting, just the sub script attribute 1, jsut the sub script attribute 2, just the sub script attributes 1 and 2, etc etc etc whatever combinations)</p>\n<p>(too lazy to show an example of it, at least for now... if you want an example, ask, and I'll post/write up an example, jsut not right now, lol)</p>\n<hr>\n<p>yes, as mrangel said, its the same as having functions (or multiple functions) within functions, as that allows you to call whatever functions and/or combinations of functions, you want</p>\n<p>except its with Objects and Script Attributes instead</p>\n<p>(and if you use Delegates with Objects and Script Attributes, then its exactly the same as Functions: being able to return values and take data/inputs/arguments/parameters)</p>\n\n",
      "PostDate": "2018-10-08T01:30:44.830613Z",
      "LastEditDate": "2018-10-08T01:52:56.3223952Z",
      "link": null
    },
    {
      "PostId": "6e6b2084-07ca-402b-8b43-eecb84877cfc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can create a function, or you can create a script attribute. If you don't pass parameters to it, the two are equivalent; it's just how you prefer it to be organised.\r\n\r\nThere are two ways to use a script attribute for a menu. One way (which I prefer), you have the script that handles the menu response in a script attribute. Then you just call ShowMenu each time you want to repeat it.\r\n\r\nThe other way, you treat the script attribute like a function: it contains the ShowMenu command, and you call it using `do()` each time it's needed.",
      "EditableFormat": "markdown",
      "HTML": "<p>You can create a function, or you can create a script attribute. If you don't pass parameters to it, the two are equivalent; it's just how you prefer it to be organised.</p>\n<p>There are two ways to use a script attribute for a menu. One way (which I prefer), you have the script that handles the menu response in a script attribute. Then you just call ShowMenu each time you want to repeat it.</p>\n<p>The other way, you treat the script attribute like a function: it contains the ShowMenu command, and you call it using <code>do()</code> each time it's needed.</p>\n\n",
      "PostDate": "2018-10-08T01:38:04.4093272Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f80e38ea-59b1-411d-bece-927a00898107",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nthis stuff is getting close to matching my own menu system/organization that I'm still working on for my game (for the character creation and anything else within the game that uses menus)... lol",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>this stuff is getting close to matching my own menu system/organization that I'm still working on for my game (for the character creation and anything else within the game that uses menus)... lol</p>\n\n",
      "PostDate": "2018-10-08T01:55:15.8791919Z",
      "LastEditDate": "2018-10-08T01:55:59.6216013Z",
      "link": null
    },
    {
      "PostId": "dff91986-6c75-4d8d-847b-adb8c053e8c4",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried...\r\n```\r\ndo() \r\n```\r\nat the end of the menu and it didn't repeat it. \r\n\r\nSee the menu is a string list inside of a verb. \r\n\r\nI don't want the entire verb to repeat. I just want the menu itself to repeat. But so far nothing is really working. This is the type of menu I'm using...\r\n```\r\nShowMenu (\"\", game.menunamehere, true) {\r\nswitch (result) {\r\n  case (\"Build A Fire\") {\r\n  do ()\r\n}\r\n}\r\n}\r\n```\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried...</p>\n<pre><code>do() \n</code></pre>\n<p>at the end of the menu and it didn't repeat it.</p>\n<p>See the menu is a string list inside of a verb.</p>\n<p>I don't want the entire verb to repeat. I just want the menu itself to repeat. But so far nothing is really working. This is the type of menu I'm using...</p>\n<pre><code>ShowMenu (\"\", game.menunamehere, true) {\nswitch (result) {\n  case (\"Build A Fire\") {\n  do ()\n}\n}\n}\n</code></pre>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-10-08T02:07:36.8310494Z",
      "LastEditDate": "2018-10-08T02:30:43.9537286Z",
      "link": null
    },
    {
      "PostId": "085c64a2-c072-41fc-8624-80cf9eb23519",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n-----------\r\n\r\nwith the usage of 'do (XXX)' Function, mrangel is referring to doing it similar to:\r\n\r\n(see my big code post above, I have example of it there, except I made the String List an Attribute instead of a temporary String List Variable, they're the same thing though, aside from Attributes being able to be used/re-used anywhere, whereas your 'options' String List Variable can't be used outside of its Script Attribute or Function or Command or whatever parent Element that can do scripting)\r\n\r\n---------\r\n\r\nthe concept is like this:\r\n\r\n(forgive my cooking ignorance, if I'm missing anything and/or have it wrong, lol)\r\n\r\nlets say you're making chocolate chip cookies\r\n\r\nyou are the main operation/task (A Script Attribute), doing these sub tasks/operations (scripting):\r\n1. putting the cookie dough and chocolate chips into the mixer\r\n2. baking the cookie dough + chocolate chips\r\n3. telling your spouse to go buy more cookie dough and/or chocolate chips should you run out or need more\r\n4. making even more chocolate chip cookies, if you get requests for making more of them\r\n\r\nyour spouse is a sub operation/task (Another Script Attribute), with the sub sub tasks/operations (scripting) of:\r\n\r\n1. get cookie dough\r\nand/or\r\n2. chocolate chips\r\n\r\nyour spouse going to get the ingredients is a separate sub operation, as you can tell him/her what to get and while he/she is going to get the stuff, you're able to keep working at your tasks: you can tell him/her to get more and more ingredients over and over again, without disrupting/repeating your own operations/tasks",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>with the usage of 'do (XXX)' Function, mrangel is referring to doing it similar to:</p>\n<p>(see my big code post above, I have example of it there, except I made the String List an Attribute instead of a temporary String List Variable, they're the same thing though, aside from Attributes being able to be used/re-used anywhere, whereas your 'options' String List Variable can't be used outside of its Script Attribute or Function or Command or whatever parent Element that can do scripting)</p>\n<hr>\n<p>the concept is like this:</p>\n<p>(forgive my cooking ignorance, if I'm missing anything and/or have it wrong, lol)</p>\n<p>lets say you're making chocolate chip cookies</p>\n<p>you are the main operation/task (A Script Attribute), doing these sub tasks/operations (scripting):</p>\n<ol>\n<li>putting the cookie dough and chocolate chips into the mixer</li>\n<li>baking the cookie dough + chocolate chips</li>\n<li>telling your spouse to go buy more cookie dough and/or chocolate chips should you run out or need more</li>\n<li>making even more chocolate chip cookies, if you get requests for making more of them</li>\n</ol>\n<p>your spouse is a sub operation/task (Another Script Attribute), with the sub sub tasks/operations (scripting) of:</p>\n<ol>\n<li>get cookie dough<br>\nand/or</li>\n<li>chocolate chips</li>\n</ol>\n<p>your spouse going to get the ingredients is a separate sub operation, as you can tell him/her what to get and while he/she is going to get the stuff, you're able to keep working at your tasks: you can tell him/her to get more and more ingredients over and over again, without disrupting/repeating your own operations/tasks</p>\n\n",
      "PostDate": "2018-10-08T02:30:27.3007355Z",
      "LastEditDate": "2018-10-08T03:08:46.9048087Z",
      "link": null
    },
    {
      "PostId": "2730475b-a529-4f60-a3fc-f945ebabed90",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I see what you mean. I've done that before with something else. \r\n\r\nThanks for the help everyone. I'll try something and see if it works :D :D\r\n\r\nGot it! Appreciate everyone. Thank you so much for your help!\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I see what you mean. I've done that before with something else.</p>\n<p>Thanks for the help everyone. I'll try something and see if it works :D :D</p>\n<p>Got it! Appreciate everyone. Thank you so much for your help!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-10-08T03:03:24.9271671Z",
      "LastEditDate": "2018-10-08T05:26:44.5773878Z",
      "link": null
    },
    {
      "PostId": "c1080c95-39ef-4ec1-9e61-8bfc8b709eb9",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the problem is if you want to be able to just/only repeat the menu displayment coding (via putting the menu displayment coding into a sub Script Attribute) (and meaning NO usage of the 'show menu / ShowMenu' Functions: you got to display your menu another way), then for your main script attribute (or another sub Script Attribute within your main Script Attribute), you're going to have to use the 'get input' for handling/getting the menu selection and doing whatever with it, which takes a bit more coding to do that (as can see by my big code post)\r\n\r\n------\r\n\r\nthe 'show menu / ShowMenu' Functions do two operations:\r\n\r\n1. menu displayment\r\n2. menu selection handling\r\n\r\nso, if you want to separate out the menu displayment, so you can just repeat it as needed, then you can't use these built-in Functions, as we need to separate their two operations by putting each into their own Script Attribute\r\n\r\nand thus why you're going to need to use the 'get input' Function\r\n\r\n----------\r\n\r\neither using one Script Attribute (or Function) that does both operations via using the 'show menu / ShowMenu' Functions, or separating them into two Script Attributes (or Functions): one script attribute (or function) for displaying the menu and the other script attribute (or function) for getting the input/selection and doing whatever with it\r\n\r\nessentially, you're just splitting the 'show menu / ShowMenu' Function's two operations (menu displayment and menu selection handling) into their own Script Attributes (or Functions), as that way, you can then repeat whichever one/operation (menu displayment or menu selection handling) you want or you can repeat both of them (menu displayment and menu selection handling), as well",
      "EditableFormat": "markdown",
      "HTML": "<p>the problem is if you want to be able to just/only repeat the menu displayment coding (via putting the menu displayment coding into a sub Script Attribute) (and meaning NO usage of the 'show menu / ShowMenu' Functions: you got to display your menu another way), then for your main script attribute (or another sub Script Attribute within your main Script Attribute), you're going to have to use the 'get input' for handling/getting the menu selection and doing whatever with it, which takes a bit more coding to do that (as can see by my big code post)</p>\n<hr>\n<p>the 'show menu / ShowMenu' Functions do two operations:</p>\n<ol>\n<li>menu displayment</li>\n<li>menu selection handling</li>\n</ol>\n<p>so, if you want to separate out the menu displayment, so you can just repeat it as needed, then you can't use these built-in Functions, as we need to separate their two operations by putting each into their own Script Attribute</p>\n<p>and thus why you're going to need to use the 'get input' Function</p>\n<hr>\n<p>either using one Script Attribute (or Function) that does both operations via using the 'show menu / ShowMenu' Functions, or separating them into two Script Attributes (or Functions): one script attribute (or function) for displaying the menu and the other script attribute (or function) for getting the input/selection and doing whatever with it</p>\n<p>essentially, you're just splitting the 'show menu / ShowMenu' Function's two operations (menu displayment and menu selection handling) into their own Script Attributes (or Functions), as that way, you can then repeat whichever one/operation (menu displayment or menu selection handling) you want or you can repeat both of them (menu displayment and menu selection handling), as well</p>\n\n",
      "PostDate": "2018-10-08T03:13:27.0921479Z",
      "LastEditDate": "2018-10-08T03:26:03.5873257Z",
      "link": null
    },
    {
      "PostId": "c537f930-cc3b-410b-b85f-452679646628",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "to do/call and also to re-do/re-call/repeat/loop Script Attributes:\r\n\r\n```\r\ndo (OBJECT, \"SCRIPT_ATTRIBUTE\")\r\n\r\n// or\r\n\r\ninvoke (OBJECT.SCRIPT_ATTRIBUTE)\r\n```\r\n\r\n---------------\r\n\r\nto do/call and also to re-do/re-call/repeat/loop Functions:\r\n\r\n```\r\nFUNCTION\r\n\r\n// or, if got/using Parameters:\r\n\r\nFUNCTION (XXX)\r\n```\r\n\r\n-------\r\n\r\nsee how they're nearly the same... the only difference is that Script Attributes are contained by specific Objects, so you got to tell what Object has the Script Attribute that you want to use, as well as what Script Attribute, you want to be using... whereas, that's not the case with Functions as they're their own \"objects\" (if you will) that ONLY contain scripting itself (no need for a Script Attribute for holding the scripting)",
      "EditableFormat": "markdown",
      "HTML": "<p>to do/call and also to re-do/re-call/repeat/loop Script Attributes:</p>\n<pre><code>do (OBJECT, \"SCRIPT_ATTRIBUTE\")\n\n// or\n\ninvoke (OBJECT.SCRIPT_ATTRIBUTE)\n</code></pre>\n<hr>\n<p>to do/call and also to re-do/re-call/repeat/loop Functions:</p>\n<pre><code>FUNCTION\n\n// or, if got/using Parameters:\n\nFUNCTION (XXX)\n</code></pre>\n<hr>\n<p>see how they're nearly the same... the only difference is that Script Attributes are contained by specific Objects, so you got to tell what Object has the Script Attribute that you want to use, as well as what Script Attribute, you want to be using... whereas, that's not the case with Functions as they're their own \"objects\" (if you will) that ONLY contain scripting itself (no need for a Script Attribute for holding the scripting)</p>\n\n",
      "PostDate": "2018-10-08T03:32:25.328442Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "da2ef9ba-b2ff-419b-a370-1610e22ebb47",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "nevermind, delete post\r\n\r\n(is there a way to delete your posts yet?)",
      "EditableFormat": "markdown",
      "HTML": "<p>nevermind, delete post</p>\n<p>(is there a way to delete your posts yet?)</p>\n\n",
      "PostDate": "2018-10-08T03:37:19.7848866Z",
      "LastEditDate": "2018-10-08T03:43:23.2314264Z",
      "link": null
    }
  ]
}
