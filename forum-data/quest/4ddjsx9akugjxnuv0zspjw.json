{
  "Topic": {
    "TopicId": "4ddjsx9akugjxnuv0zspjw",
    "ForumId": "10",
    "Title": "Attributes vs Flags?",
    "LastUpdated": "2020-11-23T00:58:13.4298526Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cb5cd6e3-307b-4927-bd5a-612d6cf0b790",
      "UserId": 313553,
      "Username": "UnclearImage86",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I made an attribute for a room named \"hasBeenVisited\" and set it to false, then triggered a script on the exit. So my first time going through an exit displays a different message than after follow up movements through the same exit. \r\n\r\nI can use attributes, and I can use flags. Does anyone have documentation on the difference between the two? Is there a point to using one or the other?\r\n\r\nAre flags protected/ only able to be accessed  by the parent object?",
      "EditableFormat": "markdown",
      "HTML": "<p>I made an attribute for a room named \"hasBeenVisited\" and set it to false, then triggered a script on the exit. So my first time going through an exit displays a different message than after follow up movements through the same exit.</p>\n<p>I can use attributes, and I can use flags. Does anyone have documentation on the difference between the two? Is there a point to using one or the other?</p>\n<p>Are flags protected/ only able to be accessed  by the parent object?</p>\n\n",
      "PostDate": "2020-11-23T00:58:13.4298526Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9aba2656-e53d-4770-90c1-822adc0c3c66",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I can use attributes, and I can use flags. Does anyone have documentation on the difference between the two? Is there a point to using one or the other?\r\n\r\nFor this purpose, I would say, there is not much of a difference. A flag is an attribute with one of two possible values, true or false. \r\nAn attribute can be many things including the functionality of a flag. If you just have to check between two possible states the flag is enough. \r\n\r\n> Are flags protected/ only able to be accessed by the parent object?\r\n\r\nNo, you can <s>access</s> edit and check a flag from everywhere. <s><i>However, the flag \"hasBeenVisited\" is not needed, because Quest has this flag built-in already. All objects have by default the flag called \"visited\" set to false</i></s>\r\n\r\n[http://docs.textadventures.co.uk/quest/attributes/visited.html](http://docs.textadventures.co.uk/quest/attributes/visited.html)\r\n[http://docs.textadventures.co.uk/quest/attributes.html](http://docs.textadventures.co.uk/quest/attributes.html)\r\n[https://docs.textadventures.co.uk/quest/tutorial/](https://docs.textadventures.co.uk/quest/tutorial/)\r\n[https://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html](https://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html)\r\n[http://docs.textadventures.co.uk/quest/tutorial/custom_attributes.html](http://docs.textadventures.co.uk/quest/tutorial/custom_attributes.html)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I can use attributes, and I can use flags. Does anyone have documentation on the difference between the two? Is there a point to using one or the other?</p>\n</blockquote>\n<p>For this purpose, I would say, there is not much of a difference. A flag is an attribute with one of two possible values, true or false.<br>\nAn attribute can be many things including the functionality of a flag. If you just have to check between two possible states the flag is enough.</p>\n<blockquote>\n<p>Are flags protected/ only able to be accessed by the parent object?</p>\n</blockquote>\n<p>No, you can <s>access</s> edit and check a flag from everywhere. <s><i>However, the flag \"hasBeenVisited\" is not needed, because Quest has this flag built-in already. All objects have by default the flag called \"visited\" set to false</i></s></p>\n<p><a href=\"http://docs.textadventures.co.uk/quest/attributes/visited.html\">http://docs.textadventures.co.uk/quest/attributes/visited.html</a><br>\n<a href=\"http://docs.textadventures.co.uk/quest/attributes.html\">http://docs.textadventures.co.uk/quest/attributes.html</a><br>\n<a href=\"https://docs.textadventures.co.uk/quest/tutorial/\">https://docs.textadventures.co.uk/quest/tutorial/</a><br>\n<a href=\"https://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html\">https://docs.textadventures.co.uk/quest/tutorial/more_things_to_do_with_objects.html</a><br>\n<a href=\"http://docs.textadventures.co.uk/quest/tutorial/custom_attributes.html\">http://docs.textadventures.co.uk/quest/tutorial/custom_attributes.html</a></p>\n\n",
      "PostDate": "2020-11-23T03:52:58.5695279Z",
      "LastEditDate": "2020-11-24T16:32:18.0853289Z",
      "link": null
    },
    {
      "PostId": "d0d1b277-21f6-45d8-ba9a-857debf7f357",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Attributes are better used when you require more than one status on an object at once. For example, if an object could be damp, wet, soaked, dry, parched or arid whilst at the same time being full, or empty, or too light, just right or too heavy.\r\n\r\nAlthough I'm sure someone with much more experience than me can find a definitively better example!",
      "EditableFormat": "markdown",
      "HTML": "<p>Attributes are better used when you require more than one status on an object at once. For example, if an object could be damp, wet, soaked, dry, parched or arid whilst at the same time being full, or empty, or too light, just right or too heavy.</p>\n<p>Although I'm sure someone with much more experience than me can find a definitively better example!</p>\n\n",
      "PostDate": "2020-11-24T14:41:21.2373284Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3fff3cc1-fb65-4283-a121-f3a50231108e",
      "UserId": 32920,
      "Username": "Father",
      "AvatarUrl": "http://i.imgur.com/ogRXH9lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First time scripts are another option.",
      "EditableFormat": "markdown",
      "HTML": "<p>First time scripts are another option.</p>\n\n",
      "PostDate": "2020-11-24T15:00:57.3199786Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8497b8f5-8d99-4417-b509-7d4a645a68be",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I can use attributes, and I can use flags. Does anyone have documentation on the difference between the two?\r\n\r\nQuest doesn't have any specific concept of a 'flag'. It's just another name for an attribute. A few places in function names and in the GUI editor, the word \"flag\" is used to mean an attribute that is set to `true` or `false`, but people who are used to other languages might use it occasionally to mean other types of attributes.\r\n\r\nThey're just different names for the same thing.\r\n<hr />\r\n\r\n@Curt\r\n> However, the flag **\"hasBeenVisited\"** <u>is not needed</u>, because Quest has this flag built-in already.\r\n\r\nNot true. The core `visited` flag is set the first time the player *enters* a room. The OP's `hasBeenVisited` flag would be set the first time the player *leaves* the room. The similar names of these two might be confusing, but they serve different purposes and aren't interchangeable.\r\n\r\n<hr/>\r\n\r\n@Father\r\n> First time scripts are another option.\r\n\r\nGood call, I was also going to suggest this.\r\n\r\nIf you want something different to display the first time some event happens, it may be simpler to use the features Quest already has for those purposes.\r\n\r\nFor example, your script could be:\r\n```\r\nfirsttime {\r\n  msg (\"You leave the room.\")\r\n}\r\notherwise {\r\n  msg (\"You leave the room again.\")\r\n}\r\n```\r\n\r\nThere is a similar (but less efficient) mechanism within the text processor. So anywhere there is some text, you can have it display differently the first time it is seen. For example, a room's description could include:\r\n```\r\n{once:You've never seen a light this bright as this before.}\r\n{notfirst:The light is just as bright as the last time you looked.}\r\n```\r\n(I'm not sure why it was decided to use `firsttime` and `otherwise` in scripts, but `once` and `notfirst` in the text processor. It seems to me that it would make more sense to use the same words in both (firsttime and notfirst maybe), but we just have to remember which ones Quest uses)\r\n\r\nIt's also worth noting that the script version tracks the first time a particular script is run. So if you have the same script on two exits, it will show you the firsttime message the first time you use each exit (once for each exit). But with the text processor, if you have the *exact* same message in two places, the `{once:` block will consider them to be the same, and only appear for the one that the player comes across first.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I can use attributes, and I can use flags. Does anyone have documentation on the difference between the two?</p>\n</blockquote>\n<p>Quest doesn't have any specific concept of a 'flag'. It's just another name for an attribute. A few places in function names and in the GUI editor, the word \"flag\" is used to mean an attribute that is set to <code>true</code> or <code>false</code>, but people who are used to other languages might use it occasionally to mean other types of attributes.</p>\n<p>They're just different names for the same thing.</p>\n<hr>\n<p>@Curt</p>\n<blockquote>\n<p>However, the flag <strong>\"hasBeenVisited\"</strong> <u>is not needed</u>, because Quest has this flag built-in already.</p>\n</blockquote>\n<p>Not true. The core <code>visited</code> flag is set the first time the player <em>enters</em> a room. The OP's <code>hasBeenVisited</code> flag would be set the first time the player <em>leaves</em> the room. The similar names of these two might be confusing, but they serve different purposes and aren't interchangeable.</p>\n<hr>\n<p>@Father</p>\n<blockquote>\n<p>First time scripts are another option.</p>\n</blockquote>\n<p>Good call, I was also going to suggest this.</p>\n<p>If you want something different to display the first time some event happens, it may be simpler to use the features Quest already has for those purposes.</p>\n<p>For example, your script could be:</p>\n<pre><code>firsttime {\n  msg (\"You leave the room.\")\n}\notherwise {\n  msg (\"You leave the room again.\")\n}\n</code></pre>\n<p>There is a similar (but less efficient) mechanism within the text processor. So anywhere there is some text, you can have it display differently the first time it is seen. For example, a room's description could include:</p>\n<pre><code>{once:You've never seen a light this bright as this before.}\n{notfirst:The light is just as bright as the last time you looked.}\n</code></pre>\n<p>(I'm not sure why it was decided to use <code>firsttime</code> and <code>otherwise</code> in scripts, but <code>once</code> and <code>notfirst</code> in the text processor. It seems to me that it would make more sense to use the same words in both (firsttime and notfirst maybe), but we just have to remember which ones Quest uses)</p>\n<p>It's also worth noting that the script version tracks the first time a particular script is run. So if you have the same script on two exits, it will show you the firsttime message the first time you use each exit (once for each exit). But with the text processor, if you have the <em>exact</em> same message in two places, the <code>{once:</code> block will consider them to be the same, and only appear for the one that the player comes across first.</p>\n\n",
      "PostDate": "2020-11-24T15:28:34.1987601Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
