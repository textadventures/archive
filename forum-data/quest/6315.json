{
  "Topic": {
    "TopicId": "6315",
    "ForumId": "10",
    "Title": "Inventory Worn Problem! Argh! [SOLVED]",
    "LastUpdated": "2016-05-13T00:48:11+01:00",
    "ReplyCount": 17
  },
  "Posts": [
    {
      "PostId": "42748",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Hm. So I created an awesome way to condense &quot;Clothing&quot; in my game's inventory (the same way I condensed the container items). I move them into a player daughter object called &quot;Worn Clothing&quot; once they are &quot;worn&quot;. After wearing, [i:3b0cjk0n]shirt.parent = Worn Clothing[/i:3b0cjk0n]. It seems to work perfectly, except for one itty bitty little problem :3 The player cannot 'remove' the clothing once it's put into this daughter storage item.\n\nI'm using Chase's Wear Library. \n\nAny ideas why they can't be removed? Do I need to specify in the &quot;wearable tab&quot;, after removing [i:3b0cjk0n]shirt.parent=player[/i:3b0cjk0n]? Because I tried that and it didn't work.",
      "EditableFormat": "bbcode",
      "HTML": "Hm. So I created an awesome way to condense &quot;Clothing&quot; in my game's inventory (the same way I condensed the container items). I move them into a player daughter object called &quot;Worn Clothing&quot; once they are &quot;worn&quot;. After wearing, <span style=\"font-style:italic;\">shirt.parent = Worn Clothing</span>. It seems to work perfectly, except for one itty bitty little problem :3 The player cannot 'remove' the clothing once it's put into this daughter storage item.<br/><br/>I'm using Chase's Wear Library. <br/><br/>Any ideas why they can't be removed? Do I need to specify in the &quot;wearable tab&quot;, after removing <span style=\"font-style:italic;\">shirt.parent=player</span>? Because I tried that and it didn't work.",
      "PostDate": "2016-05-11T07:12:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42751",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "When the player types REMOVE SHIRT, Quest looks for an item matching SHIRT. But it only looks in the player inventory and the current room, and not in the Worn Clothing room. I tried to do just this when we were looking at a second inventory in the other thread, and abandoned it because I hit the same problem.\n\nThinking about it again, a solution might be to change the ScopeInventory function, so it includes your new room. The code would look like this:\n[code:3rfd09sp]result = NewObjectList()\nforeach (obj, GetAllChildObjects(game&#46;pov)) {\n  if (ContainsVisible(game&#46;pov, obj)) {\n    list add (result, obj)\n  }\n}\nforeach (obj, GetAllChildObjects(Worn Clothing)) {\n  list add (result, obj)\n}\nreturn (result)[/code:3rfd09sp]\nI am not exactly sure what you already have set up, so no guarantee!",
      "EditableFormat": "bbcode",
      "HTML": "When the player types REMOVE SHIRT, Quest looks for an item matching SHIRT. But it only looks in the player inventory and the current room, and not in the Worn Clothing room. I tried to do just this when we were looking at a second inventory in the other thread, and abandoned it because I hit the same problem.<br/><br/>Thinking about it again, a solution might be to change the ScopeInventory function, so it includes your new room. The code would look like this:<br/><pre><code>result = NewObjectList()<br/>foreach (obj, GetAllChildObjects(game&#46;pov)) {<br/>  if (ContainsVisible(game&#46;pov, obj)) {<br/>    list add (result, obj)<br/>  }<br/>}<br/>foreach (obj, GetAllChildObjects(Worn Clothing)) {<br/>  list add (result, obj)<br/>}<br/>return (result)</code></pre><br/>I am not exactly sure what you already have set up, so no guarantee!",
      "PostDate": "2016-05-11T08:07:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42756",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "this would be a global change, with it searching through all of the containers' sub-items/objects/containers (indirect children) in her inventory, which probably will be fine if she limits her 'ScopeInventory()' usage just for this purpose.\n\notherwise, it might be better to implement this into her/Chase's custom 'wear' (or whatever Verb/Commands), so it will just do this functionality then upon its use, leaving the 'ScopeInventory()' to work as it originally did/does (to just get the direct children, not all of the indirect children).\n\nanother option is to change the code so it'll only do it (search the indirect children) for a specific container object, her 'storage' object, and not every container object in her inventory.",
      "EditableFormat": "bbcode",
      "HTML": "this would be a global change, with it searching through all of the containers' sub-items/objects/containers (indirect children) in her inventory, which probably will be fine if she limits her 'ScopeInventory()' usage just for this purpose.<br/><br/>otherwise, it might be better to implement this into her/Chase's custom 'wear' (or whatever Verb/Commands), so it will just do this functionality then upon its use, leaving the 'ScopeInventory()' to work as it originally did/does (to just get the direct children, not all of the indirect children).<br/><br/>another option is to change the code so it'll only do it (search the indirect children) for a specific container object, her 'storage' object, and not every container object in her inventory.",
      "PostDate": "2016-05-11T14:23:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42758",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Yes, this will be a global change, so needs careful thought.\n\nThe problem is you need Quest to include that other room when it is matching items in a command. You would have to change REMOVE to use &quot;remove #text#&quot;, and then do the pattern matching yourself. TAKE &lt;object1&gt; FROM &lt;object2&gt; would be the same, and possibly others. It is doable, but a lot more work, and more scope for going wrong.\n\nI am assuming this room, Worn Clothing, will not be used for anything except worn clothing, including backpacks, so it should be safe to include everything in there, including sub-items.",
      "EditableFormat": "bbcode",
      "HTML": "Yes, this will be a global change, so needs careful thought.<br/><br/>The problem is you need Quest to include that other room when it is matching items in a command. You would have to change REMOVE to use &quot;remove #text#&quot;, and then do the pattern matching yourself. TAKE &lt;object1&gt; FROM &lt;object2&gt; would be the same, and possibly others. It is doable, but a lot more work, and more scope for going wrong.<br/><br/>I am assuming this room, Worn Clothing, will not be used for anything except worn clothing, including backpacks, so it should be safe to include everything in there, including sub-items.",
      "PostDate": "2016-05-11T15:01:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42762",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Actually, &quot;Worn Clothing&quot; is just an openable/closable object, not a room. I attached an object to the player.object called &quot;Worn Clothing&quot; and had it become a parent to clothing being worn by the player. The &quot;Worn Clothing&quot; object is inside the player inventory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Does that make it better or help any?",
      "EditableFormat": "bbcode",
      "HTML": "Actually, &quot;Worn Clothing&quot; is just an openable/closable object, not a room. I attached an object to the player.object called &quot;Worn Clothing&quot; and had it become a parent to clothing being worn by the player. The &quot;Worn Clothing&quot; object is inside the player inventory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Does that make it better or help any?",
      "PostDate": "2016-05-11T19:00:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42766",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I should post the coding work I did on this long ago (which I never done even though mentioning about it in sora's stackable library)... I'll have it posted up on the weekend, so you can take a look at it.\n\n---------\n\njust been looking over it (luckily I was able to find it, lol)...\n\nit's really simple... I'll have something up on the weekend...\n\nwhat I ended up doing was to make custom Verbs to handle storage specifically, that way I'm not messing with any other functionality (you can still 'take' and 'drop' like normal, wear/equip/remove/unequip like normal, and etc):\n\n'store' Verb (transfers/moves items from inventory or where-ever location, into the correct storage sub-container inside of the inventory storage container): so for example, you could 'take' the Object (moves the object from the room or an Object in the room, to your inventory, aka the 'player' Object), and then 'store' it (moves the object from the inventory, aka 'player' Object, to the storage sub-container object inside of the storage container object inside of the inventory/'player'_object. Or, you could just 'store' the object (moving it from the room or object inside of the room, that it is in, to the storage sub-container object inside of the storage container object inside of the inventory/'player'_object directly. By having a 'store' Verb, you can still do/use 'take' putting stuff into your inventory, or you can 'store' putting the object into a subcontainer inside of a container inside of the inventory, or you can do both: take and then store (maybe at the time, you just wanted to take the object, having it in your inventory, as you thought you'd be using that item soon, but after not using it for awhile, you decide to store it, waiting for when you finall discover or get to its use).\n\n'destore' Verb (transfers/moves items from the storage sub-containers into the inventory: you could then use the default 'drop' Verb normally, to move/transfer from the inventory to the room you're in). the same stuff about store applies here for destore: you can 'destore' (moving/&quot;dropping&quot; the item into your inventory), or you can do the normal 'drop' (moving &quot;dropping&quot; the item into the room that you're in as usual/normally).\n\n-------\n\nI literally just did a very simple long if/switch chain for the 'store' Verb, conceptual example only (not actual code) for idea of it:\n\n(I'll post the actual code over the weekend, this is just to &quot;tidy over&quot; until then)\n\n[code:h2eb8689]// I forgot what the built-in code for the openable/closeable container type (Object Type/Inherited Attribute), is&#46;&#46;&#46; meh, so just pretend the 'storage' objects are openable/closeable containers&#46;&#46;&#46; (initially starting as being closed obviously, as that's the point of this design, to NOT clutter up the inventory&#58; you click on them to open them up seeing all their sub-items/objects, as you want to, and click again to hide them, keeping your inventory not cluttered, just like with folder organization), ??? &#58; &lt;inherit name=&quot;closed_container&quot; /&gt;, &lt;inherit name=&quot;openable_conainer&quot; /&gt;, &lt;inherit name=&quot;container&quot; /&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;object name=&quot;storage_object&quot;&gt;\n    &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;storage&lt;/attr&gt;\n    &lt;object name=&quot;spell_storage_object&quot;&gt;\n      &lt;object name=&quot;fire_spell_storage_object&quot;&gt;\n      &lt;/object&gt;\n      &lt;object name=&quot;water_spell_storage_object&quot;&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;equipment_storage_object&quot;&gt;\n      &lt;object name=&quot;weapon_equipment_storage_object&quot;&gt;\n        &lt;object name=&quot;sword_weapon_equipment_storage_object&quot;\n        &lt;/object&gt;\n        &lt;object name=&quot;axe_weapon_equipment_storage_object&quot;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;object name=&quot;armor_equipment_storage_object&quot;&gt;\n        &lt;object name=&quot;headwear_armor_equipment_storage_object&quot;\n        &lt;/object&gt;\n        &lt;object name=&quot;footwear_armor_equipment_storage_object&quot;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;item_storage&quot;&gt;\n      &lt;object name=&quot;healing/curative&quot;&gt;\n      &lt;/object&gt;\n      &lt;object name=&quot;battle&quot;&gt;\n      &lt;/object&gt;\n      &lt;object name=&quot;quest&quot;&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n// and here's the &quot;pseudo-scripting&quot;, *conceptual only*, for my custom 'store' Verb&#58;\n\nif (item&#46;object_type = &quot;spell&quot;) {\n  if (item&#46;spell_type = &quot;fire&quot;) {\n    item&#46;parent = fire_spell_storage_object\n  } else if (item&#46;spell_type = &quot;water&quot;) {\n    item&#46;parent = water_spell_storage_object\n  }\n} else if (item&#46;object_type = &quot;equipment&quot;) {\n  if (item&#46;equipment_type = &quot;weapon&quot;) {\n    if (item&#46;weapon_type = &quot;sword&quot;) {\n      item&#46;parent = sword_weapon_equipment_storage_object\n    } else if (item&#46;weapon_type = &quot;axe&quot;) {\n      item&#46;parent = axe_weapon_equipment_storage_object\n    }\n  } else if (item&#46;equipment_type = &quot;armor&quot;) {\n    if (item&#46;armor_type = &quot;headwear&quot;) {\n      item&#46;parent = headwear_armor_equipment_storage_object\n    } else if (item&#46;armor_type = &quot;footwear&quot;) {\n      item&#46;parent = footwear_armor_equipment_storage_object\n    }\n  }\n} else if (item&#46;object_type = &quot;item&quot;) {\n  if (item&#46;item_type = &quot;healing/curative&quot;) {\n  } else if (item&#46;item_type = &quot;battle&quot;) {\n  } else if (item&#46;item_type = &quot;quest/mission/non-useable/plot-story&quot;) {\n  }\n}[/code:h2eb8689]\n\n-------\n\nthe issue again, is applying/implementing this design with Chase's Wearables design and/or your own game's design",
      "EditableFormat": "bbcode",
      "HTML": "I should post the coding work I did on this long ago (which I never done even though mentioning about it in sora's stackable library)... I'll have it posted up on the weekend, so you can take a look at it.<br/><br/>---------<br/><br/>just been looking over it (luckily I was able to find it, lol)...<br/><br/>it's really simple... I'll have something up on the weekend...<br/><br/>what I ended up doing was to make custom Verbs to handle storage specifically, that way I'm not messing with any other functionality (you can still 'take' and 'drop' like normal, wear/equip/remove/unequip like normal, and etc):<br/><br/>'store' Verb (transfers/moves items from inventory or where-ever location, into the correct storage sub-container inside of the inventory storage container): so for example, you could 'take' the Object (moves the object from the room or an Object in the room, to your inventory, aka the 'player' Object), and then 'store' it (moves the object from the inventory, aka 'player' Object, to the storage sub-container object inside of the storage container object inside of the inventory/'player'_object. Or, you could just 'store' the object (moving it from the room or object inside of the room, that it is in, to the storage sub-container object inside of the storage container object inside of the inventory/'player'_object directly. By having a 'store' Verb, you can still do/use 'take' putting stuff into your inventory, or you can 'store' putting the object into a subcontainer inside of a container inside of the inventory, or you can do both: take and then store (maybe at the time, you just wanted to take the object, having it in your inventory, as you thought you'd be using that item soon, but after not using it for awhile, you decide to store it, waiting for when you finall discover or get to its use).<br/><br/>'destore' Verb (transfers/moves items from the storage sub-containers into the inventory: you could then use the default 'drop' Verb normally, to move/transfer from the inventory to the room you're in). the same stuff about store applies here for destore: you can 'destore' (moving/&quot;dropping&quot; the item into your inventory), or you can do the normal 'drop' (moving &quot;dropping&quot; the item into the room that you're in as usual/normally).<br/><br/>-------<br/><br/>I literally just did a very simple long if/switch chain for the 'store' Verb, conceptual example only (not actual code) for idea of it:<br/><br/>(I'll post the actual code over the weekend, this is just to &quot;tidy over&quot; until then)<br/><br/><pre><code>// I forgot what the built-in code for the openable/closeable container type (Object Type/Inherited Attribute), is&#46;&#46;&#46; meh, so just pretend the 'storage' objects are openable/closeable containers&#46;&#46;&#46; (initially starting as being closed obviously, as that's the point of this design, to NOT clutter up the inventory&#58; you click on them to open them up seeing all their sub-items/objects, as you want to, and click again to hide them, keeping your inventory not cluttered, just like with folder organization), ??? &#58; &lt;inherit name=&quot;closed_container&quot; /&gt;, &lt;inherit name=&quot;openable_conainer&quot; /&gt;, &lt;inherit name=&quot;container&quot; /&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;object name=&quot;storage_object&quot;&gt;<br/>    &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;storage&lt;/attr&gt;<br/>    &lt;object name=&quot;spell_storage_object&quot;&gt;<br/>      &lt;object name=&quot;fire_spell_storage_object&quot;&gt;<br/>      &lt;/object&gt;<br/>      &lt;object name=&quot;water_spell_storage_object&quot;&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;equipment_storage_object&quot;&gt;<br/>      &lt;object name=&quot;weapon_equipment_storage_object&quot;&gt;<br/>        &lt;object name=&quot;sword_weapon_equipment_storage_object&quot;<br/>        &lt;/object&gt;<br/>        &lt;object name=&quot;axe_weapon_equipment_storage_object&quot;<br/>        &lt;/object&gt;<br/>      &lt;/object&gt;<br/>      &lt;object name=&quot;armor_equipment_storage_object&quot;&gt;<br/>        &lt;object name=&quot;headwear_armor_equipment_storage_object&quot;<br/>        &lt;/object&gt;<br/>        &lt;object name=&quot;footwear_armor_equipment_storage_object&quot;<br/>        &lt;/object&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;item_storage&quot;&gt;<br/>      &lt;object name=&quot;healing/curative&quot;&gt;<br/>      &lt;/object&gt;<br/>      &lt;object name=&quot;battle&quot;&gt;<br/>      &lt;/object&gt;<br/>      &lt;object name=&quot;quest&quot;&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/object&gt;<br/><br/>// and here's the &quot;pseudo-scripting&quot;, *conceptual only*, for my custom 'store' Verb&#58;<br/><br/>if (item&#46;object_type = &quot;spell&quot;) {<br/>  if (item&#46;spell_type = &quot;fire&quot;) {<br/>    item&#46;parent = fire_spell_storage_object<br/>  } else if (item&#46;spell_type = &quot;water&quot;) {<br/>    item&#46;parent = water_spell_storage_object<br/>  }<br/>} else if (item&#46;object_type = &quot;equipment&quot;) {<br/>  if (item&#46;equipment_type = &quot;weapon&quot;) {<br/>    if (item&#46;weapon_type = &quot;sword&quot;) {<br/>      item&#46;parent = sword_weapon_equipment_storage_object<br/>    } else if (item&#46;weapon_type = &quot;axe&quot;) {<br/>      item&#46;parent = axe_weapon_equipment_storage_object<br/>    }<br/>  } else if (item&#46;equipment_type = &quot;armor&quot;) {<br/>    if (item&#46;armor_type = &quot;headwear&quot;) {<br/>      item&#46;parent = headwear_armor_equipment_storage_object<br/>    } else if (item&#46;armor_type = &quot;footwear&quot;) {<br/>      item&#46;parent = footwear_armor_equipment_storage_object<br/>    }<br/>  }<br/>} else if (item&#46;object_type = &quot;item&quot;) {<br/>  if (item&#46;item_type = &quot;healing/curative&quot;) {<br/>  } else if (item&#46;item_type = &quot;battle&quot;) {<br/>  } else if (item&#46;item_type = &quot;quest/mission/non-useable/plot-story&quot;) {<br/>  }<br/>}</code></pre><br/><br/>-------<br/><br/>the issue again, is applying/implementing this design with Chase's Wearables design and/or your own game's design",
      "PostDate": "2016-05-11T20:26:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42767",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Anonynn&quot;:1atbuzr9]Actually, &quot;Worn Clothing&quot; is just an openable/closable object, not a room. I attached an object to the player.object called &quot;Worn Clothing&quot; and had it become a parent to clothing being worn by the player. The &quot;Worn Clothing&quot; object is inside the player inventory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Does that make it better or help any?[/quote:1atbuzr9]\nOkay, I misunderstood. Is the issue just that the container is closed?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Anonynn wrote:</cite>Actually, &quot;Worn Clothing&quot; is just an openable/closable object, not a room. I attached an object to the player.object called &quot;Worn Clothing&quot; and had it become a parent to clothing being worn by the player. The &quot;Worn Clothing&quot; object is inside the player inventory. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Does that make it better or help any?</blockquote><br/>Okay, I misunderstood. Is the issue just that the container is closed?",
      "PostDate": "2016-05-11T21:14:59+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42771",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:3htsik09]Okay, I misunderstood. Is the issue just that the container is closed?[/quote:3htsik09]\n\nNope! It happens when the container's open as well. So for example...\n\n[u:3htsik09]Inventory[/u:3htsik09]\nitemname\nitemname\nshirt\nWorn Clothing (closed)\n\n[i:3htsik09]wear shirt [/i:3htsik09]. You wear the shirt <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\n[u:3htsik09]Inventory[/u:3htsik09]\nitemname\nitemname\nWorn Clothing (closed)\n\n[u:3htsik09]Inventory[/u:3htsik09]\nitemname\nitemname\nWorn Clothing (open)\nshirt (worn) \n\n[b:3htsik09]Remove shirt. \n\nYou can't remove it. [/b:3htsik09]  &lt;----- this is the problem. \n\n[u:3htsik09]Inventory[/u:3htsik09]\nitemname\nitemname\nWorn Clothing (closed)\n\nRemove shirt. I can't see that ((which is fine, the issue is removing it when you can see it))\n\n\n\nDoes that make it more clear? x_X",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Okay, I misunderstood. Is the issue just that the container is closed?</p></blockquote><br/><br/>Nope! It happens when the container's open as well. So for example...<br/><br/><span style=\"text-decoration:underline;\">Inventory</span><br/>itemname<br/>itemname<br/>shirt<br/>Worn Clothing (closed)<br/><br/><span style=\"font-style:italic;\">wear shirt </span>. You wear the shirt <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/><span style=\"text-decoration:underline;\">Inventory</span><br/>itemname<br/>itemname<br/>Worn Clothing (closed)<br/><br/><span style=\"text-decoration:underline;\">Inventory</span><br/>itemname<br/>itemname<br/>Worn Clothing (open)<br/>shirt (worn) <br/><br/><span style=\"font-weight:bold;\">Remove shirt. <br/><br/>You can't remove it. </span>  &lt;----- this is the problem. <br/><br/><span style=\"text-decoration:underline;\">Inventory</span><br/>itemname<br/>itemname<br/>Worn Clothing (closed)<br/><br/>Remove shirt. I can't see that ((which is fine, the issue is removing it when you can see it))<br/><br/><br/><br/>Does that make it more clear? x_X",
      "PostDate": "2016-05-11T22:48:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42784",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "can you post your code for 'remove' Verb/Command, as this should be a quick fix to get it working...\n\nas all you need for the Verb is this:\n\nblah_object.parent = player // if you want to move it out of where-ever (so it should work if it's in your 'worn clothing' container Object), as it doesn't even care where the Object is, it just sets it to being inside/contained_within the specified Object, and into the 'player' Object (your &quot;inventory&quot;), otherwise, change 'player' to where-ever you want it to be removed to.\n\n------\n\nthe only reason I could possible see how it might not be removeable... is if you were to have an Object Type that prevents it from being dropped, and applied that to both your 'worn clothing' storage object and your 'shirt' object too, but even then I'm not sure if setting that built-in 'dropable' Boolean to false would prevent direct code of moving the object, such as using the 'parent' Object Attribute or 'MoveObject()' Script, but if the built-in/default 'remove' Verb's internal coding does/would check the Attribute, then it wouldn't thus do the drop. So, I'm confused... which is why I'd like to see your 'remove' Verb's code...\n\n-----\n\nif the 'remove' Verb/Command is Chase's altered code... then it should still be easy to fix/get working... just adding in the 'blah_object.parent=player', but that still wouldn't explain why 'remove' Verb/Command wouldn't work in the first place... unless Chase used his own code lines on how to do its removal... meh... I'm confused why its not working... lol",
      "EditableFormat": "bbcode",
      "HTML": "can you post your code for 'remove' Verb/Command, as this should be a quick fix to get it working...<br/><br/>as all you need for the Verb is this:<br/><br/>blah_object.parent = player // if you want to move it out of where-ever (so it should work if it's in your 'worn clothing' container Object), as it doesn't even care where the Object is, it just sets it to being inside/contained_within the specified Object, and into the 'player' Object (your &quot;inventory&quot;), otherwise, change 'player' to where-ever you want it to be removed to.<br/><br/>------<br/><br/>the only reason I could possible see how it might not be removeable... is if you were to have an Object Type that prevents it from being dropped, and applied that to both your 'worn clothing' storage object and your 'shirt' object too, but even then I'm not sure if setting that built-in 'dropable' Boolean to false would prevent direct code of moving the object, such as using the 'parent' Object Attribute or 'MoveObject()' Script, but if the built-in/default 'remove' Verb's internal coding does/would check the Attribute, then it wouldn't thus do the drop. So, I'm confused... which is why I'd like to see your 'remove' Verb's code...<br/><br/>-----<br/><br/>if the 'remove' Verb/Command is Chase's altered code... then it should still be easy to fix/get working... just adding in the 'blah_object.parent=player', but that still wouldn't explain why 'remove' Verb/Command wouldn't work in the first place... unless Chase used his own code lines on how to do its removal... meh... I'm confused why its not working... lol",
      "PostDate": "2016-05-12T00:39:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42785",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I don't know either. I already tried this on the &quot;after removing&quot; part of the wearables code ------&gt;  [i:2h253r0q]shirt.parent = player[/i:2h253r0q] But it didn't help to remove the clothing inside the container. If it were that easy to solve I wouldn't have bothered everyone xD ! Maybe I should try [i:2h253r0q]shirt.parent = game[/i:2h253r0q] or something like that. \n\n[quote:2h253r0q]the only reason I could possible see how it might not be removeable... is if you were to have an Object Type that prevents it from being dropped, and applied that to both your 'worn clothing' storage object and your 'shirt' object too, but even then I'm not sure if setting that built-in 'dropable' Boolean to false would prevent direct code of moving the object, such as using the 'parent' Object Attribute or 'MoveObject()' Script, but if the built-in/default 'remove' Verb's internal coding does/would check the Attribute, then it wouldn't thus do the drop. So, I'm confused... which is why I'd like to see your 'remove' Verb's code...[/quote:2h253r0q]\n\nNope, I already checked to see if things are droppable. They have to be removed first, then dropped. And all the appropriate check's are in place. The only thing that has been added is the &quot;Worn Clothing&quot; openable/closable container to which the items are set in. That cannot be dropped, maybe it's feeding that to the rest of the daughter objects inside? \n\nHere's the remove code. \n\n[code:2h253r0q]if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {\n  if (object&#46;removemsg = null) {\n    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))\n  }\n  else {\n    msg (object&#46;removemsg)\n  }\n}\nelse {\n  conflictedItem = null\n  // check if we are wearing anything over it\n  if (HasAttribute(object,&quot;wear_slots&quot;)) {\n    foreach (item, ScopeReachableInventory()) {\n      if (HasAttribute(item,&quot;wear_slots&quot;)) {\n        if (GetBoolean(item, &quot;worn&quot;)) {\n          foreach (itemSlot, item&#46;wear_slots) {\n            if (ListContains(object&#46;wear_slots,itemSlot)) {\n              if (object&#46;wear_layer &lt; item&#46;wear_layer) {\n                conflictedItem = item\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  if (conflictedItem = null) {\n    if (object&#46;removemsg = null) {\n      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))\n    }\n    else {\n      msg (object&#46;removemsg)\n    }\n    object&#46;worn = false\n    object&#46;drop = object&#46;original_drop\n    object&#46;alias = object&#46;original_alias\n    object&#46;original_drop = null\n    object&#46;original_alias = null\n    object&#46;display = null\n    // do after\n    if (HasScript(object, &quot;onafterremove&quot;)) {\n      do (object, &quot;onafterremove&quot;)\n    }\n    else if (HasString(object, &quot;onafterremove&quot;)) {\n      msg (object&#46;onafterremove)\n    }\n  }\n  else {\n    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n  }\n}[/code:2h253r0q]\n\nThis is the modified &quot;DoRemove&quot;",
      "EditableFormat": "bbcode",
      "HTML": "I don't know either. I already tried this on the &quot;after removing&quot; part of the wearables code ------&gt;  <span style=\"font-style:italic;\">shirt.parent = player</span> But it didn't help to remove the clothing inside the container. If it were that easy to solve I wouldn't have bothered everyone xD ! Maybe I should try <span style=\"font-style:italic;\">shirt.parent = game</span> or something like that. <br/><br/><blockquote><p>the only reason I could possible see how it might not be removeable... is if you were to have an Object Type that prevents it from being dropped, and applied that to both your 'worn clothing' storage object and your 'shirt' object too, but even then I'm not sure if setting that built-in 'dropable' Boolean to false would prevent direct code of moving the object, such as using the 'parent' Object Attribute or 'MoveObject()' Script, but if the built-in/default 'remove' Verb's internal coding does/would check the Attribute, then it wouldn't thus do the drop. So, I'm confused... which is why I'd like to see your 'remove' Verb's code...</p></blockquote><br/><br/>Nope, I already checked to see if things are droppable. They have to be removed first, then dropped. And all the appropriate check's are in place. The only thing that has been added is the &quot;Worn Clothing&quot; openable/closable container to which the items are set in. That cannot be dropped, maybe it's feeding that to the rest of the daughter objects inside? <br/><br/>Here's the remove code. <br/><br/><pre><code>if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) {<br/>  if (object&#46;removemsg = null) {<br/>    msg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))<br/>  }<br/>  else {<br/>    msg (object&#46;removemsg)<br/>  }<br/>}<br/>else {<br/>  conflictedItem = null<br/>  // check if we are wearing anything over it<br/>  if (HasAttribute(object,&quot;wear_slots&quot;)) {<br/>    foreach (item, ScopeReachableInventory()) {<br/>      if (HasAttribute(item,&quot;wear_slots&quot;)) {<br/>        if (GetBoolean(item, &quot;worn&quot;)) {<br/>          foreach (itemSlot, item&#46;wear_slots) {<br/>            if (ListContains(object&#46;wear_slots,itemSlot)) {<br/>              if (object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>                conflictedItem = item<br/>              }<br/>            }<br/>          }<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (conflictedItem = null) {<br/>    if (object&#46;removemsg = null) {<br/>      msg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))<br/>    }<br/>    else {<br/>      msg (object&#46;removemsg)<br/>    }<br/>    object&#46;worn = false<br/>    object&#46;drop = object&#46;original_drop<br/>    object&#46;alias = object&#46;original_alias<br/>    object&#46;original_drop = null<br/>    object&#46;original_alias = null<br/>    object&#46;display = null<br/>    // do after<br/>    if (HasScript(object, &quot;onafterremove&quot;)) {<br/>      do (object, &quot;onafterremove&quot;)<br/>    }<br/>    else if (HasString(object, &quot;onafterremove&quot;)) {<br/>      msg (object&#46;onafterremove)<br/>    }<br/>  }<br/>  else {<br/>    msg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>  }<br/>}</code></pre><br/><br/>This is the modified &quot;DoRemove&quot;",
      "PostDate": "2016-05-12T01:40:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42788",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "HK edit:\n\nignore this post, Pixie found the actual culprit\n\n(well... at least it was an interesting/creative idea of a possible cause by me... lol)\n\n----------\n\nyou know what... are you using the 'door-like openable/close-able' container_type Object Type (or whatever it is called, meh), as maybe that just doesn't work, make sure you have it as a container_type as in 'openable_container' or 'closed_container'... whatever they're called...\n\nas if you make an Object just be an openable/closeable &quot;door-like&quot; Object (via Object Type/Type/Inherited Attribute), than it is NOT an Object that has been given any scripting or Attributes to handle it being a container of other Objects, and thus this indeed could be the culprit of your remove is not working, as you made the Object, a NON-container, when it may very well need to be a container (have all the needed built-in scripting/Attributes for take/drop/wear/remove/lock/unlock/etc etc etc container features).\n\nlet me actually open up quest... (or just look at the quest doc online... that's actually faster... lol) ... one sec\n\n------\n\nI am getting optimistic (with fingers crossed though - HK never is confident enough to be optimistic and HK's history proves it, lol), that this may indeed be the culprit (if you're indeed using the 'door' openable container_type, and not one of the actual container_types...\n\nhere they are in the doc (too lazy to start up quest and look at it through the GUI~Editor drop down options, lol):\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/object.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m --> (scroll down to the very bottom)\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/openable.html\">http://docs.textadventures.co.uk/quest/ ... nable.html</a><!-- m --> (as can be seen, this is for door Objects, opening and closing, but not able to actually contain/hold any Objects)\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container.html\">http://docs.textadventures.co.uk/quest/ ... ainer.html</a><!-- m --> (I think this is the most base case)\n\n(and I think these below are the actual container types):\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_base.html\">http://docs.textadventures.co.uk/quest/ ... _base.html</a><!-- m --> (this is the base of these actual container types)\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_closed.html\">http://docs.textadventures.co.uk/quest/ ... losed.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_limited.html\">http://docs.textadventures.co.uk/quest/ ... mited.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_open.html\">http://docs.textadventures.co.uk/quest/ ... _open.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/surface.html\">http://docs.textadventures.co.uk/quest/ ... rface.html</a><!-- m -->\n\n-------------\n\ncontainer_lockable seems to be completely separate, requiring that you also must inherit (container_limited/container_open/container_closed), obviously, in order to able able to apply the lock/unlock scripting with the open/close scripting from the container_limited/container_open/container_close. The 'Surface' type isn't included, as it is an 'always open' container.\n\n-----------\n\nmy guess at the inheritance heirarchy:\n\n.............openable (doors, NON-containers)\n.........../\ncontainer.....................container_open (container, starts in opened state, can change between opened and closed states)\n...........\\................../\n............container_base - container_closed (container, starts in closed state, can change between opened and closed states)\n....................\\.........\\\n.....................\\.........container_limited (container, has 'maxobject/volume' Attributes, for handling/limiting/specifying quantity of child objects)\n......................\\\n.......................surface (container, always is in an opened state - can't be in a closed state)\n\n\n----------------------------\n\nso, have your 'clothes worn' storage object (and any of its child-sub storage objects) be:\n\ncontainer_closed and container_limited (the container_limited would only be added too for the most child storage objects, holding the actual stored objects)\n\nAND THUS NOT BE:\n\nopenable, nor surface, too",
      "EditableFormat": "bbcode",
      "HTML": "HK edit:<br/><br/>ignore this post, Pixie found the actual culprit<br/><br/>(well... at least it was an interesting/creative idea of a possible cause by me... lol)<br/><br/>----------<br/><br/>you know what... are you using the 'door-like openable/close-able' container_type Object Type (or whatever it is called, meh), as maybe that just doesn't work, make sure you have it as a container_type as in 'openable_container' or 'closed_container'... whatever they're called...<br/><br/>as if you make an Object just be an openable/closeable &quot;door-like&quot; Object (via Object Type/Type/Inherited Attribute), than it is NOT an Object that has been given any scripting or Attributes to handle it being a container of other Objects, and thus this indeed could be the culprit of your remove is not working, as you made the Object, a NON-container, when it may very well need to be a container (have all the needed built-in scripting/Attributes for take/drop/wear/remove/lock/unlock/etc etc etc container features).<br/><br/>let me actually open up quest... (or just look at the quest doc online... that's actually faster... lol) ... one sec<br/><br/>------<br/><br/>I am getting optimistic (with fingers crossed though - HK never is confident enough to be optimistic and HK's history proves it, lol), that this may indeed be the culprit (if you're indeed using the 'door' openable container_type, and not one of the actual container_types...<br/><br/>here they are in the doc (too lazy to start up quest and look at it through the GUI~Editor drop down options, lol):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/elements/object.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m --> (scroll down to the very bottom)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/openable.html\">http://docs.textadventures.co.uk/quest/ ... nable.html</a><!-- m --> (as can be seen, this is for door Objects, opening and closing, but not able to actually contain/hold any Objects)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container.html\">http://docs.textadventures.co.uk/quest/ ... ainer.html</a><!-- m --> (I think this is the most base case)<br/><br/>(and I think these below are the actual container types):<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_base.html\">http://docs.textadventures.co.uk/quest/ ... _base.html</a><!-- m --> (this is the base of these actual container types)<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_closed.html\">http://docs.textadventures.co.uk/quest/ ... losed.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_limited.html\">http://docs.textadventures.co.uk/quest/ ... mited.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/container_open.html\">http://docs.textadventures.co.uk/quest/ ... _open.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/attributes/surface.html\">http://docs.textadventures.co.uk/quest/ ... rface.html</a><!-- m --><br/><br/>-------------<br/><br/>container_lockable seems to be completely separate, requiring that you also must inherit (container_limited/container_open/container_closed), obviously, in order to able able to apply the lock/unlock scripting with the open/close scripting from the container_limited/container_open/container_close. The 'Surface' type isn't included, as it is an 'always open' container.<br/><br/>-----------<br/><br/>my guess at the inheritance heirarchy:<br/><br/>.............openable (doors, NON-containers)<br/>.........../<br/>container.....................container_open (container, starts in opened state, can change between opened and closed states)<br/>...........\\................../<br/>............container_base - container_closed (container, starts in closed state, can change between opened and closed states)<br/>....................\\.........\\<br/>.....................\\.........container_limited (container, has 'maxobject/volume' Attributes, for handling/limiting/specifying quantity of child objects)<br/>......................\\<br/>.......................surface (container, always is in an opened state - can't be in a closed state)<br/><br/><br/>----------------------------<br/><br/>so, have your 'clothes worn' storage object (and any of its child-sub storage objects) be:<br/><br/>container_closed and container_limited (the container_limited would only be added too for the most child storage objects, holding the actual stored objects)<br/><br/>AND THUS NOT BE:<br/><br/>openable, nor surface, too",
      "PostDate": "2016-05-12T07:26:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42789",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "The problem is the very first line of the code you posted:\n[code:3oi6fgnc]if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) [/code:3oi6fgnc]\nIt is testing if the item is a direct child of the player (i.e., shirt.parent = player). You need to check if it is Worn Clothing. in fact a better way might be to test if its parent's parent is player:\n[code:3oi6fgnc]if (not object&#46;parent&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) [/code:3oi6fgnc]",
      "EditableFormat": "bbcode",
      "HTML": "The problem is the very first line of the code you posted:<br/><pre><code>if (not object&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) </code></pre><br/>It is testing if the item is a direct child of the player (i.e., shirt.parent = player). You need to check if it is Worn Clothing. in fact a better way might be to test if its parent's parent is player:<br/><pre><code>if (not object&#46;parent&#46;parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) </code></pre>",
      "PostDate": "2016-05-12T07:56:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42791",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you may have to do different scripting for dynamic child layers... is there a built-in function for getting the 'root parent' for a (any) child object ???\n\n-------\n\ngood catch on finding the actual culprit Pixie (HK says &quot;doh!&quot; to himself)",
      "EditableFormat": "bbcode",
      "HTML": "you may have to do different scripting for dynamic child layers... is there a built-in function for getting the 'root parent' for a (any) child object ???<br/><br/>-------<br/><br/>good catch on finding the actual culprit Pixie (HK says &quot;doh!&quot; to himself)",
      "PostDate": "2016-05-12T08:02:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42793",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "The best way would be to use ListParents(object), which returns a list of objects, and then test if the list contains the player object. The root parent would be the room the player is in, by the way.",
      "EditableFormat": "bbcode",
      "HTML": "The best way would be to use ListParents(object), which returns a list of objects, and then test if the list contains the player object. The root parent would be the room the player is in, by the way.",
      "PostDate": "2016-05-12T10:06:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42797",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:k6fpg4qv]if (not object.parent.parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) [/quote:k6fpg4qv]\n\nYay! Stuff can be removed now. Thank you so much! But what would be the opposite code to return the unworn items to the player inventory <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ?\n\nFor example: \n[u:k6fpg4qv]After Wearing[/u:k6fpg4qv]\nplain_bra.parent = Worn Clothing   \n\n[u:k6fpg4qv]After Removing[/u:k6fpg4qv]\nplain_bra.parent = Player?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>if (not object.parent.parent = player or not GetBoolean(object, &quot;worn&quot;) or not GetBoolean(object, &quot;removeable&quot;)) </p></blockquote><br/><br/>Yay! Stuff can be removed now. Thank you so much! But what would be the opposite code to return the unworn items to the player inventory <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> ?<br/><br/>For example: <br/><span style=\"text-decoration:underline;\">After Wearing</span><br/>plain_bra.parent = Worn Clothing   <br/><br/><span style=\"text-decoration:underline;\">After Removing</span><br/>plain_bra.parent = Player?",
      "PostDate": "2016-05-12T17:46:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42798",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Yes, but it is player, not Player. The case is important",
      "EditableFormat": "bbcode",
      "HTML": "Yes, but it is player, not Player. The case is important",
      "PostDate": "2016-05-12T19:27:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42799",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yep, the 'inventory' IS the 'player' Player Object\n\nblah_Object.parent = player // (or whatever you changed its name to, as Pixie said, upper/lower case matters)\n// is putting something into the &quot;inventory&quot; = is putting something into the 'player' Player Object\n// &quot;inventory&quot; = 'player' Player Object",
      "EditableFormat": "bbcode",
      "HTML": "yep, the 'inventory' IS the 'player' Player Object<br/><br/>blah_Object.parent = player // (or whatever you changed its name to, as Pixie said, upper/lower case matters)<br/>// is putting something into the &quot;inventory&quot; = is putting something into the 'player' Player Object<br/>// &quot;inventory&quot; = 'player' Player Object",
      "PostDate": "2016-05-12T19:28:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "42801",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Great! That worked! Thank you both so much for all of your help with that, I really, really appreciate it! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->!",
      "EditableFormat": "bbcode",
      "HTML": "Great! That worked! Thank you both so much for all of your help with that, I really, really appreciate it! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->!",
      "PostDate": "2016-05-13T00:48:11+01:00",
      "LastEditDate": null
    }
  ]
}
