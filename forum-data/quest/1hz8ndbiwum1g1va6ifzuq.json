{
  "Topic": {
    "TopicId": "1hz8ndbiwum1g1va6ifzuq",
    "ForumId": "10",
    "Title": "Another money question",
    "LastUpdated": "2017-11-07T11:46:07.0818189Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7e9ff199-d697-43ec-8bdd-c9c47f4f2c00",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I realize this is probably really obvious, but I can't figure it out. For some reason the player can buy items they don't have enough money for, and they just end up with a negative balance. Is there a built in feature that I can turn on to stop that, or do I need to actually write that in to the code somehow?\r\n\r\nThanks  >_>'",
      "EditableFormat": "markdown",
      "HTML": "<p>I realize this is probably really obvious, but I can't figure it out. For some reason the player can buy items they don't have enough money for, and they just end up with a negative balance. Is there a built in feature that I can turn on to stop that, or do I need to actually write that in to the code somehow?</p>\n<p>Thanks  &gt;_&gt;'</p>\n\n",
      "PostDate": "2017-11-07T11:46:07.0818189Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c271caa7-7ef7-4d03-bcb7-ffe56bd0f450",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is nothing built-in to handle buying and shopping but there is a tutorial:\r\nhttp://docs.textadventures.co.uk/quest/shop.html",
      "EditableFormat": "markdown",
      "HTML": "<p>There is nothing built-in to handle buying and shopping but there is a tutorial:<br>\nhttp://docs.textadventures.co.uk/quest/shop.html</p>\n\n",
      "PostDate": "2017-11-07T13:03:38.7499187Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d88eba8d-c3a7-45a7-bf7e-caf13019eb06",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you! \r\n\r\nI think I'm a bit confused about where I put this code. Every room in my game involves things you can buy, and you often have to pay money in order for objects to function properly. But none of the rooms are shops or function as shops in a conventional sense. Is there a way to tell the game never to let someone buy something if they don't have the money, or do I need to somehow put this in manually attached to every object you can buy? Also, I have multiple if scripts already running on objects based on choices you've made that change how you can interact with them. If the code has to be attached to individual objects where do I put it in comparison to the other if scripts? \r\n\r\nHonestly, everything is working how I want for buying things (in terms of how the objects move and interact with each other when you pay money), the only issue is that you can buy things when you don't have money. Really what I want is just something that pops up a message if a player tries to buy something they can't afford, and stops the buy from happening... \r\n\r\nBasically, I don't know what I'm doing ; _ ;",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you!</p>\n<p>I think I'm a bit confused about where I put this code. Every room in my game involves things you can buy, and you often have to pay money in order for objects to function properly. But none of the rooms are shops or function as shops in a conventional sense. Is there a way to tell the game never to let someone buy something if they don't have the money, or do I need to somehow put this in manually attached to every object you can buy? Also, I have multiple if scripts already running on objects based on choices you've made that change how you can interact with them. If the code has to be attached to individual objects where do I put it in comparison to the other if scripts?</p>\n<p>Honestly, everything is working how I want for buying things (in terms of how the objects move and interact with each other when you pay money), the only issue is that you can buy things when you don't have money. Really what I want is just something that pops up a message if a player tries to buy something they can't afford, and stops the buy from happening...</p>\n<p>Basically, I don't know what I'm doing ; _ ;</p>\n\n",
      "PostDate": "2017-11-07T13:40:51.6779505Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4b3f642-dd3c-4338-8e0a-c0c3b3f8e5d3",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Use an else script.\r\n<details>\r\nThis is my own code. This was copy-pasted from my deviant art journal, so the brackets are way off. But you get the gist of it.\r\nNext are the buying commands. These are a little complicated.\r\nBefore you start, make an object to be the shop first.\r\nThere is also an option involving \"price,\" which I have not figured out yet. But if you change the \"player.gold\" to \"player.price,\" it should work itself out, somehow.\r\n\r\nBuy command\r\nI'm pretty sure \"buy\" is already a command that comes with quest, so it will have to be capitalized or \"buy1\". But name it whatever you wish.\r\n\r\nEdit: It is possible to disable an existing default command.\r\nHow to make new commands/replace commands: \r\nhttp://textadventures.co.uk/forum/quest/topic/zhzl_m8hd0qoookndtqrqq/inheriting-commands-from-the-direct-parent-object-is-it-possible \r\nHh\r\nType Buy1 #object# as the command pattern. (Or whatever you want.)\r\n\r\nPaste this (below) in.\r\nmsg (\"See something that catches your eye?\")\r\noptions = Split(\"Potion (50);Hyper Potion (200)\", \";\")\r\nShowMenu (\"Shop\", options, true) {\r\nswitch (result) {\r\ncase (\"Potion (50)\") {\r\nif (player.gold >= 50) {\r\nplayer.gold = player.gold - 50\r\nplayer.potion = player.potion + 1\r\nmsg (\"You bought a Potion.\")\r\n}\r\nelse {\r\nmsg (\"You don't have enough gold.\")\r\n}\r\n}\r\ncase (\"Hyper Potion (200)\") {\r\nif (player.gold >= 200) {\r\nplayer.gold = player.gold - 200\r\nplayer.hyper_potion = player.hyper_potion + 1\r\nmsg (\"You bought a Hyper Potion.\")\r\n}\r\nelse {\r\nmsg (\"You don't have enough gold.\")\r\n}\r\n}\r\n}\r\n}\r\n\r\nSell command\r\nI'm pretty sure \"sell\" is also a command in Quest, so you'll have to name it something else.\r\nType Sell #object# as the pattern.\r\nPaste this (below) in.\r\nDerp\r\nmsg (\"What do you have?\")\r\noptions = Split(\"Potion (50);Hyper Potion (200)\", \";\")\r\nShowMenu (\"Shop\", options, true) {\r\nswitch (result) {\r\ncase (\"Potion (50)\") {\r\nif (player.potion > 0) {\r\nplayer.gold = player.gold + 50\r\nplayer.potion = player.potion - 1\r\nmsg (\"You sold a potion.\")\r\n}\r\nelse {\r\nmsg (\"You don't have any Potions.\")\r\n}\r\n}\r\ncase (\"Hyper Potion (200)\") {\r\nif (player.hyper_potion > 0) {\r\nplayer.gold = player.gold + 200\r\nplayer.hyper_potion = player.hyper_potion - 1\r\nmsg (\"You sold a Hyper Potion.\")\r\n}\r\nelse {\r\nmsg (\"You don't have any Hyper Potions.\")\r\n}\r\n}\r\n}\r\n}\r\nDerp\r\nThere's a neat trick you can do where you go up to the \"Move\" option in the command (top-right corner), select the room of the shop, and move the command there. This makes sure that you can only use the command in that room. It doesn't do much else as far as I know, just neat if you only want a player to buy in a certain area.\r\n\r\nYou can also make multiple buy and sell commands for different shops. The name 'purchase' works, and so does 'trade'.\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Use an else script.</p>\n<details>\nThis is my own code. This was copy-pasted from my deviant art journal, so the brackets are way off. But you get the gist of it.\nNext are the buying commands. These are a little complicated.\nBefore you start, make an object to be the shop first.\nThere is also an option involving \"price,\" which I have not figured out yet. But if you change the \"player.gold\" to \"player.price,\" it should work itself out, somehow.\n<p>Buy command<br>\nI'm pretty sure \"buy\" is already a command that comes with quest, so it will have to be capitalized or \"buy1\". But name it whatever you wish.</p>\n<p>Edit: It is possible to disable an existing default command.<br>\nHow to make new commands/replace commands:<br>\nhttp://textadventures.co.uk/forum/quest/topic/zhzl_m8hd0qoookndtqrqq/inheriting-commands-from-the-direct-parent-object-is-it-possible<br>\nHh<br>\nType Buy1 #object# as the command pattern. (Or whatever you want.)</p>\n<p>Paste this (below) in.<br>\nmsg (\"See something that catches your eye?\")<br>\noptions = Split(\"Potion (50);Hyper Potion (200)\", \";\")<br>\nShowMenu (\"Shop\", options, true) {<br>\nswitch (result) {<br>\ncase (\"Potion (50)\") {<br>\nif (player.gold &gt;= 50) {<br>\nplayer.gold = player.gold - 50<br>\nplayer.potion = player.potion + 1<br>\nmsg (\"You bought a Potion.\")<br>\n}<br>\nelse {<br>\nmsg (\"You don't have enough gold.\")<br>\n}<br>\n}<br>\ncase (\"Hyper Potion (200)\") {<br>\nif (player.gold &gt;= 200) {<br>\nplayer.gold = player.gold - 200<br>\nplayer.hyper_potion = player.hyper_potion + 1<br>\nmsg (\"You bought a Hyper Potion.\")<br>\n}<br>\nelse {<br>\nmsg (\"You don't have enough gold.\")<br>\n}<br>\n}<br>\n}<br>\n}</p>\n<p>Sell command<br>\nI'm pretty sure \"sell\" is also a command in Quest, so you'll have to name it something else.<br>\nType Sell #object# as the pattern.<br>\nPaste this (below) in.<br>\nDerp<br>\nmsg (\"What do you have?\")<br>\noptions = Split(\"Potion (50);Hyper Potion (200)\", \";\")<br>\nShowMenu (\"Shop\", options, true) {<br>\nswitch (result) {<br>\ncase (\"Potion (50)\") {<br>\nif (player.potion &gt; 0) {<br>\nplayer.gold = player.gold + 50<br>\nplayer.potion = player.potion - 1<br>\nmsg (\"You sold a potion.\")<br>\n}<br>\nelse {<br>\nmsg (\"You don't have any Potions.\")<br>\n}<br>\n}<br>\ncase (\"Hyper Potion (200)\") {<br>\nif (player.hyper_potion &gt; 0) {<br>\nplayer.gold = player.gold + 200<br>\nplayer.hyper_potion = player.hyper_potion - 1<br>\nmsg (\"You sold a Hyper Potion.\")<br>\n}<br>\nelse {<br>\nmsg (\"You don't have any Hyper Potions.\")<br>\n}<br>\n}<br>\n}<br>\n}<br>\nDerp<br>\nThere's a neat trick you can do where you go up to the \"Move\" option in the command (top-right corner), select the room of the shop, and move the command there. This makes sure that you can only use the command in that room. It doesn't do much else as far as I know, just neat if you only want a player to buy in a certain area.</p>\n<p>You can also make multiple buy and sell commands for different shops. The name 'purchase' works, and so does 'trade'.</p>\n</details>\n\n",
      "PostDate": "2017-11-07T15:34:15.0974314Z",
      "LastEditDate": "2017-11-07T21:58:14.633845Z",
      "link": null
    },
    {
      "PostId": "f4e97131-9120-4537-bd3e-3f990ccdbc72",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\ntransactions (buying/selling), a scripting example (in code):\r\n\r\nbuying:\r\n\r\n// katana.parent = shop_owner // the shop owner initially has the katana\r\n\r\nif (player.currency >= katana.price) { // checking if you got enough to buy the katana\r\n\r\n  player.currency = player.currency - katana.price // buying the katana (subtracting your currency by the price of the katana)\r\n\r\n  shop_owner.currency = shop_owner.currency + katana.price // buying the katana (adding the price of the katana to the shop owner's currency)\r\n\r\n  katana.parent = player // you now have (via moving/setting) the katana in your possession/inventory\r\n\r\n  msg (\"You buy the katana\")\r\n\r\n} else {\r\n\r\n  msg (\"You don't have enough currency to buy the katana\")\r\n\r\n}\r\n\r\nselling:\r\n\r\n// (as is common in RPGs, you sell something at half price, hence why I got the: katana.price / 2, in the code below for selling)\r\n\r\n// katana.parent = player // you initially have the katana\r\n\r\nif (shop_owner.currency >= (katana.price / 2)) { // checking if the shop owner got enough to buy the katana from you\r\n\r\n  shop_owner.currency = shop_owner.currency - (katana.price / 2) // selling the katana (subtracting shop owner's currency by half of the price of the katana)\r\n\r\n  player.currency = player.currency + (katana.price / 2) // selling the katana (adding half of the price of the katana to your currency)\r\n\r\n  katana.parent = shop_owner // shop owner now have (via moving/setting) the katana in his possession/inventory\r\n\r\n  msg (\"You sell the katana\")\r\n\r\n} else {\r\n\r\n  msg (\"The shop owner doesn't have enough currency to buy the katana from you\")\r\n\r\n}\r\n```\r\n\r\n--------------\r\n\r\nhere's a more detailed guide on Attribute and the 'if' Script usage:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\nask if you got any questions and/or need help with anything",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>transactions (buying/selling), a scripting example (in code):\n\nbuying:\n\n// katana.parent = shop_owner // the shop owner initially has the katana\n\nif (player.currency &gt;= katana.price) { // checking if you got enough to buy the katana\n\n  player.currency = player.currency - katana.price // buying the katana (subtracting your currency by the price of the katana)\n\n  shop_owner.currency = shop_owner.currency + katana.price // buying the katana (adding the price of the katana to the shop owner's currency)\n\n  katana.parent = player // you now have (via moving/setting) the katana in your possession/inventory\n\n  msg (\"You buy the katana\")\n\n} else {\n\n  msg (\"You don't have enough currency to buy the katana\")\n\n}\n\nselling:\n\n// (as is common in RPGs, you sell something at half price, hence why I got the: katana.price / 2, in the code below for selling)\n\n// katana.parent = player // you initially have the katana\n\nif (shop_owner.currency &gt;= (katana.price / 2)) { // checking if the shop owner got enough to buy the katana from you\n\n  shop_owner.currency = shop_owner.currency - (katana.price / 2) // selling the katana (subtracting shop owner's currency by half of the price of the katana)\n\n  player.currency = player.currency + (katana.price / 2) // selling the katana (adding half of the price of the katana to your currency)\n\n  katana.parent = shop_owner // shop owner now have (via moving/setting) the katana in his possession/inventory\n\n  msg (\"You sell the katana\")\n\n} else {\n\n  msg (\"The shop owner doesn't have enough currency to buy the katana from you\")\n\n}\n</code></pre>\n<hr>\n<p>here's a more detailed guide on Attribute and the 'if' Script usage:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<p>ask if you got any questions and/or need help with anything</p>\n\n",
      "PostDate": "2017-11-07T18:26:27.7991071Z",
      "LastEditDate": "2017-11-07T18:31:55.5481546Z",
      "link": null
    },
    {
      "PostId": "bc241412-d542-4445-af53-7912842d01ec",
      "UserId": 329383,
      "Username": "J_J",
      "AvatarUrl": "https://secure.gravatar.com/avatar/d6dcf2651a8e3cfe546c1fe096981552?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you! You guys are the best. It looks like I was putting the code in the wrong place, but everything is now working as it should.  I have never been so happy to be told I couldn't afford something. Ha. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you! You guys are the best. It looks like I was putting the code in the wrong place, but everything is now working as it should.  I have never been so happy to be told I couldn't afford something. Ha.</p>\n\n",
      "PostDate": "2017-11-08T00:00:17.7734821Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
