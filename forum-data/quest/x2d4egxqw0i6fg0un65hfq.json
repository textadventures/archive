{
  "Topic": {
    "TopicId": "x2d4egxqw0i6fg0un65hfq",
    "ForumId": "10",
    "Title": "Script to change °C into Fahrenheit?",
    "LastUpdated": "2016-10-25T17:44:39.2949818Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e76bc0b3-98d0-4657-86c5-553602aa7a89",
      "UserId": 115910,
      "Username": "Sebastian2203",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2c6803847fee75ca6b74e1a846b79bc5?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In my game, the temperatures are randomly generated and ignoring the fact that it would be tremendous effort to manually convert every °C into Fahrenheit  is just madness, that´s why I ask you, dear forum dwellers;\r\n\r\nIs there any way to make Quest calculate, simply, convert °C into Fahrenheit?\r\n\r\nTo avoid confusion, I am using gamebook not text-adventures. ",
      "EditableFormat": "markdown",
      "HTML": "<p>In my game, the temperatures are randomly generated and ignoring the fact that it would be tremendous effort to manually convert every °C into Fahrenheit  is just madness, that´s why I ask you, dear forum dwellers;</p>\n<p>Is there any way to make Quest calculate, simply, convert °C into Fahrenheit?</p>\n<p>To avoid confusion, I am using gamebook not text-adventures.</p>\n\n",
      "PostDate": "2016-10-25T17:44:39.2949818Z",
      "LastEditDate": null
    },
    {
      "PostId": "d893874f-7288-46e2-843e-50483f9fa956",
      "UserId": 207026,
      "Username": "Pykrete",
      "AvatarUrl": "https://secure.gravatar.com/avatar/1faa3bf756e9e15293c2bc5662f00a7f?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could feed the temperature in Celcius into a set of expressions to get the result in Fahrenheit.\r\n\r\nhttp://www.rapidtables.com/convert/temperature/how-celsius-to-fahrenheit.htm",
      "EditableFormat": "markdown",
      "HTML": "<p>You could feed the temperature in Celcius into a set of expressions to get the result in Fahrenheit.</p>\n<p>http://www.rapidtables.com/convert/temperature/how-celsius-to-fahrenheit.htm</p>\n\n",
      "PostDate": "2016-10-25T19:19:48.0800086Z",
      "LastEditDate": null
    },
    {
      "PostId": "dc3cd5d9-b138-4a7a-b5ce-796881860dd1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "all you do is use a Function:\r\n\r\ngive the Function a Parameter for your input argument, have its scripting be the conversion formula using the Parameter (the input), and then have the Function return the output.\r\n\r\na slightly more involved Function, which can do both directional conversions. Actually, you could include the kelvin too, but I'm lazy. Also, if you rather, you can work with Doubles (decimal numbers), instead of Integers (non-decimal numbers).\r\n\r\nthe, type=\"xxx\", is the return (output) type\r\n\r\nI've put in both an 'input type' and 'output type' for my Parameters, in case you want to expand it to converting with kelvin, too, which requires specifying the 'input type' and 'output type', hence the need for both of these Parameters.\r\n\r\n```\r\n<function name=\"celsius_and_fahrenheit_conversion_function\" parameters=\"input_type_parameter, output_type_parameter, input_value_parameter\" type=\"int\">\r\n  if (input_type_parameter = \"fahrenheit\" and output_type_parameter = \"celsius\") { // from fahrenheit to celsius\r\n    return ((input_value_parameter - 32) * 5 / 9)\r\n  } else if (input_type_parameter = \"celsius\" and output_type_parameter = \"fahrenheit\") { // from celsius to fahrenheit\r\n    return (input_value_parameter * 9 / 5 + 32)\r\n  }\r\n</function>\r\n\r\nexample function calls:\r\n\r\n(I show both using a literal/direct value, the \"celsius/fahrenheit\" input/output type arguments, and using a VARIABLE/indirect-value, an Attribute VARIABLE, which holds the value, the 'global_data_object.celsius/fahrenheit_integer_attribute' input value argument. You can use whatever combination of literal/direct and VARIABLE/indirect that you want: all literals, all VARIABLES, or whatever combination of literals and VARIABLES)\r\n\r\n// global_data_object.fahrenheit_integer_attribute = 100 // input\r\nglobal_data_object.celsius_integer_attribute = celsius_and_fahrenheit_conversion_function (\"fahrenheit\", \"celsius\", global_data_object.fahrenheit_integer_attribute)\r\n// global_data_object.celsius_integer_attribute = ~ 38 // output\r\n\r\n// global_data_object.celsius_integer_attribute = 100 // input\r\nglobal_data_object.fahrenheit_integer_attribute = celsius_and_fahrenheit_conversion_function (\"celsius\", \"fahrenheit\", global_data_object.celsius_integer_attribute)\r\n// global_data_object.fahrenheit_integer_attribute = ~ 212 // output\r\n```\r\n\r\nand of course you can make any type of input-output/conversion Function you want, not just temparature, such as metric (world) (base 10) vs american (norse/ancient scandavia) (base 12) or whatever else / etc etc etc",
      "EditableFormat": "markdown",
      "HTML": "<p>all you do is use a Function:</p>\n<p>give the Function a Parameter for your input argument, have its scripting be the conversion formula using the Parameter (the input), and then have the Function return the output.</p>\n<p>a slightly more involved Function, which can do both directional conversions. Actually, you could include the kelvin too, but I'm lazy. Also, if you rather, you can work with Doubles (decimal numbers), instead of Integers (non-decimal numbers).</p>\n<p>the, type=\"xxx\", is the return (output) type</p>\n<p>I've put in both an 'input type' and 'output type' for my Parameters, in case you want to expand it to converting with kelvin, too, which requires specifying the 'input type' and 'output type', hence the need for both of these Parameters.</p>\n<pre><code>&lt;function name=\"celsius_and_fahrenheit_conversion_function\" parameters=\"input_type_parameter, output_type_parameter, input_value_parameter\" type=\"int\"&gt;\n  if (input_type_parameter = \"fahrenheit\" and output_type_parameter = \"celsius\") { // from fahrenheit to celsius\n    return ((input_value_parameter - 32) * 5 / 9)\n  } else if (input_type_parameter = \"celsius\" and output_type_parameter = \"fahrenheit\") { // from celsius to fahrenheit\n    return (input_value_parameter * 9 / 5 + 32)\n  }\n&lt;/function&gt;\n\nexample function calls:\n\n(I show both using a literal/direct value, the \"celsius/fahrenheit\" input/output type arguments, and using a VARIABLE/indirect-value, an Attribute VARIABLE, which holds the value, the 'global_data_object.celsius/fahrenheit_integer_attribute' input value argument. You can use whatever combination of literal/direct and VARIABLE/indirect that you want: all literals, all VARIABLES, or whatever combination of literals and VARIABLES)\n\n// global_data_object.fahrenheit_integer_attribute = 100 // input\nglobal_data_object.celsius_integer_attribute = celsius_and_fahrenheit_conversion_function (\"fahrenheit\", \"celsius\", global_data_object.fahrenheit_integer_attribute)\n// global_data_object.celsius_integer_attribute = ~ 38 // output\n\n// global_data_object.celsius_integer_attribute = 100 // input\nglobal_data_object.fahrenheit_integer_attribute = celsius_and_fahrenheit_conversion_function (\"celsius\", \"fahrenheit\", global_data_object.celsius_integer_attribute)\n// global_data_object.fahrenheit_integer_attribute = ~ 212 // output\n</code></pre>\n<p>and of course you can make any type of input-output/conversion Function you want, not just temparature, such as metric (world) (base 10) vs american (norse/ancient scandavia) (base 12) or whatever else / etc etc etc</p>\n\n",
      "PostDate": "2016-10-25T21:02:44.2020061Z",
      "LastEditDate": "2016-10-25T21:27:25.7695414Z"
    }
  ]
}
