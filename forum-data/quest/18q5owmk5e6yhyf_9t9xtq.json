{
  "Topic": {
    "TopicId": "18q5owmk5e6yhyf_9t9xtq",
    "ForumId": "10",
    "Title": "Best Time and Date system?",
    "LastUpdated": "2017-06-16T19:45:14.209232Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "950fb14b-1db5-44b1-bd79-db16ba702912",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all,\r\n\r\nLooking for a way to incorporate endless passing time. It's going to be used for various elements in the game.\r\n\r\nBeing defeated will pass time, as well as some actions i.e Microwave a meal for 8 minutes or jog for an hour.\r\n\r\nI'm thinking then it would need to be some kind of attribute that is added that has a value up to 60, then when it gets to 60 it creates an attribute of 1 hour, added to the hour count, that passes a day when it reaches 24? \r\n\r\nIdeally being able to change some elements depending on the time, i.e looking outside and such to see the sun, or night-time. It would also be neat if I could arrange some form of calendar system with months and specific event days. I assume 30 days add 1 to a month attribute that cycles between 12 of them. I could perhaps do different weather depending on the months.\r\n\r\nSo I have a rough idea how that would work. Now, I generally work with the GUI, so has anyone get best recommendations for how this would/should work? I'm also assuming every action will need a time 'price' for completion so time went on.",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>Looking for a way to incorporate endless passing time. It's going to be used for various elements in the game.</p>\n<p>Being defeated will pass time, as well as some actions i.e Microwave a meal for 8 minutes or jog for an hour.</p>\n<p>I'm thinking then it would need to be some kind of attribute that is added that has a value up to 60, then when it gets to 60 it creates an attribute of 1 hour, added to the hour count, that passes a day when it reaches 24?</p>\n<p>Ideally being able to change some elements depending on the time, i.e looking outside and such to see the sun, or night-time. It would also be neat if I could arrange some form of calendar system with months and specific event days. I assume 30 days add 1 to a month attribute that cycles between 12 of them. I could perhaps do different weather depending on the months.</p>\n<p>So I have a rough idea how that would work. Now, I generally work with the GUI, so has anyone get best recommendations for how this would/should work? I'm also assuming every action will need a time 'price' for completion so time went on.</p>\n\n",
      "PostDate": "2017-06-16T19:45:14.209232Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1c6f5248-d300-466c-b3b2-f4fce8266a97",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a library here:\r\nhttps://github.com/ThePix/quest/wiki/Clock-Library",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a library here:<br>\nhttps://github.com/ThePix/quest/wiki/Clock-Library</p>\n\n",
      "PostDate": "2017-06-16T19:49:19.5755436Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c117e60b-e783-402b-a24d-121810d9ed4f",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great, thanks! Also, at the expense of sounding stupid but while I have Quest open, what's the difference between a normal attribute and a status attribute?",
      "EditableFormat": "markdown",
      "HTML": "<p>Great, thanks! Also, at the expense of sounding stupid but while I have Quest open, what's the difference between a normal attribute and a status attribute?</p>\n\n",
      "PostDate": "2017-06-16T20:11:55.8733471Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fc3839c3-e22a-4d9d-9ce6-ec589ee1885a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Status attributes are ones you have told Quest to display in the status pane. So you have a time attribute on the game object, then you add that to the status attributes, telling Quest you want it displayed.\r\n\r\nIn fact for time, yo would display a string that gets updated from the time attribute, as you want it formated.",
      "EditableFormat": "markdown",
      "HTML": "<p>Status attributes are ones you have told Quest to display in the status pane. So you have a time attribute on the game object, then you add that to the status attributes, telling Quest you want it displayed.</p>\n<p>In fact for time, yo would display a string that gets updated from the time attribute, as you want it formated.</p>\n\n",
      "PostDate": "2017-06-16T20:36:39.0110838Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8cb23ad1-5059-4518-899f-da959945a9d3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "use Pixie's libraries as they're really good/useful, but if you want help on understanding the usage of this stuff better, you can take a look at these links:\r\n\r\nif you want, here's a step by step guide walkthrough creating your own demo game, learning the basics of using Attributes, including statusattributes, here:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375\r\n\r\nand this is my detailed guide on Attributes and the 'if' Script usage, though it is a bit more code oriented, but it does show how to do the scripts in the GUI/Editor too:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\n---------\r\n\r\nask if you got any questions and/or need help with anything",
      "EditableFormat": "markdown",
      "HTML": "<p>use Pixie's libraries as they're really good/useful, but if you want help on understanding the usage of this stuff better, you can take a look at these links:</p>\n<p>if you want, here's a step by step guide walkthrough creating your own demo game, learning the basics of using Attributes, including statusattributes, here:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/5387/i-really-need-help#37375</p>\n<p>and this is my detailed guide on Attributes and the 'if' Script usage, though it is a bit more code oriented, but it does show how to do the scripts in the GUI/Editor too:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<hr>\n<p>ask if you got any questions and/or need help with anything</p>\n\n",
      "PostDate": "2017-06-17T01:36:35.8139793Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "08d256c0-ccac-4446-bb0e-ac39cbef1c2d",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I've got this working now, but question - this has time, does it have a way of tracking what day it is, dates, months, etc?",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I've got this working now, but question - this has time, does it have a way of tracking what day it is, dates, months, etc?</p>\n\n",
      "PostDate": "2017-06-19T15:41:16.0835226Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bfd60d15-6264-478f-a4a2-bb5eecfca3f0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "not sure about Pixie's library... (haven't studied/looked-at-it, yet)\r\n\r\n----------------\r\n\r\ntime and date stuff can be really simple (for example: your 'days' Integer Attribute just increases) or really complex (real life full time and date system: leap year, seasons, months, altering days in months, days, weeks, years, seconds, minutes, hours, etc)... the more I read about about time and date... I got into how to figure out the actual exact date (in just dealing with leap year and altering quantity of days in some months... I found that even leap year is more complex than I realized... if you want to be exact as you can be... lol... time and date stuff gets really complicated and math heavy if you're trying to have a full time and date system accurately... I now will NEVER EVER take the clock/time and date on a computer for granted again, lol. This is some complex stuff! Glad someone figured it out, so we can just look at see what time and date it is on our computers, watches, cell phones, etc, lol)\r\n\r\n---------\r\n\r\n```\r\nyou might also want to understand the modulus operator as well:\r\n\r\nmodulus operator: %\r\n\r\nthe modulus operation is division, but instead of getting the quotient, it gets the REMAINDER\r\n\r\n7 / 4 = Q:1 // using Integer Data Type / Operations, the remainder/decimal gets truncated (removed)\r\nvs\r\n7 % 4 = R:3\r\n\r\nwhat's neat about (finding/getting) the REMAINDER is that it allows for handling cyclic and factoring (which includes finding if a number is even or odd):\r\n\r\n// seconds (and minutes too) go from 0 to 59 to 0 to 59 ...and on and on...\r\n\r\ngame.clock_second = 0 % 60 = 0\r\ngame.clock_second = 1 % 60 = 1\r\ngame.clock_second = 59 % 60 = 59\r\ngame.clock_second = 60 % 60 = 0\r\ngame.clock_second = 61 % 60 = 1\r\ngame.clock_second = 119 % 60 = 59\r\ngame.clock_second = 120 % 60 = 0\r\ngame.clock_second = 121 % 60 = 1\r\n\r\n// military hours: 0 to 23\r\n// civilian hours: 0 to 11\r\n\r\ngame.clock_military_hour = 0 % 24 = 0\r\ngame.clock_civilian_hour = 0 % 12 = 0\r\ngame.clock_military_hour = 1 % 24 = 1\r\ngame.clock_civilian_hour = 1 % 12 = 1\r\ngame.clock_military_hour = 11 % 24 = 11\r\ngame.clock_civilian_hour = 11 % 12 = 11\r\ngame.clock_military_hour = 12 % 24 = 12\r\ngame.clock_civilian_hour = 12 % 12 = 0\r\ngame.clock_military_hour = 13 % 24 = 13\r\ngame.clock_civilian_hour = 13 % 12 = 1\r\ngame.clock_military_hour = 23 % 24 = 23\r\ngame.clock_civilian_hour = 23 % 12 = 11\r\ngame.clock_military_hour = 24 % 24 = 0\r\ngame.clock_civilian_hour = 24 % 12 = 0\r\ngame.clock_military_hour = 25 % 24 = 1\r\ngame.clock_civilian_hour = 25 % 12 = 1\r\ngame.clock_military_hour = 35 % 24 = 11\r\ngame.clock_civilian_hour = 35 % 12 = 11\r\ngame.clock_military_hour = 36 % 24 = 12\r\ngame.clock_civilian_hour = 36 % 12 = 0\r\ngame.clock_military_hour = 37 % 24 = 13\r\ngame.clock_civilian_hour = 37 % 12 = 1\r\ngame.clock_military_hour = 47 % 24 = 23\r\ngame.clock_civilian_hour = 47 % 12 = 11\r\ngame.clock_military_hour = 48 % 24 = 0\r\ngame.clock_civilian_hour = 48 % 12 = 0\r\n\r\n// NUMBER = (SOME INTEGER):\r\n\r\nif (NUMBER % 2 = 0) {\r\n  msg (NUMBER + \" is an even number\")\r\n  msg (NUMBER + \" is divisible by 2, or to say it differently: 2 is a factor of \" + NUMBER)\r\n} else { // if (NUMBER % 2 = 1) {\r\n  msg (NUMBER + \" is an odd number\")\r\n}\r\n\r\nif (NUMBER % 3 = 0) {\r\n  msg (NUMBER + \" is divisible by 3, or to say it differently: 3 is a factor of \" + NUMBER)\r\n} else {\r\n  msg  (NUMBER + \" is NOT divisible by 3, or to say it differently: 3 is NOT a factor of \" + NUMBER)\r\n}\r\n\r\nif (NUMBER % 4 = 0) {\r\n  msg (NUMBER + \" is divisible by 4, or to say it differently: 4 is a factor of \" + NUMBER)\r\n} else {\r\n  msg  (NUMBER + \" is NOT divisible by 4, or to say it differently: 4 is NOT a factor of \" + NUMBER)\r\n}\r\n\r\nif (NUMBER % 13 = 0) {\r\n  msg (NUMBER + \" is divisible by 13, or to say it differently: 13 is a factor of \" + NUMBER)\r\n} else {\r\n  msg  (NUMBER + \" is NOT divisible by 13, or to say it differently: 13 is NOT a factor of \" + NUMBER)\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>not sure about Pixie's library... (haven't studied/looked-at-it, yet)</p>\n<hr>\n<p>time and date stuff can be really simple (for example: your 'days' Integer Attribute just increases) or really complex (real life full time and date system: leap year, seasons, months, altering days in months, days, weeks, years, seconds, minutes, hours, etc)... the more I read about about time and date... I got into how to figure out the actual exact date (in just dealing with leap year and altering quantity of days in some months... I found that even leap year is more complex than I realized... if you want to be exact as you can be... lol... time and date stuff gets really complicated and math heavy if you're trying to have a full time and date system accurately... I now will NEVER EVER take the clock/time and date on a computer for granted again, lol. This is some complex stuff! Glad someone figured it out, so we can just look at see what time and date it is on our computers, watches, cell phones, etc, lol)</p>\n<hr>\n<pre><code>you might also want to understand the modulus operator as well:\n\nmodulus operator: %\n\nthe modulus operation is division, but instead of getting the quotient, it gets the REMAINDER\n\n7 / 4 = Q:1 // using Integer Data Type / Operations, the remainder/decimal gets truncated (removed)\nvs\n7 % 4 = R:3\n\nwhat's neat about (finding/getting) the REMAINDER is that it allows for handling cyclic and factoring (which includes finding if a number is even or odd):\n\n// seconds (and minutes too) go from 0 to 59 to 0 to 59 ...and on and on...\n\ngame.clock_second = 0 % 60 = 0\ngame.clock_second = 1 % 60 = 1\ngame.clock_second = 59 % 60 = 59\ngame.clock_second = 60 % 60 = 0\ngame.clock_second = 61 % 60 = 1\ngame.clock_second = 119 % 60 = 59\ngame.clock_second = 120 % 60 = 0\ngame.clock_second = 121 % 60 = 1\n\n// military hours: 0 to 23\n// civilian hours: 0 to 11\n\ngame.clock_military_hour = 0 % 24 = 0\ngame.clock_civilian_hour = 0 % 12 = 0\ngame.clock_military_hour = 1 % 24 = 1\ngame.clock_civilian_hour = 1 % 12 = 1\ngame.clock_military_hour = 11 % 24 = 11\ngame.clock_civilian_hour = 11 % 12 = 11\ngame.clock_military_hour = 12 % 24 = 12\ngame.clock_civilian_hour = 12 % 12 = 0\ngame.clock_military_hour = 13 % 24 = 13\ngame.clock_civilian_hour = 13 % 12 = 1\ngame.clock_military_hour = 23 % 24 = 23\ngame.clock_civilian_hour = 23 % 12 = 11\ngame.clock_military_hour = 24 % 24 = 0\ngame.clock_civilian_hour = 24 % 12 = 0\ngame.clock_military_hour = 25 % 24 = 1\ngame.clock_civilian_hour = 25 % 12 = 1\ngame.clock_military_hour = 35 % 24 = 11\ngame.clock_civilian_hour = 35 % 12 = 11\ngame.clock_military_hour = 36 % 24 = 12\ngame.clock_civilian_hour = 36 % 12 = 0\ngame.clock_military_hour = 37 % 24 = 13\ngame.clock_civilian_hour = 37 % 12 = 1\ngame.clock_military_hour = 47 % 24 = 23\ngame.clock_civilian_hour = 47 % 12 = 11\ngame.clock_military_hour = 48 % 24 = 0\ngame.clock_civilian_hour = 48 % 12 = 0\n\n// NUMBER = (SOME INTEGER):\n\nif (NUMBER % 2 = 0) {\n  msg (NUMBER + \" is an even number\")\n  msg (NUMBER + \" is divisible by 2, or to say it differently: 2 is a factor of \" + NUMBER)\n} else { // if (NUMBER % 2 = 1) {\n  msg (NUMBER + \" is an odd number\")\n}\n\nif (NUMBER % 3 = 0) {\n  msg (NUMBER + \" is divisible by 3, or to say it differently: 3 is a factor of \" + NUMBER)\n} else {\n  msg  (NUMBER + \" is NOT divisible by 3, or to say it differently: 3 is NOT a factor of \" + NUMBER)\n}\n\nif (NUMBER % 4 = 0) {\n  msg (NUMBER + \" is divisible by 4, or to say it differently: 4 is a factor of \" + NUMBER)\n} else {\n  msg  (NUMBER + \" is NOT divisible by 4, or to say it differently: 4 is NOT a factor of \" + NUMBER)\n}\n\nif (NUMBER % 13 = 0) {\n  msg (NUMBER + \" is divisible by 13, or to say it differently: 13 is a factor of \" + NUMBER)\n} else {\n  msg  (NUMBER + \" is NOT divisible by 13, or to say it differently: 13 is NOT a factor of \" + NUMBER)\n}\n</code></pre>\n\n",
      "PostDate": "2017-06-19T16:44:09.1487093Z",
      "LastEditDate": "2017-06-19T16:52:54.6389861Z",
      "link": null
    },
    {
      "PostId": "09f6b0b6-d85f-430a-88a8-eb7afa124401",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "// civilian hours: 0 to 11\r\nnot quite...\r\nYou should add 1 to the result...\r\ngame.clock_civilian_hour = 48 % 12 +1= 01\r\n\r\nThen, just so that your clock does not show 9:1\r\nyou will need to convert the minutes to:\r\nright(\"00\" + game.clock_second,2) = 01 % 60 = 01\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>// civilian hours: 0 to 11<br>\nnot quite...<br>\nYou should add 1 to the result...<br>\ngame.clock_civilian_hour = 48 % 12 +1= 01</p>\n<p>Then, just so that your clock does not show 9:1<br>\nyou will need to convert the minutes to:<br>\nright(\"00\" + game.clock_second,2) = 01 % 60 = 01</p>\n\n",
      "PostDate": "2017-06-19T19:23:57.273007Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e0ae1537-3940-4f47-aa78-69ba9aa7a93e",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just for clarity (sorry if it is above and I missed it)...\r\n\r\nDo you have it working WITH the time information displayed in the status pane?\r\n\r\nMy WIP accounts for time of day into less specific sections (dawn, morning, noon, afternoon, dusk, evening, and midnight) that change ever 15 moves or after a 'wait for midnight' (noon, morning, etc) command.  I would love to have the time of day displayed in the status pane as it changes but never could figure out how to do that.  I'm pretty sure I can get \"Time of Day:\" displayed, but I do not know how to take my changeScript and apply it to the status pane.\r\n\r\nIf anyone can help, I'd much appreciate it!\r\n\r\nAnd, if I did miss it above, feel free to call me whatever derogatory name you wish and tell me to re-read the thread.  =)",
      "EditableFormat": "markdown",
      "HTML": "<p>Just for clarity (sorry if it is above and I missed it)...</p>\n<p>Do you have it working WITH the time information displayed in the status pane?</p>\n<p>My WIP accounts for time of day into less specific sections (dawn, morning, noon, afternoon, dusk, evening, and midnight) that change ever 15 moves or after a 'wait for midnight' (noon, morning, etc) command.  I would love to have the time of day displayed in the status pane as it changes but never could figure out how to do that.  I'm pretty sure I can get \"Time of Day:\" displayed, but I do not know how to take my changeScript and apply it to the status pane.</p>\n<p>If anyone can help, I'd much appreciate it!</p>\n<p>And, if I did miss it above, feel free to call me whatever derogatory name you wish and tell me to re-read the thread.  =)</p>\n\n",
      "PostDate": "2017-06-19T20:34:42.378617Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c793dc24-c27f-41d2-b81f-4767f0c23cf4",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I think I've got this working now, but question - this has time, does it have a way of tracking what day it is, dates, months, etc?\r\n\r\nIt does now!\r\n\r\nSomeone asked about this last autumn. I have just updated the library (version 3.1) to include the function I posted then, and the help file too to explain how to use it. You will need to download the library again (same link).",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think I've got this working now, but question - this has time, does it have a way of tracking what day it is, dates, months, etc?</p>\n</blockquote>\n<p>It does now!</p>\n<p>Someone asked about this last autumn. I have just updated the library (version 3.1) to include the function I posted then, and the help file too to explain how to use it. You will need to download the library again (same link).</p>\n\n",
      "PostDate": "2017-06-20T08:18:17.8349763Z",
      "LastEditDate": "2017-06-20T08:18:55.1031979Z",
      "link": null
    },
    {
      "PostId": "32e0399d-0918-4810-9221-92ab2f0f60d1",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just making sure, if I just rewrite the file I had before to version 3.1, I shouldn't need to change anything in game, save for refreshing the file?\r\n\r\nJust to add, where should I be putting the ```SetInc(#)``` command? I've been trying to use it as an expression, to no avail. But I'm still experimenting - Nevermind, cracked it. Call Function.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just making sure, if I just rewrite the file I had before to version 3.1, I shouldn't need to change anything in game, save for refreshing the file?</p>\n<p>Just to add, where should I be putting the <code>SetInc(#)</code> command? I've been trying to use it as an expression, to no avail. But I'm still experimenting - Nevermind, cracked it. Call Function.</p>\n\n",
      "PostDate": "2017-06-21T09:53:18.6175157Z",
      "LastEditDate": "2017-06-21T09:59:31.5512796Z",
      "link": null
    },
    {
      "PostId": "afc34d15-4785-4528-bb36-3c91b68100a9",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Just making sure, if I just rewrite the file I had before to version 3.1, I shouldn't need to change anything in game, save for refreshing the file?\r\n\r\nCorrect.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Just making sure, if I just rewrite the file I had before to version 3.1, I shouldn't need to change anything in game, save for refreshing the file?</p>\n</blockquote>\n<p>Correct.</p>\n\n",
      "PostDate": "2017-06-21T12:57:23.1998358Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
