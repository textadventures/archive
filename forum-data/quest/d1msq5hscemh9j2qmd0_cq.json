{
  "Topic": {
    "TopicId": "d1msq5hscemh9j2qmd0_cq",
    "ForumId": "10",
    "Title": "Skill buy/point allocation",
    "LastUpdated": "2019-05-17T09:36:05.3738443Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "93270ffc-1aed-49d2-ab40-d450a2a08655",
      "UserId": 173896,
      "Username": "Kazotel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/30ad942a3c933ebc7fee484482e5a8a2?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I currently have a series of questions whose answers predetermine a set of skills (simply integer attributes). For example, a particular question asks how the player would break into a compound- if they chose sneak it, they naturally get a bonus to sneak (kinda old school Bethesda style).\r\nHowever, I would like to be able to have points the player can assign to skills, both later on during level up and at the start of the game, in case they don't like the predetermined skills.  How would I do that?\r\n\r\nI know how to do it, I just don't know how to go about doing it. There would be a variable (pointsAvailable) equal to say 45. The player can use a command to set the stat to a certain value. After doing so, have a script compare the original value to the previous value, and add or subtract points from pointsAvailable appropriately. At the end of every allocation, compare the change in value to points available, and if the change in value is less than or equal to the pointsAvailable, the allocation goes through. That doesn't seem to be the best way to do this though, so I was wondering if someone else could think of another way to do it.\r\n\r\nThis is what I mean:\r\n1. Create a command, maybe \"set 'skill' #numb#\" that lets the player allocate points. (How to do this only during level up, Idk. The only way I can think of is to create an object on level up that the player can interact with as a verb to allocate points, and then destroy the object once the points are allocated.)\r\n2. Create 2 new attributes for the player: pointsAvailable and \"skill\"Previous. (\"skill\" is the name of the skill.) Skill previous is set equal to the skill's value at the start of the level up function.\r\n3. After the player runs the command, subtract skillPrevious from the skill's current value. If the result is positive, subtract that number from pointsAvailable if it is less than or equal to pointsAvailable. If it is negative, add the abs value of that number to pointsAvailable.\r\n\r\nThank you for any and all help, and forgive me if this is overly complicated and there is really just a simple solution.",
      "EditableFormat": "markdown",
      "HTML": "<p>I currently have a series of questions whose answers predetermine a set of skills (simply integer attributes). For example, a particular question asks how the player would break into a compound- if they chose sneak it, they naturally get a bonus to sneak (kinda old school Bethesda style).<br>\nHowever, I would like to be able to have points the player can assign to skills, both later on during level up and at the start of the game, in case they don't like the predetermined skills.  How would I do that?</p>\n<p>I know how to do it, I just don't know how to go about doing it. There would be a variable (pointsAvailable) equal to say 45. The player can use a command to set the stat to a certain value. After doing so, have a script compare the original value to the previous value, and add or subtract points from pointsAvailable appropriately. At the end of every allocation, compare the change in value to points available, and if the change in value is less than or equal to the pointsAvailable, the allocation goes through. That doesn't seem to be the best way to do this though, so I was wondering if someone else could think of another way to do it.</p>\n<p>This is what I mean:</p>\n<ol>\n<li>Create a command, maybe \"set 'skill' #numb#\" that lets the player allocate points. (How to do this only during level up, Idk. The only way I can think of is to create an object on level up that the player can interact with as a verb to allocate points, and then destroy the object once the points are allocated.)</li>\n<li>Create 2 new attributes for the player: pointsAvailable and \"skill\"Previous. (\"skill\" is the name of the skill.) Skill previous is set equal to the skill's value at the start of the level up function.</li>\n<li>After the player runs the command, subtract skillPrevious from the skill's current value. If the result is positive, subtract that number from pointsAvailable if it is less than or equal to pointsAvailable. If it is negative, add the abs value of that number to pointsAvailable.</li>\n</ol>\n<p>Thank you for any and all help, and forgive me if this is overly complicated and there is really just a simple solution.</p>\n\n",
      "PostDate": "2019-05-17T09:36:05.3738443Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d92ec4a0-0e0e-4863-9f95-0d5d70aaf393",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "from Jaynabonne's and Pixie's, 'levellib' (level library), not sure where to find it now, but here's my thread back when I was trying to learn it:\r\n\r\nhttps://textadventures.co.uk/forum/quest/topic/5089/solved-level-library-pixies\r\n\r\n(basically, you just do string manipulation with text processor commands, and bloody getting the syntax correct with it, in the Command Element or Function or Object_and_Script_Attribute_and_Delegate or whatever other scripting Element, along with creating additional Command Elements that do the 'increase' and 'decrease' functionality of your desired skill/stat point distribution/adjustment, via acting as buttons/hyperlinks that you can click on, along with handling the stat/skill points you got to work with and for each individual skill/stat adjustment/distribution or canceling/undoing it, so that you don't got beyond the upper limit allowed and/or lower than that skill/stat original/initial value, and any etc handling)\r\n\r\nhttps://docs.textadventures.co.uk/quest/text_processor.html (the text processor commands)\r\n\r\nask if you need help on this stuff... (Edit: I understand this stuff much more easily now, just took a quick look over the code to get it, not rusty at it now, lol)\r\n\r\n--------\r\n\r\nalternatively, you can probably create your own popup window frame with buttons/events, using the JS and html/css/etc-web programming, which KV, mrangel, and Pixie can probably help you with doing that stuff (I've still got to learn it too, sighs)",
      "EditableFormat": "markdown",
      "HTML": "<p>from Jaynabonne's and Pixie's, 'levellib' (level library), not sure where to find it now, but here's my thread back when I was trying to learn it:</p>\n<p>https://textadventures.co.uk/forum/quest/topic/5089/solved-level-library-pixies</p>\n<p>(basically, you just do string manipulation with text processor commands, and bloody getting the syntax correct with it, in the Command Element or Function or Object_and_Script_Attribute_and_Delegate or whatever other scripting Element, along with creating additional Command Elements that do the 'increase' and 'decrease' functionality of your desired skill/stat point distribution/adjustment, via acting as buttons/hyperlinks that you can click on, along with handling the stat/skill points you got to work with and for each individual skill/stat adjustment/distribution or canceling/undoing it, so that you don't got beyond the upper limit allowed and/or lower than that skill/stat original/initial value, and any etc handling)</p>\n<p>https://docs.textadventures.co.uk/quest/text_processor.html (the text processor commands)</p>\n<p>ask if you need help on this stuff... (Edit: I understand this stuff much more easily now, just took a quick look over the code to get it, not rusty at it now, lol)</p>\n<hr>\n<p>alternatively, you can probably create your own popup window frame with buttons/events, using the JS and html/css/etc-web programming, which KV, mrangel, and Pixie can probably help you with doing that stuff (I've still got to learn it too, sighs)</p>\n\n",
      "PostDate": "2019-05-17T10:24:55.8344753Z",
      "LastEditDate": "2019-05-17T11:07:01.8299479Z",
      "link": null
    },
    {
      "PostId": "ef3af4d8-99a2-4758-9dab-111c67c364d5",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is a tutorial:\r\nhttp://docs.textadventures.co.uk/quest/ui-dialogue-points.html\r\n\r\nIt is one of the most complicated tutorials on there, and it is about creating a dialogue panel to handle it, which is not quite what you describe, so may not be so useful.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is a tutorial:<br>\nhttp://docs.textadventures.co.uk/quest/ui-dialogue-points.html</p>\n<p>It is one of the most complicated tutorials on there, and it is about creating a dialogue panel to handle it, which is not quite what you describe, so may not be so useful.</p>\n\n",
      "PostDate": "2019-05-17T13:17:09.4304177Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "04d4fc4e-b018-47fd-b57d-af1c11d9e3b0",
      "UserId": 173896,
      "Username": "Kazotel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/30ad942a3c933ebc7fee484482e5a8a2?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you both for the help. I think Pixie's suggestion may be exactly what I need, after a bit of modification. I will confirm if that's the case after attempting it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you both for the help. I think Pixie's suggestion may be exactly what I need, after a bit of modification. I will confirm if that's the case after attempting it.</p>\n\n",
      "PostDate": "2019-05-17T19:45:12.9309173Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e46e69a-62fb-4126-9aa9-fad63851c2b3",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Didn't read Pixie's example... but,\r\nI would do it this way...\r\n\"Congrads, you made a level! You now have 5 points to spend on your stats, you may add to:\r\n{command:Strength} {command:Dexterity}… and so on.\"\r\nIf you can only increase a stat by 1 point per level, you could disable that choice from showing up again.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Didn't read Pixie's example... but,<br>\nI would do it this way...<br>\n\"Congrads, you made a level! You now have 5 points to spend on your stats, you may add to:<br>\n{command:Strength} {command:Dexterity}… and so on.\"<br>\nIf you can only increase a stat by 1 point per level, you could disable that choice from showing up again.</p>\n\n",
      "PostDate": "2019-05-18T01:14:40.5964583Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "63cc25c5-8918-4462-8b28-ab1d488d810b",
      "UserId": 173896,
      "Username": "Kazotel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/30ad942a3c933ebc7fee484482e5a8a2?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, I was able to get it to work. At the start of the game, players can now chose to assign points or have them assigned automatically by computer.\r\nNow I have a similar problem. Upon level up, I would like to redisplay the attribute allocation menu so they can update it. Example: a player has 10 strength and they level up and are allowed to allocate one additional point. They chose to allocate it to strength, updating it from 10 to 11. When they level up again, they may chose to level strength up to 12. \r\nI thought this would be relatively easy. On level up, take the players attribute and put it into a js var. In the attribute menu, the changes will affect the js var, which is then converted back into the player attribute. My problems are as such:\r\n1. I don't know how to assign a quest object attribute to a java variable (I did find a lot of \"squiffy.get\" which seemed like it could have been perfect).\r\n2. I can't seem to figure out how to *print* the variable to the screen.\r\n\r\nDarkLizerd's solution would work and I'll use it if the js doesn't work, but I would prefer the js.",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, I was able to get it to work. At the start of the game, players can now chose to assign points or have them assigned automatically by computer.<br>\nNow I have a similar problem. Upon level up, I would like to redisplay the attribute allocation menu so they can update it. Example: a player has 10 strength and they level up and are allowed to allocate one additional point. They chose to allocate it to strength, updating it from 10 to 11. When they level up again, they may chose to level strength up to 12.<br>\nI thought this would be relatively easy. On level up, take the players attribute and put it into a js var. In the attribute menu, the changes will affect the js var, which is then converted back into the player attribute. My problems are as such:</p>\n<ol>\n<li>I don't know how to assign a quest object attribute to a java variable (I did find a lot of \"squiffy.get\" which seemed like it could have been perfect).</li>\n<li>I can't seem to figure out how to <em>print</em> the variable to the screen.</li>\n</ol>\n<p>DarkLizerd's solution would work and I'll use it if the js doesn't work, but I would prefer the js.</p>\n\n",
      "PostDate": "2019-05-18T06:06:46.4840898Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "40b05e35-a334-45a3-8905-b75a684bcbd7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Edit: Made a silly mistake\r\n\r\n><ol><li>I don't know how to assign a quest object attribute to a java variable</li></ol>\r\n\r\nIf you just want a javascript variable, you can use something simple like:\r\n\r\n`JS.eval (\"strengthstat = \" + player.strength + \";\")`\r\nThat puts together a string like `strengthstat = 14;` and sends that string to the browser, to be executed as javascript.\r\n\r\n><ol start=\"2\"><li>I can't seem to figure out how to print the variable to the screen.</li></ol>\r\n\r\nPrinting a JS variable is easy. You can just use the `addText` function in Javascript.\r\n\r\nFor example: `addText (\"Your strength is now \"+strengthstat+\".\");`\r\nOr if you want it to scroll to make sure the player can see it, use `addTextAndScroll` instead.\r\n\r\nBut you probably don't want to.\r\nIn Pixie's example, it creates a HTML div to contain each of your stats (the line `<div id=\"magic\" style=\"display:inline;\">0</div>` in the example). So rather than printing a value, you most likely want to change the value that's already on the screen.\r\n\r\nIn the `incAtt` javascript function, it looks directly at the value on the page, instead of using a separate variable for it.\r\n\r\nThe javascript line `n = parseInt($('#' + att).html());` finds the HTML element whose `id` is stored in the variable `att`, reads the HTML within that element, converts it to a number, and assigns that to the javascript variable `n`.\r\n\r\nThe line `$('#' + att).html(n + 1);` finds the HTML element whose `id` is in the variable `att`, and sets the text inside it to be the result of the expression `n + 1`.\r\n\r\nSo if you're using that, instead of setting a javascript variable to anything, you would have a piece of Quest code that looks something like:\r\n```\r\nforeach (stat, Split(\"strength;defense;magic;evasion\")) {\r\n  if (HasInt (player, stat)) {\r\n    JS.eval (\"$('#\" + stat + \"').text('\" + GetAttribute (player, stat) + \"');\")\r\n  }\r\n}\r\n```\r\nrunning immediately after the dialog is displayed, to fill the dialog with the current values of your stats.",
      "EditableFormat": "markdown",
      "HTML": "<p>Edit: Made a silly mistake</p>\n<blockquote>\n<ol><li>I don't know how to assign a quest object attribute to a java variable</li></ol>\n</blockquote>\n<p>If you just want a javascript variable, you can use something simple like:</p>\n<p><code>JS.eval (\"strengthstat = \" + player.strength + \";\")</code><br>\nThat puts together a string like <code>strengthstat = 14;</code> and sends that string to the browser, to be executed as javascript.</p>\n<blockquote>\n<ol start=\"2\"><li>I can't seem to figure out how to print the variable to the screen.</li></ol>\n</blockquote>\n<p>Printing a JS variable is easy. You can just use the <code>addText</code> function in Javascript.</p>\n<p>For example: <code>addText (\"Your strength is now \"+strengthstat+\".\");</code><br>\nOr if you want it to scroll to make sure the player can see it, use <code>addTextAndScroll</code> instead.</p>\n<p>But you probably don't want to.<br>\nIn Pixie's example, it creates a HTML div to contain each of your stats (the line <code>&lt;div id=\"magic\" style=\"display:inline;\"&gt;0&lt;/div&gt;</code> in the example). So rather than printing a value, you most likely want to change the value that's already on the screen.</p>\n<p>In the <code>incAtt</code> javascript function, it looks directly at the value on the page, instead of using a separate variable for it.</p>\n<p>The javascript line <code>n = parseInt($('#' + att).html());</code> finds the HTML element whose <code>id</code> is stored in the variable <code>att</code>, reads the HTML within that element, converts it to a number, and assigns that to the javascript variable <code>n</code>.</p>\n<p>The line <code>$('#' + att).html(n + 1);</code> finds the HTML element whose <code>id</code> is in the variable <code>att</code>, and sets the text inside it to be the result of the expression <code>n + 1</code>.</p>\n<p>So if you're using that, instead of setting a javascript variable to anything, you would have a piece of Quest code that looks something like:</p>\n<pre><code>foreach (stat, Split(\"strength;defense;magic;evasion\")) {\n  if (HasInt (player, stat)) {\n    JS.eval (\"$('#\" + stat + \"').text('\" + GetAttribute (player, stat) + \"');\")\n  }\n}\n</code></pre>\n<p>running immediately after the dialog is displayed, to fill the dialog with the current values of your stats.</p>\n\n",
      "PostDate": "2019-05-18T15:08:17.5965534Z",
      "LastEditDate": "2019-05-18T15:09:03.4258327Z",
      "link": null
    },
    {
      "PostId": "9ed1e92d-6177-4645-b4d9-240c8ea789f3",
      "UserId": 173896,
      "Username": "Kazotel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/30ad942a3c933ebc7fee484482e5a8a2?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, it took me a long time (and a headache XD) but I figured out what you were saying, mrangel, and I was able to get it to work, so thank you. \r\n\r\nAlas, the world is not nice to me. I hate asking for more help but I simply don't know enough about js to troubleshoot it. Using Pixie's dialogue box, I have discovered that if the dialogue box is opened more than once (i.e. Once during character creation and again on level up), the dialogue box _freezes?_ I can't alter any of the values using the arrows and if I click \"done\" it will run the ```HandleDialogue``` function but the values are all default and the dialogue itself won't close. Again, sorry for asking for yet more help, and thank you all for your assistance and patience. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, it took me a long time (and a headache XD) but I figured out what you were saying, mrangel, and I was able to get it to work, so thank you.</p>\n<p>Alas, the world is not nice to me. I hate asking for more help but I simply don't know enough about js to troubleshoot it. Using Pixie's dialogue box, I have discovered that if the dialogue box is opened more than once (i.e. Once during character creation and again on level up), the dialogue box <em>freezes?</em> I can't alter any of the values using the arrows and if I click \"done\" it will run the <code>HandleDialogue</code> function but the values are all default and the dialogue itself won't close. Again, sorry for asking for yet more help, and thank you all for your assistance and patience.</p>\n\n",
      "PostDate": "2019-05-18T20:31:50.9715599Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "939cb208-06a0-4471-a625-ac98d774e57d",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "One way to keep someone  from getting too strong, too quick, is to require more points to add stats as they increase...\r\n(Assuming DnD normal 3-18)\r\n1-5, .5 points to increase, IE +2 str for 1 point.\r\n6-10, 1 point each.\r\n10-15, 2 points each,\r\n16, 3 points,\r\n17, 4 points,\r\n18, 5 points,\r\n19, 7 points,\r\n20, 9 points,\r\nand so on...\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>One way to keep someone  from getting too strong, too quick, is to require more points to add stats as they increase...<br>\n(Assuming DnD normal 3-18)<br>\n1-5, .5 points to increase, IE +2 str for 1 point.<br>\n6-10, 1 point each.<br>\n10-15, 2 points each,<br>\n16, 3 points,<br>\n17, 4 points,<br>\n18, 5 points,<br>\n19, 7 points,<br>\n20, 9 points,<br>\nand so on...</p>\n\n",
      "PostDate": "2019-05-18T21:02:30.5495817Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cac439f7-9021-4ae4-8b0b-a63cef9fff09",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Using Pixie's dialogue box, I have discovered that if the dialogue box is opened more than once\r\n\r\nOK… I'm just skimming over the code, but it looks like you might be creating the dialogue box more than once. This could be a problem, because when you have 2 elements with the same ID, it doesn't know which to change.\r\n\r\nMy recommendation would be to make sure that the line:\r\n```\r\nJS.addText (GetFileData(\"dialogue.html\"))\r\n```\r\nis only run once. Then when you want to display the dialog again, you would do:\r\n```\r\nJS.eval(\"$('#dialog_window_1').dialog('open');\")\r\n```\r\nto make the hidden dialog reappear, rather than creating a new one.\r\n\r\nThe problem with this is that if the player loads a saved game, there won't be a hidden dialog to show.\r\nSo really, what you need to do is create the dialog in your UI initialisation script, and then open it whenever it's needed.\r\n\r\nDoes that make sense? I'm kind of rushed now so don't have time to explain in more depth, but if there's anything you need help with I'm sure someone will be around to answer.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Using Pixie's dialogue box, I have discovered that if the dialogue box is opened more than once</p>\n</blockquote>\n<p>OK… I'm just skimming over the code, but it looks like you might be creating the dialogue box more than once. This could be a problem, because when you have 2 elements with the same ID, it doesn't know which to change.</p>\n<p>My recommendation would be to make sure that the line:</p>\n<pre><code>JS.addText (GetFileData(\"dialogue.html\"))\n</code></pre>\n<p>is only run once. Then when you want to display the dialog again, you would do:</p>\n<pre><code>JS.eval(\"$('#dialog_window_1').dialog('open');\")\n</code></pre>\n<p>to make the hidden dialog reappear, rather than creating a new one.</p>\n<p>The problem with this is that if the player loads a saved game, there won't be a hidden dialog to show.<br>\nSo really, what you need to do is create the dialog in your UI initialisation script, and then open it whenever it's needed.</p>\n<p>Does that make sense? I'm kind of rushed now so don't have time to explain in more depth, but if there's anything you need help with I'm sure someone will be around to answer.</p>\n\n",
      "PostDate": "2019-05-19T09:45:32.0892441Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
