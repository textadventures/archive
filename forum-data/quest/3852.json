{
  "Topic": {
    "TopicId": "3852",
    "ForumId": "10",
    "Title": "how do I set exit alias?",
    "LastUpdated": "2013-08-11T14:19:59+01:00",
    "ReplyCount": 8
  },
  "Posts": [
    {
      "PostId": "25807",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "I'm using the Web Version.\n\nDoes anyone know if there is a function or script command that can allow me to change the alias attribute in the Exit element?\n\nOr how to get an Element?\n\nThanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nAmy",
      "EditableFormat": "bbcode",
      "HTML": "I'm using the Web Version.<br/><br/>Does anyone know if there is a function or script command that can allow me to change the alias attribute in the Exit element?<br/><br/>Or how to get an Element?<br/><br/>Thanks <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Amy",
      "PostDate": "2013-08-10T23:17:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25808",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I never used the web version, so I can't help you with about it, so all I can offer is this code stuff:\n\n-------\n\nif you can go into the code with the web version, then you can simply do this in the code:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m -->\n\njust add in the &quot;alias&quot; attribute as shown in the above link\n\nif you need help on how~where to do this, just ask! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n------\n\n&quot;exits&quot; are Elements, and so are not Objects, as &quot;Exits&quot; are &quot;connectors&quot; of Room Objects. As best as I understand this stuff, lol.\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayAlias\">http://quest5.net/wiki/GetDisplayAlias</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayName\">http://quest5.net/wiki/GetDisplayName</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayNameLink\">http://quest5.net/wiki/GetDisplayNameLink</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByLink\">http://quest5.net/wiki/GetExitByLink</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByName\">http://quest5.net/wiki/GetExitByName</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetListDisplayAlias\">http://quest5.net/wiki/GetListDisplayAlias</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetUniqueElementName\">http://quest5.net/wiki/GetUniqueElementName</a><!-- m -->\n\nand then there's the &quot;equipment&quot; coding trick:\n\nplayer.alias_old_or_original = player.alias // this saves your old~original alias for recalling~using later\nplayer.alias = GetDisplayAlias (player) + &quot;(equipped)&quot; // this creates your new alias for you to use, you can add whatever text you want, as the: + &quot;(equipped)&quot; ~ is just for equipment being understood and shown as worn~equipped.\n\nand you can use other things besides just &quot;alias&quot; too:\n\n&quot;worn&quot; (Chase's word) = &quot;equipped&quot; (my word)\n&quot;wear&quot; (Chase's word) = &quot;equip&quot; (my word)\n&quot;remove&quot; (Chase's word) = &quot;unequip&quot; (my word)\n\nfrom Chase's Wearables Library:\n\n[code:3okcvr94]DoWear&#58;\n\nobject&#46;worn = true\nobject&#46;drop = false\nobject&#46;original_alias = object&#46;alias\nobject&#46;display = GetDisplayName(object)\nobject&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;\n\nDoRemove&#58;\n\nobject&#46;worn = false\nobject&#46;drop = object&#46;original_drop\nobject&#46;alias = object&#46;original_alias\nobject&#46;original_drop = null\nobject&#46;original_alias = null\nobject&#46;display = null[/code:3okcvr94]",
      "EditableFormat": "bbcode",
      "HTML": "I never used the web version, so I can't help you with about it, so all I can offer is this code stuff:<br/><br/>-------<br/><br/>if you can go into the code with the web version, then you can simply do this in the code:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m --><br/><br/>just add in the &quot;alias&quot; attribute as shown in the above link<br/><br/>if you need help on how~where to do this, just ask! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>------<br/><br/>&quot;exits&quot; are Elements, and so are not Objects, as &quot;Exits&quot; are &quot;connectors&quot; of Room Objects. As best as I understand this stuff, lol.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Exit_element\">http://quest5.net/wiki/Exit_element</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/AllExits\">http://quest5.net/wiki/AllExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExitsForRoom\">http://quest5.net/wiki/ScopeExitsForRoom</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/ScopeExits\">http://quest5.net/wiki/ScopeExits</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayAlias\">http://quest5.net/wiki/GetDisplayAlias</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayName\">http://quest5.net/wiki/GetDisplayName</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetDisplayNameLink\">http://quest5.net/wiki/GetDisplayNameLink</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByLink\">http://quest5.net/wiki/GetExitByLink</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetExitByName\">http://quest5.net/wiki/GetExitByName</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetListDisplayAlias\">http://quest5.net/wiki/GetListDisplayAlias</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/GetUniqueElementName\">http://quest5.net/wiki/GetUniqueElementName</a><!-- m --><br/><br/>and then there's the &quot;equipment&quot; coding trick:<br/><br/>player.alias_old_or_original = player.alias // this saves your old~original alias for recalling~using later<br/>player.alias = GetDisplayAlias (player) + &quot;(equipped)&quot; // this creates your new alias for you to use, you can add whatever text you want, as the: + &quot;(equipped)&quot; ~ is just for equipment being understood and shown as worn~equipped.<br/><br/>and you can use other things besides just &quot;alias&quot; too:<br/><br/>&quot;worn&quot; (Chase's word) = &quot;equipped&quot; (my word)<br/>&quot;wear&quot; (Chase's word) = &quot;equip&quot; (my word)<br/>&quot;remove&quot; (Chase's word) = &quot;unequip&quot; (my word)<br/><br/>from Chase's Wearables Library:<br/><br/><pre><code>DoWear&#58;<br/><br/>object&#46;worn = true<br/>object&#46;drop = false<br/>object&#46;original_alias = object&#46;alias<br/>object&#46;display = GetDisplayName(object)<br/>object&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;<br/><br/>DoRemove&#58;<br/><br/>object&#46;worn = false<br/>object&#46;drop = object&#46;original_drop<br/>object&#46;alias = object&#46;original_alias<br/>object&#46;original_drop = null<br/>object&#46;original_alias = null<br/>object&#46;display = null</code></pre>",
      "PostDate": "2013-08-11T00:15:04+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25809",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "Thanks HK <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI don't see a function or scriptcommand that helps in this situation.  Would you know what the type for non-directional is called?  eg &quot;northdirection&quot;.  I know it's not called &quot;nodirection&quot; and &quot;nondirectional&quot;.\n\nI'm trying to adapt Jay's ASL code to the Web Version but the Web Version is uncooperative.  After a few hours of tinkering, this is what I came up with:\n\n1) The Web Version's compass won't allow me to use hyphens in the name (so exit0-10 is out of the question).\n\n2) create exit() works great for 10 directions N, NW, W, SW, S, SE, E, NE, U, D.  I can set the ID and Jay's code works.  Makes me think that ID is the &quot;name&quot; and the Name is the &quot;alias&quot;...\n\n3) create exit() won't allow me to designate an ID unless I specify a type.  So the &quot;up to the north&quot; and &quot;down to the north&quot; are not working.  When it tries to clone, eg newexit = clone(GetObject(exitname)), clone is passed a null as a parameter.\n\nLOL oh... so much typing...  now I wish I had fewer than 26 directions XD\n\nI still have a few scenarios left to try.  Until I get the type for &quot;non-directional&quot; direction, I am probably going to stick in &quot;northdirection&quot; and see what happens, because then I can set an ID.\n\nI added the stuff below in case you'd like to see how I'm going about it.\n\nJay's code: [url:t15q6q70]http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3832&amp;start=15#p25752[/url:t15q6q70]\n\nThis is the section that I'm trying to adapt to the Web Version:\n[code:t15q6q70]&lt;exit name=&quot;exit0-10&quot; alias=&quot;north&quot;&gt;\n    &lt;inherit name=&quot;northdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-1-10&quot; alias=&quot;northwest&quot;&gt;\n    &lt;inherit name=&quot;northwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-100&quot; alias=&quot;west&quot;&gt;\n    &lt;inherit name=&quot;westdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit-110&quot; alias=&quot;southwest&quot;&gt;\n    &lt;inherit name=&quot;southwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit010&quot; alias=&quot;south&quot;&gt;\n    &lt;inherit name=&quot;southdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit110&quot; alias=&quot;southeast&quot;&gt;\n    &lt;inherit name=&quot;southeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit100&quot; alias=&quot;east&quot;&gt;\n    &lt;inherit name=&quot;eastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit1-10&quot; alias=&quot;northeast&quot;&gt;\n    &lt;inherit name=&quot;northeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit00-1&quot; alias=&quot;up&quot;&gt;\n    &lt;inherit name=&quot;updirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit0-1-1&quot; alias=&quot;up to the north&quot; /&gt;\n  &lt;exit name=&quot;exit-1-1-1&quot; alias=&quot;up to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit-10-1&quot; alias=&quot;up to the west&quot; /&gt;\n  &lt;exit name=&quot;exit-11-1&quot; alias=&quot;up to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit01-1&quot; alias=&quot;up to the south&quot; /&gt;\n  &lt;exit name=&quot;exit11-1&quot; alias=&quot;up to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit10-1&quot; alias=&quot;up to the east&quot; /&gt;\n  &lt;exit name=&quot;exit1-1-1&quot; alias=&quot;up to the northeast&quot; /&gt;\n  &lt;exit name=&quot;exit001&quot; alias=&quot;down&quot;&gt;\n    &lt;inherit name=&quot;downdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit0-11&quot; alias=&quot;down to the north&quot; /&gt;\n  &lt;exit name=&quot;exit-1-11&quot; alias=&quot;down to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit-101&quot; alias=&quot;down to the west&quot; /&gt;\n  &lt;exit name=&quot;exit-111&quot; alias=&quot;down to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit011&quot; alias=&quot;down to the south&quot; /&gt;\n  &lt;exit name=&quot;exit111&quot; alias=&quot;down to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit101&quot; alias=&quot;down to the east&quot; /&gt;\n  &lt;exit name=&quot;exit1-11&quot; alias=&quot;down to the northeast&quot; /&gt;[/code:t15q6q70]\n\nThis is my adaptation of that section:\n[code:t15q6q70]// Create Exits Templates\n    grTemp = GetObject(&quot;gameroom&quot;)\n    // north/northdirection\n    // create exit (&quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)\n    create exit (&quot;exit0-10&quot;, &quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)\n    // northwest/northwestdirection\n    // create exit (&quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)\n    create exit (&quot;exit-1-10&quot;, &quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)\n    // west/westdirection\n    // create exit (&quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)\n    create exit (&quot;exit-100&quot;, &quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)\n    // southwest/southwestdirection\n    // create exit (&quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)\n    create exit (&quot;exit-110&quot;, &quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)\n    // south/southdirection\n    // create exit (&quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)\n    create exit (&quot;exit010&quot;, &quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)\n    // southeast/southeastdirection\n    // create exit (&quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)\n    create exit (&quot;exit110&quot;, &quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)\n    // east/eastdirection\n    // create exit (&quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)\n    create exit (&quot;exit100&quot;, &quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)\n    // northeast/northeastdirection\n    // create exit (&quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)\n    create exit (&quot;exit1-10&quot;, &quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)\n    // up/updirection\n    // create exit (&quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)\n    create exit (&quot;exit00-1&quot;, &quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)\n    // up to the north\n    // create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)\n    // up to the northwest\n    // create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)\n    // up to the west\n    // create exit (&quot;exit-10-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-10-1&quot;, grTemp, grTemp)\n    // up to the southwest\n    // create exit (&quot;exit-11-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-11-1&quot;, grTemp, grTemp)\n    // up to the south\n    // create exit (&quot;exit01-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit01-1&quot;, grTemp, grTemp)\n    // up to the southeast\n    // create exit (&quot;exit11-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit11-1&quot;, grTemp, grTemp)\n    // up to the east\n    // create exit (&quot;exit10-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit10-1&quot;, grTemp, grTemp)\n    // up to the northeast\n    // create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)\n    // down/downdirection\n    // create exit (&quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)\n    create exit (&quot;exit001&quot;, &quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)\n    // down to the north\n    // create exit (&quot;exit0-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit0-11&quot;, grTemp, grTemp)\n    // down to the northwest\n    // create exit (&quot;exit-1-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit-1-11&quot;, grTemp, grTemp)\n    // down to the west\n    // create exit (&quot;exit-101&quot;, grTemp, grTemp)\n    create exit (&quot;exit-101&quot;, grTemp, grTemp)\n    // down to the southwest\n    // create exit (&quot;exit-111&quot;, grTemp, grTemp)\n    create exit (&quot;exit-111&quot;, grTemp, grTemp)\n    // down to the south\n    // create exit (&quot;exit011&quot;, grTemp, grTemp)\n    create exit (&quot;exit011&quot;, grTemp, grTemp)\n    // down to the southeast\n    // create exit (&quot;exit111&quot;, grTemp, grTemp)\n    create exit (&quot;exit111&quot;, grTemp, grTemp)\n    // down to the east\n    // create exit (&quot;exit101&quot;, grTemp, grTemp)\n    create exit (&quot;exit101&quot;, grTemp, grTemp)\n    // down to the northeast\n    // create exit (&quot;exit1-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit1-11&quot;, grTemp, grTemp)\n[/code:t15q6q70]\n\nMy program so far:\n[code:t15q6q70]&lt;!--Saved by Quest 5&#46;4&#46;4896&#46;9778--&gt;\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Jaynabonne's Example&quot;&gt;\n    &lt;gameid&gt;f0627466-3ac2-4df3-bff2-58e0dc837b22&lt;/gameid&gt;\n    &lt;version&gt;3&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;menufont&gt;Georgia, serif&lt;/menufont&gt;\n    &lt;description&gt;&lt;/description&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;gameroom&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;beforeenter type=&quot;script&quot;&gt;\n      SetObjAtt_gameroom_dims\n      SetObjAtt_gameroom_rooms\n      LayoutRooms\n    &lt;/beforeenter&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room1&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room2&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room3&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room4&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room5&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room6&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room7&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room8&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room9&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room10&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;SetObjAtt_gameroom_rooms&quot;&gt;\n    ObjTemp = GetObject(&quot;gameroom&quot;)\n    set (ObjTemp, &quot;rooms&quot;, NewStringList())\n    list add (ObjTemp&#46;rooms, &quot;room1&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room2&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room3&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room4&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room5&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room6&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room7&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room8&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room9&quot;)\n    list add (ObjTemp&#46;rooms, &quot;room10&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;PrintObjAtt_gameroom_rooms&quot;&gt;\n    msg (&quot;Function&#58;PrintObjAtt_room_dims&quot;)\n    ObjTemp = GetObject(&quot;gameroom&quot;)\n    msg (StringListItem(ObjTemp&#46;rooms, 0))\n    msg (StringListItem(ObjTemp&#46;rooms, 1))\n    msg (StringListItem(ObjTemp&#46;rooms, 2))\n    msg (StringListItem(ObjTemp&#46;rooms, 3))\n    msg (StringListItem(ObjTemp&#46;rooms, 4))\n    msg (StringListItem(ObjTemp&#46;rooms, 5))\n    msg (StringListItem(ObjTemp&#46;rooms, 6))\n    msg (StringListItem(ObjTemp&#46;rooms, 7))\n    msg (StringListItem(ObjTemp&#46;rooms, 8))\n    msg (StringListItem(ObjTemp&#46;rooms, 9))\n  &lt;/function&gt;\n  &lt;function name=&quot;SetObjAtt_gameroom_dims&quot;&gt;\n    ObjTemp = GetObject(&quot;gameroom&quot;)\n    set (ObjTemp, &quot;dimsx&quot;, 5)\n    set (ObjTemp, &quot;dimsy&quot;, 1)\n    set (ObjTemp, &quot;dimsz&quot;, 1)\n  &lt;/function&gt;\n  &lt;function name=&quot;PrintObjAtt_gameroom_dims&quot;&gt;\n    msg (&quot;Function&#58;PrintObjAtt_room_dims&quot;)\n    ObjTemp = GetObject(&quot;gameroom&quot;)\n    msg (ObjTemp&#46;dimsx)\n    msg (ObjTemp&#46;dimsy)\n    msg (ObjTemp&#46;dimsz)\n  &lt;/function&gt;\n  &lt;function name=&quot;LayoutRooms&quot;&gt;&lt;!&#91;CDATA&#91;\n    // Create Exits Templates\n    grTemp = GetObject(&quot;gameroom&quot;)\n    // north/northdirection\n    // create exit (&quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)\n    create exit (&quot;exit0-10&quot;, &quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)\n    // northwest/northwestdirection\n    // create exit (&quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)\n    create exit (&quot;exit-1-10&quot;, &quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)\n    // west/westdirection\n    // create exit (&quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)\n    create exit (&quot;exit-100&quot;, &quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)\n    // southwest/southwestdirection\n    // create exit (&quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)\n    create exit (&quot;exit-110&quot;, &quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)\n    // south/southdirection\n    // create exit (&quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)\n    create exit (&quot;exit010&quot;, &quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)\n    // southeast/southeastdirection\n    // create exit (&quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)\n    create exit (&quot;exit110&quot;, &quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)\n    // east/eastdirection\n    // create exit (&quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)\n    create exit (&quot;exit100&quot;, &quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)\n    // northeast/northeastdirection\n    // create exit (&quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)\n    create exit (&quot;exit1-10&quot;, &quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)\n    // up/updirection\n    // create exit (&quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)\n    create exit (&quot;exit00-1&quot;, &quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)\n    // up to the north\n    // create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)\n    // up to the northwest\n    // create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)\n    // up to the west\n    // create exit (&quot;exit-10-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-10-1&quot;, grTemp, grTemp)\n    // up to the southwest\n    // create exit (&quot;exit-11-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit-11-1&quot;, grTemp, grTemp)\n    // up to the south\n    // create exit (&quot;exit01-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit01-1&quot;, grTemp, grTemp)\n    // up to the southeast\n    // create exit (&quot;exit11-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit11-1&quot;, grTemp, grTemp)\n    // up to the east\n    // create exit (&quot;exit10-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit10-1&quot;, grTemp, grTemp)\n    // up to the northeast\n    // create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)\n    create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)\n    // down/downdirection\n    // create exit (&quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)\n    create exit (&quot;exit001&quot;, &quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)\n    // down to the north\n    // create exit (&quot;exit0-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit0-11&quot;, grTemp, grTemp)\n    // down to the northwest\n    // create exit (&quot;exit-1-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit-1-11&quot;, grTemp, grTemp)\n    // down to the west\n    // create exit (&quot;exit-101&quot;, grTemp, grTemp)\n    create exit (&quot;exit-101&quot;, grTemp, grTemp)\n    // down to the southwest\n    // create exit (&quot;exit-111&quot;, grTemp, grTemp)\n    create exit (&quot;exit-111&quot;, grTemp, grTemp)\n    // down to the south\n    // create exit (&quot;exit011&quot;, grTemp, grTemp)\n    create exit (&quot;exit011&quot;, grTemp, grTemp)\n    // down to the southeast\n    // create exit (&quot;exit111&quot;, grTemp, grTemp)\n    create exit (&quot;exit111&quot;, grTemp, grTemp)\n    // down to the east\n    // create exit (&quot;exit101&quot;, grTemp, grTemp)\n    create exit (&quot;exit101&quot;, grTemp, grTemp)\n    // down to the northeast\n    // create exit (&quot;exit1-11&quot;, grTemp, grTemp)\n    create exit (&quot;exit1-11&quot;, grTemp, grTemp)\n    // Create a list to hold the assigned room indices&#46;\n    assigned = NewList()\n    // Layout the first room&#46;\n    room = gameroom&#46;rooms&#91;0&#93;\n    currentroom = GetObject(room)\n    set (currentroom, &quot;x&quot;, (GetRandomInt(0, gameroom&#46;dimsx-1)))\n    set (currentroom, &quot;y&quot;, (GetRandomInt(0, gameroom&#46;dimsy-1)))\n    set (currentroom, &quot;z&quot;, (GetRandomInt(0, gameroom&#46;dimsz-1)))\n    // Mark this room's slot&#46;\n    list add (assigned, CoordsToIndex(currentroom&#46;x, currentroom&#46;y, currentroom&#46;z))\n    // Layout the remaining rooms from here&#46;\n    LCTemp = ListCount(gameroom&#46;rooms)-1\n    for (i, 1, LCTemp) {\n      room = gameroom&#46;rooms&#91;i&#93;\n      newroom = GetObject(room)\n      positioned = false\n      while (not positioned) {\n        // Select a random room top start from&#46;\n        room = gameroom&#46;rooms&#91;GetRandomInt(0, i-1)&#93;\n        sourceroom = GetObject(room)\n        // Select a random direction from this room&#46;\n        dirgood = false\n        while (not dirgood) {\n          dirx = GetRandomInt(0,2)-1\n          diry = GetRandomInt(0,2)-1\n          dirz = GetRandomInt(0,2)-1\n          dirgood = dirx &lt;&gt; 0 or diry &lt;&gt; 0 or dirz &lt;&gt; 0\n        }\n        // msg (&quot;dir&#58; &quot; + dirx + &quot;, &quot; + diry + &quot;, &quot; + dirz)\n        // See if we can position the room here&#46;\n        newroom&#46;x = (sourceroom&#46;x + dirx + gameroom&#46;dimsx) % gameroom&#46;dimsx\n        newroom&#46;y = (sourceroom&#46;y + diry + gameroom&#46;dimsy) % gameroom&#46;dimsy\n        newroom&#46;z = (sourceroom&#46;z + dirz + gameroom&#46;dimsz) % gameroom&#46;dimsz\n        index = CoordsToIndex(newroom&#46;x, newroom&#46;y, newroom&#46;z)\n        positioned = not index in assigned\n      }\n      // Remember this position is used&#46;\n      list add (assigned, index)\n      // Create and assign the exits&#46;\n      exitname = &quot;exit&quot; + dirx + diry + dirz\n      oppname = &quot;exit&quot; + -dirx + -diry + -dirz\n      // msg(&quot;exitname = &quot; + exitname + &quot;, oppname = &quot; + oppname)\n      ObjTemp = GetObject(exitname)\n      newexit = clone(ObjTemp)\n      ObjTemp = GetObject(oppname)\n      oppexit = clone(ObjTemp)\n      newexit&#46;parent = sourceroom\n      newexit&#46;to = newroom\n      oppexit&#46;parent = newroom\n      oppexit&#46;to = sourceroom\n      // msg (&quot;pos&#58; &quot; + newroom&#46;x + &quot;, &quot; + newroom&#46;y + &quot;, &quot; + newroom&#46;z)\n      currentroom = newroom\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;CoordsToIndex&quot; parameters=&quot;x, y, z&quot; type=&quot;int&quot;&gt;\n    return (x + gameroom&#46;dimsx*(y + gameroom&#46;dimsy*z))\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:t15q6q70]",
      "EditableFormat": "bbcode",
      "HTML": "Thanks HK <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I don't see a function or scriptcommand that helps in this situation.  Would you know what the type for non-directional is called?  eg &quot;northdirection&quot;.  I know it's not called &quot;nodirection&quot; and &quot;nondirectional&quot;.<br/><br/>I'm trying to adapt Jay's ASL code to the Web Version but the Web Version is uncooperative.  After a few hours of tinkering, this is what I came up with:<br/><br/>1) The Web Version's compass won't allow me to use hyphens in the name (so exit0-10 is out of the question).<br/><br/>2) create exit() works great for 10 directions N, NW, W, SW, S, SE, E, NE, U, D.  I can set the ID and Jay's code works.  Makes me think that ID is the &quot;name&quot; and the Name is the &quot;alias&quot;...<br/><br/>3) create exit() won't allow me to designate an ID unless I specify a type.  So the &quot;up to the north&quot; and &quot;down to the north&quot; are not working.  When it tries to clone, eg newexit = clone(GetObject(exitname)), clone is passed a null as a parameter.<br/><br/>LOL oh... so much typing...  now I wish I had fewer than 26 directions XD<br/><br/>I still have a few scenarios left to try.  Until I get the type for &quot;non-directional&quot; direction, I am probably going to stick in &quot;northdirection&quot; and see what happens, because then I can set an ID.<br/><br/>I added the stuff below in case you'd like to see how I'm going about it.<br/><br/>Jay's code: <a href=\"http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3832&amp;start=15#p25752\" rel=\"nofollow\">http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3832&amp;start=15#p25752</a><br/><br/>This is the section that I'm trying to adapt to the Web Version:<br/><pre><code>&lt;exit name=&quot;exit0-10&quot; alias=&quot;north&quot;&gt;<br/>    &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-1-10&quot; alias=&quot;northwest&quot;&gt;<br/>    &lt;inherit name=&quot;northwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-100&quot; alias=&quot;west&quot;&gt;<br/>    &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit-110&quot; alias=&quot;southwest&quot;&gt;<br/>    &lt;inherit name=&quot;southwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit010&quot; alias=&quot;south&quot;&gt;<br/>    &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit110&quot; alias=&quot;southeast&quot;&gt;<br/>    &lt;inherit name=&quot;southeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit100&quot; alias=&quot;east&quot;&gt;<br/>    &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit1-10&quot; alias=&quot;northeast&quot;&gt;<br/>    &lt;inherit name=&quot;northeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit00-1&quot; alias=&quot;up&quot;&gt;<br/>    &lt;inherit name=&quot;updirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit0-1-1&quot; alias=&quot;up to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit-1-1-1&quot; alias=&quot;up to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit-10-1&quot; alias=&quot;up to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit-11-1&quot; alias=&quot;up to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit01-1&quot; alias=&quot;up to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit11-1&quot; alias=&quot;up to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit10-1&quot; alias=&quot;up to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit1-1-1&quot; alias=&quot;up to the northeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit001&quot; alias=&quot;down&quot;&gt;<br/>    &lt;inherit name=&quot;downdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit0-11&quot; alias=&quot;down to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit-1-11&quot; alias=&quot;down to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit-101&quot; alias=&quot;down to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit-111&quot; alias=&quot;down to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit011&quot; alias=&quot;down to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit111&quot; alias=&quot;down to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit101&quot; alias=&quot;down to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit1-11&quot; alias=&quot;down to the northeast&quot; /&gt;</code></pre><br/><br/>This is my adaptation of that section:<br/><pre><code>// Create Exits Templates<br/>    grTemp = GetObject(&quot;gameroom&quot;)<br/>    // north/northdirection<br/>    // create exit (&quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)<br/>    create exit (&quot;exit0-10&quot;, &quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)<br/>    // northwest/northwestdirection<br/>    // create exit (&quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)<br/>    create exit (&quot;exit-1-10&quot;, &quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)<br/>    // west/westdirection<br/>    // create exit (&quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)<br/>    create exit (&quot;exit-100&quot;, &quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)<br/>    // southwest/southwestdirection<br/>    // create exit (&quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)<br/>    create exit (&quot;exit-110&quot;, &quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)<br/>    // south/southdirection<br/>    // create exit (&quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)<br/>    create exit (&quot;exit010&quot;, &quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)<br/>    // southeast/southeastdirection<br/>    // create exit (&quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)<br/>    create exit (&quot;exit110&quot;, &quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)<br/>    // east/eastdirection<br/>    // create exit (&quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)<br/>    create exit (&quot;exit100&quot;, &quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)<br/>    // northeast/northeastdirection<br/>    // create exit (&quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)<br/>    create exit (&quot;exit1-10&quot;, &quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)<br/>    // up/updirection<br/>    // create exit (&quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)<br/>    create exit (&quot;exit00-1&quot;, &quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)<br/>    // up to the north<br/>    // create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)<br/>    // up to the northwest<br/>    // create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)<br/>    // up to the west<br/>    // create exit (&quot;exit-10-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-10-1&quot;, grTemp, grTemp)<br/>    // up to the southwest<br/>    // create exit (&quot;exit-11-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-11-1&quot;, grTemp, grTemp)<br/>    // up to the south<br/>    // create exit (&quot;exit01-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit01-1&quot;, grTemp, grTemp)<br/>    // up to the southeast<br/>    // create exit (&quot;exit11-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit11-1&quot;, grTemp, grTemp)<br/>    // up to the east<br/>    // create exit (&quot;exit10-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit10-1&quot;, grTemp, grTemp)<br/>    // up to the northeast<br/>    // create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)<br/>    // down/downdirection<br/>    // create exit (&quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)<br/>    create exit (&quot;exit001&quot;, &quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)<br/>    // down to the north<br/>    // create exit (&quot;exit0-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit0-11&quot;, grTemp, grTemp)<br/>    // down to the northwest<br/>    // create exit (&quot;exit-1-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-1-11&quot;, grTemp, grTemp)<br/>    // down to the west<br/>    // create exit (&quot;exit-101&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-101&quot;, grTemp, grTemp)<br/>    // down to the southwest<br/>    // create exit (&quot;exit-111&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-111&quot;, grTemp, grTemp)<br/>    // down to the south<br/>    // create exit (&quot;exit011&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit011&quot;, grTemp, grTemp)<br/>    // down to the southeast<br/>    // create exit (&quot;exit111&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit111&quot;, grTemp, grTemp)<br/>    // down to the east<br/>    // create exit (&quot;exit101&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit101&quot;, grTemp, grTemp)<br/>    // down to the northeast<br/>    // create exit (&quot;exit1-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit1-11&quot;, grTemp, grTemp)<br/></code></pre><br/><br/>My program so far:<br/><pre><code>&lt;!--Saved by Quest 5&#46;4&#46;4896&#46;9778--&gt;<br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Jaynabonne's Example&quot;&gt;<br/>    &lt;gameid&gt;f0627466-3ac2-4df3-bff2-58e0dc837b22&lt;/gameid&gt;<br/>    &lt;version&gt;3&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;menufont&gt;Georgia, serif&lt;/menufont&gt;<br/>    &lt;description&gt;&lt;/description&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;gameroom&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;beforeenter type=&quot;script&quot;&gt;<br/>      SetObjAtt_gameroom_dims<br/>      SetObjAtt_gameroom_rooms<br/>      LayoutRooms<br/>    &lt;/beforeenter&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room1&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room2&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room3&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room4&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room5&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room6&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room7&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room8&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room9&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room10&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;SetObjAtt_gameroom_rooms&quot;&gt;<br/>    ObjTemp = GetObject(&quot;gameroom&quot;)<br/>    set (ObjTemp, &quot;rooms&quot;, NewStringList())<br/>    list add (ObjTemp&#46;rooms, &quot;room1&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room2&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room3&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room4&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room5&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room6&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room7&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room8&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room9&quot;)<br/>    list add (ObjTemp&#46;rooms, &quot;room10&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;PrintObjAtt_gameroom_rooms&quot;&gt;<br/>    msg (&quot;Function&#58;PrintObjAtt_room_dims&quot;)<br/>    ObjTemp = GetObject(&quot;gameroom&quot;)<br/>    msg (StringListItem(ObjTemp&#46;rooms, 0))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 1))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 2))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 3))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 4))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 5))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 6))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 7))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 8))<br/>    msg (StringListItem(ObjTemp&#46;rooms, 9))<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;SetObjAtt_gameroom_dims&quot;&gt;<br/>    ObjTemp = GetObject(&quot;gameroom&quot;)<br/>    set (ObjTemp, &quot;dimsx&quot;, 5)<br/>    set (ObjTemp, &quot;dimsy&quot;, 1)<br/>    set (ObjTemp, &quot;dimsz&quot;, 1)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;PrintObjAtt_gameroom_dims&quot;&gt;<br/>    msg (&quot;Function&#58;PrintObjAtt_room_dims&quot;)<br/>    ObjTemp = GetObject(&quot;gameroom&quot;)<br/>    msg (ObjTemp&#46;dimsx)<br/>    msg (ObjTemp&#46;dimsy)<br/>    msg (ObjTemp&#46;dimsz)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;LayoutRooms&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    // Create Exits Templates<br/>    grTemp = GetObject(&quot;gameroom&quot;)<br/>    // north/northdirection<br/>    // create exit (&quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)<br/>    create exit (&quot;exit0-10&quot;, &quot;exit0-10&quot;, grTemp, grTemp, &quot;northdirection&quot;)<br/>    // northwest/northwestdirection<br/>    // create exit (&quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)<br/>    create exit (&quot;exit-1-10&quot;, &quot;exit-1-10&quot;, grTemp, grTemp, &quot;northwestdirection&quot;)<br/>    // west/westdirection<br/>    // create exit (&quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)<br/>    create exit (&quot;exit-100&quot;, &quot;exit-100&quot;, grTemp, grTemp, &quot;westdirection&quot;)<br/>    // southwest/southwestdirection<br/>    // create exit (&quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)<br/>    create exit (&quot;exit-110&quot;, &quot;exit-110&quot;, grTemp, grTemp, &quot;southwestdirection&quot;)<br/>    // south/southdirection<br/>    // create exit (&quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)<br/>    create exit (&quot;exit010&quot;, &quot;exit010&quot;, grTemp, grTemp, &quot;southdirection&quot;)<br/>    // southeast/southeastdirection<br/>    // create exit (&quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)<br/>    create exit (&quot;exit110&quot;, &quot;exit110&quot;, grTemp, grTemp, &quot;southeastdirection&quot;)<br/>    // east/eastdirection<br/>    // create exit (&quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)<br/>    create exit (&quot;exit100&quot;, &quot;exit100&quot;, grTemp, grTemp, &quot;eastdirection&quot;)<br/>    // northeast/northeastdirection<br/>    // create exit (&quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)<br/>    create exit (&quot;exit1-10&quot;, &quot;exit1-10&quot;, grTemp, grTemp, &quot;northeastdirection&quot;)<br/>    // up/updirection<br/>    // create exit (&quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)<br/>    create exit (&quot;exit00-1&quot;, &quot;exit00-1&quot;, grTemp, grTemp, &quot;updirection&quot;)<br/>    // up to the north<br/>    // create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit0-1-1&quot;, grTemp, grTemp)<br/>    // up to the northwest<br/>    // create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-1-1-1&quot;, grTemp, grTemp)<br/>    // up to the west<br/>    // create exit (&quot;exit-10-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-10-1&quot;, grTemp, grTemp)<br/>    // up to the southwest<br/>    // create exit (&quot;exit-11-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-11-1&quot;, grTemp, grTemp)<br/>    // up to the south<br/>    // create exit (&quot;exit01-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit01-1&quot;, grTemp, grTemp)<br/>    // up to the southeast<br/>    // create exit (&quot;exit11-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit11-1&quot;, grTemp, grTemp)<br/>    // up to the east<br/>    // create exit (&quot;exit10-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit10-1&quot;, grTemp, grTemp)<br/>    // up to the northeast<br/>    // create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit1-1-1&quot;, grTemp, grTemp)<br/>    // down/downdirection<br/>    // create exit (&quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)<br/>    create exit (&quot;exit001&quot;, &quot;exit001&quot;, grTemp, grTemp, &quot;downdirection&quot;)<br/>    // down to the north<br/>    // create exit (&quot;exit0-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit0-11&quot;, grTemp, grTemp)<br/>    // down to the northwest<br/>    // create exit (&quot;exit-1-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-1-11&quot;, grTemp, grTemp)<br/>    // down to the west<br/>    // create exit (&quot;exit-101&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-101&quot;, grTemp, grTemp)<br/>    // down to the southwest<br/>    // create exit (&quot;exit-111&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit-111&quot;, grTemp, grTemp)<br/>    // down to the south<br/>    // create exit (&quot;exit011&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit011&quot;, grTemp, grTemp)<br/>    // down to the southeast<br/>    // create exit (&quot;exit111&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit111&quot;, grTemp, grTemp)<br/>    // down to the east<br/>    // create exit (&quot;exit101&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit101&quot;, grTemp, grTemp)<br/>    // down to the northeast<br/>    // create exit (&quot;exit1-11&quot;, grTemp, grTemp)<br/>    create exit (&quot;exit1-11&quot;, grTemp, grTemp)<br/>    // Create a list to hold the assigned room indices&#46;<br/>    assigned = NewList()<br/>    // Layout the first room&#46;<br/>    room = gameroom&#46;rooms&#91;0&#93;<br/>    currentroom = GetObject(room)<br/>    set (currentroom, &quot;x&quot;, (GetRandomInt(0, gameroom&#46;dimsx-1)))<br/>    set (currentroom, &quot;y&quot;, (GetRandomInt(0, gameroom&#46;dimsy-1)))<br/>    set (currentroom, &quot;z&quot;, (GetRandomInt(0, gameroom&#46;dimsz-1)))<br/>    // Mark this room's slot&#46;<br/>    list add (assigned, CoordsToIndex(currentroom&#46;x, currentroom&#46;y, currentroom&#46;z))<br/>    // Layout the remaining rooms from here&#46;<br/>    LCTemp = ListCount(gameroom&#46;rooms)-1<br/>    for (i, 1, LCTemp) {<br/>      room = gameroom&#46;rooms&#91;i&#93;<br/>      newroom = GetObject(room)<br/>      positioned = false<br/>      while (not positioned) {<br/>        // Select a random room top start from&#46;<br/>        room = gameroom&#46;rooms&#91;GetRandomInt(0, i-1)&#93;<br/>        sourceroom = GetObject(room)<br/>        // Select a random direction from this room&#46;<br/>        dirgood = false<br/>        while (not dirgood) {<br/>          dirx = GetRandomInt(0,2)-1<br/>          diry = GetRandomInt(0,2)-1<br/>          dirz = GetRandomInt(0,2)-1<br/>          dirgood = dirx &lt;&gt; 0 or diry &lt;&gt; 0 or dirz &lt;&gt; 0<br/>        }<br/>        // msg (&quot;dir&#58; &quot; + dirx + &quot;, &quot; + diry + &quot;, &quot; + dirz)<br/>        // See if we can position the room here&#46;<br/>        newroom&#46;x = (sourceroom&#46;x + dirx + gameroom&#46;dimsx) % gameroom&#46;dimsx<br/>        newroom&#46;y = (sourceroom&#46;y + diry + gameroom&#46;dimsy) % gameroom&#46;dimsy<br/>        newroom&#46;z = (sourceroom&#46;z + dirz + gameroom&#46;dimsz) % gameroom&#46;dimsz<br/>        index = CoordsToIndex(newroom&#46;x, newroom&#46;y, newroom&#46;z)<br/>        positioned = not index in assigned<br/>      }<br/>      // Remember this position is used&#46;<br/>      list add (assigned, index)<br/>      // Create and assign the exits&#46;<br/>      exitname = &quot;exit&quot; + dirx + diry + dirz<br/>      oppname = &quot;exit&quot; + -dirx + -diry + -dirz<br/>      // msg(&quot;exitname = &quot; + exitname + &quot;, oppname = &quot; + oppname)<br/>      ObjTemp = GetObject(exitname)<br/>      newexit = clone(ObjTemp)<br/>      ObjTemp = GetObject(oppname)<br/>      oppexit = clone(ObjTemp)<br/>      newexit&#46;parent = sourceroom<br/>      newexit&#46;to = newroom<br/>      oppexit&#46;parent = newroom<br/>      oppexit&#46;to = sourceroom<br/>      // msg (&quot;pos&#58; &quot; + newroom&#46;x + &quot;, &quot; + newroom&#46;y + &quot;, &quot; + newroom&#46;z)<br/>      currentroom = newroom<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;CoordsToIndex&quot; parameters=&quot;x, y, z&quot; type=&quot;int&quot;&gt;<br/>    return (x + gameroom&#46;dimsx*(y + gameroom&#46;dimsy*z))<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2013-08-11T02:09:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25810",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "0. &quot;Would you know what the type for non-directional is called? eg &quot;northdirection&quot;. I know it's not called &quot;nodirection&quot; and &quot;nondirectional&quot; (imamy).&quot;\n\nthe compass~exit directions are Object Types ~ Inherited Attributes, so simply not assigning one or any of the 8, I would presume equate to a &quot;non-directional&quot;. My guess anyways, as I think you can make exits without a specified direction, at least in the desktop version (again I think... I haven't worked too much with exits yet). Moving from room to room doesn't require having any directions applied to do so, as it can simply be done by this means (in code):\n\n(in the GUI~Editor, this is the &quot;MoveObject&quot; script ---- add a~new script -&gt; Objects -&gt; &quot;MoveObject&quot; script)\n\nobject_name.parent = old_parent_name // the room that the object you want to move is in\n~then where ever, just have this changing script below~\nobject_name.parent = new_parent_name // the room you want to go~more your object to\n\nas can be seen, no direction is required for room movement.\n\nso, simply don't have this (for one example) inherited attribute:\n\n[code:3j0g3fsk]&lt;exit name=&quot;blah&quot;&gt;\n  &lt;inherit name=&quot;northwestdirection&quot; /&gt;\n  // etc code stuff\n&lt;/exit&gt;[/code:3j0g3fsk]\n\nhave it look like this instead:\n\n[code:3j0g3fsk]&lt;exit name=&quot;blah&quot;&gt;\n  // etc code stuff\n&lt;/exit&gt;[/code:3j0g3fsk]\n\nOr, you could make a new Object Type, called &quot;no_or_non_direction&quot;, though you'd have to be a good programmer~coder, as you'd have to code this to do core code work (Alex has coded a lot of stuff, &quot;core code&quot;, which works &quot;behind the scenes&quot;, allowing the GUI~Editor and the code scripts that we use, to work so easily~simply. It's easy to do a Take command in the GUI~Editor or in code, because the code that it requires or uses to work, has been done by Alex as his core code ~ quest game engine, that works &quot;internally or behind the scenes&quot; from us, well we can see it by doing the Filter -&gt; Show Library Elements).\n\nif you were using the desktop version, you could do this to look at quest's core code stuff:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_inherited_types\">http://quest5.net/wiki/Using_inherited_types</a><!-- m -->\n\nhere's what the Filter -&gt; Show Library Elements provides for the Core Code stuff:\n\n(the normally hidden core code stuff is shown as a light-grey colored text~font, this only refers to the left pane-side, the &quot;tree of stuff&quot;. you've probably noticed light grey colored text~font with Attributes and Inherited Attributes on the right side~pane, but this refers to something else, which I can explain if you're interested, though I'm not going to do it here, as it'll take a bit of explaining~typing, as I don't want to get off-subject in the middle of this stuff here, lol)\n\n(unfortunately, people haven't put this info on the online wiki yet... it'd be a lot of work so thus why people haven't, lol)\n\n(though I think you can see this by looking at the developer board, as I think Alex has his core code open to look at, but I haven't looked at this board myself yet to see if or where it is within the developers board)\n\n(I'm just showing the Object Types stuff)\n\n[code:3j0g3fsk]Object Types&#58;\n\ndefaultverb\ndefaultgame\ndefaultobject\ndefaultexit\ndirection\ncompassdirection\nupdowndirection\ninoutdirection\nnorthwestdirection\nnorthdirection\nnortheastdirection\nwestdirection\neastdirection\nsouthwestdirection\nsouthdirection\nsoutheastdirection\nupdirection\ndowndirection\nindirection\noutdirection\ndefaultcommand\nmale\nnamedmale\nfemale\nnamedfemale\nplural\nmaleplural\nfemaleplural\nopenable\ncontainer_base\ncontainer_closed\ncontainer_open\nsurface\ncontainer\ncontainer_limited\ncontainer_lockable\ndefaultplayer\nswitchable\nedible\ngridborder_path_ew\ngridborder_path_e\ngridborder_path_w\ngridborder_path_ns\ngridborder_path_n\ngridborder_path_s\neditor_room\neditor_object\neditor_player[/code:3j0g3fsk]\n\nand here's what attributes the &quot;northdirection&quot; Object Type provides the Object that is given it via its Inherited Attribute:\n\n[code:3j0g3fsk]Filter -&gt; Show Library Elements\n\nAdvanced -&gt; &quot;northdirection&quot; (hidden, but now it's displayed due to &quot;show library elements&quot; being checked by you) Object Type (left side-pane, the &quot;tree of stuff&quot;) -&gt; Type (Tab, its only tab, lol, right side-pane)\n\nName&#58; northdirection\n\nInherited Types&#58;\n\nName&#58; compassdirection\nValue&#58; compassdirection\nSource&#58; northdirection\n\nName&#58; direction\nValue&#58; direction\nSource&#58; compassdirection\n\nAttributes&#58;\n\nName&#58; name\nValue&#58; northdirection\nSource&#58; northdirection\n\nName&#58; elementtype\nValue&#58; type\nSource&#58; northdirection\n\nName&#58; alias\nValue&#58; north\nSource&#58; northdirection\n\nName&#58; alt\nValue&#58; n\nSource&#58; northdirection\n\nName&#58; prefix\nValue&#58; (blank)\nSource&#58; compassdirection\n\nName&#58; suffix\nValue&#58; (blank)\nSource&#58; compassdirection\n\nName&#58; displayverbs\nValue&#58; Go\nSource&#58; compassdirection[/code:3j0g3fsk]\n\nso, to make a &quot;no or non directional&quot; Object Type, maybe it's not that hard:\n\n[code:3j0g3fsk]Advanced -&gt; Object Types -&gt; Add -&gt;\n\nName&#58; nondirectional_1\n\nInherited Types -&gt; Add -&gt;\n\ncompassdirection (scroll down to find it)\n\nAttributes -&gt; Add -&gt;\n\nName&#58; name\nType&#58; stringlist\nValue&#58; nondirectional_1\n\nName&#58; elementtype\nType&#58; stringlist\nValue&#58; type\n\nName&#58; alias\nType&#58; stringlist\nValue&#58; north\n\nName&#58; alt\nType&#58; stringlist\nValue&#58; na\n\n// &quot;na&quot; = n/a = not applicable = no or any direction\n\nrepeatedly make more Object Types (nondirectional_2, nondirectional_3, etc etc etc) as you need them\n\nthen for your exit&#58;\n\n&lt;exit name=&quot;blah&quot;&gt;\n  &lt;inherit name=&quot;nondirectional_1&quot; /&gt;\n  // etc code stuff\n&lt;/exit&gt;\n\n&lt;exit name=&quot;blah&quot;&gt;\n  &lt;inherit name=&quot;nondirectional_2&quot; /&gt;\n  // etc code stuff\n&lt;/exit&gt;\n\netc etc etc exits\n\n// HOWEVER, this might cause an error as the compass itself hasn't been coded for a &quot;nondirection&quot; extra path slots&#46;&#46;&#46;[/code:3j0g3fsk]\n\n2. yep, sorry for never clarifying this confusing point for most new people, as indeed you're right:\n\nour outside-of-game (real world~life) concept -&gt; game term~attribute used\n\nID -&gt; name (quest game engine requires this, just as the government requires your ID card, SS#, fingerprints, home address, and etc. the game requires an unique identifier for everything. Also, the game maker can use this for organization, info, and etc to keep track of stuff easier; for management ~ this stuff is not suppose to be seen by the game player, as it would be too revealing~helpful~cheating for them)\n\n&quot;Name&quot; (what we think of when thinking of a &quot;name&quot;, is actually the) -&gt; alias (this is what the game player sees while playing the game)\n\n3x. &quot;LOL oh... so much typing... now I wish I had fewer than 26 directions XD (imamy)&quot;\n\nya, this seems to be the one paradox~problem with coding... even for the simpliest of things it takes a much larger amount of code to do it, so the more stuff and more complicated stuff you want, the exponential increase in the amount of code you got to type~have, sighs.\n\ncomputers ~ coding ~ applications ~ games ~ etc, requires a lot of work to do very little work... lol\n\ncomputers ARE STUPID, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\nit takes so much effort to explain (via coding) to a computer just do something extremely simple... and for something not so simple, you can easily probably have 10,000+ pages of coding...",
      "EditableFormat": "bbcode",
      "HTML": "0. &quot;Would you know what the type for non-directional is called? eg &quot;northdirection&quot;. I know it's not called &quot;nodirection&quot; and &quot;nondirectional&quot; (imamy).&quot;<br/><br/>the compass~exit directions are Object Types ~ Inherited Attributes, so simply not assigning one or any of the 8, I would presume equate to a &quot;non-directional&quot;. My guess anyways, as I think you can make exits without a specified direction, at least in the desktop version (again I think... I haven't worked too much with exits yet). Moving from room to room doesn't require having any directions applied to do so, as it can simply be done by this means (in code):<br/><br/>(in the GUI~Editor, this is the &quot;MoveObject&quot; script ---- add a~new script -&gt; Objects -&gt; &quot;MoveObject&quot; script)<br/><br/>object_name.parent = old_parent_name // the room that the object you want to move is in<br/>~then where ever, just have this changing script below~<br/>object_name.parent = new_parent_name // the room you want to go~more your object to<br/><br/>as can be seen, no direction is required for room movement.<br/><br/>so, simply don't have this (for one example) inherited attribute:<br/><br/><pre><code>&lt;exit name=&quot;blah&quot;&gt;<br/>  &lt;inherit name=&quot;northwestdirection&quot; /&gt;<br/>  // etc code stuff<br/>&lt;/exit&gt;</code></pre><br/><br/>have it look like this instead:<br/><br/><pre><code>&lt;exit name=&quot;blah&quot;&gt;<br/>  // etc code stuff<br/>&lt;/exit&gt;</code></pre><br/><br/>Or, you could make a new Object Type, called &quot;no_or_non_direction&quot;, though you'd have to be a good programmer~coder, as you'd have to code this to do core code work (Alex has coded a lot of stuff, &quot;core code&quot;, which works &quot;behind the scenes&quot;, allowing the GUI~Editor and the code scripts that we use, to work so easily~simply. It's easy to do a Take command in the GUI~Editor or in code, because the code that it requires or uses to work, has been done by Alex as his core code ~ quest game engine, that works &quot;internally or behind the scenes&quot; from us, well we can see it by doing the Filter -&gt; Show Library Elements).<br/><br/>if you were using the desktop version, you could do this to look at quest's core code stuff:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_inherited_types\">http://quest5.net/wiki/Using_inherited_types</a><!-- m --><br/><br/>here's what the Filter -&gt; Show Library Elements provides for the Core Code stuff:<br/><br/>(the normally hidden core code stuff is shown as a light-grey colored text~font, this only refers to the left pane-side, the &quot;tree of stuff&quot;. you've probably noticed light grey colored text~font with Attributes and Inherited Attributes on the right side~pane, but this refers to something else, which I can explain if you're interested, though I'm not going to do it here, as it'll take a bit of explaining~typing, as I don't want to get off-subject in the middle of this stuff here, lol)<br/><br/>(unfortunately, people haven't put this info on the online wiki yet... it'd be a lot of work so thus why people haven't, lol)<br/><br/>(though I think you can see this by looking at the developer board, as I think Alex has his core code open to look at, but I haven't looked at this board myself yet to see if or where it is within the developers board)<br/><br/>(I'm just showing the Object Types stuff)<br/><br/><pre><code>Object Types&#58;<br/><br/>defaultverb<br/>defaultgame<br/>defaultobject<br/>defaultexit<br/>direction<br/>compassdirection<br/>updowndirection<br/>inoutdirection<br/>northwestdirection<br/>northdirection<br/>northeastdirection<br/>westdirection<br/>eastdirection<br/>southwestdirection<br/>southdirection<br/>southeastdirection<br/>updirection<br/>downdirection<br/>indirection<br/>outdirection<br/>defaultcommand<br/>male<br/>namedmale<br/>female<br/>namedfemale<br/>plural<br/>maleplural<br/>femaleplural<br/>openable<br/>container_base<br/>container_closed<br/>container_open<br/>surface<br/>container<br/>container_limited<br/>container_lockable<br/>defaultplayer<br/>switchable<br/>edible<br/>gridborder_path_ew<br/>gridborder_path_e<br/>gridborder_path_w<br/>gridborder_path_ns<br/>gridborder_path_n<br/>gridborder_path_s<br/>editor_room<br/>editor_object<br/>editor_player</code></pre><br/><br/>and here's what attributes the &quot;northdirection&quot; Object Type provides the Object that is given it via its Inherited Attribute:<br/><br/><pre><code>Filter -&gt; Show Library Elements<br/><br/>Advanced -&gt; &quot;northdirection&quot; (hidden, but now it's displayed due to &quot;show library elements&quot; being checked by you) Object Type (left side-pane, the &quot;tree of stuff&quot;) -&gt; Type (Tab, its only tab, lol, right side-pane)<br/><br/>Name&#58; northdirection<br/><br/>Inherited Types&#58;<br/><br/>Name&#58; compassdirection<br/>Value&#58; compassdirection<br/>Source&#58; northdirection<br/><br/>Name&#58; direction<br/>Value&#58; direction<br/>Source&#58; compassdirection<br/><br/>Attributes&#58;<br/><br/>Name&#58; name<br/>Value&#58; northdirection<br/>Source&#58; northdirection<br/><br/>Name&#58; elementtype<br/>Value&#58; type<br/>Source&#58; northdirection<br/><br/>Name&#58; alias<br/>Value&#58; north<br/>Source&#58; northdirection<br/><br/>Name&#58; alt<br/>Value&#58; n<br/>Source&#58; northdirection<br/><br/>Name&#58; prefix<br/>Value&#58; (blank)<br/>Source&#58; compassdirection<br/><br/>Name&#58; suffix<br/>Value&#58; (blank)<br/>Source&#58; compassdirection<br/><br/>Name&#58; displayverbs<br/>Value&#58; Go<br/>Source&#58; compassdirection</code></pre><br/><br/>so, to make a &quot;no or non directional&quot; Object Type, maybe it's not that hard:<br/><br/><pre><code>Advanced -&gt; Object Types -&gt; Add -&gt;<br/><br/>Name&#58; nondirectional_1<br/><br/>Inherited Types -&gt; Add -&gt;<br/><br/>compassdirection (scroll down to find it)<br/><br/>Attributes -&gt; Add -&gt;<br/><br/>Name&#58; name<br/>Type&#58; stringlist<br/>Value&#58; nondirectional_1<br/><br/>Name&#58; elementtype<br/>Type&#58; stringlist<br/>Value&#58; type<br/><br/>Name&#58; alias<br/>Type&#58; stringlist<br/>Value&#58; north<br/><br/>Name&#58; alt<br/>Type&#58; stringlist<br/>Value&#58; na<br/><br/>// &quot;na&quot; = n/a = not applicable = no or any direction<br/><br/>repeatedly make more Object Types (nondirectional_2, nondirectional_3, etc etc etc) as you need them<br/><br/>then for your exit&#58;<br/><br/>&lt;exit name=&quot;blah&quot;&gt;<br/>  &lt;inherit name=&quot;nondirectional_1&quot; /&gt;<br/>  // etc code stuff<br/>&lt;/exit&gt;<br/><br/>&lt;exit name=&quot;blah&quot;&gt;<br/>  &lt;inherit name=&quot;nondirectional_2&quot; /&gt;<br/>  // etc code stuff<br/>&lt;/exit&gt;<br/><br/>etc etc etc exits<br/><br/>// HOWEVER, this might cause an error as the compass itself hasn't been coded for a &quot;nondirection&quot; extra path slots&#46;&#46;&#46;</code></pre><br/><br/>2. yep, sorry for never clarifying this confusing point for most new people, as indeed you're right:<br/><br/>our outside-of-game (real world~life) concept -&gt; game term~attribute used<br/><br/>ID -&gt; name (quest game engine requires this, just as the government requires your ID card, SS#, fingerprints, home address, and etc. the game requires an unique identifier for everything. Also, the game maker can use this for organization, info, and etc to keep track of stuff easier; for management ~ this stuff is not suppose to be seen by the game player, as it would be too revealing~helpful~cheating for them)<br/><br/>&quot;Name&quot; (what we think of when thinking of a &quot;name&quot;, is actually the) -&gt; alias (this is what the game player sees while playing the game)<br/><br/>3x. &quot;LOL oh... so much typing... now I wish I had fewer than 26 directions XD (imamy)&quot;<br/><br/>ya, this seems to be the one paradox~problem with coding... even for the simpliest of things it takes a much larger amount of code to do it, so the more stuff and more complicated stuff you want, the exponential increase in the amount of code you got to type~have, sighs.<br/><br/>computers ~ coding ~ applications ~ games ~ etc, requires a lot of work to do very little work... lol<br/><br/>computers ARE STUPID, hehe <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/>it takes so much effort to explain (via coding) to a computer just do something extremely simple... and for something not so simple, you can easily probably have 10,000+ pages of coding...",
      "PostDate": "2013-08-11T04:37:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25816",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "What Jayna's doing in his code is far beyond my code abilities, so he'll have to help you with his code stuff, as I am trying still to understand it myself, lol.\n\nUs males are just horrible with directions, and nor do we ask for directions! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\n(I am horrible with directions, but I WILL, as I MUST, ask for directions! LOL)\n(When I'm hopelessly lost, I don't care about our males' concept of PRIDE or of SHAME~EMBARRASSMENT, lol)",
      "EditableFormat": "bbcode",
      "HTML": "What Jayna's doing in his code is far beyond my code abilities, so he'll have to help you with his code stuff, as I am trying still to understand it myself, lol.<br/><br/>Us males are just horrible with directions, and nor do we ask for directions! <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>(I am horrible with directions, but I WILL, as I MUST, ask for directions! LOL)<br/>(When I'm hopelessly lost, I don't care about our males' concept of PRIDE or of SHAME~EMBARRASSMENT, lol)",
      "PostDate": "2013-08-11T07:01:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25819",
      "UserId": 0,
      "Username": "imamy",
      "UserAvatar": null,
      "UserGravatar": "a58c1b832254633dc05a7f26e390cc02",
      "EditableText": "lol it's alright.  I posted the code so others can look at it.  When it comes to using the web version, I still have to add the code   bit by bit to the fields so I can't even use that code in the form that I posted.\n\nTo get past this step, I need to add the ID to my exits to make it work.  Then it's still not ready!  But I'm getting there.",
      "EditableFormat": "bbcode",
      "HTML": "lol it's alright.  I posted the code so others can look at it.  When it comes to using the web version, I still have to add the code   bit by bit to the fields so I can't even use that code in the form that I posted.<br/><br/>To get past this step, I need to add the ID to my exits to make it work.  Then it's still not ready!  But I'm getting there.",
      "PostDate": "2013-08-11T12:52:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25822",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "1) If hyphens won't work, then we'd have to shift everything up. Right now, we have -1, 0, and 1 for the directions along an axis. We could add 1 to that to make it 0, 1, and 2. \n\n2) and 3) You can use &quot;compassdirection&quot; for the base type if you like. That is what the other compass directions inherit from.\n\nQuestion: Have you ever considered using the desktop version? I'm not pushing that, and you might have reasons not to, but I was just curious. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was going to convert the code to a library for you, but the web version doesn't even support that.",
      "EditableFormat": "bbcode",
      "HTML": "1) If hyphens won't work, then we'd have to shift everything up. Right now, we have -1, 0, and 1 for the directions along an axis. We could add 1 to that to make it 0, 1, and 2. <br/><br/>2) and 3) You can use &quot;compassdirection&quot; for the base type if you like. That is what the other compass directions inherit from.<br/><br/>Question: Have you ever considered using the desktop version? I'm not pushing that, and you might have reasons not to, but I was just curious. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was going to convert the code to a library for you, but the web version doesn't even support that.",
      "PostDate": "2013-08-11T14:06:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25824",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "If you did want to do 1 above, then the code to change would be this:\n\n[code:20u91b5q]exitname = &quot;exit&quot; + dirx + diry + dirz\noppname = &quot;exit&quot; + -dirx + -diry + -dirz[/code:20u91b5q]\nchanged to this:\n\n[code:20u91b5q]\nexitname = &quot;exit&quot; + (1+dirx) + (1+diry) + (1+dirz)\noppname = &quot;exit&quot; + (1-dirx) + (1-diry) + (1-dirz)[/code:20u91b5q]\n\nThen all the numbers in the exits would be +1 (e.g. exit0-1-1 would become exit100)\nSorry about the hyphen problem. I can update the code if you like.",
      "EditableFormat": "bbcode",
      "HTML": "If you did want to do 1 above, then the code to change would be this:<br/><br/><pre><code>exitname = &quot;exit&quot; + dirx + diry + dirz<br/>oppname = &quot;exit&quot; + -dirx + -diry + -dirz</code></pre><br/>changed to this:<br/><br/><pre><code><br/>exitname = &quot;exit&quot; + (1+dirx) + (1+diry) + (1+dirz)<br/>oppname = &quot;exit&quot; + (1-dirx) + (1-diry) + (1-dirz)</code></pre><br/><br/>Then all the numbers in the exits would be +1 (e.g. exit0-1-1 would become exit100)<br/>Sorry about the hyphen problem. I can update the code if you like.",
      "PostDate": "2013-08-11T14:15:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "25825",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here are the updated exit definitions:\n\n[code:mvgxpowd]  &lt;exit name=&quot;exit101&quot; alias=&quot;north&quot;&gt;\n    &lt;inherit name=&quot;northdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit001&quot; alias=&quot;northwest&quot;&gt;\n    &lt;inherit name=&quot;northwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit011&quot; alias=&quot;west&quot;&gt;\n    &lt;inherit name=&quot;westdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit021&quot; alias=&quot;southwest&quot;&gt;\n    &lt;inherit name=&quot;southwestdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit121&quot; alias=&quot;south&quot;&gt;\n    &lt;inherit name=&quot;southdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit221&quot; alias=&quot;southeast&quot;&gt;\n    &lt;inherit name=&quot;southeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit211&quot; alias=&quot;east&quot;&gt;\n    &lt;inherit name=&quot;eastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit201&quot; alias=&quot;northeast&quot;&gt;\n    &lt;inherit name=&quot;northeastdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit110&quot; alias=&quot;up&quot;&gt;\n    &lt;inherit name=&quot;updirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit100&quot; alias=&quot;up to the north&quot; /&gt;\n  &lt;exit name=&quot;exit000&quot; alias=&quot;up to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit010&quot; alias=&quot;up to the west&quot; /&gt;\n  &lt;exit name=&quot;exit020&quot; alias=&quot;up to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit120&quot; alias=&quot;up to the south&quot; /&gt;\n  &lt;exit name=&quot;exit220&quot; alias=&quot;up to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit210&quot; alias=&quot;up to the east&quot; /&gt;\n  &lt;exit name=&quot;exit200&quot; alias=&quot;up to the northeast&quot; /&gt;\n  &lt;exit name=&quot;exit112&quot; alias=&quot;down&quot;&gt;\n    &lt;inherit name=&quot;downdirection&quot; /&gt;\n  &lt;/exit&gt;\n  &lt;exit name=&quot;exit102&quot; alias=&quot;down to the north&quot; /&gt;\n  &lt;exit name=&quot;exit002&quot; alias=&quot;down to the northwest&quot; /&gt;\n  &lt;exit name=&quot;exit012&quot; alias=&quot;down to the west&quot; /&gt;\n  &lt;exit name=&quot;exit022&quot; alias=&quot;down to the southwest&quot; /&gt;\n  &lt;exit name=&quot;exit122&quot; alias=&quot;down to the south&quot; /&gt;\n  &lt;exit name=&quot;exit222&quot; alias=&quot;down to the southeast&quot; /&gt;\n  &lt;exit name=&quot;exit212&quot; alias=&quot;down to the east&quot; /&gt;\n  &lt;exit name=&quot;exit202&quot; alias=&quot;down to the northeast&quot; /&gt;\n[/code:mvgxpowd]",
      "EditableFormat": "bbcode",
      "HTML": "Here are the updated exit definitions:<br/><br/><pre><code>  &lt;exit name=&quot;exit101&quot; alias=&quot;north&quot;&gt;<br/>    &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit001&quot; alias=&quot;northwest&quot;&gt;<br/>    &lt;inherit name=&quot;northwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit011&quot; alias=&quot;west&quot;&gt;<br/>    &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit021&quot; alias=&quot;southwest&quot;&gt;<br/>    &lt;inherit name=&quot;southwestdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit121&quot; alias=&quot;south&quot;&gt;<br/>    &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit221&quot; alias=&quot;southeast&quot;&gt;<br/>    &lt;inherit name=&quot;southeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit211&quot; alias=&quot;east&quot;&gt;<br/>    &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit201&quot; alias=&quot;northeast&quot;&gt;<br/>    &lt;inherit name=&quot;northeastdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit110&quot; alias=&quot;up&quot;&gt;<br/>    &lt;inherit name=&quot;updirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit100&quot; alias=&quot;up to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit000&quot; alias=&quot;up to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit010&quot; alias=&quot;up to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit020&quot; alias=&quot;up to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit120&quot; alias=&quot;up to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit220&quot; alias=&quot;up to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit210&quot; alias=&quot;up to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit200&quot; alias=&quot;up to the northeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit112&quot; alias=&quot;down&quot;&gt;<br/>    &lt;inherit name=&quot;downdirection&quot; /&gt;<br/>  &lt;/exit&gt;<br/>  &lt;exit name=&quot;exit102&quot; alias=&quot;down to the north&quot; /&gt;<br/>  &lt;exit name=&quot;exit002&quot; alias=&quot;down to the northwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit012&quot; alias=&quot;down to the west&quot; /&gt;<br/>  &lt;exit name=&quot;exit022&quot; alias=&quot;down to the southwest&quot; /&gt;<br/>  &lt;exit name=&quot;exit122&quot; alias=&quot;down to the south&quot; /&gt;<br/>  &lt;exit name=&quot;exit222&quot; alias=&quot;down to the southeast&quot; /&gt;<br/>  &lt;exit name=&quot;exit212&quot; alias=&quot;down to the east&quot; /&gt;<br/>  &lt;exit name=&quot;exit202&quot; alias=&quot;down to the northeast&quot; /&gt;<br/></code></pre>",
      "PostDate": "2013-08-11T14:19:59+01:00",
      "LastEditDate": null
    }
  ]
}
