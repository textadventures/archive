{
  "Topic": {
    "TopicId": "pl1aur8l3usk2lrn_rzy1g",
    "ForumId": "10",
    "Title": "Meaning of 'take all' and 'drop all'? [SOLVED in Quest 5.8]",
    "LastUpdated": "2018-04-06T12:47:29.6212812Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "81954cf9-0c73-4c0c-b655-e08a57128192",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In any Quest game, the player can type 'take all' or 'drop all' at any time but these operations don't seem to be well defined. How should they operate? Here is a proposal to help the debate:\r\nTAKE ALL\r\nIn any location, attempt to take every non-scenery visible object. If an object is a container, attempt to take any non-scenery visible objects within it, and repeat recursively. If there are no objects to take, display \"Nothing here to take.\"\r\nDROP ALL\r\nDrop all non-scenery visible objects held by the player. If no such object is held, display \"Nothing here to drop.\" (Trying this out on existing games on the site can produce surprising results!)\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>In any Quest game, the player can type 'take all' or 'drop all' at any time but these operations don't seem to be well defined. How should they operate? Here is a proposal to help the debate:<br>\nTAKE ALL<br>\nIn any location, attempt to take every non-scenery visible object. If an object is a container, attempt to take any non-scenery visible objects within it, and repeat recursively. If there are no objects to take, display \"Nothing here to take.\"<br>\nDROP ALL<br>\nDrop all non-scenery visible objects held by the player. If no such object is held, display \"Nothing here to drop.\" (Trying this out on existing games on the site can produce surprising results!)</p>\n\n",
      "PostDate": "2018-04-06T12:47:29.6212812Z",
      "LastEditDate": "2018-06-08T09:51:57.3074652Z",
      "link": null
    },
    {
      "PostId": "8a37056b-7981-4562-b103-66046ed5fbf9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, DavyB!\r\n\r\nI think that is already how those commands work, except it will take scenery objects and it ignores any object with ```npc_type``` (male of female objects).\r\n\r\nI have modded ```take``` so it excludes any object with the attribute ```not_all``` set to ```true```, and I'm sending a pull request soon.  So, if it passes all of Pixie's tests, it may end up in Quest 5.8.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, DavyB!</p>\n<p>I think that is already how those commands work, except it will take scenery objects and it ignores any object with <code>npc_type</code> (male of female objects).</p>\n<p>I have modded <code>take</code> so it excludes any object with the attribute <code>not_all</code> set to <code>true</code>, and I'm sending a pull request soon.  So, if it passes all of Pixie's tests, it may end up in Quest 5.8.</p>\n\n",
      "PostDate": "2018-04-06T17:24:53.9899415Z",
      "LastEditDate": "2018-04-06T17:27:28.4032878Z",
      "link": null
    },
    {
      "PostId": "4f38bc7a-c0a3-41a2-9258-3fac912c6829",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry KV, perhaps I should have given examples! Curently, if the player goes into a room and finds a table with an apple sitting on it, 'take all' will only pick up the apple if the table can be taken with it, keeping both together. I was suggesting that the apple should be added to the inventory even if the table can't be moved?\r\n\r\nFor 'drop all', the issue is perhaps the implementation. If I make the player a 'surface' to add characteristics that can be examined, these are included in the inventory even if they are scenery and invisible. So, for example, in my Giantkiller Too game, I've described the character (\"look at me\") as: \"Looking medieval, with hobbit-like feet to match. You are surrounded by a mystical aura guaranteed to keep you from all harm.\" This meant adding 'feet' and 'aura' as scenery objects to the player, which are invisible until \"look at me\" has been typed. 'Drop all' mentions both 'aura' and 'feet' even when invisible, which seems wrong.\r\n\r\nI didn't realise 'take all' avoided male and female characters. That seems a bit inconsistent as 'take' can be applied directly to such objects?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry KV, perhaps I should have given examples! Curently, if the player goes into a room and finds a table with an apple sitting on it, 'take all' will only pick up the apple if the table can be taken with it, keeping both together. I was suggesting that the apple should be added to the inventory even if the table can't be moved?</p>\n<p>For 'drop all', the issue is perhaps the implementation. If I make the player a 'surface' to add characteristics that can be examined, these are included in the inventory even if they are scenery and invisible. So, for example, in my Giantkiller Too game, I've described the character (\"look at me\") as: \"Looking medieval, with hobbit-like feet to match. You are surrounded by a mystical aura guaranteed to keep you from all harm.\" This meant adding 'feet' and 'aura' as scenery objects to the player, which are invisible until \"look at me\" has been typed. 'Drop all' mentions both 'aura' and 'feet' even when invisible, which seems wrong.</p>\n<p>I didn't realise 'take all' avoided male and female characters. That seems a bit inconsistent as 'take' can be applied directly to such objects?</p>\n\n",
      "PostDate": "2018-04-07T07:09:14.2933529Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0f6e12d3-79d0-4d3a-862f-1873546b54bb",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I was suggesting that the apple should be added to the inventory even if the table can't be moved?\r\n\r\nThat does reasonable. I guess it would need to check if the container can be taken, and if not, see if the contents is reachable. Can anyone think of how this might badly affect existing games?\r\n\r\n> I didn't realise 'take all' avoided male and female characters. That seems a bit inconsistent as 'take' can be applied directly to such objects?\r\n\r\nDo you think? We tried to make it intelligent enough to realise NPCs cannot be taken. If the player tries to take someone by name, then Quest has to match that person to the command, and by default will say he cannot be taken.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I was suggesting that the apple should be added to the inventory even if the table can't be moved?</p>\n</blockquote>\n<p>That does reasonable. I guess it would need to check if the container can be taken, and if not, see if the contents is reachable. Can anyone think of how this might badly affect existing games?</p>\n<blockquote>\n<p>I didn't realise 'take all' avoided male and female characters. That seems a bit inconsistent as 'take' can be applied directly to such objects?</p>\n</blockquote>\n<p>Do you think? We tried to make it intelligent enough to realise NPCs cannot be taken. If the player tries to take someone by name, then Quest has to match that person to the command, and by default will say he cannot be taken.</p>\n\n",
      "PostDate": "2018-04-07T11:04:57.0132589Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "012e6172-48fb-4e2c-b8b4-b4bf6a1a9f24",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well Pixie, one simple definition of 'take all' is that it should just be a shorthand for 'for all x do take', where 'x' is  anything visible to the player that is not currently held. That means including scenery and NPCs. Such objects do have an 'inventory' tab after all? ...and some games can involve picking up male/female characters...as in my female talking pig in Giantkiller Too! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Well Pixie, one simple definition of 'take all' is that it should just be a shorthand for 'for all x do take', where 'x' is  anything visible to the player that is not currently held. That means including scenery and NPCs. Such objects do have an 'inventory' tab after all? ...and some games can involve picking up male/female characters...as in my female talking pig in Giantkiller Too!</p>\n\n",
      "PostDate": "2018-04-07T11:55:19.4284562Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1942782e-cf3a-4867-94c2-5d15b6236f71",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> if the player goes into a room and finds a table with an apple sitting on it, 'take all' will only pick up the apple if the table can be taken with it\r\n\r\nI never noticed this.\r\n\r\nIf a takeable object is in a container and the container cannot be taken, I think it should take the takeable object during TAKE ALL.\r\nBut, if the container can be taken, too, I think TAKE ALL should just take the container with any objects still inside of it.\r\n\r\n\r\n<details><summary>Continue reading.</summary>\r\n\r\nSo, basically, like Pixie says:\r\n\r\n\r\n>  I guess it would need to check if the container can be taken, and if not, see if the contents is reachable. Can anyone think of how this might badly affect existing games?\r\n\r\nI can't see how it would effect anything, unless an author is depending on it to work the old way for some reason.  (Like maybe you can take something and the whole point of the game is to figure out to examine it and take the item out of it.)  This would only effect an .aslx being played in the editor, right?  So, published games wouldn't be effected.  Only works in progress.\r\n\r\nThe update from 5.6.3 to 5.7.1 broke two of my games in progress, and the update from 5.7.1 to 5.7.2 did the same (to the same two games).  My initial solution was to revert to 5.6.3 until my games were completed.  Later, once I admitted to myself that I wouldn't be completing those games any time soon, I created a post on this site, asking why TAKE no longer worked, and Pixie fixed me up with some working code within two hours.\r\n\r\nMy point?  Changing this may break someone's game, but we can help them out with it.  (What's that saying about making omelettes and breaking eggs?)\r\n\r\n---\r\n>  I make the player a 'surface' to add characteristics that can be examined, these are included in the inventory even if they are scenery and invisible.\r\n\r\nAlso, setting the player up as a surface is something Quest is not programmed to check for.  Quest just checks for everything inside of the game.pov object.  If the object is visible and the drop setting has not been changed, it will be dropped.\r\n\r\n> even if they are scenery and invisible.\r\n\r\nIf objects are set to invisible, they shouldn't exist as far as Quest is concerned. Quest is definitely dropping things set to invisible when carried by the player (whether the player is a surface or not, and whether you DROP ALL or specifically DROP OBJECT).  I assume this is because Quest doesn't expect the player to be carrying something which is not visible.  (SIDENOTE: When a scenery object is taken, Quest changes the ```scenery``` attribute to false.)\r\n\r\n---\r\n> some games can involve picking up male/female characters\r\n\r\nHaving defaults in Quest is what makes game-making easier on the whole.\r\n\r\n99% of the time, you cannot pick up an NPC.  Therefore, I believe this should be the default.\r\n\r\nWith the current scripts, if anyone wants to make an NPC object which is takeable, they should simply not set the object up as \"male or female named\".  Just change the object's ```gender```, ```article```, ```alt```, and ```possessive``` attributes.  (That's all adding the object type actually does (I think), besides excluding the object from TAKE ALL.)\r\n\r\nThis seems fair to me.  The author would already be doing extra coding to make the NPC object takeable.  They may as well have to change 4 more attributes to reflect the object's gender, rather than the rest of us having to do extra things to exclude every single NPC object we create from TAKE ALL.\r\n\r\n---\r\nAgain, a single ```not_all``` attribute would be a good solution (and its currently being considered for the next version of Quest).\r\n\r\nInstead of excluding ```npc_type``` from TAKE ALL, that line of code could exclude things with ```not_all``` set to true.  So, since ```npc_type``` is added to a named male or female object already, we could add the ```not_all``` att to the```npc_type``` type, setting it to true by default.  With this set up, when you make something male or female named, ```not_all``` is set to true by default.  This would be a checkbox on the object, which you simple uncheck to include the object when entering TAKE ALL.  (Sound good?)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>if the player goes into a room and finds a table with an apple sitting on it, 'take all' will only pick up the apple if the table can be taken with it</p>\n</blockquote>\n<p>I never noticed this.</p>\n<p>If a takeable object is in a container and the container cannot be taken, I think it should take the takeable object during TAKE ALL.<br>\nBut, if the container can be taken, too, I think TAKE ALL should just take the container with any objects still inside of it.</p>\n<details><summary>Continue reading.</summary>\n<p>So, basically, like Pixie says:</p>\n<blockquote>\n<p>I guess it would need to check if the container can be taken, and if not, see if the contents is reachable. Can anyone think of how this might badly affect existing games?</p>\n</blockquote>\n<p>I can't see how it would effect anything, unless an author is depending on it to work the old way for some reason.  (Like maybe you can take something and the whole point of the game is to figure out to examine it and take the item out of it.)  This would only effect an .aslx being played in the editor, right?  So, published games wouldn't be effected.  Only works in progress.</p>\n<p>The update from 5.6.3 to 5.7.1 broke two of my games in progress, and the update from 5.7.1 to 5.7.2 did the same (to the same two games).  My initial solution was to revert to 5.6.3 until my games were completed.  Later, once I admitted to myself that I wouldn't be completing those games any time soon, I created a post on this site, asking why TAKE no longer worked, and Pixie fixed me up with some working code within two hours.</p>\n<p>My point?  Changing this may break someone's game, but we can help them out with it.  (What's that saying about making omelettes and breaking eggs?)</p>\n<hr>\n<blockquote>\n<p>I make the player a 'surface' to add characteristics that can be examined, these are included in the inventory even if they are scenery and invisible.</p>\n</blockquote>\n<p>Also, setting the player up as a surface is something Quest is not programmed to check for.  Quest just checks for everything inside of the game.pov object.  If the object is visible and the drop setting has not been changed, it will be dropped.</p>\n<blockquote>\n<p>even if they are scenery and invisible.</p>\n</blockquote>\n<p>If objects are set to invisible, they shouldn't exist as far as Quest is concerned. Quest is definitely dropping things set to invisible when carried by the player (whether the player is a surface or not, and whether you DROP ALL or specifically DROP OBJECT).  I assume this is because Quest doesn't expect the player to be carrying something which is not visible.  (SIDENOTE: When a scenery object is taken, Quest changes the <code>scenery</code> attribute to false.)</p>\n<hr>\n<blockquote>\n<p>some games can involve picking up male/female characters</p>\n</blockquote>\n<p>Having defaults in Quest is what makes game-making easier on the whole.</p>\n<p>99% of the time, you cannot pick up an NPC.  Therefore, I believe this should be the default.</p>\n<p>With the current scripts, if anyone wants to make an NPC object which is takeable, they should simply not set the object up as \"male or female named\".  Just change the object's <code>gender</code>, <code>article</code>, <code>alt</code>, and <code>possessive</code> attributes.  (That's all adding the object type actually does (I think), besides excluding the object from TAKE ALL.)</p>\n<p>This seems fair to me.  The author would already be doing extra coding to make the NPC object takeable.  They may as well have to change 4 more attributes to reflect the object's gender, rather than the rest of us having to do extra things to exclude every single NPC object we create from TAKE ALL.</p>\n<hr>\n<p>Again, a single <code>not_all</code> attribute would be a good solution (and its currently being considered for the next version of Quest).</p>\n<p>Instead of excluding <code>npc_type</code> from TAKE ALL, that line of code could exclude things with <code>not_all</code> set to true.  So, since <code>npc_type</code> is added to a named male or female object already, we could add the <code>not_all</code> att to the<code>npc_type</code> type, setting it to true by default.  With this set up, when you make something male or female named, <code>not_all</code> is set to true by default.  This would be a checkbox on the object, which you simple uncheck to include the object when entering TAKE ALL.  (Sound good?)</p>\n</details>\n\n",
      "PostDate": "2018-04-07T15:56:40.4638289Z",
      "LastEditDate": "2018-04-08T18:52:48.4739056Z",
      "link": null
    },
    {
      "PostId": "751f7a00-0183-4d24-bbd8-73505059851b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I make the player a 'surface' to add characteristics that can be examined\r\n\r\nI wonder if we should have a built in container type for NPCs?\r\n\r\nEither way, this is another time when we should question if TAKE ALL should apply to the objects. I think not, but I can imagine some will disagree.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I make the player a 'surface' to add characteristics that can be examined</p>\n</blockquote>\n<p>I wonder if we should have a built in container type for NPCs?</p>\n<p>Either way, this is another time when we should question if TAKE ALL should apply to the objects. I think not, but I can imagine some will disagree.</p>\n\n",
      "PostDate": "2018-04-07T17:27:11.2116773Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "943cd416-d2d9-4f25-9713-ebdb1518bf8d",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I wonder if we should have a built in container type for NPCs?\r\n\r\nSounds good to me.  \r\n\r\nAnd, if someone doesn't like it this way, they could easily remove the ```container``` type from the object; correct?\r\n\r\n\r\n<details><summary>Continue reading.</summary>\r\n\r\n> Either way, this is another time when we should question if TAKE ALL should apply to the objects. I think not, but I can imagine some will disagree.\r\n\r\nThat's where ```not_all``` would come into play.\r\n\r\n---\r\nWhile we're discussing TAKE:\r\n\r\nI've always found it odd that objects cannot be taken by default, but TAKE is a default display verb for default objects.\r\n\r\n...but I digress.\r\n\r\n---\r\nHere's how I envision things:\r\n\r\nAll default objects cannot be taken by default, and each object's ```not_all``` attribute is set to false by default (or simply doesn't exist as an attribute).\r\n\r\nWhen you change an object to male (named) or female (named), this sets ```not_all``` to true.  There will be a new checkbox in the editor, on the inventory tab, so this would be easy to change.\r\n\r\nWhen the player's command is TAKE ALL or DROP ALL, objects with the attribute ```not_all``` set to true will be ignored.\r\n\r\nIf an object is in a container and the container can be taken, ALL should include the container only.  If the container cannot be taken, the objects it contains which can be taken individually should be included in ALL, but not the container. (Surfaces are types of containers, so they would work the same way.) **[Coding this sounds like it would be a little tricky to me, but Pixie has probably already figured out how to do it!]**\r\n\r\nAnother thing that I'd like to change is the way Quest hides objects before examining a container.  I think those items should be scenery rather than not visible.  On the first play through, it's not a big deal, but, if I die then restart, I know the apple is on the table.  I don't need to examine the table to see it this time.  So:\r\n\r\n\r\n\\>GET APPLE.\r\nI can't see that.\r\n\r\n\\> EXAMINE APPLE\r\nI can't see that.\r\n\r\n\\>EXAMINE TABLE\r\nNothing out of the ordinary.  \r\nIt contains an apple.\r\n\r\n\\>GET APPLE\r\nYou pick it up.\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I wonder if we should have a built in container type for NPCs?</p>\n</blockquote>\n<p>Sounds good to me.</p>\n<p>And, if someone doesn't like it this way, they could easily remove the <code>container</code> type from the object; correct?</p>\n<details><summary>Continue reading.</summary>\n<blockquote>\n<p>Either way, this is another time when we should question if TAKE ALL should apply to the objects. I think not, but I can imagine some will disagree.</p>\n</blockquote>\n<p>That's where <code>not_all</code> would come into play.</p>\n<hr>\n<p>While we're discussing TAKE:</p>\n<p>I've always found it odd that objects cannot be taken by default, but TAKE is a default display verb for default objects.</p>\n<p>...but I digress.</p>\n<hr>\n<p>Here's how I envision things:</p>\n<p>All default objects cannot be taken by default, and each object's <code>not_all</code> attribute is set to false by default (or simply doesn't exist as an attribute).</p>\n<p>When you change an object to male (named) or female (named), this sets <code>not_all</code> to true.  There will be a new checkbox in the editor, on the inventory tab, so this would be easy to change.</p>\n<p>When the player's command is TAKE ALL or DROP ALL, objects with the attribute <code>not_all</code> set to true will be ignored.</p>\n<p>If an object is in a container and the container can be taken, ALL should include the container only.  If the container cannot be taken, the objects it contains which can be taken individually should be included in ALL, but not the container. (Surfaces are types of containers, so they would work the same way.) <strong>[Coding this sounds like it would be a little tricky to me, but Pixie has probably already figured out how to do it!]</strong></p>\n<p>Another thing that I'd like to change is the way Quest hides objects before examining a container.  I think those items should be scenery rather than not visible.  On the first play through, it's not a big deal, but, if I die then restart, I know the apple is on the table.  I don't need to examine the table to see it this time.  So:</p>\n<p>&gt;GET APPLE.<br>\nI can't see that.</p>\n<p>&gt; EXAMINE APPLE<br>\nI can't see that.</p>\n<p>&gt;EXAMINE TABLE<br>\nNothing out of the ordinary.<br>\nIt contains an apple.</p>\n<p>&gt;GET APPLE<br>\nYou pick it up.</p>\n</details>\n\n",
      "PostDate": "2018-04-07T18:47:41.5434225Z",
      "LastEditDate": "2018-04-08T18:56:02.8208253Z",
      "link": null
    },
    {
      "PostId": "f230ac41-554e-427a-b9d5-88f6a11b1b73",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I've always found it odd that objects cannot be taken by default, but TAKE is a default display verb for default objects.\r\n\r\nI think it would make a lot of sense if \"(verb) all\" was interpreted by the parser as looping over all all objects with that verb in their displayverbs list in a general case. So in the absence of command-specific \"all\" behaviour, it would just apply a verb to all objects (in scope) that have it.\r\n\r\n\"take\" is probably one of the few commands that would be a special case; because you wouldn't want it to apply to objects inside containers in the same way.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I've always found it odd that objects cannot be taken by default, but TAKE is a default display verb for default objects.</p>\n</blockquote>\n<p>I think it would make a lot of sense if \"(verb) all\" was interpreted by the parser as looping over all all objects with that verb in their displayverbs list in a general case. So in the absence of command-specific \"all\" behaviour, it would just apply a verb to all objects (in scope) that have it.</p>\n<p>\"take\" is probably one of the few commands that would be a special case; because you wouldn't want it to apply to objects inside containers in the same way.</p>\n\n",
      "PostDate": "2018-04-07T22:11:10.7061769Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "11c01531-c7de-45fd-8d3d-b4dc22d14cf0",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">...and the update from 5.7.2 to 5.7.3 did the same...\r\n\r\nIs 5.7.3 out already?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>...and the update from 5.7.2 to 5.7.3 did the same...</p>\n</blockquote>\n<p>Is 5.7.3 out already?</p>\n\n",
      "PostDate": "2018-04-07T22:43:52.7140156Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "45517ab8-42e3-49b6-baf7-ecfd8a475068",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha!  Whoops!\r\n\r\nI meant 5.7.1 to 5.7.2.\r\n\r\n---\r\nMy point was that the last two updates each broke a work-in-progress, but that's because I was overriding default functions and commands which were changed during each update.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha!  Whoops!</p>\n<p>I meant 5.7.1 to 5.7.2.</p>\n<hr>\n<p>My point was that the last two updates each broke a work-in-progress, but that's because I was overriding default functions and commands which were changed during each update.</p>\n\n",
      "PostDate": "2018-04-07T22:52:53.1295158Z",
      "LastEditDate": "2018-04-10T16:43:21.3504918Z",
      "link": null
    },
    {
      "PostId": "c509d471-ec18-4008-9dac-11faea859908",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, it would be useful for functions/commands that have undergone important changes since the last update to be listed with the new update.  My 1 1/2 cents.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, it would be useful for functions/commands that have undergone important changes since the last update to be listed with the new update.  My 1 1/2 cents.</p>\n\n",
      "PostDate": "2018-04-07T23:28:39.0888221Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fbee1b96-adb0-433c-b25d-46b626175de4",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "haven't read all of the comments yet...\r\n\r\nbut 'take' is a special coding/game-design logic, which pixie pointed out the logic of its intended design in his early post (I read that one, but not all the others yet), whereas there should be another such special coding for handling 'npcs', such as a 'follower/whatever' coding(s), as well as any other such 'whatever' game design objects, needing their own special coding, too.\r\n\r\n------\r\n\r\nalso, this is a big deal with engine design...\r\n\r\nwe want the engine to be as universal and generalized as possible, as if you do something specific for one person's game design, it'll break everyone elses games and/or they may not want that engine design for their games.\r\n\r\nunless fully tested and done well, any new things should be done as libraries, so as to not specialize/ruin the quest engine, ruining it for everyone. Only once something is fully tested and done well, keeping it generalized and universal, should it be added to the engine\r\n\r\n----------\r\n\r\nalso, it's a lot easier fixing a library (or simply removing/not-using the library until it gets fixed or helped with compatibility of your game and the library) then correcting the engine, as every time pixie changes/adds to the engine... he has to help everyone who now suddenly have conflicts between their games and the engine, unless they can figure out what happened on their own, but most people aren't good coders/programmers who can do this on their own and/or aware of being able to do it.",
      "EditableFormat": "markdown",
      "HTML": "<p>haven't read all of the comments yet...</p>\n<p>but 'take' is a special coding/game-design logic, which pixie pointed out the logic of its intended design in his early post (I read that one, but not all the others yet), whereas there should be another such special coding for handling 'npcs', such as a 'follower/whatever' coding(s), as well as any other such 'whatever' game design objects, needing their own special coding, too.</p>\n<hr>\n<p>also, this is a big deal with engine design...</p>\n<p>we want the engine to be as universal and generalized as possible, as if you do something specific for one person's game design, it'll break everyone elses games and/or they may not want that engine design for their games.</p>\n<p>unless fully tested and done well, any new things should be done as libraries, so as to not specialize/ruin the quest engine, ruining it for everyone. Only once something is fully tested and done well, keeping it generalized and universal, should it be added to the engine</p>\n<hr>\n<p>also, it's a lot easier fixing a library (or simply removing/not-using the library until it gets fixed or helped with compatibility of your game and the library) then correcting the engine, as every time pixie changes/adds to the engine... he has to help everyone who now suddenly have conflicts between their games and the engine, unless they can figure out what happened on their own, but most people aren't good coders/programmers who can do this on their own and/or aware of being able to do it.</p>\n\n",
      "PostDate": "2018-04-07T23:59:42.741207Z",
      "LastEditDate": "2018-04-08T00:14:49.1681224Z",
      "link": null
    },
    {
      "PostId": "22d79d7c-1a3f-47af-90b8-ae093ba1fd86",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, sorry.  I was unclear. I wasn't complaining about that.  Pixie *did* list the changes when he updated Quest.\r\n\r\nI just had some crazy stuff going on in a modified ```take``` script.  The update to Quest added super-awesome things concerning scope to the ```take``` command, and my modified script didn't jibe with the new attributes.  Pixie (and mrangel) posted about those changes in numerous places.  It was all my fault.  And I wasn't the only one who had problems with that, but there weren't very many of us.  And we all found the quick fix when we posted about it.  (By 'found the quick fix', I mean Pixie promptly posted the code we needed and explained why we needed it. [INSERT LAUGH HERE.])\r\n\r\nAnyway...  I was just trying to point out that some updates may break games which are still in the creation process when people have crazy mods going on, but, if the updates are worthwhile, I say apply the update.  If we can modify the script in the first place, we can find the fix (or post about it).  \r\n\r\nAlso, keep in mind that published games are not effected at all; only works-in-progess.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, sorry.  I was unclear. I wasn't complaining about that.  Pixie <em>did</em> list the changes when he updated Quest.</p>\n<p>I just had some crazy stuff going on in a modified <code>take</code> script.  The update to Quest added super-awesome things concerning scope to the <code>take</code> command, and my modified script didn't jibe with the new attributes.  Pixie (and mrangel) posted about those changes in numerous places.  It was all my fault.  And I wasn't the only one who had problems with that, but there weren't very many of us.  And we all found the quick fix when we posted about it.  (By 'found the quick fix', I mean Pixie promptly posted the code we needed and explained why we needed it. [INSERT LAUGH HERE.])</p>\n<p>Anyway...  I was just trying to point out that some updates may break games which are still in the creation process when people have crazy mods going on, but, if the updates are worthwhile, I say apply the update.  If we can modify the script in the first place, we can find the fix (or post about it).</p>\n<p>Also, keep in mind that published games are not effected at all; only works-in-progess.</p>\n\n",
      "PostDate": "2018-04-08T00:50:45.7001601Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "61b66f44-5554-4f75-b04a-33de667da2c4",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The discussion here has dropped into implementation detail rather faster than I would have liked! \r\n\r\nFrom a user perspective, when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view? ",
      "EditableFormat": "markdown",
      "HTML": "<p>The discussion here has dropped into implementation detail rather faster than I would have liked!</p>\n<p>From a user perspective, when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view?</p>\n\n",
      "PostDate": "2018-04-08T09:18:31.4634317Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "38bc7e0c-5566-4b25-a718-2957a57b7f6e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> From a user perspective, when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view?\r\n\r\nSeems pretty sensible. However, that couldn't be done with the way the parser's set up now. The parser calls `multiple` to get a list of objects, and then calls `script` for each of them. And there isn't actually an easy way to check whether a given object (like the cupboard) can be taken.\r\n\r\nI think you'd have to do something like:\r\n```\r\n<command name=\"takeall\">\r\n  <pattern>^take all$</pattern>\r\n  <script><![CDATA[\r\n    pending = SortObjectList(ScopeVisibleNotHeldNotScenery(), \"alias\")\r\n    pending = FilterByNotAttribute (pending, \"not_all\", true)\r\n    untaken = NewObjectList()\r\n    list add (untaken, game.pov.parent)\r\n    taken = true\r\n    while (taken) {\r\n      taken = false\r\n      foreach (obj, ListCompact(pending)) {\r\n        if (Contains (game.pov, obj) or Equal (game.pov, obj)) {\r\n          list remove (pending, obj)\r\n        }\r\n        else if (ListContains(untaken, obj.parent)) {\r\n          list remove (pending, obj)\r\n          taken = true\r\n          // don't display a message saying \"I can't take that\" for shelves, counters, and other silly things\r\n          if (ListContains (GetDisplayVerbs(obj), \"take\")) {\r\n            DoTake (obj, true)\r\n          }\r\n          if (ListContains (ScopeVisibleNotHeldNotScenery(), obj)) {\r\n            // The object isn't taken now, and its \"take\" script hasn't destroyed it\r\n            // So we can try to take its children\r\n            list add (untaken, obj)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  ]]></script>\r\n</command>\r\n```\r\n\r\n(I was going to say that adding something like that to the core would be bad, because it would break `take all` for games with backdrop scope scripts. But then, I realise that the existing script won't deal with those anyway)\r\n\r\nI would like to see a default \"all\" behaviour included in the parser (and \"take\" is one of the few commands where it would need to be overridden) but I think it would be quite difficult to ensure you didn't end up breaking existing games. Unless, maybe, it was added as a \"feature\" that could be checked or unchecked.\r\n\r\n(and now my brain's coming up with really silly things. Like a turnscript that loops over all reachable items and combines their verb lists, to dynamically change the pattern of a command whose pattern ends up like `^(?<text_command>drop|take|look|lick|open|close|eat|kick) all$`. Of course, that could never work)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>From a user perspective, when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view?</p>\n</blockquote>\n<p>Seems pretty sensible. However, that couldn't be done with the way the parser's set up now. The parser calls <code>multiple</code> to get a list of objects, and then calls <code>script</code> for each of them. And there isn't actually an easy way to check whether a given object (like the cupboard) can be taken.</p>\n<p>I think you'd have to do something like:</p>\n<pre><code>&lt;command name=\"takeall\"&gt;\n  &lt;pattern&gt;^take all$&lt;/pattern&gt;\n  &lt;script&gt;&lt;![CDATA[\n    pending = SortObjectList(ScopeVisibleNotHeldNotScenery(), \"alias\")\n    pending = FilterByNotAttribute (pending, \"not_all\", true)\n    untaken = NewObjectList()\n    list add (untaken, game.pov.parent)\n    taken = true\n    while (taken) {\n      taken = false\n      foreach (obj, ListCompact(pending)) {\n        if (Contains (game.pov, obj) or Equal (game.pov, obj)) {\n          list remove (pending, obj)\n        }\n        else if (ListContains(untaken, obj.parent)) {\n          list remove (pending, obj)\n          taken = true\n          // don't display a message saying \"I can't take that\" for shelves, counters, and other silly things\n          if (ListContains (GetDisplayVerbs(obj), \"take\")) {\n            DoTake (obj, true)\n          }\n          if (ListContains (ScopeVisibleNotHeldNotScenery(), obj)) {\n            // The object isn't taken now, and its \"take\" script hasn't destroyed it\n            // So we can try to take its children\n            list add (untaken, obj)\n          }\n        }\n      }\n    }\n  ]]&gt;&lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>(I was going to say that adding something like that to the core would be bad, because it would break <code>take all</code> for games with backdrop scope scripts. But then, I realise that the existing script won't deal with those anyway)</p>\n<p>I would like to see a default \"all\" behaviour included in the parser (and \"take\" is one of the few commands where it would need to be overridden) but I think it would be quite difficult to ensure you didn't end up breaking existing games. Unless, maybe, it was added as a \"feature\" that could be checked or unchecked.</p>\n<p>(and now my brain's coming up with really silly things. Like a turnscript that loops over all reachable items and combines their verb lists, to dynamically change the pattern of a command whose pattern ends up like <code>^(?&lt;text_command&gt;drop|take|look|lick|open|close|eat|kick) all$</code>. Of course, that could never work)</p>\n\n",
      "PostDate": "2018-04-08T11:30:51.9864812Z",
      "LastEditDate": "2018-04-08T19:24:45.4508535Z",
      "link": null
    },
    {
      "PostId": "1198a794-b01f-459d-afdc-6024428d2129",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view?\r\n\r\nFrom a player's or author's perspective, I agree with this.\r\n\r\n> The discussion here has dropped into implementation detail rather faster than I would have liked!\r\n\r\nSorry.  It's all about implementation, but discussing it means it may get fixed.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>when I open a cupboard and see several items, it seems reasonable to type TAKE ALL and expect the items to be removed. Is that a general view?</p>\n</blockquote>\n<p>From a player's or author's perspective, I agree with this.</p>\n<blockquote>\n<p>The discussion here has dropped into implementation detail rather faster than I would have liked!</p>\n</blockquote>\n<p>Sorry.  It's all about implementation, but discussing it means it may get fixed.</p>\n\n",
      "PostDate": "2018-04-08T13:05:51.8102273Z",
      "LastEditDate": "2018-04-08T13:07:23.0997451Z",
      "link": null
    },
    {
      "PostId": "785695d7-ab03-4d2a-9d96-5c3586f6a18b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What about this?\r\n\r\n<details><summary><u><b>Check out some code</u></b></summary>\r\n\r\n```\r\nTHIS CODE HAS BEEN REMOVED TO AVOID CONFUSION\r\n\r\nFor archival purposes, it can be found here: \r\nhttps://github.com/KVonGit/QuestStuff/wiki/Taking-All\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>What about this?</p>\n<details><summary><u><b>Check out some code</b></u></summary>\n<pre><code>THIS CODE HAS BEEN REMOVED TO AVOID CONFUSION\n\nFor archival purposes, it can be found here: \nhttps://github.com/KVonGit/QuestStuff/wiki/Taking-All\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-04-08T14:09:28.0573079Z",
      "LastEditDate": "2018-04-10T15:34:41.7713245Z",
      "link": null
    },
    {
      "PostId": "687d5502-61d6-4e87-989f-a53a0becb1e3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another test game (with a closed box)\r\n\r\n<details><summary><u><b>Check out some code</u></b></summary>\r\n\r\n```\r\nTHIS CODE HAS BEEN REMOVED TO AVOID CONFUSION\r\n```\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Another test game (with a closed box)</p>\n<details><summary><u><b>Check out some code</b></u></summary>\n<pre><code>THIS CODE HAS BEEN REMOVED TO AVOID CONFUSION\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-04-08T14:38:19.8287776Z",
      "LastEditDate": "2018-04-10T15:33:46.9137092Z",
      "link": null
    },
    {
      "PostId": "62fc6d21-8fc1-43f3-acf6-0291a9a0ce99",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Passing all the tests in Visual Studio doesn't necessarily mean this modification wouldn't break older games, does it?",
      "EditableFormat": "markdown",
      "HTML": "<p>Passing all the tests in Visual Studio doesn't necessarily mean this modification wouldn't break older games, does it?</p>\n\n",
      "PostDate": "2018-04-08T14:44:07.3390885Z",
      "LastEditDate": "2018-04-10T15:30:40.2116937Z",
      "link": null
    },
    {
      "PostId": "c24e5e39-1b0e-4a64-ad57-39a2eaf5f903",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think KV and I have slightly different ideas about how the script should behave.\r\n\r\nIf there's a briefcase chained to a shelf, and you don't have the bolt cutters yet, should \"TAKE ALL\" take its contents? I think KV's solution says no, because the briefcase has a 'take' script even if you can't take it now. My script says yes, try to take it first and if that fails take the stuff out of it.\r\n\r\nWhich would a player more likely expect?",
      "EditableFormat": "markdown",
      "HTML": "<p>I think KV and I have slightly different ideas about how the script should behave.</p>\n<p>If there's a briefcase chained to a shelf, and you don't have the bolt cutters yet, should \"TAKE ALL\" take its contents? I think KV's solution says no, because the briefcase has a 'take' script even if you can't take it now. My script says yes, try to take it first and if that fails take the stuff out of it.</p>\n<p>Which would a player more likely expect?</p>\n\n",
      "PostDate": "2018-04-08T16:48:07.4436585Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d634ccd3-55e0-43b3-b5a9-792a2cc777a0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think mine will try to take the contents if the briefcase's  ```take``` attribute does not return true, it has no script, and it is open.\r\n\r\nI was just messing around and following the same rules as ```lookat``` when in darkness.  If you have a script, the script takes precedence over everything.  So, when you examine something with a ```look``` script, that script runs whether or not darkness could prevent you from seeing it.  (I guess it is assumed that you are prepared to handle the extra scripting since you're already adding a script.)\r\n\r\nAnyway...\r\n\r\nmrangel's method (checking to see if something has been taken, then trying to take its contents if not) is probably much more efficient.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think mine will try to take the contents if the briefcase's  <code>take</code> attribute does not return true, it has no script, and it is open.</p>\n<p>I was just messing around and following the same rules as <code>lookat</code> when in darkness.  If you have a script, the script takes precedence over everything.  So, when you examine something with a <code>look</code> script, that script runs whether or not darkness could prevent you from seeing it.  (I guess it is assumed that you are prepared to handle the extra scripting since you're already adding a script.)</p>\n<p>Anyway...</p>\n<p>mrangel's method (checking to see if something has been taken, then trying to take its contents if not) is probably much more efficient.</p>\n\n",
      "PostDate": "2018-04-08T16:58:15.4145049Z",
      "LastEditDate": "2018-04-08T17:15:46.3177685Z",
      "link": null
    },
    {
      "PostId": "16f68644-f658-4bd3-aad8-1e119f1031a8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I think mine will try to take the contents if the briefcase's take attribute does not return true, it has no script, and it is open.\r\n\r\nYes; if the object's \"take\" attribute is neither true nor a script.\r\nIt seems that if the take attribute is a string, yours will still attempt to take its children. Not sure, but I think that's not expected behaviour.\r\n\r\nI went for the other approach; rather than trying to consider all the possible attributes that could affect an object's takeability, just attempt to take it and if that fails consider its children instead. For the briefcase with a 'take' script, my \"take all\" will attempt to take it, and if that fails will take its children instead.\r\n\r\nI'm not sure which behaviour a player is more likely to expect.\r\n\r\nI figured that using the displayverbs to govern which objects a player might attempt to take is reasonable. Because having a \"take\" attribute is a reasonable indication \"this object can be taken\" or \"this object will do something if you attempt to take it\", which is hard to distinguish between. But in most games, it seems that a \"take\" display verb is a reasonable indication \"this is an object that a typical person might _attempt_ to take\".",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think mine will try to take the contents if the briefcase's take attribute does not return true, it has no script, and it is open.</p>\n</blockquote>\n<p>Yes; if the object's \"take\" attribute is neither true nor a script.<br>\nIt seems that if the take attribute is a string, yours will still attempt to take its children. Not sure, but I think that's not expected behaviour.</p>\n<p>I went for the other approach; rather than trying to consider all the possible attributes that could affect an object's takeability, just attempt to take it and if that fails consider its children instead. For the briefcase with a 'take' script, my \"take all\" will attempt to take it, and if that fails will take its children instead.</p>\n<p>I'm not sure which behaviour a player is more likely to expect.</p>\n<p>I figured that using the displayverbs to govern which objects a player might attempt to take is reasonable. Because having a \"take\" attribute is a reasonable indication \"this object can be taken\" or \"this object will do something if you attempt to take it\", which is hard to distinguish between. But in most games, it seems that a \"take\" display verb is a reasonable indication \"this is an object that a typical person might <em>attempt</em> to take\".</p>\n\n",
      "PostDate": "2018-04-08T17:26:48.9646794Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fce609b4-30fa-4c0b-91b6-8fb42831894a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I agree with you about everything but the \"Take\" display verb.  I think that is a default display verb on everything that isn't a room or an ```npc_type```.  (I grumble obscenities every time I make a game while removing all the \"Take\" display verbs from the things I haven't changed to \"Object can be taken\" or added a ```take``` script.)",
      "EditableFormat": "markdown",
      "HTML": "<p>I agree with you about everything but the \"Take\" display verb.  I think that is a default display verb on everything that isn't a room or an <code>npc_type</code>.  (I grumble obscenities every time I make a game while removing all the \"Take\" display verbs from the things I haven't changed to \"Object can be taken\" or added a <code>take</code> script.)</p>\n\n",
      "PostDate": "2018-04-08T17:42:29.5321827Z",
      "LastEditDate": "2018-04-08T17:43:22.8942532Z",
      "link": null
    },
    {
      "PostId": "b9197b66-0c92-4d52-9ab5-637f7b493c14",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I think that is a default display verb on everything that isn't a room or an npc_type.\r\n\r\nThe same things that the default behaviour attempts to take when running \"take all\".\r\n\r\n> I grumble obscenities every time I make a game while removing all the \"Take\" display verbs from the things I haven't changed to \"Object can be taken\" or added a take script.\r\n\r\nI'm not sure about the exact usage; but I expect that if you're going through those objects removing the default \"take\" verb, you probably wouldn't want \"take all\" to consider them. In most of my games, I think the objects that I've removed the \"take\" display verb from are the same ones that you will have given a \"not_all\" attribute.\r\n\r\nTo me, the display verbs are a way of the player character saying to the player \"I think I might be able to take that object\"; which is probably the same logic you might expect when the player says to the player character \"take everything\".",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I think that is a default display verb on everything that isn't a room or an npc_type.</p>\n</blockquote>\n<p>The same things that the default behaviour attempts to take when running \"take all\".</p>\n<blockquote>\n<p>I grumble obscenities every time I make a game while removing all the \"Take\" display verbs from the things I haven't changed to \"Object can be taken\" or added a take script.</p>\n</blockquote>\n<p>I'm not sure about the exact usage; but I expect that if you're going through those objects removing the default \"take\" verb, you probably wouldn't want \"take all\" to consider them. In most of my games, I think the objects that I've removed the \"take\" display verb from are the same ones that you will have given a \"not_all\" attribute.</p>\n<p>To me, the display verbs are a way of the player character saying to the player \"I think I might be able to take that object\"; which is probably the same logic you might expect when the player says to the player character \"take everything\".</p>\n\n",
      "PostDate": "2018-04-08T18:06:39.518907Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "12a83c3a-f59c-4f10-a2cc-7c9bd3782002",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> the display verbs are a way of the player character saying to the player \"I think I might be able to take that object\"\r\n\r\nExactly.  Objects cannot be taken by default, BUT \"Take\" is a default display verb.\r\n\r\nI go through each object I never want taken (and think it wouldn't make sense to try to take), removing \"Take\" from each display verb list, and setting ```notall``` to true on each one, too.\r\n\r\n...but sometimes (not often) I remove display verbs that will still work when entered as a command (like \"Take\").",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>the display verbs are a way of the player character saying to the player \"I think I might be able to take that object\"</p>\n</blockquote>\n<p>Exactly.  Objects cannot be taken by default, BUT \"Take\" is a default display verb.</p>\n<p>I go through each object I never want taken (and think it wouldn't make sense to try to take), removing \"Take\" from each display verb list, and setting <code>notall</code> to true on each one, too.</p>\n<p>...but sometimes (not often) I remove display verbs that will still work when entered as a command (like \"Take\").</p>\n\n",
      "PostDate": "2018-04-08T18:42:36.4012382Z",
      "LastEditDate": "2018-04-08T18:57:38.6490241Z",
      "link": null
    },
    {
      "PostId": "8df0fcc8-e172-4a9d-a095-8c9f07b39135",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> ...but sometimes (not often) I remove display verbs that will still work when entered as a command (like \"Take\").\r\n\r\nI can see that. But that's an odd and specific case.\r\n\r\nIt seems like in most cases, removing the display verb and adding your \"notall\" attribute are ways of expressing the same thing (\"trying to take this object isn't an intuitive action\") to different parts of the code.\r\n\r\nIf you go through doing both of those things to large numbers of objects… doesn't it seem easier to have both pieces of code expect to see the same message in the same way?\r\n\r\nI can see exceptions. Like one of my first games, there was a large treasure chest. It's so heavy that you can only carry it if you're not holding anything else, and you can't pass through doors (except double doors) while holding it. That would have the \"notall\" attribute, but can be taken specifically.\r\nBut unless you're globally removing the display verbs for certain commands, I can't think of a case where an object that doesn't have a \"take\" verb displayed should be collected by \"take all\".",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>...but sometimes (not often) I remove display verbs that will still work when entered as a command (like \"Take\").</p>\n</blockquote>\n<p>I can see that. But that's an odd and specific case.</p>\n<p>It seems like in most cases, removing the display verb and adding your \"notall\" attribute are ways of expressing the same thing (\"trying to take this object isn't an intuitive action\") to different parts of the code.</p>\n<p>If you go through doing both of those things to large numbers of objects… doesn't it seem easier to have both pieces of code expect to see the same message in the same way?</p>\n<p>I can see exceptions. Like one of my first games, there was a large treasure chest. It's so heavy that you can only carry it if you're not holding anything else, and you can't pass through doors (except double doors) while holding it. That would have the \"notall\" attribute, but can be taken specifically.<br>\nBut unless you're globally removing the display verbs for certain commands, I can't think of a case where an object that doesn't have a \"take\" verb displayed should be collected by \"take all\".</p>\n\n",
      "PostDate": "2018-04-08T19:22:25.6088236Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eea6bc33-f467-4ce7-82a8-72ffabd96548",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your logic is sound.   (I say that as if you didn't know.  Ha-ha!)  I guess I'd just rather check a boolean attribute than depend on an object's display verbs list, when it comes down to it.  (I've recently seen two games (by different authors) in which the display verbs lists were being totally overwritten when performing certain actions on objects.  This was not happening on purpose.)\r\n\r\nI am now thinking of adding a bit of code that removes \"Take\" from the display verbs list of anything with ```notall``` set to true.",
      "EditableFormat": "markdown",
      "HTML": "<p>Your logic is sound.   (I say that as if you didn't know.  Ha-ha!)  I guess I'd just rather check a boolean attribute than depend on an object's display verbs list, when it comes down to it.  (I've recently seen two games (by different authors) in which the display verbs lists were being totally overwritten when performing certain actions on objects.  This was not happening on purpose.)</p>\n<p>I am now thinking of adding a bit of code that removes \"Take\" from the display verbs list of anything with <code>notall</code> set to true.</p>\n\n",
      "PostDate": "2018-04-08T19:36:42.2118755Z",
      "LastEditDate": "2018-04-08T19:37:20.2973274Z",
      "link": null
    },
    {
      "PostId": "061476f7-b9eb-4b47-b9a7-ce8eb6a2f5c6",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, if there is general agreement that TAKE ALL should take any object visible to the player, I'm ready to move on to the implementation. Humour me! ...\r\n\r\nThe discussion here is much more involved that I would have expected. I know, for example, that the Quest function ScopeReachableNotHeld returns a list of \"_all objects which the player can reach in the current room (not including those the player currently has in their inventory)_,\" so why is that not the starting point? \r\n\r\nI can see that handling a script associated with a take operation is problematic so perhaps it is reasonable to just say \"_TAKE ALL is not available here_\" if any object in the scope list has a take script? ...forcing the player to take items one at a time. That still seems like an improvement over what currently happens?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, if there is general agreement that TAKE ALL should take any object visible to the player, I'm ready to move on to the implementation. Humour me! ...</p>\n<p>The discussion here is much more involved that I would have expected. I know, for example, that the Quest function ScopeReachableNotHeld returns a list of \"<em>all objects which the player can reach in the current room (not including those the player currently has in their inventory)</em>,\" so why is that not the starting point?</p>\n<p>I can see that handling a script associated with a take operation is problematic so perhaps it is reasonable to just say \"<em>TAKE ALL is not available here</em>\" if any object in the scope list has a take script? ...forcing the player to take items one at a time. That still seems like an improvement over what currently happens?</p>\n\n",
      "PostDate": "2018-04-09T11:26:48.3343512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a9cf2148-febc-4aaa-8dec-fc16fb3876b5",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> The discussion here is much more involved that I would have expected. I know, for example, that the Quest function ScopeReachableNotHeld returns a list of \"all objects which the player can reach in the current room (not including those the player currently has in their inventory),\" so why is that not the starting point?\r\n\r\nIt is. But if there's a box on the floor, you don't want to take the box and then take all the items out of it.\r\n\r\nSo my 'take all' command works from the top down: it sorts ScopeReachableNotHeld to process the items that are directly in the room first, and then only takes each item if it's not inside a container that was already taken. Whereas KV's option was to filter that list down to only the objects whose parent is immovable. (Just thought: If I have a purse with a hidden pocket inside it, then the pocket clearly can't be taken out of the purse. So I've got a takeable container with a non-takeable container inside it. Do the command(s) presented so far deal with that sensibly?)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The discussion here is much more involved that I would have expected. I know, for example, that the Quest function ScopeReachableNotHeld returns a list of \"all objects which the player can reach in the current room (not including those the player currently has in their inventory),\" so why is that not the starting point?</p>\n</blockquote>\n<p>It is. But if there's a box on the floor, you don't want to take the box and then take all the items out of it.</p>\n<p>So my 'take all' command works from the top down: it sorts ScopeReachableNotHeld to process the items that are directly in the room first, and then only takes each item if it's not inside a container that was already taken. Whereas KV's option was to filter that list down to only the objects whose parent is immovable. (Just thought: If I have a purse with a hidden pocket inside it, then the pocket clearly can't be taken out of the purse. So I've got a takeable container with a non-takeable container inside it. Do the command(s) presented so far deal with that sensibly?)</p>\n\n",
      "PostDate": "2018-04-09T11:55:48.7450568Z",
      "LastEditDate": "2018-04-09T11:59:34.4957535Z",
      "link": null
    },
    {
      "PostId": "524d2206-16c2-4398-a6aa-b267ad472118",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, yes I see! I knew I should stay out of implementation discussions!! Happy to act as a tester if/when needed.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, yes I see! I knew I should stay out of implementation discussions!! Happy to act as a tester if/when needed.</p>\n\n",
      "PostDate": "2018-04-09T12:46:21.7055128Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d52f4245-6d60-4484-aa36-ce14a2507e50",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I reiterate:\r\n\r\nI was just fooling around with the code.\r\n\r\nmrangel's method would be the best way to handle things.",
      "EditableFormat": "markdown",
      "HTML": "<p>I reiterate:</p>\n<p>I was just fooling around with the code.</p>\n<p>mrangel's method would be the best way to handle things.</p>\n\n",
      "PostDate": "2018-04-10T15:28:39.1065458Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9db20579-1e28-4854-9527-3232246319ed",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> one simple definition of 'take all' is that it should just be a shorthand for 'for all x do take', where 'x' is anything visible to the player that is not currently held. That means including scenery and NPCs. Such objects do have an 'inventory' tab after all? ...and some games can involve picking up male/female characters...as in my female talking pig in Giantkiller Too!\r\n\r\nImagine that you are in a location with the following objects:\r\n\r\n- table (on which is an apple)\r\n- Bob (who is holding a hamburger)\r\n- basket (in which is an egg)\r\n- a talking pig\r\n\r\nNow, I say, \"hey!  Grab everything from that room and bring it in here!\"\r\n\r\nWhat are you going to try to take in real life?\r\n\r\nI'm thinking the apple, the basket, and MAYBE the pig.\r\n\r\n---\r\nIn a parser game, everything should behave as it would in real life, at least to a certain extent.  Otherwise, the player is in some form of alternate reality and will have no idea what to do.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>one simple definition of 'take all' is that it should just be a shorthand for 'for all x do take', where 'x' is anything visible to the player that is not currently held. That means including scenery and NPCs. Such objects do have an 'inventory' tab after all? ...and some games can involve picking up male/female characters...as in my female talking pig in Giantkiller Too!</p>\n</blockquote>\n<p>Imagine that you are in a location with the following objects:</p>\n<ul>\n<li>table (on which is an apple)</li>\n<li>Bob (who is holding a hamburger)</li>\n<li>basket (in which is an egg)</li>\n<li>a talking pig</li>\n</ul>\n<p>Now, I say, \"hey!  Grab everything from that room and bring it in here!\"</p>\n<p>What are you going to try to take in real life?</p>\n<p>I'm thinking the apple, the basket, and MAYBE the pig.</p>\n<hr>\n<p>In a parser game, everything should behave as it would in real life, at least to a certain extent.  Otherwise, the player is in some form of alternate reality and will have no idea what to do.</p>\n\n",
      "PostDate": "2018-06-07T15:50:31.4487912Z",
      "LastEditDate": "2018-06-07T15:58:10.796103Z",
      "link": null
    },
    {
      "PostId": "df6f388e-15d9-4559-a275-a3e118778622",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Having had a month to think about this a bit more and hear the various responses in other threads, my current view is that 'scenery' should have a stricter definition so that TAKE ALL works on all non-scenery objects, including those in containers. These appear in hyperlinks so that would feel consistent to the player. So, in your example, if none of the items are 'scenery' all would be 'taken'.  Quest 5.8 is now closer to this view, as nested items are taken when visible (excellent!), so it is only Bob and the pig who are left out...through Bob does lose his hamburger! \r\n\r\nAs a developer, I have to supply 'take' responses for Bob and the pig anyway, as they can be taken individually, ...which seems inconsistent? If they can be taken individually, why not include them in TAKE ALL? I now know that currently scenery items can be taken, but feel that shouldn't be allowed. Conceptually, it seems like a contradiction.",
      "EditableFormat": "markdown",
      "HTML": "<p>Having had a month to think about this a bit more and hear the various responses in other threads, my current view is that 'scenery' should have a stricter definition so that TAKE ALL works on all non-scenery objects, including those in containers. These appear in hyperlinks so that would feel consistent to the player. So, in your example, if none of the items are 'scenery' all would be 'taken'.  Quest 5.8 is now closer to this view, as nested items are taken when visible (excellent!), so it is only Bob and the pig who are left out...through Bob does lose his hamburger!</p>\n<p>As a developer, I have to supply 'take' responses for Bob and the pig anyway, as they can be taken individually, ...which seems inconsistent? If they can be taken individually, why not include them in TAKE ALL? I now know that currently scenery items can be taken, but feel that shouldn't be allowed. Conceptually, it seems like a contradiction.</p>\n\n",
      "PostDate": "2018-06-07T19:27:41.2918606Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "108ad1c0-99ba-4f66-8365-1db9127a82bd",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...but, in real life, in the situation I just presented, would you try to take the table? Or would you just grab any items on the table?",
      "EditableFormat": "markdown",
      "HTML": "<p>...but, in real life, in the situation I just presented, would you try to take the table? Or would you just grab any items on the table?</p>\n\n",
      "PostDate": "2018-06-07T20:00:48.1004944Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c024eb41-a55e-42f2-bb90-8cf64a88fd79",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...and TAKE ALL will not try to take Bob's hamburger, because things normally can't just be taken from people (unless you are a thief).",
      "EditableFormat": "markdown",
      "HTML": "<p>...and TAKE ALL will not try to take Bob's hamburger, because things normally can't just be taken from people (unless you are a thief).</p>\n\n",
      "PostDate": "2018-06-07T20:03:04.4452448Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "973fd6c0-783d-421e-b929-f0b12637be33",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My table is fixed in place. It cannot be taken.  It is not scenery, either.  Neither are the items on the table.\r\n\r\nTAKE ALL should not try to take the table, but the table should be listed in the room description in order to list the objects on the table in the room description.",
      "EditableFormat": "markdown",
      "HTML": "<p>My table is fixed in place. It cannot be taken.  It is not scenery, either.  Neither are the items on the table.</p>\n<p>TAKE ALL should not try to take the table, but the table should be listed in the room description in order to list the objects on the table in the room description.</p>\n\n",
      "PostDate": "2018-06-07T20:05:27.4963877Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0f1970f1-6fe3-4178-9a1f-811b4ded65d1",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Imagine that the parser is an actual person you know.\r\n\r\nThe parser does everything for you because you are paralyzed.\r\n\r\nThe parser is in a room.  There is a basket in the floor with an egg in it, and there is a table with an apple on it.  Bob is also in the room, and he is holding a tasty beverage.\r\n\r\nYou say, \"hey, parser!  Bring me everything from that room!\"\r\n\r\nIf the parser tried to take the table, you'd probably heckle him.  \"You dumb parser!  That table is fixed in place!  Why would you try to take it, you dummy?\"\r\n\r\nThen the parser picks up the basket, then takes the egg out of the basket, and hands them both to you.  \"You know that you could have left that egg in the basket, right, parser?\"\r\n\r\nThen, the parser tries to take Bob's beer, Bob sticks his foot up its ass, and now the parser is paralyzed alongside of you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Imagine that the parser is an actual person you know.</p>\n<p>The parser does everything for you because you are paralyzed.</p>\n<p>The parser is in a room.  There is a basket in the floor with an egg in it, and there is a table with an apple on it.  Bob is also in the room, and he is holding a tasty beverage.</p>\n<p>You say, \"hey, parser!  Bring me everything from that room!\"</p>\n<p>If the parser tried to take the table, you'd probably heckle him.  \"You dumb parser!  That table is fixed in place!  Why would you try to take it, you dummy?\"</p>\n<p>Then the parser picks up the basket, then takes the egg out of the basket, and hands them both to you.  \"You know that you could have left that egg in the basket, right, parser?\"</p>\n<p>Then, the parser tries to take Bob's beer, Bob sticks his foot up its ass, and now the parser is paralyzed alongside of you!</p>\n\n",
      "PostDate": "2018-06-07T20:15:36.3470787Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "98a852eb-c446-45d7-b714-034c891bedc7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> If they can be taken individually, why not include them in TAKE ALL?\r\n\r\nIn my example, the table can never be taken.  It is fixed in place.\r\n\r\n---\r\n>I now know that currently scenery items can be taken, but feel that shouldn't be allowed.\r\n\r\nThe author may want to mention an object in the actual prose, so the object is set up as scenery at first.  Once the object is taken, it is no longer scenery, so it shows up in the object list afterwards.  In this scenario, there would be an IF statement on the room description to check whether or not the object has been moved.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>If they can be taken individually, why not include them in TAKE ALL?</p>\n</blockquote>\n<p>In my example, the table can never be taken.  It is fixed in place.</p>\n<hr>\n<blockquote>\n<p>I now know that currently scenery items can be taken, but feel that shouldn't be allowed.</p>\n</blockquote>\n<p>The author may want to mention an object in the actual prose, so the object is set up as scenery at first.  Once the object is taken, it is no longer scenery, so it shows up in the object list afterwards.  In this scenario, there would be an IF statement on the room description to check whether or not the object has been moved.</p>\n\n",
      "PostDate": "2018-06-07T20:32:07.0314921Z",
      "LastEditDate": "2018-06-07T20:32:27.9617945Z",
      "link": null
    },
    {
      "PostId": "388ff54f-a25f-4cce-8bb1-635212547730",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "<details><summary>Nothing to see here.</summary>\r\n\r\n<details><summary>Please move along.</summary>\r\n\r\nOkay...   I tried to steer you away...\r\n\r\n---\r\nHow many text adventures has everyone successfully completed?\r\n\r\nI've beaten every Infocom game except Cutthroat Island, and that's because it depends on too many random things.  When I say I haven't beaten it, I mean that I haven't successfully played through all of the possible endings.  ...and, seeming how everything works randomly, and my choices as a player do not effect the outcome at all, I said [expletive deleted] that game.\r\n\r\nBesides the Infocom library, I've taken out at least 30 games made with Inform or Tads, and maybe 10 made with Quest.\r\n\r\nWhy am I tooting a dumb horn that is impressing no one?  I'm not really.  I'm just pointing out that I'm an experienced text adventurer.  I've grown up playing them.  This leads me to believe my input may be valuable (not that I think anyone is saying it's not, or that everyone else's input isn't equally valuable).\r\n\r\nNow, over the past ...what's it been?  Nearly 40 years?  Infocom games have always been considered the best of the bunch.  This is because Infocom payed attention to the players and the things the players expected while text adventuring.  \r\n\r\nInform came along almost 20 years ago, giving us a way to make games in the same exact format as Infocom games, and they knew to stick to the same formula.  Games made with Inform get much respect.  Games made with Quest very rarely even get played unless they are entered into a competition and someone HAS to play them.  Gamers mostly complain about the parser (many standard commands were missing, but many of those have recently been added).  Besides missing standard commands, things are handled strangely.  Like tables...\r\n\r\nIf I'm playing a game, and the description includes a table, but it doesn't mention anything being *on* that table, I'd probably still enter TAKE ALL.  If that didn't score me anything, I *might* LOOK UNDER TABLE.  At which point Quest would say \"I can't see that,\" unless the author took the time to think that someone might try to look under the table and script accordingly.   Never would I assume that I had to LOOK AT TABLE for items to magically appear on the table which have presumably been there the whole time.  Not only that, but if I happen to play that game again, upon entering that room, I KNOW that there's something on the table, so I enter GET APPLE.  \r\n\r\n\"You can't see that.\"  \r\n\r\nX TABLE.  \r\n\r\n\"Nothing out of the ordinary.  On the table, you can see an apple.\"   \r\n\r\nQUIT\r\n\r\n\r\n---\r\nAlso, if I see a basket (in which is an egg).  I expect TAKE ALL to get the basket and NOT the items from inside of it.  (Especially if the game has an inventory limit.)\r\n\r\n---\r\nI'm just rambling now...\r\n\r\nThere are four of us discussing this (here and on GitHub), and we each have a different perspective, which is cool.  The players each view things differently too, I'm sure.\r\n\r\nSo, I'm cool with whatever gets added to Quest.  (If I don't like it, I can easily modify my core library files.)\r\n\r\nI was just trying to help make Quest handle things the way serious gamers expect, which is the way things have been handled for decades.  Quest deserves respect, but gets none outside of this community.  The parser handles things differently than the norm, quite a few common commands were not previously included, and most games are created by lazy and/or inexperienced authors who set up USE on everything instead of taking the time to add actual commands to the code.  (Seasoned gamers would never in a million years think to try to USE HAMMER ON NAIL or USE BOWL ON WATER.  We were trained to USE more specific terminology.)\r\n\r\n\r\n---\r\nEND OF INCESSANT RAMBLING\r\n\r\nI hope I didn't offend anyone.  I was trying to share my point of view.  I am in no way saying, \"I'm right, and you're wrong.\"\r\n\r\n</details>\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<details><summary>Nothing to see here.</summary>\n<details><summary>Please move along.</summary>\n<p>Okay...   I tried to steer you away...</p>\n<hr>\n<p>How many text adventures has everyone successfully completed?</p>\n<p>I've beaten every Infocom game except Cutthroat Island, and that's because it depends on too many random things.  When I say I haven't beaten it, I mean that I haven't successfully played through all of the possible endings.  ...and, seeming how everything works randomly, and my choices as a player do not effect the outcome at all, I said [expletive deleted] that game.</p>\n<p>Besides the Infocom library, I've taken out at least 30 games made with Inform or Tads, and maybe 10 made with Quest.</p>\n<p>Why am I tooting a dumb horn that is impressing no one?  I'm not really.  I'm just pointing out that I'm an experienced text adventurer.  I've grown up playing them.  This leads me to believe my input may be valuable (not that I think anyone is saying it's not, or that everyone else's input isn't equally valuable).</p>\n<p>Now, over the past ...what's it been?  Nearly 40 years?  Infocom games have always been considered the best of the bunch.  This is because Infocom payed attention to the players and the things the players expected while text adventuring.</p>\n<p>Inform came along almost 20 years ago, giving us a way to make games in the same exact format as Infocom games, and they knew to stick to the same formula.  Games made with Inform get much respect.  Games made with Quest very rarely even get played unless they are entered into a competition and someone HAS to play them.  Gamers mostly complain about the parser (many standard commands were missing, but many of those have recently been added).  Besides missing standard commands, things are handled strangely.  Like tables...</p>\n<p>If I'm playing a game, and the description includes a table, but it doesn't mention anything being <em>on</em> that table, I'd probably still enter TAKE ALL.  If that didn't score me anything, I <em>might</em> LOOK UNDER TABLE.  At which point Quest would say \"I can't see that,\" unless the author took the time to think that someone might try to look under the table and script accordingly.   Never would I assume that I had to LOOK AT TABLE for items to magically appear on the table which have presumably been there the whole time.  Not only that, but if I happen to play that game again, upon entering that room, I KNOW that there's something on the table, so I enter GET APPLE.</p>\n<p>\"You can't see that.\"</p>\n<p>X TABLE.</p>\n<p>\"Nothing out of the ordinary.  On the table, you can see an apple.\"</p>\n<p>QUIT</p>\n<hr>\n<p>Also, if I see a basket (in which is an egg).  I expect TAKE ALL to get the basket and NOT the items from inside of it.  (Especially if the game has an inventory limit.)</p>\n<hr>\n<p>I'm just rambling now...</p>\n<p>There are four of us discussing this (here and on GitHub), and we each have a different perspective, which is cool.  The players each view things differently too, I'm sure.</p>\n<p>So, I'm cool with whatever gets added to Quest.  (If I don't like it, I can easily modify my core library files.)</p>\n<p>I was just trying to help make Quest handle things the way serious gamers expect, which is the way things have been handled for decades.  Quest deserves respect, but gets none outside of this community.  The parser handles things differently than the norm, quite a few common commands were not previously included, and most games are created by lazy and/or inexperienced authors who set up USE on everything instead of taking the time to add actual commands to the code.  (Seasoned gamers would never in a million years think to try to USE HAMMER ON NAIL or USE BOWL ON WATER.  We were trained to USE more specific terminology.)</p>\n<hr>\n<p>END OF INCESSANT RAMBLING</p>\n<p>I hope I didn't offend anyone.  I was trying to share my point of view.  I am in no way saying, \"I'm right, and you're wrong.\"</p>\n</details>\n</details>\n\n",
      "PostDate": "2018-06-07T21:08:34.1088799Z",
      "LastEditDate": "2018-06-07T23:43:52.6393448Z",
      "link": null
    },
    {
      "PostId": "aabd7a46-ac51-4525-a8a6-45016ffda397",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think I'm repeating myself here, but as a player when I can see all of the following with hyperlinks, \r\n```\r\n    table (on which is an apple)\r\n    Bob (who is holding a hamburger)\r\n    basket (in which is an egg)\r\n    a talking pig\r\n```\r\nand say TAKE ALL, I would expect a response to everything highlighted, regardless of whether or not the take request is reasonable:\r\n```\r\ntable: You can't move it, never mind carry it.\r\napple: You pick it up.\r\nBob: He has a black belt in Karate, better be careful.\r\nhamburger: You snatch it from Bob's hand and eat it one gulp.\r\nbasket: You pick it up.\r\negg: You pick it up.\r\ntalking pig: You try to catch him but he runs off.\r\n```\r\nIt also avoids the following:\r\n```\r\nYou see a wounded soldier.\r\n>take all\r\nNothing here to take.\r\n>take soldier\r\nYou pick him up and put him over your shoulder.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I think I'm repeating myself here, but as a player when I can see all of the following with hyperlinks,</p>\n<pre><code>    table (on which is an apple)\n    Bob (who is holding a hamburger)\n    basket (in which is an egg)\n    a talking pig\n</code></pre>\n<p>and say TAKE ALL, I would expect a response to everything highlighted, regardless of whether or not the take request is reasonable:</p>\n<pre><code>table: You can't move it, never mind carry it.\napple: You pick it up.\nBob: He has a black belt in Karate, better be careful.\nhamburger: You snatch it from Bob's hand and eat it one gulp.\nbasket: You pick it up.\negg: You pick it up.\ntalking pig: You try to catch him but he runs off.\n</code></pre>\n<p>It also avoids the following:</p>\n<pre><code>You see a wounded soldier.\n&gt;take all\nNothing here to take.\n&gt;take soldier\nYou pick him up and put him over your shoulder.\n</code></pre>\n\n",
      "PostDate": "2018-06-07T21:35:01.7429102Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3af7661e-31e4-41fa-a1d6-e45c087c00ba",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">  as a player when I can see all of the following with hyperlinks\r\n\r\nOh, yeah...  I forgot most authors are usually creating hypertext adventures, not straight-up text adventures.\r\n\r\nWhere I'm from, clicking is for game books and web pages.  So, maybe I'm just an old adventurer in new territory.\r\n\r\nAlso, we didn't have GIGS of drive space or RAM, so we wanted to keep the text that was printed during play to a minimum.  \r\n\r\n...and don't print that long list of crap that can't be taken during TAKE ALL to my transcript, either!  That ink and paper doesn't grow on trees, you know!   (Well, no... Even the paper doesn't technically grow on the tree.)\r\n\r\n...and don't show me the same room description more than once.\r\n\r\nThese things all still distract from play now, even if we don't need to worry about the drive space, the RAM, or the ink and paper.\r\n\r\n---\r\n...and my games' response to TAKE ALL when nothing is taken is \"There is no 'all' to take.\"  This may still be slightly misleading, but it's not a blatant contradiction.\r\n\r\n---\r\nIf you're not making your game with seasoned IF veterans in mind, you're not targeting 90% of the IF crowd.\r\n\r\nWe don't care about all those pointless responses during TAKE ALL, but we will complain if there's no funny response when we try to interact with an object individually.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>as a player when I can see all of the following with hyperlinks</p>\n</blockquote>\n<p>Oh, yeah...  I forgot most authors are usually creating hypertext adventures, not straight-up text adventures.</p>\n<p>Where I'm from, clicking is for game books and web pages.  So, maybe I'm just an old adventurer in new territory.</p>\n<p>Also, we didn't have GIGS of drive space or RAM, so we wanted to keep the text that was printed during play to a minimum.</p>\n<p>...and don't print that long list of crap that can't be taken during TAKE ALL to my transcript, either!  That ink and paper doesn't grow on trees, you know!   (Well, no... Even the paper doesn't technically grow on the tree.)</p>\n<p>...and don't show me the same room description more than once.</p>\n<p>These things all still distract from play now, even if we don't need to worry about the drive space, the RAM, or the ink and paper.</p>\n<hr>\n<p>...and my games' response to TAKE ALL when nothing is taken is \"There is no 'all' to take.\"  This may still be slightly misleading, but it's not a blatant contradiction.</p>\n<hr>\n<p>If you're not making your game with seasoned IF veterans in mind, you're not targeting 90% of the IF crowd.</p>\n<p>We don't care about all those pointless responses during TAKE ALL, but we will complain if there's no funny response when we try to interact with an object individually.</p>\n\n",
      "PostDate": "2018-06-07T21:51:12.374027Z",
      "LastEditDate": "2018-06-07T21:56:18.089522Z",
      "link": null
    },
    {
      "PostId": "b76c3ff6-93c2-4117-a44e-bb98215e03cb",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Again, I'm not trying to argue with you at all, DavyB.  This is definitely not even a heated discussion on my end.\r\n\r\nWe just have different views, is all.  That's what makes the world great!\r\n\r\n---\r\n**EDIT**\r\n\r\nIf I check this thread later, and 20 people have posted that they prefer the way you think it should work, I'd be just as happy as if they preferred my method.\r\n\r\nHeck, I'd be happy if 20 people posted anything at all (just to be sure everyone is paying attention while their opinions could still effect the next release).",
      "EditableFormat": "markdown",
      "HTML": "<p>Again, I'm not trying to argue with you at all, DavyB.  This is definitely not even a heated discussion on my end.</p>\n<p>We just have different views, is all.  That's what makes the world great!</p>\n<hr>\n<p><strong>EDIT</strong></p>\n<p>If I check this thread later, and 20 people have posted that they prefer the way you think it should work, I'd be just as happy as if they preferred my method.</p>\n<p>Heck, I'd be happy if 20 people posted anything at all (just to be sure everyone is paying attention while their opinions could still effect the next release).</p>\n\n",
      "PostDate": "2018-06-07T21:59:47.1791758Z",
      "LastEditDate": "2018-06-07T23:46:45.3687237Z",
      "link": null
    },
    {
      "PostId": "2f944bc3-b868-4144-ac5f-c96b37f83520",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry KV, I hope I haven't stepped over a line anywhere? We seem to have created what looks like a fight so there is a good chance that no one will join in for fear of making matters worse. :)\r\n\r\nI started this thread because I felt there were issues with 'take all' and 'drop all'. One way to remove the issues is to remove the operations, as they are only short-cuts anyway. This is probably not a realistic option, however, so we need to improve what is there.\r\n\r\nPersonally, I would tend to use 'take all' when I  find more than one item when I walk into a room, look at a surface, or open a container. The latter cases weren't catered for at the time of the posting but are now handled in Quest 5.8, which feels like a step forward. I also notice that 'drop all' in Quest 5.8 no longer drops scenery objects held by the player, which is another welcome improvement.\r\n\r\nMy reference to hyperlinks was simply a shorthand way of describing the objects to be included in 'take all' rather than me assuming their use.  At the bottom of all this is the need to define 'take all' in a simple way for players.\r\n\r\nI think our differences reduce to whether or not 'take all' should include animate objects? ...though perhaps there is also a question mark over taking items out of a container if the container itself can be taken? \r\n\r\nIf we can agree the problems, maybe others will chip in with solutions?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry KV, I hope I haven't stepped over a line anywhere? We seem to have created what looks like a fight so there is a good chance that no one will join in for fear of making matters worse. :)</p>\n<p>I started this thread because I felt there were issues with 'take all' and 'drop all'. One way to remove the issues is to remove the operations, as they are only short-cuts anyway. This is probably not a realistic option, however, so we need to improve what is there.</p>\n<p>Personally, I would tend to use 'take all' when I  find more than one item when I walk into a room, look at a surface, or open a container. The latter cases weren't catered for at the time of the posting but are now handled in Quest 5.8, which feels like a step forward. I also notice that 'drop all' in Quest 5.8 no longer drops scenery objects held by the player, which is another welcome improvement.</p>\n<p>My reference to hyperlinks was simply a shorthand way of describing the objects to be included in 'take all' rather than me assuming their use.  At the bottom of all this is the need to define 'take all' in a simple way for players.</p>\n<p>I think our differences reduce to whether or not 'take all' should include animate objects? ...though perhaps there is also a question mark over taking items out of a container if the container itself can be taken?</p>\n<p>If we can agree the problems, maybe others will chip in with solutions?</p>\n\n",
      "PostDate": "2018-06-08T07:45:15.3599327Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "be02e22c-176d-4a75-9232-6ce49a4aaf0b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't think anyone thinks we're fighting.  I just don't think anyone besides you, me, mrangel, and Pixie really care, and the latter 2 notables have already each deposited two cents.\r\n\r\n---\r\nI also think we're eye-to-eye on everything but the table.  So, let's consider it and only it for a moment:\r\n\r\nI say objects which are fixed in place and cannot be taken should not be listed when entering TAKE ALL. \r\n\r\nAlso, seeming how most fixed-in-place objects are supporters, they should not be scenery because they need to be displayed in the room description to list their child objects.\r\n\r\n(I say this because it makes sense to me AND it's how things have worked in text adventures for 30 years, making it the expected behavior.)\r\n\r\n---\r\n**EDIT**\r\n\r\nDo note that this is a moot point, because I have to set my table to ```not_all``` for it to be ignored anyway.\r\n\r\nThe default setup in 5.8 is exactly how you dreamt of it, DavyB.  Except for animate objects, and that is now 1 extra click while you're already under the inventory tab setting up your take stuff.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't think anyone thinks we're fighting.  I just don't think anyone besides you, me, mrangel, and Pixie really care, and the latter 2 notables have already each deposited two cents.</p>\n<hr>\n<p>I also think we're eye-to-eye on everything but the table.  So, let's consider it and only it for a moment:</p>\n<p>I say objects which are fixed in place and cannot be taken should not be listed when entering TAKE ALL.</p>\n<p>Also, seeming how most fixed-in-place objects are supporters, they should not be scenery because they need to be displayed in the room description to list their child objects.</p>\n<p>(I say this because it makes sense to me AND it's how things have worked in text adventures for 30 years, making it the expected behavior.)</p>\n<hr>\n<p><strong>EDIT</strong></p>\n<p>Do note that this is a moot point, because I have to set my table to <code>not_all</code> for it to be ignored anyway.</p>\n<p>The default setup in 5.8 is exactly how you dreamt of it, DavyB.  Except for animate objects, and that is now 1 extra click while you're already under the inventory tab setting up your take stuff.</p>\n\n",
      "PostDate": "2018-06-08T08:05:46.6706536Z",
      "LastEditDate": "2018-06-08T08:18:58.2733392Z",
      "link": null
    },
    {
      "PostId": "dc055fa9-958a-40b2-9476-7867ed561a21",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, I missed a spot.\r\n\r\n99% of the time, male or female objects should not be taken so they are ignored by TAKE ALL.\r\n\r\nWhen we do want one to be listed, it's easy peasy in 5.8.  We simply uncheck \"Not listed when taking all\" under the inventory tab. Takes 1 second.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, I missed a spot.</p>\n<p>99% of the time, male or female objects should not be taken so they are ignored by TAKE ALL.</p>\n<p>When we do want one to be listed, it's easy peasy in 5.8.  We simply uncheck \"Not listed when taking all\" under the inventory tab. Takes 1 second.</p>\n\n",
      "PostDate": "2018-06-08T08:09:52.2734153Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc5cfe00-462c-43f8-8678-4cf4b6e11584",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">The default setup in 5.8 is exactly how you dreamt of it, DavyB.\r\n\r\nExcellent! I'd missed the change. Allowing individual animate objects to be listed or not listed gives all the control any developer would need.\r\n>I also think we're eye-to-eye on everything but the table. \r\n\r\nYou have lost me here? If all objects can be excluded/included individually, why is the table special? ",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>The default setup in 5.8 is exactly how you dreamt of it, DavyB.</p>\n</blockquote>\n<p>Excellent! I'd missed the change. Allowing individual animate objects to be listed or not listed gives all the control any developer would need.</p>\n<blockquote>\n<p>I also think we're eye-to-eye on everything but the table.</p>\n</blockquote>\n<p>You have lost me here? If all objects can be excluded/included individually, why is the table special?</p>\n\n",
      "PostDate": "2018-06-08T08:54:54.8506153Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "afa0f6b9-6c04-4665-9deb-242b5928974b",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> You have lost me here? If all objects can be excluded/included individually, why is the table special?\r\n\r\nJust as far as theory is concerned.  That's the only thing we really differ on, I think.\r\n\r\nI say the table is not scenery, but it is not included when entering TAKE ALL.\r\n\r\nYou say anything that is not scenery should be included when entering TAKE ALL.\r\n\r\nME: toe-may-toe\r\nYOU: toe-mah-toe\r\n\r\nLuckily, Pixie gave us the ```not_all``` checkbox.  So, there's no need to call the whole thing off.  With Quest, we CAN just all get along!  \r\n\r\n(Forgive the 3 obscure references.)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>You have lost me here? If all objects can be excluded/included individually, why is the table special?</p>\n</blockquote>\n<p>Just as far as theory is concerned.  That's the only thing we really differ on, I think.</p>\n<p>I say the table is not scenery, but it is not included when entering TAKE ALL.</p>\n<p>You say anything that is not scenery should be included when entering TAKE ALL.</p>\n<p>ME: toe-may-toe<br>\nYOU: toe-mah-toe</p>\n<p>Luckily, Pixie gave us the <code>not_all</code> checkbox.  So, there's no need to call the whole thing off.  With Quest, we CAN just all get along!</p>\n<p>(Forgive the 3 obscure references.)</p>\n\n",
      "PostDate": "2018-06-08T09:05:47.9847795Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bca91323-3d5d-4c84-b55e-7e556f8f1243",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great! I think this thread is finished, so I'm going to call it 'solved'.",
      "EditableFormat": "markdown",
      "HTML": "<p>Great! I think this thread is finished, so I'm going to call it 'solved'.</p>\n\n",
      "PostDate": "2018-06-08T09:51:13.1384629Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
