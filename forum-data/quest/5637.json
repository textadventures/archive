{
  "Topic": {
    "TopicId": "5637",
    "ForumId": "10",
    "Title": "I made the game crash D:",
    "LastUpdated": "2015-11-20T18:42:05+00:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "38775",
      "UserId": 0,
      "Username": "afrotoast",
      "UserAvatar": null,
      "UserGravatar": "d8f5f23dfb4df278f3499835fb600b7a",
      "EditableText": "okay so I have a container, where under certain circumstances, it reveals a fake bottom to the drawer. I had it set up so when the conditions are met, it would move the object &quot;fake_bottom&quot; into the drawer, and when you look at it, it changes the object from scenery to not scenery.\n\nI managed to circumvent the problem by just making it not scenery right from the beginning, and the game is playable, but before I did that, i noticed that adding the line:\n\n[code:1shingi2]fake_bottom&#46;scenery = &quot;False&quot;[/code:1shingi2]\n\nto the &quot;look at&quot; script caused the game to completely crash when looking at the object. The whole &quot;play&quot; interface would freeze up, even though you could still interact with quest. You could stop the game but if you tried to start it again it'll load up the same frozen state it was in.\n\nDoes anyone know why this is happening? This is really more for my own curiosity and learning than anything else. I've already sorted out the issue from a player point of view.\n\nIt just seems strange because usually if i make a mistake in the code it'll just return an error or not do anything. This is the first time the whole thing's just... failed.",
      "EditableFormat": "bbcode",
      "HTML": "okay so I have a container, where under certain circumstances, it reveals a fake bottom to the drawer. I had it set up so when the conditions are met, it would move the object &quot;fake_bottom&quot; into the drawer, and when you look at it, it changes the object from scenery to not scenery.<br/><br/>I managed to circumvent the problem by just making it not scenery right from the beginning, and the game is playable, but before I did that, i noticed that adding the line:<br/><br/><pre><code>fake_bottom&#46;scenery = &quot;False&quot;</code></pre><br/><br/>to the &quot;look at&quot; script caused the game to completely crash when looking at the object. The whole &quot;play&quot; interface would freeze up, even though you could still interact with quest. You could stop the game but if you tried to start it again it'll load up the same frozen state it was in.<br/><br/>Does anyone know why this is happening? This is really more for my own curiosity and learning than anything else. I've already sorted out the issue from a player point of view.<br/><br/>It just seems strange because usually if i make a mistake in the code it'll just return an error or not do anything. This is the first time the whole thing's just... failed.",
      "PostDate": "2015-11-20T05:34:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38776",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Strange, when using\n[code:4kaq4xo6]fake_bottom&#46;scenery = &quot;False&quot;[/code:4kaq4xo6] an errormessage should appear.\nTry \n[code:4kaq4xo6]fake_bottom&#46;scenery = false[/code:4kaq4xo6]\nThe scenery attribute is boolean not string.",
      "EditableFormat": "bbcode",
      "HTML": "Strange, when using<br/><pre><code>fake_bottom&#46;scenery = &quot;False&quot;</code></pre> an errormessage should appear.<br/>Try <br/><pre><code>fake_bottom&#46;scenery = false</code></pre><br/>The scenery attribute is boolean not string.",
      "PostDate": "2015-11-20T07:48:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38783",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just to expand a bit on Pertex' post:\n\nany Value encased in double quotes is a String (literal) Value, for example (the 'alias' Attribute is a String Attribute, so, String = String: no error): player.alias = &quot;HK&quot;\n\n(the 'name' Attribute is a String Attribute, so: player.name = &quot;player&quot;, whereas, for example, player.alias = &quot;HK&quot;. The 'name' String Attribute gives the Object, Function, Etc Element, it's ID, as can be seen. The 'name' String Attribute is the ID for quest's Elements, so quest can differentiate between the different Elements: Objects, Functions, Etc. For example, two people can have the same name, in quest, this would be the: alias, but no two people have the same ID such as their DNA, Iris-eye pattern, finger print, etc, and in quest the ID is the 'name' String Attribute)\n\nor another example (using what would be a String Attribute and a String Value): npc1.greeting = &quot;Hi, how are you? My name is John, what is your name?&quot;\n\nany Value NOT encased in double quotes is an Object (with a few exceptions that I'll tell about after --- further below), for example:\n\n(the 'left_hand' and 'right_hand' are Object Attributes: an Attribute that holds an Object's name, and thus &quot;pointing-getting&quot; that Object for use, but the actual Object's location doesn't change, it's not &quot;physically&quot; moved to the Attribute or nor to the parent Object of that Attribute, as you can see below)\n\n[code:1baxr1zu]player&#46;left_hand = shield\nplayer&#46;right_hand = sword\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;left_hand&quot; type=&quot;object&quot;&gt;shield&lt;/attr&gt;\n  &lt;attr name=&quot;left_hand&quot; type=&quot;object&quot;&gt;sword&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;sword&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;shield&quot;&gt;\n&lt;/object&gt;[/code:1baxr1zu]\n\n----------------------------------------------\n\nso, what are the exceptions?\n\nwell, at least two of them (I don't know if there's any more off-hand --- I can't think of any at the moment):\n\n'true' and 'false', as these are reserved Values for the Boolean Attribute, for some examples:\n\norc.dead = false\norc.dead = true\nplayer.flying = false\nplayer.flying = true\nplayer.poisoned = false\nplayer.poisoned = true\n\nI'm not sure if these are the correct syntax and/or terms-words for these built-in booleans (meh):\n\ntv.switchedon = false\ntv.switchedon = true\ndoor.isopen = false\ndoor.isopen = true\n\n----\n\n(so, don't name any Object as 'true' or 'false', lol --- either you'll get errors, or you'll remove-override the Boolean Attribute functionality from your game)",
      "EditableFormat": "bbcode",
      "HTML": "just to expand a bit on Pertex' post:<br/><br/>any Value encased in double quotes is a String (literal) Value, for example (the 'alias' Attribute is a String Attribute, so, String = String: no error): player.alias = &quot;HK&quot;<br/><br/>(the 'name' Attribute is a String Attribute, so: player.name = &quot;player&quot;, whereas, for example, player.alias = &quot;HK&quot;. The 'name' String Attribute gives the Object, Function, Etc Element, it's ID, as can be seen. The 'name' String Attribute is the ID for quest's Elements, so quest can differentiate between the different Elements: Objects, Functions, Etc. For example, two people can have the same name, in quest, this would be the: alias, but no two people have the same ID such as their DNA, Iris-eye pattern, finger print, etc, and in quest the ID is the 'name' String Attribute)<br/><br/>or another example (using what would be a String Attribute and a String Value): npc1.greeting = &quot;Hi, how are you? My name is John, what is your name?&quot;<br/><br/>any Value NOT encased in double quotes is an Object (with a few exceptions that I'll tell about after --- further below), for example:<br/><br/>(the 'left_hand' and 'right_hand' are Object Attributes: an Attribute that holds an Object's name, and thus &quot;pointing-getting&quot; that Object for use, but the actual Object's location doesn't change, it's not &quot;physically&quot; moved to the Attribute or nor to the parent Object of that Attribute, as you can see below)<br/><br/><pre><code>player&#46;left_hand = shield<br/>player&#46;right_hand = sword<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;left_hand&quot; type=&quot;object&quot;&gt;shield&lt;/attr&gt;<br/>  &lt;attr name=&quot;left_hand&quot; type=&quot;object&quot;&gt;sword&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;sword&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;shield&quot;&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>----------------------------------------------<br/><br/>so, what are the exceptions?<br/><br/>well, at least two of them (I don't know if there's any more off-hand --- I can't think of any at the moment):<br/><br/>'true' and 'false', as these are reserved Values for the Boolean Attribute, for some examples:<br/><br/>orc.dead = false<br/>orc.dead = true<br/>player.flying = false<br/>player.flying = true<br/>player.poisoned = false<br/>player.poisoned = true<br/><br/>I'm not sure if these are the correct syntax and/or terms-words for these built-in booleans (meh):<br/><br/>tv.switchedon = false<br/>tv.switchedon = true<br/>door.isopen = false<br/>door.isopen = true<br/><br/>----<br/><br/>(so, don't name any Object as 'true' or 'false', lol --- either you'll get errors, or you'll remove-override the Boolean Attribute functionality from your game)",
      "PostDate": "2015-11-20T18:42:05+00:00",
      "LastEditDate": null
    }
  ]
}
