{
  "Topic": {
    "TopicId": "gxxws68qyko6hqwkf9q2ua",
    "ForumId": "10",
    "Title": "Unexpected UNDO Problem [Resolved Again!]",
    "LastUpdated": "2020-08-02T09:48:35.42011Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8db0cd11-ce36-4b0d-882d-9d16675d50ac",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'd blocked UNDO in a couple of my games because of problems with some of the puzzles involved. This was done by introducing my own UNDO command. Deciding this was unnecessarily restrictive I tried changing the code in the command to the form:\r\n```\r\nif (some condition) {\r\n  msg (\"Sorry, 'undo' is not available here.\")\r\n}\r\nelse {\r\n  undo\r\n}\r\n```\r\nThis does invoke undo,  but the effect is different. In particular, the map display is not updated, as used to be the case before Quest 5.8. The issue seems connected with the conditional, as all is fine if I just use undo by itself in the command???",
      "EditableFormat": "markdown",
      "HTML": "<p>I'd blocked UNDO in a couple of my games because of problems with some of the puzzles involved. This was done by introducing my own UNDO command. Deciding this was unnecessarily restrictive I tried changing the code in the command to the form:</p>\n<pre><code>if (some condition) {\n  msg (\"Sorry, 'undo' is not available here.\")\n}\nelse {\n  undo\n}\n</code></pre>\n<p>This does invoke undo,  but the effect is different. In particular, the map display is not updated, as used to be the case before Quest 5.8. The issue seems connected with the conditional, as all is fine if I just use undo by itself in the command???</p>\n\n",
      "PostDate": "2020-08-02T09:48:35.42011Z",
      "LastEditDate": "2020-10-04T14:28:11.6827466Z",
      "link": null
    },
    {
      "PostId": "b30336f2-b8a1-4b0f-82f0-cf68bf55af78",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not entirely sure how the structure works around the undo command. But a few things spring to mind. Are you modifying the script on the built-in undo command, or creating your own? And in the latter case, have you set the `isundo` flag on the command to true?\r\n\r\nAfter a quick look, I think what you want might be:\r\n```\r\nSuppressTurnscripts()\r\nif (some condition) {\r\n  msg (\"Sorry, 'undo' is not available here.\")\r\n}\r\nelse {\r\n  undo\r\n  Grid_DrawPlayerInRoom (game.pov.parent)\r\n}\r\n```\r\n\r\n(the core undo command uses `if (GetBoolean (game, \"gridmap\")) {` to check if the map is enabled before redrawing it; but I assume that if you're asking that means that there is a map. If it's available in some areas but not others, you can add the check again)",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not entirely sure how the structure works around the undo command. But a few things spring to mind. Are you modifying the script on the built-in undo command, or creating your own? And in the latter case, have you set the <code>isundo</code> flag on the command to true?</p>\n<p>After a quick look, I think what you want might be:</p>\n<pre><code>SuppressTurnscripts()\nif (some condition) {\n  msg (\"Sorry, 'undo' is not available here.\")\n}\nelse {\n  undo\n  Grid_DrawPlayerInRoom (game.pov.parent)\n}\n</code></pre>\n<p>(the core undo command uses <code>if (GetBoolean (game, \"gridmap\")) {</code> to check if the map is enabled before redrawing it; but I assume that if you're asking that means that there is a map. If it's available in some areas but not others, you can add the check again)</p>\n\n",
      "PostDate": "2020-08-02T10:20:26.2390064Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "88114e4b-56b4-4cdd-a523-1ae22634b7d4",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks for the usual rapid response mrangel! Yes, I'm putting in my own undo command at the user script level, where I don't see an ```isundo``` flag?\r\n\r\nMy main concern is understanding why the following two command scripts have different outcomes?\r\n```\r\nundo\r\n```\r\n```\r\nif (true) {\r\n  undo\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks for the usual rapid response mrangel! Yes, I'm putting in my own undo command at the user script level, where I don't see an <code>isundo</code> flag?</p>\n<p>My main concern is understanding why the following two command scripts have different outcomes?</p>\n<pre><code>undo\n</code></pre>\n<pre><code>if (true) {\n  undo\n}\n</code></pre>\n\n",
      "PostDate": "2020-08-02T11:35:41.9126822Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a00cbec2-5d53-4787-b402-5d9e8802ad0a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The script of the built-in undo command is:\r\n```\r\n  <command name=\"undo\">\r\n    <pattern type=\"string\">[undo]</pattern>\r\n    <script>\r\n      undo\r\n      game.suppressturnscripts = true\r\n      if (GetBoolean (game, \"gridmap\")){\r\n        Grid_DrawPlayerInRoom (game.pov.parent)\r\n      }\r\n    </script>\r\n    <isundo/>\r\n  </command>\r\n```\r\n\r\nThe thing with the map is probably because the core undo command runs the undo script-statement and then redraws the map; which yours doesn't.\r\n\r\nYou might have to use code view to add the `<isundo/>`. It isn't shown anywhere in the editor, as far as I'm aware, because the developer didn't consider wanting to create your own undo command.\r\n\r\nThe flag tells the parser not to create a transaction before starting the command. So in practice, when you have `undo` in a script, it rolls back to the point where the player entered the last command without an `isundo` flag. So if your undo command doesn't have `isundo`, it may attempt to undo *itself* instead of the previous command.",
      "EditableFormat": "markdown",
      "HTML": "<p>The script of the built-in undo command is:</p>\n<pre><code>  &lt;command name=\"undo\"&gt;\n    &lt;pattern type=\"string\"&gt;[undo]&lt;/pattern&gt;\n    &lt;script&gt;\n      undo\n      game.suppressturnscripts = true\n      if (GetBoolean (game, \"gridmap\")){\n        Grid_DrawPlayerInRoom (game.pov.parent)\n      }\n    &lt;/script&gt;\n    &lt;isundo/&gt;\n  &lt;/command&gt;\n</code></pre>\n<p>The thing with the map is probably because the core undo command runs the undo script-statement and then redraws the map; which yours doesn't.</p>\n<p>You might have to use code view to add the <code>&lt;isundo/&gt;</code>. It isn't shown anywhere in the editor, as far as I'm aware, because the developer didn't consider wanting to create your own undo command.</p>\n<p>The flag tells the parser not to create a transaction before starting the command. So in practice, when you have <code>undo</code> in a script, it rolls back to the point where the player entered the last command without an <code>isundo</code> flag. So if your undo command doesn't have <code>isundo</code>, it may attempt to undo <em>itself</em> instead of the previous command.</p>\n\n",
      "PostDate": "2020-08-02T12:44:41.3822493Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "463f685e-6a58-4875-ad7f-d01c0c6daeda",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Not sure what I was doing previously so please ignore my last message for the moment as I can't recreate what I thought I'd tested...\r\n...anyway, I'd also misunderstood what was needed to re-implement the undo command so I'll get on with that.\r\nThanks again mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<p>Not sure what I was doing previously so please ignore my last message for the moment as I can't recreate what I thought I'd tested...<br>\n...anyway, I'd also misunderstood what was needed to re-implement the undo command so I'll get on with that.<br>\nThanks again mrangel!</p>\n\n",
      "PostDate": "2020-08-02T13:46:26.6229679Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4873a719-1d53-4b3d-ba18-5c0cb94526f9",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Selective undo now implemented in L Too:\r\nhttp://textadventures.co.uk/games/view/e4hrqb_vpeo4np1a0jel9g/l-too-another-mathemagical-adventure\r\nAnyone interested should feel free to make sure I've done it properly!",
      "EditableFormat": "markdown",
      "HTML": "<p>Selective undo now implemented in L Too:<br>\nhttp://textadventures.co.uk/games/view/e4hrqb_vpeo4np1a0jel9g/l-too-another-mathemagical-adventure<br>\nAnyone interested should feel free to make sure I've done it properly!</p>\n\n",
      "PostDate": "2020-08-02T18:07:28.9987123Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "05acb42a-cce3-48cb-864a-0d9f5984e239",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're playing with undo, it might be worth learning about `begin transaction` too. It basically creates a checkpoint that `undo` can roll back to.\r\n\r\nIt takes a single parameter, which is a command element (but it doesn't seem to do anything with it, so possibly any object would work).\r\n\r\nWhen you use the `undo` script command, it restores all objects and their attributes to the values they had at the last time `begin transaction` was called; but doesn't resume any scripts that were running then (and so doesn't restore local variables).\r\n\r\nThe parser calls `begin transaction` immediately before running any player-entered command that doesn't have its `isundo` flag set to true.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're playing with undo, it might be worth learning about <code>begin transaction</code> too. It basically creates a checkpoint that <code>undo</code> can roll back to.</p>\n<p>It takes a single parameter, which is a command element (but it doesn't seem to do anything with it, so possibly any object would work).</p>\n<p>When you use the <code>undo</code> script command, it restores all objects and their attributes to the values they had at the last time <code>begin transaction</code> was called; but doesn't resume any scripts that were running then (and so doesn't restore local variables).</p>\n<p>The parser calls <code>begin transaction</code> immediately before running any player-entered command that doesn't have its <code>isundo</code> flag set to true.</p>\n\n",
      "PostDate": "2020-08-02T23:06:14.4679632Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e3ac2aa4-f199-4991-801e-fdd80a4c084d",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks mrangel. Within my games, I use an attribute ```in_puzzle``` and just prevent an undo if it is set. I think this avoids me having to worry about the subtleties of the underlying ```undo``` operation...though as I type this I realise an undo could be used to reverse back into a puzzle. I'd better check!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks mrangel. Within my games, I use an attribute <code>in_puzzle</code> and just prevent an undo if it is set. I think this avoids me having to worry about the subtleties of the underlying <code>undo</code> operation...though as I type this I realise an undo could be used to reverse back into a puzzle. I'd better check!</p>\n\n",
      "PostDate": "2020-08-03T08:48:35.6647284Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "514bf09f-56f7-40d0-b755-b7a04138c02d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First thing that comes to my mind is something like:\r\n```\r\nundo\r\nwhile (game.in_puzzle) {\r\n  undo\r\n}\r\n```\r\nDon't know if that would work or if it's suitable; but might restrict 'undo' by making it so that when you're doing a puzzle, 'undo' will take you all the way back to the beginning rather than step by step.\r\n<hr/>\r\nIf you want to stop the user undoing a puzzle entirely, you could use a turn timeout to unset the flag a turn later; prevent the user undoing the final move of the puzzle.",
      "EditableFormat": "markdown",
      "HTML": "<p>First thing that comes to my mind is something like:</p>\n<pre><code>undo\nwhile (game.in_puzzle) {\n  undo\n}\n</code></pre>\n<p>Don't know if that would work or if it's suitable; but might restrict 'undo' by making it so that when you're doing a puzzle, 'undo' will take you all the way back to the beginning rather than step by step.</p>\n<hr>\nIf you want to stop the user undoing a puzzle entirely, you could use a turn timeout to unset the flag a turn later; prevent the user undoing the final move of the puzzle.\n\n",
      "PostDate": "2020-08-03T09:11:36.4355758Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1480f40c-e39a-4a96-a63f-eae3723a0950",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, for the first game, the single undo seems fine, so I'll not update it to include the looping suggestion. I'll now see how it looks in the second game...",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, for the first game, the single undo seems fine, so I'll not update it to include the looping suggestion. I'll now see how it looks in the second game...</p>\n\n",
      "PostDate": "2020-08-03T13:30:02.2784013Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c5ebc58f-acac-4b4c-8e4c-ebe4d3c449a5",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...oh dear! I need to rethink the use of undo. I found problems with its use in my second game (Giantkiller Too) in relation to puzzles and the above fixes aren't enough. \r\n\r\nJust to explain the background here: up to Quest 5.8, undo didn't handle the map properly and as all my games use a map, I excluded undo. No one complained about that but with Quest 5.8 available I decided to remove unnecessary restrictions and allowed undo in all but two games that had extended puzzles. I've now looked at removing that restriction as well but had trouble with one of the games...which has also revealed issues with undo in all of my games!\r\n\r\nIn these games I allow the map and game panes to be brought in and removed dynamically. Undo is not handling these changes properly. There are several issues. For example, note the effect of the following commands issued on entry to L Too (link given above). Also undo doesn't affect the visibility of the map or games panes.\r\n```\r\n> map\r\nThe map is now shown above. Type map again to hide it.\r\n\r\n> map\r\nThe map has been hidden. Type map again to restore it.\r\n\r\n> undo\r\nUndo: map\r\n\r\n> undo\r\nUndo: map\r\n\r\n> undo\r\nUndo: map\r\nError running script: The given key was not present in the dictionary.\r\n```\r\nAll of my games are cruelty-free (there is always a way to recover from any difficulty) so I'm inclined to block the use of undo throughout.",
      "EditableFormat": "markdown",
      "HTML": "<p>...oh dear! I need to rethink the use of undo. I found problems with its use in my second game (Giantkiller Too) in relation to puzzles and the above fixes aren't enough.</p>\n<p>Just to explain the background here: up to Quest 5.8, undo didn't handle the map properly and as all my games use a map, I excluded undo. No one complained about that but with Quest 5.8 available I decided to remove unnecessary restrictions and allowed undo in all but two games that had extended puzzles. I've now looked at removing that restriction as well but had trouble with one of the games...which has also revealed issues with undo in all of my games!</p>\n<p>In these games I allow the map and game panes to be brought in and removed dynamically. Undo is not handling these changes properly. There are several issues. For example, note the effect of the following commands issued on entry to L Too (link given above). Also undo doesn't affect the visibility of the map or games panes.</p>\n<pre><code>&gt; map\nThe map is now shown above. Type map again to hide it.\n\n&gt; map\nThe map has been hidden. Type map again to restore it.\n\n&gt; undo\nUndo: map\n\n&gt; undo\nUndo: map\n\n&gt; undo\nUndo: map\nError running script: The given key was not present in the dictionary.\n</code></pre>\n<p>All of my games are cruelty-free (there is always a way to recover from any difficulty) so I'm inclined to block the use of undo throughout.</p>\n\n",
      "PostDate": "2020-08-04T08:51:13.4322171Z",
      "LastEditDate": "2020-08-04T08:56:50.8734559Z",
      "link": null
    },
    {
      "PostId": "9cbd40d0-4c2b-4a2d-958b-1b92c1260eaf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The issue with the map is because `undo` only restores the state of objects and attributes. It doesn't run any javascript, or notify the frontend.\r\n\r\nIf you have an attribute to track whether the map is shown or hidden (or similar things), you would probably need to make the undo command check those attributes after undoing, and show or hide as appropriate.\r\nFor example:\r\n```\r\nSuppressTurnscripts()\r\nif (some condition) {\r\n  msg (\"Sorry, 'undo' is not available here.\")\r\n}\r\nelse {\r\n  undo\r\n  Grid_DrawPlayerInRoom (game.pov.parent)\r\n  if (GetBoolean (game, \"maphidden\")) {\r\n    JS.uiHide(\"#gamePanel\")\r\n  }\r\n  else {\r\n    JS.uiShow(\"#gamePanel\")\r\n  }\r\n}\r\n```\r\nIt's likely that any UI Initialisation code which depends on variables that change during play will need to be copied onto the end of the undo command.",
      "EditableFormat": "markdown",
      "HTML": "<p>The issue with the map is because <code>undo</code> only restores the state of objects and attributes. It doesn't run any javascript, or notify the frontend.</p>\n<p>If you have an attribute to track whether the map is shown or hidden (or similar things), you would probably need to make the undo command check those attributes after undoing, and show or hide as appropriate.<br>\nFor example:</p>\n<pre><code>SuppressTurnscripts()\nif (some condition) {\n  msg (\"Sorry, 'undo' is not available here.\")\n}\nelse {\n  undo\n  Grid_DrawPlayerInRoom (game.pov.parent)\n  if (GetBoolean (game, \"maphidden\")) {\n    JS.uiHide(\"#gamePanel\")\n  }\n  else {\n    JS.uiShow(\"#gamePanel\")\n  }\n}\n</code></pre>\n<p>It's likely that any UI Initialisation code which depends on variables that change during play will need to be copied onto the end of the undo command.</p>\n\n",
      "PostDate": "2020-08-04T09:23:43.7677367Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "29256857-cffd-4fc6-a042-ec140f020ef2",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> It doesn't run any javascript, or notify the frontend.\r\n\r\nAh, I see now that undo relies on there being code to reverse every operation performed, and as that can't be specified for 'external' operations, there will be a way for undo to fail in many games. I've not seen anyone report a problem with undo or complain if it is missing, so on balance, I'll just block it in future, though there is no rush to make this change.\r\n\r\nThanks for the explanation mrangel!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>It doesn't run any javascript, or notify the frontend.</p>\n</blockquote>\n<p>Ah, I see now that undo relies on there being code to reverse every operation performed, and as that can't be specified for 'external' operations, there will be a way for undo to fail in many games. I've not seen anyone report a problem with undo or complain if it is missing, so on balance, I'll just block it in future, though there is no rush to make this change.</p>\n<p>Thanks for the explanation mrangel!</p>\n\n",
      "PostDate": "2020-08-04T10:41:40.8266959Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7b26653f-8882-4fa1-a5e2-d76c5af107bf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It shouldn't be too much of a problem, really.\r\n\r\nThe only things that don't revert are things on the frontend - which would mess up in exactly the same way when you load a saved game.\r\n(using `undo` is pretty much the same as restoring a save)\r\n\r\nIn the example above, this code:\r\n```\r\n  if (GetBoolean (game, \"maphidden\")) {\r\n    JS.uiHide(\"#gamePanel\")\r\n  }\r\n  else {\r\n    JS.uiShow(\"#gamePanel\")\r\n  }\r\n```\r\nshould already be in your UI Initialisation script, so it's just a case of copying it over.\r\n\r\nActually, when the next version of Quest is proposed, I'll suggest the inclusion of a script, `game.userinterfacesync` or similar, which would be run by the core libraries both after a successful undo, and after the UI Initialisation script. Make this issue more intuitive so that this code only needs to be updated in one place.",
      "EditableFormat": "markdown",
      "HTML": "<p>It shouldn't be too much of a problem, really.</p>\n<p>The only things that don't revert are things on the frontend - which would mess up in exactly the same way when you load a saved game.<br>\n(using <code>undo</code> is pretty much the same as restoring a save)</p>\n<p>In the example above, this code:</p>\n<pre><code>  if (GetBoolean (game, \"maphidden\")) {\n    JS.uiHide(\"#gamePanel\")\n  }\n  else {\n    JS.uiShow(\"#gamePanel\")\n  }\n</code></pre>\n<p>should already be in your UI Initialisation script, so it's just a case of copying it over.</p>\n<p>Actually, when the next version of Quest is proposed, I'll suggest the inclusion of a script, <code>game.userinterfacesync</code> or similar, which would be run by the core libraries both after a successful undo, and after the UI Initialisation script. Make this issue more intuitive so that this code only needs to be updated in one place.</p>\n\n",
      "PostDate": "2020-08-04T13:15:55.0660628Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ab6ea56-2041-4fb2-a841-a530ce8bf255",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">using undo is pretty much the same as restoring a save\r\n\r\nI did try out your suggestion of using the restore code in the sample game Cloak of Darkness,  \r\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version\r\nbut all is not well:\r\n```\r\n> map\r\nThe map is now shown above. Type MAP again to hide it.\r\n\r\n> undo\r\nUndo: map\r\n\r\n> undo\r\nUndo: map\r\nError running script: The given key was not present in the dictionary.\r\n```\r\nFeel free to experiment!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>using undo is pretty much the same as restoring a save</p>\n</blockquote>\n<p>I did try out your suggestion of using the restore code in the sample game Cloak of Darkness,<br>\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version<br>\nbut all is not well:</p>\n<pre><code>&gt; map\nThe map is now shown above. Type MAP again to hide it.\n\n&gt; undo\nUndo: map\n\n&gt; undo\nUndo: map\nError running script: The given key was not present in the dictionary.\n</code></pre>\n<p>Feel free to experiment!</p>\n\n",
      "PostDate": "2020-08-04T18:52:10.2873761Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2be742bc-f696-43e8-b4f3-76556f3ae22c",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just looking at the above text output, I'd say that one issue is that you can't undo a previous undo command -- that's like giving yourself a lobotomy as someone once told me.\r\n\r\nMaybe you could figure out a way to get the UNDO command to check and see if last turn's command was also \"undo\"?  If so, the UNDO command would tell the player that UNDO can't be used this turn.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just looking at the above text output, I'd say that one issue is that you can't undo a previous undo command -- that's like giving yourself a lobotomy as someone once told me.</p>\n<p>Maybe you could figure out a way to get the UNDO command to check and see if last turn's command was also \"undo\"?  If so, the UNDO command would tell the player that UNDO can't be used this turn.</p>\n\n",
      "PostDate": "2020-08-05T10:23:28.3705124Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a751eb20-cec1-4c92-a141-a804e3ca71ed",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Maybe you could figure out a way to get the UNDO command to check and see if last turn's command was also \"undo\"? If so, the UNDO command would tell the player that UNDO can't be used this turn.\r\n\r\nThat's what the `isundo` flag is for. It should undo the last transaction = the last non-undo command; so working backwards through all the things the player has done.\r\n\r\n@DavyB Am I correct in thinking that the same thing happens if you start with \"undo\"? As in, the player has entered two commands and then attempted to undo three times, so there is nothing left *to* undo?\r\n\r\nIf you want a better error message in this case, I'd suggest a turnscript:\r\n```\r\nif (HasObject (game.pov, \"currentcommandpattern\")) {\r\n  if (not GetBoolean (game.pov.currentcommandpattern, \"isundo\")) {\r\n    game.hasacted = true\r\n    destroy (this.name)\r\n  }\r\n}\r\n```\r\nand an undo command:\r\n```\r\nif (not GetBoolean (game, \"hasacted\")) {\r\n  msg (\"You have to do something before you can undo it!\")\r\n}\r\nelse … …\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Maybe you could figure out a way to get the UNDO command to check and see if last turn's command was also \"undo\"? If so, the UNDO command would tell the player that UNDO can't be used this turn.</p>\n</blockquote>\n<p>That's what the <code>isundo</code> flag is for. It should undo the last transaction = the last non-undo command; so working backwards through all the things the player has done.</p>\n<p>@DavyB Am I correct in thinking that the same thing happens if you start with \"undo\"? As in, the player has entered two commands and then attempted to undo three times, so there is nothing left <em>to</em> undo?</p>\n<p>If you want a better error message in this case, I'd suggest a turnscript:</p>\n<pre><code>if (HasObject (game.pov, \"currentcommandpattern\")) {\n  if (not GetBoolean (game.pov.currentcommandpattern, \"isundo\")) {\n    game.hasacted = true\n    destroy (this.name)\n  }\n}\n</code></pre>\n<p>and an undo command:</p>\n<pre><code>if (not GetBoolean (game, \"hasacted\")) {\n  msg (\"You have to do something before you can undo it!\")\n}\nelse … …\n</code></pre>\n\n",
      "PostDate": "2020-08-05T11:53:03.8789348Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d9d3917-7d08-48e4-808a-d3b3408ac190",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I suddenly thought that perhaps the existing undo might have problems so I experimented with a program having just two rooms and a north south link as follows:\r\n```\r\n<!--Saved by Quest 5.8.6836.13983-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"undo_test\">\r\n    <gameid>8c1f42e6-b08b-4fb3-99cc-c06169ce657a</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2020</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <exit alias=\"north\" to=\"second\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n  </object>\r\n  <object name=\"second\">\r\n    <inherit name=\"editor_room\" />\r\n    <exit alias=\"south\" to=\"room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n  </object>\r\n</asl>\r\n``` \r\nand then tried going north, then south and trying undo three times in a row. The result is:\r\n```\r\nYou are in a room.\r\nYou can go north.\r\n\r\n> n\r\n\r\nYou are in a second room.\r\nYou can go south.\r\n\r\n> s\r\n\r\nYou are in a room.\r\nYou can go north.\r\n\r\n> undo\r\nUndo: s\r\n\r\n> undo\r\nUndo: n\r\n\r\n> undo\r\nUndo: n\r\nError running script: Index was out of range. Must be non-negative and less than the size of the collection.Parameter name: index\r\n```\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>I suddenly thought that perhaps the existing undo might have problems so I experimented with a program having just two rooms and a north south link as follows:</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6836.13983--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"undo_test\"&gt;\n    &lt;gameid&gt;8c1f42e6-b08b-4fb3-99cc-c06169ce657a&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2020&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;exit alias=\"north\" to=\"second\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=\"second\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;exit alias=\"south\" to=\"room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<p>and then tried going north, then south and trying undo three times in a row. The result is:</p>\n<pre><code>You are in a room.\nYou can go north.\n\n&gt; n\n\nYou are in a second room.\nYou can go south.\n\n&gt; s\n\nYou are in a room.\nYou can go north.\n\n&gt; undo\nUndo: s\n\n&gt; undo\nUndo: n\n\n&gt; undo\nUndo: n\nError running script: Index was out of range. Must be non-negative and less than the size of the collection.Parameter name: index\n</code></pre>\n\n",
      "PostDate": "2020-08-05T19:36:55.9654415Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b9b003f9-8eac-492f-8804-76d4ccfa84fd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep thats what I was thinking :) I think my code in the last post should give a more sensible error message.\r\n\r\nAnd an idea just came to mind, how to add a 'redo' command :p It's a horrible hack tho",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep thats what I was thinking :) I think my code in the last post should give a more sensible error message.</p>\n<p>And an idea just came to mind, how to add a 'redo' command :p It's a horrible hack tho</p>\n\n",
      "PostDate": "2020-08-05T22:52:26.7807658Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a388bea3-379f-4321-a649-7e8ffbc661e4",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Humble thanks, mrangel. I've added your suggested turnscript to the Cloak of Darkness game, and updated the undo command to:\r\n```\r\nif (not GetBoolean (game, \"hasacted\")) {\r\n  msg (\"There is nothing to undo!\")\r\n}\r\nelse {\r\n  undo\r\n  game.suppressturnscripts = true\r\n  reset_options\r\n }\r\n```\r\nThe result initially looked perfect:\r\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version\r\n\r\n...but there is still an oddity connected with the use of a 'links' command that is used to flip hyperlinks on and off. If 'links' is preceded by any command it is happily undone but if it is the first command it is missed, as illustrated below.\r\n```\r\n> l\r\nYou are in the gloomy Foyer of the Opera House. The room is empty and there is nobody else around. There are large entrance doors to the north, with smaller doors to the south and west.\r\n\r\n> links\r\nHyperlinks have now been revealed. Type LINKS again to hide them.\r\n\r\n> undo\r\nUndo: links\r\n\r\n> undo\r\nUndo: l\r\n\r\n> undo\r\nThere is nothing to undo!\r\n\r\n> links\r\nHyperlinks have now been revealed. Type LINKS again to hide them.\r\n\r\n> undo\r\nThere is nothing to undo!\r\n```\r\nI was given the code to manage links through the forum and happily admit that I don't really know what is going on! Can you see that code? If not, I'll post it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Humble thanks, mrangel. I've added your suggested turnscript to the Cloak of Darkness game, and updated the undo command to:</p>\n<pre><code>if (not GetBoolean (game, \"hasacted\")) {\n  msg (\"There is nothing to undo!\")\n}\nelse {\n  undo\n  game.suppressturnscripts = true\n  reset_options\n }\n</code></pre>\n<p>The result initially looked perfect:<br>\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version</p>\n<p>...but there is still an oddity connected with the use of a 'links' command that is used to flip hyperlinks on and off. If 'links' is preceded by any command it is happily undone but if it is the first command it is missed, as illustrated below.</p>\n<pre><code>&gt; l\nYou are in the gloomy Foyer of the Opera House. The room is empty and there is nobody else around. There are large entrance doors to the north, with smaller doors to the south and west.\n\n&gt; links\nHyperlinks have now been revealed. Type LINKS again to hide them.\n\n&gt; undo\nUndo: links\n\n&gt; undo\nUndo: l\n\n&gt; undo\nThere is nothing to undo!\n\n&gt; links\nHyperlinks have now been revealed. Type LINKS again to hide them.\n\n&gt; undo\nThere is nothing to undo!\n</code></pre>\n<p>I was given the code to manage links through the forum and happily admit that I don't really know what is going on! Can you see that code? If not, I'll post it.</p>\n\n",
      "PostDate": "2020-08-06T08:40:57.7160206Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a23d31bb-a561-41f2-8abf-860a533bdd12",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...now see that commands that include ```game.suppressturnscripts = true``` appear to be treated like any other command in an undo sequence EXCEPT when the first in the sequence.  Taking this out of the LINKS command in Cloak of Darkness game appears to fix it (now consistent with MAP and PANES) but perhaps there are important consequences that I've not yet discovered?\r\n\r\nI see ```game.suppressturnscripts = true``` is used in SAVE and some other standard commands.",
      "EditableFormat": "markdown",
      "HTML": "<p>...now see that commands that include <code>game.suppressturnscripts = true</code> appear to be treated like any other command in an undo sequence EXCEPT when the first in the sequence.  Taking this out of the LINKS command in Cloak of Darkness game appears to fix it (now consistent with MAP and PANES) but perhaps there are important consequences that I've not yet discovered?</p>\n<p>I see <code>game.suppressturnscripts = true</code> is used in SAVE and some other standard commands.</p>\n\n",
      "PostDate": "2020-08-11T08:04:48.7054469Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7035e1b9-b15e-44d7-8ff7-b3e187230861",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...just noticed another little issue with the standard ```undo``` operation. The location name, if shown at the top of the screen, is not updated following an ```undo``` that moves the player? ",
      "EditableFormat": "markdown",
      "HTML": "<p>...just noticed another little issue with the standard <code>undo</code> operation. The location name, if shown at the top of the screen, is not updated following an <code>undo</code> that moves the player?</p>\n\n",
      "PostDate": "2020-08-13T11:44:02.2664756Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5ace7e21-98cb-4cbc-8f2f-dd84435ee27e",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Following the above discussion, I've returned to the two games that include extended periods when a player is within a puzzle. The following code nicely handles the prevention of UNDO while in a puzzle and the case where a player backtracks into a puzzle. One issue, however, is that allowing UNDO now gets around a policy of charging for hints in a game (i.e. use HINT and then UNDO). A heavy-handed way round this problem is to 'charge' for each undo as if it were a hint but is there a more subtle / better way?\r\n```\r\nif (game.in_puzzle) {\r\n  report_error (\"The UNDO operation is not available while completing a puzzle.\")\r\n}\r\nelse if (not GetBoolean (game, \"hasacted\")) {\r\n  msg (\"There is nothing to undo!\")\r\n}\r\nelse {\r\n  undo\r\n  game.suppressturnscripts = true\r\n  reset_options\r\n  while (game.in_puzzle) {\r\n    undo\r\n    game.suppressturnscripts = true\r\n    reset_options\r\n  }\r\n}\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Following the above discussion, I've returned to the two games that include extended periods when a player is within a puzzle. The following code nicely handles the prevention of UNDO while in a puzzle and the case where a player backtracks into a puzzle. One issue, however, is that allowing UNDO now gets around a policy of charging for hints in a game (i.e. use HINT and then UNDO). A heavy-handed way round this problem is to 'charge' for each undo as if it were a hint but is there a more subtle / better way?</p>\n<pre><code>if (game.in_puzzle) {\n  report_error (\"The UNDO operation is not available while completing a puzzle.\")\n}\nelse if (not GetBoolean (game, \"hasacted\")) {\n  msg (\"There is nothing to undo!\")\n}\nelse {\n  undo\n  game.suppressturnscripts = true\n  reset_options\n  while (game.in_puzzle) {\n    undo\n    game.suppressturnscripts = true\n    reset_options\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2020-08-14T12:34:19.9319765Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b959bdad-8a82-48a9-bc4a-750377ef0d1c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> A heavy-handed way round this problem is to 'charge' for each undo as if it were a hint but is there a more subtle / better way?\r\n\r\nIf your hint command uses a custom currency like hintpoints, you could do something like:\r\n```\r\nlatest_points = game.hintpoints\r\nundo\r\nif (latest_points < game.hintpoints) {\r\n  // if undoing a turn has given the player more points\r\n  // reset it to what it was before\r\n  game.hintpoints = latest_points\r\n}\r\n// all the other stuff to sync the map, location, etc goes here\r\n```\r\n\r\nIf you use a currency to buy hints that is also used for other things, you'd presumably need to make a separate flag or similar. You can use a local variable within the undo command to check whether a certain variable has been changed by the undo action, and then update the attributes accordingly.\r\n\r\nI did think about printing a message \"Hint points spent are not restored by undo!\" - but then realised that if they undo the action before the hint, it would probably trigger the message again as it restores their points to what they were the first time they reached that point.\r\n\r\nYou could also use this to make an undo command that keeps track of some stuff even if you undo. Could be pretty meta to have characters who get angry because it's rude to go back in time while talking to them, or something.\r\n\r\nEDIT:\r\n> ...just noticed another little issue with the standard undo operation. The location name, if shown at the top of the screen, is not updated following an undo that moves the player?\r\n\r\nYou need to add a line after the undo:\r\n```\r\nJS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>A heavy-handed way round this problem is to 'charge' for each undo as if it were a hint but is there a more subtle / better way?</p>\n</blockquote>\n<p>If your hint command uses a custom currency like hintpoints, you could do something like:</p>\n<pre><code>latest_points = game.hintpoints\nundo\nif (latest_points &lt; game.hintpoints) {\n  // if undoing a turn has given the player more points\n  // reset it to what it was before\n  game.hintpoints = latest_points\n}\n// all the other stuff to sync the map, location, etc goes here\n</code></pre>\n<p>If you use a currency to buy hints that is also used for other things, you'd presumably need to make a separate flag or similar. You can use a local variable within the undo command to check whether a certain variable has been changed by the undo action, and then update the attributes accordingly.</p>\n<p>I did think about printing a message \"Hint points spent are not restored by undo!\" - but then realised that if they undo the action before the hint, it would probably trigger the message again as it restores their points to what they were the first time they reached that point.</p>\n<p>You could also use this to make an undo command that keeps track of some stuff even if you undo. Could be pretty meta to have characters who get angry because it's rude to go back in time while talking to them, or something.</p>\n<p>EDIT:</p>\n<blockquote>\n<p>...just noticed another little issue with the standard undo operation. The location name, if shown at the top of the screen, is not updated following an undo that moves the player?</p>\n</blockquote>\n<p>You need to add a line after the undo:</p>\n<pre><code>JS.updateLocation(CapFirst(GetDisplayName(game.pov.parent)))\n</code></pre>\n\n",
      "PostDate": "2020-08-14T14:30:49.7529966Z",
      "LastEditDate": "2020-08-14T14:33:50.2601668Z",
      "link": null
    },
    {
      "PostId": "f0d45786-6348-449b-a098-e093bd3055e4",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Many thanks mrangel! That seems to work very well!! The final code is:\r\n```\r\nif (game.in_puzzle) {\r\n  report_error (\"The UNDO operation is not available while completing a puzzle.\")\r\n}\r\nelse if (not GetBoolean (game, \"hasacted\")) {\r\n  msg (\"There is nothing to undo!\")\r\n}\r\nelse {\r\n  start_count = game.hint_count\r\n  undo\r\n  game.suppressturnscripts = true\r\n  reset_options\r\n  while (game.in_puzzle) {\r\n    undo\r\n    game.suppressturnscripts = true\r\n    reset_options\r\n  }\r\n  if (start_count > game.hint_count) {\r\n    IncreaseScore (-game.hint_charge*(start_count - game.hint_count))\r\n    game.hint_count = start_count\r\n  }\r\n  JS.updateLocation (CapFirst(GetDisplayName(game.pov.parent)))\r\n}\r\n```\r\nI'll close this thread once I've tested both games.\r\n\r\nAgain thanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Many thanks mrangel! That seems to work very well!! The final code is:</p>\n<pre><code>if (game.in_puzzle) {\n  report_error (\"The UNDO operation is not available while completing a puzzle.\")\n}\nelse if (not GetBoolean (game, \"hasacted\")) {\n  msg (\"There is nothing to undo!\")\n}\nelse {\n  start_count = game.hint_count\n  undo\n  game.suppressturnscripts = true\n  reset_options\n  while (game.in_puzzle) {\n    undo\n    game.suppressturnscripts = true\n    reset_options\n  }\n  if (start_count &gt; game.hint_count) {\n    IncreaseScore (-game.hint_charge*(start_count - game.hint_count))\n    game.hint_count = start_count\n  }\n  JS.updateLocation (CapFirst(GetDisplayName(game.pov.parent)))\n}\n</code></pre>\n<p>I'll close this thread once I've tested both games.</p>\n<p>Again thanks!</p>\n\n",
      "PostDate": "2020-08-14T15:21:08.5092523Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f9966beb-c65a-4a6b-91b6-ee348eeb7958",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...just one final minor point. The 'isundo' flag associated with any use-defined 'undo' command can be set at the user level as a Boolean attribute of the command, set to 'true'.\r\n\r\nAll my games have now been updated and checked, so I've closed the thread.",
      "EditableFormat": "markdown",
      "HTML": "<p>...just one final minor point. The 'isundo' flag associated with any use-defined 'undo' command can be set at the user level as a Boolean attribute of the command, set to 'true'.</p>\n<p>All my games have now been updated and checked, so I've closed the thread.</p>\n\n",
      "PostDate": "2020-08-15T09:12:25.3834811Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fc131517-3c1f-41c0-b1af-1ee46177047a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If undoing the hint command doesn't restore your points spent, it may also be useful to set its `isundo` flag. That should mean that 'undo' skips over it, undoing the previous command instead.\r\n\r\nAnd to make things easier to understand for the player, it might be worth printing a message including `game.pov.currentcommand`, which after an undo will contain the command that was undone.",
      "EditableFormat": "markdown",
      "HTML": "<p>If undoing the hint command doesn't restore your points spent, it may also be useful to set its <code>isundo</code> flag. That should mean that 'undo' skips over it, undoing the previous command instead.</p>\n<p>And to make things easier to understand for the player, it might be worth printing a message including <code>game.pov.currentcommand</code>, which after an undo will contain the command that was undone.</p>\n\n",
      "PostDate": "2020-08-15T12:09:15.8107561Z",
      "LastEditDate": "2020-08-15T12:11:40.0727876Z",
      "link": null
    },
    {
      "PostId": "8a00a476-5bf8-4340-8c23-9780d47e1a63",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Edited: Sorry to open this up again but I found a problem when using the revised undo in a game that had been restored after saving. The game seems to go back to the built-in undo when the game is restored? I thought I had a solution yesterday but now realise I was wrong, so I've run out of ideas! This is not a major issue as the new undo is still much superior to the old one but perhaps it can be fixed?",
      "EditableFormat": "markdown",
      "HTML": "<p>Edited: Sorry to open this up again but I found a problem when using the revised undo in a game that had been restored after saving. The game seems to go back to the built-in undo when the game is restored? I thought I had a solution yesterday but now realise I was wrong, so I've run out of ideas! This is not a major issue as the new undo is still much superior to the old one but perhaps it can be fixed?</p>\n\n",
      "PostDate": "2020-10-02T13:12:11.7268093Z",
      "LastEditDate": "2020-10-03T12:11:23.8885165Z",
      "link": null
    },
    {
      "PostId": "01f59256-f6db-4304-8697-42e1e687f998",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Apologies mrangel, my testing of your original proposal was woefully inadequate! What I hadn't noticed was that restored games after saving were using the underlying undo rather than the revised version used in the game before saving. I decided to  look more carefully at the problem and have made the following changes, which can be seen in my updated Cloak of Darkness game at\r\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version.\r\n\r\n1. the 'clean_up' turnscript that runs when the command list is empty now disables itself rather than using 'destroy' :\r\n```\r\nif (HasObject (game.pov, \"currentcommandpattern\")) {\r\n  if (not GetBoolean (game.pov.currentcommandpattern, \"isundo\")) {\r\n    game.hasacted = true\r\n    this.enabled = false\r\n  }\r\n}\r\n```\r\n2. New code has been added to the user interface initialisation script to cover first initialisation and initialisation after a restore\r\n```\r\ngame.hasacted = false\r\nclean_up.enabled = true\r\nfirsttime {\r\n  game.restored = false\r\n}\r\notherwise {\r\n  game.restored = true\r\n}\r\n```\r\n3. and finally, the undo command now has the basic structure:\r\n```\r\ngame.suppressturnscripts = true\r\nif (not GetBoolean (game, \"hasacted\")) {\r\n  msg (\"There is nothing to undo!\")\r\n  if (game.restored) {\r\n    msg (\"(<b>Note:</b> When a game is saved, the moves made up to that point cannot be undone in the restored game.)\")\r\n  }\r\n}\r\nelse {\r\n  undo\r\n  game.suppressturnscripts = true\r\n}\r\n```\r\nHopefully I haven't missed anything this time around!",
      "EditableFormat": "markdown",
      "HTML": "<p>Apologies mrangel, my testing of your original proposal was woefully inadequate! What I hadn't noticed was that restored games after saving were using the underlying undo rather than the revised version used in the game before saving. I decided to  look more carefully at the problem and have made the following changes, which can be seen in my updated Cloak of Darkness game at<br>\nhttp://textadventures.co.uk/games/view/cxbbr4mqakkylkr80ypjhg/cloak-of-darkness-another-version.</p>\n<ol>\n<li>the 'clean_up' turnscript that runs when the command list is empty now disables itself rather than using 'destroy' :</li>\n</ol>\n<pre><code>if (HasObject (game.pov, \"currentcommandpattern\")) {\n  if (not GetBoolean (game.pov.currentcommandpattern, \"isundo\")) {\n    game.hasacted = true\n    this.enabled = false\n  }\n}\n</code></pre>\n<ol start=\"2\">\n<li>New code has been added to the user interface initialisation script to cover first initialisation and initialisation after a restore</li>\n</ol>\n<pre><code>game.hasacted = false\nclean_up.enabled = true\nfirsttime {\n  game.restored = false\n}\notherwise {\n  game.restored = true\n}\n</code></pre>\n<ol start=\"3\">\n<li>and finally, the undo command now has the basic structure:</li>\n</ol>\n<pre><code>game.suppressturnscripts = true\nif (not GetBoolean (game, \"hasacted\")) {\n  msg (\"There is nothing to undo!\")\n  if (game.restored) {\n    msg (\"(&lt;b&gt;Note:&lt;/b&gt; When a game is saved, the moves made up to that point cannot be undone in the restored game.)\")\n  }\n}\nelse {\n  undo\n  game.suppressturnscripts = true\n}\n</code></pre>\n<p>Hopefully I haven't missed anything this time around!</p>\n\n",
      "PostDate": "2020-10-04T13:17:11.5025899Z",
      "LastEditDate": "2020-10-04T14:12:39.3547554Z",
      "link": null
    },
    {
      "PostId": "ee2cfe1e-42a2-49c8-9d15-4526e7a0b890",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, I didn't think about the case when a saved game is restored.\r\nIn that case, it's probably more efficient to have the turnscript simply:\r\n```\r\ngame.hasacted = true\r\n```\r\nand in the UI initialisation script:\r\n```\r\ngame.restored = GetBoolean (game, \"hasacted\")\r\ngame.hasacted = false\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, I didn't think about the case when a saved game is restored.<br>\nIn that case, it's probably more efficient to have the turnscript simply:</p>\n<pre><code>game.hasacted = true\n</code></pre>\n<p>and in the UI initialisation script:</p>\n<pre><code>game.restored = GetBoolean (game, \"hasacted\")\ngame.hasacted = false\n</code></pre>\n\n",
      "PostDate": "2020-10-04T13:33:56.8964981Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2b04871e-c854-4854-af01-88e0b31093a1",
      "UserId": 199273,
      "Username": "DavyB",
      "AvatarUrl": "http://i.imgur.com/8BcaZCyb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, even better! Thanks mrangel.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, even better! Thanks mrangel.</p>\n\n",
      "PostDate": "2020-10-04T14:27:14.3925951Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e253f70d-b94a-4f1e-a66b-fa3933dd7718",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This has been a very interesting exercise!\r\nI prefer the idea of disabling the command and having people save scum instead o:-)",
      "EditableFormat": "markdown",
      "HTML": "<p>This has been a very interesting exercise!<br>\nI prefer the idea of disabling the command and having people save scum instead o:-)</p>\n\n",
      "PostDate": "2020-10-05T18:03:52.990485Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
