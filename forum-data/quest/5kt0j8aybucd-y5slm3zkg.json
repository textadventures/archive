{
  "Topic": {
    "TopicId": "5kt0j8aybucd-y5slm3zkg",
    "ForumId": "10",
    "Title": "TRANSCRIPT - How do YOU think it should work?",
    "LastUpdated": "2018-05-07T00:36:12.0703311Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9136ef33-472c-4a94-980c-e27260b2b800",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Every parser game I've ever played which had a transcript feature worked like this:\r\n\r\n**\\- When play begins, the transcript is disabled.**\r\n\r\n---\r\n**\\- The player must enter TRANSCRIPT or SCRIPT to enable the transcript.**\r\n\r\nNow, I remember the 80s, and, in the 80s, each time text printed to the screen with the transcript enabled, that very same text printed to the page loaded in your printer.\r\n\r\nNowadays, when interacting with fiction on a laptop or desktop, instead of printing to paper, a .txt file is created, and each line of text is appended to that file as it prints to the screen during play.  When enabling the transcript, the game asks for a file name (with the game name preloaded by default).  If this file exists, everything is appended to it.  If not, the file is created, then (you guessed it) everything is appended to it.\r\n\r\nWhen playing games in modern browser via the Quixe interpreter (which is what runs Glulx games), the transcript is saved to the browser's local storage.  (They say you have to [do a little work in your browser's developer console](https://github.com/erkyrath/quixe/wiki/Transcript-hack) to get to the transcript when playing in your browser, though.  I've never tried.)\r\n\r\n---\r\n**\\- Once the transcript is enabled, the player must enter TRANSCRIPT OFF or SCRIPT OFF to disable it.**\r\n\r\n---\r\n### The Point\r\n\r\nThe next version of Quest will have a transcript feature.\r\n\r\nEveryone thinks it should behave just like transcripts in all the other parser games, right?\r\n\r\nI only ask because we have two main ways to handle it.\r\n\r\n---\r\n### 1\\. The old way.  The transcript only records after the player has entered the command to disable it.\r\n\r\nWith this setup, an author could set **game.notranscript** to 'True' to disable the transcript features.\r\n\r\nThe player has the same commands they have had since the 1980s.  They can start and stop the transcript themselves at any point during play.\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/39680348-11b69070-5165-11e8-99cc-5d8b75e49ad4.png\"><img width=\"50%\" src=\"https://user-images.githubusercontent.com/30656341/39680348-11b69070-5165-11e8-99cc-5d8b75e49ad4.png\"/></a>\r\n\r\n---\r\n### 2\\. Option B, where there is always access to every line of text which has printed (even what has been cleared), starting from the title (if it prints in the game).\r\n\r\nIf we did it this way, an author could still set ```game.disabletranscript``` to 'True', but the player would have no control over what was included, which is the norm.\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"><img width=\"50%\" src=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"/></a>\r\n\r\n---\r\nEither way, entering VIEW TRANSCRIPT will show the transcript's contents in a dialog popup during play, unless it is disabled, in which case it will print, \"there is no transcript feature in this story.\"\r\n\r\nThe popup will have a 'Print' button, which allows the player to print to paper or print to a PDF file (if their system is set up do print to PDF).\r\n\r\n---\r\n<span style=\"none\">I am so tired of not being able to edit my posts...</span>",
      "EditableFormat": "markdown",
      "HTML": "<p>Every parser game I've ever played which had a transcript feature worked like this:</p>\n<p><strong>- When play begins, the transcript is disabled.</strong></p>\n<hr>\n<p><strong>- The player must enter TRANSCRIPT or SCRIPT to enable the transcript.</strong></p>\n<p>Now, I remember the 80s, and, in the 80s, each time text printed to the screen with the transcript enabled, that very same text printed to the page loaded in your printer.</p>\n<p>Nowadays, when interacting with fiction on a laptop or desktop, instead of printing to paper, a .txt file is created, and each line of text is appended to that file as it prints to the screen during play.  When enabling the transcript, the game asks for a file name (with the game name preloaded by default).  If this file exists, everything is appended to it.  If not, the file is created, then (you guessed it) everything is appended to it.</p>\n<p>When playing games in modern browser via the Quixe interpreter (which is what runs Glulx games), the transcript is saved to the browser's local storage.  (They say you have to <a href=\"https://github.com/erkyrath/quixe/wiki/Transcript-hack\">do a little work in your browser's developer console</a> to get to the transcript when playing in your browser, though.  I've never tried.)</p>\n<hr>\n<p><strong>- Once the transcript is enabled, the player must enter TRANSCRIPT OFF or SCRIPT OFF to disable it.</strong></p>\n<hr>\n<h3>The Point</h3>\n<p>The next version of Quest will have a transcript feature.</p>\n<p>Everyone thinks it should behave just like transcripts in all the other parser games, right?</p>\n<p>I only ask because we have two main ways to handle it.</p>\n<hr>\n<h3>1. The old way.  The transcript only records after the player has entered the command to disable it.</h3>\n<p>With this setup, an author could set <strong>game.notranscript</strong> to 'True' to disable the transcript features.</p>\n<p>The player has the same commands they have had since the 1980s.  They can start and stop the transcript themselves at any point during play.</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/39680348-11b69070-5165-11e8-99cc-5d8b75e49ad4.png\"><img width=\"50%\" src=\"https://user-images.githubusercontent.com/30656341/39680348-11b69070-5165-11e8-99cc-5d8b75e49ad4.png\"></a></p>\n<hr>\n<h3>2. Option B, where there is always access to every line of text which has printed (even what has been cleared), starting from the title (if it prints in the game).</h3>\n<p>If we did it this way, an author could still set <code>game.disabletranscript</code> to 'True', but the player would have no control over what was included, which is the norm.</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"><img width=\"50%\" src=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"></a></p>\n<hr>\n<p>Either way, entering VIEW TRANSCRIPT will show the transcript's contents in a dialog popup during play, unless it is disabled, in which case it will print, \"there is no transcript feature in this story.\"</p>\n<p>The popup will have a 'Print' button, which allows the player to print to paper or print to a PDF file (if their system is set up do print to PDF).</p>\n<hr>\n<p><span>I am so tired of not being able to edit my posts...</span></p>\n\n",
      "PostDate": "2018-05-07T00:36:12.0703311Z",
      "LastEditDate": "2018-05-07T02:40:01.0216874Z",
      "link": null
    },
    {
      "PostId": "6e56f0a4-5bd7-4cfb-83b2-7beffb7c6dc1",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So... transcript on will print to screen and print to  game.txt file???\r\nSounds like a good way to record an adventure...\r\nAs an interim... \r\nPrint to screen and Transcript=Transcript + (what was printed to screen)\r\nAt game over:\r\nopen \"Game.txt\"\r\nprint Transcript \r\nclose \"Game.txt\"\r\n(Or however the save to text file works...)\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So... transcript on will print to screen and print to  game.txt file???<br>\nSounds like a good way to record an adventure...<br>\nAs an interim...<br>\nPrint to screen and Transcript=Transcript + (what was printed to screen)<br>\nAt game over:<br>\nopen \"Game.txt\"<br>\nprint Transcript<br>\nclose \"Game.txt\"<br>\n(Or however the save to text file works...)</p>\n\n",
      "PostDate": "2018-05-07T02:05:10.0162288Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "66bfe8bb-8106-4987-a7ca-76fded16a072",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hrmm?\r\n\r\nAre you wanting Quest to open the text document when play ends?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hrmm?</p>\n<p>Are you wanting Quest to open the text document when play ends?</p>\n\n",
      "PostDate": "2018-05-07T02:07:35.9597419Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7316c576-d152-4f41-a7cc-5bde54ba5f7b",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The way I would do it in Basic...\r\nsave the game text in a variable as you play, in this case, Transcript... Or, more than likely: Game (or player).Transcript...\r\nWhen the game is over...\r\nopen \"Game.txt\" for output as #1\r\nprint #1, Transcript\r\nclose #1\r\nthis way, the file is only opened, saved to, then closed at just one time...\r\nIf a file is open and the game is printing one line at a time as you play...\r\nAn OOPS can corrupt the file and make it unreadable and therefore loosing everything.\r\n(Ding...)",
      "EditableFormat": "markdown",
      "HTML": "<p>The way I would do it in Basic...<br>\nsave the game text in a variable as you play, in this case, Transcript... Or, more than likely: Game (or player).Transcript...<br>\nWhen the game is over...<br>\nopen \"Game.txt\" for output as #1<br>\nprint #1, Transcript<br>\nclose #1<br>\nthis way, the file is only opened, saved to, then closed at just one time...<br>\nIf a file is open and the game is printing one line at a time as you play...<br>\nAn OOPS can corrupt the file and make it unreadable and therefore loosing everything.<br>\n(Ding...)</p>\n\n",
      "PostDate": "2018-05-07T02:16:25.8246071Z",
      "LastEditDate": "2018-05-07T02:35:41.5476682Z",
      "link": null
    },
    {
      "PostId": "4c809fb0-e1cc-4e97-87df-f646b5f8e05f",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Aargh!!!\r\n\r\n<img width=\"75%\" src=\"https://user-images.githubusercontent.com/30656341/39681851-4793c9a8-5172-11e8-913a-3142053a3084.png\"/>\r\n\r\n---\r\nYou guys can find my crazy code and ideas on my QuestStuff wiki on GitHub, where I can edit my posts when I mess something up, which happens quite frequently... Syntax errors, typos... Stuff like that.\r\n\r\nhttps://github.com/KVonGit/QuestStuff/wiki",
      "EditableFormat": "markdown",
      "HTML": "<p>Aargh!!!</p>\n<img width=\"75%\" src=\"https://user-images.githubusercontent.com/30656341/39681851-4793c9a8-5172-11e8-913a-3142053a3084.png\">\n<hr>\n<p>You guys can find my crazy code and ideas on my QuestStuff wiki on GitHub, where I can edit my posts when I mess something up, which happens quite frequently... Syntax errors, typos... Stuff like that.</p>\n<p>https://github.com/KVonGit/QuestStuff/wiki</p>\n\n",
      "PostDate": "2018-05-07T02:20:21.2414186Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "32f771ea-cdad-44c1-ab4c-8d9e1f96cb30",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> save the game text in a variable as you play, in this case, Transcript... Or, more than likely: Game (or player).Transcript...\r\nWhen the game is over...\r\nopen \"Game.txt\" for output as #1\r\nprint #1, Transcript\r\nclose #1\r\nthis way, the file is only opened, saved to, then closed at just one time...\r\nIf a file is open and the game is printing one line at a time as you play...\r\nAn OOPS can corrupt the file and make it unreadable and therefore loosing everything.\r\n\r\nOkay, this would be OPTION 1.\r\n\r\nWith Option 1, the player would have to enable the transcript to record anything and disable it to stop recording.  Usually this wouldn't be to print the entire transcript.  It would be for beta-testing purposes.\r\n\r\nAlso, appending each line to the file as the text is printed to the screens seems like it avoids possible errors. Like if the game always messes up at a certain point, the transcript would be intact up until that point, but what you foresee could also happen just as easily...\r\n\r\nHrmm...\r\n\r\nOption 1 is the way it has worked since the mid eighties.  That's why I feel it would be the best way to go.\r\n\r\n---\r\nOption 2 does not save to the hard drive at all.  The clearScreen() function is modified to hide the cleared text rather than removing it.  If you enter SHOW SCRIPT, the dialog popup simply displays all the text that has been printed during play, and the player has the option to press 'Print' to print to paper or save to a PDF.\r\n\r\n\r\n---\r\nOption 1 only records text when commanded to do so, while option 2 will always grant the player access to the entire game's text.\r\n\r\nAnd option 1 is the only one that saves to a local file.  It would be pointless to do so with option 2, since the text is always accessible.\r\n\r\n---\r\nIf you'd like to automatically record the entire transcript from the first line of text, set game.savetranscript to true. \r\n\r\nIf you'd like the transcript to display when play ends, in the script(s) where you put ```finish```, add ```JS.showTranscript()```.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>save the game text in a variable as you play, in this case, Transcript... Or, more than likely: Game (or player).Transcript...<br>\nWhen the game is over...<br>\nopen \"Game.txt\" for output as #1<br>\nprint #1, Transcript<br>\nclose #1<br>\nthis way, the file is only opened, saved to, then closed at just one time...<br>\nIf a file is open and the game is printing one line at a time as you play...<br>\nAn OOPS can corrupt the file and make it unreadable and therefore loosing everything.</p>\n</blockquote>\n<p>Okay, this would be OPTION 1.</p>\n<p>With Option 1, the player would have to enable the transcript to record anything and disable it to stop recording.  Usually this wouldn't be to print the entire transcript.  It would be for beta-testing purposes.</p>\n<p>Also, appending each line to the file as the text is printed to the screens seems like it avoids possible errors. Like if the game always messes up at a certain point, the transcript would be intact up until that point, but what you foresee could also happen just as easily...</p>\n<p>Hrmm...</p>\n<p>Option 1 is the way it has worked since the mid eighties.  That's why I feel it would be the best way to go.</p>\n<hr>\n<p>Option 2 does not save to the hard drive at all.  The clearScreen() function is modified to hide the cleared text rather than removing it.  If you enter SHOW SCRIPT, the dialog popup simply displays all the text that has been printed during play, and the player has the option to press 'Print' to print to paper or save to a PDF.</p>\n<hr>\n<p>Option 1 only records text when commanded to do so, while option 2 will always grant the player access to the entire game's text.</p>\n<p>And option 1 is the only one that saves to a local file.  It would be pointless to do so with option 2, since the text is always accessible.</p>\n<hr>\n<p>If you'd like to automatically record the entire transcript from the first line of text, set game.savetranscript to true.</p>\n<p>If you'd like the transcript to display when play ends, in the script(s) where you put <code>finish</code>, add <code>JS.showTranscript()</code>.</p>\n\n",
      "PostDate": "2018-05-07T02:35:09.5581492Z",
      "LastEditDate": "2018-05-07T02:37:07.739069Z",
      "link": null
    },
    {
      "PostId": "46911bfb-d718-456d-aaa1-2c1a87cd6955",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "...but with Option 2, it looks better.  All the text is intact, and it is saved without having to worry about it...\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"><img width=\"75%\" src=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"/></a>",
      "EditableFormat": "markdown",
      "HTML": "<p>...but with Option 2, it looks better.  All the text is intact, and it is saved without having to worry about it...</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"><img width=\"75%\" src=\"https://user-images.githubusercontent.com/30656341/39680305-ac117168-5164-11e8-8be7-9025a9614dc6.png\"></a></p>\n\n",
      "PostDate": "2018-05-07T02:42:36.2386656Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c7e4415b-79b9-4efe-920b-5d349204478e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Also note that you can't modify Quest to make it save to a local file without building from the source code.\r\n\r\nIf we go with Option 1 (appending each section of text output to .txt file as it prints to the screen, which is what I vote for), this could easily be disabled by setting **game.notranscript** to ```true```.  Then anyone can set up Option 2 by adding a simple library (or coding it themselves, but I've already got that code; in fact, it's in Quest580beta2 right now).",
      "EditableFormat": "markdown",
      "HTML": "<p>Also note that you can't modify Quest to make it save to a local file without building from the source code.</p>\n<p>If we go with Option 1 (appending each section of text output to .txt file as it prints to the screen, which is what I vote for), this could easily be disabled by setting <strong>game.notranscript</strong> to <code>true</code>.  Then anyone can set up Option 2 by adding a simple library (or coding it themselves, but I've already got that code; in fact, it's in Quest580beta2 right now).</p>\n\n",
      "PostDate": "2018-05-07T02:54:13.3550953Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
