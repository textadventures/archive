{
  "Topic": {
    "TopicId": "dbtsnpwwzuancz7riyamxq",
    "ForumId": "10",
    "Title": "Passing time without clock",
    "LastUpdated": "2021-12-29T01:52:21.5405175Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7f9a6281-9b97-4ba1-8082-9c06323a405f",
      "UserId": 374963,
      "Username": "Sara377544",
      "AvatarUrl": "https://i.imgur.com/YCtLz3Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello. Hoping to get some insight from people either smarter or more experienced than me. I've been using timers for my game for a little while but have gotten some negative feedback like the timer expiring while people are reading the room's description. Because of that, I wanted a system that was more controlled by the player.\r\n\r\nIdeally, I'd like certain actions (like entering/leaving a room) would increase a value, and when that value was at a certain threshold, things would happen like: NPCs/objects would move, the game would check if the player was in in a certain room, etc. What's the best way to do this?\r\n\r\nJust to be clear, I don't want an actual clock system, because I wouldn't want the player to move back and forth and be on like day 5 at 3 am.  Plus I think it would be more easy for me to check if, for example, if the value is 200 to move an NPC than checking if it's 21:10. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello. Hoping to get some insight from people either smarter or more experienced than me. I've been using timers for my game for a little while but have gotten some negative feedback like the timer expiring while people are reading the room's description. Because of that, I wanted a system that was more controlled by the player.</p>\n<p>Ideally, I'd like certain actions (like entering/leaving a room) would increase a value, and when that value was at a certain threshold, things would happen like: NPCs/objects would move, the game would check if the player was in in a certain room, etc. What's the best way to do this?</p>\n<p>Just to be clear, I don't want an actual clock system, because I wouldn't want the player to move back and forth and be on like day 5 at 3 am.  Plus I think it would be more easy for me to check if, for example, if the value is 200 to move an NPC than checking if it's 21:10.</p>\n\n",
      "PostDate": "2021-12-29T01:52:21.5405175Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0bc21598-d7f4-40d6-8ad5-195cb8d4d736",
      "UserId": 444448,
      "Username": "TheOtherBen",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Check out the game object in your editor's Object tree, it's the first thing. It has a Scripts tab. In there you can have a specific script fire anytime any room is entered. Each individual Room object has a Scripts tab also. You can choose what happens during various entry and exit events. You can also use Turn Scripts, which happen by default when a successful command is entered by the player. That is considered a Turn. You can activate turn scripts in the game objects Scripts tab to run every Turn, or you can use the room object's Scripts tab to run turn scripts just while the player is in a particular room.\r\n\r\nWhatever method you put your script into, it just has to add time to a variable/attribute that keeps track of your time.",
      "EditableFormat": "markdown",
      "HTML": "<p>Check out the game object in your editor's Object tree, it's the first thing. It has a Scripts tab. In there you can have a specific script fire anytime any room is entered. Each individual Room object has a Scripts tab also. You can choose what happens during various entry and exit events. You can also use Turn Scripts, which happen by default when a successful command is entered by the player. That is considered a Turn. You can activate turn scripts in the game objects Scripts tab to run every Turn, or you can use the room object's Scripts tab to run turn scripts just while the player is in a particular room.</p>\n<p>Whatever method you put your script into, it just has to add time to a variable/attribute that keeps track of your time.</p>\n\n",
      "PostDate": "2021-12-29T18:42:47.7017114Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "827a8e8c-3e8c-4e9d-904f-54ce65d17012",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In practice, whether or  not you have a clock probably doesn't matter much.\r\n\r\nThe easiest way to have a time-related event that doesn't depend on real time is to have an attribute (something like `game.timepassed`) which you increase when time passes.\r\n\r\nAs TheOtherBen said, there are a bunch of different places you could include a script that changes that attribute. The `roomenter` script would be good if moving to a new room takes time; or a turnscript if you want all commands to take time. If specific actions (like using a particular item) take time, you would increase the attribute in the scripts for those events.\r\n\r\nOne thing I would suggest (though a little harder to implement) could be giving a command an attribute for how much time it takes. Then you could add something like:\r\n```\r\n        if (HasInt (game.pov.currentcommandpattern, \"duration\")) {\r\n          game.timepassed= game.timepassed + game.pov.currentcommandpattern.duration\r\n        }\r\n```\r\nin the core function `ResolveNextName` before the line:\r\n```\r\n        do (game.pov.currentcommandpattern, \"script\", game.pov.currentcommandresolvedelements)\r\n```\r\n\r\nThen you could give any command a `duration` attribute, and have the time automatcially changed whenever the command is used.\r\n\r\n<hr />\r\n\r\nI suspect you would then have a bunch of turnscripts for events that happen at a certain time. They would have an attribute for what time they need to happen, and a script which checks if the time has passed, and runs the script if so. This would be pretty much the same as the TurnTimeout functions in the core - just using your `timepassed` attribute instead of a number of turns.\r\n\r\nYou could simplify setting it up by using a couple of functions like this:\r\n```\r\n<function name=\"RunScriptAtTime\" parameters=\"time, script\">\r\n  turnscriptname = GetUniqueElementName(\"event\")\r\n  create turnscript (turnscriptname)\r\n  turnscript = GetObject (turnscriptname)\r\n  turnscript.trigger = time\r\n  turnscript.event =  script\r\n  turnscript.script => {\r\n    if (game.timepassed >= this.trigger) {\r\n      this.enabled = false\r\n      do (this, \"event\")\r\n    }\r\n  }\r\n  turnscript.enabled = true\r\n</function>\r\n\r\n<function name=\"RunScriptAfterTime\" parameters=\"time, script\">\r\n  RunScriptAtTime (time + game.timepassed, script)\r\n</function>\r\n```\r\n\r\nSo then you could do something like:\r\n```\r\nRunScriptAtTime (300) {\r\n  msg (\"This message will display when game.timepassed reaches 300 for the first time\")\r\n}\r\n\r\nRunScriptAfterTime (10) {\r\n  msg (\"This message will display 10 timer units after it is set up\")\r\n}\r\n```\r\n\r\n<hr />\r\n\r\nAbout the only difference if you wanted an actual clock would be that you'd add an extra turnscript (or changescript) that converts the timepassed attribute into a human-readable time. Computers store the time as a number internally anyway.",
      "EditableFormat": "markdown",
      "HTML": "<p>In practice, whether or  not you have a clock probably doesn't matter much.</p>\n<p>The easiest way to have a time-related event that doesn't depend on real time is to have an attribute (something like <code>game.timepassed</code>) which you increase when time passes.</p>\n<p>As TheOtherBen said, there are a bunch of different places you could include a script that changes that attribute. The <code>roomenter</code> script would be good if moving to a new room takes time; or a turnscript if you want all commands to take time. If specific actions (like using a particular item) take time, you would increase the attribute in the scripts for those events.</p>\n<p>One thing I would suggest (though a little harder to implement) could be giving a command an attribute for how much time it takes. Then you could add something like:</p>\n<pre><code>        if (HasInt (game.pov.currentcommandpattern, \"duration\")) {\n          game.timepassed= game.timepassed + game.pov.currentcommandpattern.duration\n        }\n</code></pre>\n<p>in the core function <code>ResolveNextName</code> before the line:</p>\n<pre><code>        do (game.pov.currentcommandpattern, \"script\", game.pov.currentcommandresolvedelements)\n</code></pre>\n<p>Then you could give any command a <code>duration</code> attribute, and have the time automatcially changed whenever the command is used.</p>\n<hr>\n<p>I suspect you would then have a bunch of turnscripts for events that happen at a certain time. They would have an attribute for what time they need to happen, and a script which checks if the time has passed, and runs the script if so. This would be pretty much the same as the TurnTimeout functions in the core - just using your <code>timepassed</code> attribute instead of a number of turns.</p>\n<p>You could simplify setting it up by using a couple of functions like this:</p>\n<pre><code>&lt;function name=\"RunScriptAtTime\" parameters=\"time, script\"&gt;\n  turnscriptname = GetUniqueElementName(\"event\")\n  create turnscript (turnscriptname)\n  turnscript = GetObject (turnscriptname)\n  turnscript.trigger = time\n  turnscript.event =  script\n  turnscript.script =&gt; {\n    if (game.timepassed &gt;= this.trigger) {\n      this.enabled = false\n      do (this, \"event\")\n    }\n  }\n  turnscript.enabled = true\n&lt;/function&gt;\n\n&lt;function name=\"RunScriptAfterTime\" parameters=\"time, script\"&gt;\n  RunScriptAtTime (time + game.timepassed, script)\n&lt;/function&gt;\n</code></pre>\n<p>So then you could do something like:</p>\n<pre><code>RunScriptAtTime (300) {\n  msg (\"This message will display when game.timepassed reaches 300 for the first time\")\n}\n\nRunScriptAfterTime (10) {\n  msg (\"This message will display 10 timer units after it is set up\")\n}\n</code></pre>\n<hr>\n<p>About the only difference if you wanted an actual clock would be that you'd add an extra turnscript (or changescript) that converts the timepassed attribute into a human-readable time. Computers store the time as a number internally anyway.</p>\n\n",
      "PostDate": "2021-12-29T22:16:45.4859547Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bb77b912-0489-470f-9c28-ea5a1d5be92f",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/HiZKEtPb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "My House on the hill, has a \"clock\" where things happen after so many turns.\r\n(Just about everything happens in the front room of the house.)\r\nhttps://textadventures.co.uk/games/view/ytxcboq5uug1zlu4q6sbvw/the-house-on-the-hill\r\nNothing complex, just counting room entries, if I remember correctly.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>My House on the hill, has a \"clock\" where things happen after so many turns.<br>\n(Just about everything happens in the front room of the house.)<br>\nhttps://textadventures.co.uk/games/view/ytxcboq5uug1zlu4q6sbvw/the-house-on-the-hill<br>\nNothing complex, just counting room entries, if I remember correctly.</p>\n\n",
      "PostDate": "2021-12-29T23:41:26.3776621Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "473315bf-fdd8-4ecb-8b2a-ebe1b143ac8a",
      "UserId": 374963,
      "Username": "Sara377544",
      "AvatarUrl": "https://i.imgur.com/YCtLz3Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Omg thank you mrangel!!! You are a blessing. I got it to work, I believe. Made a couple tests and it all seemed fine.\r\n\r\nJust one question, if I have, say, multiple RunScriptAfterTime , where would the best place to put them be? I know if I put it at 'start of the game' script, it works, but will that make loading the game slower when I have a bunch of them loading?\r\n\r\nOh, also, one more thing. If I wanted an NPC to follow a certain repeated path (or schedule) how can I best do this?\r\nFor example, if their schedule was: Room A -> Room B -> Room C -> Room B -> Room A (and then it repeated over and over). And they waited, like, 4 turns/passedtime before moving to a new room. Would this be possible? And would it be possible to like stop this cycle eventually? Sorry if I described it poorly.\r\n\r\nI know I could prob do it by making a runscriptafter time for each moment it moved (Aka: 4,8,12,16,20,24...) but that might be spaghetti code.",
      "EditableFormat": "markdown",
      "HTML": "<p>Omg thank you mrangel!!! You are a blessing. I got it to work, I believe. Made a couple tests and it all seemed fine.</p>\n<p>Just one question, if I have, say, multiple RunScriptAfterTime , where would the best place to put them be? I know if I put it at 'start of the game' script, it works, but will that make loading the game slower when I have a bunch of them loading?</p>\n<p>Oh, also, one more thing. If I wanted an NPC to follow a certain repeated path (or schedule) how can I best do this?<br>\nFor example, if their schedule was: Room A -&gt; Room B -&gt; Room C -&gt; Room B -&gt; Room A (and then it repeated over and over). And they waited, like, 4 turns/passedtime before moving to a new room. Would this be possible? And would it be possible to like stop this cycle eventually? Sorry if I described it poorly.</p>\n<p>I know I could prob do it by making a runscriptafter time for each moment it moved (Aka: 4,8,12,16,20,24...) but that might be spaghetti code.</p>\n\n",
      "PostDate": "2021-12-30T05:26:45.4086638Z",
      "LastEditDate": "2021-12-30T06:14:37.5184956Z",
      "link": null
    },
    {
      "PostId": "0011d3be-b579-412c-8b93-6aa958ec2190",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you want to set up a load of events initially, you could create the turnscripts in the editor. Using a function like this makes it easier to read, and I don't think the time taken to do it would make much difference. It's just what looks neater to you.\r\n\r\n> For example, if their schedule was: Room A -> Room B -> Room C -> Room B -> Room A (and then it repeated over and over). And they waited, like, 4 turns/passedtime before moving to a new room. Would this be possible? \r\n\r\nYou could make a script  which changes its own trigger time when it is run, so it goes off more than once. For example:\r\n```\r\nRunScriptAtTime (4) {\r\n  this.enabled = true\r\n  this.trigger = this.trigger + 4\r\n  if (john.parent = room A) {\r\n    john.parent = room B\r\n  }\r\n  else if (john.parent = room B) {\r\n    john.parent = room C\r\n  }\r\n  else if (john.parent = room C) {\r\n    john.parent = room D\r\n  }\r\n  else {\r\n    john.parent = room A\r\n  }\r\n}\r\n```\r\nIn this case, if more than 4 units of time pass at once, the NPC might move every turn until he catches up with his schedule;. There's a few different ways to do it based on how you want him to behave in this case.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you want to set up a load of events initially, you could create the turnscripts in the editor. Using a function like this makes it easier to read, and I don't think the time taken to do it would make much difference. It's just what looks neater to you.</p>\n<blockquote>\n<p>For example, if their schedule was: Room A -&gt; Room B -&gt; Room C -&gt; Room B -&gt; Room A (and then it repeated over and over). And they waited, like, 4 turns/passedtime before moving to a new room. Would this be possible?</p>\n</blockquote>\n<p>You could make a script  which changes its own trigger time when it is run, so it goes off more than once. For example:</p>\n<pre><code>RunScriptAtTime (4) {\n  this.enabled = true\n  this.trigger = this.trigger + 4\n  if (john.parent = room A) {\n    john.parent = room B\n  }\n  else if (john.parent = room B) {\n    john.parent = room C\n  }\n  else if (john.parent = room C) {\n    john.parent = room D\n  }\n  else {\n    john.parent = room A\n  }\n}\n</code></pre>\n<p>In this case, if more than 4 units of time pass at once, the NPC might move every turn until he catches up with his schedule;. There's a few different ways to do it based on how you want him to behave in this case.</p>\n\n",
      "PostDate": "2021-12-30T08:11:52.9857981Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "14615b15-9ec8-4cdc-a2b1-ef9e317d2d84",
      "UserId": 444448,
      "Username": "TheOtherBen",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Something a little more advanced that can help with commands that have a duration is to edit the CoreTypes.aslx entry for defaultcommand to something like this:\r\n\r\n```\r\n<library>\r\n  <type name=\"defaultcommand\">\r\n    <pattern type=\"simplepattern\"></pattern>\r\n    <duration type=\"int\">10</duration>\r\n  </type>\r\n</library>\r\n```\r\nYou technically can just edit the CoreTypes but pasting it to a file like \"MyTypes.aslx\" and adding the file to the Included Libraries folder in the That way all commands will have that default duration and a place for you to change it if needed out of the box. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Something a little more advanced that can help with commands that have a duration is to edit the CoreTypes.aslx entry for defaultcommand to something like this:</p>\n<pre><code>&lt;library&gt;\n  &lt;type name=\"defaultcommand\"&gt;\n    &lt;pattern type=\"simplepattern\"&gt;&lt;/pattern&gt;\n    &lt;duration type=\"int\"&gt;10&lt;/duration&gt;\n  &lt;/type&gt;\n&lt;/library&gt;\n</code></pre>\n<p>You technically can just edit the CoreTypes but pasting it to a file like \"MyTypes.aslx\" and adding the file to the Included Libraries folder in the That way all commands will have that default duration and a place for you to change it if needed out of the box.</p>\n\n",
      "PostDate": "2021-12-30T18:23:56.730138Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6e5854cc-f877-43bb-b339-c83225c45d62",
      "UserId": 374963,
      "Username": "Sara377544",
      "AvatarUrl": "https://i.imgur.com/YCtLz3Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So everything has been working fine, however, I've had a little problem. You see my game has a groundhog day kind of thing where you basically awake again. RunScriptAfterTime: it seems that if you die and reset before game.timepassed reach the event threshold (for example if you died at 5 and the event was set at 10) then when it resets, the event happens at 5. (And then again at 10, bc when you die I set a call function again).\r\n\r\nRunScriptAtTime: If you die before the first one procs, you get double text and errors.\r\n\r\nIs there a way to fix this? I thought i'd be able to make it work by setting game.timepassed = 0 when you died.  Maybe if there's a way to stop callfunction?\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So everything has been working fine, however, I've had a little problem. You see my game has a groundhog day kind of thing where you basically awake again. RunScriptAfterTime: it seems that if you die and reset before game.timepassed reach the event threshold (for example if you died at 5 and the event was set at 10) then when it resets, the event happens at 5. (And then again at 10, bc when you die I set a call function again).</p>\n<p>RunScriptAtTime: If you die before the first one procs, you get double text and errors.</p>\n<p>Is there a way to fix this? I thought i'd be able to make it work by setting game.timepassed = 0 when you died.  Maybe if there's a way to stop callfunction?</p>\n\n",
      "PostDate": "2022-01-04T08:35:44.5232302Z",
      "LastEditDate": "2022-01-04T08:41:26.9953915Z",
      "link": null
    },
    {
      "PostId": "449048fe-60d2-47ca-baf1-f2052817787b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Resetting the timepassed to 0 should work. Everything would run at the time it was scheduled to.\r\n\r\nHowever, there's 3 different things you might want to do with an event that's already scheduled when you reset:\r\n1. Make it run after the same time (so an event that's due to run 2 ticks in the future still runs 2 ticks after resetting) - to do this you'd subtract the previous `timepassed` from its `trigger` time.\r\n2. Event runs at the time it was originally scheduled for.\r\n3. Event is cancelled.\r\n\r\nIf you want it to reset completely, you would probably do something like:\r\n```\r\nevents = NewStringList ()\r\nforeach (event, AllTurnScripts ()) {\r\n  if (HasInt (event, \"trigger\")) {\r\n    list add (events, event.name)\r\n  }\r\n}\r\nforeach (event, events) {\r\n  destroy (event)\r\n}\r\ngame.timepassed = 0\r\n```\r\nThat deletes all events, whether they've run yet or not. Then you can run some function to recreate any that you want to be initially available.\r\n\r\nDoes that help?",
      "EditableFormat": "markdown",
      "HTML": "<p>Resetting the timepassed to 0 should work. Everything would run at the time it was scheduled to.</p>\n<p>However, there's 3 different things you might want to do with an event that's already scheduled when you reset:</p>\n<ol>\n<li>Make it run after the same time (so an event that's due to run 2 ticks in the future still runs 2 ticks after resetting) - to do this you'd subtract the previous <code>timepassed</code> from its <code>trigger</code> time.</li>\n<li>Event runs at the time it was originally scheduled for.</li>\n<li>Event is cancelled.</li>\n</ol>\n<p>If you want it to reset completely, you would probably do something like:</p>\n<pre><code>events = NewStringList ()\nforeach (event, AllTurnScripts ()) {\n  if (HasInt (event, \"trigger\")) {\n    list add (events, event.name)\n  }\n}\nforeach (event, events) {\n  destroy (event)\n}\ngame.timepassed = 0\n</code></pre>\n<p>That deletes all events, whether they've run yet or not. Then you can run some function to recreate any that you want to be initially available.</p>\n<p>Does that help?</p>\n\n",
      "PostDate": "2022-01-04T09:27:54.0207022Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a4442aa8-aede-4ed1-b41d-b70efdece082",
      "UserId": 374963,
      "Username": "Sara377544",
      "AvatarUrl": "https://i.imgur.com/YCtLz3Nb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes! I didn't know if I should make it a function or not, but making it worked. Sorry for all the trouble. Haven't tested the character schedule one (If it works, prob will not respond, but might if it doesn't) however, as far as I know, it is working 100% as I intended! I'm so glad and so sorry for all the work.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes! I didn't know if I should make it a function or not, but making it worked. Sorry for all the trouble. Haven't tested the character schedule one (If it works, prob will not respond, but might if it doesn't) however, as far as I know, it is working 100% as I intended! I'm so glad and so sorry for all the work.</p>\n\n",
      "PostDate": "2022-01-04T18:58:58.0069574Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
