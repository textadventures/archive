{
  "Topic": {
    "TopicId": "nhh1pnudskmoxkbk1p1eaq",
    "ForumId": "10",
    "Title": "Is a counter acted on before or after a user command",
    "LastUpdated": "2020-01-11T10:45:36.3890995Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d226cfaa-1b57-4c2d-948c-5bbabfd07e89",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To give you an example.\r\nI have 6 bullets in  gun.\r\nEach time I shoot the gun a counter decreases giving me one less bullet in the gun \r\nNow if the counter is a acted on before the users command then when the user shoots the gun a check is made on the bullet counter and if zero the user is told that he does not have any bullets to shoot the gun so the users command is not carried out.\r\n\r\nIf the counter is acted on after the users command the  I'd need to set a flag to indictate that the gun is empty.\r\n\r\nI know that turnscript acts on  the script after the users command has been acted on it, but I don 't think there is a way for a script to act before the user has had his command acted on for every turn  in the game.",
      "EditableFormat": "markdown",
      "HTML": "<p>To give you an example.<br>\nI have 6 bullets in  gun.<br>\nEach time I shoot the gun a counter decreases giving me one less bullet in the gun<br>\nNow if the counter is a acted on before the users command then when the user shoots the gun a check is made on the bullet counter and if zero the user is told that he does not have any bullets to shoot the gun so the users command is not carried out.</p>\n<p>If the counter is acted on after the users command the  I'd need to set a flag to indictate that the gun is empty.</p>\n<p>I know that turnscript acts on  the script after the users command has been acted on it, but I don 't think there is a way for a script to act before the user has had his command acted on for every turn  in the game.</p>\n\n",
      "PostDate": "2020-01-11T10:45:36.3890995Z",
      "LastEditDate": "2020-01-11T10:48:11.5127534Z",
      "link": null
    },
    {
      "PostId": "5bb2e9a1-7a7a-455e-8459-2fb0b2cdf525",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What do you mean \"acted on\"?\r\n\r\nWhen the user enters a command, the game runs the script for that command.\r\n\r\nIf the script for your 'shoot' command reduces the number of the bullets they have, the counter will be reduced when the script tells it to. It's entirely up to you which order you put the parts of the command in.\r\n\r\nA typical shoot command might look like:\r\n\r\n* if you have ammo {\r\n     * Shoot, do damage to an enemy, or whatever\r\n     * Reduce the number of bullets\r\n* else {\r\n     * Display a message saying you have no bullets\r\n\r\n\r\nQuest doesn't \"act on\" a counter; counters change only when your script tells them to.\r\n(If you mean a changescript for a counter, that will run as part of any command that changes the counter)",
      "EditableFormat": "markdown",
      "HTML": "<p>What do you mean \"acted on\"?</p>\n<p>When the user enters a command, the game runs the script for that command.</p>\n<p>If the script for your 'shoot' command reduces the number of the bullets they have, the counter will be reduced when the script tells it to. It's entirely up to you which order you put the parts of the command in.</p>\n<p>A typical shoot command might look like:</p>\n<ul>\n<li>if you have ammo {\n<ul>\n<li>Shoot, do damage to an enemy, or whatever</li>\n<li>Reduce the number of bullets</li>\n</ul>\n</li>\n<li>else {\n<ul>\n<li>Display a message saying you have no bullets</li>\n</ul>\n</li>\n</ul>\n<p>Quest doesn't \"act on\" a counter; counters change only when your script tells them to.<br>\n(If you mean a changescript for a counter, that will run as part of any command that changes the counter)</p>\n\n",
      "PostDate": "2020-01-11T11:29:06.7736309Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "22881856-d11b-4989-880c-54c4172faece",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sorry mrangel for the confusion.\r\nI have tried programming with other text adventure compilers such as Inform, lads, etc and there has been actions with some text adventure compilers  that are preformed before the users command is performed and there are actions that are preformed after the users command has been preformed (Turnscript for Quest). For actions that are preformed before a players command is preformed you could always do things such as check a counter before the players command is preformed. For example the 'light counter' as if the light runs out then the command is not preformed. \r\nIt seems the only way to do a check on the light counter for Quest is after the user command action has been preformed as you don't want the light counter checked as part of the script for every command you write a script for.\r\n\r\nI see some strengths and weaknesses in all the text adventure compilers I've tried and the two that seem to work the best and are more adaptable to most situations are 'Quest' and 'Inform'.  Quest tends to keep things grouped together better than what Inform does and having a graphical user interface helps to make things easier for the adventure writer.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sorry mrangel for the confusion.<br>\nI have tried programming with other text adventure compilers such as Inform, lads, etc and there has been actions with some text adventure compilers  that are preformed before the users command is performed and there are actions that are preformed after the users command has been preformed (Turnscript for Quest). For actions that are preformed before a players command is preformed you could always do things such as check a counter before the players command is preformed. For example the 'light counter' as if the light runs out then the command is not preformed.<br>\nIt seems the only way to do a check on the light counter for Quest is after the user command action has been preformed as you don't want the light counter checked as part of the script for every command you write a script for.</p>\n<p>I see some strengths and weaknesses in all the text adventure compilers I've tried and the two that seem to work the best and are more adaptable to most situations are 'Quest' and 'Inform'.  Quest tends to keep things grouped together better than what Inform does and having a graphical user interface helps to make things easier for the adventure writer.</p>\n\n",
      "PostDate": "2020-01-11T23:11:03.7632857Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
