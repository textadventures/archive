{
  "Topic": {
    "TopicId": "v3wwuivs-ekgiynwdzug4g",
    "ForumId": "10",
    "Title": "Question about adding a message when attributes reach a specific number.",
    "LastUpdated": "2020-10-04T01:32:52.6974703Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b60c8566-2002-49e8-b829-e0ea5dded13f",
      "UserId": 507391,
      "Username": "SummaCivis",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2a9dbe4ab6b396c3048db6be8d746e16?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello. \r\n\r\nI'm not at all familiar with coding and I'm stuck on how to make a message appear when an attribute like \"psychosis\" reaches a 100, or 20, 30, ect. \r\n\r\nAny advice would be appreciated. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I'm not at all familiar with coding and I'm stuck on how to make a message appear when an attribute like \"psychosis\" reaches a 100, or 20, 30, ect.</p>\n<p>Any advice would be appreciated.</p>\n\n",
      "PostDate": "2020-10-04T01:32:52.6974703Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4432c492-5df2-4710-b4f3-977ac87912fb",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok. Let's do it.\r\nFirst create your attribute, what you will call \"player.psy\" (for short) and set it to a certain numaber. lets say 0. So, by using GUI you may set attribute, object \"player\", name \"psy\", value \"0\". Just keep in mind that attributes may be INT or STRING. The first it is treated as number and only numbers are possible. The second is a set of letter we use to call words, but for the machine, there is no such thing as words.\r\n\r\nOnce you have an attribute running, you can do things to it. The GUI has a function that increases and decreases an attribute, as long as it is an INT, but it does so only one by one. If you want rising in ten, for example, you need an expression like \"player.psy=player.psy+10\". It means whaterver the value is, the new value is the older one plus ten.\r\n\r\nIn order to make the game checking and displaying the massage, you need a conditional. It is the IF and THEN stuff. So, IF player.attribute=20, THEN \"print massage \"you feel earie\" or \"Jack feels earie\".\r\n\r\nThe main part of the trick here will be where to place the script. If you want it happens when the attribute changes, you must put it in the same conditional that checks the attribute level. If you want it in a certain room, you may place in the \"after entering\" at the scripts tab. The object 'Game' also has a script tab, so you may check the condition, for example, every time the player enters a room. The specifics are about your project.\r\n\r\nI hope it helped.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok. Let's do it.<br>\nFirst create your attribute, what you will call \"player.psy\" (for short) and set it to a certain numaber. lets say 0. So, by using GUI you may set attribute, object \"player\", name \"psy\", value \"0\". Just keep in mind that attributes may be INT or STRING. The first it is treated as number and only numbers are possible. The second is a set of letter we use to call words, but for the machine, there is no such thing as words.</p>\n<p>Once you have an attribute running, you can do things to it. The GUI has a function that increases and decreases an attribute, as long as it is an INT, but it does so only one by one. If you want rising in ten, for example, you need an expression like \"player.psy=player.psy+10\". It means whaterver the value is, the new value is the older one plus ten.</p>\n<p>In order to make the game checking and displaying the massage, you need a conditional. It is the IF and THEN stuff. So, IF player.attribute=20, THEN \"print massage \"you feel earie\" or \"Jack feels earie\".</p>\n<p>The main part of the trick here will be where to place the script. If you want it happens when the attribute changes, you must put it in the same conditional that checks the attribute level. If you want it in a certain room, you may place in the \"after entering\" at the scripts tab. The object 'Game' also has a script tab, so you may check the condition, for example, every time the player enters a room. The specifics are about your project.</p>\n<p>I hope it helped.</p>\n\n",
      "PostDate": "2020-10-04T12:02:17.358181Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "69fa9fda-be2f-48cc-865c-48c281b16b41",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For something like this there's two ways to do it.\r\n\r\nFirst: use an `if` statement to check the attribute every time you increase it.\r\n\r\nSecond: Use a changescript.\r\n\r\nI think in the desktop editor, there's a button to attach a changescript to an attribute. I don't know, because I don't have a Windows computer to try it on.\r\n\r\nIn the web version, to add a changescript you'd put something like this in the object's initialisation script, the start script, or some other script (probably immediately after you create the attribute):\r\n```\r\nplayer.changedpsychosis => {\r\n  // include the script here\r\n}\r\n```\r\n\r\nThe simplest thing to put in the changescript would be:\r\n```\r\nif (this.psychosis >= 100) {\r\n  // whatever you want it to do\r\n}\r\n```\r\nThat will run any time the player's `psychosis` attribute changes if the new value is 100 or higher. If you only want it to trigger when the value first hits 100, and not run again while it stays over the limit, you'd change that to:\r\n```\r\nif (this.psychosis >= 100 and oldvalue < 100) {\r\n  // whatever you want it to do\r\n}\r\n```\r\n(The special variable `oldvalue` in a changescript contains whatever the attribute was before)\r\n\r\nHope that helps.",
      "EditableFormat": "markdown",
      "HTML": "<p>For something like this there's two ways to do it.</p>\n<p>First: use an <code>if</code> statement to check the attribute every time you increase it.</p>\n<p>Second: Use a changescript.</p>\n<p>I think in the desktop editor, there's a button to attach a changescript to an attribute. I don't know, because I don't have a Windows computer to try it on.</p>\n<p>In the web version, to add a changescript you'd put something like this in the object's initialisation script, the start script, or some other script (probably immediately after you create the attribute):</p>\n<pre><code>player.changedpsychosis =&gt; {\n  // include the script here\n}\n</code></pre>\n<p>The simplest thing to put in the changescript would be:</p>\n<pre><code>if (this.psychosis &gt;= 100) {\n  // whatever you want it to do\n}\n</code></pre>\n<p>That will run any time the player's <code>psychosis</code> attribute changes if the new value is 100 or higher. If you only want it to trigger when the value first hits 100, and not run again while it stays over the limit, you'd change that to:</p>\n<pre><code>if (this.psychosis &gt;= 100 and oldvalue &lt; 100) {\n  // whatever you want it to do\n}\n</code></pre>\n<p>(The special variable <code>oldvalue</code> in a changescript contains whatever the attribute was before)</p>\n<p>Hope that helps.</p>\n\n",
      "PostDate": "2020-10-04T13:26:08.6868869Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4283e562-ffd8-4dee-b1f1-7dfde6f4964e",
      "UserId": 507391,
      "Username": "SummaCivis",
      "AvatarUrl": "https://secure.gravatar.com/avatar/2a9dbe4ab6b396c3048db6be8d746e16?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome. Thank you for the help.  I have now learned how to make a printed message with an (if, then) expression.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome. Thank you for the help.  I have now learned how to make a printed message with an (if, then) expression.</p>\n\n",
      "PostDate": "2020-10-04T23:36:15.5382427Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5cea1f81-d011-4f07-9997-5bd4d53852ee",
      "UserId": 432182,
      "Username": "Mataeus",
      "AvatarUrl": "https://i.imgur.com/67NYu7hb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The if/then/else statements will become the bread and butter of your games, along with flags.\r\n\r\nFor example, let's say you want to tie a hook to a fishing rod. Now obviously you can use the editor to plan for the event, so you set up the two items, add the verb \"tie\" to the hook. You'll then need to set up a short script for that verb, to check if you have both the rod and the hook, and if you have, you print the message that explains the player tying the items together.\r\n\r\nThe thing is, this will happen every time the player types it in.\r\n\r\nSo after the event occurs, you'll need to add a line to the script which sets the object (hook) flag to to a string you can easily remember, for example, \"tied\".\r\n\r\nThis also means that at the beginning of the script, before you print the message about tying the hook on, you'll need a line which checks the status of the flag.\r\n\r\nSo it might read something like:\r\n\r\nIf - object has flag - object \"hook - flag \"tied\"\r\nPrint \"You've already tied the hook to the rod, and have no wish to untie it\".\r\n\r\nElse\r\n\r\nIf - player is carrying object \"rod\"\r\nPrint \"You nimbly tie the hook to the end of the rod's line\"\r\nSet object flag - object \"hook\" flag \"tied\"\r\n\r\nElse\r\nPrint \"You don't have anything you wish to tie the hook to\"\r\n\r\n\r\nI mean that's a pretty hastily explained crappy example, and the same could be achieved with the USE verb and removing the two objects when done and creating a new one called 'fishing rod with hook', but you'll be doing stuff like that all the time.\r\n\r\nHope that inspires you in some way ^_^",
      "EditableFormat": "markdown",
      "HTML": "<p>The if/then/else statements will become the bread and butter of your games, along with flags.</p>\n<p>For example, let's say you want to tie a hook to a fishing rod. Now obviously you can use the editor to plan for the event, so you set up the two items, add the verb \"tie\" to the hook. You'll then need to set up a short script for that verb, to check if you have both the rod and the hook, and if you have, you print the message that explains the player tying the items together.</p>\n<p>The thing is, this will happen every time the player types it in.</p>\n<p>So after the event occurs, you'll need to add a line to the script which sets the object (hook) flag to to a string you can easily remember, for example, \"tied\".</p>\n<p>This also means that at the beginning of the script, before you print the message about tying the hook on, you'll need a line which checks the status of the flag.</p>\n<p>So it might read something like:</p>\n<p>If - object has flag - object \"hook - flag \"tied\"<br>\nPrint \"You've already tied the hook to the rod, and have no wish to untie it\".</p>\n<p>Else</p>\n<p>If - player is carrying object \"rod\"<br>\nPrint \"You nimbly tie the hook to the end of the rod's line\"<br>\nSet object flag - object \"hook\" flag \"tied\"</p>\n<p>Else<br>\nPrint \"You don't have anything you wish to tie the hook to\"</p>\n<p>I mean that's a pretty hastily explained crappy example, and the same could be achieved with the USE verb and removing the two objects when done and creating a new one called 'fishing rod with hook', but you'll be doing stuff like that all the time.</p>\n<p>Hope that inspires you in some way ^_^</p>\n\n",
      "PostDate": "2020-10-05T18:02:26.1740358Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
