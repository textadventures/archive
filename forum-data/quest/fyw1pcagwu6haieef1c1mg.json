{
  "Topic": {
    "TopicId": "fyw1pcagwu6haieef1c1mg",
    "ForumId": "10",
    "Title": "solved - using a function to designate object for attribute change",
    "LastUpdated": "2024-05-25T06:12:06.1472309Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a3633ccf-d5af-439d-9fde-733032a61206",
      "UserId": 278912,
      "Username": "TheVulture",
      "AvatarUrl": "https://secure.gravatar.com/avatar/20692523c78c1a4814f2dcdf8c0ab3aa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "not sure how to phrase the question. Essentially, I want a function to determine the current object being affected by an attribute change, but returning the function is invalid as a variable to do so - does anyone know how to make this work, or do I need to do if;then for all possible objects?\r\n\r\nIn example, the function, let's call it CurrentNpc works like this:\r\n~~~~\r\nif (ListContains(ScopeReachable(), npc1)) {\r\n  return (npc1)\r\n}\r\n~~~~\r\nAnd the attribute change, theoretically, would work like this:\r\n~~~~\r\nCurrentNpc().attribute = changedattribute\r\n~~~~\r\nBut using CurrentNpc() doesn't work like that, it just throws up an error like this:\r\n~~~~\r\nError running script: Invalid variable name 'CurrentNpc().attribute' in 'CurrentNpc().attribute= changedattribute'\r\n~~~~\r\nIdeally I'd want the function to select the npc, and then the attribute change to affect whichever npc has been chosen by the function, without having to do it individually for each possible npc to be chosen. If it matters, I've tested the function both returning a string containing the name of the object, and returning the object itself, neither works. Cheers for any help.",
      "EditableFormat": "markdown",
      "HTML": "<p>not sure how to phrase the question. Essentially, I want a function to determine the current object being affected by an attribute change, but returning the function is invalid as a variable to do so - does anyone know how to make this work, or do I need to do if;then for all possible objects?</p>\n<p>In example, the function, let's call it CurrentNpc works like this:</p>\n<pre><code>if (ListContains(ScopeReachable(), npc1)) {\n  return (npc1)\n}\n</code></pre>\n<p>And the attribute change, theoretically, would work like this:</p>\n<pre><code>CurrentNpc().attribute = changedattribute\n</code></pre>\n<p>But using CurrentNpc() doesn't work like that, it just throws up an error like this:</p>\n<pre><code>Error running script: Invalid variable name 'CurrentNpc().attribute' in 'CurrentNpc().attribute= changedattribute'\n</code></pre>\n<p>Ideally I'd want the function to select the npc, and then the attribute change to affect whichever npc has been chosen by the function, without having to do it individually for each possible npc to be chosen. If it matters, I've tested the function both returning a string containing the name of the object, and returning the object itself, neither works. Cheers for any help.</p>\n\n",
      "PostDate": "2024-05-25T06:12:06.1472309Z",
      "LastEditDate": "2024-05-25T13:12:13.8319594Z",
      "link": null
    },
    {
      "PostId": "61209bb4-57e7-4848-a962-1bbca8f4be9f",
      "UserId": 652801,
      "Username": "Gng",
      "AvatarUrl": "https://i.imgur.com/w0pOzA9b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your question is not fully clear for me, but I think it's that you have many NPCs in your world and you want to see if there's one in the player's room that they can interact with:\r\nfirst I would create an attribute to see if the object is NPC:\r\nIn the attribute tab of the object, create the attribute 'NPC', set it to boolean, then set it to true.\r\nthen use this code:\r\n```\r\nnon = FilterByAttribute (ScopeReachable(), \"NPC\", true)\r\nwhile (ListCount (non) > 0) {\r\n  x = PickOneObject (non)\r\nx.attribute = changedattribute\r\n\r\n}\r\n```\r\nif each NPC has different functions, you can again create the unique attribute for each of them and use FilterByAttribute function to find and designate your object for attribute change.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Your question is not fully clear for me, but I think it's that you have many NPCs in your world and you want to see if there's one in the player's room that they can interact with:<br>\nfirst I would create an attribute to see if the object is NPC:<br>\nIn the attribute tab of the object, create the attribute 'NPC', set it to boolean, then set it to true.<br>\nthen use this code:</p>\n<pre><code>non = FilterByAttribute (ScopeReachable(), \"NPC\", true)\nwhile (ListCount (non) &gt; 0) {\n  x = PickOneObject (non)\nx.attribute = changedattribute\n\n}\n</code></pre>\n<p>if each NPC has different functions, you can again create the unique attribute for each of them and use FilterByAttribute function to find and designate your object for attribute change.</p>\n\n",
      "PostDate": "2024-05-25T08:33:13.5295967Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "777ce28c-6788-451a-9394-0e8136aa1670",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, \"object.attribute\" syntax expects the object name to be a literal.\r\n\r\nThere are two ways to do this. The first is by using a temporary variable:\r\n```\r\nnpc = CurrentNpc()\r\nnpc.attribute = changedattribute\r\n```\r\nThe slightly more efficient option (but I find it less intuitive) is to use the `set` operator explicitly:\r\n```\r\nset (CurrentNpc(), \"attribute\", changedattribute)\r\n```\r\n`set` takes three parameters: The object, the name of the attribute, and the value to set.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, \"object.attribute\" syntax expects the object name to be a literal.</p>\n<p>There are two ways to do this. The first is by using a temporary variable:</p>\n<pre><code>npc = CurrentNpc()\nnpc.attribute = changedattribute\n</code></pre>\n<p>The slightly more efficient option (but I find it less intuitive) is to use the <code>set</code> operator explicitly:</p>\n<pre><code>set (CurrentNpc(), \"attribute\", changedattribute)\n</code></pre>\n<p><code>set</code> takes three parameters: The object, the name of the attribute, and the value to set.</p>\n\n",
      "PostDate": "2024-05-25T10:50:12.6449557Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8066a179-9d1b-4f7c-bd92-381888087044",
      "UserId": 278912,
      "Username": "TheVulture",
      "AvatarUrl": "https://secure.gravatar.com/avatar/20692523c78c1a4814f2dcdf8c0ab3aa?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel, using a temporary variable is exactly what I needed, very helpful as always thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel, using a temporary variable is exactly what I needed, very helpful as always thank you!</p>\n\n",
      "PostDate": "2024-05-25T13:11:49.4147178Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "97f54f8f-9cbb-4d6a-870e-3a8a45a5124d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(The `set` option is also the one you need to use if you have a function returning the name of an attribute, or want the same function to be usable on several different attributes… most commonly comes up in RPG type systems where you want functions to modify the player's statistics, and might have 4-8 statistic attributes all using the same formula)",
      "EditableFormat": "markdown",
      "HTML": "<p>(The <code>set</code> option is also the one you need to use if you have a function returning the name of an attribute, or want the same function to be usable on several different attributes… most commonly comes up in RPG type systems where you want functions to modify the player's statistics, and might have 4-8 statistic attributes all using the same formula)</p>\n\n",
      "PostDate": "2024-05-25T21:01:50.9630876Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
