{
  "Topic": {
    "TopicId": "3972",
    "ForumId": "10",
    "Title": "Check for equipped weapon",
    "LastUpdated": "2013-11-03T15:12:39+00:00",
    "ReplyCount": 40
  },
  "Posts": [
    {
      "PostId": "26638",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "I hope this is not too a stupid question but I have started with my combat system and first off decided on how I would equip and unequip weapons...lol\nSo I am struggling once more. I have made the decision of being able to equip a weapon either in my left hand or right hand. Thus I made an Object Type called weapon, verbs for equipl and equipr as well as attributes for weapon type with the same names on which I run scripts. Having a look at the Wiki, I managed that fine as well as adding 'EquipL and EquipR' to the weapon in question and displaying what you have in your left or right hand or both.\nProblem is - If I have a particular weapon already equipped, I do not want to be able to equip the same weapon in the other hand. Anyway: I have messed up the code so good that it probably isn't code anymore and I will understand some chuckles. I guess the problem is, I have no idea how to check if I do have the weapon that I want to equip already equipped. This is what I have for attribute equipl:\n[code:12eswc6d]if (this&#46;parent = game&#46;pov) {\n  if (not game&#46;pov&#46;equipped = null and not this&#46;alias=game&#46;pov&#46;equipped) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equipped&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip(LHand)&quot;, &quot;;&quot;)\n  }\n  else {\n    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n  }\n  game&#46;pov&#46;equipped = this\n  this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip(LHand)&quot;, &quot;;&quot;)\n  game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias\n}\nelse if (this&#46;alias=game&#46;pov&#46;equipped) {\n  msg (&quot;Already equipped&quot;)\n}\nelse {\n  msg (&quot;You don't have it&#46;&quot;)\n}[/code:12eswc6d]\n\nA little nudge in the right direction would help greatly.  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> \nPS: equipr attribute script is pretty much the same. I have two status attributes - one for the left hand and one for the right.\n      I have looked at some combat systems from Pertex - the library file is a bit beyond me",
      "EditableFormat": "bbcode",
      "HTML": "I hope this is not too a stupid question but I have started with my combat system and first off decided on how I would equip and unequip weapons...lol<br/>So I am struggling once more. I have made the decision of being able to equip a weapon either in my left hand or right hand. Thus I made an Object Type called weapon, verbs for equipl and equipr as well as attributes for weapon type with the same names on which I run scripts. Having a look at the Wiki, I managed that fine as well as adding 'EquipL and EquipR' to the weapon in question and displaying what you have in your left or right hand or both.<br/>Problem is - If I have a particular weapon already equipped, I do not want to be able to equip the same weapon in the other hand. Anyway: I have messed up the code so good that it probably isn't code anymore and I will understand some chuckles. I guess the problem is, I have no idea how to check if I do have the weapon that I want to equip already equipped. This is what I have for attribute equipl:<br/><pre><code>if (this&#46;parent = game&#46;pov) {<br/>  if (not game&#46;pov&#46;equipped = null and not this&#46;alias=game&#46;pov&#46;equipped) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equipped&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equipped&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip(LHand)&quot;, &quot;;&quot;)<br/>  }<br/>  else {<br/>    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>  }<br/>  game&#46;pov&#46;equipped = this<br/>  this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip(LHand)&quot;, &quot;;&quot;)<br/>  game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias<br/>}<br/>else if (this&#46;alias=game&#46;pov&#46;equipped) {<br/>  msg (&quot;Already equipped&quot;)<br/>}<br/>else {<br/>  msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/><br/>A little nudge in the right direction would help greatly.  <!-- s:? --><img src=\"{SMILIES_PATH}/icon_confused.gif\" alt=\":?\" title=\"Confused\" /><!-- s:? --> <br/>PS: equipr attribute script is pretty much the same. I have two status attributes - one for the left hand and one for the right.<br/>      I have looked at some combat systems from Pertex - the library file is a bit beyond me",
      "PostDate": "2013-10-21T21:11:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26640",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "See if you can work with (make sense of ~ understand ~ learn) Pixie's and~or Chase's Libraries:\n\nChase's Wearables Library:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2901\">viewtopic.php?f=18&amp;t=2901</a><!-- l -->\n\n(he~she makes equipment scripting look so easy, argh! hehe)\n\nPixie's Libraries and~or Guides:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2567\">viewtopic.php?f=18&amp;t=2567</a><!-- l -->\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Simple_Combat_System_(Advanced\">http://quest5.net/wiki/Simple_Combat_System_(Advanced</a><!-- m -->)\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->)\n(see the very bottom for the spell library files ~ they could help you with coding ideas, functionality, and logic with equipment)\n\nand Pertex' Combat Library:\n\n(like you already mentioned using)\n\nya, it is a beast, took me a long time to understand his combat coding ~ I still don't quite follow~get how his equipment and etc works though, lol.\n\nif interested, you can see my learning of quest coding progress, including on the last few pages, my struggle (and big triumph) with understanding Pertex' Combat Library and creating my own combat code based on his combat coding structure:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+help+me+thread\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+help+me+thread</a><!-- l -->\n\nmay be good for a laugh, at least, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n------------\n\nI too am trying to build~create my own equipment (as part of my work on a very ambitious combat system, lol) scripting, so if you're interested, I'd love to share ideas+coding and work together, hehe.",
      "EditableFormat": "bbcode",
      "HTML": "See if you can work with (make sense of ~ understand ~ learn) Pixie's and~or Chase's Libraries:<br/><br/>Chase's Wearables Library:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2901\">viewtopic.php?f=18&amp;t=2901</a><!-- l --><br/><br/>(he~she makes equipment scripting look so easy, argh! hehe)<br/><br/>Pixie's Libraries and~or Guides:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=2567\">viewtopic.php?f=18&amp;t=2567</a><!-- l --><br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Simple_Combat_System_(Advanced\">http://quest5.net/wiki/Simple_Combat_System_(Advanced</a><!-- m -->)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced\">http://quest5.net/wiki/Using_Types_and_Tabs_(Advanced</a><!-- m -->)<br/>(see the very bottom for the spell library files ~ they could help you with coding ideas, functionality, and logic with equipment)<br/><br/>and Pertex' Combat Library:<br/><br/>(like you already mentioned using)<br/><br/>ya, it is a beast, took me a long time to understand his combat coding ~ I still don't quite follow~get how his equipment and etc works though, lol.<br/><br/>if interested, you can see my learning of quest coding progress, including on the last few pages, my struggle (and big triumph) with understanding Pertex' Combat Library and creating my own combat code based on his combat coding structure:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+help+me+thread\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+help+me+thread</a><!-- l --><br/><br/>may be good for a laugh, at least, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>------------<br/><br/>I too am trying to build~create my own equipment (as part of my work on a very ambitious combat system, lol) scripting, so if you're interested, I'd love to share ideas+coding and work together, hehe.",
      "PostDate": "2013-10-21T22:28:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26642",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "basically, how Chase does it (and a few of my own ideas added in), CONCEPTUALLY, is this way:\n\n&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;&lt;/equipment_slots&gt;\n&lt;equipment_layer type=&quot;int&quot;&gt;&lt;/equipment_layer&gt;\n\nequipment~body &quot;slots&quot;: \n\nheadwear (hat, helmet), facewear (glasses, mask), earwear (jewelry: earrings), neckwear (jewelry: necklaces, or tie, bowtie), shoulderwear (pauldrons), armwear (vambraces, gauntlets), handwear (gloves, gauntlets), fingerwear (jewelry: rings), left_handwear (shield or secondary weapon), right_handwear (primary weapon), chestwear (body armor: mail, or shirt), backwear (cape, cloak, backpack, arrow quiver~case), waistwear (fraulds, tassets, shorts), legwear (grieves, tassets), footwear (clothing: boots, shoes, or armor: boots)\n\n(or you can further break up the slots that you are able to, into left and right sides and~or upper and lower too: shoulders, arms, legs, ears, and feet)\n\ncreate the &quot;gear_name (equipped)&quot; alias status for quest to check if you're &quot;wearing&quot; the gear or not.\n\nlastly, to compare your inventory objectlist's &quot;equipment_slots&quot; to your equipped object's &quot;equipment_slots&quot;, if they have~use the same &quot;equipment_slot&quot; (such as headwear), then you (can further) check their &quot;equipment_layers&quot; too, to see if you allow the object to be equipped or not (and~or tell why not). The &quot;equipment_layer&quot; check method prevents you from equipping more than one object (to that layer ~ ie integer setting), though what you want requires a bit more work, but it shouldn't be too hard to construct or figure out, once you understand this stuff: ie you'd just have to specifically check by comparing your two &quot;equipment_slots&quot; of &quot;left_handwear&quot; and &quot;right_handwear&quot;.\n\nThis is a bit complicated and difficult to understand the methodology, as it took me quite a while myself to get it. The main aspect is comprehending that you compare the inventory object list with the specific object (or comparing one object's &quot;equipment_slot&quot; with another object's &quot;equipment_slot&quot;) that you're trying to act upon (wear~equip) or to prevent from acting upon.",
      "EditableFormat": "bbcode",
      "HTML": "basically, how Chase does it (and a few of my own ideas added in), CONCEPTUALLY, is this way:<br/><br/>&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;&lt;/equipment_slots&gt;<br/>&lt;equipment_layer type=&quot;int&quot;&gt;&lt;/equipment_layer&gt;<br/><br/>equipment~body &quot;slots&quot;: <br/><br/>headwear (hat, helmet), facewear (glasses, mask), earwear (jewelry: earrings), neckwear (jewelry: necklaces, or tie, bowtie), shoulderwear (pauldrons), armwear (vambraces, gauntlets), handwear (gloves, gauntlets), fingerwear (jewelry: rings), left_handwear (shield or secondary weapon), right_handwear (primary weapon), chestwear (body armor: mail, or shirt), backwear (cape, cloak, backpack, arrow quiver~case), waistwear (fraulds, tassets, shorts), legwear (grieves, tassets), footwear (clothing: boots, shoes, or armor: boots)<br/><br/>(or you can further break up the slots that you are able to, into left and right sides and~or upper and lower too: shoulders, arms, legs, ears, and feet)<br/><br/>create the &quot;gear_name (equipped)&quot; alias status for quest to check if you're &quot;wearing&quot; the gear or not.<br/><br/>lastly, to compare your inventory objectlist's &quot;equipment_slots&quot; to your equipped object's &quot;equipment_slots&quot;, if they have~use the same &quot;equipment_slot&quot; (such as headwear), then you (can further) check their &quot;equipment_layers&quot; too, to see if you allow the object to be equipped or not (and~or tell why not). The &quot;equipment_layer&quot; check method prevents you from equipping more than one object (to that layer ~ ie integer setting), though what you want requires a bit more work, but it shouldn't be too hard to construct or figure out, once you understand this stuff: ie you'd just have to specifically check by comparing your two &quot;equipment_slots&quot; of &quot;left_handwear&quot; and &quot;right_handwear&quot;.<br/><br/>This is a bit complicated and difficult to understand the methodology, as it took me quite a while myself to get it. The main aspect is comprehending that you compare the inventory object list with the specific object (or comparing one object's &quot;equipment_slot&quot; with another object's &quot;equipment_slot&quot;) that you're trying to act upon (wear~equip) or to prevent from acting upon.",
      "PostDate": "2013-10-21T23:08:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26643",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Avantar, you have a fundamental problem, in that you have only have &quot;game.pov.equipped&quot;, which is just a single attribute and can reference only a single object. So you will not be able to have weapons (or items) equipped in both hands, as you can't track them.\n\nWhat you want is two &quot;equipped&quot; attributes, one for the left hand and one for the right hand (e.g. equippedl and equippedr, following the pattern you've set up). Then to see if an item is equipped in the left hand, check if &quot;this = game.pov.equippedl&quot; and similarly for the right (equippedr).",
      "EditableFormat": "bbcode",
      "HTML": "Avantar, you have a fundamental problem, in that you have only have &quot;game.pov.equipped&quot;, which is just a single attribute and can reference only a single object. So you will not be able to have weapons (or items) equipped in both hands, as you can't track them.<br/><br/>What you want is two &quot;equipped&quot; attributes, one for the left hand and one for the right hand (e.g. equippedl and equippedr, following the pattern you've set up). Then to see if an item is equipped in the left hand, check if &quot;this = game.pov.equippedl&quot; and similarly for the right (equippedr).",
      "PostDate": "2013-10-21T23:21:15+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26647",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "stringlists are a great way to reduce the amount of attributes and~or object types:\n\ninstead of &quot;left_hand_equipped=false&quot; and &quot;right_hand_equipped=false&quot; attributes, I can do:\n\n&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand&lt;/equipment_slots&gt;\n&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand&lt;/equipment_slots&gt;\n&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand;right_hand;left_arm;right_arm&lt;/equipment_slots&gt;\n\nand then &quot;list add&quot; or &quot;list remove&quot; too (though this is more code scripting lengthy, meh ~ more attributes vs more code length ~ you choose the trade off that's best for you).\n\nand for object types, instead of:\n\n&lt;type name=&quot;sword_type&quot;&gt;\n&lt;/type&gt;\n\n&lt;type name=&quot;axe_type&quot;&gt;\n&lt;/type&gt;\n\n&lt;type name=&quot;throwing_type&quot;&gt;\n&lt;/type&gt;\n\nI can do:\n\n&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type&lt;/weapon_type&gt;\n&lt;weapon_type type=&quot;simplestringlist&quot;&gt;axe_type&lt;/weapon_type&gt;\n&lt;weapon_type type=&quot;simplestringlist&quot;&gt;axe_type;throwing_type&lt;/weapon_type&gt;\n&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type;throwing_type&lt;/weapon_type&gt;\n&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type;axe_type;throwing_type&lt;/weapon_type&gt;\n\nthough I'd still have to deal with the main purpose of Object Types (providing a grouping of attributes or ie providing multiple attributes).\n\n---------------\n\nan extremely useful use (sorry! lol) for string dictionaries is &quot;conversion ~ converting&quot;, it took me awhile to comprehend this use through studying Pixie's Spell Library ~ it's not easy to comprehend at first, at least it wasn't for me.\n\nstringdictionary:\n\nstring_1=string_2\n\nwhich works great for elementals with magic (or any other &quot;opposites&quot; usage):\n\nfire=water, water=fire\n\nthink of the &quot;converting&quot; as &quot;returning&quot; a value:\n\n(conceptually)\nif (&quot;fire&quot;), then return &quot;water&quot;\nif (&quot;water&quot;), then return &quot;fire&quot;\n\nwhich is exactly how Pixie uses it.\n\n(conceptually)\nFire Dragon monster example\nif (monster.elemental=&quot;fire&quot;), then return: return_value=&quot;water&quot;\nif (player_casted_spell.elemental = return_value), do x2 damage\nif (player_casted_spell.elemental = monster.elemental), do x0.5 damage\nelse, do x1 damage",
      "EditableFormat": "bbcode",
      "HTML": "stringlists are a great way to reduce the amount of attributes and~or object types:<br/><br/>instead of &quot;left_hand_equipped=false&quot; and &quot;right_hand_equipped=false&quot; attributes, I can do:<br/><br/>&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand&lt;/equipment_slots&gt;<br/>&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand&lt;/equipment_slots&gt;<br/>&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand;right_hand;left_arm;right_arm&lt;/equipment_slots&gt;<br/><br/>and then &quot;list add&quot; or &quot;list remove&quot; too (though this is more code scripting lengthy, meh ~ more attributes vs more code length ~ you choose the trade off that's best for you).<br/><br/>and for object types, instead of:<br/><br/>&lt;type name=&quot;sword_type&quot;&gt;<br/>&lt;/type&gt;<br/><br/>&lt;type name=&quot;axe_type&quot;&gt;<br/>&lt;/type&gt;<br/><br/>&lt;type name=&quot;throwing_type&quot;&gt;<br/>&lt;/type&gt;<br/><br/>I can do:<br/><br/>&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type&lt;/weapon_type&gt;<br/>&lt;weapon_type type=&quot;simplestringlist&quot;&gt;axe_type&lt;/weapon_type&gt;<br/>&lt;weapon_type type=&quot;simplestringlist&quot;&gt;axe_type;throwing_type&lt;/weapon_type&gt;<br/>&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type;throwing_type&lt;/weapon_type&gt;<br/>&lt;weapon_type type=&quot;simplestringlist&quot;&gt;sword_type;axe_type;throwing_type&lt;/weapon_type&gt;<br/><br/>though I'd still have to deal with the main purpose of Object Types (providing a grouping of attributes or ie providing multiple attributes).<br/><br/>---------------<br/><br/>an extremely useful use (sorry! lol) for string dictionaries is &quot;conversion ~ converting&quot;, it took me awhile to comprehend this use through studying Pixie's Spell Library ~ it's not easy to comprehend at first, at least it wasn't for me.<br/><br/>stringdictionary:<br/><br/>string_1=string_2<br/><br/>which works great for elementals with magic (or any other &quot;opposites&quot; usage):<br/><br/>fire=water, water=fire<br/><br/>think of the &quot;converting&quot; as &quot;returning&quot; a value:<br/><br/>(conceptually)<br/>if (&quot;fire&quot;), then return &quot;water&quot;<br/>if (&quot;water&quot;), then return &quot;fire&quot;<br/><br/>which is exactly how Pixie uses it.<br/><br/>(conceptually)<br/>Fire Dragon monster example<br/>if (monster.elemental=&quot;fire&quot;), then return: return_value=&quot;water&quot;<br/>if (player_casted_spell.elemental = return_value), do x2 damage<br/>if (player_casted_spell.elemental = monster.elemental), do x0.5 damage<br/>else, do x1 damage",
      "PostDate": "2013-10-22T00:30:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26648",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "While an interesting subject, HK, I'm wondering: does that have anything to do with this question? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "While an interesting subject, HK, I'm wondering: does that have anything to do with this question? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-10-22T00:48:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26649",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "nope, but it is related to &quot;equipment&quot; coding, which is indirectly part of his questioning, so this stuff may be of interest~use to~for him~her, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\njust a few &quot;tricks~techniques&quot; with coding that I've been slowly comprehending myself, that I'm sharing in case it'll be useful for him~her, lol.\n\n-----------\n\nerr, actually the &quot;equipment_slots&quot; concept~model is related to the question, as it's how Chase checks for equipped weapon in his~her code structure for equipment scripting.",
      "EditableFormat": "bbcode",
      "HTML": "nope, but it is related to &quot;equipment&quot; coding, which is indirectly part of his questioning, so this stuff may be of interest~use to~for him~her, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>just a few &quot;tricks~techniques&quot; with coding that I've been slowly comprehending myself, that I'm sharing in case it'll be useful for him~her, lol.<br/><br/>-----------<br/><br/>err, actually the &quot;equipment_slots&quot; concept~model is related to the question, as it's how Chase checks for equipped weapon in his~her code structure for equipment scripting.",
      "PostDate": "2013-10-22T00:58:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26651",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Wow..thanks for all the replies. \nIt does seem that learning dictionaries and lists might be the way to go; since I am already know there will have to be an armor type, magic type and wondering if a shield should be weapon type or armor type. (I know logically it should be armor type)\nAnyway, back to the subject:\nFor my first game I really want to keep it simple and one example I can follow is &quot;EDITED v5.4 Pertex testing combat cleanup&quot;\nThat does not include equiping weapons and I am only going to have Combat Skill and Hitpoints for my character. What I will firstly try is what Jaynabonne suggested:\n[quote:37xbofjv]What you want is two &quot;equipped&quot; attributes, one for the left hand and one for the right hand (e.g. equippedl and equippedr, following the pattern you've set up). Then to see if an item is equipped in the left hand, check if &quot;this = game.pov.equippedl&quot; and similarly for the right (equippedr).[/quote:37xbofjv] \n\nI did try with game.pov.equippedl and r respectively as well - must have messed up somewhere else as well.\nIf this &quot;simple method&quot; of doing things does not pan out for me - I will do my best learning about those lists and libraries, HK!\n\nThank you guys...will let you know how it goes.",
      "EditableFormat": "bbcode",
      "HTML": "Wow..thanks for all the replies. <br/>It does seem that learning dictionaries and lists might be the way to go; since I am already know there will have to be an armor type, magic type and wondering if a shield should be weapon type or armor type. (I know logically it should be armor type)<br/>Anyway, back to the subject:<br/>For my first game I really want to keep it simple and one example I can follow is &quot;EDITED v5.4 Pertex testing combat cleanup&quot;<br/>That does not include equiping weapons and I am only going to have Combat Skill and Hitpoints for my character. What I will firstly try is what Jaynabonne suggested:<br/><blockquote><p>What you want is two &quot;equipped&quot; attributes, one for the left hand and one for the right hand (e.g. equippedl and equippedr, following the pattern you've set up). Then to see if an item is equipped in the left hand, check if &quot;this = game.pov.equippedl&quot; and similarly for the right (equippedr).</p></blockquote> <br/><br/>I did try with game.pov.equippedl and r respectively as well - must have messed up somewhere else as well.<br/>If this &quot;simple method&quot; of doing things does not pan out for me - I will do my best learning about those lists and libraries, HK!<br/><br/>Thank you guys...will let you know how it goes.",
      "PostDate": "2013-10-22T05:31:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26655",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here's an easier to follow~read coding (it might have some errors ~ I haven't tested it out), it is done as a Library File, but you can copy and paste code into your own game file from this Library File of mine. The main thing is that I hopefully cleaned up the code to be easier to understand and especially no more of my short-hand abbreviations of the stat attributes and etc.\n\n[code:9ssk8ou6]&lt;library&gt;\n\n&lt;!-- New Game Code --&gt;\n\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n\n&lt;!-- Game Code --&gt;\n\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n\t  &lt;inherit name=&quot;character_object_type&quot; /&gt;\n\t  &lt;strength type=&quot;int&quot;&gt;100&lt;/strength&gt;\n      &lt;endurance type=&quot;int&quot;&gt;100&lt;/endurance&gt;\n      &lt;dexterity type=&quot;int&quot;&gt;100&lt;/dexterity&gt;\n      &lt;agility type=&quot;int&quot;&gt;100&lt;/agility&gt;\n      &lt;speed type=&quot;int&quot;&gt;100&lt;/speed&gt;\n      &lt;intelligence type=&quot;int&quot;&gt;100&lt;/intelligence&gt;\n      &lt;spirituality type=&quot;int&quot;&gt;100&lt;/spirituality&gt;\n      &lt;mentality type=&quot;int&quot;&gt;100&lt;/mentality&gt;\n      &lt;piety type=&quot;int&quot;&gt;100&lt;/piety&gt;\n      &lt;luck type=&quot;int&quot;&gt;100&lt;/luck&gt;\n\t  &lt;current_hit_points type=&quot;int&quot;&gt;999&lt;/current_hit_points&gt;\n      &lt;maximum_hit_points type=&quot;int&quot;&gt;999&lt;/maximum_hit_points&gt;\n      &lt;current_mana_points type=&quot;int&quot;&gt;99&lt;/current_mana_points&gt;\n      &lt;maximum_mana_points type=&quot;int&quot;&gt;99&lt;/maximum_mana_points&gt;\n    &lt;/object&gt;\n\t&lt;object name=&quot;orc_1&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t  &lt;inherit name=&quot;character_object_type&quot; /&gt;\n\t  &lt;alias&gt;orc&lt;/alias&gt;\n\t  &lt;strength type=&quot;int&quot;&gt;25&lt;/strength&gt;\n      &lt;endurance type=&quot;int&quot;&gt;25&lt;/endurance&gt;\n      &lt;dexterity type=&quot;int&quot;&gt;25&lt;/dexterity&gt;\n      &lt;agility type=&quot;int&quot;&gt;25&lt;/agility&gt;\n      &lt;speed type=&quot;int&quot;&gt;25&lt;/speed&gt;\n      &lt;intelligence type=&quot;int&quot;&gt;25&lt;/intelligence&gt;\n      &lt;spirituality type=&quot;int&quot;&gt;25&lt;/spirituality&gt;\n      &lt;mentality type=&quot;int&quot;&gt;25&lt;/mentality&gt;\n      &lt;piety type=&quot;int&quot;&gt;25&lt;/piety&gt;\n      &lt;luck type=&quot;int&quot;&gt;25&lt;/luck&gt;\n\t  &lt;current_hit_points type=&quot;int&quot;&gt;500&lt;/current_hit_points&gt;\n      &lt;maximum_hit_points type=&quot;int&quot;&gt;500&lt;/maximum_hit_points&gt;\n      &lt;current_mana_points type=&quot;int&quot;&gt;50&lt;/current_mana_points&gt;\n      &lt;maximum_mana_points type=&quot;int&quot;&gt;50&lt;/maximum_mana_points&gt;\n\t  &lt;experience_points type=&quot;int&quot;&gt;100&lt;/experience_points&gt;\n      &lt;cash type=&quot;int&quot;&gt;100&lt;/cash&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n\n&lt;!-- Object Types --&gt;\n\n&lt;type name=&quot;character_object_type&quot;&gt;\n\n  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n  &lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n  &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n  &lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n  &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n  &lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n  &lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n  &lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n  &lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n  \n  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n  \n  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n  \n  &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n  &lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n  \n  &lt;experience_points type=&quot;int&quot;&gt;0&lt;/experience_points&gt;\n  &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n  &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n  \n  &lt;hit_points type=&quot;string&quot;&gt;0/0&lt;/hit_points&gt;\n  &lt;mana_points type=&quot;string&quot;&gt;0/0&lt;/mana_points&gt;\n  \n  &lt;current_hit_points type=&quot;int&quot;&gt;0&lt;/current_hit_points&gt;\n  &lt;maximum_hit_points type=&quot;int&quot;&gt;0&lt;/maximum_hit_points&gt;\n  \n  &lt;current_mana_points type=&quot;int&quot;&gt;0&lt;/current_mana_points&gt;\n  &lt;maximum_mana_points type=&quot;int&quot;&gt;0&lt;/maximum_mana_points&gt;\n  \n&lt;/type&gt;\n\n&lt;!-- Turnscripts --&gt;\n\n&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;\n  status_attributes_function\n  leveling_function\n  game&#46;turns = game&#46;turns + 1\n&lt;/turnscript&gt;\n\n&lt;!-- Commands --&gt;\n\n&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;!-- Functions --&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;\n  enemy=GetObject(text)\n  if (enemy=null) {\n    foreach (object_x,AllObjects()) {\n\t  if (object_x&#46;alias=text) {\n\t    enemy=object_x\n\t  }\n\t}\n  }\n  on ready {\n    if (enemy=null) {\n      msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)\n    } else if (not check_reachable_function (enemy) = true) {\n      msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)\n    } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {\n      msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)\n    } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n      msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)\n    } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n      msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n    } else {\n      battle_sequence_function (self,enemy)\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;battle_sequence_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (enemy&#46;dead=false or self&#46;escaped=false) {\n    you_go_first=false\n    if (GetInt (self,&quot;speed&quot;) &gt; GetInt (enemy,&quot;speed&quot;) {\n\t  you_go_first=true\n\t} else if (GetInt (self,&quot;speed&quot;) = GetInt (enemy,&quot;speed&quot;) and RandomChance (50)=true) {\n\t  you_go_first=true\n\t}\n    if (you_go_first=true) {\n\t  msg (&quot;You get to go first for this round&quot;)\n\t  self_battle_turn_function (self,enemy)\n\t  on ready {\n\t    if (not enemy&#46;dead=true or not self&#46;escaped=true){\n\t      enemy_battle_turn_function (self,enemy)\n\t\t}\n\t  }\n\t} else {\n\t  msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)\n\t  enemy_battle_turn_function (self,enemy)\n      on ready {\n        if (not enemy&#46;dead=true or not self&#46;escaped=true){\t  \n\t      msg (&quot;It is now your turn&#46;&quot;)\n\t      self_battle_turn_function (self,enemy)\n\t\t}\n\t  }\n\t}\n\ton ready {\n\t  msg (&quot;The round has ended&#46;&quot;) \n\t  battle_sequence_function (self,enemy)\n\t}\n  } else { \n    msg (&quot;The battle is over&#46;&quot;)\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;self_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n  wait {\n    show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {\n      switch (result) {\n        case (&quot;Attack&quot;) {\n          self_attack_failed = false\n          if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;speed&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;evaded your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;agility&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;parried your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;dexterity&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;blocked your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;speed&quot;)) = false) {\n            msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;armor_class&quot;) - GetInt (self,&quot;attack_rating&quot;)) = true) {\n            msg (&quot;Your attack failed to penetrate &quot; + enemy&#46;alias +&quot;!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          }\n\t\t  on ready {\n\t\t    if (self_attack_failed = false) {\n              if (self&#46;defending = true and enemy&#46;defending = true) {\n                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n                self&#46;defending = false\n              } else if (self&#46;defending = true and enemy&#46;defending = false) {\n                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n                self&#46;defending = false\n              } else if (self&#46;defending = false and enemy&#46;defending = true) {\n                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n              } else if (self&#46;defending = false and enemy&#46;defending = false) {\n                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n\t\t\t  }\n            }\n          }\n        }\n        case (&quot;Defend&quot;) {\n\t\t  if (self&#46;defending = true) {\n\t\t    msg (&quot;You continue to defend yourself against &quot; + enemy&#46;alias)\n\t\t  } else if (self&#46;defending = false) {\n\t\t    msg (&quot;You defend yourself against &quot; + enemy&#46;alias)\n            self&#46;defending = true\n\t\t  }\n        }\n        case (&quot;Cast&quot;) {\n          self&#46;defending = false\n        }\n        case (&quot;Item&quot;) {\n          self&#46;defending = false\n        }\n        case (&quot;Run&quot;) {\n          self&#46;defending = false\n\t\t  self&#46;escaping = true\n        }\n      }\n\t  on ready {\n        if (GetInt (enemy,&quot;current_hit_points&quot;) &gt; 0) {\n\t      if (RandomChance (GetInt (self,&quot;speed&quot;) - GetInt (enemy,&quot;speed&quot;))= true) {\n            msg (&quot;You get an extra battle turn!&quot;)\n            self_battle_turn (self,enemy)\n          } else {\n            msg (&quot;Your battle turn is over&#46;&quot;)\n          }\n        } else if (GetInt (enemy,&quot;current_hit_points&quot;) &lt;= 0) {\n          msg (enemy&#46;alias + &quot; is dead&#46;&quot;)\n          msg (&quot;You have won the battle!&quot;)\n\t\t  self&#46;defending = false\n\t\t  self&#46;escaping = false\n          enemy&#46;defending = false\n          enemy&#46;dead = true\n\t\t}\n      }\n    }\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;enemy_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)\n  result = GetRandomInt (1,3)\n  switch (result) {\n    case (1) {\n      enemy_attack_failed = false\n      if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;speed&quot;)) = true) {\n        msg (&quot;You have evaded the attack!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;agility&quot;)) = true) {\n        msg (&quot;You have parried the attack!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;dexterity&quot;)) = true) {\n        msg (&quot;You have blocked the attack!&quot;)\n        enemy_attack_failed = true\n\t    enemy&#46;defending = false\n      } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;speed&quot;)) = false) {\n        msg (enemy&#46;alias +&quot;'s attack missed!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;armor_class&quot;) - GetInt (enemy,&quot;attack_rating&quot;)) = true) {\n        msg (&quot;You weren't penetrated by the attack!&quot;)\n        enemy_attack_failed = true\n\t    enemy&#46;defending = false\n      }\n\t  on ready {\n\t    if (enemy_attack_failed = false) {\n          if (enemy&#46;defending = true and self&#46;defending = true) {\n            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n            enemy&#46;defending = false\n          } else if (enemy&#46;defending = true and self&#46;defending = false) {\n            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n            enemy&#46;defending = false\n          } else if (enemy&#46;defending = false and self&#46;defending = true) {\n            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n          } else if (enemy&#46;defending = false and self&#46;defending = false) {\n            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)\n\t\t  }\n        }\n      }\n    }\n    case (2) {\n\t  if (enemy&#46;defending = true) {\n\t    msg (enemy&#46;alias + &quot; is still defending itself&#46;&quot;)\n\t  } else if (enemy&#46;defending = false) {\n        msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)\n        enemy&#46;defending = true\n\t  }\n    }\n    case (3) {\n      enemy&#46;defending = false\n      msg (&quot;Cast&quot;)\n    }\n  }\n  on ready {\n    if (GetInt (self,&quot;current_hit_points&quot;) &gt; 0) {\n      if (RandomChance (GetInt (enemy,&quot;speed&quot;) - GetInt (self,&quot;speed&quot;)) = true) {\n        msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)\n        on ready {\n\t\t  wait {\n            enemy_battle_turn (self,enemy)\n\t\t  }\n        }\n      } else {\n        msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)\n      }\n    } else if (GetInt (self,&quot;current_hit_points&quot;) &lt;= 0) {\n      msg (self&#46;alias + &quot; has died&#46;&quot;)\n      msg (&quot;GAME OVER&quot;)\n      finish\n\t}\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;\n  foreach (object_x,ScopeReachableNotHeld ()) {\n    if (object_x=enemy) {\n      value = true\n\t} else {\n\t  value = false\n\t}\n  }\n  return (value)\n&lt;/function&gt;\n\n&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;\n  if (RandomChance (GetInt (object_x,&quot;luck&quot;)) = true) {\n    value = 2\n  } else {\n    value = 1\n  }\n  return (value)\n&lt;/function&gt;\n\n&lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {\n    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)\n\tgame&#46;pov&#46;level = game&#46;pov&#46;level + 1\n\tleveling_function\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;status_attributes_function&quot;&gt;\n  game&#46;pov&#46;hit_points = game&#46;pov&#46;current_hit_points + &quot;/&quot; + game&#46;pov&#46;maximum_hit_points\n  game&#46;pov&#46;mana_points = game&#46;pov&#46;current_mana_points + &quot;/&quot; + game&#46;pov&#46;maximum_mana_points\n&lt;/function&gt;\n\n&lt;/library&gt;[/code:9ssk8ou6]",
      "EditableFormat": "bbcode",
      "HTML": "here's an easier to follow~read coding (it might have some errors ~ I haven't tested it out), it is done as a Library File, but you can copy and paste code into your own game file from this Library File of mine. The main thing is that I hopefully cleaned up the code to be easier to understand and especially no more of my short-hand abbreviations of the stat attributes and etc.<br/><br/><pre><code>&lt;library&gt;<br/><br/>&lt;!-- New Game Code --&gt;<br/><br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;<br/><br/>&lt;!-- Game Code --&gt;<br/><br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>\t  &lt;inherit name=&quot;character_object_type&quot; /&gt;<br/>\t  &lt;strength type=&quot;int&quot;&gt;100&lt;/strength&gt;<br/>      &lt;endurance type=&quot;int&quot;&gt;100&lt;/endurance&gt;<br/>      &lt;dexterity type=&quot;int&quot;&gt;100&lt;/dexterity&gt;<br/>      &lt;agility type=&quot;int&quot;&gt;100&lt;/agility&gt;<br/>      &lt;speed type=&quot;int&quot;&gt;100&lt;/speed&gt;<br/>      &lt;intelligence type=&quot;int&quot;&gt;100&lt;/intelligence&gt;<br/>      &lt;spirituality type=&quot;int&quot;&gt;100&lt;/spirituality&gt;<br/>      &lt;mentality type=&quot;int&quot;&gt;100&lt;/mentality&gt;<br/>      &lt;piety type=&quot;int&quot;&gt;100&lt;/piety&gt;<br/>      &lt;luck type=&quot;int&quot;&gt;100&lt;/luck&gt;<br/>\t  &lt;current_hit_points type=&quot;int&quot;&gt;999&lt;/current_hit_points&gt;<br/>      &lt;maximum_hit_points type=&quot;int&quot;&gt;999&lt;/maximum_hit_points&gt;<br/>      &lt;current_mana_points type=&quot;int&quot;&gt;99&lt;/current_mana_points&gt;<br/>      &lt;maximum_mana_points type=&quot;int&quot;&gt;99&lt;/maximum_mana_points&gt;<br/>    &lt;/object&gt;<br/>\t&lt;object name=&quot;orc_1&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t  &lt;inherit name=&quot;character_object_type&quot; /&gt;<br/>\t  &lt;alias&gt;orc&lt;/alias&gt;<br/>\t  &lt;strength type=&quot;int&quot;&gt;25&lt;/strength&gt;<br/>      &lt;endurance type=&quot;int&quot;&gt;25&lt;/endurance&gt;<br/>      &lt;dexterity type=&quot;int&quot;&gt;25&lt;/dexterity&gt;<br/>      &lt;agility type=&quot;int&quot;&gt;25&lt;/agility&gt;<br/>      &lt;speed type=&quot;int&quot;&gt;25&lt;/speed&gt;<br/>      &lt;intelligence type=&quot;int&quot;&gt;25&lt;/intelligence&gt;<br/>      &lt;spirituality type=&quot;int&quot;&gt;25&lt;/spirituality&gt;<br/>      &lt;mentality type=&quot;int&quot;&gt;25&lt;/mentality&gt;<br/>      &lt;piety type=&quot;int&quot;&gt;25&lt;/piety&gt;<br/>      &lt;luck type=&quot;int&quot;&gt;25&lt;/luck&gt;<br/>\t  &lt;current_hit_points type=&quot;int&quot;&gt;500&lt;/current_hit_points&gt;<br/>      &lt;maximum_hit_points type=&quot;int&quot;&gt;500&lt;/maximum_hit_points&gt;<br/>      &lt;current_mana_points type=&quot;int&quot;&gt;50&lt;/current_mana_points&gt;<br/>      &lt;maximum_mana_points type=&quot;int&quot;&gt;50&lt;/maximum_mana_points&gt;<br/>\t  &lt;experience_points type=&quot;int&quot;&gt;100&lt;/experience_points&gt;<br/>      &lt;cash type=&quot;int&quot;&gt;100&lt;/cash&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;<br/><br/>&lt;!-- Object Types --&gt;<br/><br/>&lt;type name=&quot;character_object_type&quot;&gt;<br/><br/>  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>  &lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>  &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>  &lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>  &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>  &lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>  &lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>  &lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>  &lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>  <br/>  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>  <br/>  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>  <br/>  &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>  &lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>  <br/>  &lt;experience_points type=&quot;int&quot;&gt;0&lt;/experience_points&gt;<br/>  &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>  &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>  <br/>  &lt;hit_points type=&quot;string&quot;&gt;0/0&lt;/hit_points&gt;<br/>  &lt;mana_points type=&quot;string&quot;&gt;0/0&lt;/mana_points&gt;<br/>  <br/>  &lt;current_hit_points type=&quot;int&quot;&gt;0&lt;/current_hit_points&gt;<br/>  &lt;maximum_hit_points type=&quot;int&quot;&gt;0&lt;/maximum_hit_points&gt;<br/>  <br/>  &lt;current_mana_points type=&quot;int&quot;&gt;0&lt;/current_mana_points&gt;<br/>  &lt;maximum_mana_points type=&quot;int&quot;&gt;0&lt;/maximum_mana_points&gt;<br/>  <br/>&lt;/type&gt;<br/><br/>&lt;!-- Turnscripts --&gt;<br/><br/>&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;<br/>  status_attributes_function<br/>  leveling_function<br/>  game&#46;turns = game&#46;turns + 1<br/>&lt;/turnscript&gt;<br/><br/>&lt;!-- Commands --&gt;<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;!-- Functions --&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>  if (enemy=null) {<br/>    foreach (object_x,AllObjects()) {<br/>\t  if (object_x&#46;alias=text) {<br/>\t    enemy=object_x<br/>\t  }<br/>\t}<br/>  }<br/>  on ready {<br/>    if (enemy=null) {<br/>      msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)<br/>    } else if (not check_reachable_function (enemy) = true) {<br/>      msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)<br/>    } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {<br/>      msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)<br/>    } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>      msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)<br/>    } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>      msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>    } else {<br/>      battle_sequence_function (self,enemy)<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;battle_sequence_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (enemy&#46;dead=false or self&#46;escaped=false) {<br/>    you_go_first=false<br/>    if (GetInt (self,&quot;speed&quot;) &gt; GetInt (enemy,&quot;speed&quot;) {<br/>\t  you_go_first=true<br/>\t} else if (GetInt (self,&quot;speed&quot;) = GetInt (enemy,&quot;speed&quot;) and RandomChance (50)=true) {<br/>\t  you_go_first=true<br/>\t}<br/>    if (you_go_first=true) {<br/>\t  msg (&quot;You get to go first for this round&quot;)<br/>\t  self_battle_turn_function (self,enemy)<br/>\t  on ready {<br/>\t    if (not enemy&#46;dead=true or not self&#46;escaped=true){<br/>\t      enemy_battle_turn_function (self,enemy)<br/>\t\t}<br/>\t  }<br/>\t} else {<br/>\t  msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)<br/>\t  enemy_battle_turn_function (self,enemy)<br/>      on ready {<br/>        if (not enemy&#46;dead=true or not self&#46;escaped=true){\t  <br/>\t      msg (&quot;It is now your turn&#46;&quot;)<br/>\t      self_battle_turn_function (self,enemy)<br/>\t\t}<br/>\t  }<br/>\t}<br/>\ton ready {<br/>\t  msg (&quot;The round has ended&#46;&quot;) <br/>\t  battle_sequence_function (self,enemy)<br/>\t}<br/>  } else { <br/>    msg (&quot;The battle is over&#46;&quot;)<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;self_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>  wait {<br/>    show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {<br/>      switch (result) {<br/>        case (&quot;Attack&quot;) {<br/>          self_attack_failed = false<br/>          if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;speed&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;evaded your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;agility&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;parried your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;dexterity&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;blocked your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;speed&quot;)) = false) {<br/>            msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;armor_class&quot;) - GetInt (self,&quot;attack_rating&quot;)) = true) {<br/>            msg (&quot;Your attack failed to penetrate &quot; + enemy&#46;alias +&quot;!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          }<br/>\t\t  on ready {<br/>\t\t    if (self_attack_failed = false) {<br/>              if (self&#46;defending = true and enemy&#46;defending = true) {<br/>                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>                self&#46;defending = false<br/>              } else if (self&#46;defending = true and enemy&#46;defending = false) {<br/>                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>                self&#46;defending = false<br/>              } else if (self&#46;defending = false and enemy&#46;defending = true) {<br/>                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>              } else if (self&#46;defending = false and enemy&#46;defending = false) {<br/>                enemy&#46;current_hit_points = enemy&#46;current_hit_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>                msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>\t\t\t  }<br/>            }<br/>          }<br/>        }<br/>        case (&quot;Defend&quot;) {<br/>\t\t  if (self&#46;defending = true) {<br/>\t\t    msg (&quot;You continue to defend yourself against &quot; + enemy&#46;alias)<br/>\t\t  } else if (self&#46;defending = false) {<br/>\t\t    msg (&quot;You defend yourself against &quot; + enemy&#46;alias)<br/>            self&#46;defending = true<br/>\t\t  }<br/>        }<br/>        case (&quot;Cast&quot;) {<br/>          self&#46;defending = false<br/>        }<br/>        case (&quot;Item&quot;) {<br/>          self&#46;defending = false<br/>        }<br/>        case (&quot;Run&quot;) {<br/>          self&#46;defending = false<br/>\t\t  self&#46;escaping = true<br/>        }<br/>      }<br/>\t  on ready {<br/>        if (GetInt (enemy,&quot;current_hit_points&quot;) &gt; 0) {<br/>\t      if (RandomChance (GetInt (self,&quot;speed&quot;) - GetInt (enemy,&quot;speed&quot;))= true) {<br/>            msg (&quot;You get an extra battle turn!&quot;)<br/>            self_battle_turn (self,enemy)<br/>          } else {<br/>            msg (&quot;Your battle turn is over&#46;&quot;)<br/>          }<br/>        } else if (GetInt (enemy,&quot;current_hit_points&quot;) &lt;= 0) {<br/>          msg (enemy&#46;alias + &quot; is dead&#46;&quot;)<br/>          msg (&quot;You have won the battle!&quot;)<br/>\t\t  self&#46;defending = false<br/>\t\t  self&#46;escaping = false<br/>          enemy&#46;defending = false<br/>          enemy&#46;dead = true<br/>\t\t}<br/>      }<br/>    }<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;enemy_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>  result = GetRandomInt (1,3)<br/>  switch (result) {<br/>    case (1) {<br/>      enemy_attack_failed = false<br/>      if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;speed&quot;)) = true) {<br/>        msg (&quot;You have evaded the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;agility&quot;)) = true) {<br/>        msg (&quot;You have parried the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;dexterity&quot;)) = true) {<br/>        msg (&quot;You have blocked the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t    enemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;speed&quot;)) = false) {<br/>        msg (enemy&#46;alias +&quot;'s attack missed!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;armor_class&quot;) - GetInt (enemy,&quot;attack_rating&quot;)) = true) {<br/>        msg (&quot;You weren't penetrated by the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t    enemy&#46;defending = false<br/>      }<br/>\t  on ready {<br/>\t    if (enemy_attack_failed = false) {<br/>          if (enemy&#46;defending = true and self&#46;defending = true) {<br/>            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>            enemy&#46;defending = false<br/>          } else if (enemy&#46;defending = true and self&#46;defending = false) {<br/>            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>            enemy&#46;defending = false<br/>          } else if (enemy&#46;defending = false and self&#46;defending = true) {<br/>            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>          } else if (enemy&#46;defending = false and self&#46;defending = false) {<br/>            self&#46;current_hit_points = self&#46;current_hit_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>            msg (self&#46;alias + &quot; has &quot; + self&#46;current_hit_points + &quot; HP left&#46;&quot;)<br/>\t\t  }<br/>        }<br/>      }<br/>    }<br/>    case (2) {<br/>\t  if (enemy&#46;defending = true) {<br/>\t    msg (enemy&#46;alias + &quot; is still defending itself&#46;&quot;)<br/>\t  } else if (enemy&#46;defending = false) {<br/>        msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)<br/>        enemy&#46;defending = true<br/>\t  }<br/>    }<br/>    case (3) {<br/>      enemy&#46;defending = false<br/>      msg (&quot;Cast&quot;)<br/>    }<br/>  }<br/>  on ready {<br/>    if (GetInt (self,&quot;current_hit_points&quot;) &gt; 0) {<br/>      if (RandomChance (GetInt (enemy,&quot;speed&quot;) - GetInt (self,&quot;speed&quot;)) = true) {<br/>        msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)<br/>        on ready {<br/>\t\t  wait {<br/>            enemy_battle_turn (self,enemy)<br/>\t\t  }<br/>        }<br/>      } else {<br/>        msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)<br/>      }<br/>    } else if (GetInt (self,&quot;current_hit_points&quot;) &lt;= 0) {<br/>      msg (self&#46;alias + &quot; has died&#46;&quot;)<br/>      msg (&quot;GAME OVER&quot;)<br/>      finish<br/>\t}<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;<br/>  foreach (object_x,ScopeReachableNotHeld ()) {<br/>    if (object_x=enemy) {<br/>      value = true<br/>\t} else {<br/>\t  value = false<br/>\t}<br/>  }<br/>  return (value)<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;<br/>  if (RandomChance (GetInt (object_x,&quot;luck&quot;)) = true) {<br/>    value = 2<br/>  } else {<br/>    value = 1<br/>  }<br/>  return (value)<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {<br/>    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)<br/>\tgame&#46;pov&#46;level = game&#46;pov&#46;level + 1<br/>\tleveling_function<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;status_attributes_function&quot;&gt;<br/>  game&#46;pov&#46;hit_points = game&#46;pov&#46;current_hit_points + &quot;/&quot; + game&#46;pov&#46;maximum_hit_points<br/>  game&#46;pov&#46;mana_points = game&#46;pov&#46;current_mana_points + &quot;/&quot; + game&#46;pov&#46;maximum_mana_points<br/>&lt;/function&gt;<br/><br/>&lt;/library&gt;</code></pre><div><a href=\"/attachment/754\">Testing Combat Stuff Library File.aslx</a></div>",
      "PostDate": "2013-10-22T09:08:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26656",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Avantar, if you choose to expand and generalize your equip code (beyond using an off-the-shelf lib as HK proposed), then you'll probably want to focus on the object variants of lists and dictionaries, as you'll be dealing with objects exclusively in your equipping fun. It's more more tricky to try to use the string ones in such a case (but not impossible, since objects have names - but let's keep it simple).",
      "EditableFormat": "bbcode",
      "HTML": "Avantar, if you choose to expand and generalize your equip code (beyond using an off-the-shelf lib as HK proposed), then you'll probably want to focus on the object variants of lists and dictionaries, as you'll be dealing with objects exclusively in your equipping fun. It's more more tricky to try to use the string ones in such a case (but not impossible, since objects have names - but let's keep it simple).",
      "PostDate": "2013-10-22T09:24:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26658",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "for the attribute method Jayna provided, you'd do something like this:\n\nequipped attributes:\n\nequipped_left_hand_boolean=false\nequipped_left_hand_boolean=true\n\nequipped_right_hand_boolean=false\nequipped_right_hand_boolean=true\n\nto check if equipped:\n\nif (equipped_left_hand_boolean=true) {\n}\n\nif (equipped_right_hand_boolean=true) {\n}\n\nif (equipped_left_hand_boolean=true and equipped_right_hand_boolean=true) {\n}\n\nif (equipped_left_hand_boolean=true or equipped_right_hand_boolean=true) {\n}\n\nthen to compare the two of them, to see if you can equip or not:\n\nequipped_right_hand_string=&quot;wooden_sword&quot;\n\n&quot;equip&quot; Verb for another &quot;wooden_sword&quot; in your inventory:\n\nif (equipped_right_hand_string=&quot;wooden_sword&quot;) {\n-&gt; msg (&quot;You're already equipped with a wooden sword, silly!&quot;)\n} else {\n-&gt; msg (&quot;You equip the wooden sword&quot;)\n-&gt; equipped_right_hand_string=&quot;wooden_sword&quot;\n}\n\nthough this gets a bit more messy or complicated if you want to do more stuff this way ~ I'd have to think hard to figure it out.",
      "EditableFormat": "bbcode",
      "HTML": "for the attribute method Jayna provided, you'd do something like this:<br/><br/>equipped attributes:<br/><br/>equipped_left_hand_boolean=false<br/>equipped_left_hand_boolean=true<br/><br/>equipped_right_hand_boolean=false<br/>equipped_right_hand_boolean=true<br/><br/>to check if equipped:<br/><br/>if (equipped_left_hand_boolean=true) {<br/>}<br/><br/>if (equipped_right_hand_boolean=true) {<br/>}<br/><br/>if (equipped_left_hand_boolean=true and equipped_right_hand_boolean=true) {<br/>}<br/><br/>if (equipped_left_hand_boolean=true or equipped_right_hand_boolean=true) {<br/>}<br/><br/>then to compare the two of them, to see if you can equip or not:<br/><br/>equipped_right_hand_string=&quot;wooden_sword&quot;<br/><br/>&quot;equip&quot; Verb for another &quot;wooden_sword&quot; in your inventory:<br/><br/>if (equipped_right_hand_string=&quot;wooden_sword&quot;) {<br/>-&gt; msg (&quot;You're already equipped with a wooden sword, silly!&quot;)<br/>} else {<br/>-&gt; msg (&quot;You equip the wooden sword&quot;)<br/>-&gt; equipped_right_hand_string=&quot;wooden_sword&quot;<br/>}<br/><br/>though this gets a bit more messy or complicated if you want to do more stuff this way ~ I'd have to think hard to figure it out.",
      "PostDate": "2013-10-22T09:32:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26659",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "err, ya as Jayna said, switch out the &quot;string&quot; types with &quot;object&quot; types, as it's easier, use objectlists (you probably won't need to use dictionaries ~ they're for more advance~complex stuff) and~or actual objects and not string attributes.\n\nSometimes though, you have to use both string attributes and actual objects, and~or use both lists (string and~or object) and dictionaries (string and~or object and~or script). But, don't worry about this, as it's for a bit more advanced coding techniques.\n\n-----------\n\nif you want to do a more simple combat coding, than use Pixie's Combat Library (linked in one of my previous posts) coding, as my combat coding is based on Pertex' and~or using Pertex' own Combat Library, both of which are quite advanced and complex combat codings, lol.\n\nPertex' Combat Coding (and thus mine too) is a &quot;turn-based&quot; combat coding (which is complex code wise), whereas Pixie's is not &quot;turn-based&quot; and thus easier to create and understand, as it doesn't involve complex and big, and multiple and connected, script blocks of coding.",
      "EditableFormat": "bbcode",
      "HTML": "err, ya as Jayna said, switch out the &quot;string&quot; types with &quot;object&quot; types, as it's easier, use objectlists (you probably won't need to use dictionaries ~ they're for more advance~complex stuff) and~or actual objects and not string attributes.<br/><br/>Sometimes though, you have to use both string attributes and actual objects, and~or use both lists (string and~or object) and dictionaries (string and~or object and~or script). But, don't worry about this, as it's for a bit more advanced coding techniques.<br/><br/>-----------<br/><br/>if you want to do a more simple combat coding, than use Pixie's Combat Library (linked in one of my previous posts) coding, as my combat coding is based on Pertex' and~or using Pertex' own Combat Library, both of which are quite advanced and complex combat codings, lol.<br/><br/>Pertex' Combat Coding (and thus mine too) is a &quot;turn-based&quot; combat coding (which is complex code wise), whereas Pixie's is not &quot;turn-based&quot; and thus easier to create and understand, as it doesn't involve complex and big, and multiple and connected, script blocks of coding.",
      "PostDate": "2013-10-22T09:37:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26660",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "There's no need for the Booleans. That's overkill. You just have slots (attributes) that you assign objects to. And you don't need to use strings either. Basically, to left equip an object (e.g. object called &quot;sword&quot;):\n\n[code:3aexentl]game&#46;pov&#46;equippedl = sword[/code:3aexentl]\nTo unequip the left hand:\n\n[code:3aexentl]game&#46;pov&#46;equippedl = null[/code:3aexentl]\nTo see if something is left equipped:\n\n[code:3aexentl]if (HasAttribute(game&#46;pov, &quot;equippedl&quot;))[/code:3aexentl]\nTo see if an object is left equipped:\n\n[code:3aexentl]if (o = GetAttribute(game&#46;pov, &quot;equippedl&quot;))[/code:3aexentl]\nBooleans are overrated (and can lead to messy code)! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nIf you wanted to use object dictionaries, then you'd have the same basic steps (objects and dictionaries are very similar in their overall semantics; it's just the syntax that differs). The drawback to dictionaries is that you have the pain of having to remove any previous entry before adding a new one. With an object, you just reassign.",
      "EditableFormat": "bbcode",
      "HTML": "There's no need for the Booleans. That's overkill. You just have slots (attributes) that you assign objects to. And you don't need to use strings either. Basically, to left equip an object (e.g. object called &quot;sword&quot;):<br/><br/><pre><code>game&#46;pov&#46;equippedl = sword</code></pre><br/>To unequip the left hand:<br/><br/><pre><code>game&#46;pov&#46;equippedl = null</code></pre><br/>To see if something is left equipped:<br/><br/><pre><code>if (HasAttribute(game&#46;pov, &quot;equippedl&quot;))</code></pre><br/>To see if an object is left equipped:<br/><br/><pre><code>if (o = GetAttribute(game&#46;pov, &quot;equippedl&quot;))</code></pre><br/>Booleans are overrated (and can lead to messy code)! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>If you wanted to use object dictionaries, then you'd have the same basic steps (objects and dictionaries are very similar in their overall semantics; it's just the syntax that differs). The drawback to dictionaries is that you have the pain of having to remove any previous entry before adding a new one. With an object, you just reassign.",
      "PostDate": "2013-10-22T10:43:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26662",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "argh, I'm overthinking the coding, laughs. And thanks for the tips, I either totally forgot and~or didn't realize that you can use an &quot;ambigious&quot; attribute as a &quot;slot holder&quot;, hehe. And also, your other coding insight in your post as well, I appreciate too.\n\nya, booleans are messy and overkill, now.. I just need to learn how to code with less of them, lol. I still got a lot to learn, sighs.",
      "EditableFormat": "bbcode",
      "HTML": "argh, I'm overthinking the coding, laughs. And thanks for the tips, I either totally forgot and~or didn't realize that you can use an &quot;ambigious&quot; attribute as a &quot;slot holder&quot;, hehe. And also, your other coding insight in your post as well, I appreciate too.<br/><br/>ya, booleans are messy and overkill, now.. I just need to learn how to code with less of them, lol. I still got a lot to learn, sighs.",
      "PostDate": "2013-10-22T12:52:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26675",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Thank you for all the replies guys!\n\nI have been a bit busy at work this week - should get a change to look at all the suggestions on Friday and report back. \nt is really appreaciated. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for all the replies guys!<br/><br/>I have been a bit busy at work this week - should get a change to look at all the suggestions on Friday and report back. <br/>t is really appreaciated. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-10-23T05:14:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26684",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Couldn't wait till Friday <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> \n\nI have used this script (not perfect yet) and it worked once  <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> \n[quote:2has907y]if (this.parent = game.pov) {\n    if (game.pov.equippedl = this) {\n        msg (&quot;You already have this weapon equipped&quot;)\n    } else if (game.pov.equippedr = this) {\n        msg (&quot;You already have this weapon equipped in your left hand&quot;)\n    } else if (game.pov.equippedl = null) {\n        msg (&quot;You draw your &quot; + this.alias + &quot;.&quot;)\n        this.inventoryverbs = Split (&quot;Look at;Drop;Unequip'(LHand)'&quot;, &quot;;&quot;)\n        game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias\n        game.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equip'(LHand)'&quot;, &quot;;&quot;)\n    } else {\n        msg (&quot;You put away your &quot; + game.pov.equippedl.alias + &quot; and draw your &quot; + this.alias + &quot;.&quot;)\n        game.pov.equippedl = this\n        this.inventoryverbs = Split (&quot;Look at;Drop;Unequip'(LHand)'&quot;, &quot;;&quot;)\n        game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias\n        game.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equip'(LHand)'&quot;, &quot;;&quot;)\n    }\n} else {\n    msg (&quot;You don't have it.&quot;)\n}[/quote:2has907y]\n\nNow I'm left with this error: Error running script&#058; Error compiling expression 'game.pov.equippedl': RootExpressionElement: Cannot convert type 'Object' to expression result of 'Element'\n\nJaynabonne: Just to check if I do understand:\nI need to create equippedl and equippedr as attributes on the player? If so...what type should it be? String does surely not work and Null does not write anything in. Weirdly, it did work beautifully somehow in one test.\n\nShould I rather use if (o = GetAttribute(game.pov, &quot;equippedl&quot;)) instead of if (game.pov.equippedl = this) ?\nin 'o=GetAttribute(game.pov, &quot;equippedl&quot;))' I assume the 'o' is for object and it can be replaced by this?\n\nWow, HK! Imagine how I will struggle with the libraries - this is only 19 lines of code...lol But I am looking at it....",
      "EditableFormat": "bbcode",
      "HTML": "Couldn't wait till Friday <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> <br/><br/>I have used this script (not perfect yet) and it worked once  <!-- s:( --><img src=\"{SMILIES_PATH}/icon_sad.gif\" alt=\":(\" title=\"Sad\" /><!-- s:( --> <br/><blockquote><p>if (this.parent = game.pov) {<br/>    if (game.pov.equippedl = this) {<br/>        msg (&quot;You already have this weapon equipped&quot;)<br/>    } else if (game.pov.equippedr = this) {<br/>        msg (&quot;You already have this weapon equipped in your left hand&quot;)<br/>    } else if (game.pov.equippedl = null) {<br/>        msg (&quot;You draw your &quot; + this.alias + &quot;.&quot;)<br/>        this.inventoryverbs = Split (&quot;Look at;Drop;Unequip'(LHand)'&quot;, &quot;;&quot;)<br/>        game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias<br/>        game.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equip'(LHand)'&quot;, &quot;;&quot;)<br/>    } else {<br/>        msg (&quot;You put away your &quot; + game.pov.equippedl.alias + &quot; and draw your &quot; + this.alias + &quot;.&quot;)<br/>        game.pov.equippedl = this<br/>        this.inventoryverbs = Split (&quot;Look at;Drop;Unequip'(LHand)'&quot;, &quot;;&quot;)<br/>        game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias<br/>        game.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equip'(LHand)'&quot;, &quot;;&quot;)<br/>    }<br/>} else {<br/>    msg (&quot;You don't have it.&quot;)<br/>}</p></blockquote><br/><br/>Now I'm left with this error: Error running script&#058; Error compiling expression 'game.pov.equippedl': RootExpressionElement: Cannot convert type 'Object' to expression result of 'Element'<br/><br/>Jaynabonne: Just to check if I do understand:<br/>I need to create equippedl and equippedr as attributes on the player? If so...what type should it be? String does surely not work and Null does not write anything in. Weirdly, it did work beautifully somehow in one test.<br/><br/>Should I rather use if (o = GetAttribute(game.pov, &quot;equippedl&quot;)) instead of if (game.pov.equippedl = this) ?<br/>in 'o=GetAttribute(game.pov, &quot;equippedl&quot;))' I assume the 'o' is for object and it can be replaced by this?<br/><br/>Wow, HK! Imagine how I will struggle with the libraries - this is only 19 lines of code...lol But I am looking at it....",
      "PostDate": "2013-10-23T20:08:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26686",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Yes. If you reference the attribute directly and it's non-existent, you'll get an error. But if you use GetAttribute, then it returns null to you if it doesn't exist. That's the safe way to do it.\n\nAnd no, don't create the attributes. You have no value to assign to them initially. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Yes. If you reference the attribute directly and it's non-existent, you'll get an error. But if you use GetAttribute, then it returns null to you if it doesn't exist. That's the safe way to do it.<br/><br/>And no, don't create the attributes. You have no value to assign to them initially. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-10-23T21:12:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26687",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Many, many thanks!!\n\nI conclude then that this is my script for the left hand (right hand will be pretty much the same) and it works perfectly - everytime <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n[quote:1kuvj18v]if (this.parent = game.pov) {\n    if (this = GetAttribute(game.pov, &quot;equippedl&quot;)) {\n    msg (&quot;You already have this weapon equipped in your left hand.&quot;)\n  }\n  else if (this = GetAttribute(game.pov, &quot;equippedr&quot;)) {\n    msg (&quot;You already have this weapon equipped in your right hand&quot;)\n  }\n  else if (null = GetAttribute(game.pov, &quot;equippedl&quot;)) {\n    msg (&quot;You draw your &quot; + this.alias + &quot;.&quot;)\n    game.pov.equippedl = this\n    this.inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)\n    game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias\n    \n  }\n  else {\n    msg (&quot;You put away your &quot; + game.pov.equippedl + &quot; and draw your &quot; + this.alias + &quot;.&quot;)\n\tgame.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game.pov.equippedl = this\n    this.inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)\n    game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias\n    \n  }\n}\nelse {\n  msg (&quot;You don't have it.&quot;)\n}[/quote:1kuvj18v]",
      "EditableFormat": "bbcode",
      "HTML": "Many, many thanks!!<br/><br/>I conclude then that this is my script for the left hand (right hand will be pretty much the same) and it works perfectly - everytime <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><blockquote><p>if (this.parent = game.pov) {<br/>    if (this = GetAttribute(game.pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your left hand.&quot;)<br/>  }<br/>  else if (this = GetAttribute(game.pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your right hand&quot;)<br/>  }<br/>  else if (null = GetAttribute(game.pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You draw your &quot; + this.alias + &quot;.&quot;)<br/>    game.pov.equippedl = this<br/>    this.inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)<br/>    game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias<br/>    <br/>  }<br/>  else {<br/>    msg (&quot;You put away your &quot; + game.pov.equippedl + &quot; and draw your &quot; + this.alias + &quot;.&quot;)<br/>\tgame.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game.pov.equippedl = this<br/>    this.inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)<br/>    game.pov.equippedstatusl = &quot;Wielding'(LHand)': &quot; + this.alias<br/>    <br/>  }<br/>}<br/>else {<br/>  msg (&quot;You don't have it.&quot;)<br/>}</p></blockquote>",
      "PostDate": "2013-10-23T22:13:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26688",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I just learned that OS'es (Operating Systems: like win xp, win 7, MacOS, and etc) and software, can easily have millions of code lines (lines, not character count)... yeesh! people need to make programs, to program for you, lol.\n\nthe annoying paradox of computers~coding~programming~scripting, it takes more work than normal, even the most simplistic action takes a few code lines, so the more stuff and~or more advanced actions that you want, the more your coding~scripting grows exponetially (or quadratically ~ whatever the math aspect it is known as, meh~lol).",
      "EditableFormat": "bbcode",
      "HTML": "I just learned that OS'es (Operating Systems: like win xp, win 7, MacOS, and etc) and software, can easily have millions of code lines (lines, not character count)... yeesh! people need to make programs, to program for you, lol.<br/><br/>the annoying paradox of computers~coding~programming~scripting, it takes more work than normal, even the most simplistic action takes a few code lines, so the more stuff and~or more advanced actions that you want, the more your coding~scripting grows exponetially (or quadratically ~ whatever the math aspect it is known as, meh~lol).",
      "PostDate": "2013-10-23T22:30:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26689",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I'm glad it's working. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nSince you seem open to ideas, I'd like to run a change by you which might simplify your life at some point. One thing I'm always on the lookout for in my code is duplicate code, as it just tends to cause problems trying to catch all the cases. That wouldn't matter so much in this case, as it's all close together, but it's an aesthetic nonetheless.\n\nSo here is a slight modification which doesn't change anything functionally, but merges the equip cases together:\n\n[code:kod8cluz]\nif (this&#46;parent = game&#46;pov) {\n if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n   msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)\n }\n else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n   msg (&quot;You already have this weapon equipped in your right hand&quot;)\n }\n else {\n   if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n     msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n   } else {\n     msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n   }\n   game&#46;pov&#46;equippedl = this\n   this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)\n   game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias\n }\n}\nelse {\n msg (&quot;You don't have it&#46;&quot;)\n}[/code:kod8cluz]\n\nYou could easily combine the left and right hand cases by making a function that takes params for the variants above (or maybe even just a single param that is &quot;l&quot; or &quot;r&quot;). But that's another step. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I'll offer some code if you're interested.",
      "EditableFormat": "bbcode",
      "HTML": "I'm glad it's working. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>Since you seem open to ideas, I'd like to run a change by you which might simplify your life at some point. One thing I'm always on the lookout for in my code is duplicate code, as it just tends to cause problems trying to catch all the cases. That wouldn't matter so much in this case, as it's all close together, but it's an aesthetic nonetheless.<br/><br/>So here is a slight modification which doesn't change anything functionally, but merges the equip cases together:<br/><br/><pre><code><br/>if (this&#46;parent = game&#46;pov) {<br/> if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>   msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)<br/> }<br/> else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>   msg (&quot;You already have this weapon equipped in your right hand&quot;)<br/> }<br/> else {<br/>   if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>     msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>   } else {<br/>     msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>   }<br/>   game&#46;pov&#46;equippedl = this<br/>   this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequipl&quot;, &quot;;&quot;)<br/>   game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias<br/> }<br/>}<br/>else {<br/> msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/><br/>You could easily combine the left and right hand cases by making a function that takes params for the variants above (or maybe even just a single param that is &quot;l&quot; or &quot;r&quot;). But that's another step. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I'll offer some code if you're interested.",
      "PostDate": "2013-10-23T22:36:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26703",
      "UserId": 0,
      "Username": "cole",
      "UserAvatar": null,
      "UserGravatar": "b27b9fb7052552c7f4fec83554d7ce64",
      "EditableText": "I don't know how you want your weapons to function, meaning, how they are supposed to do damage, but here's a little suggestion:\n\nWith the ideas suggested above (setting the attributes &quot;equippedr&quot; or &quot;equippedl&quot; to a weapon object) it might be a good idea to call the strength or damage of the weapon from the weapon object itself. Meaning, instead of the sword adding strength to a player's &quot;Strength&quot; attribute if it gets equipped you can call the attribute &quot;Strength&quot; of the sword itself.\n\nIf you hit an enemy you can subtract the &quot;Strength&quot; attribute of the sword from the enemy's health directly. That way if the weapon gets equipped, unequipped, breaks, gets forced out of your hand, is dropped, is put somewhere, etc. you don't have to add or subtract it's &quot;Strength&quot; attribute from the player's &quot;Strength&quot; attribute.",
      "EditableFormat": "bbcode",
      "HTML": "I don't know how you want your weapons to function, meaning, how they are supposed to do damage, but here's a little suggestion:<br/><br/>With the ideas suggested above (setting the attributes &quot;equippedr&quot; or &quot;equippedl&quot; to a weapon object) it might be a good idea to call the strength or damage of the weapon from the weapon object itself. Meaning, instead of the sword adding strength to a player's &quot;Strength&quot; attribute if it gets equipped you can call the attribute &quot;Strength&quot; of the sword itself.<br/><br/>If you hit an enemy you can subtract the &quot;Strength&quot; attribute of the sword from the enemy's health directly. That way if the weapon gets equipped, unequipped, breaks, gets forced out of your hand, is dropped, is put somewhere, etc. you don't have to add or subtract it's &quot;Strength&quot; attribute from the player's &quot;Strength&quot; attribute.",
      "PostDate": "2013-10-24T20:46:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26709",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "To jaynabonne:\n\nThank you for the mod and yes, I would love to see the combined script!\nThere will need to be more to the script and I will think about it, but I would need two handed weapons too. So I think the need to have string attributes on the weapons for single or two-handed will need to happen. \nThanks once again for the help.\n\nTo cole:\n\nThat is a good tipp and I have thought of it before. It will be convenient for me to do, but I was also thinking of the player that might want to physically see the changes that happen to equipping and unequipping  his/her weapons/armor. I am starting off slowly and for now there will only be two stats: Skill and HP - so there won't be a whole lot of stats like charisma, strength, dexterity and so forth.",
      "EditableFormat": "bbcode",
      "HTML": "To jaynabonne:<br/><br/>Thank you for the mod and yes, I would love to see the combined script!<br/>There will need to be more to the script and I will think about it, but I would need two handed weapons too. So I think the need to have string attributes on the weapons for single or two-handed will need to happen. <br/>Thanks once again for the help.<br/><br/>To cole:<br/><br/>That is a good tipp and I have thought of it before. It will be convenient for me to do, but I was also thinking of the player that might want to physically see the changes that happen to equipping and unequipping  his/her weapons/armor. I am starting off slowly and for now there will only be two stats: Skill and HP - so there won't be a whole lot of stats like charisma, strength, dexterity and so forth.",
      "PostDate": "2013-10-25T11:22:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26724",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Besides learning the coding... there's also the annoyance in trying to construct a good equation~formula~alogorithm for your game mechanics (once you add in more stat attributes), lol. Game Making is not easy at all !!!!\n\n(I think I spent like at least 5 hours in contructing each of these formulas, lol ~ ARGH !!!!!!)\n(It makes me really appreciate games more now, with how well their game mechanics usually work)\n\nhere's one for leveling+experience:\n\n(you can replace &quot;game.pov&quot; with &quot;player&quot; instead for it to make more sense to you)\n\n&lt;function name=&quot;leveling_function&quot;&gt;&lt;![CDATA[\n-&gt; if (game.pov.experience_points &gt;= game.pov.level * 100 + 100) {\n-&gt;-&gt; game.pov.experience_points = game.pov.experience_points - (game.pov.level * 100 + 100)\n-&gt;-&gt; game.pov.level = game.pov.level + 1\n-&gt;-&gt; leveling_function\n-&gt; }\n]]&gt;&lt;/function&gt;\n\nand here's my (physical~weapon) damage one:\n\n(you'll need to write it out, so that you can see it properly, as it's really hard to see it on a single line, lol)\n\ndefending = double's your defense, and on the next turn, you do double the damage, and it applies to the monster~enemy too if they choose to defend a round and then attack the next round (a really cool feature from 7th Saga game, it makes the &quot;defend&quot; action a much more tactical decision, now you got to think whether it's better to just attack every round, or to defend the 1st round and then attack the next round)\n\nif (self.defending = true and enemy.defending = true) {\n-&gt; enemy.current_hit_points = enemy.current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n-&gt; msg (enemy.alias + &quot; has &quot; + enemy.current_hit_points + &quot; HP left.&quot;)\n}\n\nand the critical hit function (doubles the damage as well if it succeeds, lol) that is used in the above damage scripting:\n\n&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;\n-&gt; if (RandomChance (GetInt (object_x,&quot;luck&quot;)) = true) {\n-&gt;-&gt; value = 2\n-&gt; } else {\n-&gt;-&gt; value = 1\n-&gt; }\n-&gt; return (value)\n&lt;/function&gt;\n\n-------------------------\n\nsee if you can understand or figure out what my leveling and damage equations do, for a challenge, hehe.",
      "EditableFormat": "bbcode",
      "HTML": "Besides learning the coding... there's also the annoyance in trying to construct a good equation~formula~alogorithm for your game mechanics (once you add in more stat attributes), lol. Game Making is not easy at all !!!!<br/><br/>(I think I spent like at least 5 hours in contructing each of these formulas, lol ~ ARGH !!!!!!)<br/>(It makes me really appreciate games more now, with how well their game mechanics usually work)<br/><br/>here's one for leveling+experience:<br/><br/>(you can replace &quot;game.pov&quot; with &quot;player&quot; instead for it to make more sense to you)<br/><br/>&lt;function name=&quot;leveling_function&quot;&gt;&lt;![CDATA[<br/>-&gt; if (game.pov.experience_points &gt;= game.pov.level * 100 + 100) {<br/>-&gt;-&gt; game.pov.experience_points = game.pov.experience_points - (game.pov.level * 100 + 100)<br/>-&gt;-&gt; game.pov.level = game.pov.level + 1<br/>-&gt;-&gt; leveling_function<br/>-&gt; }<br/>]]&gt;&lt;/function&gt;<br/><br/>and here's my (physical~weapon) damage one:<br/><br/>(you'll need to write it out, so that you can see it properly, as it's really hard to see it on a single line, lol)<br/><br/>defending = double's your defense, and on the next turn, you do double the damage, and it applies to the monster~enemy too if they choose to defend a round and then attack the next round (a really cool feature from 7th Saga game, it makes the &quot;defend&quot; action a much more tactical decision, now you got to think whether it's better to just attack every round, or to defend the 1st round and then attack the next round)<br/><br/>if (self.defending = true and enemy.defending = true) {<br/>-&gt; enemy.current_hit_points = enemy.current_hit_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>-&gt; msg (enemy.alias + &quot; has &quot; + enemy.current_hit_points + &quot; HP left.&quot;)<br/>}<br/><br/>and the critical hit function (doubles the damage as well if it succeeds, lol) that is used in the above damage scripting:<br/><br/>&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;object_x&quot; type=&quot;int&quot;&gt;<br/>-&gt; if (RandomChance (GetInt (object_x,&quot;luck&quot;)) = true) {<br/>-&gt;-&gt; value = 2<br/>-&gt; } else {<br/>-&gt;-&gt; value = 1<br/>-&gt; }<br/>-&gt; return (value)<br/>&lt;/function&gt;<br/><br/>-------------------------<br/><br/>see if you can understand or figure out what my leveling and damage equations do, for a challenge, hehe.",
      "PostDate": "2013-10-26T06:29:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26726",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Thank you HK!\n\nThis will sure come in handy. I will have experience for my character and I guess that:\ngame.pov.experience_points = game.pov.experience_points - (game.pov.level * 100 + 100)\nformula is carrying over experience gained if it is more than needed for leveling up?\n\nWhat I have so far:\nequipl and equipr (Equipping something to the left hand or right hand):\nThis will basically be used for single handed items and replace the buttons under the item accordingly to 'unequipl' if you have something equipeed in the left hand and 'equipl' and 'equipr' if that weapon is not equiped. Also when you swap it out for another weapon, it should change these buttons for the weapon being swapped out.\nIf you try to equip a two handed weapon it will display a message that you should use the command 'equip'. Reason being that it will be stupid having buttons under a two handed weapon saying equipl and equipr. Therefore I have -\n\nequip:\nThis will be dealing with equipping two handed weapons. So the left hand - and right hand status will show that the same weapon is being equipped.\n(This will allow me to have a shield in one hand and weapon in one hand or having two single handed weapons equipped or a two handed weapon - I could also give penalties for having something in the left hand while u are right handed - just a thought)\nThen I've got unequipl, unequipr and unequip....\n\nI will only have 2 stats: (make it 4)\nSkill and HP (max Skill and max HP)\nA bit lame, but armor will increase your hp while worn. (the idea that you can take more hits with armor on)\nWeapons will increase your skill - fighting without any weapon will leave you with low skill points\n\nDamage from a weapon will work like this:\neach weapon will have a damage value like: 1d6, 1d8 and so forth; since Quest 5.4 has got DiceRoll - I will try to implement that.\n\nCombat will work like this:\nThere will be a 1d10 die roll for hero and enemy - their skill points should be added to this value. The one with the highest value scores a hit and the value deducted from the victim will be the damage factor of the weapon (1d8, 1d4, 2d6...ect)\nIf the two values for hero and foe is the same results in a parry.\nA critical hit will be if one of them have 6 or more points more than the victim. - (calculating it based on what...I do not know yet; since I won't have luck-could just be an extra 1d6 roll)\n\nExperience:\nWell, the same as everybody does it I guess.\n\nThe only other variable I will have is 'Gold' \n\nWould this system be ideal? Most likely not. But this will be the simplest combat system I can think of and would make for a good starting point for beginners like me.\n\nSo hopefully, with all you good samaritans help, I could post this complete simple 'system' for those who might be interested. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->   \nI appreciate all you guys help immensely - I am not good with this coding thing. I haven't stipulated what my idea was before and thought I put it out there so that everybody understands where I am going with this. If time permits, I will finish what I have and post that so long. \nSoon I will have to deal with experience gained and I will certainly appreciate your help HK.  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nI also want to implement abilities - already bracing myself...lol",
      "EditableFormat": "bbcode",
      "HTML": "Thank you HK!<br/><br/>This will sure come in handy. I will have experience for my character and I guess that:<br/>game.pov.experience_points = game.pov.experience_points - (game.pov.level * 100 + 100)<br/>formula is carrying over experience gained if it is more than needed for leveling up?<br/><br/>What I have so far:<br/>equipl and equipr (Equipping something to the left hand or right hand):<br/>This will basically be used for single handed items and replace the buttons under the item accordingly to 'unequipl' if you have something equipeed in the left hand and 'equipl' and 'equipr' if that weapon is not equiped. Also when you swap it out for another weapon, it should change these buttons for the weapon being swapped out.<br/>If you try to equip a two handed weapon it will display a message that you should use the command 'equip'. Reason being that it will be stupid having buttons under a two handed weapon saying equipl and equipr. Therefore I have -<br/><br/>equip:<br/>This will be dealing with equipping two handed weapons. So the left hand - and right hand status will show that the same weapon is being equipped.<br/>(This will allow me to have a shield in one hand and weapon in one hand or having two single handed weapons equipped or a two handed weapon - I could also give penalties for having something in the left hand while u are right handed - just a thought)<br/>Then I've got unequipl, unequipr and unequip....<br/><br/>I will only have 2 stats: (make it 4)<br/>Skill and HP (max Skill and max HP)<br/>A bit lame, but armor will increase your hp while worn. (the idea that you can take more hits with armor on)<br/>Weapons will increase your skill - fighting without any weapon will leave you with low skill points<br/><br/>Damage from a weapon will work like this:<br/>each weapon will have a damage value like: 1d6, 1d8 and so forth; since Quest 5.4 has got DiceRoll - I will try to implement that.<br/><br/>Combat will work like this:<br/>There will be a 1d10 die roll for hero and enemy - their skill points should be added to this value. The one with the highest value scores a hit and the value deducted from the victim will be the damage factor of the weapon (1d8, 1d4, 2d6...ect)<br/>If the two values for hero and foe is the same results in a parry.<br/>A critical hit will be if one of them have 6 or more points more than the victim. - (calculating it based on what...I do not know yet; since I won't have luck-could just be an extra 1d6 roll)<br/><br/>Experience:<br/>Well, the same as everybody does it I guess.<br/><br/>The only other variable I will have is 'Gold' <br/><br/>Would this system be ideal? Most likely not. But this will be the simplest combat system I can think of and would make for a good starting point for beginners like me.<br/><br/>So hopefully, with all you good samaritans help, I could post this complete simple 'system' for those who might be interested. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->   <br/>I appreciate all you guys help immensely - I am not good with this coding thing. I haven't stipulated what my idea was before and thought I put it out there so that everybody understands where I am going with this. If time permits, I will finish what I have and post that so long. <br/>Soon I will have to deal with experience gained and I will certainly appreciate your help HK.  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>I also want to implement abilities - already bracing myself...lol",
      "PostDate": "2013-10-26T08:04:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26727",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yep, you got it right! (good job!), and it also means that you're in effect starting from 0 experience (+ the extra experience) for the next level\n\nlet's see if I can explain this clearly again (it took me hours to do the explanation right in some long lost post of mine ~ I wish I could find it!, lol):\n\n[b:365d3c5g]level 0[/b:365d3c5g] = 0-99 experience range (0-99 total experience)\n[b:365d3c5g]level 1[/b:365d3c5g] = 100 experience required (100 total experience required: 0 + 100)\nextra experience is used towards level 2, but you start from 0 experience, so it's:\n0 + extra experience = experience towards~for level 2\n[b:365d3c5g]level 2[/b:365d3c5g] = 200 experience required (300 total experience required: 100 + 200)\nextra experience is used towards level 3, but you start from 0 experience, so it's:\n0 + extra experience = experience towards~for level 3\n[b:365d3c5g]level 3[/b:365d3c5g] = 300 experience required (600 total experience required: 300 + 300)\nextra experience is used towards level 4, but you start from 0 experience, so it's:\n0 + extra experience = experience towards~for level 4\n[b:365d3c5g]level 4[/b:365d3c5g] = 400 experience required (1,000 total experience required: 600 + 400)\nextra experience is used towards level 5, but you start from 0 experience, so it's:\n0 + extra experience = experience towards~for level 5\n[b:365d3c5g]level 5[/b:365d3c5g] = 500 experience required (1,500 total experience required: 1,000 + 500)\netc etc etc\n\nnot quite as concise as I did it in my other post, somewhere on this site, lol, but meh... good enough (hopefully).\n\nI wanted it this way, you may not like it like this and thus will have to craft~construct your own formula for what you want\n(I can try to help, but this is hard for me, figuring out a desired math formula, lol)\n\n----------\n\na real quick question, to see if you fully understand my leveling formula (just for fun, hehe):\n\nlet's say you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 300 experience.\n\nWhat will now be your displayed:\n\nLevel = ?\nExperience = ?\n\nhow about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 200 experience.\n\nWhat will now be your displayed:\n\nLevel = ?\nExperience = ?\n\nhow about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 500 experience.\n\nWhat will now be your displayed:\n\nLevel = ?\nExperience = ?",
      "EditableFormat": "bbcode",
      "HTML": "yep, you got it right! (good job!), and it also means that you're in effect starting from 0 experience (+ the extra experience) for the next level<br/><br/>let's see if I can explain this clearly again (it took me hours to do the explanation right in some long lost post of mine ~ I wish I could find it!, lol):<br/><br/><span style=\"font-weight:bold;\">level 0</span> = 0-99 experience range (0-99 total experience)<br/><span style=\"font-weight:bold;\">level 1</span> = 100 experience required (100 total experience required: 0 + 100)<br/>extra experience is used towards level 2, but you start from 0 experience, so it's:<br/>0 + extra experience = experience towards~for level 2<br/><span style=\"font-weight:bold;\">level 2</span> = 200 experience required (300 total experience required: 100 + 200)<br/>extra experience is used towards level 3, but you start from 0 experience, so it's:<br/>0 + extra experience = experience towards~for level 3<br/><span style=\"font-weight:bold;\">level 3</span> = 300 experience required (600 total experience required: 300 + 300)<br/>extra experience is used towards level 4, but you start from 0 experience, so it's:<br/>0 + extra experience = experience towards~for level 4<br/><span style=\"font-weight:bold;\">level 4</span> = 400 experience required (1,000 total experience required: 600 + 400)<br/>extra experience is used towards level 5, but you start from 0 experience, so it's:<br/>0 + extra experience = experience towards~for level 5<br/><span style=\"font-weight:bold;\">level 5</span> = 500 experience required (1,500 total experience required: 1,000 + 500)<br/>etc etc etc<br/><br/>not quite as concise as I did it in my other post, somewhere on this site, lol, but meh... good enough (hopefully).<br/><br/>I wanted it this way, you may not like it like this and thus will have to craft~construct your own formula for what you want<br/>(I can try to help, but this is hard for me, figuring out a desired math formula, lol)<br/><br/>----------<br/><br/>a real quick question, to see if you fully understand my leveling formula (just for fun, hehe):<br/><br/>let's say you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 300 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = ?<br/>Experience = ?<br/><br/>how about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 200 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = ?<br/>Experience = ?<br/><br/>how about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 500 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = ?<br/>Experience = ?",
      "PostDate": "2013-10-26T09:32:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26728",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "here is a game file that you can test~play out (and examine~study too):\n\n(the download'able game file is at bottom of post, click on it)\n\n(or you can just copy and paste the code below into a new game file of your own, if you don't know how to do this I can help)\n\n(I added in gaining stats into the leveling function, if you want those out of there, I can help you in removing them if you need help doing so)\n\n[code:g9x1wkz2]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;cd102f9d-370a-4bda-b6ea-ca42288f619c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      msg (&quot;What is your name?&quot;)\n      get input {\n        msg (&quot;- &quot; + result)\n        player&#46;alias = result\n        show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {\n          player&#46;gender_x = result\n          show menu (&quot;What is your race?&quot;, split (&quot;human;elf;dwarf&quot; , &quot;;&quot;), false) {\n            player&#46;race = result\n            show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {\n              player&#46;class = result\n              msg (player&#46;alias + &quot; is a &quot; + &quot; &quot; + player&#46;gender_x + &quot; &quot; + player&#46;race + &quot; &quot; + player&#46;class + &quot;&#46;&quot;)\n            }\n          }\n        }\n      }\n    &lt;/start&gt;\n\t&lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n\t&lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n\t  &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;gender_x type=&quot;string&quot;&gt;&lt;/gender_x&gt;\n      &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n      &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n      &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n      &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;alias = Name&#58; !;gender_x = Gender&#58; !;strength = ;intelligence = ;agility = ;level = ;experience = ;cash = &lt;/statusattributes&gt;\n      &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n      &lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n      &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;potion100&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alias&gt;potexp100&lt;/alias&gt;\n      &lt;take /&gt;\n      &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Take; Drink&lt;/displayverbs&gt;\n      &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Look at; Use; Drop; Drink&lt;/inventoryverbs&gt;\n      &lt;drink type=&quot;script&quot;&gt;\n        msg (&quot;You drink the exp potion, receiving 100 experience&#46;&quot;)\n        player&#46;experience = player&#46;experience + 100\n      &lt;/drink&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;potion300&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;alias&gt;potexp300&lt;/alias&gt;\n      &lt;take /&gt;\n      &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Take; Drink&lt;/displayverbs&gt;\n      &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Look at; Use; Drop; Drink&lt;/inventoryverbs&gt;\n      &lt;drink type=&quot;script&quot;&gt;\n        msg (&quot;You drink the exp potion, receiving 300 experience&#46;&quot;)\n        player&#46;experience = player&#46;experience + 300\n      &lt;/drink&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=&quot;global_events_turnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      leveling_function\n      game&#46;turns = game&#46;turns + 1\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (player&#46;experience &gt;= player&#46;level * 100 + 100) {\n      player&#46;experience = player&#46;experience - (player&#46;level * 100 + 100)\n      player&#46;level = player&#46;level + 1\n      switch (player&#46;gender_x) {\n        case (&quot;male&quot;) {\n          player&#46;strength = player&#46;strength + 1\n        }\n        case (&quot;female&quot;) {\n          player&#46;agility = player&#46;agility + 1\n        }\n      }\n      switch (player&#46;race) {\n        case (&quot;dwarf&quot;) {\n          player&#46;strength = player&#46;strength + 2\n        }\n        case (&quot;elf&quot;) {\n          player&#46;agility = player&#46;intelligence + 2\n        }\n        case (&quot;human&quot;) {\n          player&#46;strength = player&#46;strength + 1\n          player&#46;agility = player&#46;agility + 1\n        }\n      }\n      switch (player&#46;class) {\n        case (&quot;warrior&quot;) {\n          player&#46;strength = player&#46;strength + 2\n        }\n        case (&quot;cleric&quot;) {\n          player&#46;intelligence = player&#46;intelligence + 1\n          player&#46;agility = player&#46;agility + 1\n        }\n        case (&quot;mage&quot;) {\n          player&#46;intelligence = player&#46;intelligence + 2\n        }\n        case (&quot;thief&quot;) {\n          player&#46;strength = player&#46;strength + 1\n          player&#46;agility = player&#46;agility + 1\n        }\n      }\n      leveling_function\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n&lt;/asl&gt;[/code:g9x1wkz2]\n\n-----------------------------\n\nHK Edit:\n\nerr... I forgot to display your race and class on the right side, if you want me to correct this, I can do so (and will post up the new game file in a new post). Otherwise, hopefully there's nothing else wrong with it ~ I hadn't fully tested it, but it seems to at least work okay.",
      "EditableFormat": "bbcode",
      "HTML": "here is a game file that you can test~play out (and examine~study too):<br/><br/>(the download'able game file is at bottom of post, click on it)<br/><br/>(or you can just copy and paste the code below into a new game file of your own, if you don't know how to do this I can help)<br/><br/>(I added in gaining stats into the leveling function, if you want those out of there, I can help you in removing them if you need help doing so)<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;cd102f9d-370a-4bda-b6ea-ca42288f619c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      msg (&quot;What is your name?&quot;)<br/>      get input {<br/>        msg (&quot;- &quot; + result)<br/>        player&#46;alias = result<br/>        show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {<br/>          player&#46;gender_x = result<br/>          show menu (&quot;What is your race?&quot;, split (&quot;human;elf;dwarf&quot; , &quot;;&quot;), false) {<br/>            player&#46;race = result<br/>            show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {<br/>              player&#46;class = result<br/>              msg (player&#46;alias + &quot; is a &quot; + &quot; &quot; + player&#46;gender_x + &quot; &quot; + player&#46;race + &quot; &quot; + player&#46;class + &quot;&#46;&quot;)<br/>            }<br/>          }<br/>        }<br/>      }<br/>    &lt;/start&gt;<br/>\t&lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>\t&lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>\t  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;gender_x type=&quot;string&quot;&gt;&lt;/gender_x&gt;<br/>      &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>      &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>      &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>      &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;alias = Name&#58; !;gender_x = Gender&#58; !;strength = ;intelligence = ;agility = ;level = ;experience = ;cash = &lt;/statusattributes&gt;<br/>      &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>      &lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>      &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;potion100&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alias&gt;potexp100&lt;/alias&gt;<br/>      &lt;take /&gt;<br/>      &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Take; Drink&lt;/displayverbs&gt;<br/>      &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Look at; Use; Drop; Drink&lt;/inventoryverbs&gt;<br/>      &lt;drink type=&quot;script&quot;&gt;<br/>        msg (&quot;You drink the exp potion, receiving 100 experience&#46;&quot;)<br/>        player&#46;experience = player&#46;experience + 100<br/>      &lt;/drink&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;potion300&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;alias&gt;potexp300&lt;/alias&gt;<br/>      &lt;take /&gt;<br/>      &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Take; Drink&lt;/displayverbs&gt;<br/>      &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Look at; Use; Drop; Drink&lt;/inventoryverbs&gt;<br/>      &lt;drink type=&quot;script&quot;&gt;<br/>        msg (&quot;You drink the exp potion, receiving 300 experience&#46;&quot;)<br/>        player&#46;experience = player&#46;experience + 300<br/>      &lt;/drink&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;turnscript name=&quot;global_events_turnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      leveling_function<br/>      game&#46;turns = game&#46;turns + 1<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (player&#46;experience &gt;= player&#46;level * 100 + 100) {<br/>      player&#46;experience = player&#46;experience - (player&#46;level * 100 + 100)<br/>      player&#46;level = player&#46;level + 1<br/>      switch (player&#46;gender_x) {<br/>        case (&quot;male&quot;) {<br/>          player&#46;strength = player&#46;strength + 1<br/>        }<br/>        case (&quot;female&quot;) {<br/>          player&#46;agility = player&#46;agility + 1<br/>        }<br/>      }<br/>      switch (player&#46;race) {<br/>        case (&quot;dwarf&quot;) {<br/>          player&#46;strength = player&#46;strength + 2<br/>        }<br/>        case (&quot;elf&quot;) {<br/>          player&#46;agility = player&#46;intelligence + 2<br/>        }<br/>        case (&quot;human&quot;) {<br/>          player&#46;strength = player&#46;strength + 1<br/>          player&#46;agility = player&#46;agility + 1<br/>        }<br/>      }<br/>      switch (player&#46;class) {<br/>        case (&quot;warrior&quot;) {<br/>          player&#46;strength = player&#46;strength + 2<br/>        }<br/>        case (&quot;cleric&quot;) {<br/>          player&#46;intelligence = player&#46;intelligence + 1<br/>          player&#46;agility = player&#46;agility + 1<br/>        }<br/>        case (&quot;mage&quot;) {<br/>          player&#46;intelligence = player&#46;intelligence + 2<br/>        }<br/>        case (&quot;thief&quot;) {<br/>          player&#46;strength = player&#46;strength + 1<br/>          player&#46;agility = player&#46;agility + 1<br/>        }<br/>      }<br/>      leveling_function<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>-----------------------------<br/><br/>HK Edit:<br/><br/>err... I forgot to display your race and class on the right side, if you want me to correct this, I can do so (and will post up the new game file in a new post). Otherwise, hopefully there's nothing else wrong with it ~ I hadn't fully tested it, but it seems to at least work okay.<div><a href=\"/attachment/756\">HK Testing Stuff.aslx</a></div>",
      "PostDate": "2013-10-26T10:01:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26729",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Also, it's faster for us (me especially anyways) to explain or do~show stuff in code, but lots of people new to quest and~or to coding in general, needs things to be explained in~through the GUI~Editor, which I can do, but it takes a lot more work and time as it's slower to do~show and~or explain it via the GUI~Editor.\n\nSo, if you ever want~need stuff explained with the GUI~Editor, let me know, and I'll get it posted up for you (though it may take me a few days or not until the weekend ~ as I'm busy with school work during the week).\n\n-----------\n\nif~when you want me to help with more complex damage (or whatever) game mechanics, let me know, and I'll try to help you (I'm still trying to learn creating all the aspects of a combat system, equipment system, magic system, and etc RPG elements, myself, but if I can't help you either, we've got some good coders here, the moderators of the site are very helpful and coding knowledgeable, as well as some of the normal members~users too).\n\n-------------\n\n(Math) Operators:\n\nAddition: +\nSubtraction: -\nMultiplication: *\nDivision: /\nEquals: =\nGreater Than: &gt;\nLesser Than: &lt;\nGreater Than and Equal To: &gt;=\nLesser Than and Equal To: &lt;=\nNot Equal: &lt;&gt; // if you do this in Code, then you need to have it within this: &lt;![CDATA[ {within here: the scripts} ]]&gt;\n\nConditionals:\n\nif ~ else if ~ else\nforeach (use it with~for objectlists and~or objectdictionaries)\nfor (use it with~for objectlists and~or objectdictionaries)\nfirsttime ~ otherwise\nnot (not or not equal ~ depends how you're using it ~ what your code line is saying~doing~is)\n\n----------\n\nsome damage ideas:\n\nattack vs defense (Object_1.attack - Object_2.defense) integer attributes\nweapon~physical damage + fire damage + etc elemental damages\n\n(weapon damage) + (weapon damage * some percent amount)\n\nsome percent amount (could be created as~like this): \n\n[u:3in0fd39](Object_1.strength_or_attack - Object_2.endurance_or_defense)[/u:3in0fd39]\n............................... 100 ......................................\n\nor how it would look on one line: (Object_1.strength_or_attack - Object_2.endurance_or_defense) / 100\n\nthis is (some of) what I'm doing in my damage equation~formula, by the way.\n\n---------------\n\ngame mechanic design is limitless, be creative (and hope you can than get a math equation that works and does what you want it to do), and if you need help with putting it into Code or with the GUI~Editor, than please ask, and I'll try to help, and if not, someone else can~will help you out too.",
      "EditableFormat": "bbcode",
      "HTML": "Also, it's faster for us (me especially anyways) to explain or do~show stuff in code, but lots of people new to quest and~or to coding in general, needs things to be explained in~through the GUI~Editor, which I can do, but it takes a lot more work and time as it's slower to do~show and~or explain it via the GUI~Editor.<br/><br/>So, if you ever want~need stuff explained with the GUI~Editor, let me know, and I'll get it posted up for you (though it may take me a few days or not until the weekend ~ as I'm busy with school work during the week).<br/><br/>-----------<br/><br/>if~when you want me to help with more complex damage (or whatever) game mechanics, let me know, and I'll try to help you (I'm still trying to learn creating all the aspects of a combat system, equipment system, magic system, and etc RPG elements, myself, but if I can't help you either, we've got some good coders here, the moderators of the site are very helpful and coding knowledgeable, as well as some of the normal members~users too).<br/><br/>-------------<br/><br/>(Math) Operators:<br/><br/>Addition: +<br/>Subtraction: -<br/>Multiplication: *<br/>Division: /<br/>Equals: =<br/>Greater Than: &gt;<br/>Lesser Than: &lt;<br/>Greater Than and Equal To: &gt;=<br/>Lesser Than and Equal To: &lt;=<br/>Not Equal: &lt;&gt; // if you do this in Code, then you need to have it within this: &lt;![CDATA[ {within here: the scripts} ]]&gt;<br/><br/>Conditionals:<br/><br/>if ~ else if ~ else<br/>foreach (use it with~for objectlists and~or objectdictionaries)<br/>for (use it with~for objectlists and~or objectdictionaries)<br/>firsttime ~ otherwise<br/>not (not or not equal ~ depends how you're using it ~ what your code line is saying~doing~is)<br/><br/>----------<br/><br/>some damage ideas:<br/><br/>attack vs defense (Object_1.attack - Object_2.defense) integer attributes<br/>weapon~physical damage + fire damage + etc elemental damages<br/><br/>(weapon damage) + (weapon damage * some percent amount)<br/><br/>some percent amount (could be created as~like this): <br/><br/><span style=\"text-decoration:underline;\">(Object_1.strength_or_attack - Object_2.endurance_or_defense)</span><br/>............................... 100 ......................................<br/><br/>or how it would look on one line: (Object_1.strength_or_attack - Object_2.endurance_or_defense) / 100<br/><br/>this is (some of) what I'm doing in my damage equation~formula, by the way.<br/><br/>---------------<br/><br/>game mechanic design is limitless, be creative (and hope you can than get a math equation that works and does what you want it to do), and if you need help with putting it into Code or with the GUI~Editor, than please ask, and I'll try to help, and if not, someone else can~will help you out too.",
      "PostDate": "2013-10-26T10:13:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26730",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "for experience and gold~cash\n\n(I'm using my &quot;cash&quot; as the label for my currency attribute, lol. just change &quot;cash&quot; for your &quot;gold&quot; label for your currency attribute. I don't use &quot;gold&quot; because eventually if I ever have a game made, I'll be using &quot;gold&quot; for something else, &quot;cash&quot; is a good neutral word for currency for me as an American anyways. I plan on using &quot;gold&quot; as a metal resource, such as for a weapon's or armor's material grade~quality: wooden &lt; copper &lt; iron &lt; steel &lt; silver &lt; gold &lt; diamond &lt; adamantium or mithril, lol. Or, maybe I'll use~have a &quot;gold coin&quot; Object):\n\nan example of how to do it (some as GUI~Editor, some as Code)\n\nthe &quot;ACTION&quot; (the scripting ~ ie the Verb)\n\n&quot;dragon&quot; (Object) -&gt; Verb (Tab) -&gt; Add -&gt;\n\nName: fight\nScript&#058; (see below)\n\nif (dragon.dead=true) {\n-&gt; msg (&quot;the dragon is already dead, silly&quot;)\n} else if (dragon.dead=false) {\n-&gt; if (dragon_slayer_sword.parent=player) { // if the dragon slayer sword is in your (the &quot;player's&quot;) inventory (if you're holding it)\n-&gt;-&gt; msg (&quot;you kill the dragon with the dragon slayer sword&quot;)\n-&gt;-&gt; player.experience = player.experience + dragon.experience\n-&gt;-&gt; player.cash = player.cash + dragon.cash\n-&gt;-&gt; dragon.dead=true // this sets &quot;flags&quot; the dragon as being &quot;dead&quot;.\n-&gt; } else {\n-&gt;-&gt; msg (&quot;the dragon kills you&quot;)\n-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt; finish // this command~script stops~ends the game\n-&gt; }\n}\n\nNOW, we ALSO have to do the &quot;CREATION&quot; of the attributes too (you can't do an &quot;ACTION&quot; with attributes when those attributes don't exist ~aren't &quot;CREATED&quot;~ yet, lol):\n\n&quot;dragon&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: dead\nType: boolean\nValue: false // we want our dragon to start off alive (so that we can then fight and kill it), lol\n\nName: experience\nType: int (integer)\nValue: (let's say) 1,000,000,000 (lol, hey, it's a dragon after all, lol)\n\nName: cash\nType: int\nValue: 1,000,000 (dragons sleep on~in mounds of gold coins, lol)\n\nin Scripting this looks like:\n\ndragon.dead=false\ndragon.experience=1000000000\ndragon.cash=1000000\n\nin Code this looks like:\n\n&lt;object name=&quot;dragon&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n-&gt; &lt;experience type=&quot;int&quot;&gt;1000000000&lt;/experience&gt;\n-&gt; &lt;cash type=&quot;int&quot;&gt;1000000&lt;/cash&gt;\n-&gt; &lt;fight type=&quot;script&quot;&gt;\n-&gt;-&gt; if (dragon.dead=true) {\n-&gt;-&gt;-&gt; msg (&quot;the dragon is already dead, silly&quot;)\n-&gt;-&gt; } else if (dragon.dead=false) {\n-&gt;-&gt;-&gt; if (dragon_slayer_sword.parent=player) { // if the dragon slayer sword is in your (the &quot;player's&quot;) inventory (if you're holding it)\n-&gt;-&gt;-&gt;-&gt; msg (&quot;you kill the dragon with the dragon slayer sword&quot;)\n-&gt;-&gt;-&gt;-&gt; player.experience = player.experience + dragon.experience\n-&gt;-&gt;-&gt;-&gt; player.cash = player.cash + dragon.cash\n-&gt;-&gt;-&gt;-&gt; dragon.dead=true // this sets &quot;flags&quot; the dragon as being &quot;dead&quot;.\n-&gt;-&gt;-&gt; } else {\n-&gt;-&gt;-&gt;-&gt; msg (&quot;the dragon kills you&quot;)\n-&gt;-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)\n-&gt;-&gt;-&gt;-&gt; finish // this command~script stops~ends the game\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; &lt;/fight&gt;\n-&gt; &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Fight&lt;/displayverbs&gt;\n&lt;/object&gt;\n\n&quot;player&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;\n\nName: experience\nType: int\nValue: 0\n\nName: cash\nType: int\nValue: 0\n\nin Scripting this looks like:\n\nplayer.experience=0\nplayer.cash=0\n\nin Code this looks like:\n\n&lt;object name=&quot;player&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;\n-&gt; &lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;\n-&gt; &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n-&gt; &lt;inventory type=&quot;objectlist&quot;&gt;dragon_slayer_sword&lt;/inventory&gt; // I think this is how it looks, but maybe not. Obviously, you'd have to get the dragon slayer sword somewhere in the game and take it, for you to have it in your inventory.\n&lt;/object&gt;\n\n----\n\n&lt;object name=&quot;dragon_slayer_sword&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n&lt;/object&gt;",
      "EditableFormat": "bbcode",
      "HTML": "for experience and gold~cash<br/><br/>(I'm using my &quot;cash&quot; as the label for my currency attribute, lol. just change &quot;cash&quot; for your &quot;gold&quot; label for your currency attribute. I don't use &quot;gold&quot; because eventually if I ever have a game made, I'll be using &quot;gold&quot; for something else, &quot;cash&quot; is a good neutral word for currency for me as an American anyways. I plan on using &quot;gold&quot; as a metal resource, such as for a weapon's or armor's material grade~quality: wooden &lt; copper &lt; iron &lt; steel &lt; silver &lt; gold &lt; diamond &lt; adamantium or mithril, lol. Or, maybe I'll use~have a &quot;gold coin&quot; Object):<br/><br/>an example of how to do it (some as GUI~Editor, some as Code)<br/><br/>the &quot;ACTION&quot; (the scripting ~ ie the Verb)<br/><br/>&quot;dragon&quot; (Object) -&gt; Verb (Tab) -&gt; Add -&gt;<br/><br/>Name: fight<br/>Script&#058; (see below)<br/><br/>if (dragon.dead=true) {<br/>-&gt; msg (&quot;the dragon is already dead, silly&quot;)<br/>} else if (dragon.dead=false) {<br/>-&gt; if (dragon_slayer_sword.parent=player) { // if the dragon slayer sword is in your (the &quot;player's&quot;) inventory (if you're holding it)<br/>-&gt;-&gt; msg (&quot;you kill the dragon with the dragon slayer sword&quot;)<br/>-&gt;-&gt; player.experience = player.experience + dragon.experience<br/>-&gt;-&gt; player.cash = player.cash + dragon.cash<br/>-&gt;-&gt; dragon.dead=true // this sets &quot;flags&quot; the dragon as being &quot;dead&quot;.<br/>-&gt; } else {<br/>-&gt;-&gt; msg (&quot;the dragon kills you&quot;)<br/>-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt; finish // this command~script stops~ends the game<br/>-&gt; }<br/>}<br/><br/>NOW, we ALSO have to do the &quot;CREATION&quot; of the attributes too (you can't do an &quot;ACTION&quot; with attributes when those attributes don't exist ~aren't &quot;CREATED&quot;~ yet, lol):<br/><br/>&quot;dragon&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: dead<br/>Type: boolean<br/>Value: false // we want our dragon to start off alive (so that we can then fight and kill it), lol<br/><br/>Name: experience<br/>Type: int (integer)<br/>Value: (let's say) 1,000,000,000 (lol, hey, it's a dragon after all, lol)<br/><br/>Name: cash<br/>Type: int<br/>Value: 1,000,000 (dragons sleep on~in mounds of gold coins, lol)<br/><br/>in Scripting this looks like:<br/><br/>dragon.dead=false<br/>dragon.experience=1000000000<br/>dragon.cash=1000000<br/><br/>in Code this looks like:<br/><br/>&lt;object name=&quot;dragon&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>-&gt; &lt;experience type=&quot;int&quot;&gt;1000000000&lt;/experience&gt;<br/>-&gt; &lt;cash type=&quot;int&quot;&gt;1000000&lt;/cash&gt;<br/>-&gt; &lt;fight type=&quot;script&quot;&gt;<br/>-&gt;-&gt; if (dragon.dead=true) {<br/>-&gt;-&gt;-&gt; msg (&quot;the dragon is already dead, silly&quot;)<br/>-&gt;-&gt; } else if (dragon.dead=false) {<br/>-&gt;-&gt;-&gt; if (dragon_slayer_sword.parent=player) { // if the dragon slayer sword is in your (the &quot;player's&quot;) inventory (if you're holding it)<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;you kill the dragon with the dragon slayer sword&quot;)<br/>-&gt;-&gt;-&gt;-&gt; player.experience = player.experience + dragon.experience<br/>-&gt;-&gt;-&gt;-&gt; player.cash = player.cash + dragon.cash<br/>-&gt;-&gt;-&gt;-&gt; dragon.dead=true // this sets &quot;flags&quot; the dragon as being &quot;dead&quot;.<br/>-&gt;-&gt;-&gt; } else {<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;the dragon kills you&quot;)<br/>-&gt;-&gt;-&gt;-&gt; msg (&quot;GAME OVER&quot;)<br/>-&gt;-&gt;-&gt;-&gt; finish // this command~script stops~ends the game<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; &lt;/fight&gt;<br/>-&gt; &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Fight&lt;/displayverbs&gt;<br/>&lt;/object&gt;<br/><br/>&quot;player&quot; (Object) -&gt; Attributes (Tab) -&gt; Attributes -&gt; Add -&gt;<br/><br/>Name: experience<br/>Type: int<br/>Value: 0<br/><br/>Name: cash<br/>Type: int<br/>Value: 0<br/><br/>in Scripting this looks like:<br/><br/>player.experience=0<br/>player.cash=0<br/><br/>in Code this looks like:<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>-&gt; &lt;experience type=&quot;int&quot;&gt;0&lt;/experience&gt;<br/>-&gt; &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>-&gt; &lt;inventory type=&quot;objectlist&quot;&gt;dragon_slayer_sword&lt;/inventory&gt; // I think this is how it looks, but maybe not. Obviously, you'd have to get the dragon slayer sword somewhere in the game and take it, for you to have it in your inventory.<br/>&lt;/object&gt;<br/><br/>----<br/><br/>&lt;object name=&quot;dragon_slayer_sword&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>&lt;/object&gt;",
      "PostDate": "2013-10-26T11:14:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26731",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to do any transaction, we &quot;fake it&quot; with~by changing our attributes' values (you don't want to actually move around &quot;currency&quot; objects like &quot;gold coins&quot; ~ the more you can do with attributes the better ~ though some things are better done with objects, as well):\n\n(this is in extremely simple design as an example, obviously we'd need to add more coding~features to &quot;buying&quot; and &quot;selling&quot;)\n\nshop_owner (Object) -&gt; Verbs (Tab) -&gt; Add -&gt;\n\n&quot;buy&quot; (and repeat: add another verb called) &quot;sell&quot;\n\n------------------------------------\n\nBUYING\n\nplayer.cash = 500\nshop_owner.cash = 1000\nkatana.parent=shop_owner\n\n&quot;player&quot; buying a &quot;katana&quot; that costs 100 &quot;cash&quot; from a &quot;shop_owner&quot;\n\nplayer.cash = player.cash - 100\nshop_owner.cash = shop_owner.cash + 100\nkatana.parent=player\n\nplayer.cash = 500 - 100 = 400\nshop_owner.cash = 1000 + 100 = 1100\nkatana.parent=player\n\n---------------------------------------------------------\n\nSELLING\n\nplayer.cash = 500\nshop_owner.cash = 1000\nkatana.parent=player\n\n&quot;player&quot; selling a &quot;katana&quot; that is worth 100 &quot;cash&quot; to a &quot;shop_owner&quot;\n\nplayer.cash = player.cash + 100\nshop_owner.cash = shop_owner.cash - 100\nkatana.parent=shop_owner\n\nplayer.cash = 500 + 100 = 600\nshop_owner.cash = 1000 - 100 = 900\nkatana.parent=shop_owner",
      "EditableFormat": "bbcode",
      "HTML": "to do any transaction, we &quot;fake it&quot; with~by changing our attributes' values (you don't want to actually move around &quot;currency&quot; objects like &quot;gold coins&quot; ~ the more you can do with attributes the better ~ though some things are better done with objects, as well):<br/><br/>(this is in extremely simple design as an example, obviously we'd need to add more coding~features to &quot;buying&quot; and &quot;selling&quot;)<br/><br/>shop_owner (Object) -&gt; Verbs (Tab) -&gt; Add -&gt;<br/><br/>&quot;buy&quot; (and repeat: add another verb called) &quot;sell&quot;<br/><br/>------------------------------------<br/><br/>BUYING<br/><br/>player.cash = 500<br/>shop_owner.cash = 1000<br/>katana.parent=shop_owner<br/><br/>&quot;player&quot; buying a &quot;katana&quot; that costs 100 &quot;cash&quot; from a &quot;shop_owner&quot;<br/><br/>player.cash = player.cash - 100<br/>shop_owner.cash = shop_owner.cash + 100<br/>katana.parent=player<br/><br/>player.cash = 500 - 100 = 400<br/>shop_owner.cash = 1000 + 100 = 1100<br/>katana.parent=player<br/><br/>---------------------------------------------------------<br/><br/>SELLING<br/><br/>player.cash = 500<br/>shop_owner.cash = 1000<br/>katana.parent=player<br/><br/>&quot;player&quot; selling a &quot;katana&quot; that is worth 100 &quot;cash&quot; to a &quot;shop_owner&quot;<br/><br/>player.cash = player.cash + 100<br/>shop_owner.cash = shop_owner.cash - 100<br/>katana.parent=shop_owner<br/><br/>player.cash = 500 + 100 = 600<br/>shop_owner.cash = 1000 - 100 = 900<br/>katana.parent=shop_owner",
      "PostDate": "2013-10-26T11:57:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26743",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Well, this is how I understand it:\n\nlet's say you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 300 experience.\n\nWhat will now be your displayed:\n\nLevel = 2\nExperience = 0\n\nhow about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 200 experience.\n\nWhat will now be your displayed:\n\nLevel = 1\nExperience = 100\n\nhow about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 500 experience.\n\nWhat will now be your displayed:\n\nLevel = 2\nExperience = 200\n\nHopefully it is right?",
      "EditableFormat": "bbcode",
      "HTML": "Well, this is how I understand it:<br/><br/>let's say you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 300 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = 2<br/>Experience = 0<br/><br/>how about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 200 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = 1<br/>Experience = 100<br/><br/>how about if you have 0 experience, at level 0 (you're just starting the game), and you kill a monster that gives you 500 experience.<br/><br/>What will now be your displayed:<br/><br/>Level = 2<br/>Experience = 200<br/><br/>Hopefully it is right?",
      "PostDate": "2013-10-27T07:41:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26744",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "For those that might have followed - here are the steps for equipping and unequipping weapons. (Credits goes to Jaynabonne and HK)\n\nI am using verbs and have followed the wiki for this: [url:rlpjpn4p]http&#58;//quest5&#46;net/wiki/Simple_Combat_System_%28Advanced%29[/url:rlpjpn4p]\nThe verbs I have is equipl (to equip something in the left hand)\nequipr (to equip something in the right hand)\nequip (to equip a two-handed weapon)\nunequip (to unequip individual items)\n\nNext, I have added some attributes to my player:\nYou can add attributes for HP, Armor, Defense or whatever you want to have show on the right panel under the Status bar.\nI am just sticking to weapon equipping for now, so I have added the following:\nequippedstatusl as a string with the text: Wielding(LHand): nothing\nequippedstatusr as a string with text: Wielding(RHand): nothing\nstatusattributes as a string dictionary with key equippedstatusl and value !, another key of equippedstatusr and value !\n\nThis will show what I have in my hands on the in the Status panel on the right of the game. Initially it will show like:Wielding(LHand): nothing and Wielding(RHand): nothing\n\nNow I create a new object type called 'weapon' (In the left section of the game, you will see 'Advanced'&gt;expand that and you will see 'Object Types')\nOn the new weapon type we need to create attributes and name them the same as the verbs we created for equipping and unequipping them.\nSo my first attribute would be equipl and I set its type to script. Paste the following script in there:\n[code:rlpjpn4p]if (this&#46;parent = game&#46;pov) {\n  if (this&#46;location=&quot;dhand&quot;) {\n    msg (&quot;Please use the command 'equip' for two handed weapons&#46;&quot;)\n  }\n  else if (HasAttribute(game&#46;pov, &quot;equippedt&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedt&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedl = this\n    game&#46;pov&#46;equippedt = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; nothing&quot;\n  }\n  else if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)\n  }\n  else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You already have this weapon equipped in your right hand&quot;)\n  }\n  else if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedl = this\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias\n  }\n  else {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedl = this\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias\n  }\n}\nelse {\n  msg (&quot;You don't have it&#46;&quot;)\n}[/code:rlpjpn4p]\nThe first line just checks if the weapon is in the players inventory. game.pov=player and can also be player.pov instead. If you have more than one player and want the scripts to work on all of them, rather use game.pov\ninventoryverbs is the buttons under an object when you click on them.\nYou will see (as example near) the end of the script in the else statement the following line:\ngame.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;) - This line is important. The weapon that you had equipped, but swapped out for the weapon you currently equip will go back to your inventory and if that line is not present, it will only have the 'Unequip' option.\nThe second one in the else statement:\nthis.inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;) - this will be the options available for the weapon that you have just equipped.\nIf you try to use the command equipl on a two handed weapon, it will give the message: Please use the command 'equip' for two handed weapons.\n\nSo here is the script for equipr:\n[code:rlpjpn4p]if (this&#46;parent = game&#46;pov) {\n  if (this&#46;location=&quot;dhand&quot;) {\n    msg (&quot;Please use the command 'equip' for two handed weapons&#46;&quot;)\n  }\n  else if (HasAttribute(game&#46;pov, &quot;equippedt&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedt&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedr = this\n    game&#46;pov&#46;equippedt = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(RHand)'&#58; nothing&quot;\n  }\n  else if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)\n  }\n  else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You already have this weapon equipped in your right hand&quot;)\n  }\n  else if (null = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedr = this\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; &quot; + this&#46;alias\n  }\n  else {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedr = this\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; &quot; + this&#46;alias\n  }\n}\nelse {\n  msg (&quot;You don't have it&#46;&quot;)\n}[/code:rlpjpn4p]\n\nFor unequipping the weapons and not just swap to another weapon, create the attribute unequip, set it as a script and paste the following code in:\n[code:rlpjpn4p]if (this&#46;parent = game&#46;pov) {\n  if (this&#46;location=&quot;single&quot; and this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedl = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; nothing&quot;\n  }\n  else if (this&#46;location=&quot;single&quot; and this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedr = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; nothing&quot;\n  }\n  else if (this&#46;location=&quot;dhand&quot;) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedr = null\n    game&#46;pov&#46;equippedl = null\n    game&#46;pov&#46;equippedt = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; nothing&quot;\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; nothing&quot;\n  }\n}\nelse {\n  msg (&quot;You don't have it&#46;&quot;)\n}[/code:rlpjpn4p]\n\nAlso for equipping two handed weapons, create the attribute: equip , set it to script and paste in the following:\n[code:rlpjpn4p]if (this&#46;parent = game&#46;pov) {\n  if (this&#46;location=&quot;single&quot;) {\n    msg (&quot;Use the command 'equipl' or 'equipr' for single handed weapons or shields&#46;&quot;)\n  }\n  else if (this = GetAttribute(game&#46;pov, &quot;equippedt&quot;) and this&#46;location=&quot;dhand&quot;) {\n    msg (&quot;You already have this weapon equipped&#46;&quot;)\n  }\n  else if (HasAttribute(game&#46;pov, &quot;equippedr&quot;) and HasAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedt = this\n    game&#46;pov&#46;equippedr = null\n    game&#46;pov&#46;equippedl = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias\n  }\n  else if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;) and null = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedt = this\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias\n  }\n  else if (HasAttribute(game&#46;pov, &quot;equippedl&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedt = this\n    game&#46;pov&#46;equippedl = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias\n  }\n  else if (HasAttribute(game&#46;pov, &quot;equippedr&quot;)) {\n    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)\n    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedt = this\n    game&#46;pov&#46;equippedr = null\n    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)\n    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias\n    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias\n  }\n}\nelse {\n  msg (&quot;You don't have it&#46;&quot;)\n}[/code:rlpjpn4p]\n\nNow when you create a weapon object in your room, add an attribute to it called: location - set the type to string. In the text box type: dhand or single. dhand is for a two-handed weapon and single for a one-handed.\nUnder 'Inherited Types'&gt;press the plus button and press your keyboard up/down arrrow keys to find our object type: weapon and select it.\nForgot to mention: You should also go to your weapon object's 'Object' tab and change the Invntory verbs to include Euipl and Equipr for single handed weapons or Equip for two-handed weapons.\n\nNow you should be able to equip and unequipp weapons in your left or right hand or in your left and right hand or wielding two-handed weapons. Maybe swap one hand out for a shield!\n\nHope this helps - I certainly struggled!",
      "EditableFormat": "bbcode",
      "HTML": "For those that might have followed - here are the steps for equipping and unequipping weapons. (Credits goes to Jaynabonne and HK)<br/><br/>I am using verbs and have followed the wiki for this: <a href=\"http&#58;//quest5&#46;net/wiki/Simple_Combat_System_%28Advanced%29\" rel=\"nofollow\">http&#58;//quest5&#46;net/wiki/Simple_Combat_System_%28Advanced%29</a><br/>The verbs I have is equipl (to equip something in the left hand)<br/>equipr (to equip something in the right hand)<br/>equip (to equip a two-handed weapon)<br/>unequip (to unequip individual items)<br/><br/>Next, I have added some attributes to my player:<br/>You can add attributes for HP, Armor, Defense or whatever you want to have show on the right panel under the Status bar.<br/>I am just sticking to weapon equipping for now, so I have added the following:<br/>equippedstatusl as a string with the text: Wielding(LHand): nothing<br/>equippedstatusr as a string with text: Wielding(RHand): nothing<br/>statusattributes as a string dictionary with key equippedstatusl and value !, another key of equippedstatusr and value !<br/><br/>This will show what I have in my hands on the in the Status panel on the right of the game. Initially it will show like:Wielding(LHand): nothing and Wielding(RHand): nothing<br/><br/>Now I create a new object type called 'weapon' (In the left section of the game, you will see 'Advanced'&gt;expand that and you will see 'Object Types')<br/>On the new weapon type we need to create attributes and name them the same as the verbs we created for equipping and unequipping them.<br/>So my first attribute would be equipl and I set its type to script. Paste the following script in there:<br/><pre><code>if (this&#46;parent = game&#46;pov) {<br/>  if (this&#46;location=&quot;dhand&quot;) {<br/>    msg (&quot;Please use the command 'equip' for two handed weapons&#46;&quot;)<br/>  }<br/>  else if (HasAttribute(game&#46;pov, &quot;equippedt&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedt&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedl = this<br/>    game&#46;pov&#46;equippedt = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; nothing&quot;<br/>  }<br/>  else if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)<br/>  }<br/>  else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your right hand&quot;)<br/>  }<br/>  else if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedl = this<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias<br/>  }<br/>  else {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedl = this<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias<br/>  }<br/>}<br/>else {<br/>  msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/>The first line just checks if the weapon is in the players inventory. game.pov=player and can also be player.pov instead. If you have more than one player and want the scripts to work on all of them, rather use game.pov<br/>inventoryverbs is the buttons under an object when you click on them.<br/>You will see (as example near) the end of the script in the else statement the following line:<br/>game.pov.equippedl.inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;) - This line is important. The weapon that you had equipped, but swapped out for the weapon you currently equip will go back to your inventory and if that line is not present, it will only have the 'Unequip' option.<br/>The second one in the else statement:<br/>this.inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;) - this will be the options available for the weapon that you have just equipped.<br/>If you try to use the command equipl on a two handed weapon, it will give the message: Please use the command 'equip' for two handed weapons.<br/><br/>So here is the script for equipr:<br/><pre><code>if (this&#46;parent = game&#46;pov) {<br/>  if (this&#46;location=&quot;dhand&quot;) {<br/>    msg (&quot;Please use the command 'equip' for two handed weapons&#46;&quot;)<br/>  }<br/>  else if (HasAttribute(game&#46;pov, &quot;equippedt&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedt&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedr = this<br/>    game&#46;pov&#46;equippedt = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(LHand)'&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding'(RHand)'&#58; nothing&quot;<br/>  }<br/>  else if (this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your left hand&#46;&quot;)<br/>  }<br/>  else if (this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You already have this weapon equipped in your right hand&quot;)<br/>  }<br/>  else if (null = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedr = this<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; &quot; + this&#46;alias<br/>  }<br/>  else {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedr = this<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding'(RHand)'&#58; &quot; + this&#46;alias<br/>  }<br/>}<br/>else {<br/>  msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/><br/>For unequipping the weapons and not just swap to another weapon, create the attribute unequip, set it as a script and paste the following code in:<br/><pre><code>if (this&#46;parent = game&#46;pov) {<br/>  if (this&#46;location=&quot;single&quot; and this = GetAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedl = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; nothing&quot;<br/>  }<br/>  else if (this&#46;location=&quot;single&quot; and this = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedr = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; nothing&quot;<br/>  }<br/>  else if (this&#46;location=&quot;dhand&quot;) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedt&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedr = null<br/>    game&#46;pov&#46;equippedl = null<br/>    game&#46;pov&#46;equippedt = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Equip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; nothing&quot;<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; nothing&quot;<br/>  }<br/>}<br/>else {<br/>  msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/><br/>Also for equipping two handed weapons, create the attribute: equip , set it to script and paste in the following:<br/><pre><code>if (this&#46;parent = game&#46;pov) {<br/>  if (this&#46;location=&quot;single&quot;) {<br/>    msg (&quot;Use the command 'equipl' or 'equipr' for single handed weapons or shields&#46;&quot;)<br/>  }<br/>  else if (this = GetAttribute(game&#46;pov, &quot;equippedt&quot;) and this&#46;location=&quot;dhand&quot;) {<br/>    msg (&quot;You already have this weapon equipped&#46;&quot;)<br/>  }<br/>  else if (HasAttribute(game&#46;pov, &quot;equippedr&quot;) and HasAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedt = this<br/>    game&#46;pov&#46;equippedr = null<br/>    game&#46;pov&#46;equippedl = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias<br/>  }<br/>  else if (null = GetAttribute(game&#46;pov, &quot;equippedl&quot;) and null = GetAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedt = this<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias<br/>  }<br/>  else if (HasAttribute(game&#46;pov, &quot;equippedl&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedl&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedl&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedt = this<br/>    game&#46;pov&#46;equippedl = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias<br/>  }<br/>  else if (HasAttribute(game&#46;pov, &quot;equippedr&quot;)) {<br/>    msg (&quot;You put away your &quot; + game&#46;pov&#46;equippedr&#46;alias + &quot; and draw your &quot; + this&#46;alias + &quot;&#46;&quot;)<br/>    game&#46;pov&#46;equippedr&#46;inventoryverbs = Split (&quot;Look at;Drop;Equipl;Equipr&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedt = this<br/>    game&#46;pov&#46;equippedr = null<br/>    this&#46;inventoryverbs = Split (&quot;Look at;Drop;Unequip&quot;, &quot;;&quot;)<br/>    game&#46;pov&#46;equippedstatusl = &quot;Wielding(LHand)&#58; &quot; + this&#46;alias<br/>    game&#46;pov&#46;equippedstatusr = &quot;Wielding(RHand)&#58; &quot; + this&#46;alias<br/>  }<br/>}<br/>else {<br/>  msg (&quot;You don't have it&#46;&quot;)<br/>}</code></pre><br/><br/>Now when you create a weapon object in your room, add an attribute to it called: location - set the type to string. In the text box type: dhand or single. dhand is for a two-handed weapon and single for a one-handed.<br/>Under 'Inherited Types'&gt;press the plus button and press your keyboard up/down arrrow keys to find our object type: weapon and select it.<br/>Forgot to mention: You should also go to your weapon object's 'Object' tab and change the Invntory verbs to include Euipl and Equipr for single handed weapons or Equip for two-handed weapons.<br/><br/>Now you should be able to equip and unequipp weapons in your left or right hand or in your left and right hand or wielding two-handed weapons. Maybe swap one hand out for a shield!<br/><br/>Hope this helps - I certainly struggled!",
      "PostDate": "2013-10-27T08:37:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26745",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Hey HK...I was so busy typing the previous post that I haven't noticed all the other scripts you posted - thanks a bunch. I fogot about shops...lol\n\nI had a look at your experience formula - works a treat. I see the function is being called from a turn script.\nFor now, I am going to try and construct my combat system.(I will include your experience formula...thx) After that, I am going to do equipping armor and magic items like rings and amulets. You'll be happy to know that I am busy with a library <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> But just for adding tabs for types I am going to have. (Weapons, armor, magic, Enemy) I am sure it will save a bunch of time setting the attributes on objects.\n\nThanx again",
      "EditableFormat": "bbcode",
      "HTML": "Hey HK...I was so busy typing the previous post that I haven't noticed all the other scripts you posted - thanks a bunch. I fogot about shops...lol<br/><br/>I had a look at your experience formula - works a treat. I see the function is being called from a turn script.<br/>For now, I am going to try and construct my combat system.(I will include your experience formula...thx) After that, I am going to do equipping armor and magic items like rings and amulets. You'll be happy to know that I am busy with a library <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> But just for adding tabs for types I am going to have. (Weapons, armor, magic, Enemy) I am sure it will save a bunch of time setting the attributes on objects.<br/><br/>Thanx again",
      "PostDate": "2013-10-27T08:43:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26747",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you got my leveling equation understood perfectly, you're picking up this stuff fast!\n\n(trouble-shooting to get your code to work is fun... when it's just a small stupid mistake, it's a &quot;love-hate&quot; emotion... you feel great+relieved that you understood the coding correctly, but you hate how much time it took to find that #$%@*&amp; small stupid mistake or typo or missing character... lol. Now if your code is totally wrong and that's why it's not working, than you got a big problem as you got to still learn the coding, though the cause of the errors is quickly obvious, if that's any comfort, lol)\n\n------------\n\nsince you seem to be fine with working with the code, if you don't already know, this (free) software is very helpful for writing, reading, and fixing code:\n\n<!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m -->\n\nonce got the program up, all you got to do is at the top, on the bar menu, drop down the &quot;language&quot; choice, and choose &quot;XML&quot;.\n\n-------------------------\n\nyour work is coming along well, it looks good!\n\nat some point, you might want to look at Chase's Wearables Library, as it's a much more clean design for people doing a more complex equipment~equipping system (though it uses a bit more complicated coding to understand). Instead of using 3 Verbs, Chase instead uses Commands+Functions+Parameters, and a stringlist on his &quot;equipment&quot; Object Type:\n\n&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;&lt;/equipment_slots&gt;\n\nas this enables you to define what &quot;slots it uses up&quot;:\n\none_handed_sword: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand&lt;/equipment_slots&gt;\nshield: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand&lt;/equipment_slots&gt;\ntwo_handed_axe: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand;left_hand&lt;/equipment_slots&gt;\n\nyou can then do~use the &quot;if&quot; conditionals to determine whether you can equip an equipment item or not.\n\nand Chase offers even further features, with the use of: &lt;equipment_layer type=&quot;int&quot;&gt;&lt;/equipment_layer&gt; , as you can't equip clothes if you're equipped with armor (you got to remove your armor before you can equip your clothes, and then you can equip your armor back on, now having equipped both your clothes and armor to the same &quot;slot&quot; location. the same is true for unequiping, you can't remove your clothes if still have your armor on over them. this is done by the &quot;layer&quot; number amount, and through &quot;greater~lesser than and~or equal to comparison of the layer number amounts of the two pieces of equipment items&quot;.\n\n--------\n\nPixie's Simple Combat Library (posted as a wiki page that you used), was made for those who want a bit more of a simplified (ie a NON-turn-based) combat system (you're moving into a more advanced combat system, as you can probably see, you used a lot of code to do what you wanted. I too used a lot of code to make my combat coding... and then Pertex' &quot;fixes~cleans&quot; it up for me, and it's like half the size of mine and easier to understand... my mouth dropped... lol. Just getting the code to work is awesome for a noob at coding like me, but it's really messy and poor coding work... making your coding really professional probably takes years of practice~experience~knowledge of coding, sighs. I'm trying though... to learn, slowly, hehe). Most code~libraries~guides you find on this site are Pixie's doing, a lot of thanks goes to him~her just for the sheer amount of good code that he~she has made available for us. Though, Pixie's not the only one, there's lots of people helping out, though Pixie, does have the most content up ~ at least as I've noticed~perceived anyways. Pixie can code really well, doing advanced coding and~or simplified coding for whatever we may want~need.\n\nPertex' equipment system, I tried to understand it but wasn't able to at the time (maybe now I can understand it), and I was more interested in getting a combat system working, I could learn equipment later on, like I'm doing now... lol. Soon as I find time, I'm going to tackle understanding Pertex' equipment system and learn it!",
      "EditableFormat": "bbcode",
      "HTML": "you got my leveling equation understood perfectly, you're picking up this stuff fast!<br/><br/>(trouble-shooting to get your code to work is fun... when it's just a small stupid mistake, it's a &quot;love-hate&quot; emotion... you feel great+relieved that you understood the coding correctly, but you hate how much time it took to find that #$%@*&amp; small stupid mistake or typo or missing character... lol. Now if your code is totally wrong and that's why it's not working, than you got a big problem as you got to still learn the coding, though the cause of the errors is quickly obvious, if that's any comfort, lol)<br/><br/>------------<br/><br/>since you seem to be fine with working with the code, if you don't already know, this (free) software is very helpful for writing, reading, and fixing code:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://notepad-plus-plus.org/\">http://notepad-plus-plus.org/</a><!-- m --><br/><br/>once got the program up, all you got to do is at the top, on the bar menu, drop down the &quot;language&quot; choice, and choose &quot;XML&quot;.<br/><br/>-------------------------<br/><br/>your work is coming along well, it looks good!<br/><br/>at some point, you might want to look at Chase's Wearables Library, as it's a much more clean design for people doing a more complex equipment~equipping system (though it uses a bit more complicated coding to understand). Instead of using 3 Verbs, Chase instead uses Commands+Functions+Parameters, and a stringlist on his &quot;equipment&quot; Object Type:<br/><br/>&lt;equipment_slots type=&quot;simplestringlist&quot;&gt;&lt;/equipment_slots&gt;<br/><br/>as this enables you to define what &quot;slots it uses up&quot;:<br/><br/>one_handed_sword: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand&lt;/equipment_slots&gt;<br/>shield: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;left_hand&lt;/equipment_slots&gt;<br/>two_handed_axe: &lt;equipment_slots type=&quot;simplestringlist&quot;&gt;right_hand;left_hand&lt;/equipment_slots&gt;<br/><br/>you can then do~use the &quot;if&quot; conditionals to determine whether you can equip an equipment item or not.<br/><br/>and Chase offers even further features, with the use of: &lt;equipment_layer type=&quot;int&quot;&gt;&lt;/equipment_layer&gt; , as you can't equip clothes if you're equipped with armor (you got to remove your armor before you can equip your clothes, and then you can equip your armor back on, now having equipped both your clothes and armor to the same &quot;slot&quot; location. the same is true for unequiping, you can't remove your clothes if still have your armor on over them. this is done by the &quot;layer&quot; number amount, and through &quot;greater~lesser than and~or equal to comparison of the layer number amounts of the two pieces of equipment items&quot;.<br/><br/>--------<br/><br/>Pixie's Simple Combat Library (posted as a wiki page that you used), was made for those who want a bit more of a simplified (ie a NON-turn-based) combat system (you're moving into a more advanced combat system, as you can probably see, you used a lot of code to do what you wanted. I too used a lot of code to make my combat coding... and then Pertex' &quot;fixes~cleans&quot; it up for me, and it's like half the size of mine and easier to understand... my mouth dropped... lol. Just getting the code to work is awesome for a noob at coding like me, but it's really messy and poor coding work... making your coding really professional probably takes years of practice~experience~knowledge of coding, sighs. I'm trying though... to learn, slowly, hehe). Most code~libraries~guides you find on this site are Pixie's doing, a lot of thanks goes to him~her just for the sheer amount of good code that he~she has made available for us. Though, Pixie's not the only one, there's lots of people helping out, though Pixie, does have the most content up ~ at least as I've noticed~perceived anyways. Pixie can code really well, doing advanced coding and~or simplified coding for whatever we may want~need.<br/><br/>Pertex' equipment system, I tried to understand it but wasn't able to at the time (maybe now I can understand it), and I was more interested in getting a combat system working, I could learn equipment later on, like I'm doing now... lol. Soon as I find time, I'm going to tackle understanding Pertex' equipment system and learn it!",
      "PostDate": "2013-10-27T10:32:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26748",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Functions, Commands, Verbs, and Scripts are activated by something (ie they're NOT &quot;always running&quot;). Whereas...\n\nTurnscripts, Timers, and special Verbs~Scripts: &lt;changedAttribute type &quot;script&quot;&gt;&lt;/changedAttribute&gt;, ARE &quot;always running&quot;.\n\nSo, they're very useful !!! (such as: updating the display, ie status attributes, of your altered &quot;stat&quot; attributes, or when you implement &quot;game turns&quot; itself and want &quot;stuff&quot; to happen, and in what order, on each~every such &quot;game turn&quot;, and probably many more uses too).\n\nhere's the wiki for the &quot;changed&quot; Verb~Script&#058;\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Running_a_script_when_an_attribute_changes\">http://quest5.net/wiki/Running_a_script ... te_changes</a><!-- m -->\n\nif you need help understanding it, ask Jaynabonnie, he can explain it well.\n\nI can explain and help you with the Turnscripts, but I'm still a little shaky on the &quot;changed&quot; Verb-Scripts, but I can try to help you if you need it.",
      "EditableFormat": "bbcode",
      "HTML": "Functions, Commands, Verbs, and Scripts are activated by something (ie they're NOT &quot;always running&quot;). Whereas...<br/><br/>Turnscripts, Timers, and special Verbs~Scripts: &lt;changedAttribute type &quot;script&quot;&gt;&lt;/changedAttribute&gt;, ARE &quot;always running&quot;.<br/><br/>So, they're very useful !!! (such as: updating the display, ie status attributes, of your altered &quot;stat&quot; attributes, or when you implement &quot;game turns&quot; itself and want &quot;stuff&quot; to happen, and in what order, on each~every such &quot;game turn&quot;, and probably many more uses too).<br/><br/>here's the wiki for the &quot;changed&quot; Verb~Script&#058;<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Running_a_script_when_an_attribute_changes\">http://quest5.net/wiki/Running_a_script ... te_changes</a><!-- m --><br/><br/>if you need help understanding it, ask Jaynabonnie, he can explain it well.<br/><br/>I can explain and help you with the Turnscripts, but I'm still a little shaky on the &quot;changed&quot; Verb-Scripts, but I can try to help you if you need it.",
      "PostDate": "2013-10-27T10:50:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26750",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Yeah...that is probably the fist thing I looked at was wearables from Chase. I am still looking  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> \nIt would suite my needs for equipping stuff better. (Armor is in the pipeline for me now)\nI have implemented a few commands to call scripts, just for testing.\n\nI guess that I still need a bit clarity on parameters. One day soon I hope.\n\nOh...and I am using notepad ++  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Yeah...that is probably the fist thing I looked at was wearables from Chase. I am still looking  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> <br/>It would suite my needs for equipping stuff better. (Armor is in the pipeline for me now)<br/>I have implemented a few commands to call scripts, just for testing.<br/><br/>I guess that I still need a bit clarity on parameters. One day soon I hope.<br/><br/>Oh...and I am using notepad ++  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-10-27T12:31:25+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26753",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "parameters is merely a method to transfer stuff from one function to another function (and thus be able to use it in~for this next function). Though it is a bit complicated at first to understand, and it's range of uses is vast, but it's actually is not as difficult as it'll seem at first. Think of parameters as a video~computer game's &quot;save&quot; and &quot;load&quot; slots, lol. You &quot;save&quot; the data you want in function_1 and then &quot;load&quot; that data in function_2 for use in function_2.\n\nhere's an example (using concatenation, which is a bit confusing... at least still for me anyways, but it shows some of how parameters work):\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Function_element\">http://quest5.net/wiki/Function_element</a><!-- m -->\n\n------\n\nfor this example, I'm just using an integer amount for my parameters, but you can use &quot;text&quot; (Strings), and even Objects too (and maybe other stuff as well). I'm not that knowledgeable on parameters myself, so, this here is my limited knowledge of them, lol.\n\nFunction_or_Command_or_Verb_or_Turnscript_1:\n\nget input (you type in 1)\nA = result\nget input (you type in 2)\nB = result\nFunction_2 (A, B)\n\nA (=1) -&gt; red (=1)\nB (=2) -&gt; blue (=2)\n\nFunction_2 (red, blue):\n\nC = 3 = red (=1) + blue (=2)\nD = 2 = red (=1) * blue (=2)\nFunction_3 (C, D)\n\nC (=3) -&gt; up (=3)\nD (=2) -&gt; down (=2)\n\nFunction_3 (up, down)\n\nE = 1 = up (=3) - down (=2)\nmsg (E)\n\nthe game player then sees on his~her screen: 1\n\n~OR~\n\nFunction_or_Command_or_Verb_or_Turnscript_1:\n\nget input (you type in 1)\nA = result\nget input (you type in 2)\nB = result\nFunction_2 (A, B)\n\nA (=1) -&gt; A (=1)\nB (=2) -&gt; B (=2)\n\nFunction_2 (A, B):\n\na = 3 = A (=1) + B (=2)\nb = 2 = A (=1) * B (=2)\nFunction_3 (a, b)\n\na (=3) -&gt; A (=3)\nb (=2) -&gt; B (=2)\n\nFunction_3 (A, B)\n\nC = 1 = A (=3) - B (=2)\nmsg (C)\n\nthe game player then sees on his~her screen: 1\n\n-----------\n\nso hopefully, you can see that in each &quot;next&quot; function, you can rename your &quot;parameter_to_variable&quot; for use in that &quot;next&quot; function or you can keep the same name too (NOT renaming them).",
      "EditableFormat": "bbcode",
      "HTML": "parameters is merely a method to transfer stuff from one function to another function (and thus be able to use it in~for this next function). Though it is a bit complicated at first to understand, and it's range of uses is vast, but it's actually is not as difficult as it'll seem at first. Think of parameters as a video~computer game's &quot;save&quot; and &quot;load&quot; slots, lol. You &quot;save&quot; the data you want in function_1 and then &quot;load&quot; that data in function_2 for use in function_2.<br/><br/>here's an example (using concatenation, which is a bit confusing... at least still for me anyways, but it shows some of how parameters work):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Function_element\">http://quest5.net/wiki/Function_element</a><!-- m --><br/><br/>------<br/><br/>for this example, I'm just using an integer amount for my parameters, but you can use &quot;text&quot; (Strings), and even Objects too (and maybe other stuff as well). I'm not that knowledgeable on parameters myself, so, this here is my limited knowledge of them, lol.<br/><br/>Function_or_Command_or_Verb_or_Turnscript_1:<br/><br/>get input (you type in 1)<br/>A = result<br/>get input (you type in 2)<br/>B = result<br/>Function_2 (A, B)<br/><br/>A (=1) -&gt; red (=1)<br/>B (=2) -&gt; blue (=2)<br/><br/>Function_2 (red, blue):<br/><br/>C = 3 = red (=1) + blue (=2)<br/>D = 2 = red (=1) * blue (=2)<br/>Function_3 (C, D)<br/><br/>C (=3) -&gt; up (=3)<br/>D (=2) -&gt; down (=2)<br/><br/>Function_3 (up, down)<br/><br/>E = 1 = up (=3) - down (=2)<br/>msg (E)<br/><br/>the game player then sees on his~her screen: 1<br/><br/>~OR~<br/><br/>Function_or_Command_or_Verb_or_Turnscript_1:<br/><br/>get input (you type in 1)<br/>A = result<br/>get input (you type in 2)<br/>B = result<br/>Function_2 (A, B)<br/><br/>A (=1) -&gt; A (=1)<br/>B (=2) -&gt; B (=2)<br/><br/>Function_2 (A, B):<br/><br/>a = 3 = A (=1) + B (=2)<br/>b = 2 = A (=1) * B (=2)<br/>Function_3 (a, b)<br/><br/>a (=3) -&gt; A (=3)<br/>b (=2) -&gt; B (=2)<br/><br/>Function_3 (A, B)<br/><br/>C = 1 = A (=3) - B (=2)<br/>msg (C)<br/><br/>the game player then sees on his~her screen: 1<br/><br/>-----------<br/><br/>so hopefully, you can see that in each &quot;next&quot; function, you can rename your &quot;parameter_to_variable&quot; for use in that &quot;next&quot; function or you can keep the same name too (NOT renaming them).",
      "PostDate": "2013-10-28T00:06:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26783",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Thanks for the explanation HK <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> \n\nSo here is what I have decided to do for my first game while I learn the rest...\nI am going to use these equip scripts discussed here for my weapons, the Experience formula you added here HK, the wearables library from Chase, Journal library from Pixie as well as his/her shop library.\n\nThe wearables library is precisely what I need for my armor, amulets, rings and so forth so why reinvent? - thx Chase!\nI have already changed our equip script here for adding the bonuses from the various weapons available to me. My combat system is a bit shaky and not yet polished (very messy), but simple.\n\nWhile I'm testing and implementing all of these libraries and some of my own, I am already thinking of how I will handle learning abillities/choose some abilities - for this I will start a new thread should I struggle. I figure that it should be similar to learning spells in the wiki. \nI also have to go through grouping of rooms; since it might answer my question - Can you have multiple exits to the East - like having a hallway with lots of rooms to the one side?\nApart from that, it is crazy at work - so sorry for only posting back now.\n\nThis will surely be a challenge; since English is not my first language, but I would like to take this opportunity in thanking everyone for their help. (HK and Jaynabonne in particular)",
      "EditableFormat": "bbcode",
      "HTML": "Thanks for the explanation HK <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> <br/><br/>So here is what I have decided to do for my first game while I learn the rest...<br/>I am going to use these equip scripts discussed here for my weapons, the Experience formula you added here HK, the wearables library from Chase, Journal library from Pixie as well as his/her shop library.<br/><br/>The wearables library is precisely what I need for my armor, amulets, rings and so forth so why reinvent? - thx Chase!<br/>I have already changed our equip script here for adding the bonuses from the various weapons available to me. My combat system is a bit shaky and not yet polished (very messy), but simple.<br/><br/>While I'm testing and implementing all of these libraries and some of my own, I am already thinking of how I will handle learning abillities/choose some abilities - for this I will start a new thread should I struggle. I figure that it should be similar to learning spells in the wiki. <br/>I also have to go through grouping of rooms; since it might answer my question - Can you have multiple exits to the East - like having a hallway with lots of rooms to the one side?<br/>Apart from that, it is crazy at work - so sorry for only posting back now.<br/><br/>This will surely be a challenge; since English is not my first language, but I would like to take this opportunity in thanking everyone for their help. (HK and Jaynabonne in particular)",
      "PostDate": "2013-10-31T19:46:46+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26786",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm still not that knowledgeable about the EXITS myself, in how they work and~or what you can (and can't do) with them. I think you can set up multiple exits in the same direction (as I think the &quot;compass directions&quot; are arbitrary ~ as the &quot;compass directions&quot; are merely OBJECT TYPES, which you can see by doing in the GUI~Editor: left side of the screen ~ the &quot;tree of stuff&quot;: Filter -&gt; Show Library Elements -&gt; find the stuff on it ~ left side of screen ~ &quot;the tree of stuff&quot; ~ light grey text).\n\nYou can, also not even use EXITS at all, you can move to any room you want via direct scripting, no need for the Exits at all.\n\nhere is a game file (as attachment at bottom) that you can test, or you can copy and paste this code below, into a new game file of your own:\n\nType in: help\nType in: explore\nType in: travel\n\n[code:2q9mnsri]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;homeland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;grassland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;plains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;desert&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;tundra&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;swampland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;mountains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;forest&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;wasteland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;coastland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;hills&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;help_command&quot;&gt;\n    &lt;pattern&gt;help&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  help_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;explore_command&quot;&gt;\n    &lt;pattern&gt;explore&lt;/pattern&gt;\n    &lt;script&gt;\n      explore_function\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;travel_command&quot;&gt;\n    &lt;pattern&gt;travel&lt;/pattern&gt;\n\t&lt;script&gt;\n\t  travel_function\n\t&lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;\n    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;\n    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;\n\t  &lt;item key=&quot;grassland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)\n\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;plains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)\n\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;desert_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)\n\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;tundra_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)\n\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;swampland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)\n\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;forest_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)\n\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;mountains_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)\n\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;hills_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)\n\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)\n\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t  &lt;item key=&quot;coastland_discovery&quot;&gt;\n\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)\n\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)\n\t  &lt;/item&gt;\n\t&lt;/homeland_events_script_dictionary&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=&quot;global_turnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      game&#46;turns = game&#46;turns + 1\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=&quot;help_function&quot;&gt;\n    msg (&quot;Type 'explore' to explore your area&#46;&quot;)\n\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    switch (game&#46;pov&#46;parent) {\n\t  case (homeland) {\n\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1\n\t\tif (result_1 &gt;= 0) {\n          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))\n          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))\n\t\t  on ready {\n\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {\n\t\t      if (result_2 = item_x) {\n\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)\n\t\t\t  }\n\t\t\t}\n\t\t  }\n\t\t} else {\n\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)\n\t\t}\n\t  }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;travel_function&quot;&gt;\n    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {\n\t  if (not game&#46;pov&#46;parent = GetObject (result)) {\n\t    game&#46;pov&#46;parent = GetObject (result)\n\t  } else {\n\t    msg (&quot;You are already at this area&#46;&quot;)\n\t\task (&quot;Try again?&quot;) {\n\t\t  if (result=true) {\n\t\t    travel_function\n\t\t  } else {\n\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)\n\t\t  }\n\t\t}\n\t  }\n\t}\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:2q9mnsri]\n\n------------------------\n\nalso, if you're interested, Jayne created a 3D random map~room generator!, I think it should be in the &quot;libraries and free code&quot; forum board, if you can't find it, let me know, and I'll find it's location for you. If you want something that isn't random, Jayne could probably help you with designing map~room design, how and what can be done with Exits, or with scripting.\n\n-----------------------\n.",
      "EditableFormat": "bbcode",
      "HTML": "I'm still not that knowledgeable about the EXITS myself, in how they work and~or what you can (and can't do) with them. I think you can set up multiple exits in the same direction (as I think the &quot;compass directions&quot; are arbitrary ~ as the &quot;compass directions&quot; are merely OBJECT TYPES, which you can see by doing in the GUI~Editor: left side of the screen ~ the &quot;tree of stuff&quot;: Filter -&gt; Show Library Elements -&gt; find the stuff on it ~ left side of screen ~ &quot;the tree of stuff&quot; ~ light grey text).<br/><br/>You can, also not even use EXITS at all, you can move to any room you want via direct scripting, no need for the Exits at all.<br/><br/>here is a game file (as attachment at bottom) that you can test, or you can copy and paste this code below, into a new game file of your own:<br/><br/>Type in: help<br/>Type in: explore<br/>Type in: travel<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;homeland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;grassland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;plains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;desert&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;tundra&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;swampland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;mountains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;forest&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;wasteland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;coastland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;hills&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;help_command&quot;&gt;<br/>    &lt;pattern&gt;help&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  help_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;explore_command&quot;&gt;<br/>    &lt;pattern&gt;explore&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      explore_function<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;travel_command&quot;&gt;<br/>    &lt;pattern&gt;travel&lt;/pattern&gt;<br/>\t&lt;script&gt;<br/>\t  travel_function<br/>\t&lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>\t&lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;<br/>    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;<br/>    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>\t  &lt;item key=&quot;grassland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;grassland&quot;)<br/>\t\tmsg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;plains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;plains&quot;)<br/>\t\tmsg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;desert_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;desert&quot;)<br/>\t\tmsg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;tundra_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;tundra&quot;)<br/>\t\tmsg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;swampland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;swampland&quot;)<br/>\t\tmsg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;forest_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;forest&quot;)<br/>\t\tmsg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;mountains_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;mountains&quot;)<br/>\t\tmsg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;hills_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;hills&quot;)<br/>\t\tmsg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;wasteland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)<br/>\t\tmsg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t  &lt;item key=&quot;coastland_discovery&quot;&gt;<br/>\t    list add (data_object&#46;travel_string_list, &quot;coastland&quot;)<br/>\t\tmsg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)<br/>\t  &lt;/item&gt;<br/>\t&lt;/homeland_events_script_dictionary&gt;<br/>  &lt;/object&gt;<br/>  &lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      game&#46;turns = game&#46;turns + 1<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;function name=&quot;help_function&quot;&gt;<br/>    msg (&quot;Type 'explore' to explore your area&#46;&quot;)<br/>\tmsg (&quot;Type 'travel' to travel to different areas&#46;&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    switch (game&#46;pov&#46;parent) {<br/>\t  case (homeland) {<br/>\t\tresult_1 = ListCount (data_object&#46;homeland_events_string_list) - 1<br/>\t\tif (result_1 &gt;= 0) {<br/>          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))<br/>          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))<br/>\t\t  on ready {<br/>\t\t    foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {<br/>\t\t      if (result_2 = item_x) {<br/>\t\t\t    list remove (data_object&#46;homeland_events_string_list, result_2)<br/>\t\t\t  }<br/>\t\t\t}<br/>\t\t  }<br/>\t\t} else {<br/>\t\t  msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)<br/>\t\t}<br/>\t  }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;travel_function&quot;&gt;<br/>    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {<br/>\t  if (not game&#46;pov&#46;parent = GetObject (result)) {<br/>\t    game&#46;pov&#46;parent = GetObject (result)<br/>\t  } else {<br/>\t    msg (&quot;You are already at this area&#46;&quot;)<br/>\t\task (&quot;Try again?&quot;) {<br/>\t\t  if (result=true) {<br/>\t\t    travel_function<br/>\t\t  } else {<br/>\t\t    msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)<br/>\t\t  }<br/>\t\t}<br/>\t  }<br/>\t}<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/>------------------------<br/><br/>also, if you're interested, Jayne created a 3D random map~room generator!, I think it should be in the &quot;libraries and free code&quot; forum board, if you can't find it, let me know, and I'll find it's location for you. If you want something that isn't random, Jayne could probably help you with designing map~room design, how and what can be done with Exits, or with scripting.<br/><br/>-----------------------<br/><div><a href=\"/attachment/763\">HK Testing Travel.aslx</a></div>",
      "PostDate": "2013-11-01T01:22:30+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26794",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Aah, yes! That answers my question perfectly. Thank you.\n\nNot that I want to change the topic or abuse your kindness - but I have spotted in a previous post about restoring health - it was one of your replies HK, so I thought I will ask...\n\nI can make a potion that restore health and just add a script&#058; player.health = player.health + 20 for example - but I will need restrictions. Fine...I can make a function that looks like this:\n[code:j4n63b84]if (player&#46;health = player&#46;max_health) {\n  msg (&quot;You are already at maximum health!&quot;)\n}\nelse if (player&#46;health &lt; player&#46;max_health) {\n  player&#46;health = player&#46;health + object&#46;health\n}\nelse {\n  player&#46;health = player&#46;max_health\n}[/code:j4n63b84]\n\nBut the thing is: How do I reference the health potion that I drank from; since object.health clearly won't work.\n\nThank you in advance again.",
      "EditableFormat": "bbcode",
      "HTML": "Aah, yes! That answers my question perfectly. Thank you.<br/><br/>Not that I want to change the topic or abuse your kindness - but I have spotted in a previous post about restoring health - it was one of your replies HK, so I thought I will ask...<br/><br/>I can make a potion that restore health and just add a script&#058; player.health = player.health + 20 for example - but I will need restrictions. Fine...I can make a function that looks like this:<br/><pre><code>if (player&#46;health = player&#46;max_health) {<br/>  msg (&quot;You are already at maximum health!&quot;)<br/>}<br/>else if (player&#46;health &lt; player&#46;max_health) {<br/>  player&#46;health = player&#46;health + object&#46;health<br/>}<br/>else {<br/>  player&#46;health = player&#46;max_health<br/>}</code></pre><br/><br/>But the thing is: How do I reference the health potion that I drank from; since object.health clearly won't work.<br/><br/>Thank you in advance again.",
      "PostDate": "2013-11-03T05:26:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26796",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "an example using a &quot;drink&quot; Verb for your &quot;50_hit_point_potion&quot; Object and a Command+Function too:\n\n[code:2xnbn2td]&lt;command name=&quot;drink_command&quot;&gt;\n  &lt;pattern&gt;drink #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    drink_function (player, text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;drink_function&quot; parameters=&quot;self, text&quot;&gt;&lt;!&#91;CDATA&#91;\n  item_x = GetObject (text)\n  if (item_x = null) {\n    foreach (object_x, ScopeInventory ()) {\n      if (object_x&#46;alias = text or object_x&#46;alt = text)\n        item_x = object_x\n      }\n    }\n  }\n  if (item_x = null) {\n    msg (&quot;you don't have that item in your inventory&quot;)\n  } else if (GetString (item_x, &quot;item_type&quot;) = hit_points_potion) {\n    invoke (item_x&#46;drink)\n    // or&#58;\n    // if (self&#46;current_hit_points = self&#46;maximum_hit_points) {\n      // msg (&quot;you already have full hit_points&quot;)\n    // } else {\n      // self&#46;current_hit_points = self&#46;current_hit_points + item_x&#46;hit_points\n      // msg (&quot;you drink &quot; + item_x&#46;alias + &quot;, restoring your hit_points by &quot; + item_x&#46;hit_points)\n      // if (self&#46;current_hit_points &gt; self&#46;maximum_hit_points) {\n        // self&#46;current_hit_points = self&#46;maximum_hit_points\n      // }\n    // }\n  } // else if&#46;&#46;&#46;\n    // blah scripts\n  } else {\n    msg (&quot;you can't drink this item&quot;)\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;object name=&quot;50_hit_point_potion&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;take /&gt;\n  &lt;alias&gt;50_hp_pot&lt;/alias&gt;\n  &lt;alt type=&quot;simplestringlist&quot;&gt;pot;hppot;pothp;50hppot;pot50hp;pothp50;hp;50hp;hp50&lt;/alt&gt; // or whatever is it's correct syntax, meh\n  &lt;hit_points type=&quot;int&quot;&gt;50&lt;/hit_points&gt;\n  &lt;item_type type=&quot;string&quot;&gt;hit_points_potion&lt;/item_type&gt;\n  &lt;drink type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (player&#46;current_hit_points=player&#46;maximum_hit_points) {\n      msg (&quot;you already have full hit_points&quot;)\n    } else {\n      player&#46;current_hit_points = player&#46;current_hit_points + 50_hit_point_potion&#46;hit_points\n      msg (&quot;you restore your hit_points by 50&quot;)\n      if (player&#46;current_hit_points &gt; player&#46;maximum_hit_points) {\n        player&#46;current_hit_points = player&#46;maximum_hit_points\n      }\n    }\n  &#93;&#93;&gt;&lt;/drink&gt;\n  &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Take&lt;/displayverbs&gt;\n  &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Drop;Drink&lt;/inventoryverbs&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;inherit name=&quot;editor_object&quot; /&gt;\n  &lt;inherit name=&quot;editor_player&quot; /&gt;\n  &lt;current_hit_points type=&quot;int&quot;&gt;500&lt;/current_hit_points&gt;\n  &lt;maximum_hit_points type=&quot;int&quot;&gt;999&lt;/maximum_hit_points&gt;\n  &lt;hit_points type=&quot;string&quot;&gt;0/0&lt;/hit_points&gt;\n  &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n  &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;hit_points =!;turns =&lt;/statusattributes&gt;\n&lt;/object&gt;\n\n&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    player&#46;hit_points = &quot;HP&#58; &quot; + player&#46;current_hit_points + &quot;/&quot; + player&#46;maximum_hit_points\n    player&#46;turns = player&#46;turns + 1\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:2xnbn2td]",
      "EditableFormat": "bbcode",
      "HTML": "an example using a &quot;drink&quot; Verb for your &quot;50_hit_point_potion&quot; Object and a Command+Function too:<br/><br/><pre><code>&lt;command name=&quot;drink_command&quot;&gt;<br/>  &lt;pattern&gt;drink #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    drink_function (player, text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;drink_function&quot; parameters=&quot;self, text&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  item_x = GetObject (text)<br/>  if (item_x = null) {<br/>    foreach (object_x, ScopeInventory ()) {<br/>      if (object_x&#46;alias = text or object_x&#46;alt = text)<br/>        item_x = object_x<br/>      }<br/>    }<br/>  }<br/>  if (item_x = null) {<br/>    msg (&quot;you don't have that item in your inventory&quot;)<br/>  } else if (GetString (item_x, &quot;item_type&quot;) = hit_points_potion) {<br/>    invoke (item_x&#46;drink)<br/>    // or&#58;<br/>    // if (self&#46;current_hit_points = self&#46;maximum_hit_points) {<br/>      // msg (&quot;you already have full hit_points&quot;)<br/>    // } else {<br/>      // self&#46;current_hit_points = self&#46;current_hit_points + item_x&#46;hit_points<br/>      // msg (&quot;you drink &quot; + item_x&#46;alias + &quot;, restoring your hit_points by &quot; + item_x&#46;hit_points)<br/>      // if (self&#46;current_hit_points &gt; self&#46;maximum_hit_points) {<br/>        // self&#46;current_hit_points = self&#46;maximum_hit_points<br/>      // }<br/>    // }<br/>  } // else if&#46;&#46;&#46;<br/>    // blah scripts<br/>  } else {<br/>    msg (&quot;you can't drink this item&quot;)<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;object name=&quot;50_hit_point_potion&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;take /&gt;<br/>  &lt;alias&gt;50_hp_pot&lt;/alias&gt;<br/>  &lt;alt type=&quot;simplestringlist&quot;&gt;pot;hppot;pothp;50hppot;pot50hp;pothp50;hp;50hp;hp50&lt;/alt&gt; // or whatever is it's correct syntax, meh<br/>  &lt;hit_points type=&quot;int&quot;&gt;50&lt;/hit_points&gt;<br/>  &lt;item_type type=&quot;string&quot;&gt;hit_points_potion&lt;/item_type&gt;<br/>  &lt;drink type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (player&#46;current_hit_points=player&#46;maximum_hit_points) {<br/>      msg (&quot;you already have full hit_points&quot;)<br/>    } else {<br/>      player&#46;current_hit_points = player&#46;current_hit_points + 50_hit_point_potion&#46;hit_points<br/>      msg (&quot;you restore your hit_points by 50&quot;)<br/>      if (player&#46;current_hit_points &gt; player&#46;maximum_hit_points) {<br/>        player&#46;current_hit_points = player&#46;maximum_hit_points<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;/drink&gt;<br/>  &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Take&lt;/displayverbs&gt;<br/>  &lt;inventoryverbs type=&quot;simplestringlist&quot;&gt;Drop;Drink&lt;/inventoryverbs&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>  &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>  &lt;current_hit_points type=&quot;int&quot;&gt;500&lt;/current_hit_points&gt;<br/>  &lt;maximum_hit_points type=&quot;int&quot;&gt;999&lt;/maximum_hit_points&gt;<br/>  &lt;hit_points type=&quot;string&quot;&gt;0/0&lt;/hit_points&gt;<br/>  &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>  &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;hit_points =!;turns =&lt;/statusattributes&gt;<br/>&lt;/object&gt;<br/><br/>&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;<br/>  &lt;enabled /&gt;<br/>  &lt;script&gt;<br/>    player&#46;hit_points = &quot;HP&#58; &quot; + player&#46;current_hit_points + &quot;/&quot; + player&#46;maximum_hit_points<br/>    player&#46;turns = player&#46;turns + 1<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre>",
      "PostDate": "2013-11-03T12:52:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26797",
      "UserId": 0,
      "Username": "Avantar",
      "UserAvatar": "7009_1418309433.jpg",
      "UserGravatar": "86de2b95c147252a1c38b8d3996da855",
      "EditableText": "Many thanx! Got it working.",
      "EditableFormat": "bbcode",
      "HTML": "Many thanx! Got it working.",
      "PostDate": "2013-11-03T15:12:39+00:00",
      "LastEditDate": null
    }
  ]
}
