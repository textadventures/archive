{
  "Topic": {
    "TopicId": "5xjzgzvpuuibjxq7rggcea",
    "ForumId": "10",
    "Title": "Labeling Objects (solved)",
    "LastUpdated": "2018-03-23T16:51:48.3566588Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9cada915-404d-4b22-b67c-6698b234e553",
      "UserId": 341165,
      "Username": "chaosp",
      "AvatarUrl": "https://secure.gravatar.com/avatar/12507a7d846524beeb58ad0fe2018dd4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello I was wondering whether there is a way to label an object for future reference. For example, I would like to label orc1 as \"enemy\", so that anytime I call a function such as Hit (enemy) it acts on orc1. Then in the next room if I label orc2 as \"enemy\" the Hit(enemy) function would hit orc2. I've tried the obvious  ```orc1=enemy```, which doesn't work.\r\n\r\nI managed to construct a work-around by creating an object called \"enemy\" and transferring any required attributes from the desired object to it (for example by setting ```enemy.health=orc1.health```), and then having the player interact with this \"enemy\" object. However it is a bit time consuming and inelegant to do it this way, so any help finding  a simpler solution would be appreciated. \r\n\r\nMany thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello I was wondering whether there is a way to label an object for future reference. For example, I would like to label orc1 as \"enemy\", so that anytime I call a function such as Hit (enemy) it acts on orc1. Then in the next room if I label orc2 as \"enemy\" the Hit(enemy) function would hit orc2. I've tried the obvious  <code>orc1=enemy</code>, which doesn't work.</p>\n<p>I managed to construct a work-around by creating an object called \"enemy\" and transferring any required attributes from the desired object to it (for example by setting <code>enemy.health=orc1.health</code>), and then having the player interact with this \"enemy\" object. However it is a bit time consuming and inelegant to do it this way, so any help finding  a simpler solution would be appreciated.</p>\n<p>Many thanks.</p>\n\n",
      "PostDate": "2018-03-23T16:51:48.3566588Z",
      "LastEditDate": "2018-03-23T19:22:30.1781095Z",
      "link": null
    },
    {
      "PostId": "53caae40-aad5-4751-8131-4dcf0ca24622",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You were close!\r\n\r\n```\r\norc1.enemy = true\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You were close!</p>\n<pre><code>orc1.enemy = true\n</code></pre>\n\n",
      "PostDate": "2018-03-23T17:11:16.8324588Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "feb06994-ac69-4969-9bae-681498ec554a",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm actually doing something like this for my game! I have team fights, with up to 4 enemies vs the player and 3 AI controlled allies. What I do is I have an object attribute for the player called 'Target'. I have a bunch of code that decides who the target is depending on input, and then carries attacks like that. It's great for setting things like target health too. You can get REALLY fancy with object attributes. In psuedocode:\r\n\r\n```\r\nset Player.Target=orc1\r\nset Player.Target.Health=Player.Target.Health-Player.DamagePlayerDealsWithAttack\r\nif (Player.Target=orc1){\r\nprint \"The orc says oof!\"\r\n}\r\nelse if (Player.Target=orc2){\r\nprint \"The orc grunts as you hit him.\"\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm actually doing something like this for my game! I have team fights, with up to 4 enemies vs the player and 3 AI controlled allies. What I do is I have an object attribute for the player called 'Target'. I have a bunch of code that decides who the target is depending on input, and then carries attacks like that. It's great for setting things like target health too. You can get REALLY fancy with object attributes. In psuedocode:</p>\n<pre><code>set Player.Target=orc1\nset Player.Target.Health=Player.Target.Health-Player.DamagePlayerDealsWithAttack\nif (Player.Target=orc1){\nprint \"The orc says oof!\"\n}\nelse if (Player.Target=orc2){\nprint \"The orc grunts as you hit him.\"\n}\n</code></pre>\n\n",
      "PostDate": "2018-03-23T18:57:27.4222244Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8b114694-6206-4b95-8c55-81daa992cadd",
      "UserId": 341165,
      "Username": "chaosp",
      "AvatarUrl": "https://secure.gravatar.com/avatar/12507a7d846524beeb58ad0fe2018dd4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi, thank you for the swift reply. I don't think i set out my problem very well in my first post. A more detailed version of what I'm trying to achieve is:\r\n\r\nPlayer types \"hit orc1\". This calls the function Hit with variable \"object\",   i.e.```Hit(object)``` occurs running the hit script. The object in this case is orc1. Unfortunately once the hit script is over the code obviously no longer remembers the \"object\" in ```Hit(object)``` as orc1.\r\n\r\nThus as part of the hit script I would somehow like to label (or rename) any object hit as \"enemy\" . Thus if orc1 hits back, the combat script can use attributes such as ```enemy.fightskill```. This means when I come to another enemy (eg orc2) and Hit them, the script will then label that object as \"enemy\" and the combat script can still use ```enemy.fightskill``` without having to specifically refer to orc2.\r\n\r\nIf I understand correctly k.v.'s script would give orc1 the boolean attribute ```orc1.enemy =true``` and I'm not sure how I would use that  when calling a function. Could you check the room for any object where ```object.enemy=true``` and then obtain the required object's attributes from there?\r\n\r\nMany thanks for the help so far, this is the most stuck i've been with Quest yet!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi, thank you for the swift reply. I don't think i set out my problem very well in my first post. A more detailed version of what I'm trying to achieve is:</p>\n<p>Player types \"hit orc1\". This calls the function Hit with variable \"object\",   i.e.<code>Hit(object)</code> occurs running the hit script. The object in this case is orc1. Unfortunately once the hit script is over the code obviously no longer remembers the \"object\" in <code>Hit(object)</code> as orc1.</p>\n<p>Thus as part of the hit script I would somehow like to label (or rename) any object hit as \"enemy\" . Thus if orc1 hits back, the combat script can use attributes such as <code>enemy.fightskill</code>. This means when I come to another enemy (eg orc2) and Hit them, the script will then label that object as \"enemy\" and the combat script can still use <code>enemy.fightskill</code> without having to specifically refer to orc2.</p>\n<p>If I understand correctly k.v.'s script would give orc1 the boolean attribute <code>orc1.enemy =true</code> and I'm not sure how I would use that  when calling a function. Could you check the room for any object where <code>object.enemy=true</code> and then obtain the required object's attributes from there?</p>\n<p>Many thanks for the help so far, this is the most stuck i've been with Quest yet!</p>\n\n",
      "PostDate": "2018-03-23T19:01:18.7467464Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d8c487a-0edd-447f-9d05-c500caa222a1",
      "UserId": 341165,
      "Username": "chaosp",
      "AvatarUrl": "https://secure.gravatar.com/avatar/12507a7d846524beeb58ad0fe2018dd4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you Io, thats exactly what I was looking for! That's a much better method than I was using before! All my scripts now run happily. Thanks again. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you Io, thats exactly what I was looking for! That's a much better method than I was using before! All my scripts now run happily. Thanks again.</p>\n\n",
      "PostDate": "2018-03-23T19:22:06.2859512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "88867391-b4c4-4c27-a8ef-167bd6d7db35",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\r\nEdit: Whoops, nevermind. You read my thing before I typed this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Edit: Whoops, nevermind. You read my thing before I typed this.</p>\n\n",
      "PostDate": "2018-03-23T19:22:46.1316333Z",
      "LastEditDate": "2018-03-23T19:23:12.1922542Z",
      "link": null
    }
  ]
}
