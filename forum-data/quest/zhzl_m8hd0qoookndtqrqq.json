{
  "Topic": {
    "TopicId": "zhzl_m8hd0qoookndtqrqq",
    "ForumId": "10",
    "Title": "Inheriting commands from the direct parent object - Is it possible?",
    "LastUpdated": "2017-08-23T11:01:39.0275314Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "75486c2b-ac3b-43b6-8915-018d618e92c6",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have one room called 'region 1', which has two rooms in it: room1 and room2.\r\n\r\nI have another room called 'region 2', which has two rooms: room3 and room4.\r\n\r\nNow, if I set up a command: ```enjoy #object#``` on region 1, the parser has no clue what enjoying something is in room1 or room2 (although it does work if the player is actually in region 1 itself).\r\n\r\nIs there any way to make a room within a room 'inherit' the room-specific command(s) of its direct parent object?",
      "EditableFormat": "markdown",
      "HTML": "<p>I have one room called 'region 1', which has two rooms in it: room1 and room2.</p>\n<p>I have another room called 'region 2', which has two rooms: room3 and room4.</p>\n<p>Now, if I set up a command: <code>enjoy #object#</code> on region 1, the parser has no clue what enjoying something is in room1 or room2 (although it does work if the player is actually in region 1 itself).</p>\n<p>Is there any way to make a room within a room 'inherit' the room-specific command(s) of its direct parent object?</p>\n\n",
      "PostDate": "2017-08-23T11:01:39.0275314Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4467fe0d-560e-494b-9c6b-37535954dfa4",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The only way I know how to do what you have is to create a base object  that holds your attributes and commands you want to share between all of the rooms in the game and then any actual rooms will inherit that base object much like the default objects will inherit some core Quest object type.",
      "EditableFormat": "markdown",
      "HTML": "<p>The only way I know how to do what you have is to create a base object  that holds your attributes and commands you want to share between all of the rooms in the game and then any actual rooms will inherit that base object much like the default objects will inherit some core Quest object type.</p>\n\n",
      "PostDate": "2017-08-26T09:33:42.4422358Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "923eb37a-f68d-4599-a315-4b839924a0d8",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, ShadowsEdge19!\r\n\r\nYou wouldn't happen to have a link concerning base objects, would you?\r\n\r\nI searched and found quite a few things, but most of them concerned backdrops. (I got the idea to try this after doing the backdrop thing.)\r\n\r\n---\r\nI was just trying to be lazy, anyway... If you don't just have something bookmarked, I'm cool.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, ShadowsEdge19!</p>\n<p>You wouldn't happen to have a link concerning base objects, would you?</p>\n<p>I searched and found quite a few things, but most of them concerned backdrops. (I got the idea to try this after doing the backdrop thing.)</p>\n<hr>\n<p>I was just trying to be lazy, anyway... If you don't just have something bookmarked, I'm cool.</p>\n\n",
      "PostDate": "2017-08-27T03:13:16.259445Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "16617134-1a24-480f-ad1f-ba541b5b07de",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think... this would be the underlying code of quest itself:\r\n\r\n(see quest's source code, I think Pixie has it on his github, else, look where to find it via the 'QuestKit' forum board and/or google search for \"quest text adventure development\", to find where Alex has it, for the public to use/develop quest with it)\r\n\r\n**(I think the base OBJECTS/CLASSES can be found here, under/within the 'world model' hyperlink, aka just click on this link here: https://github.com/textadventures/quest/tree/master/WorldModel/WorldModel ) --- yep, this is it, but you're going to have to learn/understand a lot of the full-bore programming languages, aka: C++/Java/Python, aspects: namespaces, OBJECTS, instantiating, CLASSES, etc** \r\n\r\n**(I think here it is: https://github.com/textadventures/quest ) --- this probably has important stuff too (lots of inter-connected/complex code)**\r\n\r\n(here's the main github page for quest products, accessed via the quest site at the bottom, under 'resources -> github': https://github.com/textadventures/ )\r\n\r\nquest's base (OOP/OOD) OBJECTS/CLASSES:\r\n\r\nquest's Elements: Objects, Verbs, Commands, Functions, Turnscripts, Timers, Object Types, etc\r\nand\r\nquest's Attribute Types: Booleans, Strings, Integers, Doubles, Object references/pointers, Lists, Dictionaries, etc",
      "EditableFormat": "markdown",
      "HTML": "<p>I think... this would be the underlying code of quest itself:</p>\n<p>(see quest's source code, I think Pixie has it on his github, else, look where to find it via the 'QuestKit' forum board and/or google search for \"quest text adventure development\", to find where Alex has it, for the public to use/develop quest with it)</p>\n<p><strong>(I think the base OBJECTS/CLASSES can be found here, under/within the 'world model' hyperlink, aka just click on this link here: https://github.com/textadventures/quest/tree/master/WorldModel/WorldModel ) --- yep, this is it, but you're going to have to learn/understand a lot of the full-bore programming languages, aka: C++/Java/Python, aspects: namespaces, OBJECTS, instantiating, CLASSES, etc</strong></p>\n<p><strong>(I think here it is: https://github.com/textadventures/quest ) --- this probably has important stuff too (lots of inter-connected/complex code)</strong></p>\n<p>(here's the main github page for quest products, accessed via the quest site at the bottom, under 'resources -&gt; github': https://github.com/textadventures/ )</p>\n<p>quest's base (OOP/OOD) OBJECTS/CLASSES:</p>\n<p>quest's Elements: Objects, Verbs, Commands, Functions, Turnscripts, Timers, Object Types, etc<br>\nand<br>\nquest's Attribute Types: Booleans, Strings, Integers, Doubles, Object references/pointers, Lists, Dictionaries, etc</p>\n\n",
      "PostDate": "2017-08-27T06:44:36.323895Z",
      "LastEditDate": "2017-08-27T07:10:15.5575602Z",
      "link": null
    },
    {
      "PostId": "774beded-ce22-43d2-8ae5-57ac65ba80ee",
      "UserId": 194873,
      "Username": "ShadowsEdge19",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a24333a42009e96c558cb89dc0c26d30?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't know how to do this in the Web editor of this is where you are coming from but I use the desktop editor and work mainly from the files themselves in a text editor.\r\n\r\nCreate the object as you want it with all of the attributes and create a 2nd object you want to base this off. \r\nI'm the Attribute tab of the 2nd object there is a list of inherited types, go and add the reference to your first object in there and that should mean any attributes and display verbs and such things are copied across from object 1 and should display as greyed out in their respective lists. \r\n\r\nIf you manually add a version of that same display verb/attribute to the 2nd object then it now belongs solely to that object instead of the 1st and will show as black bold writing.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't know how to do this in the Web editor of this is where you are coming from but I use the desktop editor and work mainly from the files themselves in a text editor.</p>\n<p>Create the object as you want it with all of the attributes and create a 2nd object you want to base this off.<br>\nI'm the Attribute tab of the 2nd object there is a list of inherited types, go and add the reference to your first object in there and that should mean any attributes and display verbs and such things are copied across from object 1 and should display as greyed out in their respective lists.</p>\n<p>If you manually add a version of that same display verb/attribute to the 2nd object then it now belongs solely to that object instead of the 1st and will show as black bold writing.</p>\n\n",
      "PostDate": "2017-08-27T08:14:36.2019166Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7ed2acad-0bad-4f34-8f87-61b4b8740d0d",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could override the `ScopeCommands` function to get it to include other commands. This code would do it:\r\n\r\n```\r\nresult = NewObjectList()\r\nforeach (command, AllCommands()) {\r\n  if (command.parent = null or command.parent = game.pov.parent) {\r\n    list add (result, command)\r\n  }\r\n  if (not game.pov.parent.parent = null) {\r\n    if (command.parent = game.pov.parent.parent) {\r\n      list add (result, command)\r\n    }\r\n  }\r\n}\r\nreturn (result)",
      "EditableFormat": "markdown",
      "HTML": "<p>You could override the <code>ScopeCommands</code> function to get it to include other commands. This code would do it:</p>\n<pre><code>result = NewObjectList()\nforeach (command, AllCommands()) {\n  if (command.parent = null or command.parent = game.pov.parent) {\n    list add (result, command)\n  }\n  if (not game.pov.parent.parent = null) {\n    if (command.parent = game.pov.parent.parent) {\n      list add (result, command)\n    }\n  }\n}\nreturn (result)\n</code></pre>\n\n",
      "PostDate": "2017-08-29T10:27:46.0820455Z",
      "LastEditDate": "2017-08-29T10:31:25.1475584Z",
      "link": null
    },
    {
      "PostId": "8eb5fc75-c152-4768-9ec6-f8db8f48d080",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The Pixie, I was just looking through CoreScope.aslx in search of something else (which I think is impossible. Bah) and realised you could do that, so came here to post a similar answer.\r\n\r\nThough my version would have been\r\n\r\n```\r\n  result = NewObjectList()\r\n  foreach (command, AllCommands()) {\r\n    if (command.parent = null) {\r\n      list add(result, command)\r\n    }\r\n    else {\r\n      i = game.pov.parent\r\n      while (i.parent <> null) {\r\n        if (i = command.parent) {\r\n          list add (result, command)\r\n        }\r\n        i = i.parent\r\n      }\r\n    }\r\n  }\r\n  return (result)\r\n```\r\n\r\nI would have thought it'd be easier to just replace \"command.parent = game.pov.parent\" with \"Contains(command.parent, game.pov)\"  … but I think the parser will take the first matching candidate it finds, so iterating upwards through the room stack probably gives the desired result if you end up wanting to have nested containers for your rooms.",
      "EditableFormat": "markdown",
      "HTML": "<p>The Pixie, I was just looking through CoreScope.aslx in search of something else (which I think is impossible. Bah) and realised you could do that, so came here to post a similar answer.</p>\n<p>Though my version would have been</p>\n<pre><code>  result = NewObjectList()\n  foreach (command, AllCommands()) {\n    if (command.parent = null) {\n      list add(result, command)\n    }\n    else {\n      i = game.pov.parent\n      while (i.parent &lt;&gt; null) {\n        if (i = command.parent) {\n          list add (result, command)\n        }\n        i = i.parent\n      }\n    }\n  }\n  return (result)\n</code></pre>\n<p>I would have thought it'd be easier to just replace \"command.parent = game.pov.parent\" with \"Contains(command.parent, game.pov)\"  … but I think the parser will take the first matching candidate it finds, so iterating upwards through the room stack probably gives the desired result if you end up wanting to have nested containers for your rooms.</p>\n\n",
      "PostDate": "2017-08-29T13:31:06.8932343Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b4c66abb-138d-4eca-b751-8aaa15e99bc0",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Awesome!\r\n\r\nThanks, everyone!",
      "EditableFormat": "markdown",
      "HTML": "<p>Awesome!</p>\n<p>Thanks, everyone!</p>\n\n",
      "PostDate": "2017-08-29T18:33:56.8888079Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc0e0d63-7a40-4266-83e2-15c0b5407f5e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What can you not find out how to do, mrangel?\r\n\r\nWe'll figure that out, too!",
      "EditableFormat": "markdown",
      "HTML": "<p>What can you not find out how to do, mrangel?</p>\n<p>We'll figure that out, too!</p>\n\n",
      "PostDate": "2017-08-30T04:47:18.6619265Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "91fc53c9-e349-498e-9d67-f2a7194fc4ec",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "[Pixie's code](http://textadventures.co.uk/forum/quest/topic/zhzl_m8hd0qoookndtqrqq/inheriting-commands-from-the-direct-parent-object-is-it-possible#7ed2acad-0bad-4f34-8f87-61b4b8740d0d) works!\r\n\r\nThe game I'm using it in is going to ♫♫♫  ROCK! ♫♫♫\r\n\r\nGood to have ya' back, Pix!\r\n\r\n---\r\nmrangel,\r\n\r\nThis line is blowing my mind:\r\n\r\n```\r\ni = i.parent\r\n```\r\n\r\nIn context:\r\n```\r\ni = game.pov.parent\r\n      while (i.parent <> null) {\r\n        if (i = command.parent) {\r\n          list add (result, command)\r\n        }\r\n        i = i.parent\r\n      }\r\n```\r\n\r\nJust to keep my 'i's from getting crossed, I'm gonna substitute 'peanut_butter_cup' for the 'i':\r\n\r\n```\r\n  result = NewObjectList()\r\n  foreach (command, AllCommands()) {\r\n    if (command.parent = null) {\r\n      list add(result, command)\r\n    }\r\n    else {\r\n      peanut_butter_cup = game.pov.parent\r\n      while (peanut_butter_cup.parent <> null) {\r\n        if (peanut_butter_cup = command.parent) {\r\n          list add (result, command)\r\n        }\r\n       peanut_butter_cup = peanut_butter_cup.parent\r\n      }\r\n    }\r\n  }\r\n  return (result)\r\n// KV added the next bit:\r\ncreate (\"kv_peanut_butter_cup\")\r\nkv_peanut_butter_cup.parent = KV\r\nmsg (\"You suddenly realize that you have a peanut butter cup!<br/><br/>You eat it. (Good stuff!)\")\r\ndestroy (\"kv_peanut_butter_cup\")\r\n```\r\n\r\n\r\nOh, okay...\r\n\r\nThat code should work, too. (Even without my additions!)",
      "EditableFormat": "markdown",
      "HTML": "<p><a href=\"http://textadventures.co.uk/forum/quest/topic/zhzl_m8hd0qoookndtqrqq/inheriting-commands-from-the-direct-parent-object-is-it-possible#7ed2acad-0bad-4f34-8f87-61b4b8740d0d\">Pixie's code</a> works!</p>\n<p>The game I'm using it in is going to ♫♫♫  ROCK! ♫♫♫</p>\n<p>Good to have ya' back, Pix!</p>\n<hr>\n<p>mrangel,</p>\n<p>This line is blowing my mind:</p>\n<pre><code>i = i.parent\n</code></pre>\n<p>In context:</p>\n<pre><code>i = game.pov.parent\n      while (i.parent &lt;&gt; null) {\n        if (i = command.parent) {\n          list add (result, command)\n        }\n        i = i.parent\n      }\n</code></pre>\n<p>Just to keep my 'i's from getting crossed, I'm gonna substitute 'peanut_butter_cup' for the 'i':</p>\n<pre><code>  result = NewObjectList()\n  foreach (command, AllCommands()) {\n    if (command.parent = null) {\n      list add(result, command)\n    }\n    else {\n      peanut_butter_cup = game.pov.parent\n      while (peanut_butter_cup.parent &lt;&gt; null) {\n        if (peanut_butter_cup = command.parent) {\n          list add (result, command)\n        }\n       peanut_butter_cup = peanut_butter_cup.parent\n      }\n    }\n  }\n  return (result)\n// KV added the next bit:\ncreate (\"kv_peanut_butter_cup\")\nkv_peanut_butter_cup.parent = KV\nmsg (\"You suddenly realize that you have a peanut butter cup!&lt;br/&gt;&lt;br/&gt;You eat it. (Good stuff!)\")\ndestroy (\"kv_peanut_butter_cup\")\n</code></pre>\n<p>Oh, okay...</p>\n<p>That code should work, too. (Even without my additions!)</p>\n\n",
      "PostDate": "2017-08-30T05:54:47.9655442Z",
      "LastEditDate": "2017-08-30T05:55:27.5661716Z",
      "link": null
    },
    {
      "PostId": "f6acbcb8-4585-47b2-9208-a99aabecdecc",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "By the way, I am not sure what will happen if you have a command in the room and in the region with the same pattern. You would want the command in the room to take priority, but I would guess it would depend on their position in the file.\r\n\r\nAlso, kind of related, if the pattern is different, then the match strength is the first thing that determines which is chosen. Match strength is the number of characters not in capture groups (i.e., not inside brackets). If you had:\r\n\r\n```\r\n^(?<text>push|pull|move) (?<object>.*)$\r\n```\r\n\r\nThe regex will match PUSH CRATE, and put \"PUSH\" into `text`. However, the built in PUSH command will take priority, as it has a higher match strength of 5, rather than 1.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>By the way, I am not sure what will happen if you have a command in the room and in the region with the same pattern. You would want the command in the room to take priority, but I would guess it would depend on their position in the file.</p>\n<p>Also, kind of related, if the pattern is different, then the match strength is the first thing that determines which is chosen. Match strength is the number of characters not in capture groups (i.e., not inside brackets). If you had:</p>\n<pre><code>^(?&lt;text&gt;push|pull|move) (?&lt;object&gt;.*)$\n</code></pre>\n<p>The regex will match PUSH CRATE, and put \"PUSH\" into <code>text</code>. However, the built in PUSH command will take priority, as it has a higher match strength of 5, rather than 1.</p>\n\n",
      "PostDate": "2017-08-30T07:03:08.2867978Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6b5ce07c-2c97-4ff4-b392-c9d6d6e74887",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "http://i.imgur.com/FOIjtApb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@Pix\r\n\r\nSo ```^``` means from the beginning, ```(?<text>push|pull|move)``` means if this string is 'push', 'pull', or 'move', #text# will be whichever one it is (and Quest turns #text# back into ```(?<text>.*)```), and the rest has to be and #object# at ```$``` the end?",
      "EditableFormat": "markdown",
      "HTML": "<p>@Pix</p>\n<p>So <code>^</code> means from the beginning, <code>(?&lt;text&gt;push|pull|move)</code> means if this string is 'push', 'pull', or 'move', #text# will be whichever one it is (and Quest turns #text# back into <code>(?&lt;text&gt;.*)</code>), and the rest has to be and #object# at <code>$</code> the end?</p>\n\n",
      "PostDate": "2017-08-30T08:11:41.0422373Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cfcaaa88-ecd0-426e-87af-5d08179f297e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Correct. `(?<text>push|pull|move) ` is called a capture group, as is `(?<object>.*)`. The brackets and question mark denote it as such. The bit in ankle brackets is the name, and will become the name of the variable (if if it starts \"object\", Quest will try to match to an object in scope). The rest is the pattern to match against. The `.` means match anything, and the `*` means match any number, so the object is matched to any text. Then, `push|pull|move` means it has to be one of those.",
      "EditableFormat": "markdown",
      "HTML": "<p>Correct. <code>(?&lt;text&gt;push|pull|move)</code> is called a capture group, as is <code>(?&lt;object&gt;.*)</code>. The brackets and question mark denote it as such. The bit in ankle brackets is the name, and will become the name of the variable (if if it starts \"object\", Quest will try to match to an object in scope). The rest is the pattern to match against. The <code>.</code> means match anything, and the <code>*</code> means match any number, so the object is matched to any text. Then, <code>push|pull|move</code> means it has to be one of those.</p>\n\n",
      "PostDate": "2017-08-30T08:53:06.4345199Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7a7430fa-8216-41bf-bd6f-715a2a72cf3c",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just realised my code was broken. Should have the loop iterating through parents (from game.pov.parent all the way up to the top, and then null) on the outside, and looping over AllCommands() inside that. That way, the result list has commands from the room first, then the region, then the outer region, (or however many levels there are), and finally the commands whose parent is null. As far as I understand it, the parser looks through the command list in order until it finds a match; so putting the innermost one first means that regions can override global commands, and rooms can override their regions.\r\n\r\nOff the top of my head…\r\n```\r\nresult = NewObjectList()\r\nroom = game.pov\r\nwhile (room <> null) {\r\n  room = room.parent\r\n  foreach (command, AllCommands()) {\r\n    if (room = command.parent) {\r\n      list add (result, command)\r\n    }\r\n  }\r\n}\r\nreturn (result)\r\n```\r\n\r\nSo it returns a list of all the commands in game.pov.parent, then the ones in game.pov.parent.parent, then game.pov.parent.parent.parent, and so on… and I believe (haven't actually checked, because I'm writing on my phone) that the top level region's parent will be null, so the last iteration of the loop puts the global commands on the end of the list.",
      "EditableFormat": "markdown",
      "HTML": "<p>Just realised my code was broken. Should have the loop iterating through parents (from game.pov.parent all the way up to the top, and then null) on the outside, and looping over AllCommands() inside that. That way, the result list has commands from the room first, then the region, then the outer region, (or however many levels there are), and finally the commands whose parent is null. As far as I understand it, the parser looks through the command list in order until it finds a match; so putting the innermost one first means that regions can override global commands, and rooms can override their regions.</p>\n<p>Off the top of my head…</p>\n<pre><code>result = NewObjectList()\nroom = game.pov\nwhile (room &lt;&gt; null) {\n  room = room.parent\n  foreach (command, AllCommands()) {\n    if (room = command.parent) {\n      list add (result, command)\n    }\n  }\n}\nreturn (result)\n</code></pre>\n<p>So it returns a list of all the commands in game.pov.parent, then the ones in game.pov.parent.parent, then game.pov.parent.parent.parent, and so on… and I believe (haven't actually checked, because I'm writing on my phone) that the top level region's parent will be null, so the last iteration of the loop puts the global commands on the end of the list.</p>\n\n",
      "PostDate": "2017-08-30T22:14:40.697464Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
