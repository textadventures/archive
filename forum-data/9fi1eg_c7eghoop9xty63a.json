{
  "Topic": {
    "TopicId": "9fi1eg_c7eghoop9xty63a",
    "ForumId": "10",
    "Title": "Quest JS - TAKE Issue",
    "LastUpdated": "2018-04-13T00:42:44.8809532Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "63b4c941-c53f-44f3-bafe-49c0c80b5429",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is the error I get when trying to take something in a game compiled with Quest JS:\r\n```\r\nTypeError: parameters is undefined[Learn More]\r\ngame.js:3366:47\r\nmultipleobjects\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:3366:47\r\nrunscriptattribute2\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:1964:5\r\nResolveNextName\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9149:1\r\nHandleSingleCommandPattern\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9117:1\r\nHandleSingleCommand\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9098:1\r\nHandleCommand\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9016:1\r\nsendCommandInternal\r\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:540:5\r\nsendCommand/<\r\n```\r\n\r\n---\r\nThis is the take object:\r\n\r\n\r\n```\r\n_obj283 = {\r\n\"elementtype\": \"object\",\r\n\"name\": \"take\",\r\n\"type\": \"command\",\r\n\"pattern\": \"^take (?<object>.*)$|^get (?<g2_map_object>.*)$|^pick up (?<g3_map_object>.*)$\",\r\n\"multiple\": function() { var takeList = NewObjectList();\r\nvar list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj281.pov);\r\nvar list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\r\nfor (var iterator_obj in list_obj) {\r\nvar obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\r\nif (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj281.pov.parent) {\r\nlistadd (takeList, obj);\r\n} }\r\n}\r\nreturn (takeList); },\r\n\"scope\": \"notheld\",\r\n\"multipleobjects\": function(parameters) { var object = parameters['object'];\r\nvar multiple = parameters['multiple'];\r\nset(_obj281.pov, \"currentcommandpendingobjectscope\", NewObjectList());\r\nvar list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj281.pov);\r\nvar list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\r\nfor (var iterator_obj in list_obj) {\r\nvar obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\r\nif (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj281.pov.parent && !(DoesInherit(obj, \"npc_type\"))) {\r\nlistadd (_obj281.pov.currentcommandpendingobjectscope, obj);\r\n} }\r\n} },\r\n\"script\": function(parameters) { var object = parameters['object'];\r\nvar multiple = parameters['multiple'];\r\nif (multiple && ListCount(object) == 0) {\r\nOutputText (\"Nothing here to take.\");\r\n}\r\nelse {\r\nvar object_isarray = (Object.prototype.toString.call(object) === '[object Array]');\r\nfor (var iterator_obj in object) {\r\nvar obj = object_isarray ? object[iterator_obj] : iterator_obj;\r\nif (object_isarray || iterator_obj!=\"__dummyKey\") { DoTake (obj, multiple); }\r\n}\r\n} },\r\n\"_js_name\": \"_obj283\",\r\n\"_types\": [\"defaultcommand\"]\r\n};\r\nelementsNameMap[\"take\"] = _obj283;\r\nallCommands.push(_obj283);\r\nobjectsNameMap[\"take\"] = _obj283;\r\n```\r\n\r\n\r\n---\r\nIf I change ```parameters``` (which is undefined) to ```this``` on these two lines, TAKE works:\r\n```\r\n\"multipleobjects\": function(parameters) {var object = this['object'];\r\nvar multiple = this['multiple'];\r\n```\r\n\r\n---\r\nNow, I wonder how to build that in, rather than having to edit the JS file after compiling each game.  The \"take\" object is not in the game.js file until after converting a game.  Hrmm...",
      "EditableFormat": "markdown",
      "HTML": "<p>This is the error I get when trying to take something in a game compiled with Quest JS:</p>\n<pre><code>TypeError: parameters is undefined[Learn More]\ngame.js:3366:47\nmultipleobjects\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:3366:47\nrunscriptattribute2\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:1964:5\nResolveNextName\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9149:1\nHandleSingleCommandPattern\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9117:1\nHandleSingleCommand\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9098:1\nHandleCommand\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:9016:1\nsendCommandInternal\nfile:///C:/Users/kv/Documents/qjs/Take%20Test/game.js:540:5\nsendCommand/&lt;\n</code></pre>\n<hr>\n<p>This is the take object:</p>\n<pre><code>_obj283 = {\n\"elementtype\": \"object\",\n\"name\": \"take\",\n\"type\": \"command\",\n\"pattern\": \"^take (?&lt;object&gt;.*)$|^get (?&lt;g2_map_object&gt;.*)$|^pick up (?&lt;g3_map_object&gt;.*)$\",\n\"multiple\": function() { var takeList = NewObjectList();\nvar list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj281.pov);\nvar list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\nfor (var iterator_obj in list_obj) {\nvar obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\nif (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj281.pov.parent) {\nlistadd (takeList, obj);\n} }\n}\nreturn (takeList); },\n\"scope\": \"notheld\",\n\"multipleobjects\": function(parameters) { var object = parameters['object'];\nvar multiple = parameters['multiple'];\nset(_obj281.pov, \"currentcommandpendingobjectscope\", NewObjectList());\nvar list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj281.pov);\nvar list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\nfor (var iterator_obj in list_obj) {\nvar obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\nif (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj281.pov.parent &amp;&amp; !(DoesInherit(obj, \"npc_type\"))) {\nlistadd (_obj281.pov.currentcommandpendingobjectscope, obj);\n} }\n} },\n\"script\": function(parameters) { var object = parameters['object'];\nvar multiple = parameters['multiple'];\nif (multiple &amp;&amp; ListCount(object) == 0) {\nOutputText (\"Nothing here to take.\");\n}\nelse {\nvar object_isarray = (Object.prototype.toString.call(object) === '[object Array]');\nfor (var iterator_obj in object) {\nvar obj = object_isarray ? object[iterator_obj] : iterator_obj;\nif (object_isarray || iterator_obj!=\"__dummyKey\") { DoTake (obj, multiple); }\n}\n} },\n\"_js_name\": \"_obj283\",\n\"_types\": [\"defaultcommand\"]\n};\nelementsNameMap[\"take\"] = _obj283;\nallCommands.push(_obj283);\nobjectsNameMap[\"take\"] = _obj283;\n</code></pre>\n<hr>\n<p>If I change <code>parameters</code> (which is undefined) to <code>this</code> on these two lines, TAKE works:</p>\n<pre><code>\"multipleobjects\": function(parameters) {var object = this['object'];\nvar multiple = this['multiple'];\n</code></pre>\n<hr>\n<p>Now, I wonder how to build that in, rather than having to edit the JS file after compiling each game.  The \"take\" object is not in the game.js file until after converting a game.  Hrmm...</p>\n\n",
      "PostDate": "2018-04-13T00:42:44.8809532Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "67a33295-6e12-417b-96dc-8686f977f784",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "From the error message, the issue is that `multipleobjects` is being called without parameters. It does not seem to use them, so it work if you just remove the \"parameters\" parameter?\r\n\r\nWhat is the relationship between Quest JS and Quest itself? I.e., how do changes in Quest affect QuestJS? What version of QuestJS are you using? Have you got a version you have been editing?",
      "EditableFormat": "markdown",
      "HTML": "<p>From the error message, the issue is that <code>multipleobjects</code> is being called without parameters. It does not seem to use them, so it work if you just remove the \"parameters\" parameter?</p>\n<p>What is the relationship between Quest JS and Quest itself? I.e., how do changes in Quest affect QuestJS? What version of QuestJS are you using? Have you got a version you have been editing?</p>\n\n",
      "PostDate": "2018-04-13T11:55:38.5491522Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ffdb4b6e-0686-4a98-bafb-7e4540773e47",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> From the error message, the issue is that multipleobjects is being called without parameters. It does not seem to use them, so it work if you just remove the \"parameters\" parameter?\r\n\r\n```parameters``` should be the command object, as far as I can tell.  This seems to be true, since changing ```parameters``` to ```this``` made TAKE and DROP work correctly.  (See the end of my first post, in the last code section.)\r\n\r\n---\r\n>What is the relationship between Quest JS and Quest itself? I.e., how do changes in Quest affect QuestJS? \r\n\r\nQJS has a few functions built in, but only a few.\r\n\r\nIt (somehow) converts Quest objects, functions, and commands (and such) to JS objects.  (I wish I had a clue how this works.)\r\n\r\n```take```, ```drop```, ```DoTake```, and ```DoDrop``` are all created during the conversion.  They do not exist in QuestJS's code.\r\n\r\n\r\nThis is the 'take' object that is created when converting a Quest 5.7.1 game (and it works; and it has the same code as far as the ```parameters``` variable is concerned):\r\n```\r\n\r\n_obj275 = {\r\n    \"elementtype\": \"object\",\r\n    \"name\": \"take\",\r\n    \"type\": \"command\",\r\n    \"pattern\": \"^take (?<object>.*)$|^get (?<g2_map_object>.*)$|^pick up (?<g3_map_object>.*)$\",\r\n    \"multiple\": function() { var takeList = NewObjectList();\r\n        var list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj273.pov);\r\n        var list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\r\n        for (var iterator_obj in list_obj) {\r\n            var obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\r\n            if (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj273.pov.parent) {\r\n                listadd (takeList, obj);\r\n            } }\r\n        }\r\n        return (takeList); },\r\n    \"scope\": \"notheld\",\r\n    \"script\": function(parameters) { var object = parameters['object'];\r\n        var multiple = parameters['multiple'];\r\n        var object_isarray = (Object.prototype.toString.call(object) === '[object Array]');\r\n        for (var iterator_obj in object) {\r\n            var obj = object_isarray ? object[iterator_obj] : iterator_obj;\r\n            if (object_isarray || iterator_obj!=\"__dummyKey\") { DoTake (obj, multiple); }\r\n        } },\r\n    \"_js_name\": \"_obj275\",\r\n    \"_types\": [\"defaultcommand\"]\r\n};\r\nelementsNameMap[\"take\"] = _obj275;\r\nallCommands.push(_obj275);\r\nobjectsNameMap[\"take\"] = _obj275;\r\n```\r\n\r\n---\r\nSo that made be look at the function calling it (of course), which is ```runscriptattribute2()```.  This is in the QuestJS code, so I can change it and let it ride (if it doesn't break anything else).\r\n\r\nThe current ```runscriptattribute2```:\r\n\r\n```\r\nfunction runscriptattribute2(object, attribute) {\r\n    var fn = GetAttribute(object, attribute);\r\n    fn.call(object);\r\n}\r\n```\r\n\r\n\r\n---\r\nIf I change that to this, TAKE and DROP and LOOK will work (but I have only tested those three):\r\n```\r\nfunction runscriptattribute2(object, attribute) {\r\n    var fn = GetAttribute(object, attribute);\r\n\tfn.call(object, attribute);\r\n}\r\n```\r\n\r\n---\r\nI wonder what that will break...\r\n\r\nHere is the test game with that change:\r\nhttp://textadventures.co.uk/games/view/qxlugkg_ceo_-lx0m_uxkg/take-test-questjs\r\n\r\n---\r\n> What version of QuestJS are you using? Have you got a version you have been editing?\r\n\r\nAlex's last version of QuestJS won't compile a game that even loads.  It sticks at ```setCss()``` which is undefined.\r\n\r\nI have added a few JS functions to QuestJS (including ```setCss()```), and I altered the CSS a little bit, but that's all.\r\n\r\nThe files can be found here: https://github.com/KVonGit/QuestStuff/wiki/QuestJS-Patch-for-Quest-5.6.3\r\n\r\nI basically told QuestJS things like ```NewList()``` is the same thing as ```[]```, and ```NewDictionary()``` is ```{}```.  Besides that, I added Math and audio stuff.\r\n\r\nThe CSS changes are just for the jjmenu stuff (the panes, if anyone besides Pixie, mrangel, or Pertex is still reading this).\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>From the error message, the issue is that multipleobjects is being called without parameters. It does not seem to use them, so it work if you just remove the \"parameters\" parameter?</p>\n</blockquote>\n<p><code>parameters</code> should be the command object, as far as I can tell.  This seems to be true, since changing <code>parameters</code> to <code>this</code> made TAKE and DROP work correctly.  (See the end of my first post, in the last code section.)</p>\n<hr>\n<blockquote>\n<p>What is the relationship between Quest JS and Quest itself? I.e., how do changes in Quest affect QuestJS?</p>\n</blockquote>\n<p>QJS has a few functions built in, but only a few.</p>\n<p>It (somehow) converts Quest objects, functions, and commands (and such) to JS objects.  (I wish I had a clue how this works.)</p>\n<p><code>take</code>, <code>drop</code>, <code>DoTake</code>, and <code>DoDrop</code> are all created during the conversion.  They do not exist in QuestJS's code.</p>\n<p>This is the 'take' object that is created when converting a Quest 5.7.1 game (and it works; and it has the same code as far as the <code>parameters</code> variable is concerned):</p>\n<pre><code>\n_obj275 = {\n    \"elementtype\": \"object\",\n    \"name\": \"take\",\n    \"type\": \"command\",\n    \"pattern\": \"^take (?&lt;object&gt;.*)$|^get (?&lt;g2_map_object&gt;.*)$|^pick up (?&lt;g3_map_object&gt;.*)$\",\n    \"multiple\": function() { var takeList = NewObjectList();\n        var list_obj = ListExclude(ScopeVisibleNotHeldNotScenery(), _obj273.pov);\n        var list_obj_isarray = (Object.prototype.toString.call(list_obj) === '[object Array]');\n        for (var iterator_obj in list_obj) {\n            var obj = list_obj_isarray ? list_obj[iterator_obj] : iterator_obj;\n            if (list_obj_isarray || iterator_obj!=\"__dummyKey\") { if (obj.parent == _obj273.pov.parent) {\n                listadd (takeList, obj);\n            } }\n        }\n        return (takeList); },\n    \"scope\": \"notheld\",\n    \"script\": function(parameters) { var object = parameters['object'];\n        var multiple = parameters['multiple'];\n        var object_isarray = (Object.prototype.toString.call(object) === '[object Array]');\n        for (var iterator_obj in object) {\n            var obj = object_isarray ? object[iterator_obj] : iterator_obj;\n            if (object_isarray || iterator_obj!=\"__dummyKey\") { DoTake (obj, multiple); }\n        } },\n    \"_js_name\": \"_obj275\",\n    \"_types\": [\"defaultcommand\"]\n};\nelementsNameMap[\"take\"] = _obj275;\nallCommands.push(_obj275);\nobjectsNameMap[\"take\"] = _obj275;\n</code></pre>\n<hr>\n<p>So that made be look at the function calling it (of course), which is <code>runscriptattribute2()</code>.  This is in the QuestJS code, so I can change it and let it ride (if it doesn't break anything else).</p>\n<p>The current <code>runscriptattribute2</code>:</p>\n<pre><code>function runscriptattribute2(object, attribute) {\n    var fn = GetAttribute(object, attribute);\n    fn.call(object);\n}\n</code></pre>\n<hr>\n<p>If I change that to this, TAKE and DROP and LOOK will work (but I have only tested those three):</p>\n<pre><code>function runscriptattribute2(object, attribute) {\n    var fn = GetAttribute(object, attribute);\n\tfn.call(object, attribute);\n}\n</code></pre>\n<hr>\n<p>I wonder what that will break...</p>\n<p>Here is the test game with that change:<br>\nhttp://textadventures.co.uk/games/view/qxlugkg_ceo_-lx0m_uxkg/take-test-questjs</p>\n<hr>\n<blockquote>\n<p>What version of QuestJS are you using? Have you got a version you have been editing?</p>\n</blockquote>\n<p>Alex's last version of QuestJS won't compile a game that even loads.  It sticks at <code>setCss()</code> which is undefined.</p>\n<p>I have added a few JS functions to QuestJS (including <code>setCss()</code>), and I altered the CSS a little bit, but that's all.</p>\n<p>The files can be found here: https://github.com/KVonGit/QuestStuff/wiki/QuestJS-Patch-for-Quest-5.6.3</p>\n<p>I basically told QuestJS things like <code>NewList()</code> is the same thing as <code>[]</code>, and <code>NewDictionary()</code> is <code>{}</code>.  Besides that, I added Math and audio stuff.</p>\n<p>The CSS changes are just for the jjmenu stuff (the panes, if anyone besides Pixie, mrangel, or Pertex is still reading this).</p>\n\n",
      "PostDate": "2018-04-13T14:09:24.3776595Z",
      "LastEditDate": "2018-04-13T14:15:59.6159765Z",
      "link": null
    }
  ]
}
