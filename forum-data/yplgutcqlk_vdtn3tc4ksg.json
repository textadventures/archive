{
  "Topic": {
    "TopicId": "yplgutcqlk_vdtn3tc4ksg",
    "ForumId": "10",
    "Title": "Command Patterns",
    "LastUpdated": "2016-09-24T20:18:50.0599774Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "61443d72-2d0c-40d3-b614-e38217e0fd31",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was just wondering if there is a way to make different texts enable the same custom command. I know you can just add an entirely new copy of the same command multiple times and use a different name for each, but that take a while and is extremely annoying.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was just wondering if there is a way to make different texts enable the same custom command. I know you can just add an entirely new copy of the same command multiple times and use a different name for each, but that take a while and is extremely annoying.</p>\n\n",
      "PostDate": "2016-09-24T20:18:50.0599774Z",
      "LastEditDate": null
    },
    {
      "PostId": "20095c2b-0771-4595-b553-d8f0b0b014ab",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "could you explain in more detail at what you're asking for/about and/or what you want to do? As I'm not quite clear of what you're asking about.\r\n\r\n------------------------------------\r\n\r\nCommands are known (best) by (having) their (an) unique first word (\"activator/identifier word\") in their patterns, so you don't have any parsing issues, for examples:\r\n\r\n```\r\n<command name=\"kick_command\">\r\n  <pattern>kick #object_parameter_1#</pattern>\r\n  <script>\r\n    msg (\"You kick the \" + object_parameter_1 + \".\")\r\n  </script>\r\n</command>\r\n\r\n<command name=\"kiss_command\">\r\n  <pattern>kiss #object_parameter_1#</pattern>\r\n  <script>\r\n    msg (\"You kiss the \" + object_parameter_1 + \".\")\r\n  </script>\r\n</command>\r\n\r\nif I input 'kiss toad', there's no confusion, the 'kiss_command' Command will be the activated/used Command\r\nif I input 'kick toad', there's no confusion, the 'kick_command' Command will be the activated/used Command\r\n\r\n---------------------------------------\r\n\r\nhowever, if I had these Commands' Patterns:\r\n\r\n<command name=\"say_command\">\r\n  <pattern>say #text_parameter_1#</pattern>\r\n  <script>\r\n    msg (\"You say aloud \\\"\" + text_parameter_1 + \".\\\"\")\r\n  </script>\r\n</command>\r\n\r\n<command name=\"say_to_command\">\r\n  <pattern>say #text_parameter_1# to #object_parameter_1#</pattern>\r\n  <script>\r\n    msg (\"You say \\\" + text_parameter_1 + \"\\\" to \" + object_parameter_1 + \".\")\r\n  </script>\r\n</command>\r\n\r\nif I input:\r\n\r\nsay hi to bob\r\n\r\nand pretending my example is a good/working example, lol - not sure if it is a good/working example, then:\r\n\r\nit is uncertain which Command will be activated, as it could be either of them, producing either of these two results/displayments/outputs (a demonstration of the parsing issue with not using unique first words in the Commands' patterns):\r\n\r\nYou say aloud \"hi to bob.\" // the 'say_command' Command\r\nVS/OR\r\nYou say \"hi\" to bob. // the 'say_to_command' Command\r\n```\r\n\r\n-------------------\r\n\r\nyou can give the Command multiple/alternative patterns simply by using a semicolon in the Command's 'pattern' box:\r\n\r\nCommand Pattern: talk to #object#; speak to #object#; say to #object#; etc etc etc",
      "EditableFormat": "markdown",
      "HTML": "<p>could you explain in more detail at what you're asking for/about and/or what you want to do? As I'm not quite clear of what you're asking about.</p>\n<hr>\n<p>Commands are known (best) by (having) their (an) unique first word (\"activator/identifier word\") in their patterns, so you don't have any parsing issues, for examples:</p>\n<pre><code>&lt;command name=\"kick_command\"&gt;\n  &lt;pattern&gt;kick #object_parameter_1#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You kick the \" + object_parameter_1 + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=\"kiss_command\"&gt;\n  &lt;pattern&gt;kiss #object_parameter_1#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You kiss the \" + object_parameter_1 + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\nif I input 'kiss toad', there's no confusion, the 'kiss_command' Command will be the activated/used Command\nif I input 'kick toad', there's no confusion, the 'kick_command' Command will be the activated/used Command\n\n---------------------------------------\n\nhowever, if I had these Commands' Patterns:\n\n&lt;command name=\"say_command\"&gt;\n  &lt;pattern&gt;say #text_parameter_1#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say aloud \\\"\" + text_parameter_1 + \".\\\"\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=\"say_to_command\"&gt;\n  &lt;pattern&gt;say #text_parameter_1# to #object_parameter_1#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say \\\" + text_parameter_1 + \"\\\" to \" + object_parameter_1 + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\nif I input:\n\nsay hi to bob\n\nand pretending my example is a good/working example, lol - not sure if it is a good/working example, then:\n\nit is uncertain which Command will be activated, as it could be either of them, producing either of these two results/displayments/outputs (a demonstration of the parsing issue with not using unique first words in the Commands' patterns):\n\nYou say aloud \"hi to bob.\" // the 'say_command' Command\nVS/OR\nYou say \"hi\" to bob. // the 'say_to_command' Command\n</code></pre>\n<hr>\n<p>you can give the Command multiple/alternative patterns simply by using a semicolon in the Command's 'pattern' box:</p>\n<p>Command Pattern: talk to #object#; speak to #object#; say to #object#; etc etc etc</p>\n\n",
      "PostDate": "2016-09-24T20:40:05.5629644Z",
      "LastEditDate": "2016-09-24T20:50:01.3103673Z"
    },
    {
      "PostId": "fefc69f8-0b6a-4f5b-a731-39d3bbb3f8c1",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks a lot laddy. :D",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks a lot laddy. :D</p>\n\n",
      "PostDate": "2016-09-24T21:54:14.5721862Z",
      "LastEditDate": null
    },
    {
      "PostId": "ef5392f9-2a23-4a39-95dd-408774cbf89c",
      "UserId": 260969,
      "Username": "Enpherdaen",
      "AvatarUrl": "http://i.imgur.com/OSFSM1ab.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'll give you an example: \"Put ammuntion in gun, load revolver, use ammunition, load gun,\" etc. They all mean the same thing so, I'd like to make all of them activate the same command.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'll give you an example: \"Put ammuntion in gun, load revolver, use ammunition, load gun,\" etc. They all mean the same thing so, I'd like to make all of them activate the same command.</p>\n\n",
      "PostDate": "2016-09-24T21:57:30.0281259Z",
      "LastEditDate": null
    },
    {
      "PostId": "c1623942-76f1-4082-a1e0-cf18de0d3c4f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Command Pattern box:\r\n\r\nput ammunition in gun; load revolver; use ammunition; load gun",
      "EditableFormat": "markdown",
      "HTML": "<p>Command Pattern box:</p>\n<p>put ammunition in gun; load revolver; use ammunition; load gun</p>\n\n",
      "PostDate": "2016-09-25T05:53:34.0114965Z",
      "LastEditDate": null
    },
    {
      "PostId": "d8960c1f-c9b6-4882-8cfb-1c09aa7f59a1",
      "UserId": 237997,
      "Username": "DillonJHonore",
      "AvatarUrl": "http://i.imgur.com/pa8bEcmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What exactly does a \"command pattern\" do? (I know, I'm a noob, but I still want to know)",
      "EditableFormat": "markdown",
      "HTML": "<p>What exactly does a \"command pattern\" do? (I know, I'm a noob, but I still want to know)</p>\n\n",
      "PostDate": "2016-10-12T02:40:35.6909885Z",
      "LastEditDate": null
    },
    {
      "PostId": "34e91761-8ff6-49fd-a18d-f03e7ff45234",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The Command's 'pattern' is the structure/format that is used for parsing (string/text matching) the user's typed-in input during game play for selecting, activating, getting data for its use, and executing, of Commands.\r\n\r\nfor example (in code):\r\n\r\n```\r\n<command name=\"you_say_hi_command\">\r\n  <pattern>hi</pattern>\r\n  <script>\r\n    msg (\"You say hi.\")\r\n  </script>\r\n</command>\r\n```\r\n\r\nwhen the person playing the game, types in 'hi', the 'you_say_hi_command' is run/activated/executed.\r\n\r\n------\r\n\r\nit's important to have a unique 'first word' (what I like to describe as the 'activator word') for your Command's pattern, so that there won't be any problems with quest trying to parse (determine) what Command to run/execute.\r\n\r\nfor example:\r\n\r\n```\r\ncommand name=\"you_say_hi_command\">\r\n  <pattern>hi</pattern>\r\n  <script>\r\n    msg (\"You say hi.\")\r\n  </script>\r\n</command>\r\n\r\ncommand name=\"you_say_bye_command\">\r\n  <pattern>bye</pattern>\r\n  <script>\r\n    msg (\"You say bye.\")\r\n  </script>\r\n</command>\r\n```\r\n\r\nquest will not be confused, if/when you type in 'hi', as it is clear for it to run the 'hi' Command. And if/when you type in 'bye', it is clear to run the 'bye' Command.\r\n\r\nhowever, this is not clear, which Command to run:\r\n\r\n```\r\n<command name=\"you_say_hi_command\">\r\n  <pattern>hi</pattern>\r\n  <script>\r\n    msg (\"You say hi.\")\r\n  </script>\r\n</command>\r\n\r\n<command name=\"you_say_bye_command\">\r\n  <pattern>hi</pattern>\r\n  <script>\r\n    msg (\"You say bye.\")\r\n  </script>\r\n</command>\r\n```\r\n\r\nwhen you type in 'hi', quest (and people too) will have no idea which Command you wanted to select for activation/running. Does it run the 'hi' Command or does it run the 'bye' Command ???\r\n\r\nyou got to make your Commands' 'patterns' unique enough that they can be distinguished from one another, so that quest knows which one to run.\r\n\r\n-----\r\n\r\nmore examples of a Command's usage/features/abilities:\r\n\r\n```\r\n<command name=\"say_hi_to_inputed_value_command\">\r\n  <pattern>hi #object_parameter_1#</pattern>\r\n  <script>\r\n    msg (\"You say hi to \" + object_parameter_1.name + \".\")\r\n  </script>\r\n</command>\r\n\r\n<object name=\"room\">\r\n  <object name=\"player\">\r\n  </object>\r\n  <object name=\"bob\">\r\n  </object>\r\n  <object name=\"bill\">\r\n  </object>\r\n</object>\r\n```\r\n\r\nnow, if 'bob' and 'bill' were Objects within the same room as you, if you type in:\r\n\r\nhi bob\r\n// Output: You say hi to bob.\r\n\r\nhi bill\r\n// Output: You say hi to bill.\r\n\r\nyou can use as many:\r\n\r\n#textXXX# and/or #objectXXX# parameters as you like:\r\n\r\n(you must have the parameters' names/labels start as: '#text' or #object', and end as: '#', within the Command's pattern, and then within the scripting you just leave off the '#' characters/symbols)\r\n\r\n```\r\n<command name=\"mix_command\">\r\n  <pattern>mix #text1# #text2# #text3#</pattern>\r\n  <script>\r\n    msg (\"You mix: \" + text1.name + \", \" + text2.name + \", and \" + text3.name + \".\")\r\n  </script>\r\n</command>\r\n```\r\n\r\nif you type in:\r\n\r\nmix toad frog turtle\r\n// output: You mix: toad, frog, and turtle.",
      "EditableFormat": "markdown",
      "HTML": "<p>The Command's 'pattern' is the structure/format that is used for parsing (string/text matching) the user's typed-in input during game play for selecting, activating, getting data for its use, and executing, of Commands.</p>\n<p>for example (in code):</p>\n<pre><code>&lt;command name=\"you_say_hi_command\"&gt;\n  &lt;pattern&gt;hi&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say hi.\")\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>when the person playing the game, types in 'hi', the 'you_say_hi_command' is run/activated/executed.</p>\n<hr>\n<p>it's important to have a unique 'first word' (what I like to describe as the 'activator word') for your Command's pattern, so that there won't be any problems with quest trying to parse (determine) what Command to run/execute.</p>\n<p>for example:</p>\n<pre><code>command name=\"you_say_hi_command\"&gt;\n  &lt;pattern&gt;hi&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say hi.\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\ncommand name=\"you_say_bye_command\"&gt;\n  &lt;pattern&gt;bye&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say bye.\")\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>quest will not be confused, if/when you type in 'hi', as it is clear for it to run the 'hi' Command. And if/when you type in 'bye', it is clear to run the 'bye' Command.</p>\n<p>however, this is not clear, which Command to run:</p>\n<pre><code>&lt;command name=\"you_say_hi_command\"&gt;\n  &lt;pattern&gt;hi&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say hi.\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=\"you_say_bye_command\"&gt;\n  &lt;pattern&gt;hi&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say bye.\")\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>when you type in 'hi', quest (and people too) will have no idea which Command you wanted to select for activation/running. Does it run the 'hi' Command or does it run the 'bye' Command ???</p>\n<p>you got to make your Commands' 'patterns' unique enough that they can be distinguished from one another, so that quest knows which one to run.</p>\n<hr>\n<p>more examples of a Command's usage/features/abilities:</p>\n<pre><code>&lt;command name=\"say_hi_to_inputed_value_command\"&gt;\n  &lt;pattern&gt;hi #object_parameter_1#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You say hi to \" + object_parameter_1.name + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;object name=\"room\"&gt;\n  &lt;object name=\"player\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"bob\"&gt;\n  &lt;/object&gt;\n  &lt;object name=\"bill\"&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n</code></pre>\n<p>now, if 'bob' and 'bill' were Objects within the same room as you, if you type in:</p>\n<p>hi bob<br>\n// Output: You say hi to bob.</p>\n<p>hi bill<br>\n// Output: You say hi to bill.</p>\n<p>you can use as many:</p>\n<p>#textXXX# and/or #objectXXX# parameters as you like:</p>\n<p>(you must have the parameters' names/labels start as: '#text' or #object', and end as: '#', within the Command's pattern, and then within the scripting you just leave off the '#' characters/symbols)</p>\n<pre><code>&lt;command name=\"mix_command\"&gt;\n  &lt;pattern&gt;mix #text1# #text2# #text3#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"You mix: \" + text1.name + \", \" + text2.name + \", and \" + text3.name + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n<p>if you type in:</p>\n<p>mix toad frog turtle<br>\n// output: You mix: toad, frog, and turtle.</p>\n\n",
      "PostDate": "2016-10-12T18:10:45.808974Z",
      "LastEditDate": "2016-10-12T18:11:32.9972019Z"
    },
    {
      "PostId": "92c8dd50-d564-4e8e-ac6c-1ef888118403",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> when you type in 'hi', quest (and people too) will have no idea which Command you wanted to select for activation/running. Does it run the 'hi' Command or does it run the 'bye' Command ???\r\n\r\nQuest will run the bottom one. This is important because it allows creators to override the built-in commands, which are right at the top. Also, you should put more specific commands below more general ones.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>when you type in 'hi', quest (and people too) will have no idea which Command you wanted to select for activation/running. Does it run the 'hi' Command or does it run the 'bye' Command ???</p>\n</blockquote>\n<p>Quest will run the bottom one. This is important because it allows creators to override the built-in commands, which are right at the top. Also, you should put more specific commands below more general ones.</p>\n\n",
      "PostDate": "2016-10-12T20:49:38.8969929Z",
      "LastEditDate": null
    },
    {
      "PostId": "b67c0575-e0ad-4cc5-8779-b2e3aedf9fb5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah, didn't know that. Thanks Pixie for correcting me and explaining (whether HK can remember/recall this info is another matter).\r\n\r\nhmm, maybe then this example would better illustrate the parsing issue of that people have to be careful with for their patterns:\r\n\r\n```\r\n<command name=\"say_command\">\r\n  <pattern>say</pattern>\r\n  <script>\r\n    msg (\"hi\")\r\n  </script>\r\n</command>\r\n\r\nVS\r\n\r\n<command name=\"say_to_command\">\r\n  <pattern>say #object#</pattern>\r\n  <script>\r\n    msg (\"hi, \" + object.name + \".\")\r\n  </script>\r\n</command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>ah, didn't know that. Thanks Pixie for correcting me and explaining (whether HK can remember/recall this info is another matter).</p>\n<p>hmm, maybe then this example would better illustrate the parsing issue of that people have to be careful with for their patterns:</p>\n<pre><code>&lt;command name=\"say_command\"&gt;\n  &lt;pattern&gt;say&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"hi\")\n  &lt;/script&gt;\n&lt;/command&gt;\n\nVS\n\n&lt;command name=\"say_to_command\"&gt;\n  &lt;pattern&gt;say #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    msg (\"hi, \" + object.name + \".\")\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2016-10-13T07:22:46.6836074Z",
      "LastEditDate": null
    },
    {
      "PostId": "1fa6d02d-9b28-4890-ba57-b534978c1a41",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have been looking at how commands are resolved:\r\nhttps://github.com/ThePix/quest/wiki/Pattern-Matching-with-Regular-Expressions\r\n\r\nIt is more complicated than I thought, and in fact your say_to_command will win whether it is first or second because its match strength is higher. This is the number of matched characters outside the #object#, #text#, etc., so 4 for that and 3 for say_command.\r\n\r\nThat said, I think patterns have implicit anchors so the first will only match SAY, not SAY PIXIE; the second will not match SAY, but could match SAY PIXIE.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have been looking at how commands are resolved:<br>\nhttps://github.com/ThePix/quest/wiki/Pattern-Matching-with-Regular-Expressions</p>\n<p>It is more complicated than I thought, and in fact your say_to_command will win whether it is first or second because its match strength is higher. This is the number of matched characters outside the #object#, #text#, etc., so 4 for that and 3 for say_command.</p>\n<p>That said, I think patterns have implicit anchors so the first will only match SAY, not SAY PIXIE; the second will not match SAY, but could match SAY PIXIE.</p>\n\n",
      "PostDate": "2016-10-13T10:25:17.416856Z",
      "LastEditDate": null
    },
    {
      "PostId": "d3df8c75-a22c-41af-b116-100e4a03e768",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah, so the match strength testing uses priorities (number of matching words: more=greater priority; less=lesser priority) along with its parsing, and I'm still working on understanding your second part, lol.\r\n\r\n------\r\n\r\nthe programming class I'm taking right now is teaching this stuff (data structures/management):\r\n\r\nqueues, stacks, lists/arrays, dictionaries, priorities, linked lists, nodes, trees, heaps, grammers, axioms, etc\r\n\r\nthough, it's new stuff for me, so I'm struggling a bit with understanding it (I get the concepts pretty easily so far, but have trouble with what syntax/code is needed, along with the OOP/OOD --- it just confuses my brain --- can't keep track of stuff and/or how it all works together, etc etc etc --- as I've never really done OOP/OOD, so my brain isn't trained in this type of thinking and etc)",
      "EditableFormat": "markdown",
      "HTML": "<p>ah, so the match strength testing uses priorities (number of matching words: more=greater priority; less=lesser priority) along with its parsing, and I'm still working on understanding your second part, lol.</p>\n<hr>\n<p>the programming class I'm taking right now is teaching this stuff (data structures/management):</p>\n<p>queues, stacks, lists/arrays, dictionaries, priorities, linked lists, nodes, trees, heaps, grammers, axioms, etc</p>\n<p>though, it's new stuff for me, so I'm struggling a bit with understanding it (I get the concepts pretty easily so far, but have trouble with what syntax/code is needed, along with the OOP/OOD --- it just confuses my brain --- can't keep track of stuff and/or how it all works together, etc etc etc --- as I've never really done OOP/OOD, so my brain isn't trained in this type of thinking and etc)</p>\n\n",
      "PostDate": "2016-10-13T20:52:31.1575767Z",
      "LastEditDate": "2016-10-13T20:57:51.3455467Z"
    }
  ]
}
