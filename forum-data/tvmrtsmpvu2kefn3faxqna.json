{
  "Topic": {
    "TopicId": "tvmrtsmpvu2kefn3faxqna",
    "ForumId": "10",
    "Title": "Arrays",
    "LastUpdated": "2020-01-22T13:56:03.1285458Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "aa226bcb-2094-4e61-8dc0-fc7f91d20327",
      "UserId": 450907,
      "Username": "queste",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b00b2ee33e6a23b1a02b67a5333569b4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm looking to implement an form of array.  I have 64 integers. If I had an array and wanted to check the 7th value I would query ArrayName(7). I believe I could use dictionaries here with key as the array number.\r\n\r\nBut would this work if the key, or array value position, is based upon an expression? For example ArrayName(7 + a variable), or Arrayname (a variable).\r\n\r\nIf not with dictionaries or lists can this be achieved in Quest?\r\n\r\nUpdate: OKAY -it seems lists can partially do what I want, I can reference the 5th+variable item in a list.\r\n\r\nTherefore how do I change the value of a list item?\r\n\r\n So taking the fifth item in my list as an eample, do I need to create a second list that contains list items 0-4 from the original list,  a third list with my new 5th item and a fourth list containing list items 6-64 from the original list. Then join them together and somehow replace the original list with the new list?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm looking to implement an form of array.  I have 64 integers. If I had an array and wanted to check the 7th value I would query ArrayName(7). I believe I could use dictionaries here with key as the array number.</p>\n<p>But would this work if the key, or array value position, is based upon an expression? For example ArrayName(7 + a variable), or Arrayname (a variable).</p>\n<p>If not with dictionaries or lists can this be achieved in Quest?</p>\n<p>Update: OKAY -it seems lists can partially do what I want, I can reference the 5th+variable item in a list.</p>\n<p>Therefore how do I change the value of a list item?</p>\n<p>So taking the fifth item in my list as an eample, do I need to create a second list that contains list items 0-4 from the original list,  a third list with my new 5th item and a fourth list containing list items 6-64 from the original list. Then join them together and somehow replace the original list with the new list?</p>\n\n",
      "PostDate": "2020-01-22T13:56:03.1285458Z",
      "LastEditDate": "2020-01-22T14:31:30.3554206Z",
      "link": null
    },
    {
      "PostId": "dac8ad84-fc6a-4e47-8ae2-b10536490571",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It should work, no problem. Though Quest has a different syntax than what you provided, the general idea does indeed work.\r\n\r\nEdit: There should be no need to change a list item in a roundabout way. Just something like\r\n```\r\nStringListItem(ListName, Index)=10\r\n```\r\nshould do it.\r\n\r\nEdit Edit: No, this... apparently doesn't work?! What the hell, Quest?",
      "EditableFormat": "markdown",
      "HTML": "<p>It should work, no problem. Though Quest has a different syntax than what you provided, the general idea does indeed work.</p>\n<p>Edit: There should be no need to change a list item in a roundabout way. Just something like</p>\n<pre><code>StringListItem(ListName, Index)=10\n</code></pre>\n<p>should do it.</p>\n<p>Edit Edit: No, this... apparently doesn't work?! What the hell, Quest?</p>\n\n",
      "PostDate": "2020-01-22T14:32:08.7492491Z",
      "LastEditDate": "2020-01-22T14:36:07.8809473Z",
      "link": null
    },
    {
      "PostId": "3977207d-41f6-41f4-9fe3-c59c9023b479",
      "UserId": 450907,
      "Username": "queste",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b00b2ee33e6a23b1a02b67a5333569b4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks anyway, didn't think it would be that easy. I'll just go with the more roundabout method.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks anyway, didn't think it would be that easy. I'll just go with the more roundabout method.</p>\n\n",
      "PostDate": "2020-01-22T15:10:41.5446039Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "617515ea-2c69-44f8-b906-4b290a8009b3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sadly, Quest's list types don't allow you to change an item except by removal, or by adding an item to the end.\r\n\r\nHowever,\r\n> So taking the fifth item in my list as an eample, do I need to create a second list that contains list items 0-4 from the original list, a third list with my new 5th item and a fourth list containing list items 6-64 from the original list. Then join them together and somehow replace the original list with the new list?\r\n\r\nThis is more work than you need to do.\r\n\r\nA naive solution would be to remove all the items *after* the one you want to change, put them into another list, and then add them back after making the change; but this isn't feasible because you can only remove by value. You can't remove an item from the list if there's an identical item earlier in the list, because `list remove` removes the first match.\r\n\r\nSo the most efficient way to do this is actually:\r\n\r\n```\r\n<function name=\"SetListItem\" parameters=\"list, itemnumber, value\">\r\n  for (i, 0, ListCount (list) - 1) {\r\n    item = ListItem (list, 0)\r\n    list remove (list, item)\r\n    if (i = itemnumber) {\r\n      item = value\r\n    }\r\n    list add (list, item)\r\n  }\r\n</function>\r\n```\r\nThat loops over the list, removing every item from the beginning and putting it back on the end; except for the one you want to change, which is removed and then a different value added back to the end instead.\r\n\r\nIf you want to make it work on indexes past the end of the list, you'd do something like this:\r\n```\r\n<function name=\"SetListItem\" parameters=\"list, itemnumber, value\">\r\n  while (itemnumber >= ListCount (list)) {\r\n    list add (list, \"\")\r\n  }\r\n  if (itemnumber = ListCount (list)) {\r\n    list add (list, value)\r\n  }\r\n  else {\r\n    for (i, 0, ListCount (list) - 1) {\r\n      item = ListItem (list, 0)\r\n      list remove (list, item)\r\n      if (i = itemnumber) {\r\n        item = value\r\n      }\r\n      list add (list, item)\r\n    }\r\n  }\r\n</function>\r\n```\r\n(padding the list out with empty strings until it reaches the desired length)\r\n\r\nUsing dictionaries is likely going to be simpler; just use ToString() on the index, and remember that if you want to add or remove  items, it's up to you to renumber the later ones. Or create a linked list using objects, which I think should be feasible.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sadly, Quest's list types don't allow you to change an item except by removal, or by adding an item to the end.</p>\n<p>However,</p>\n<blockquote>\n<p>So taking the fifth item in my list as an eample, do I need to create a second list that contains list items 0-4 from the original list, a third list with my new 5th item and a fourth list containing list items 6-64 from the original list. Then join them together and somehow replace the original list with the new list?</p>\n</blockquote>\n<p>This is more work than you need to do.</p>\n<p>A naive solution would be to remove all the items <em>after</em> the one you want to change, put them into another list, and then add them back after making the change; but this isn't feasible because you can only remove by value. You can't remove an item from the list if there's an identical item earlier in the list, because <code>list remove</code> removes the first match.</p>\n<p>So the most efficient way to do this is actually:</p>\n<pre><code>&lt;function name=\"SetListItem\" parameters=\"list, itemnumber, value\"&gt;\n  for (i, 0, ListCount (list) - 1) {\n    item = ListItem (list, 0)\n    list remove (list, item)\n    if (i = itemnumber) {\n      item = value\n    }\n    list add (list, item)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>That loops over the list, removing every item from the beginning and putting it back on the end; except for the one you want to change, which is removed and then a different value added back to the end instead.</p>\n<p>If you want to make it work on indexes past the end of the list, you'd do something like this:</p>\n<pre><code>&lt;function name=\"SetListItem\" parameters=\"list, itemnumber, value\"&gt;\n  while (itemnumber &gt;= ListCount (list)) {\n    list add (list, \"\")\n  }\n  if (itemnumber = ListCount (list)) {\n    list add (list, value)\n  }\n  else {\n    for (i, 0, ListCount (list) - 1) {\n      item = ListItem (list, 0)\n      list remove (list, item)\n      if (i = itemnumber) {\n        item = value\n      }\n      list add (list, item)\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(padding the list out with empty strings until it reaches the desired length)</p>\n<p>Using dictionaries is likely going to be simpler; just use ToString() on the index, and remember that if you want to add or remove  items, it's up to you to renumber the later ones. Or create a linked list using objects, which I think should be feasible.</p>\n\n",
      "PostDate": "2020-01-22T18:36:54.0312179Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f408cea-e42a-405d-b7a4-122047e4af03",
      "UserId": 450907,
      "Username": "queste",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b00b2ee33e6a23b1a02b67a5333569b4?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks, mrangel, I'll see if I can make it work.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks, mrangel, I'll see if I can make it work.</p>\n\n",
      "PostDate": "2020-01-23T07:46:26.5164762Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
