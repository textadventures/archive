{
  "Topic": {
    "TopicId": "etfvbtpxbkk_iakwvkridw",
    "ForumId": "10",
    "Title": "Secondary Inventory Pane question",
    "LastUpdated": "2017-05-15T17:20:57.5936229Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "12e35ef7-3b46-48d6-abf8-6f0a47189dba",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Forgive some rambling, kinda trying to figure this concept out and my minds wandering, and a few inter connected questions as well\r\n\r\nI have been trying out new things and one of the problems I've found with my game is that inventory can get cluttered up a lot, many of the items players win are more like trophies than anything else.\r\n\r\nI'm almost sure my problem is handling scopes.\r\n\r\nI've Got the second panel(using the tutorial here)  working but handling the use of verbs for it has proven more cumbersome,  I'd simply like the player to be able to look at the trophies they have collected, \r\n\r\n\r\n\r\nI'd prefer to have the secondary inventory(Technically a room)'s contents to be looked with the look command), though i know most of my users just click the button for the verb when i provide it, but don't think i can do it using a verb since thats not global. \r\n\r\nI could likely work it with a command, but i'd have to add the coding to every item as well..\r\n\r\nIs there a way I can modify the commands to treat the secondary room as an inventory as well as the one based on the players direct children? \r\n\r\none further aside...would it be possible to add a third inventory pane as well?",
      "EditableFormat": "markdown",
      "HTML": "<p>Forgive some rambling, kinda trying to figure this concept out and my minds wandering, and a few inter connected questions as well</p>\n<p>I have been trying out new things and one of the problems I've found with my game is that inventory can get cluttered up a lot, many of the items players win are more like trophies than anything else.</p>\n<p>I'm almost sure my problem is handling scopes.</p>\n<p>I've Got the second panel(using the tutorial here)  working but handling the use of verbs for it has proven more cumbersome,  I'd simply like the player to be able to look at the trophies they have collected,</p>\n<p>I'd prefer to have the secondary inventory(Technically a room)'s contents to be looked with the look command), though i know most of my users just click the button for the verb when i provide it, but don't think i can do it using a verb since thats not global.</p>\n<p>I could likely work it with a command, but i'd have to add the coding to every item as well..</p>\n<p>Is there a way I can modify the commands to treat the secondary room as an inventory as well as the one based on the players direct children?</p>\n<p>one further aside...would it be possible to add a third inventory pane as well?</p>\n\n",
      "PostDate": "2017-05-15T17:20:57.5936229Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3400b7b0-976a-4a42-91ec-a298226d8fd4",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "( Stackable items )\r\nI thought about using certain counters/status attributes for stacked items. I.E., potions, oran berries, etc.\r\n\r\nI.E.\r\nGold\r\nOran Berries\r\nSitrus Berries\r\n\r\nplayer.sitrus = 1\r\nplayer.oran = 5\r\nplayer.gold = 500\r\nplayer.statusattributes = NewStringDictionary()\r\ndictionary add (player.statusattributes, \"hitpoints\", \"Hit points: !\")\r\ndictionary add (player.statusattributes, \"ammo\", \"Spare ammo: !\")\r\ndictionary add (player.statusattributes, \"equippedname\", \"Weapon: !\")\r\ndictionary add (player.statusattributes, \"ammonote\", \"Ammo: !\")\r\ndictionary add (player.statusattributes, \"plevel\", \"plevel: !\")\r\ndictionary add (player.statusattributes, \"exp\", \"exp: !\")\r\ndictionary add (player.statusattributes, \"sitrus\", \"Sitrus Berries: !\")\r\ndictionary add (player.statusattributes, \"oran\", \"Oran Berries: !\")\r\ndictionary add (player.statusattributes, \"gold\", \"Gold: !\")\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>( Stackable items )<br>\nI thought about using certain counters/status attributes for stacked items. I.E., potions, oran berries, etc.</p>\n<p>I.E.<br>\nGold<br>\nOran Berries<br>\nSitrus Berries</p>\n<p>player.sitrus = 1<br>\nplayer.oran = 5<br>\nplayer.gold = 500<br>\nplayer.statusattributes = NewStringDictionary()<br>\ndictionary add (player.statusattributes, \"hitpoints\", \"Hit points: !\")<br>\ndictionary add (player.statusattributes, \"ammo\", \"Spare ammo: !\")<br>\ndictionary add (player.statusattributes, \"equippedname\", \"Weapon: !\")<br>\ndictionary add (player.statusattributes, \"ammonote\", \"Ammo: !\")<br>\ndictionary add (player.statusattributes, \"plevel\", \"plevel: !\")<br>\ndictionary add (player.statusattributes, \"exp\", \"exp: !\")<br>\ndictionary add (player.statusattributes, \"sitrus\", \"Sitrus Berries: !\")<br>\ndictionary add (player.statusattributes, \"oran\", \"Oran Berries: !\")<br>\ndictionary add (player.statusattributes, \"gold\", \"Gold: !\")</p>\n\n",
      "PostDate": "2017-05-15T18:31:03.7643709Z",
      "LastEditDate": "2017-06-07T01:10:23.2660144Z",
      "link": null
    },
    {
      "PostId": "ffe3d6bd-bab7-45d4-afbf-222567c38055",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "creating and working with a second pane is outside of my knowledge (hadn't gotten around to learning/studying Pixie's guide on it)\r\n\r\n----------\r\n\r\nhowever, creating a storage system is within my knowledge/ability, see this link for some initial guidance on it:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/tlwqhb7i7k2xuhlt-za_fq/having-multiple-of-the-same-item-in-the-inventory\r\n(read/scroll down the thread, see my two posts)\r\n\r\nSora's stackable library might be within my knowledge and ability now... but I'd have to study how he/she did it, and/or figure out my own design for doing it...",
      "EditableFormat": "markdown",
      "HTML": "<p>creating and working with a second pane is outside of my knowledge (hadn't gotten around to learning/studying Pixie's guide on it)</p>\n<hr>\n<p>however, creating a storage system is within my knowledge/ability, see this link for some initial guidance on it:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/tlwqhb7i7k2xuhlt-za_fq/having-multiple-of-the-same-item-in-the-inventory<br>\n(read/scroll down the thread, see my two posts)</p>\n<p>Sora's stackable library might be within my knowledge and ability now... but I'd have to study how he/she did it, and/or figure out my own design for doing it...</p>\n\n",
      "PostDate": "2017-05-16T06:36:01.6939708Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2e4005ca-fa64-4240-a1d8-246877b0a298",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "about 'inventory'....\r\n\r\nbut first about containment...\r\n\r\n1. \"physical/actual\" Containment: the Object is (contained) within another Object\r\n\r\n```\r\n// nesting (in code, but can be done through the GUI/Editor too: add Object to/within another Object):\r\n\r\n<object name=\"room\">\r\n  <object name=\"player\">\r\n  </object>\r\n</object>\r\n\r\nor (the 'parent' Attribute is what actually handles containment, under the surface)\r\n\r\n<object name=\"room\">\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n\r\nor (scripting):\r\n\r\nplayer.parent = room\r\nor\r\nMoveObject (player, room)\r\nor\r\nset (player, \"parent\", room)\r\n```\r\n\r\n2. logical containment: the 'Object' Attribute and the 'Objectlist' Attribute\r\n\r\nthink of these Attributes as a school P.E. roster of student names (single student name: Object Attribute, multiple student names: Objectlist Attribute). Obviously the students are not actually on/within the paper roster, lol. However, this roster can be used to bark orders (actions) to the students. Object Attributes and Objectlist Attributes hold Object references/pointers (the Object's/s' name in this case), not the actual/physical Objects themselves.\r\n\r\n-------\r\n\r\nnow.... back to 'inventory'\r\n\r\nspecifically the 'inventory' is refering to the 'game.pov' Player Object (such as the default 'player' Player Object) and to the 'inventory' Objectlist Attribute in quest's underying coding (which you can access via the 'ScopeInventory()' Scope Function), which handles all of this for you.\r\n\r\nthere's a lot of code work required to have this all working nicely for you, if you want to create additional panes... quest has this already done for you for the default pane... but you got to re-create all the code for handling any additional panes... better be a good programmer...\r\n\r\nfor all of us non-good programmers, instead create your own storage system (which is more simple than the above, lol)\r\n\r\n-------\r\n\r\nthe 'Contains, GetObject' Functions checks the Object (and also its nested/sub/within Objects) itself for if it has the Object physically/actually inside of it.\r\n\r\n'ListContains, DictionaryContains, AllObjects, GetDirectChildren, GetAllChildren, and all of the Scopes' all deal with an Object's (assuming it has an ObjectList Attribute: aka MAKE SURE it does, lol) 'Objectlist' Attribute.",
      "EditableFormat": "markdown",
      "HTML": "<p>about 'inventory'....</p>\n<p>but first about containment...</p>\n<ol>\n<li>\"physical/actual\" Containment: the Object is (contained) within another Object</li>\n</ol>\n<pre><code>// nesting (in code, but can be done through the GUI/Editor too: add Object to/within another Object):\n\n&lt;object name=\"room\"&gt;\n  &lt;object name=\"player\"&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\nor (the 'parent' Attribute is what actually handles containment, under the surface)\n\n&lt;object name=\"room\"&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n\nor (scripting):\n\nplayer.parent = room\nor\nMoveObject (player, room)\nor\nset (player, \"parent\", room)\n</code></pre>\n<ol start=\"2\">\n<li>logical containment: the 'Object' Attribute and the 'Objectlist' Attribute</li>\n</ol>\n<p>think of these Attributes as a school P.E. roster of student names (single student name: Object Attribute, multiple student names: Objectlist Attribute). Obviously the students are not actually on/within the paper roster, lol. However, this roster can be used to bark orders (actions) to the students. Object Attributes and Objectlist Attributes hold Object references/pointers (the Object's/s' name in this case), not the actual/physical Objects themselves.</p>\n<hr>\n<p>now.... back to 'inventory'</p>\n<p>specifically the 'inventory' is refering to the 'game.pov' Player Object (such as the default 'player' Player Object) and to the 'inventory' Objectlist Attribute in quest's underying coding (which you can access via the 'ScopeInventory()' Scope Function), which handles all of this for you.</p>\n<p>there's a lot of code work required to have this all working nicely for you, if you want to create additional panes... quest has this already done for you for the default pane... but you got to re-create all the code for handling any additional panes... better be a good programmer...</p>\n<p>for all of us non-good programmers, instead create your own storage system (which is more simple than the above, lol)</p>\n<hr>\n<p>the 'Contains, GetObject' Functions checks the Object (and also its nested/sub/within Objects) itself for if it has the Object physically/actually inside of it.</p>\n<p>'ListContains, DictionaryContains, AllObjects, GetDirectChildren, GetAllChildren, and all of the Scopes' all deal with an Object's (assuming it has an ObjectList Attribute: aka MAKE SURE it does, lol) 'Objectlist' Attribute.</p>\n\n",
      "PostDate": "2017-05-16T06:58:01.7083388Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a3677ae6-81ba-478b-b7b4-2773d5ee760c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this the second inventory you found?\r\nhttps://github.com/ThePix/quest/wiki/Second-Inventory-Library\r\n\r\nIf objects are in a different room, you need a way to access them:\r\nhttps://github.com/ThePix/quest/wiki/Commands-with-unusual-scopes\r\n\r\nThat said, if these are standard commands like LOOK AT, I am not sure that will work. You may need to override the built-in ScopeReachable command to include your  room too.\r\n\r\nA guy called Sora created a library to stack items in the inventory, and an updated version of his library (plus demo) is here:\r\nhttps://github.com/ThePix/quest/blob/master/StackLibrary.aslx\r\nhttps://github.com/ThePix/quest/blob/master/StackDemo.aslx\r\n\r\nAn alternative solution is to put the objects in a container; the player can open it to see the contains or close it to hide the contents (you could add show/hide verbs to the container to make it more abstract, rather than an extra container.",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this the second inventory you found?<br>\nhttps://github.com/ThePix/quest/wiki/Second-Inventory-Library</p>\n<p>If objects are in a different room, you need a way to access them:<br>\nhttps://github.com/ThePix/quest/wiki/Commands-with-unusual-scopes</p>\n<p>That said, if these are standard commands like LOOK AT, I am not sure that will work. You may need to override the built-in ScopeReachable command to include your  room too.</p>\n<p>A guy called Sora created a library to stack items in the inventory, and an updated version of his library (plus demo) is here:<br>\nhttps://github.com/ThePix/quest/blob/master/StackLibrary.aslx<br>\nhttps://github.com/ThePix/quest/blob/master/StackDemo.aslx</p>\n<p>An alternative solution is to put the objects in a container; the player can open it to see the contains or close it to hide the contents (you could add show/hide verbs to the container to make it more abstract, rather than an extra container.</p>\n\n",
      "PostDate": "2017-05-16T07:57:43.0293092Z",
      "LastEditDate": "2017-05-16T09:02:50.2299932Z",
      "link": null
    },
    {
      "PostId": "abe12284-286d-4803-857d-d45f10ff4284",
      "UserId": 227864,
      "Username": "Talon",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3b6191c9adc337e83fec8e293e3fc584?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Very Close Pixie, was using the one put together by Jay  which that link was based on.\r\n\r\nStacking probally isn't a concern here, thinking more of each trophy being unique(trainer badges for a easy to understand example)\r\n\r\n\r\nhmmm going to take a look through these, not sure they'll work but its some good reading material, not sure why but never considered modifying the scope reachable function, had been playing around with modifying the command side instead\r\n\r\nThe container is oddly the idea i had first, but was unable to get the contents of the container to appear in the second inv panel rather than the default\r\n\r\n\r\nWill see what i get up to this evening when i get back",
      "EditableFormat": "markdown",
      "HTML": "<p>Very Close Pixie, was using the one put together by Jay  which that link was based on.</p>\n<p>Stacking probally isn't a concern here, thinking more of each trophy being unique(trainer badges for a easy to understand example)</p>\n<p>hmmm going to take a look through these, not sure they'll work but its some good reading material, not sure why but never considered modifying the scope reachable function, had been playing around with modifying the command side instead</p>\n<p>The container is oddly the idea i had first, but was unable to get the contents of the container to appear in the second inv panel rather than the default</p>\n<p>Will see what i get up to this evening when i get back</p>\n\n",
      "PostDate": "2017-05-16T14:20:25.5952477Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eb2b6ce8-0075-483d-9d37-7934cba80077",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another alternative would be to just flag when the player has a trophy, rather than implementing each as an actual object. Your second panel is then a new status panel, the content determined by the flags.",
      "EditableFormat": "markdown",
      "HTML": "<p>Another alternative would be to just flag when the player has a trophy, rather than implementing each as an actual object. Your second panel is then a new status panel, the content determined by the flags.</p>\n\n",
      "PostDate": "2017-05-16T14:23:37.2254624Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "706d6122-7f18-465e-9700-a16207d14958",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "actually, since you're not working with things/stuff that are used in-game (such as: trophies/quest-mission-event-items/rewards/achievements/perks/etc), it might be best to just have them as List/Dictionary Attributes... which you can use the list/dictionary handling for whatever you might want with them.",
      "EditableFormat": "markdown",
      "HTML": "<p>actually, since you're not working with things/stuff that are used in-game (such as: trophies/quest-mission-event-items/rewards/achievements/perks/etc), it might be best to just have them as List/Dictionary Attributes... which you can use the list/dictionary handling for whatever you might want with them.</p>\n\n",
      "PostDate": "2017-05-16T14:39:09.4935304Z",
      "LastEditDate": "2017-05-16T14:41:08.4825106Z",
      "link": null
    }
  ]
}
