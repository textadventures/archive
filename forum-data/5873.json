{
  "Topic": {
    "TopicId": "5873",
    "ForumId": "10",
    "Title": "Drawing randomly from a script dictionary",
    "LastUpdated": "2016-01-24T19:11:52+00:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "40597",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "So, I am talking to an NPC.  His responses are randomly pulled from a string list of 7 or 8 responses.\n\nFrom within the GUI, is there a way to set a flag when he specifically says one or two of those responses?  If so how?  If not, I guess I can weasel around in code view... <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> \n\n[code:3utdazgq]&lt;value&gt;'I'm old&#46;  I'm hungry&#46;  And I don't need you!'&lt;/value&gt;[/code:3utdazgq]\n\nHere is one of the comments he makes.  Where would I put --&gt; SetObjectFlagOn (chickens, &quot;ready&quot;)\n\n'I'm old.  I'm hungry.  And I don't need you!'&lt;/value&gt; SetObjectFlagOn (chickens, &quot;ready&quot;)     ???\n\n'I'm old.  I'm hungry.  And I don't need you!'&lt;/value&gt;     \nSetObjectFlagOn (chickens, &quot;ready&quot;)           ?????\n\nAnd... certainly, if it is after, I would need a separator, right?  Maybe a ,\nAnd... certainly, if it is under that response, would it need indented?\n\nI don't know!!  Code syntax kills me!\n\nThanks!",
      "EditableFormat": "bbcode",
      "HTML": "So, I am talking to an NPC.  His responses are randomly pulled from a string list of 7 or 8 responses.<br/><br/>From within the GUI, is there a way to set a flag when he specifically says one or two of those responses?  If so how?  If not, I guess I can weasel around in code view... <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> <br/><br/><pre><code>&lt;value&gt;'I'm old&#46;  I'm hungry&#46;  And I don't need you!'&lt;/value&gt;</code></pre><br/><br/>Here is one of the comments he makes.  Where would I put --&gt; SetObjectFlagOn (chickens, &quot;ready&quot;)<br/><br/>'I'm old.  I'm hungry.  And I don't need you!'&lt;/value&gt; SetObjectFlagOn (chickens, &quot;ready&quot;)     ???<br/><br/>'I'm old.  I'm hungry.  And I don't need you!'&lt;/value&gt;     <br/>SetObjectFlagOn (chickens, &quot;ready&quot;)           ?????<br/><br/>And... certainly, if it is after, I would need a separator, right?  Maybe a ,<br/>And... certainly, if it is under that response, would it need indented?<br/><br/>I don't know!!  Code syntax kills me!<br/><br/>Thanks!",
      "PostDate": "2016-01-14T00:15:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40616",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you don't mind trying to use a Script Dictionary Attribute instead of a String List Attribute, it'd be an &quot;easy&quot; (riiight) way to do this stuff, as a Script Dictionary Attribute allows you to add Scripts (you'd use the 'msg' Script for your responses, and after that Script you can have your Boolean Attribute setting Script, and then an 'if' Script to check the Boolean Attribute, with Scripts for each condition, boolean = true vs boolean = false, though I think you'd have to do the randomization-selection of your responses a bit differently in code design, as I don't think dictionaries also have index numbers ~ I could be wrong):\n\nConceptually, a Script Dictionary Attribute:\n\nkey item 1: evil_wizard\nvalue 1A: (whatever script)\nvalue 1B: (whatever script)\nvalue 1etc: (whatever script)\n\nkey item 2: dragon_slaying_sword\nvalue 2A: (whatever script)\nvalue 2B: (whatever script)\nvalue 2etc: (whatever script)\n\nkey item 3: dragon\nvalue 3A: (whatever script)\nvalue 3B: (whatever script)\nvalue 3etc: (whatever script)\n\nkey item 4: king\nvalue 4A: (whatever script)\nvalue 4B: (whatever script)\nvalue 4etc: (whatever script)\n\nkey item 5: princess\nvalue 5A: (whatever script)\nvalue 5B: (whatever script)\nvalue 5etc: (whatever script)\n\nitem key X: whatever\nvalue XA: (whatever script)\nvalue XB: (whatever script)\nvalue Xetc: (whatever script)\n\ninstead of a stringlist using index~position numbers for its items, you use actual words~strings, so if &quot;evil_wizard&quot; is selected, you'd do all of its values (added scripts), if &quot;dragon_slaying_sword&quot; is selected, you'd do all of its values (scripts), etc etc etc\n\nA stringlist is stuck to using just strings (a limited msg script only), whereas a scriptdictionary you can use scripts (which means you can do ANY script&#058; a 'msg' Script, a 'set a variable or attribute' Script, an 'if' Script, and etc, AND as many scripts as you want too).\n\nConceptually a String List Attribute:\n\n(the index, number ~ position, starts from: the first added item to your list if using the GUI~Editor ===or=== the leftmost item in your list if doing it in code) \n\nkey (index number~position): 0\nvalue (string): (whatever phrase: a word or sentence or paragraph)\n\nkey (index number~position): 1\nvalue (string): (whatever phrase: a word or sentence or paragraph)\n\nkey (index number~position): 2\nvalue (string): (whatever phrase: a word or sentence or paragraph)\n\nkey (index number~position): #etc\nvalue (string): (whatever phrase: a word or sentence or paragraph)\n\n----------------------------\n\n(you still want to have a stringlist of, to hold~store, your responses, but we'll be using a scriptdictionary for adding in our scripts)\n\n------------------------------\n\n(a very complex-advance example, lol - sorry this interested me, so I tried to make it as powerful as I could in my limited ability)\n\n[code:3shmiym6]&lt;command name=&quot;npc_response_command&quot;&gt;\n  &lt;pattern&gt;response #object#&lt;/pattern&gt;\n  &lt;script&gt;\n    if (ListContains (global_data_object&#46;npc_response_list, object&#46;name)) {\n      invoke (global_data_object&#46;npc_selection_dictionary, object&#46;name)\n    } else {\n      msg (&quot;Your inputted object is not an npc or it is not an npc that can respond to you&quot;)\n    }\n  &lt;/script&gt;\n  &lt;unresolved&gt;Your input is not a visable object, or is not an existing object in the game&lt;/unresolved&gt;\n&lt;/command&gt;\n\n&lt;object name=&quot;global_data_object&quot;&gt;\n\n  &lt;npc_response_list type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;npc1&lt;/value&gt;\n    &lt;value&gt;npc2&lt;/value&gt;\n    // etc npcs\n  &lt;/npc_response_list&gt;\n\n  &lt;npc1_response_list type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;hi, how are you?&lt;/value&gt;\n    &lt;value&gt;goodbye, have a nice day&#46;&lt;/value&gt;\n    // etc\n  &lt;/npc1_response_list&gt;\n  \n  &lt;npc2_response_list type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;what time is it?&lt;/value&gt;\n    &lt;value&gt;what day is it?&lt;/value&gt;\n    // etc\n  &lt;/npc2_response_list&gt;\n  \n  // etc npcX response stringlists\n  \n  &lt;npc_selection_dictionary type=&quot;scriptdictionary&quot;&gt;\n  \n    &lt;item key=&quot;npc1&quot;&gt;\n      random_selection = GetRandomInt (0, ListCount (global_data_object&#46;npc1_response_list) - 1)\n      invoke (StringListItem (global_data_object&#46;npc1_response_list, random_selection))\n      invoke (ScriptDictionaryItem (global_data_object&#46;npc1_response_dictionary, random_selection))\n    &lt;/item&gt;\n  \n    &lt;item key=&quot;npc2&quot;&gt;\n      random_selection = GetRandomInt (0, ListCount (global_data_object&#46;npc2_response_list) - 1)\n      invoke (StringListItem (global_data_object&#46;npc2_response_list, random_selection))\n      invoke (ScriptDictionaryItem (global_data_object&#46;npc2_response_dictionary, random_selection))\n    &lt;/item&gt;\n    \n    // etc etc etc\n    \n  &lt;/npc_selection_dictionary&gt;\n  \n  &lt;npc1_response_dictionary type=&quot;scriptdictionary&quot;&gt;\n  \n    &lt;item key=&quot;0&quot;&gt;\n      // script that sets your flag Attribute for response '0', so, for this example, let's say&#58; SetObjectFlagOn (npc1, &quot;hi_boolean_flag&quot;)\n      // actually, with this design, you really don't need to set a flag attribute, you can just add your desired script (your script that runs when&#58; as if we were using a boolean flag and its set to true) right here \n    &lt;/item&gt;\n  \n    &lt;item key=&quot;1&quot;&gt;\n      // script that sets your flag Attribute for response '1', so, for this example, let's say&#58; SetObjectFlagOn (npc1, &quot;bye_boolean_flag&quot;)\n      // actually, with this design, you really don't need to set a flag attribute, you can just add your desired script (your script that runs when&#58; as if we were using a boolean flag and its set to true) right here \n    &lt;/item&gt;\n    \n    // etc etc etc\n \n  &lt;/npc1_response_dictionary&gt;\n  \n  &lt;npc2_response_dictionary type=&quot;scriptdictionary&quot;&gt;\n  \n    &lt;item key=&quot;0&quot;&gt;\n      // script that sets your flag Attribute for response '0', so, for this example, let's say&#58; SetObjectFlagOn (npc2, &quot;time_boolean_flag&quot;)\n    &lt;/item&gt;\n  \n    &lt;item key=&quot;1&quot;&gt;\n      // script that sets your flag Attribute for response '1', so, for this example, let's say&#58; SetObjectFlagOn (npc2, &quot;day_boolean_flag&quot;)\n    &lt;/item&gt;\n    \n    // etc etc etc\n \n  &lt;/npc2_response_dictionary&gt;\n  \n  // etc npcX response dictionaries\n  \n&lt;/object&gt;[/code:3shmiym6]\n\n------------\n\nif you don't want to use a scriptdictionary attribute instead...\n\nyou need to be able to collect~store (aka: set to another Attribute, or use, set to, a variable in your scripting block) your randomly selected response or its flag attribute, so you can then check it, if~switch (response_or_flag_X), to do the conditional of whether you run that following~nested script or not.\n\nmy complex code does have some example ways of doing this, albiet possibly not easily to notice~recognize, though",
      "EditableFormat": "bbcode",
      "HTML": "if you don't mind trying to use a Script Dictionary Attribute instead of a String List Attribute, it'd be an &quot;easy&quot; (riiight) way to do this stuff, as a Script Dictionary Attribute allows you to add Scripts (you'd use the 'msg' Script for your responses, and after that Script you can have your Boolean Attribute setting Script, and then an 'if' Script to check the Boolean Attribute, with Scripts for each condition, boolean = true vs boolean = false, though I think you'd have to do the randomization-selection of your responses a bit differently in code design, as I don't think dictionaries also have index numbers ~ I could be wrong):<br/><br/>Conceptually, a Script Dictionary Attribute:<br/><br/>key item 1: evil_wizard<br/>value 1A: (whatever script)<br/>value 1B: (whatever script)<br/>value 1etc: (whatever script)<br/><br/>key item 2: dragon_slaying_sword<br/>value 2A: (whatever script)<br/>value 2B: (whatever script)<br/>value 2etc: (whatever script)<br/><br/>key item 3: dragon<br/>value 3A: (whatever script)<br/>value 3B: (whatever script)<br/>value 3etc: (whatever script)<br/><br/>key item 4: king<br/>value 4A: (whatever script)<br/>value 4B: (whatever script)<br/>value 4etc: (whatever script)<br/><br/>key item 5: princess<br/>value 5A: (whatever script)<br/>value 5B: (whatever script)<br/>value 5etc: (whatever script)<br/><br/>item key X: whatever<br/>value XA: (whatever script)<br/>value XB: (whatever script)<br/>value Xetc: (whatever script)<br/><br/>instead of a stringlist using index~position numbers for its items, you use actual words~strings, so if &quot;evil_wizard&quot; is selected, you'd do all of its values (added scripts), if &quot;dragon_slaying_sword&quot; is selected, you'd do all of its values (scripts), etc etc etc<br/><br/>A stringlist is stuck to using just strings (a limited msg script only), whereas a scriptdictionary you can use scripts (which means you can do ANY script&#058; a 'msg' Script, a 'set a variable or attribute' Script, an 'if' Script, and etc, AND as many scripts as you want too).<br/><br/>Conceptually a String List Attribute:<br/><br/>(the index, number ~ position, starts from: the first added item to your list if using the GUI~Editor ===or=== the leftmost item in your list if doing it in code) <br/><br/>key (index number~position): 0<br/>value (string): (whatever phrase: a word or sentence or paragraph)<br/><br/>key (index number~position): 1<br/>value (string): (whatever phrase: a word or sentence or paragraph)<br/><br/>key (index number~position): 2<br/>value (string): (whatever phrase: a word or sentence or paragraph)<br/><br/>key (index number~position): #etc<br/>value (string): (whatever phrase: a word or sentence or paragraph)<br/><br/>----------------------------<br/><br/>(you still want to have a stringlist of, to hold~store, your responses, but we'll be using a scriptdictionary for adding in our scripts)<br/><br/>------------------------------<br/><br/>(a very complex-advance example, lol - sorry this interested me, so I tried to make it as powerful as I could in my limited ability)<br/><br/><pre><code>&lt;command name=&quot;npc_response_command&quot;&gt;<br/>  &lt;pattern&gt;response #object#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    if (ListContains (global_data_object&#46;npc_response_list, object&#46;name)) {<br/>      invoke (global_data_object&#46;npc_selection_dictionary, object&#46;name)<br/>    } else {<br/>      msg (&quot;Your inputted object is not an npc or it is not an npc that can respond to you&quot;)<br/>    }<br/>  &lt;/script&gt;<br/>  &lt;unresolved&gt;Your input is not a visable object, or is not an existing object in the game&lt;/unresolved&gt;<br/>&lt;/command&gt;<br/><br/>&lt;object name=&quot;global_data_object&quot;&gt;<br/><br/>  &lt;npc_response_list type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;npc1&lt;/value&gt;<br/>    &lt;value&gt;npc2&lt;/value&gt;<br/>    // etc npcs<br/>  &lt;/npc_response_list&gt;<br/><br/>  &lt;npc1_response_list type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;hi, how are you?&lt;/value&gt;<br/>    &lt;value&gt;goodbye, have a nice day&#46;&lt;/value&gt;<br/>    // etc<br/>  &lt;/npc1_response_list&gt;<br/>  <br/>  &lt;npc2_response_list type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;what time is it?&lt;/value&gt;<br/>    &lt;value&gt;what day is it?&lt;/value&gt;<br/>    // etc<br/>  &lt;/npc2_response_list&gt;<br/>  <br/>  // etc npcX response stringlists<br/>  <br/>  &lt;npc_selection_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>  <br/>    &lt;item key=&quot;npc1&quot;&gt;<br/>      random_selection = GetRandomInt (0, ListCount (global_data_object&#46;npc1_response_list) - 1)<br/>      invoke (StringListItem (global_data_object&#46;npc1_response_list, random_selection))<br/>      invoke (ScriptDictionaryItem (global_data_object&#46;npc1_response_dictionary, random_selection))<br/>    &lt;/item&gt;<br/>  <br/>    &lt;item key=&quot;npc2&quot;&gt;<br/>      random_selection = GetRandomInt (0, ListCount (global_data_object&#46;npc2_response_list) - 1)<br/>      invoke (StringListItem (global_data_object&#46;npc2_response_list, random_selection))<br/>      invoke (ScriptDictionaryItem (global_data_object&#46;npc2_response_dictionary, random_selection))<br/>    &lt;/item&gt;<br/>    <br/>    // etc etc etc<br/>    <br/>  &lt;/npc_selection_dictionary&gt;<br/>  <br/>  &lt;npc1_response_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>  <br/>    &lt;item key=&quot;0&quot;&gt;<br/>      // script that sets your flag Attribute for response '0', so, for this example, let's say&#58; SetObjectFlagOn (npc1, &quot;hi_boolean_flag&quot;)<br/>      // actually, with this design, you really don't need to set a flag attribute, you can just add your desired script (your script that runs when&#58; as if we were using a boolean flag and its set to true) right here <br/>    &lt;/item&gt;<br/>  <br/>    &lt;item key=&quot;1&quot;&gt;<br/>      // script that sets your flag Attribute for response '1', so, for this example, let's say&#58; SetObjectFlagOn (npc1, &quot;bye_boolean_flag&quot;)<br/>      // actually, with this design, you really don't need to set a flag attribute, you can just add your desired script (your script that runs when&#58; as if we were using a boolean flag and its set to true) right here <br/>    &lt;/item&gt;<br/>    <br/>    // etc etc etc<br/> <br/>  &lt;/npc1_response_dictionary&gt;<br/>  <br/>  &lt;npc2_response_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>  <br/>    &lt;item key=&quot;0&quot;&gt;<br/>      // script that sets your flag Attribute for response '0', so, for this example, let's say&#58; SetObjectFlagOn (npc2, &quot;time_boolean_flag&quot;)<br/>    &lt;/item&gt;<br/>  <br/>    &lt;item key=&quot;1&quot;&gt;<br/>      // script that sets your flag Attribute for response '1', so, for this example, let's say&#58; SetObjectFlagOn (npc2, &quot;day_boolean_flag&quot;)<br/>    &lt;/item&gt;<br/>    <br/>    // etc etc etc<br/> <br/>  &lt;/npc2_response_dictionary&gt;<br/>  <br/>  // etc npcX response dictionaries<br/>  <br/>&lt;/object&gt;</code></pre><br/><br/>------------<br/><br/>if you don't want to use a scriptdictionary attribute instead...<br/><br/>you need to be able to collect~store (aka: set to another Attribute, or use, set to, a variable in your scripting block) your randomly selected response or its flag attribute, so you can then check it, if~switch (response_or_flag_X), to do the conditional of whether you run that following~nested script or not.<br/><br/>my complex code does have some example ways of doing this, albiet possibly not easily to notice~recognize, though",
      "PostDate": "2016-01-14T18:00:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40619",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "So, a string dictionary is just like a string list except instead of adding strings (messages in this case), I would add scripts in which I could place a flag?\n\nI've obviously never used string dictionaries. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "So, a string dictionary is just like a string list except instead of adding strings (messages in this case), I would add scripts in which I could place a flag?<br/><br/>I've obviously never used string dictionaries. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2016-01-14T20:43:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40644",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, except you hopefully meant a *SCRIPT* Dictionary, not a String Dictionary, and there's the difference of it's key-value using 'words (actually you can use phrases: single words or multiple words: sentences ~ generally usually you'd use just a word though... unless you really want~need to match-up-use an entire msg block-response in~for your game design)' instead of index numbers\n\n(think of dictionaries as like 'input-&gt;output' boxes, or if you rather, think of it kinda like the 'switch' Function~Script or an 'if-then' Script~Function)\n\nString Dictionary:\n\nstring = string\n\nexample:\n\n[code:g32ts6qy]// horizontal&#58;\n\n&lt;example_stringdictionary type=&quot;simplestringdictionary&quot;&gt;dragon = Dragons breath fire; wizard = Wizards use magic; princess = Princesses always need rescuing&lt;/example_string_dictionary&gt;\n\n// vertical&#58;\n\n&lt;example_stringdictionary type=&quot;stringdictionary&quot;&gt;\n  &lt;item&gt;\n    &lt;key&gt;dragon&lt;/key&gt;\n    &lt;value&gt;Dragons breath fire&lt;/value&gt;\n  &lt;/item&gt;\n  &lt;item&gt;\n    &lt;key&gt;wizard&lt;/key&gt;\n    &lt;value&gt;Wizards use magic&lt;/value&gt;\n  &lt;/item&gt;\n  &lt;item&gt;\n    &lt;key&gt;princess&lt;/key&gt;\n    &lt;value&gt;Princesses always need rescuing&lt;/value&gt;\n  &lt;/item&gt;\n&lt;/example_string_dictionary&gt;\n\nexamples in scripting&#58;\n\nx = &quot;dragon&quot;\ny = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)\n// you used &quot;dragon&quot; for the input, which thus outputs&#58;\n// y = &quot;Dragons breath fire&quot;\n\nx = &quot;wizard&quot;\ny = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)\n// you used &quot;dragon&quot; for the input, which thus outputs&#58;\n// y = &quot;Wizards use magic&quot;\n\nx = &quot;wizard&quot;\ny = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)\n// you used &quot;dragon&quot; for the input, which thus outputs&#58;\n// y = &quot;Wizards use magic&quot;[/code:g32ts6qy]\n\nObject Dictionary:\n\nstring = Object\n\n[code:g32ts6qy]// see String Dictionary example above, same thing except the returned value~ouput is an Object&#58; the name of the Object, not merely a string~text\n\n// so, for example&#58;\n\n// (Room) Objects in the game&#58; town, forest, mountain, swamp\n\n&lt;example_stringdictionary type=&quot;simplestringdictionary&quot;&gt;0 = town; 1 = forest; 2 = swamp; 3 = mountain&lt;/example_string_dictionary&gt;\n\nx = &quot;0&quot;\ny = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)\nMoveObject (player, y)\n// player is moved~set to~into the town\n\nx = &quot;1&quot;\ny = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)\nMoveObject (player, y)\n// player is moved~set to~into the forest\n\nx = &quot;2&quot;\ny = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)\nMoveObject (player, y)\n// player is moved~set to~into the swamp\n\nx = &quot;3&quot;\ny = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)\nMoveObject (player, y)\n// player is moved~set to~into the mountain[/code:g32ts6qy]\n\nScript Dictionary:\n\nstring = Script(s)\n\n(I hope you get the idea now)\n\n----------\n\nthere's also this (instead of the specific dictionary types, which this generalized may probably be easier for you, and it is more powerful too, due to not being limited to those specific types ~ I just personally so far for what I do in my code like using the specific types of dictionaries):\n\n(general) Dictionary:\n\nstring = (quest will handle whether your output~return values are strings, Objects, or Scripts)\n\nand its 'DictionaryItem()' Function: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/dictionaryitem.html\">http://docs.textadventures.co.uk/quest/ ... yitem.html</a><!-- m -->\n\n---------\n\nI don't know if you'll notice that instead of my use of an 'x' variable merely holding the name of the input key to be used, you can use a List to return the name of the input key to be used, which thus also enables you to use randomization (if you want to):\n\ngame.example_stringlist = split (&quot;dragon; wizard; princess&quot;, &quot;;&quot;)\n\nw = GetRandomInt (0, ListCount (Object_name.String_List_name) - 1)\nx = StringListItem (Object_name.String_List_name, w)\ny = StringDictionaryItem (Object_name.String_Dictionary_name, x)\n// randomly selects (dragon, wizard, or princess), and returns~outputs:\n// y = &quot;Dragons breath fire&quot;\n// or\n// y = &quot;Wizards use magic&quot;\n// or\n// y = &quot;Princesses always need rescuing&quot;\n\nalso, I made it easier to understand by using an 'x' (and for this final example, also a 'w') and separating it out on its own line, but if you prefer you can combine them into a single line (though separating them is probably better to do ~ I just like to combine them usually in my own scripting for personal preference), so for example with using this last example (there's two combinings: the 'w' into the 'x' and the 'x' into the 'y'):\n\ny = StringDictionaryItem (Object_name.String_Dictionary_name, StringListItem (Object_name.String_List_name, GetRandomInt (0, ListCount (Object_name.String_List_name) - 1)))",
      "EditableFormat": "bbcode",
      "HTML": "yes, except you hopefully meant a *SCRIPT* Dictionary, not a String Dictionary, and there's the difference of it's key-value using 'words (actually you can use phrases: single words or multiple words: sentences ~ generally usually you'd use just a word though... unless you really want~need to match-up-use an entire msg block-response in~for your game design)' instead of index numbers<br/><br/>(think of dictionaries as like 'input-&gt;output' boxes, or if you rather, think of it kinda like the 'switch' Function~Script or an 'if-then' Script~Function)<br/><br/>String Dictionary:<br/><br/>string = string<br/><br/>example:<br/><br/><pre><code>// horizontal&#58;<br/><br/>&lt;example_stringdictionary type=&quot;simplestringdictionary&quot;&gt;dragon = Dragons breath fire; wizard = Wizards use magic; princess = Princesses always need rescuing&lt;/example_string_dictionary&gt;<br/><br/>// vertical&#58;<br/><br/>&lt;example_stringdictionary type=&quot;stringdictionary&quot;&gt;<br/>  &lt;item&gt;<br/>    &lt;key&gt;dragon&lt;/key&gt;<br/>    &lt;value&gt;Dragons breath fire&lt;/value&gt;<br/>  &lt;/item&gt;<br/>  &lt;item&gt;<br/>    &lt;key&gt;wizard&lt;/key&gt;<br/>    &lt;value&gt;Wizards use magic&lt;/value&gt;<br/>  &lt;/item&gt;<br/>  &lt;item&gt;<br/>    &lt;key&gt;princess&lt;/key&gt;<br/>    &lt;value&gt;Princesses always need rescuing&lt;/value&gt;<br/>  &lt;/item&gt;<br/>&lt;/example_string_dictionary&gt;<br/><br/>examples in scripting&#58;<br/><br/>x = &quot;dragon&quot;<br/>y = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)<br/>// you used &quot;dragon&quot; for the input, which thus outputs&#58;<br/>// y = &quot;Dragons breath fire&quot;<br/><br/>x = &quot;wizard&quot;<br/>y = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)<br/>// you used &quot;dragon&quot; for the input, which thus outputs&#58;<br/>// y = &quot;Wizards use magic&quot;<br/><br/>x = &quot;wizard&quot;<br/>y = StringDictionaryItem (Object_name&#46;Stringdictionary_Attribute_name, x)<br/>// you used &quot;dragon&quot; for the input, which thus outputs&#58;<br/>// y = &quot;Wizards use magic&quot;</code></pre><br/><br/>Object Dictionary:<br/><br/>string = Object<br/><br/><pre><code>// see String Dictionary example above, same thing except the returned value~ouput is an Object&#58; the name of the Object, not merely a string~text<br/><br/>// so, for example&#58;<br/><br/>// (Room) Objects in the game&#58; town, forest, mountain, swamp<br/><br/>&lt;example_stringdictionary type=&quot;simplestringdictionary&quot;&gt;0 = town; 1 = forest; 2 = swamp; 3 = mountain&lt;/example_string_dictionary&gt;<br/><br/>x = &quot;0&quot;<br/>y = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)<br/>MoveObject (player, y)<br/>// player is moved~set to~into the town<br/><br/>x = &quot;1&quot;<br/>y = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)<br/>MoveObject (player, y)<br/>// player is moved~set to~into the forest<br/><br/>x = &quot;2&quot;<br/>y = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)<br/>MoveObject (player, y)<br/>// player is moved~set to~into the swamp<br/><br/>x = &quot;3&quot;<br/>y = ObjectDictionaryItem (Object_name&#46;Object_Dictionary_name, x)<br/>MoveObject (player, y)<br/>// player is moved~set to~into the mountain</code></pre><br/><br/>Script Dictionary:<br/><br/>string = Script(s)<br/><br/>(I hope you get the idea now)<br/><br/>----------<br/><br/>there's also this (instead of the specific dictionary types, which this generalized may probably be easier for you, and it is more powerful too, due to not being limited to those specific types ~ I just personally so far for what I do in my code like using the specific types of dictionaries):<br/><br/>(general) Dictionary:<br/><br/>string = (quest will handle whether your output~return values are strings, Objects, or Scripts)<br/><br/>and its 'DictionaryItem()' Function: <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/dictionaryitem.html\">http://docs.textadventures.co.uk/quest/ ... yitem.html</a><!-- m --><br/><br/>---------<br/><br/>I don't know if you'll notice that instead of my use of an 'x' variable merely holding the name of the input key to be used, you can use a List to return the name of the input key to be used, which thus also enables you to use randomization (if you want to):<br/><br/>game.example_stringlist = split (&quot;dragon; wizard; princess&quot;, &quot;;&quot;)<br/><br/>w = GetRandomInt (0, ListCount (Object_name.String_List_name) - 1)<br/>x = StringListItem (Object_name.String_List_name, w)<br/>y = StringDictionaryItem (Object_name.String_Dictionary_name, x)<br/>// randomly selects (dragon, wizard, or princess), and returns~outputs:<br/>// y = &quot;Dragons breath fire&quot;<br/>// or<br/>// y = &quot;Wizards use magic&quot;<br/>// or<br/>// y = &quot;Princesses always need rescuing&quot;<br/><br/>also, I made it easier to understand by using an 'x' (and for this final example, also a 'w') and separating it out on its own line, but if you prefer you can combine them into a single line (though separating them is probably better to do ~ I just like to combine them usually in my own scripting for personal preference), so for example with using this last example (there's two combinings: the 'w' into the 'x' and the 'x' into the 'y'):<br/><br/>y = StringDictionaryItem (Object_name.String_Dictionary_name, StringListItem (Object_name.String_List_name, GetRandomInt (0, ListCount (Object_name.String_List_name) - 1)))",
      "PostDate": "2016-01-15T19:09:34+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40651",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Yes, I meant script dictionaries, but...\n\nStill ain't getting it!\n\nHere is some code:\n\n[code:twhti6fd]      &lt;speak type=&quot;script&quot;&gt;\n        n = GetRandomInt (0, ListCount (grumpy man&#46;convo2) - 1)\n        msg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))\n      &lt;/speak&gt;\n      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;2&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;\n[/code:twhti6fd]\n\nAre the item keys incorrect?  I get this error message:  Error running script&#058; Error compiling expression '&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man.convo2, n)': FunctionCallElement: Could find not function 'ScriptDictionaryItem(QuestDictionary`1, Int32)'\n\nCould find not function 'ScriptDictionaryItem(QuestDictionary`1, Int32)' : does this message mean the I need to Add a dictionary?  I don't know... I've also done some stupid things like changing the ListCount to StringDictionaryCount.  I've also butchered the code enough that the above is probably TOTALLY messed up!\n\nI thought that would be correct...",
      "EditableFormat": "bbcode",
      "HTML": "Yes, I meant script dictionaries, but...<br/><br/>Still ain't getting it!<br/><br/>Here is some code:<br/><br/><pre><code>      &lt;speak type=&quot;script&quot;&gt;<br/>        n = GetRandomInt (0, ListCount (grumpy man&#46;convo2) - 1)<br/>        msg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))<br/>      &lt;/speak&gt;<br/>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;2&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;<br/></code></pre><br/><br/>Are the item keys incorrect?  I get this error message:  Error running script&#058; Error compiling expression '&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man.convo2, n)': FunctionCallElement: Could find not function 'ScriptDictionaryItem(QuestDictionary`1, Int32)'<br/><br/>Could find not function 'ScriptDictionaryItem(QuestDictionary`1, Int32)' : does this message mean the I need to Add a dictionary?  I don't know... I've also done some stupid things like changing the ListCount to StringDictionaryCount.  I've also butchered the code enough that the above is probably TOTALLY messed up!<br/><br/>I thought that would be correct...",
      "PostDate": "2016-01-16T01:51:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40661",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you actually did something better in your design than mine, as I keep forgetting that there is the 'DictionaryCount()' for you to use (but there's no individual-separate 'String/Object/Script-DictionaryCount()' - but good guess at it!), so you can just change this line of yours:\n\nn = GetRandomInt (0, ListCount (grumpy man.convo2) - 1)\n\nto this:\n\nn = GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1)\n\n-----------------\n\nand then (if it still doesn't work), due to my mistake, try changing the same line, from:\n\nn = GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1)\n\nto this:\n\nn = ToString (GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1))\n\n// I think this is what the error means (HK is crossing his fingers that this is the needed fix, lol), in that the 'GetRandomInt' is giving you an INTEGER value, but the 'ScriptDictionaryItem' requires a STRING value. If this does fix it (makes your code work), this is my fault, so my apologies for not originally providing this info about it and the code needed. Unfortunately, many of the Error Codes are still a bit cryptic and~or ambigious for me too, sighs.\n\n------------\n\nif it's still not working, possibly (but unlikely though) you need to separate out the 'ScriptDictionaryItem, so thus here's the corrected code for you, of what I mean:\n\n[code:2q6eccss]      &lt;speak type=&quot;script&quot;&gt;\n        n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))\n        m = ScriptDictionaryItem(grumpy man&#46;convo2, n)\n        msg (&quot;The man glares at you and says, &quot; + m)\n      &lt;/speak&gt;\n      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;2&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;[/code:2q6eccss]\n\n------------\n\nlet me know if this works for you or not",
      "EditableFormat": "bbcode",
      "HTML": "you actually did something better in your design than mine, as I keep forgetting that there is the 'DictionaryCount()' for you to use (but there's no individual-separate 'String/Object/Script-DictionaryCount()' - but good guess at it!), so you can just change this line of yours:<br/><br/>n = GetRandomInt (0, ListCount (grumpy man.convo2) - 1)<br/><br/>to this:<br/><br/>n = GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1)<br/><br/>-----------------<br/><br/>and then (if it still doesn't work), due to my mistake, try changing the same line, from:<br/><br/>n = GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1)<br/><br/>to this:<br/><br/>n = ToString (GetRandomInt (0, DictionaryCount (grumpy man.convo2) - 1))<br/><br/>// I think this is what the error means (HK is crossing his fingers that this is the needed fix, lol), in that the 'GetRandomInt' is giving you an INTEGER value, but the 'ScriptDictionaryItem' requires a STRING value. If this does fix it (makes your code work), this is my fault, so my apologies for not originally providing this info about it and the code needed. Unfortunately, many of the Error Codes are still a bit cryptic and~or ambigious for me too, sighs.<br/><br/>------------<br/><br/>if it's still not working, possibly (but unlikely though) you need to separate out the 'ScriptDictionaryItem, so thus here's the corrected code for you, of what I mean:<br/><br/><pre><code>      &lt;speak type=&quot;script&quot;&gt;<br/>        n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))<br/>        m = ScriptDictionaryItem(grumpy man&#46;convo2, n)<br/>        msg (&quot;The man glares at you and says, &quot; + m)<br/>      &lt;/speak&gt;<br/>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;2&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;</code></pre><br/><br/>------------<br/><br/>let me know if this works for you or not",
      "PostDate": "2016-01-16T03:49:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40663",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "I currently have this code attached to the 'speak to' verb [code:3brys69j]n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))\nmsg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))[/code:3brys69j]\n\nand this code attached to the convo2 attribute [code:3brys69j]      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;2&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;[/code:3brys69j]\n\nI get the same error message for each situation you proposed above!  Argh.\n\nError running script&#058; Error evaluating expression 'ScriptDictionaryItem(grumpy man.convo2, n)': The given key was not present in the dictionary.",
      "EditableFormat": "bbcode",
      "HTML": "I currently have this code attached to the 'speak to' verb <pre><code>n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))<br/>msg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))</code></pre><br/><br/>and this code attached to the convo2 attribute <pre><code>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;2&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;</code></pre><br/><br/>I get the same error message for each situation you proposed above!  Argh.<br/><br/>Error running script&#058; Error evaluating expression 'ScriptDictionaryItem(grumpy man.convo2, n)': The given key was not present in the dictionary.",
      "PostDate": "2016-01-16T04:15:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40665",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "oh my, the fix now may be a simple one... as I think (HOPE) it's *MAYBE* working now... except...\n\nyou need to change it to either:\n\n[code:ewfgg3k9]n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))\nmsg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))\n\n      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;0&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;[/code:ewfgg3k9]\n\nOR\n\n[code:ewfgg3k9]n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2)))\nmsg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))\n\n      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;2&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;[/code:ewfgg3k9]\n\n--------------------------------\n\nif not... you may need to use 'invoke',\n\nmsg (&quot;The man glares at you and says, &quot; + invoke (ScriptDictionaryItem(grumpy man.convo2, n)))\n\nor, otherwise, maybe you can't have a msg Script having another msg script in it...\n\nyou may have to use a String Dictionary instead if you want to put your response into your msg script\n\nor... we could (may have to) use concatenation, combining the two scripts' string responses together first and store it in a variable, which we than display it with the msg script.",
      "EditableFormat": "bbcode",
      "HTML": "oh my, the fix now may be a simple one... as I think (HOPE) it's *MAYBE* working now... except...<br/><br/>you need to change it to either:<br/><br/><pre><code>n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))<br/>msg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))<br/><br/>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;0&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;</code></pre><br/><br/>OR<br/><br/><pre><code>n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2)))<br/>msg (&quot;The man glares at you and says, &quot; + ScriptDictionaryItem(grumpy man&#46;convo2, n))<br/><br/>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;2&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;</code></pre><br/><br/>--------------------------------<br/><br/>if not... you may need to use 'invoke',<br/><br/>msg (&quot;The man glares at you and says, &quot; + invoke (ScriptDictionaryItem(grumpy man.convo2, n)))<br/><br/>or, otherwise, maybe you can't have a msg Script having another msg script in it...<br/><br/>you may have to use a String Dictionary instead if you want to put your response into your msg script<br/><br/>or... we could (may have to) use concatenation, combining the two scripts' string responses together first and store it in a variable, which we than display it with the msg script.",
      "PostDate": "2016-01-16T04:32:05+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40905",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Simple error in my code maybe?\n\nThis is the code I have for 'speak to; talk to man'.  I'm pretty sure my error is in here somewhere...\n[code:2wqbw04a]n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))\nm = ScriptDictionaryItem(grumpy man&#46;convo2, n)\nmsg (&quot;The man glares at you and says, &quot; + m)[/code:2wqbw04a]\n\nHere is the attribute I have on grumpy man called convo2:\n[code:2wqbw04a]&lt;speak type=&quot;script&quot;&gt;\n        n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))\n        m = ScriptDictionaryItem(grumpy man&#46;convo2, n)\n        msg (&quot;The man glares at you and says, &quot; + m)\n      &lt;/speak&gt;\n      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;\n        &lt;item key=&quot;1&quot;&gt;\n          msg (&quot;Test 1&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;2&quot;&gt;\n          msg (&quot;Test 2&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;3&quot;&gt;\n          msg (&quot;Test 3&#46;&quot;)\n        &lt;/item&gt;\n        &lt;item key=&quot;4&quot;&gt;\n          msg (&quot;Test 4&quot;)\n        &lt;/item&gt;\n      &lt;/convo2&gt;[/code:2wqbw04a]\n\nTests 1,2,3 work.  4 gives me an error:  Error running script&#058; Error evaluating expression 'ScriptDictionaryItem(grumpy man.convo2, n)': The given key was not present in the dictionary.\n\nIf I only have 2 keys added, I get an error on key 2.  When I have 5 keys added, I get an error on 5.  \n\nI also get this when the non-error message fires:  The man glares at you and says, Script&#058; msg (&quot;Test 3.&quot;)\nObviously I do not want that &quot;script&#058; msg ()&quot; in there.  Just the message!   <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> \n\nThe reason I have it set up as a script dictionary as opposed to a string list is because I want one of the things he says to trigger a flag, which I could not figure out how to do with a string list.",
      "EditableFormat": "bbcode",
      "HTML": "Simple error in my code maybe?<br/><br/>This is the code I have for 'speak to; talk to man'.  I'm pretty sure my error is in here somewhere...<br/><pre><code>n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))<br/>m = ScriptDictionaryItem(grumpy man&#46;convo2, n)<br/>msg (&quot;The man glares at you and says, &quot; + m)</code></pre><br/><br/>Here is the attribute I have on grumpy man called convo2:<br/><pre><code>&lt;speak type=&quot;script&quot;&gt;<br/>        n = ToString (GetRandomInt (0, DictionaryCount (grumpy man&#46;convo2) - 1))<br/>        m = ScriptDictionaryItem(grumpy man&#46;convo2, n)<br/>        msg (&quot;The man glares at you and says, &quot; + m)<br/>      &lt;/speak&gt;<br/>      &lt;convo2 type=&quot;scriptdictionary&quot;&gt;<br/>        &lt;item key=&quot;1&quot;&gt;<br/>          msg (&quot;Test 1&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;2&quot;&gt;<br/>          msg (&quot;Test 2&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;3&quot;&gt;<br/>          msg (&quot;Test 3&#46;&quot;)<br/>        &lt;/item&gt;<br/>        &lt;item key=&quot;4&quot;&gt;<br/>          msg (&quot;Test 4&quot;)<br/>        &lt;/item&gt;<br/>      &lt;/convo2&gt;</code></pre><br/><br/>Tests 1,2,3 work.  4 gives me an error:  Error running script&#058; Error evaluating expression 'ScriptDictionaryItem(grumpy man.convo2, n)': The given key was not present in the dictionary.<br/><br/>If I only have 2 keys added, I get an error on key 2.  When I have 5 keys added, I get an error on 5.  <br/><br/>I also get this when the non-error message fires:  The man glares at you and says, Script&#058; msg (&quot;Test 3.&quot;)<br/>Obviously I do not want that &quot;script&#058; msg ()&quot; in there.  Just the message!   <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> <br/><br/>The reason I have it set up as a script dictionary as opposed to a string list is because I want one of the things he says to trigger a flag, which I could not figure out how to do with a string list.",
      "PostDate": "2016-01-23T19:59:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40909",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Since your keys start with 1 and run to 4, you'd want this line:\n\n[code:2luz2176]n = ToString (GetRandomInt (1, DictionaryCount (grumpy man&#46;convo2)))[/code:2luz2176]\n(HK's post didn't have it right either, though you made it worse by grabbing the wrong line for the wrong case. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "EditableFormat": "bbcode",
      "HTML": "Since your keys start with 1 and run to 4, you'd want this line:<br/><br/><pre><code>n = ToString (GetRandomInt (1, DictionaryCount (grumpy man&#46;convo2)))</code></pre><br/>(HK's post didn't have it right either, though you made it worse by grabbing the wrong line for the wrong case. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> )",
      "PostDate": "2016-01-23T20:56:41+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40910",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Also, you don't want to append the script onto the string. You want to run the script, but you can't invoke it inline either. You'd need to use a delegate for that, which is much more complicated. What you can do is:\n\n[code:1la52gbf]OutputTextNoBr (&quot;The man glares at you and says, &quot;)\ninvoke(m)[/code:1la52gbf]",
      "EditableFormat": "bbcode",
      "HTML": "Also, you don't want to append the script onto the string. You want to run the script, but you can't invoke it inline either. You'd need to use a delegate for that, which is much more complicated. What you can do is:<br/><br/><pre><code>OutputTextNoBr (&quot;The man glares at you and says, &quot;)<br/>invoke(m)</code></pre>",
      "PostDate": "2016-01-23T21:00:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40913",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "You can use a generic list, and use that to store scripts. That might be easier than a dictionary (it might not; initialising the script dictionary will be easier). The basic format is like this:\n[code:37a6bxa0]l = NewList()\nlist add (l, this&#46;script1)\nscr = ListItem(l, 0)\ninvoke (scr)[/code:37a6bxa0]",
      "EditableFormat": "bbcode",
      "HTML": "You can use a generic list, and use that to store scripts. That might be easier than a dictionary (it might not; initialising the script dictionary will be easier). The basic format is like this:<br/><pre><code>l = NewList()<br/>list add (l, this&#46;script1)<br/>scr = ListItem(l, 0)<br/>invoke (scr)</code></pre>",
      "PostDate": "2016-01-23T21:46:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40937",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "sorry about that XanMag, I forgot to change the beginning of the range (dictionary's first item key) from 0 to 1 in the second example of mine. I was only looking at the ending range values, not the beginning.\n\n----------\n\na List's items are automatically assigned these index numbers:\n\n0 to (ListCount - 1)\n\nListCount = quantity of items in list, so since the list starts from 0, you need the 'ListCount - 1', as seen above\n\nan example:\n\n10 (quantity of) numbers, starting from 1:\n\n(1) 1, (2) 2, (3) 3 (4) 4, (5) 5, (6) 6, (7) 7, (8) 8, (9) 9, (10) 10\n1 to 10\n\nthis is why we like starting from 1, lol\n\n10 (quantity of) numbers, starting from (0):\n\n(1) 0, (2) 1, (3) 2 (4) 3, (5) 4, (6) 5, (7) 6, (8) 7, (9) 8, (10) 9\n0 to 9\n\n----------\n\na Dictionary has item keys, instead of the List's automatically assigned index numbers, which means that you have to manually type in the names for those item keys.\n\nSo, if you like (or it works better) working with ranges that start at zero, than you need to have your dictionary's item keys be named (manually) from 0 to whatever is your max range value.\n\nlikewise, if you like (or it works better) working with ranges that start at one, than you need to have your dictionary's item keys be named (manually) from 1 to whatever is your max range value.",
      "EditableFormat": "bbcode",
      "HTML": "sorry about that XanMag, I forgot to change the beginning of the range (dictionary's first item key) from 0 to 1 in the second example of mine. I was only looking at the ending range values, not the beginning.<br/><br/>----------<br/><br/>a List's items are automatically assigned these index numbers:<br/><br/>0 to (ListCount - 1)<br/><br/>ListCount = quantity of items in list, so since the list starts from 0, you need the 'ListCount - 1', as seen above<br/><br/>an example:<br/><br/>10 (quantity of) numbers, starting from 1:<br/><br/>(1) 1, (2) 2, (3) 3 (4) 4, (5) 5, (6) 6, (7) 7, (8) 8, (9) 9, (10) 10<br/>1 to 10<br/><br/>this is why we like starting from 1, lol<br/><br/>10 (quantity of) numbers, starting from (0):<br/><br/>(1) 0, (2) 1, (3) 2 (4) 3, (5) 4, (6) 5, (7) 6, (8) 7, (9) 8, (10) 9<br/>0 to 9<br/><br/>----------<br/><br/>a Dictionary has item keys, instead of the List's automatically assigned index numbers, which means that you have to manually type in the names for those item keys.<br/><br/>So, if you like (or it works better) working with ranges that start at zero, than you need to have your dictionary's item keys be named (manually) from 0 to whatever is your max range value.<br/><br/>likewise, if you like (or it works better) working with ranges that start at one, than you need to have your dictionary's item keys be named (manually) from 1 to whatever is your max range value.",
      "PostDate": "2016-01-24T19:11:52+00:00",
      "LastEditDate": null
    }
  ]
}
