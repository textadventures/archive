{
  "Topic": {
    "TopicId": "5636",
    "ForumId": "10",
    "Title": "Get Input",
    "LastUpdated": "2015-12-08T00:32:25+00:00",
    "ReplyCount": 48
  },
  "Posts": [
    {
      "PostId": "38772",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Should be a pretty quick and easy question. \n\nGet Input\nIf Result = &quot;Yes&quot; \nthen \nblah blah. \n\nSo I was wondering can you do...\n\nGet Input\nIf Result = &quot;yes;sure;okay;of course&quot; \nthen\nblah blah\n\nAlso, will the lower case letters cover capital letters too?\n\n\nThank you!",
      "EditableFormat": "bbcode",
      "HTML": "Should be a pretty quick and easy question. <br/><br/>Get Input<br/>If Result = &quot;Yes&quot; <br/>then <br/>blah blah. <br/><br/>So I was wondering can you do...<br/><br/>Get Input<br/>If Result = &quot;yes;sure;okay;of course&quot; <br/>then<br/>blah blah<br/><br/>Also, will the lower case letters cover capital letters too?<br/><br/><br/>Thank you!",
      "PostDate": "2015-11-20T04:28:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38777",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[code:19c2cu2v]\nif (ListContains(Split (&quot;yes;sure;okay;of course&quot;,&quot;;&quot;),LCase(result))) {\n  msg (&quot;YES&quot;)\n}[/code:19c2cu2v]",
      "EditableFormat": "bbcode",
      "HTML": "<pre><code><br/>if (ListContains(Split (&quot;yes;sure;okay;of course&quot;,&quot;;&quot;),LCase(result))) {<br/>  msg (&quot;YES&quot;)<br/>}</code></pre>",
      "PostDate": "2015-11-20T07:58:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38780",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "If you're using a switch, which I personally do almost every time I use a get input to ask a question, you can specify several triggers for a case.\nie:\n[code:ah1uekch]get input {\n\tswitch(LCase(result) ) {\n\t\tcase(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;){\n\t\t\t//stuff happens\n\t\t}\n\t\tdefault {\n\t\t\t//stuff doesn't happen\n\t\t}\n\t}\n}\n[/code:ah1uekch]\nThis will 'do stuff' if the player enters either &quot;one&quot;, &quot;two, or &quot;three&quot;. Any one of those responses triggers the case.\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/switch.html\">http://docs.textadventures.co.uk/quest/ ... witch.html</a><!-- m -->\n\nAlso the 'LCase()' function helps to deal with capitalization issues, as it will convert the result into full lowercase before checking it against your cases, so it will treat everything as a lower case letter, otherwise the results will be case sensitive.\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/string/lcase.html\">http://docs.textadventures.co.uk/quest/ ... lcase.html</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "If you're using a switch, which I personally do almost every time I use a get input to ask a question, you can specify several triggers for a case.<br/>ie:<br/><pre><code>get input {<br/>\tswitch(LCase(result) ) {<br/>\t\tcase(&quot;one&quot;, &quot;two&quot;, &quot;three&quot;){<br/>\t\t\t//stuff happens<br/>\t\t}<br/>\t\tdefault {<br/>\t\t\t//stuff doesn't happen<br/>\t\t}<br/>\t}<br/>}<br/></code></pre><br/>This will 'do stuff' if the player enters either &quot;one&quot;, &quot;two, or &quot;three&quot;. Any one of those responses triggers the case.<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/switch.html\">http://docs.textadventures.co.uk/quest/ ... witch.html</a><!-- m --><br/><br/>Also the 'LCase()' function helps to deal with capitalization issues, as it will convert the result into full lowercase before checking it against your cases, so it will treat everything as a lower case letter, otherwise the results will be case sensitive.<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/string/lcase.html\">http://docs.textadventures.co.uk/quest/ ... lcase.html</a><!-- m -->",
      "PostDate": "2015-11-20T16:12:57+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38781",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TinFoilMkIV&quot;:39fr7vem]...\nAlso the 'Lcase()' function helps to deal with capitalization issues, ...[/quote:39fr7vem]\nSome of them. You also need to capitalise LCase right!",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TinFoilMkIV wrote:</cite>...<br/>Also the 'Lcase()' function helps to deal with capitalization issues, ...</blockquote><br/>Some of them. You also need to capitalise LCase right!",
      "PostDate": "2015-11-20T17:08:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38782",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;The Pixie&quot;:18y73rb4][quote=&quot;TinFoilMkIV&quot;:18y73rb4]...\nAlso the 'Lcase()' function helps to deal with capitalization issues, ...[/quote:18y73rb4]\nSome of them. You also need to capitalise LCase right![/quote:18y73rb4]\n\nAnd this is what happens when I don't copy/paste my functions...\n\nBut yes, caps matter even when you're trying to make them not matter.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite><blockquote><p><b>&quot;TinFoilMkIV&quot;</b></p><p>...<br/>Also the 'Lcase()' function helps to deal with capitalization issues, ...</blockquote><br/>Some of them. You also need to capitalise LCase right!</p></blockquote><br/><br/>And this is what happens when I don't copy/paste my functions...<br/><br/>But yes, caps matter even when you're trying to make them not matter.",
      "PostDate": "2015-11-20T17:14:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38915",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Thank you very much for all the responses everyone! I was just curious if this was the correct format. I double checked the explanation pages on &quot;switch&quot; as well.\n\nget input {\nListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {\nswitch(LCase(result)) {\ncase(“sexy”) {\nmsg(““I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.”)\nplayer.sexy = player.sexy + 1\n}\ncase(“sympathy”) \nmsg(“&quot;Err...that is, I'm not Rold, ma'am.&quot; you reply almost bashfully.”)\nplayer.sympathy = player.sympathy + 1\n}\ncase(“sarcastic”) \nmsg(““Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.”)\nplayer.sarcastic = player.sarcastic + 1\n}\ncase(“snoopy”)\nmsg(““I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.”)\nplayer.snoopy = player.snoopy + 1\n}\ncase(“serious”)\nmsg(““At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.”)\nplayer.serious = player.serious + 1\n}\ndefault {\nmsg(“”)\n}\n}\n\n^--- one thing I was curious about is the &quot;default response&quot;. Is there a way to just repeat the choices?",
      "EditableFormat": "bbcode",
      "HTML": "Thank you very much for all the responses everyone! I was just curious if this was the correct format. I double checked the explanation pages on &quot;switch&quot; as well.<br/><br/>get input {<br/>ListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {<br/>switch(LCase(result)) {<br/>case(“sexy”) {<br/>msg(““I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.”)<br/>player.sexy = player.sexy + 1<br/>}<br/>case(“sympathy”) <br/>msg(“&quot;Err...that is, I'm not Rold, ma'am.&quot; you reply almost bashfully.”)<br/>player.sympathy = player.sympathy + 1<br/>}<br/>case(“sarcastic”) <br/>msg(““Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.”)<br/>player.sarcastic = player.sarcastic + 1<br/>}<br/>case(“snoopy”)<br/>msg(““I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.”)<br/>player.snoopy = player.snoopy + 1<br/>}<br/>case(“serious”)<br/>msg(““At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.”)<br/>player.serious = player.serious + 1<br/>}<br/>default {<br/>msg(“”)<br/>}<br/>}<br/><br/>^--- one thing I was curious about is the &quot;default response&quot;. Is there a way to just repeat the choices?",
      "PostDate": "2015-11-28T18:14:17+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38918",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "The technique I use is to make all my get input scripts a script attribute of an object, then I have it run itself when it either defaults, or a response loops back to the same choice. ie:\n\n[code:ahsam28a]//object 'combat', script attribute 'main'\nmsg (&quot;You are in combat&quot;)\nmsg(&quot;&quot;)\nmsg(&quot;What would you like to do?&quot;)\nget input {\n\tswitch (LCase(result)){\n\t\tcase(&quot;attack&quot;){&#46;&#46;&#46;}\n\t\tcase(&quot;hit it really hard&quot;){&#46;&#46;&#46;}\n\t\tcase(&quot;flee!&quot;){&#46;&#46;&#46;}\n\t\tcase(&quot;wait&quot;){&#46;&#46;&#46;}\n\t\tdefault {\n\t\t\tmsg (&quot;invalid choice&quot;)\n\t\t\twait{\n\t\t\tClearScreen\n\t\t\tdo (combat, &quot;main&quot;)\n\t\t\t}\n\t}\n}\n[/code:ahsam28a]",
      "EditableFormat": "bbcode",
      "HTML": "The technique I use is to make all my get input scripts a script attribute of an object, then I have it run itself when it either defaults, or a response loops back to the same choice. ie:<br/><br/><pre><code>//object 'combat', script attribute 'main'<br/>msg (&quot;You are in combat&quot;)<br/>msg(&quot;&quot;)<br/>msg(&quot;What would you like to do?&quot;)<br/>get input {<br/>\tswitch (LCase(result)){<br/>\t\tcase(&quot;attack&quot;){&#46;&#46;&#46;}<br/>\t\tcase(&quot;hit it really hard&quot;){&#46;&#46;&#46;}<br/>\t\tcase(&quot;flee!&quot;){&#46;&#46;&#46;}<br/>\t\tcase(&quot;wait&quot;){&#46;&#46;&#46;}<br/>\t\tdefault {<br/>\t\t\tmsg (&quot;invalid choice&quot;)<br/>\t\t\twait{<br/>\t\t\tClearScreen<br/>\t\t\tdo (combat, &quot;main&quot;)<br/>\t\t\t}<br/>\t}<br/>}<br/></code></pre>",
      "PostDate": "2015-11-28T19:33:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38920",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Is the: \n\nwait { \n\nwhat causes it to repeat?\n\nAlso, did I set the rest up correctly? <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Is the: <br/><br/>wait { <br/><br/>what causes it to repeat?<br/><br/>Also, did I set the rest up correctly? <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2015-11-28T20:06:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38921",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "no, the wait simply pauses till the player presses a key so they have time to read the &quot;invalid input&quot; message before the whole thing restarts\n\nThe 'do (combat, &quot;main&quot;)' is what makes it repeat, however this requires that the object 'combat' has a script attribute called 'main'. The code I posted as noted in the commented line is the script itself.\n\nyou could just have\n\n[code:2p68b59o]default {\n\tdo (combat, &quot;main&quot;)\n}[/code:2p68b59o]\n\nand it would loop, tho it wouldn't be as clean, the extra stuff is just for looks and user friendliness.",
      "EditableFormat": "bbcode",
      "HTML": "no, the wait simply pauses till the player presses a key so they have time to read the &quot;invalid input&quot; message before the whole thing restarts<br/><br/>The 'do (combat, &quot;main&quot;)' is what makes it repeat, however this requires that the object 'combat' has a script attribute called 'main'. The code I posted as noted in the commented line is the script itself.<br/><br/>you could just have<br/><br/><pre><code>default {<br/>\tdo (combat, &quot;main&quot;)<br/>}</code></pre><br/><br/>and it would loop, tho it wouldn't be as clean, the extra stuff is just for looks and user friendliness.",
      "PostDate": "2015-11-28T20:15:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38939",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I wonder if I could do something like...\n\ndefault {\ndo (&quot;repeat&quot;)\nor something like that would work. BTW Tin, I appreciate your feedback so far! It's interesting the way you use it for combat.",
      "EditableFormat": "bbcode",
      "HTML": "So I wonder if I could do something like...<br/><br/>default {<br/>do (&quot;repeat&quot;)<br/>or something like that would work. BTW Tin, I appreciate your feedback so far! It's interesting the way you use it for combat.",
      "PostDate": "2015-11-29T00:13:15+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38973",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "to call~activate~run (or RE-call-activate-run) a [b:11x39laz][size=150:11x39laz]Function[/size:11x39laz][/b:11x39laz], in code, you simply type in the Function's name with parenthesis (and args in them if you got params), for example: test_function(), or: test_function (orc.strength). in the GUI~Editor, you simply choose the 'call function' Script, and then, set it up (type in its name into the skinny rectangle text box, and if you got parameters, add your arguments)\n\nto call~activate~run (or RE-call-activate-run) a [b:11x39laz][size=150:11x39laz]Script[/size:11x39laz][/b:11x39laz], in code:\n\n'do' or 'invoke'\n\nand again, the Script Attribute (Object_name and Attribute_name) is what you input for the 'do, just like with a Function.\n\nfor example:\n\ndo (orc, &quot;fight&quot;)\n\nthe 'do' is more useful~versatile~powerful, so might as well just use~learn that, and not bother with 'invoke' at all.",
      "EditableFormat": "bbcode",
      "HTML": "to call~activate~run (or RE-call-activate-run) a <span style=\"font-weight:bold;\"><span style=\"font-size:150\">Function</span></span>, in code, you simply type in the Function's name with parenthesis (and args in them if you got params), for example: test_function(), or: test_function (orc.strength). in the GUI~Editor, you simply choose the 'call function' Script, and then, set it up (type in its name into the skinny rectangle text box, and if you got parameters, add your arguments)<br/><br/>to call~activate~run (or RE-call-activate-run) a <span style=\"font-weight:bold;\"><span style=\"font-size:150\">Script</span></span>, in code:<br/><br/>'do' or 'invoke'<br/><br/>and again, the Script Attribute (Object_name and Attribute_name) is what you input for the 'do, just like with a Function.<br/><br/>for example:<br/><br/>do (orc, &quot;fight&quot;)<br/><br/>the 'do' is more useful~versatile~powerful, so might as well just use~learn that, and not bother with 'invoke' at all.",
      "PostDate": "2015-11-29T04:12:47+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38978",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "get input {\nListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {\nswitch(LCase(result)) {\ncase(“Snarky”) {\nmsg(“”)\nplayer.snarky = player.snarky + 1\n}\ncase(“Sympathy”) \nmsg(“”)\nplayer.sympathy = player.sympathy + 1\n}\ncase(“Sarcastic”) \nmsg(“”)\nplayer.sarcastic = player.sarcastic + 1\n}\ncase(“Snoopy”)\nmsg(“”)\nplayer.snoopy = player.snoopy + 1\n}\ncase(“Serious”)\nmsg(“”)\nplayer.serious = player.serious + 1\n}\n\n\n//player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (get input, &quot;switch&quot;)\n}\n}\n}\n\nSomething like that? I know this isn't a Function, at least I don't think &quot;Switch&quot; scripts are considered Functions since they are called &quot;Switch Scripts&quot; <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> So a Script would apply in the case you pointed out HK. Good to hear from you again btw, are you on Fall Break too?",
      "EditableFormat": "bbcode",
      "HTML": "get input {<br/>ListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {<br/>switch(LCase(result)) {<br/>case(“Snarky”) {<br/>msg(“”)<br/>player.snarky = player.snarky + 1<br/>}<br/>case(“Sympathy”) <br/>msg(“”)<br/>player.sympathy = player.sympathy + 1<br/>}<br/>case(“Sarcastic”) <br/>msg(“”)<br/>player.sarcastic = player.sarcastic + 1<br/>}<br/>case(“Snoopy”)<br/>msg(“”)<br/>player.snoopy = player.snoopy + 1<br/>}<br/>case(“Serious”)<br/>msg(“”)<br/>player.serious = player.serious + 1<br/>}<br/><br/><br/>//player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (get input, &quot;switch&quot;)<br/>}<br/>}<br/>}<br/><br/>Something like that? I know this isn't a Function, at least I don't think &quot;Switch&quot; scripts are considered Functions since they are called &quot;Switch Scripts&quot; <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> So a Script would apply in the case you pointed out HK. Good to hear from you again btw, are you on Fall Break too?",
      "PostDate": "2015-11-29T04:43:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38980",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "no... I'm just burnt out from school work... last week after this thanksgiving holiday (I didn't get any extra days off from normal weekend, grr), and then finals... I'm sick of doing programming labs (been doing C++, Java, and Python labs non-stop for this entire school symester)... just too burnt out... sighs.",
      "EditableFormat": "bbcode",
      "HTML": "no... I'm just burnt out from school work... last week after this thanksgiving holiday (I didn't get any extra days off from normal weekend, grr), and then finals... I'm sick of doing programming labs (been doing C++, Java, and Python labs non-stop for this entire school symester)... just too burnt out... sighs.",
      "PostDate": "2015-11-29T04:47:33+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "38982",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "now that I'm taking programming classes, I'm learning the technical lingo, lol.\n\nso, if you want to be bored in technicality meaningless nonsense:\n\na Function is not attached to an Object, it is an Element (Quest's OOP~OOD 's OBJECTS~CLASSES~INTERFACES) ~ it exists on its own, for example: function_1 ()\n\na (non-generalized usage of) Script, is a Script Attribute, which is an Attribute (which is a global VARIABLE) as it is attached to an Object (and thus it can't exist on its own, ie: fight ---&gt; Error), for example: orc.fight\n\n----\n\nerr... maybe in quest, a 'switch' is a Script... not sure if it's programmed to be a Script or Function... but in programming languages, 'switch' is a Function.",
      "EditableFormat": "bbcode",
      "HTML": "now that I'm taking programming classes, I'm learning the technical lingo, lol.<br/><br/>so, if you want to be bored in technicality meaningless nonsense:<br/><br/>a Function is not attached to an Object, it is an Element (Quest's OOP~OOD 's OBJECTS~CLASSES~INTERFACES) ~ it exists on its own, for example: function_1 ()<br/><br/>a (non-generalized usage of) Script, is a Script Attribute, which is an Attribute (which is a global VARIABLE) as it is attached to an Object (and thus it can't exist on its own, ie: fight ---&gt; Error), for example: orc.fight<br/><br/>----<br/><br/>err... maybe in quest, a 'switch' is a Script... not sure if it's programmed to be a Script or Function... but in programming languages, 'switch' is a Function.",
      "PostDate": "2015-11-29T05:07:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39005",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "It's my first time using a &quot;switch&quot; script. I simply didn't need one before...but I figure if I'm delving deeper into the &quot;Get Input&quot; function now I need to learn it and incorporate it. I feel like I've learned a ton from Pertex, Tin, Hk (you), and Pix. Though I think I annoy, Pix with all my questions! I'm learning a lot though and am now better equipped to figure things out. I've fixed a ton of problems without having to ask, but the more complicated stuff and new things, I still really need help with, so I lean on you guys a ton. I do apologize for that! But I've been trying to make it up to everyone by passing on what I know to others! At least when I can. \n\n[quote:33uhjfnp]//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (get input, &quot;switch&quot;)\n}\n}\n}[/quote:33uhjfnp]\n\nI was wondering if I have the rest of the &quot;Switch&quot; Script set up correctly though --- and regarding this little portion here. I was hoping to have it repeat the Switch Script. I feel like it makes sense 'do' get input (again), lead into switch script, if the response doesn't match the criteria. \n\nGood for you though taking those classes, I wish they were offered where I go to college but it's primarily a teaching college.",
      "EditableFormat": "bbcode",
      "HTML": "It's my first time using a &quot;switch&quot; script. I simply didn't need one before...but I figure if I'm delving deeper into the &quot;Get Input&quot; function now I need to learn it and incorporate it. I feel like I've learned a ton from Pertex, Tin, Hk (you), and Pix. Though I think I annoy, Pix with all my questions! I'm learning a lot though and am now better equipped to figure things out. I've fixed a ton of problems without having to ask, but the more complicated stuff and new things, I still really need help with, so I lean on you guys a ton. I do apologize for that! But I've been trying to make it up to everyone by passing on what I know to others! At least when I can. <br/><br/><blockquote><p>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (get input, &quot;switch&quot;)<br/>}<br/>}<br/>}</p></blockquote><br/><br/>I was wondering if I have the rest of the &quot;Switch&quot; Script set up correctly though --- and regarding this little portion here. I was hoping to have it repeat the Switch Script. I feel like it makes sense 'do' get input (again), lead into switch script, if the response doesn't match the criteria. <br/><br/>Good for you though taking those classes, I wish they were offered where I go to college but it's primarily a teaching college.",
      "PostDate": "2015-11-29T18:45:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39007",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the 'switch' is merely a different structure~design~look~feel, but everything the 'switch' does, an 'if~if else~else' block can do too. So, it's just a matter of which one you like better and~or works better (or just looks better or makes more sense, lol) for what you're doing. The 'switch' is able to do everything that the 'if' can do, and the 'if' is able to do everything the 'switch' can do, they just have different looks to them.\n\nIn some other languages, the 'switch' has some extra functionality and~or different programming, which I don't think exists in quest ('break' and 'continue' and definately not that the 'switch' does each~every 'case' until~unless there's a 'break' statement, as this would be too confusing for non-coders, laughs).",
      "EditableFormat": "bbcode",
      "HTML": "the 'switch' is merely a different structure~design~look~feel, but everything the 'switch' does, an 'if~if else~else' block can do too. So, it's just a matter of which one you like better and~or works better (or just looks better or makes more sense, lol) for what you're doing. The 'switch' is able to do everything that the 'if' can do, and the 'if' is able to do everything the 'switch' can do, they just have different looks to them.<br/><br/>In some other languages, the 'switch' has some extra functionality and~or different programming, which I don't think exists in quest ('break' and 'continue' and definately not that the 'switch' does each~every 'case' until~unless there's a 'break' statement, as this would be too confusing for non-coders, laughs).",
      "PostDate": "2015-11-29T18:56:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39009",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote:3ua9whw4][code:3ua9whw4]//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (get input, &quot;switch&quot;)\n}[/code:3ua9whw4][/quote:3ua9whw4]\nyou're close, but you're using 'do' incorrectly there. The first parameter needs to be an object, and the second, the string, is the name of the attribute script to run. It's a lot like how 'player.serious' is a two part reference, the object name, and then the attribute within it you want to look at. The 'do' needs to first know the object, and then the name of the attribute, and the rest is up to the script you have stored in that attribute.\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m -->\n\nEDIT: the whole thing about calling functions vs scripts isn't really in relation to what you use in your code. Technically a lot of the code we use in quest are pre coded functions, really a function is just a named chunk of code that will activate whenever the code comes across it's name. You can create your own custom functions in quest and call them from your code ie: MyTestFunction(), will do whatever code I happen to include in the function itself. Anything with the parenthesis after it is a function, the persistent denote where the parameters go, though not all functions need to use parameters.\n\nAnyways when HK refers to &quot;calling a script&quot; in this case we specifically mean a 'script' type attribute. Honestly it works almost identically to calling a custom function however functions are global so I prefer to avoid creating a function unless its something I plan to use pretty frequently. The big difference is using parameters, which you can use in a script attribute but its generally more work to do so vs a function.\n\n\nAs for your switch code\n[code:3ua9whw4]get input {\nListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {\nswitch(LCase(result)) {\ncase(“Snarky”) {\nmsg(“”)\nplayer&#46;snarky = player&#46;snarky + 1\n}\ncase(“Sympathy”) \nmsg(“”)\nplayer&#46;sympathy = player&#46;sympathy + 1\n}\ncase(“Sarcastic”) \nmsg(“”)\nplayer&#46;sarcastic = player&#46;sarcastic + 1\n}\ncase(“Snoopy”)\nmsg(“”)\nplayer&#46;snoopy = player&#46;snoopy + 1\n}\ncase(“Serious”)\nmsg(“”)\nplayer&#46;serious = player&#46;serious + 1\n}[/code:3ua9whw4]\nI don't believe the 'ListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) ' part is necessary. For one you don't have an 'if' to do anything whether your list contains statement is true or false, so it doesn't really accomplish anything as its written. It might actually throw an error since its the equivalent of just having a line of code that reads 'true'.\n\nThe switch already compares your parameter value, which in this case is the 'LCase(result)', to the case values, and then executes them if it finds a positive match. As said above, a switch is basically a different format for a multi layered if/else statement. your switch would look something like this as an 'if'\n[code:3ua9whw4]\nif (LCase(result) = &quot;snarky&quot;){\nmsg(“”)\nplayer&#46;snarky = player&#46;snarky + 1\n}\nelse if (LCase(result) = &quot;sympathy&quot;){\nmsg(“”)\nplayer&#46;sympathy = player&#46;sympathy + 1\n}\nelse if (LCase(result) = &quot;etc&quot;){&#46;&#46;&#46;}\n[/code:3ua9whw4]\nCases tend to be more preferable when you want to compare the same thing to bunch of different things, since as you can see you have to type it out for every comparison with the 'if'.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p><pre><code>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (get input, &quot;switch&quot;)<br/>}</code></pre></p></blockquote><br/>you're close, but you're using 'do' incorrectly there. The first parameter needs to be an object, and the second, the string, is the name of the attribute script to run. It's a lot like how 'player.serious' is a two part reference, the object name, and then the attribute within it you want to look at. The 'do' needs to first know the object, and then the name of the attribute, and the rest is up to the script you have stored in that attribute.<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m --><br/><br/>EDIT: the whole thing about calling functions vs scripts isn't really in relation to what you use in your code. Technically a lot of the code we use in quest are pre coded functions, really a function is just a named chunk of code that will activate whenever the code comes across it's name. You can create your own custom functions in quest and call them from your code ie: MyTestFunction(), will do whatever code I happen to include in the function itself. Anything with the parenthesis after it is a function, the persistent denote where the parameters go, though not all functions need to use parameters.<br/><br/>Anyways when HK refers to &quot;calling a script&quot; in this case we specifically mean a 'script' type attribute. Honestly it works almost identically to calling a custom function however functions are global so I prefer to avoid creating a function unless its something I plan to use pretty frequently. The big difference is using parameters, which you can use in a script attribute but its generally more work to do so vs a function.<br/><br/><br/>As for your switch code<br/><pre><code>get input {<br/>ListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) {<br/>switch(LCase(result)) {<br/>case(“Snarky”) {<br/>msg(“”)<br/>player&#46;snarky = player&#46;snarky + 1<br/>}<br/>case(“Sympathy”) <br/>msg(“”)<br/>player&#46;sympathy = player&#46;sympathy + 1<br/>}<br/>case(“Sarcastic”) <br/>msg(“”)<br/>player&#46;sarcastic = player&#46;sarcastic + 1<br/>}<br/>case(“Snoopy”)<br/>msg(“”)<br/>player&#46;snoopy = player&#46;snoopy + 1<br/>}<br/>case(“Serious”)<br/>msg(“”)<br/>player&#46;serious = player&#46;serious + 1<br/>}</code></pre><br/>I don't believe the 'ListContains(Split(&quot;sexy;sympathy;sarcastic;snoopy;serious&quot;,&quot;;&quot;)(LCase(result)) ' part is necessary. For one you don't have an 'if' to do anything whether your list contains statement is true or false, so it doesn't really accomplish anything as its written. It might actually throw an error since its the equivalent of just having a line of code that reads 'true'.<br/><br/>The switch already compares your parameter value, which in this case is the 'LCase(result)', to the case values, and then executes them if it finds a positive match. As said above, a switch is basically a different format for a multi layered if/else statement. your switch would look something like this as an 'if'<br/><pre><code><br/>if (LCase(result) = &quot;snarky&quot;){<br/>msg(“”)<br/>player&#46;snarky = player&#46;snarky + 1<br/>}<br/>else if (LCase(result) = &quot;sympathy&quot;){<br/>msg(“”)<br/>player&#46;sympathy = player&#46;sympathy + 1<br/>}<br/>else if (LCase(result) = &quot;etc&quot;){&#46;&#46;&#46;}<br/></code></pre><br/>Cases tend to be more preferable when you want to compare the same thing to bunch of different things, since as you can see you have to type it out for every comparison with the 'if'.",
      "PostDate": "2015-11-29T19:25:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39013",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "I don't know that I've ever used a get input without a switch that followed.  Even if it is only one choice.  It's either easy, I understand it, or both.",
      "EditableFormat": "bbcode",
      "HTML": "I don't know that I've ever used a get input without a switch that followed.  Even if it is only one choice.  It's either easy, I understand it, or both.",
      "PostDate": "2015-11-29T21:22:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39016",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Haha, yeah I've only very rarely used &quot;Get Input&quot; scripts because my game didn't have enough of stuff at the time for the player to make impacts on anything except the character they play. Now that I have a bit more written, I can start putting in &quot;personality&quot; based choices which will raise particular values. So now I'm trying to get the hang of these now. \n\nMy problem is, Tin said that the &quot;Switch&quot; default response needs to be attached to an object in the game and a string but I believe everything I use is attributes. For example, \n[quote:mk60zare]\n//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (get input, &quot;switch&quot;)\n}[/quote:mk60zare]\n\n[quote:mk60zare]you're close, but you're using 'do' incorrectly there. The first parameter needs to be an object, and the second, the string, is the name of the attribute script to run. It's a lot like how 'player.serious' is a two part reference, the object name, and then the attribute within it you want to look at. The 'do' needs to first know the object, and then the name of the attribute, and the rest is up to the script you have stored in that attribute.[/quote:mk60zare]\n\nI have an object called &quot;Personality&quot; \nand then a &quot;String List&quot;\n&quot;Snarky&quot;\n&quot;Curious&quot; etc. \n\nSo I'm not sure how to attach the default to the String List and have the &quot;reply&quot; thing to repeat xD (which is qouted above). Even if I made it an &quot;if&quot; statement though I still don't know how to get this...\n\n//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (get input, &quot;switch&quot;)\n\nto work lol.",
      "EditableFormat": "bbcode",
      "HTML": "Haha, yeah I've only very rarely used &quot;Get Input&quot; scripts because my game didn't have enough of stuff at the time for the player to make impacts on anything except the character they play. Now that I have a bit more written, I can start putting in &quot;personality&quot; based choices which will raise particular values. So now I'm trying to get the hang of these now. <br/><br/>My problem is, Tin said that the &quot;Switch&quot; default response needs to be attached to an object in the game and a string but I believe everything I use is attributes. For example, <br/><blockquote><p><br/>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (get input, &quot;switch&quot;)<br/>}</p></blockquote><br/><br/><blockquote><p>you're close, but you're using 'do' incorrectly there. The first parameter needs to be an object, and the second, the string, is the name of the attribute script to run. It's a lot like how 'player.serious' is a two part reference, the object name, and then the attribute within it you want to look at. The 'do' needs to first know the object, and then the name of the attribute, and the rest is up to the script you have stored in that attribute.</p></blockquote><br/><br/>I have an object called &quot;Personality&quot; <br/>and then a &quot;String List&quot;<br/>&quot;Snarky&quot;<br/>&quot;Curious&quot; etc. <br/><br/>So I'm not sure how to attach the default to the String List and have the &quot;reply&quot; thing to repeat xD (which is qouted above). Even if I made it an &quot;if&quot; statement though I still don't know how to get this...<br/><br/>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (get input, &quot;switch&quot;)<br/><br/>to work lol.",
      "PostDate": "2015-11-30T01:25:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39022",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the 'do' is for Script Attributes (Verbs): the 'do' calls upon (does~activates~runs~executes) Verbs, (like calling upon a Function)\n\nthe 'do' does ACTIONS\n\nfor examples:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m -->\n\ndo (Object_name, &quot;Script_Attribute_name_which_is_the_same_as_a_Verb_name&quot;)\n\ndo (orc, &quot;fight&quot;)\ndo (sword, &quot;wear&quot;)\ndo (cookie, &quot;take&quot;)\ndo (coin, &quot;drop&quot;)\ndo (ball, &quot;kick&quot;)\ndo (door, &quot;open&quot;)\ndo (door, &quot;unlock&quot;)\ndo (pizza, &quot;eat&quot;)\ndo (flower, &quot;smell&quot;)\ndo (player, &quot;heal&quot;)\ndo (fireball, &quot;cast&quot;)\ndo (fireball, &quot;learn&quot;)\n\n------------------------------------\n\nfor altering~changing~setting~re-setting~etc Non-Script Attributes, you use the 'set', see examples below:\n\n(the 'set' for the most part is the same as, for example: player.strength = 75)\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/set.html\">http://docs.textadventures.co.uk/quest/scripts/set.html</a><!-- m -->\n\nset (Object_name, &quot;Attribute_name&quot;, Attribute_Value)\n\nset (player, &quot;alias&quot;, &quot;HK&quot;)\nset (player, &quot;strength&quot;, 100)\nset (orc, &quot;strength&quot;, 25)\nset (orc, &quot;dead&quot;, true)\nset (player, &quot;class&quot;, &quot;warrior&quot;)\nset (player, &quot;race&quot;, &quot;human&quot;)\nset (player, &quot;sex&quot;, &quot;male&quot;)\nset (wall, &quot;color&quot;, &quot;green&quot;)\n\nthe above is the same as the below (for the most part)\n\nplayer.alias = &quot;HK&quot;\nplayer.strength = 100\norc.strength = 25\norc.dead = true\nplayer.class = &quot;warrior&quot;\nplayer.race = &quot;human&quot;\nplayer.sex = &quot;male&quot;\nwall.color = &quot;green&quot;",
      "EditableFormat": "bbcode",
      "HTML": "the 'do' is for Script Attributes (Verbs): the 'do' calls upon (does~activates~runs~executes) Verbs, (like calling upon a Function)<br/><br/>the 'do' does ACTIONS<br/><br/>for examples:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m --><br/><br/>do (Object_name, &quot;Script_Attribute_name_which_is_the_same_as_a_Verb_name&quot;)<br/><br/>do (orc, &quot;fight&quot;)<br/>do (sword, &quot;wear&quot;)<br/>do (cookie, &quot;take&quot;)<br/>do (coin, &quot;drop&quot;)<br/>do (ball, &quot;kick&quot;)<br/>do (door, &quot;open&quot;)<br/>do (door, &quot;unlock&quot;)<br/>do (pizza, &quot;eat&quot;)<br/>do (flower, &quot;smell&quot;)<br/>do (player, &quot;heal&quot;)<br/>do (fireball, &quot;cast&quot;)<br/>do (fireball, &quot;learn&quot;)<br/><br/>------------------------------------<br/><br/>for altering~changing~setting~re-setting~etc Non-Script Attributes, you use the 'set', see examples below:<br/><br/>(the 'set' for the most part is the same as, for example: player.strength = 75)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/set.html\">http://docs.textadventures.co.uk/quest/scripts/set.html</a><!-- m --><br/><br/>set (Object_name, &quot;Attribute_name&quot;, Attribute_Value)<br/><br/>set (player, &quot;alias&quot;, &quot;HK&quot;)<br/>set (player, &quot;strength&quot;, 100)<br/>set (orc, &quot;strength&quot;, 25)<br/>set (orc, &quot;dead&quot;, true)<br/>set (player, &quot;class&quot;, &quot;warrior&quot;)<br/>set (player, &quot;race&quot;, &quot;human&quot;)<br/>set (player, &quot;sex&quot;, &quot;male&quot;)<br/>set (wall, &quot;color&quot;, &quot;green&quot;)<br/><br/>the above is the same as the below (for the most part)<br/><br/>player.alias = &quot;HK&quot;<br/>player.strength = 100<br/>orc.strength = 25<br/>orc.dead = true<br/>player.class = &quot;warrior&quot;<br/>player.race = &quot;human&quot;<br/>player.sex = &quot;male&quot;<br/>wall.color = &quot;green&quot;",
      "PostDate": "2015-11-30T05:45:24+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39034",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Oooohhhhh, so &quot;Do&quot; is literally &quot;Do&quot; this verb. I guess that should have made sense. Now I feel like a derpaderp that you had to explain it like that. Ugh. \n\nSo set seems to be the one I should use. \n\n[quote:345fkty0]set (Object_name, &quot;Attribute_name&quot;, Attribute_Value)[/quote:345fkty0]\n\n//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\nset (get input, &quot;switch&quot;)\n}\n\nThe only problem is it seems like you still need an object name: Maybe....\n\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\nset (get input, &quot;switch&quot;, result)  \n} \n\n?",
      "EditableFormat": "bbcode",
      "HTML": "Oooohhhhh, so &quot;Do&quot; is literally &quot;Do&quot; this verb. I guess that should have made sense. Now I feel like a derpaderp that you had to explain it like that. Ugh. <br/><br/>So set seems to be the one I should use. <br/><br/><blockquote><p>set (Object_name, &quot;Attribute_name&quot;, Attribute_Value)</p></blockquote><br/><br/>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>set (get input, &quot;switch&quot;)<br/>}<br/><br/>The only problem is it seems like you still need an object name: Maybe....<br/><br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>set (get input, &quot;switch&quot;, result)  <br/>} <br/><br/>",
      "PostDate": "2015-11-30T20:22:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39037",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "&quot;Do&quot; can call a verb, that's not the only thing it does. The key reason we use it here is to call a 'script' type attribute to make the code in it run.\n\nI threw together a demo for you to take a look at so you can see it in action and what the script looks like.\n\n<!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/download/5zo1lhasbk91t3s/SwitchLoopDemo.aslx\">http://www.mediafire.com/download/5zo1l ... pDemo.aslx</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "&quot;Do&quot; can call a verb, that's not the only thing it does. The key reason we use it here is to call a 'script' type attribute to make the code in it run.<br/><br/>I threw together a demo for you to take a look at so you can see it in action and what the script looks like.<br/><br/><!-- m --><a class=\"postlink\" href=\"http://www.mediafire.com/download/5zo1lhasbk91t3s/SwitchLoopDemo.aslx\">http://www.mediafire.com/download/5zo1l ... pDemo.aslx</a><!-- m -->",
      "PostDate": "2015-11-30T23:11:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39038",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@ neonayon:\n\nactually, you're still trying to use scripts, so you'd need to use 'do', and something like this, for example only:\n\n[code:2hsar2s5]&lt;game name=&quot;blah&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    do (creation, &quot;character_creation&quot;)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;creation&quot;&gt;\n  &lt;attr name=&quot;character_creation&quot; type=&quot;script&quot;&gt;\n    msg (&quot;What is your name?&quot;)\n    get input {\n      player&#46;alias = result\n      switch (player&#46;alias) {\n        case (&quot;HK&quot;) {\n          msg (&quot;Your name is HK&quot;)\n        }\n        case (&quot;Neonayon&quot;) {\n          msg (&quot;Your name is Neonayon&quot;)\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:2hsar2s5]\n\nor, for example, if I wanted to do~run the 'start' script again later in the game in some scripting, you'd do this:\n\ndo (game, &quot;start&quot;)\n\n---------------------------\n\n@ Neonayon:\n\nusing my example above, if you actually want to do a specific segment~part within a larger code~scripting block... a way to do that is to put that segment~part into a Function, and then have the function call be in-place-of that segment~part in the larger code-scripting block, but this gets into more complex Function and~or Looping usage, which is riddled with order of operation issues, as it's easy to mess it up the design needed ...\n\n-----------------------------\n\n@ Tin:\n\nhow else or what else can 'do' be used for? I didn't know it could be used for other stuff besides activating~invoking a Script Attribute. Learned something new, laughs.",
      "EditableFormat": "bbcode",
      "HTML": "@ neonayon:<br/><br/>actually, you're still trying to use scripts, so you'd need to use 'do', and something like this, for example only:<br/><br/><pre><code>&lt;game name=&quot;blah&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    do (creation, &quot;character_creation&quot;)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;creation&quot;&gt;<br/>  &lt;attr name=&quot;character_creation&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;What is your name?&quot;)<br/>    get input {<br/>      player&#46;alias = result<br/>      switch (player&#46;alias) {<br/>        case (&quot;HK&quot;) {<br/>          msg (&quot;Your name is HK&quot;)<br/>        }<br/>        case (&quot;Neonayon&quot;) {<br/>          msg (&quot;Your name is Neonayon&quot;)<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>or, for example, if I wanted to do~run the 'start' script again later in the game in some scripting, you'd do this:<br/><br/>do (game, &quot;start&quot;)<br/><br/>---------------------------<br/><br/>@ Neonayon:<br/><br/>using my example above, if you actually want to do a specific segment~part within a larger code~scripting block... a way to do that is to put that segment~part into a Function, and then have the function call be in-place-of that segment~part in the larger code-scripting block, but this gets into more complex Function and~or Looping usage, which is riddled with order of operation issues, as it's easy to mess it up the design needed ...<br/><br/>-----------------------------<br/><br/>@ Tin:<br/><br/>how else or what else can 'do' be used for? I didn't know it could be used for other stuff besides activating~invoking a Script Attribute. Learned something new, laughs.",
      "PostDate": "2015-11-30T23:14:13+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39040",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:kbif9kq9]@ Tin:\n\nhow else or what else can 'do' be used for? I didn't know it could be used for other stuff besides activating~invoking a Script Attribute. Learned something new, laughs.[/quote:kbif9kq9]\n\nUh yea, ignore that part, I was not entirely paying attention when I typed that. Pretty sure I was making incorrect assumptions tho I don't even remember what else I was thinking you could call with it now.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>@ Tin:<br/><br/>how else or what else can 'do' be used for? I didn't know it could be used for other stuff besides activating~invoking a Script Attribute. Learned something new, laughs.</blockquote><br/><br/>Uh yea, ignore that part, I was not entirely paying attention when I typed that. Pretty sure I was making incorrect assumptions tho I don't even remember what else I was thinking you could call with it now.",
      "PostDate": "2015-12-01T00:00:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39042",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Wow the sample game made it a lot clearer as well. Thank you so much. \n\nso it's \n\n//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (control, &quot;SwitchLoop&quot;)\n}\n\nand that'll keep the choices repeating. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> \n\nThank you so much Tin and HK. I understand the concept a lot better I think! I really appreciate that!!",
      "EditableFormat": "bbcode",
      "HTML": "Wow the sample game made it a lot clearer as well. Thank you so much. <br/><br/>so it's <br/><br/>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (control, &quot;SwitchLoop&quot;)<br/>}<br/><br/>and that'll keep the choices repeating. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> <br/><br/>Thank you so much Tin and HK. I understand the concept a lot better I think! I really appreciate that!!",
      "PostDate": "2015-12-01T01:41:04+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39044",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Yep, although you don't have to name them the same thing, I just tried to keep the names straight forwards.",
      "EditableFormat": "bbcode",
      "HTML": "Yep, although you don't have to name them the same thing, I just tried to keep the names straight forwards.",
      "PostDate": "2015-12-01T02:02:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39144",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I have one more question about the &quot;control&quot; object. \n\nWhat is it exactly, and how does it make the script repeat. I ask because in the demo it has...\n\n[quote:1iuiif5h] (&quot;&quot;)\nget input {\n  switch (LCase(result)) {\n    case (&quot;option1&quot;) {\n      msg (&quot;You chose option1, clearing screen and restarting loop&quot;)\n      wait {\n        ClearScreen\n        do (control, &quot;SwitchLoop&quot;)\n      }\n    }\n    case (&quot;option2&quot;) {\n      msg (&quot;You chose option2, restarting loop without screen clear or wait&quot;)\n      msg (&quot;&quot;)\n      do (control, &quot;SwitchLoop&quot;)\n    }\n    default {\n      msg (&quot;invalid choice, please try again...&quot;)\n      msg (&quot;(this is the default for the switch)&quot;)\n      msg (&quot;&quot;)\n      wait {\n        do (control, &quot;SwitchLoop&quot;)\n      }\n    }\n  }\n}[/quote:1iuiif5h]\n\nlisted on the control.object's attributes. But I don't understand the function of it for the code. I mean...does a switch script need this object anchor which represents nothing in order to repeat? I know in the previous conversations we were talking about...\n\ndo (object, &quot;SwitchLoop&quot;) \n\nBut ...why can't it just be...\n\ndo (&quot;SwitchLoop&quot;)\n\nIt seems like connecting it to an object is completely pointless unless you have an object in your game that it needs to be connected to for a purpose. So I guess I just create an object called &quot;SwitchLoopResponse&quot; and then put......I don't know...",
      "EditableFormat": "bbcode",
      "HTML": "So I have one more question about the &quot;control&quot; object. <br/><br/>What is it exactly, and how does it make the script repeat. I ask because in the demo it has...<br/><br/><blockquote><p> (&quot;&quot;)<br/>get input {<br/>  switch (LCase(result)) {<br/>    case (&quot;option1&quot;) {<br/>      msg (&quot;You chose option1, clearing screen and restarting loop&quot;)<br/>      wait {<br/>        ClearScreen<br/>        do (control, &quot;SwitchLoop&quot;)<br/>      }<br/>    }<br/>    case (&quot;option2&quot;) {<br/>      msg (&quot;You chose option2, restarting loop without screen clear or wait&quot;)<br/>      msg (&quot;&quot;)<br/>      do (control, &quot;SwitchLoop&quot;)<br/>    }<br/>    default {<br/>      msg (&quot;invalid choice, please try again...&quot;)<br/>      msg (&quot;(this is the default for the switch)&quot;)<br/>      msg (&quot;&quot;)<br/>      wait {<br/>        do (control, &quot;SwitchLoop&quot;)<br/>      }<br/>    }<br/>  }<br/>}</p></blockquote><br/><br/>listed on the control.object's attributes. But I don't understand the function of it for the code. I mean...does a switch script need this object anchor which represents nothing in order to repeat? I know in the previous conversations we were talking about...<br/><br/>do (object, &quot;SwitchLoop&quot;) <br/><br/>But ...why can't it just be...<br/><br/>do (&quot;SwitchLoop&quot;)<br/><br/>It seems like connecting it to an object is completely pointless unless you have an object in your game that it needs to be connected to for a purpose. So I guess I just create an object called &quot;SwitchLoopResponse&quot; and then put......I don't know...",
      "PostDate": "2015-12-04T03:44:22+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39145",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I haven't looked at Tin's code, but yes, I believe that's the point of Tin creating and using an Object, that he~she decided to name as 'control' and its Script Attribute that he~she decided to name as 'switchloop'. The name of an Object and~or Attribute doesn't matter, aside from helping the human out with understanding what it is and~or is doing and~or with~for organization.\n\nthe 'do' Script~Function (and many others as well, such as 'set') REQUIRE an Object, as it uses an Attribute (and as an Attribute is contained inside of an Object or other Elements, to call upon that Attribute, you must specify the Object that contains it, in order to call upon it and activate it, right? does this make sense?)\n\nthe confusion is that with normal scripting (code lines), the syntax is:\n\norc.fight // you use a period to separate the Object from its Attribute\n\nbut when your using a Script~Function such as 'do' or 'set', it's:\n\ndo (orc, &quot;fight&quot;) // you use a comma to separate the Object from its Attribute, and the Attribute must be in double quotes too. The reason is that these are parameter inputs, which are separated by commas, as opposed to a direct scripting code line which just requires the dot~period separator for it.\n\nset (orc, &quot;life&quot;, 100) // you use a comma to separate the Object from its Attribute, and the Attribute must be in double quotes too. As you can see, 'set' has a 3rd parameter position, also separated by a comma, for setting~re-setting the Attribute's Value. The reason is that these are parameter inputs, which are separated by commas, as opposed to a direct scripting code line which just requires the dot~period separator for it.\n\n-----------------\n\nto explain this further... gets into programming knowledge and terminology~lingo, which would probably confuse you even worse, as I'd be explaining the difference from a standalone Function Element vs a Method~Member (Attribute) OF an Object-Class, and etc programing stuff, lol\n\nso, I hope the above explanation helps... otehrwise, you're just going to have to memorize the syntaxes, and ignore not understanding it, lol.",
      "EditableFormat": "bbcode",
      "HTML": "I haven't looked at Tin's code, but yes, I believe that's the point of Tin creating and using an Object, that he~she decided to name as 'control' and its Script Attribute that he~she decided to name as 'switchloop'. The name of an Object and~or Attribute doesn't matter, aside from helping the human out with understanding what it is and~or is doing and~or with~for organization.<br/><br/>the 'do' Script~Function (and many others as well, such as 'set') REQUIRE an Object, as it uses an Attribute (and as an Attribute is contained inside of an Object or other Elements, to call upon that Attribute, you must specify the Object that contains it, in order to call upon it and activate it, right? does this make sense?)<br/><br/>the confusion is that with normal scripting (code lines), the syntax is:<br/><br/>orc.fight // you use a period to separate the Object from its Attribute<br/><br/>but when your using a Script~Function such as 'do' or 'set', it's:<br/><br/>do (orc, &quot;fight&quot;) // you use a comma to separate the Object from its Attribute, and the Attribute must be in double quotes too. The reason is that these are parameter inputs, which are separated by commas, as opposed to a direct scripting code line which just requires the dot~period separator for it.<br/><br/>set (orc, &quot;life&quot;, 100) // you use a comma to separate the Object from its Attribute, and the Attribute must be in double quotes too. As you can see, 'set' has a 3rd parameter position, also separated by a comma, for setting~re-setting the Attribute's Value. The reason is that these are parameter inputs, which are separated by commas, as opposed to a direct scripting code line which just requires the dot~period separator for it.<br/><br/>-----------------<br/><br/>to explain this further... gets into programming knowledge and terminology~lingo, which would probably confuse you even worse, as I'd be explaining the difference from a standalone Function Element vs a Method~Member (Attribute) OF an Object-Class, and etc programing stuff, lol<br/><br/>so, I hope the above explanation helps... otehrwise, you're just going to have to memorize the syntaxes, and ignore not understanding it, lol.",
      "PostDate": "2015-12-04T04:05:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39146",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Thank you for clarifying that they need an object to use the attribute of. That makes perfect sense. \n\nBut on the object's attribute...if the &quot;Switch&quot; is for different conversation responses throughout the game, what needs to be put to have the responses repeated if the player mistypes something? I got the entire script working EXCEPT for the default situation.",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for clarifying that they need an object to use the attribute of. That makes perfect sense. <br/><br/>But on the object's attribute...if the &quot;Switch&quot; is for different conversation responses throughout the game, what needs to be put to have the responses repeated if the player mistypes something? I got the entire script working EXCEPT for the default situation.",
      "PostDate": "2015-12-04T04:09:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39147",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I added-edited in a bit more stuff to my previous post, so you may want to refresh and look at it again\n\n------------\n\nyou could have the 'switch' (which is scripting INSIDE of the, using Tin's example, his~her 'switchloop' Script Attribute of the 'control' Object) scripting's default response be a (re) call upon of the 'control' Object's 'switchloop' Script Attribute:\n\nthe 'switch' scripting's 'default response:\n\ndo (control, &quot;SwitchLoop&quot;)\n\nwhich will do the entire thing over again\n\n(this is bad code design though, as it's recursion, which eats up memory, as it stores every re-run of the 'SwitchLoop' scripting, not removing this storage until you move past this entire scripting, to entirely new scripting)\n\n(but, it probably~hopefully won't effect your game, as long as the person playing the game doesn't mess up a bunch of times... laughs)\n\n(to avoid the memory &quot;gluttony&quot; of recursion, you'd have to not use re-calling of the 'SwitchLoop', and instead use a 'while', 'do-while' (not sure if quest has this type of loop or not, as it's not really necessary as you can easily do the same with a 'while' loop), 'for', or 'foreach' loop, as these don't eat up your memory.\n\n(I still got to learn exactly why they don't... as best as I think I understand, these loops are like literal 'goto' code line calls, but I still don't understand why memory isn't being used up, regardless, but meh, hopefully I be learning this in future programming classes ~ you can ignore all of this technical wondering on my part, lol. Note I do understand that an Object~Element uses up much more memory to store the scripting due to all the extra &quot;metadata&quot; needed and~or etc stuff, than does storing just script-code lines, but this still uses up some memory too, just a lot less, but as you can see, I don't really understand how the loops are working compared to how recursion is working, laughs).",
      "EditableFormat": "bbcode",
      "HTML": "I added-edited in a bit more stuff to my previous post, so you may want to refresh and look at it again<br/><br/>------------<br/><br/>you could have the 'switch' (which is scripting INSIDE of the, using Tin's example, his~her 'switchloop' Script Attribute of the 'control' Object) scripting's default response be a (re) call upon of the 'control' Object's 'switchloop' Script Attribute:<br/><br/>the 'switch' scripting's 'default response:<br/><br/>do (control, &quot;SwitchLoop&quot;)<br/><br/>which will do the entire thing over again<br/><br/>(this is bad code design though, as it's recursion, which eats up memory, as it stores every re-run of the 'SwitchLoop' scripting, not removing this storage until you move past this entire scripting, to entirely new scripting)<br/><br/>(but, it probably~hopefully won't effect your game, as long as the person playing the game doesn't mess up a bunch of times... laughs)<br/><br/>(to avoid the memory &quot;gluttony&quot; of recursion, you'd have to not use re-calling of the 'SwitchLoop', and instead use a 'while', 'do-while' (not sure if quest has this type of loop or not, as it's not really necessary as you can easily do the same with a 'while' loop), 'for', or 'foreach' loop, as these don't eat up your memory.<br/><br/>(I still got to learn exactly why they don't... as best as I think I understand, these loops are like literal 'goto' code line calls, but I still don't understand why memory isn't being used up, regardless, but meh, hopefully I be learning this in future programming classes ~ you can ignore all of this technical wondering on my part, lol. Note I do understand that an Object~Element uses up much more memory to store the scripting due to all the extra &quot;metadata&quot; needed and~or etc stuff, than does storing just script-code lines, but this still uses up some memory too, just a lot less, but as you can see, I don't really understand how the loops are working compared to how recursion is working, laughs).",
      "PostDate": "2015-12-04T04:21:32+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39150",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "This seems way overly complicated for a simple....repeat the question process lol. I've already been trying to figure it out for at least 3 hours today, and several the previous days when the problem first came up. I'd rather the game not eat up memory....so would I do...\n\nSo how would the &quot;while&quot; work in terms of the default of the switch script? I'm not familiar with &quot;foreach&quot;, or &quot;do-while&quot; or &quot;while&quot;\n\n//let's say player mispells choice\ndefault {\nmsg(“What was that? Can you choose your response again, please?”)\ndo (control, &quot;SwitchLoop&quot;)\n}",
      "EditableFormat": "bbcode",
      "HTML": "This seems way overly complicated for a simple....repeat the question process lol. I've already been trying to figure it out for at least 3 hours today, and several the previous days when the problem first came up. I'd rather the game not eat up memory....so would I do...<br/><br/>So how would the &quot;while&quot; work in terms of the default of the switch script? I'm not familiar with &quot;foreach&quot;, or &quot;do-while&quot; or &quot;while&quot;<br/><br/>//let's say player mispells choice<br/>default {<br/>msg(“What was that? Can you choose your response again, please?”)<br/>do (control, &quot;SwitchLoop&quot;)<br/>",
      "PostDate": "2015-12-04T04:45:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39155",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "actually, you wouldn't use the 'switch' default response to repeat, as this is what the 'while' loop is for, it'll do the repeating for you.\n\n(using Tin's example)\n\n[code:3ka4w2te]&lt;object name=&quot;control&quot;&gt;\n  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;\n    // possibly your scripts (depends on what your scripts are in whether they go inside of the 'while' loop block or outside of it)\n    flag = false\n    while (!flag)\n      // possibly your scripts (depends on what your scripts are in whether they go inside of the 'while' loop block or outside of it)\n      // your 'switch' block\n        // your 'cases' of the 'switch' block\n        // optional&#58; the 'switch' default response\n\n       // put in this script line, flag = true, for when you want to end the while loop's 'looping' and continue on with the game, into (depends) whatever 'cases' and~or the 'default response&#46; Based on what you've posted, it sounds like if any of the cases happen, you want to end the looping and move on, so you EACH~ALL of your cases, you'll need this script line in them&#58; flag = true // or via GUI~Editor&#58; set variable flag = &#91;expression&#93; true \n\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:3ka4w2te]\n\n-----------\n\nhow the while loop works (in my example above):\n\nthe 'flag' local~temporary Variable (this is NOT an Attribute) is set to 'false'\n\nthis ensures that the while loop initially runs (aka: it'll run at least once: this is the same effect as the 'do while' loop), as this is due to the while loop's condition is, while (!flag), which is saying: as long as 'flag' is set to 'false', the while loop will keep repeating itself (will keep looping).\n\nThus to stop this endless repeating, we just need to set~re-set the 'flag' to 'true', which will end the while loop's repeating and the game will continue onwards.\n\nSo, somewhere in whatever combination of cases (none, one, which one, some, which some, and~or all) and~or the default response, one of these, must have this script line, flag = true, or else you'd have an endless~infinite while loop, which will crash your game, as the game~quest~computer~cpu can't endlessly~infinitely loop (you don't have infinite memory and machines do break down too from even normal usage), lol.",
      "EditableFormat": "bbcode",
      "HTML": "actually, you wouldn't use the 'switch' default response to repeat, as this is what the 'while' loop is for, it'll do the repeating for you.<br/><br/>(using Tin's example)<br/><br/><pre><code>&lt;object name=&quot;control&quot;&gt;<br/>  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;<br/>    // possibly your scripts (depends on what your scripts are in whether they go inside of the 'while' loop block or outside of it)<br/>    flag = false<br/>    while (!flag)<br/>      // possibly your scripts (depends on what your scripts are in whether they go inside of the 'while' loop block or outside of it)<br/>      // your 'switch' block<br/>        // your 'cases' of the 'switch' block<br/>        // optional&#58; the 'switch' default response<br/><br/>       // put in this script line, flag = true, for when you want to end the while loop's 'looping' and continue on with the game, into (depends) whatever 'cases' and~or the 'default response&#46; Based on what you've posted, it sounds like if any of the cases happen, you want to end the looping and move on, so you EACH~ALL of your cases, you'll need this script line in them&#58; flag = true // or via GUI~Editor&#58; set variable flag = &#91;expression&#93; true <br/><br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>-----------<br/><br/>how the while loop works (in my example above):<br/><br/>the 'flag' local~temporary Variable (this is NOT an Attribute) is set to 'false'<br/><br/>this ensures that the while loop initially runs (aka: it'll run at least once: this is the same effect as the 'do while' loop), as this is due to the while loop's condition is, while (!flag), which is saying: as long as 'flag' is set to 'false', the while loop will keep repeating itself (will keep looping).<br/><br/>Thus to stop this endless repeating, we just need to set~re-set the 'flag' to 'true', which will end the while loop's repeating and the game will continue onwards.<br/><br/>So, somewhere in whatever combination of cases (none, one, which one, some, which some, and~or all) and~or the default response, one of these, must have this script line, flag = true, or else you'd have an endless~infinite while loop, which will crash your game, as the game~quest~computer~cpu can't endlessly~infinitely loop (you don't have infinite memory and machines do break down too from even normal usage), lol.",
      "PostDate": "2015-12-04T05:02:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39156",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I'll give it a shot. Will the &quot;switch&quot; script work if I delete the &quot;default&quot; part of it? I mean, isn't that like the &quot;else&quot; in the &quot;If&quot; scripts?",
      "EditableFormat": "bbcode",
      "HTML": "I'll give it a shot. Will the &quot;switch&quot; script work if I delete the &quot;default&quot; part of it? I mean, isn't that like the &quot;else&quot; in the &quot;If&quot; scripts?",
      "PostDate": "2015-12-04T05:04:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39157",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the default response of a 'switch' Script~Function, is completely optional, indeed it is just like an 'else' in an 'if' Script~Function block, acting as an optional &quot;catch all&quot;, aka: if everything else fails, then do or msg this... lol",
      "EditableFormat": "bbcode",
      "HTML": "the default response of a 'switch' Script~Function, is completely optional, indeed it is just like an 'else' in an 'if' Script~Function block, acting as an optional &quot;catch all&quot;, aka: if everything else fails, then do or msg this... lol",
      "PostDate": "2015-12-04T05:12:00+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39192",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I'm curious...\n\nI have an object &quot;SwitchLoopResponse&quot;\n\nAttribute name: SwitchLoop\n\nScript&#058; \n\nflag = false\nwhile (!flag) {\n}\nflag = true\n\nBut how do I connect this code to the switch scripts in the game?\n\nMay I see a sample of a case or two? Here are what mine look like...\n\nswitch (LCase(result)) {\n  case (&quot;sexy&quot;) {\n    msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.&lt;br/&gt;&quot;)\n    player.sexy = player.sexy + 1\n  }\n  case (&quot;sympathy&quot;) {\n    msg (&quot;&lt;br/&gt;\\&quot;Err...that is, I'm not Rold, ma'am.\\&quot; you reply almost bashfully.&lt;br/&gt;&quot;)\n    player.sympathy = player.sympathy + 1\n  }\n  case (&quot;sarcastic&quot;) {\n    msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.&lt;br/&gt;&quot;)\n    player.sarcastic = player.sarcastic + 1\n  }\n  case (&quot;snoopy&quot;) {\n    msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.&lt;br/&gt;&quot;)\n    player.snoopy = player.snoopy + 1\n  }\n  case (&quot;serious&quot;) {\n    msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.&lt;br/&gt;&quot;)\n    player.serious = player.serious + 1\n  }\n}",
      "EditableFormat": "bbcode",
      "HTML": "So I'm curious...<br/><br/>I have an object &quot;SwitchLoopResponse&quot;<br/><br/>Attribute name: SwitchLoop<br/><br/>Script&#058; <br/><br/>flag = false<br/>while (!flag) {<br/>}<br/>flag = true<br/><br/>But how do I connect this code to the switch scripts in the game?<br/><br/>May I see a sample of a case or two? Here are what mine look like...<br/><br/>switch (LCase(result)) {<br/>  case (&quot;sexy&quot;) {<br/>    msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.&lt;br/&gt;&quot;)<br/>    player.sexy = player.sexy + 1<br/>  }<br/>  case (&quot;sympathy&quot;) {<br/>    msg (&quot;&lt;br/&gt;\\&quot;Err...that is, I'm not Rold, ma'am.\\&quot; you reply almost bashfully.&lt;br/&gt;&quot;)<br/>    player.sympathy = player.sympathy + 1<br/>  }<br/>  case (&quot;sarcastic&quot;) {<br/>    msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.&lt;br/&gt;&quot;)<br/>    player.sarcastic = player.sarcastic + 1<br/>  }<br/>  case (&quot;snoopy&quot;) {<br/>    msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.&lt;br/&gt;&quot;)<br/>    player.snoopy = player.snoopy + 1<br/>  }<br/>  case (&quot;serious&quot;) {<br/>    msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.&lt;br/&gt;&quot;)<br/>    player.serious = player.serious + 1<br/>  }<br/>",
      "PostDate": "2015-12-04T17:04:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39193",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "Unfortunately Quest doesn't play terribly nicely with any kind of delayed response and active scripts, which is why I used the recursion method. If you put a 'get input' or something similar inside a 'while loop' you're going to get errors, because it will keep running the loop without waiting for the player input.\n\nie:\n[code:ut6m8h1v]while(flag){\n\tget input {\n\t\t//do stuff\n\t\t//turn flag off when a case that ends the loop happens\n\t}\n\t//this part of the script will still run while waiting on the get input\n\t//&#46;&#46;&#46;\n\t//you now get an error because the loop will try to constantly re-run your get input while the first one is still waiting&#46;\n}[/code:ut6m8h1v]\n\nEDIT: Also yes you can remove the 'default' from a switch and still be okay. If you want your menu to account for invalid inputs and such you'll probably want one tho. It literally is the 'else' of the switch, the thing that happens if no cases are matched. Not required but as far as menus and non-optional inputs its probably a good idea.",
      "EditableFormat": "bbcode",
      "HTML": "Unfortunately Quest doesn't play terribly nicely with any kind of delayed response and active scripts, which is why I used the recursion method. If you put a 'get input' or something similar inside a 'while loop' you're going to get errors, because it will keep running the loop without waiting for the player input.<br/><br/>ie:<br/><pre><code>while(flag){<br/>\tget input {<br/>\t\t//do stuff<br/>\t\t//turn flag off when a case that ends the loop happens<br/>\t}<br/>\t//this part of the script will still run while waiting on the get input<br/>\t//&#46;&#46;&#46;<br/>\t//you now get an error because the loop will try to constantly re-run your get input while the first one is still waiting&#46;<br/>}</code></pre><br/><br/>EDIT: Also yes you can remove the 'default' from a switch and still be okay. If you want your menu to account for invalid inputs and such you'll probably want one tho. It literally is the 'else' of the switch, the thing that happens if no cases are matched. Not required but as far as menus and non-optional inputs its probably a good idea.",
      "PostDate": "2015-12-04T17:16:14+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39194",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "I guess that makes sense ---- hopefully then the player just doesn't type a bunch of misspellings lol!\n\nSo okay, I have the object:  [i:3phbnd0a]SwitchLoopResponse  [/i:3phbnd0a](in place where you had &quot;control&quot;)\nand an attribute on it called: [i:3phbnd0a]SwitchLoop[/i:3phbnd0a]\n\nNow when I looked at the code on your demo, it had...\n\n(&quot;&quot;)\nget input {\nswitch (LCase(result)) {\ncase (&quot;option1&quot;) {\nmsg (&quot;You chose option1, clearing screen and restarting loop&quot;)\nwait {\nClearScreen\ndo (control, &quot;SwitchLoop&quot;)\n}\n}\ncase (&quot;option2&quot;) {\nmsg (&quot;You chose option2, restarting loop without screen clear or wait&quot;)\nmsg (&quot;&quot;)\ndo (control, &quot;SwitchLoop&quot;)\n}\ndefault {\nmsg (&quot;invalid choice, please try again...&quot;)\nmsg (&quot;(this is the default for the switch)&quot;)\nmsg (&quot;&quot;)\nwait {\ndo (control, &quot;SwitchLoop&quot;)\n}\n}\n}\n}\n\nSo applying it to my game would look like...?\n\nswitch (LCase(result)) {\ndefault {\ndo (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n}\n}\n\nWhich I would have to apply to all the default &quot;switch&quot; scripts correct? And as an attribute script on my &quot;SwitchLoopResponse&quot; object?",
      "EditableFormat": "bbcode",
      "HTML": "I guess that makes sense ---- hopefully then the player just doesn't type a bunch of misspellings lol!<br/><br/>So okay, I have the object:  <span style=\"font-style:italic;\">SwitchLoopResponse  </span>(in place where you had &quot;control&quot;)<br/>and an attribute on it called: <span style=\"font-style:italic;\">SwitchLoop</span><br/><br/>Now when I looked at the code on your demo, it had...<br/><br/>(&quot;&quot;)<br/>get input {<br/>switch (LCase(result)) {<br/>case (&quot;option1&quot;) {<br/>msg (&quot;You chose option1, clearing screen and restarting loop&quot;)<br/>wait {<br/>ClearScreen<br/>do (control, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/>case (&quot;option2&quot;) {<br/>msg (&quot;You chose option2, restarting loop without screen clear or wait&quot;)<br/>msg (&quot;&quot;)<br/>do (control, &quot;SwitchLoop&quot;)<br/>}<br/>default {<br/>msg (&quot;invalid choice, please try again...&quot;)<br/>msg (&quot;(this is the default for the switch)&quot;)<br/>msg (&quot;&quot;)<br/>wait {<br/>do (control, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/>}<br/>}<br/><br/>So applying it to my game would look like...?<br/><br/>switch (LCase(result)) {<br/>default {<br/>do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/><br/>Which I would have to apply to all the default &quot;switch&quot; scripts correct? And as an attribute script on my &quot;SwitchLoopResponse&quot; object?",
      "PostDate": "2015-12-04T17:46:09+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39195",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "gah...I totally forgot about the 'get input' issue... sorry for the code using 'while'... my bad\n\n-----------\n\nthough for future reference if you ever want to use the while loop, here's how it should be (I wasn't clear enough, sorry, neonayon):\n\n(ignoring the issue with 'get input', of course)\n\n[code:vfswfh7s]flag = false\nwhile (!flag) {\n  msg (&quot;xxx&quot;)\n  get input {\n    switch (LCase(result)) {\n      case (&quot;sexy&quot;) {\n        msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)\n        player&#46;sexy = player&#46;sexy + 1\n        flag = true\n      }\n      case (&quot;sympathy&quot;) {\n        msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)\n        player&#46;sympathy = player&#46;sympathy + 1\n        flag = true\n      }\n      case (&quot;sarcastic&quot;) {\n        msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)\n        player&#46;sarcastic = player&#46;sarcastic + 1\n        flag = true\n      }\n      case (&quot;snoopy&quot;) {\n        msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)\n        player&#46;snoopy = player&#46;snoopy + 1\n        flag = true\n      }\n      case (&quot;serious&quot;) {\n        msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a veryy serious tone&#46;&lt;br/&gt;&quot;)\n        player&#46;serious = player&#46;serious + 1\n        flag = true\n      }\n      default {\n        msg (&quot;Wrong input, try again&#46;&#46;&#46;&quot;)\n      }\n    }\n  }\n}[/code:vfswfh7s]",
      "EditableFormat": "bbcode",
      "HTML": "gah...I totally forgot about the 'get input' issue... sorry for the code using 'while'... my bad<br/><br/>-----------<br/><br/>though for future reference if you ever want to use the while loop, here's how it should be (I wasn't clear enough, sorry, neonayon):<br/><br/>(ignoring the issue with 'get input', of course)<br/><br/><pre><code>flag = false<br/>while (!flag) {<br/>  msg (&quot;xxx&quot;)<br/>  get input {<br/>    switch (LCase(result)) {<br/>      case (&quot;sexy&quot;) {<br/>        msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sexy = player&#46;sexy + 1<br/>        flag = true<br/>      }<br/>      case (&quot;sympathy&quot;) {<br/>        msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sympathy = player&#46;sympathy + 1<br/>        flag = true<br/>      }<br/>      case (&quot;sarcastic&quot;) {<br/>        msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sarcastic = player&#46;sarcastic + 1<br/>        flag = true<br/>      }<br/>      case (&quot;snoopy&quot;) {<br/>        msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)<br/>        player&#46;snoopy = player&#46;snoopy + 1<br/>        flag = true<br/>      }<br/>      case (&quot;serious&quot;) {<br/>        msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a veryy serious tone&#46;&lt;br/&gt;&quot;)<br/>        player&#46;serious = player&#46;serious + 1<br/>        flag = true<br/>      }<br/>      default {<br/>        msg (&quot;Wrong input, try again&#46;&#46;&#46;&quot;)<br/>      }<br/>    }<br/>  }<br/>}</code></pre>",
      "PostDate": "2015-12-04T17:57:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39196",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;Neonayon&quot;:2s1qde79]I guess that makes sense ---- hopefully then the player just doesn't type a bunch of misspellings lol!\n\nSo okay, I have the object:  [i:2s1qde79]SwitchLoopResponse  [/i:2s1qde79](in place where you had &quot;control&quot;)\nand an attribute on it called: [i:2s1qde79]SwitchLoop[/i:2s1qde79]\n\nNow when I looked at the code on your demo, it had...\n\n...\n\nSo applying it to my game would look like...?\n\nswitch (LCase(result)) {\ndefault {\ndo (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n}\n}\n\nWhich I would have to apply to all the default &quot;switch&quot; scripts correct? And as an attribute script on my &quot;SwitchLoopResponse&quot; object?[/quote:2s1qde79]\n\nYes you have that right as far as the script setup. Generally yes you want whatever the current input code to be the attribute getting called. Think of it this way, when you use 'do (ThisObject, &quot;ThisLoop&quot;)', you're basically saying, &quot;restart this script&quot;. So at any point where you want to loop or just reset the menu or whatnot, then you call your script attribute, which in this case will likely be as the 'default' case more often than not.\n\nBut yea that's also part of why I try to keep my control objects names fairly simple, less room for error and less typing when I reference them a lot.\n\nAlso you don't strictly need a control object for this sort of thing, I just like them for organization purposes. If you're running a bunch of these for conversations with npcs and such I'd probably give the script attribute to the relevant npc.\n\n\n\nSomewhat offtopic stuff:\n\nI actually thought of a way to use a while loop without breaking everything, tho it kinda gets to the point where I'm not sure it ends up actually being any better than using recursion. You can use a second flag to denote when the 'get input' should be checked, so that it doesn't try to run it till the current one is done.\nie:\n[code:2s1qde79]flag1 = true\nflag2 = true\n\nwhile(flag1){\n\tif (flag2){\n\t\tflag2 = false\n\t\t//this makes sure the input doesn't repeat while the current one is active\n\t\tget input{\n\t\t\tswitch (LCase(result)){\n\t\t\t\tcase(1){\n\t\t\t\t\t//do stuff\n\t\t\t\t\t//loop ends\n\t\t\t\t\tflag1 = false\n\t\t\t\t}\n\t\t\t\tdefault {\n\t\t\t\t\t//redo input\n\t\t\t\t\tflag2 = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}[/code:2s1qde79]\n\nAlso I think based on the behavior that causes the looping error to begin with, Quest may actually be somewhat recursion friendly in this sort of situation. Keep in mind this is strictly guessing off what I think it's doing, but since Quest runs all the code outside the 'get input', and if that's where the current script ends, it should run through the script and finish it while the second instance is being called.\n\nSo unless heavy use of recursion and/or user silliness starts causing major issues I'm in favor of recursion. I feel like it's a lot cleaner and easier to read code wise when you understand what its doing",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>I guess that makes sense ---- hopefully then the player just doesn't type a bunch of misspellings lol!<br/><br/>So okay, I have the object:  <span style=\"font-style:italic;\">SwitchLoopResponse  </span>(in place where you had &quot;control&quot;)<br/>and an attribute on it called: <span style=\"font-style:italic;\">SwitchLoop</span><br/><br/>Now when I looked at the code on your demo, it had...<br/><br/>...<br/><br/>So applying it to my game would look like...?<br/><br/>switch (LCase(result)) {<br/>default {<br/>do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/><br/>Which I would have to apply to all the default &quot;switch&quot; scripts correct? And as an attribute script on my &quot;SwitchLoopResponse&quot; object?</blockquote><br/><br/>Yes you have that right as far as the script setup. Generally yes you want whatever the current input code to be the attribute getting called. Think of it this way, when you use 'do (ThisObject, &quot;ThisLoop&quot;)', you're basically saying, &quot;restart this script&quot;. So at any point where you want to loop or just reset the menu or whatnot, then you call your script attribute, which in this case will likely be as the 'default' case more often than not.<br/><br/>But yea that's also part of why I try to keep my control objects names fairly simple, less room for error and less typing when I reference them a lot.<br/><br/>Also you don't strictly need a control object for this sort of thing, I just like them for organization purposes. If you're running a bunch of these for conversations with npcs and such I'd probably give the script attribute to the relevant npc.<br/><br/><br/><br/>Somewhat offtopic stuff:<br/><br/>I actually thought of a way to use a while loop without breaking everything, tho it kinda gets to the point where I'm not sure it ends up actually being any better than using recursion. You can use a second flag to denote when the 'get input' should be checked, so that it doesn't try to run it till the current one is done.<br/>ie:<br/><pre><code>flag1 = true<br/>flag2 = true<br/><br/>while(flag1){<br/>\tif (flag2){<br/>\t\tflag2 = false<br/>\t\t//this makes sure the input doesn't repeat while the current one is active<br/>\t\tget input{<br/>\t\t\tswitch (LCase(result)){<br/>\t\t\t\tcase(1){<br/>\t\t\t\t\t//do stuff<br/>\t\t\t\t\t//loop ends<br/>\t\t\t\t\tflag1 = false<br/>\t\t\t\t}<br/>\t\t\t\tdefault {<br/>\t\t\t\t\t//redo input<br/>\t\t\t\t\tflag2 = true<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t}<br/>\t}<br/>}</code></pre><br/><br/>Also I think based on the behavior that causes the looping error to begin with, Quest may actually be somewhat recursion friendly in this sort of situation. Keep in mind this is strictly guessing off what I think it's doing, but since Quest runs all the code outside the 'get input', and if that's where the current script ends, it should run through the script and finish it while the second instance is being called.<br/><br/>So unless heavy use of recursion and/or user silliness starts causing major issues I'm in favor of recursion. I feel like it's a lot cleaner and easier to read code wise when you understand what its doing",
      "PostDate": "2015-12-04T18:15:10+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39202",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I tried to run the loop with all the current stuff: \n\nSwitchLoopResponse object, SwitchLoop Attribute with this script.\n\nswitch (LCase(result)) {\ndefault {\ndo (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n}\n}\n\nand it came up with this error.\n\nError running script&#058; Error compiling expression 'LCase(result)': Unknown object or variable 'result'\n\nSo...should I just remove the LCase part from the script since it wont matter what they type in for the loop?\n\nswitch () {\n  default {\n    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n  }\n}\n\nLike this?",
      "EditableFormat": "bbcode",
      "HTML": "So I tried to run the loop with all the current stuff: <br/><br/>SwitchLoopResponse object, SwitchLoop Attribute with this script.<br/><br/>switch (LCase(result)) {<br/>default {<br/>do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/><br/>and it came up with this error.<br/><br/>Error running script&#058; Error compiling expression 'LCase(result)': Unknown object or variable 'result'<br/><br/>So...should I just remove the LCase part from the script since it wont matter what they type in for the loop?<br/><br/>switch () {<br/>  default {<br/>    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>  }<br/>}<br/><br/>Like this?",
      "PostDate": "2015-12-04T18:59:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39206",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "the 'result' Variable came from the 'get input' Script~Function (it, along with the 'show menu' Script~Function, automatically sets your input or selection to the 'result' Variable), so that's why you're getting the error, as your 'switch' is trying to find the 'result' Variable, but it doesn't exist as you removed the 'get input'.\n\nhere's a sample game of the while loop in action:\n\n(obviously, there's infinite implementations~applications~designs of the while loop, this is just a single simple example)\n\n(hopefully, this works... laughs)\n\n[code:36x6jjk5]&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;while_loop_sample&quot;&gt;\n    &lt;gameid&gt;paste or generate your own&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;start type=&quot;script&quot;&gt;\n      fast_food_function\n    &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;object name=&quot;player&quot;&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;function name=&quot;fast_food_function&quot;&gt;\n    flag = false\n    while (!flag) {\n      msg (&quot;Fast Food Menu&#58;&quot;)\n      msg (&quot;(1) hamburger&quot;)\n      msg (&quot;(2) pizza&quot;)\n      msg (&quot;(3) chicken&quot;)\n      msg (&quot;(4) exit&quot;)\n      get input {\n        switch (result) {\n          case (1) {\n            msg (&quot;Here's your hamburger!&quot;)\n          }\n          case (2) {\n            msg (&quot;Here's your pizza!&quot;)\n          }\n          case (3) {\n            msg (&quot;Here's your chicken!&quot;)\n          }\n          case (4) {\n            msg (&quot;Have a good day, Sir/Ma'am&#46;&quot;)\n            flag = true\n          }\n          default {\n            msg (&quot;Wrong input, try again&quot;)\n          }\n        }\n      }\n    }\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:36x6jjk5]",
      "EditableFormat": "bbcode",
      "HTML": "the 'result' Variable came from the 'get input' Script~Function (it, along with the 'show menu' Script~Function, automatically sets your input or selection to the 'result' Variable), so that's why you're getting the error, as your 'switch' is trying to find the 'result' Variable, but it doesn't exist as you removed the 'get input'.<br/><br/>here's a sample game of the while loop in action:<br/><br/>(obviously, there's infinite implementations~applications~designs of the while loop, this is just a single simple example)<br/><br/>(hopefully, this works... laughs)<br/><br/><pre><code>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;while_loop_sample&quot;&gt;<br/>    &lt;gameid&gt;paste or generate your own&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>      fast_food_function<br/>    &lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;function name=&quot;fast_food_function&quot;&gt;<br/>    flag = false<br/>    while (!flag) {<br/>      msg (&quot;Fast Food Menu&#58;&quot;)<br/>      msg (&quot;(1) hamburger&quot;)<br/>      msg (&quot;(2) pizza&quot;)<br/>      msg (&quot;(3) chicken&quot;)<br/>      msg (&quot;(4) exit&quot;)<br/>      get input {<br/>        switch (result) {<br/>          case (1) {<br/>            msg (&quot;Here's your hamburger!&quot;)<br/>          }<br/>          case (2) {<br/>            msg (&quot;Here's your pizza!&quot;)<br/>          }<br/>          case (3) {<br/>            msg (&quot;Here's your chicken!&quot;)<br/>          }<br/>          case (4) {<br/>            msg (&quot;Have a good day, Sir/Ma'am&#46;&quot;)<br/>            flag = true<br/>          }<br/>          default {<br/>            msg (&quot;Wrong input, try again&quot;)<br/>          }<br/>        }<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2015-12-05T03:09:38+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39212",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "As HK said, 'result' doesn't exist until you use a 'get input', it's a hidden attribute that gets created to store the input. So without the 'get input' it won't work.\n\nAlso technically the 'LCase()' isn't needed for your script to work, but keep in mind if the player is typing, and you give them &quot;option1&quot; and they enter &quot;Option1&quot;, it won't match without the LCase() function.",
      "EditableFormat": "bbcode",
      "HTML": "As HK said, 'result' doesn't exist until you use a 'get input', it's a hidden attribute that gets created to store the input. So without the 'get input' it won't work.<br/><br/>Also technically the 'LCase()' isn't needed for your script to work, but keep in mind if the player is typing, and you give them &quot;option1&quot; and they enter &quot;Option1&quot;, it won't match without the LCase() function.",
      "PostDate": "2015-12-05T12:25:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39226",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So I tried removing the &quot;get input&quot;, result portion of the script ...making it...\n\nswitch {\n(SwitchLoopResponse, &quot;SwitchLoop&quot;)\n}\n\nwhich auto turns it into this...\n\nswitch (SwitchLoopResponse, &quot;SwitchLoop&quot;) {\n}\n\nand this error popped up. Sigh. Apparently getting a Switch to loop is impossible lol.\n\nError running script&#058; Error compiling expression 'SwitchLoopResponse, &quot;SwitchLoop&quot;': SyntaxError: Unexpected token &quot;,&quot;; expected one of &lt;EOF&gt;Line: 1, Column: 19",
      "EditableFormat": "bbcode",
      "HTML": "So I tried removing the &quot;get input&quot;, result portion of the script ...making it...<br/><br/>switch {<br/>(SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>}<br/><br/>which auto turns it into this...<br/><br/>switch (SwitchLoopResponse, &quot;SwitchLoop&quot;) {<br/>}<br/><br/>and this error popped up. Sigh. Apparently getting a Switch to loop is impossible lol.<br/><br/>Error running script&#058; Error compiling expression 'SwitchLoopResponse, &quot;SwitchLoop&quot;': SyntaxError: Unexpected token &quot;,&quot;; expected one of &lt;EOF&gt;Line: 1, Column: 19",
      "PostDate": "2015-12-05T23:42:48+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39228",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you're getting confused more and more I think unfortunately... as we're throwing all these explanations at you for why things are going wrong as you try on your own to get it to work, it's just confusing you worse and worse.\n\n-------------\n\nhere's it as recursion (this may not work as I'm not as knowledgeable with how to get the 'get input' and~or 'show menu' to work with recursion, as Tin and Pixie are), so just use this (assuming it works ~ if not, have Tin or Pixie craft the correct recursion design for you that works):\n\n(try to study and understand these 3 designs: 1A, 1B, and 2 -------- ask if you need help with understanding them!)\n\n1A. using an Attribute for recursive looping~repeating:\n\n[code:3d3m4qw3]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;SwitchLoopResponse&quot;&gt;\n  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;\n    msg (&quot;What is your personality?&quot;)\n    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)\n    get input {\n      switch (LCase(result)) {\n        case (&quot;sexy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)\n          player&#46;sexy = player&#46;sexy + 1\n        }\n        case (&quot;sympathy&quot;) {\n          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)\n          player&#46;sympathy = player&#46;sympathy + 1\n        }\n        case (&quot;sarcastic&quot;) {\n          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)\n          player&#46;sarcastic = player&#46;sarcastic + 1\n        }\n        case (&quot;snoopy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)\n          player&#46;snoopy = player&#46;snoopy + 1\n        }\n        case (&quot;serious&quot;) {\n          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)\n          player&#46;serious = player&#46;serious + 1\n        }\n        default {\n          msg (&quot;Wrong input, try again&#46;&quot;)\n          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:3d3m4qw3]\n\n1B. using an Attribute for recursive looping~repeating variation for hopefully better understanding:\n\n(hopefully you see how the 'game.start' is a Script Attribute, just as 'SwitchLoopReponse.SwitchLoop' is a Script Attribute, both able to be used to call upon themselves for recursive looping~repeating)\n\n(see the switch's default scripts, notice the difference in this 1B, vs 1A's switch's default scripts, ???)\n\n[code:3d3m4qw3]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;SwitchLoopResponse&quot;&gt;\n  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;\n    msg (&quot;What is your personality?&quot;)\n    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)\n    get input {\n      switch (LCase(result)) {\n        case (&quot;sexy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)\n          player&#46;sexy = player&#46;sexy + 1\n        }\n        case (&quot;sympathy&quot;) {\n          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)\n          player&#46;sympathy = player&#46;sympathy + 1\n        }\n        case (&quot;sarcastic&quot;) {\n          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)\n          player&#46;sarcastic = player&#46;sarcastic + 1\n        }\n        case (&quot;snoopy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)\n          player&#46;snoopy = player&#46;snoopy + 1\n        }\n        case (&quot;serious&quot;) {\n          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)\n          player&#46;serious = player&#46;serious + 1\n        }\n        default {\n          msg (&quot;Wrong input, try again&#46;&quot;)\n          do (game, &quot;start&quot;)\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:3d3m4qw3]\n\n2. using a Function call for recursive looping~repeating:\n\n[code:3d3m4qw3]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    SwitchLoopResponse\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;function name=&quot;SwitchLoopResponse&quot;&gt;\n  msg (&quot;What is your personality?&quot;)\n  msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)\n  get input {\n    switch (LCase(result)) {\n      case (&quot;sexy&quot;) {\n        msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)\n        player&#46;sexy = player&#46;sexy + 1\n      }\n      case (&quot;sympathy&quot;) {\n        msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)\n        player&#46;sympathy = player&#46;sympathy + 1\n      }\n      case (&quot;sarcastic&quot;) {\n        msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)\n        player&#46;sarcastic = player&#46;sarcastic + 1\n      }\n      case (&quot;snoopy&quot;) {\n        msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)\n        player&#46;snoopy = player&#46;snoopy + 1\n      }\n      case (&quot;serious&quot;) {\n        msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)\n        player&#46;serious = player&#46;serious + 1\n      }\n      default {\n        msg (&quot;Wrong input, try again&#46;&quot;)\n        SwitchLoopResponse\n      }\n    }\n  }\n&lt;/object&gt;[/code:3d3m4qw3]",
      "EditableFormat": "bbcode",
      "HTML": "you're getting confused more and more I think unfortunately... as we're throwing all these explanations at you for why things are going wrong as you try on your own to get it to work, it's just confusing you worse and worse.<br/><br/>-------------<br/><br/>here's it as recursion (this may not work as I'm not as knowledgeable with how to get the 'get input' and~or 'show menu' to work with recursion, as Tin and Pixie are), so just use this (assuming it works ~ if not, have Tin or Pixie craft the correct recursion design for you that works):<br/><br/>(try to study and understand these 3 designs: 1A, 1B, and 2 -------- ask if you need help with understanding them!)<br/><br/>1A. using an Attribute for recursive looping~repeating:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;SwitchLoopResponse&quot;&gt;<br/>  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;What is your personality?&quot;)<br/>    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)<br/>    get input {<br/>      switch (LCase(result)) {<br/>        case (&quot;sexy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sexy = player&#46;sexy + 1<br/>        }<br/>        case (&quot;sympathy&quot;) {<br/>          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sympathy = player&#46;sympathy + 1<br/>        }<br/>        case (&quot;sarcastic&quot;) {<br/>          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sarcastic = player&#46;sarcastic + 1<br/>        }<br/>        case (&quot;snoopy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)<br/>          player&#46;snoopy = player&#46;snoopy + 1<br/>        }<br/>        case (&quot;serious&quot;) {<br/>          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)<br/>          player&#46;serious = player&#46;serious + 1<br/>        }<br/>        default {<br/>          msg (&quot;Wrong input, try again&#46;&quot;)<br/>          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>1B. using an Attribute for recursive looping~repeating variation for hopefully better understanding:<br/><br/>(hopefully you see how the 'game.start' is a Script Attribute, just as 'SwitchLoopReponse.SwitchLoop' is a Script Attribute, both able to be used to call upon themselves for recursive looping~repeating)<br/><br/>(see the switch's default scripts, notice the difference in this 1B, vs 1A's switch's default scripts, ???)<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;SwitchLoopResponse&quot;&gt;<br/>  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;What is your personality?&quot;)<br/>    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)<br/>    get input {<br/>      switch (LCase(result)) {<br/>        case (&quot;sexy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sexy = player&#46;sexy + 1<br/>        }<br/>        case (&quot;sympathy&quot;) {<br/>          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sympathy = player&#46;sympathy + 1<br/>        }<br/>        case (&quot;sarcastic&quot;) {<br/>          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sarcastic = player&#46;sarcastic + 1<br/>        }<br/>        case (&quot;snoopy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)<br/>          player&#46;snoopy = player&#46;snoopy + 1<br/>        }<br/>        case (&quot;serious&quot;) {<br/>          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)<br/>          player&#46;serious = player&#46;serious + 1<br/>        }<br/>        default {<br/>          msg (&quot;Wrong input, try again&#46;&quot;)<br/>          do (game, &quot;start&quot;)<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>2. using a Function call for recursive looping~repeating:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    SwitchLoopResponse<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;function name=&quot;SwitchLoopResponse&quot;&gt;<br/>  msg (&quot;What is your personality?&quot;)<br/>  msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)<br/>  get input {<br/>    switch (LCase(result)) {<br/>      case (&quot;sexy&quot;) {<br/>        msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sexy = player&#46;sexy + 1<br/>      }<br/>      case (&quot;sympathy&quot;) {<br/>        msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sympathy = player&#46;sympathy + 1<br/>      }<br/>      case (&quot;sarcastic&quot;) {<br/>        msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)<br/>        player&#46;sarcastic = player&#46;sarcastic + 1<br/>      }<br/>      case (&quot;snoopy&quot;) {<br/>        msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)<br/>        player&#46;snoopy = player&#46;snoopy + 1<br/>      }<br/>      case (&quot;serious&quot;) {<br/>        msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)<br/>        player&#46;serious = player&#46;serious + 1<br/>      }<br/>      default {<br/>        msg (&quot;Wrong input, try again&#46;&quot;)<br/>        SwitchLoopResponse<br/>      }<br/>    }<br/>  }<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2015-12-06T03:01:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39258",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:3rzfiveh]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;SwitchLoopResponse&quot;&gt;\n  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;\n    msg (&quot;What is your personality?&quot;)\n    msg (&quot;Your choices are (type one of these in): sexy, sympathy, sarcastic, snoopy, or serious&quot;)\n    get input {\n      switch (LCase(result)) {\n        case (&quot;sexy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.&lt;br/&gt;&quot;)\n          player.sexy = player.sexy + 1\n        }\n        case (&quot;sympathy&quot;) {\n          msg (&quot;&lt;br/&gt;\\&quot;Err...that is, I'm not Rold, ma'am.\\&quot; you reply almost bashfully.&lt;br/&gt;&quot;)\n          player.sympathy = player.sympathy + 1\n        }\n        case (&quot;sarcastic&quot;) {\n          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.&lt;br/&gt;&quot;)\n          player.sarcastic = player.sarcastic + 1\n        }\n        case (&quot;snoopy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.&lt;br/&gt;&quot;)\n          player.snoopy = player.snoopy + 1\n        }\n        case (&quot;serious&quot;) {\n          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.&lt;br/&gt;&quot;)\n          player.serious = player.serious + 1\n        }\n        default {\n          msg (&quot;Wrong input, try again.&quot;)\n          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/quote:3rzfiveh]\n\nI get the three different ways and it seems like this one is what I've been trying to make happen. But before I mess with it, will this work for any &quot;switch&quot; switchloop? I ask because the &quot;answers&quot; above happen multiple times. The five personalities never change, but the responses made by those personalities does depending on what topic they are on\n.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;SwitchLoopResponse&quot;&gt;<br/>  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;What is your personality?&quot;)<br/>    msg (&quot;Your choices are (type one of these in): sexy, sympathy, sarcastic, snoopy, or serious&quot;)<br/>    get input {<br/>      switch (LCase(result)) {<br/>        case (&quot;sexy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man.” you reply in a naturally sultry voice.&lt;br/&gt;&quot;)<br/>          player.sexy = player.sexy + 1<br/>        }<br/>        case (&quot;sympathy&quot;) {<br/>          msg (&quot;&lt;br/&gt;\\&quot;Err...that is, I'm not Rold, ma'am.\\&quot; you reply almost bashfully.&lt;br/&gt;&quot;)<br/>          player.sympathy = player.sympathy + 1<br/>        }<br/>        case (&quot;sarcastic&quot;) {<br/>          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection.&lt;br/&gt;&quot;)<br/>          player.sarcastic = player.sarcastic + 1<br/>        }<br/>        case (&quot;snoopy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he. But maybe you’d like to tell me who YOU are and what I’m doing here.” you say with curiosity.&lt;br/&gt;&quot;)<br/>          player.snoopy = player.snoopy + 1<br/>        }<br/>        case (&quot;serious&quot;) {<br/>          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me. I’m not sure we’ve been properly introduced.” you say in a very serious tone.&lt;br/&gt;&quot;)<br/>          player.serious = player.serious + 1<br/>        }<br/>        default {<br/>          msg (&quot;Wrong input, try again.&quot;)<br/>          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</p></blockquote><br/><br/>I get the three different ways and it seems like this one is what I've been trying to make happen. But before I mess with it, will this work for any &quot;switch&quot; switchloop? I ask because the &quot;answers&quot; above happen multiple times. The five personalities never change, but the responses made by those personalities does depending on what topic they are on<br/>",
      "PostDate": "2015-12-07T01:06:51+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39259",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you have an OBJECT, which you just happen to name it as &quot;SwitchLoopResponse&quot;\n\nyou have a SCRIPT ATTRIBUTE of the OBJECT (see above), which you just happen to name it as 'SwitchLoop&quot;\n\nFor my variations, you also got the built-in SCRIPT ATTRIBUTE of the 'game' Game Object, named: 'start'\n\nwhat you're repeating is the SCRIPT ATTRIBUTE (SwitchLoopResponse.SwitchLoop or game.start).\n\nthe 'switch' within your SCRIPT ATTRIBUTE has nothing to do with the repeating (aside from its default having the call line of the SCRIPT ATTRIBUTE, which is what does the repeating). So: any incorrect input will cause it to repeat, for the person to try again to put in the correct input.\n\n-------\n\ndoes this make sense?\n\n-------\n\n[size=150:p9v8m4t9][b:p9v8m4t9]any of my variations~examples should work[/b:p9v8m4t9][/size:p9v8m4t9] (aside from any human mistakes I've made or overlooked in my typing of it, lol), though for your own game, if this stuff comes further in the game progression~play, then obviously you'd not be using my variations that use the 'game.start' stuff.",
      "EditableFormat": "bbcode",
      "HTML": "you have an OBJECT, which you just happen to name it as &quot;SwitchLoopResponse&quot;<br/><br/>you have a SCRIPT ATTRIBUTE of the OBJECT (see above), which you just happen to name it as 'SwitchLoop&quot;<br/><br/>For my variations, you also got the built-in SCRIPT ATTRIBUTE of the 'game' Game Object, named: 'start'<br/><br/>what you're repeating is the SCRIPT ATTRIBUTE (SwitchLoopResponse.SwitchLoop or game.start).<br/><br/>the 'switch' within your SCRIPT ATTRIBUTE has nothing to do with the repeating (aside from its default having the call line of the SCRIPT ATTRIBUTE, which is what does the repeating). So: any incorrect input will cause it to repeat, for the person to try again to put in the correct input.<br/><br/>-------<br/><br/>does this make sense?<br/><br/>-------<br/><br/><span style=\"font-size:150\"><span style=\"font-weight:bold;\">any of my variations~examples should work</span></span> (aside from any human mistakes I've made or overlooked in my typing of it, lol), though for your own game, if this stuff comes further in the game progression~play, then obviously you'd not be using my variations that use the 'game.start' stuff.",
      "PostDate": "2015-12-07T01:46:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39260",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[b:2vsnwuqc]&quot;I ask because the &quot;answers&quot; above happen multiple times. The five personalities never change, but the responses made by those personalities does depending on what topic they are on (neonayon)&quot;[/b:2vsnwuqc]\n\nwhat you've got, just sets your player's personality with a message about it. Everything is working as it should. (if you don't input a correct personality, then it'll repeat until you do input in a correct personality: it'll repeat until you get a personality set to your player)\n\nas for later in the game play, if you want different events~msgs~actions~etc to happen based upon your choosen~setted personality, that's completely separate... from just setting...\n\nHK edit: see below\n\n------------\n\nHK edit:\n\nerr... I've written~coded for you is a hybrid that can be used at the beginning of the game for raising one of your personality attributes and later for (say for example) when you level up, choosing which personality attribute to increase... as I never paid attention to what you wanted this for doing, lol.\n\nwhat did you particularly want this thing for? the beginning of the game's raising of your personality attribute(s) or later in the game play such as leveling up and raising your personality attributes ???",
      "EditableFormat": "bbcode",
      "HTML": "<span style=\"font-weight:bold;\">&quot;I ask because the &quot;answers&quot; above happen multiple times. The five personalities never change, but the responses made by those personalities does depending on what topic they are on (neonayon)&quot;</span><br/><br/>what you've got, just sets your player's personality with a message about it. Everything is working as it should. (if you don't input a correct personality, then it'll repeat until you do input in a correct personality: it'll repeat until you get a personality set to your player)<br/><br/>as for later in the game play, if you want different events~msgs~actions~etc to happen based upon your choosen~setted personality, that's completely separate... from just setting...<br/><br/>HK edit: see below<br/><br/>------------<br/><br/>HK edit:<br/><br/>err... I've written~coded for you is a hybrid that can be used at the beginning of the game for raising one of your personality attributes and later for (say for example) when you level up, choosing which personality attribute to increase... as I never paid attention to what you wanted this for doing, lol.<br/><br/>what did you particularly want this thing for? the beginning of the game's raising of your personality attribute(s) or later in the game play such as leveling up and raising your personality attributes ???",
      "PostDate": "2015-12-07T01:55:56+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39263",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Oh! No no, I just need this specific thing for the &quot;switch&quot; to loop in case of misspelling. The player chooses the personality at the beginning of the game. \n\nobject: Personality\nattribute: list\nplayer.object\nsexy: integer\nsympathy: integer\nsarcasm: integer\nsnoopy: integer\nserious: integer\nCreationCallBack Function\nIf Attribute ='s Personality &quot;oneofthepersonalities&quot;\n+5 toward personality <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n\n[quote:1j1q3ckz]does this make sense?[/quote:1j1q3ckz]\n\nYup! Gotcha.\n\n default {\nmsg (&quot;Wrong input, try again.&quot;)\ndo (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n}\n}\n}\n\nThe only thing is, last time I did this, it didn't work <!-- s:o --><img src=\"{SMILIES_PATH}/icon_surprised.gif\" alt=\":o\" title=\"Surprised\" /><!-- s:o --> \n\nthe only difference this time seems to be...\n\n&lt;game name=&quot;xxx&quot;&gt;\n&lt;start type=&quot;script&quot;&gt;\ndo (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n&lt;/start&gt;\n&lt;/game&gt;\n\nthis.",
      "EditableFormat": "bbcode",
      "HTML": "Oh! No no, I just need this specific thing for the &quot;switch&quot; to loop in case of misspelling. The player chooses the personality at the beginning of the game. <br/><br/>object: Personality<br/>attribute: list<br/>player.object<br/>sexy: integer<br/>sympathy: integer<br/>sarcasm: integer<br/>snoopy: integer<br/>serious: integer<br/>CreationCallBack Function<br/>If Attribute ='s Personality &quot;oneofthepersonalities&quot;<br/>+5 toward personality <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/><br/><blockquote><p>does this make sense?</p></blockquote><br/><br/>Yup! Gotcha.<br/><br/> default {<br/>msg (&quot;Wrong input, try again.&quot;)<br/>do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>}<br/>}<br/>}<br/><br/>The only thing is, last time I did this, it didn't work <!-- s:o --><img src=\"{SMILIES_PATH}/icon_surprised.gif\" alt=\":o\" title=\"Surprised\" /><!-- s:o --> <br/><br/>the only difference this time seems to be...<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>&lt;start type=&quot;script&quot;&gt;<br/>do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>&lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>this.",
      "PostDate": "2015-12-07T04:39:06+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39294",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "since you jsut want this for the beginning of the game, then use this:\n\n(you can adjust my &quot;improv~fudging&quot; msg scripts as I'm not you - I didn't know what you wanted for them lol, to make it better for what you want)\n\n(an option is to use an actual popup menu, via 'show menu', if you prefer this to the self made one via msg scripts I made in the example below ~ I can quickly adjust the code for this format design using a popup menu)\n\n(or, you could put your personality choices into a stringlist, and use the 'DisplayList(game.neon_personality_list, true)' to display your choices as a list of numbered choices for you ~ I can quickly adjust the code for this format design)\n\n[code:t0es0scy]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;start type=&quot;script&quot;&gt;\n    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n  &lt;/start&gt;\n&lt;/game&gt;\n\n&lt;object name=&quot;SwitchLoopResponse&quot;&gt;\n  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;\n    msg (&quot;What is your personality?&quot;)\n    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)\n    get input {\n      switch (LCase(result)) {\n        case (&quot;sexy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)\n          player&#46;sexy = player&#46;sexy + 1\n        }\n        case (&quot;sympathy&quot;) {\n          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)\n          player&#46;sympathy = player&#46;sympathy + 1\n        }\n        case (&quot;sarcastic&quot;) {\n          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)\n          player&#46;sarcastic = player&#46;sarcastic + 1\n        }\n        case (&quot;snoopy&quot;) {\n          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)\n          player&#46;snoopy = player&#46;snoopy + 1\n        }\n        case (&quot;serious&quot;) {\n          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)\n          player&#46;serious = player&#46;serious + 1\n        }\n        default {\n          msg (&quot;Wrong input, or you made a typo as you typed in your choice, please try again&#46;&quot;)\n          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)\n        }\n      }\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;[/code:t0es0scy]",
      "EditableFormat": "bbcode",
      "HTML": "since you jsut want this for the beginning of the game, then use this:<br/><br/>(you can adjust my &quot;improv~fudging&quot; msg scripts as I'm not you - I didn't know what you wanted for them lol, to make it better for what you want)<br/><br/>(an option is to use an actual popup menu, via 'show menu', if you prefer this to the self made one via msg scripts I made in the example below ~ I can quickly adjust the code for this format design using a popup menu)<br/><br/>(or, you could put your personality choices into a stringlist, and use the 'DisplayList(game.neon_personality_list, true)' to display your choices as a list of numbered choices for you ~ I can quickly adjust the code for this format design)<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;start type=&quot;script&quot;&gt;<br/>    do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>  &lt;/start&gt;<br/>&lt;/game&gt;<br/><br/>&lt;object name=&quot;SwitchLoopResponse&quot;&gt;<br/>  &lt;attr name=&quot;SwitchLoop&quot; type=&quot;script&quot;&gt;<br/>    msg (&quot;What is your personality?&quot;)<br/>    msg (&quot;Your choices are (type one of these in)&#58; sexy, sympathy, sarcastic, snoopy, or serious&quot;)<br/>    get input {<br/>      switch (LCase(result)) {<br/>        case (&quot;sexy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m not your husband, darling --- but I can see that he is a very lucky man&#46;” you reply in a naturally sultry voice&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sexy = player&#46;sexy + 1<br/>        }<br/>        case (&quot;sympathy&quot;) {<br/>          msg (&quot;&lt;br/&gt;\\&quot;Err&#46;&#46;&#46;that is, I'm not Rold, ma'am&#46;\\&quot; you reply almost bashfully&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sympathy = player&#46;sympathy + 1<br/>        }<br/>        case (&quot;sarcastic&quot;) {<br/>          msg (&quot;&lt;br/&gt;“Well, either you can disguise your voice very well, or you’re not the one who let me in here…” you say with a sarcastic inflection&#46;&lt;br/&gt;&quot;)<br/>          player&#46;sarcastic = player&#46;sarcastic + 1<br/>        }<br/>        case (&quot;snoopy&quot;) {<br/>          msg (&quot;&lt;br/&gt;“I’m sorry, I’m not he&#46; But maybe you’d like to tell me who YOU are and what I’m doing here&#46;” you say with curiosity&#46;&lt;br/&gt;&quot;)<br/>          player&#46;snoopy = player&#46;snoopy + 1<br/>        }<br/>        case (&quot;serious&quot;) {<br/>          msg (&quot;&lt;br/&gt;“At least have the curtesy of turning around before addressing me&#46; I’m not sure we’ve been properly introduced&#46;” you say in a very serious tone&#46;&lt;br/&gt;&quot;)<br/>          player&#46;serious = player&#46;serious + 1<br/>        }<br/>        default {<br/>          msg (&quot;Wrong input, or you made a typo as you typed in your choice, please try again&#46;&quot;)<br/>          do (SwitchLoopResponse, &quot;SwitchLoop&quot;)<br/>        }<br/>      }<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2015-12-08T00:32:25+00:00",
      "LastEditDate": null
    }
  ]
}
