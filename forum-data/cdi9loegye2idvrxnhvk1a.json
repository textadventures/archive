{
  "Topic": {
    "TopicId": "cdi9loegye2idvrxnhvk1a",
    "ForumId": "10",
    "Title": "echohyperlinks",
    "LastUpdated": "2019-01-08T10:51:44.9162219Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "8c71aba8-219e-47a9-bf51-f0a9a8c96da4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was just looking at how the metadata object works, and I saw this piece of code in `HandleCommand`:\r\n```\r\n        if (game.echocommand) {\r\n          if (metadata <> null and game.enablehyperlinks and game.echohyperlinks) {\r\n            foreach (key, metadata) {\r\n              if (EndsWith(command, key)) {\r\n                objectname = StringDictionaryItem(metadata, key)\r\n                object = GetObject(objectname)\r\n                if (object <> null) {\r\n                  msg (\"\")\r\n                  msg (\"&gt; \" + Left(command, LengthOf(command) - LengthOf(key)) + \"{object:\" + object.name + \"}\" )\r\n                  shownlink = true\r\n                }\r\n              }\r\n            }\r\n          }\r\n```\r\n\r\nThis looks a little ugly to me. It seems to imply that hyperlinks in echoed commands only appear at the end. This feels like it would seem a little odd from the player's POV at times. For example, if I try to use an object and it asks me what to use it on, I would expect to see both objects as hyperlinks in the echoed command.\r\n\r\nThis got my attention because I've got a system in mind for revamping the link/verb system, just overriding javascript. But as it's in a core function, I can't override this bit on the web version. Could always turn it off, of course, but then finding the echoed commands is still a little annoying.\r\n\r\nI'm not going to suggest modifications to a core thing that would only work with the systems I'm planning on building. But… does anyone else think it would be a good idea to have a **class** for echoed commands? Would mean that it's easier for a user who wants echoed commands to be a different colour from other output text (just add a CSS rule), as well as adding a hook that's useful for anyone playing with the javascript.",
      "EditableFormat": "markdown",
      "HTML": "<p>I was just looking at how the metadata object works, and I saw this piece of code in <code>HandleCommand</code>:</p>\n<pre><code>        if (game.echocommand) {\n          if (metadata &lt;&gt; null and game.enablehyperlinks and game.echohyperlinks) {\n            foreach (key, metadata) {\n              if (EndsWith(command, key)) {\n                objectname = StringDictionaryItem(metadata, key)\n                object = GetObject(objectname)\n                if (object &lt;&gt; null) {\n                  msg (\"\")\n                  msg (\"&amp;gt; \" + Left(command, LengthOf(command) - LengthOf(key)) + \"{object:\" + object.name + \"}\" )\n                  shownlink = true\n                }\n              }\n            }\n          }\n</code></pre>\n<p>This looks a little ugly to me. It seems to imply that hyperlinks in echoed commands only appear at the end. This feels like it would seem a little odd from the player's POV at times. For example, if I try to use an object and it asks me what to use it on, I would expect to see both objects as hyperlinks in the echoed command.</p>\n<p>This got my attention because I've got a system in mind for revamping the link/verb system, just overriding javascript. But as it's in a core function, I can't override this bit on the web version. Could always turn it off, of course, but then finding the echoed commands is still a little annoying.</p>\n<p>I'm not going to suggest modifications to a core thing that would only work with the systems I'm planning on building. But… does anyone else think it would be a good idea to have a <strong>class</strong> for echoed commands? Would mean that it's easier for a user who wants echoed commands to be a different colour from other output text (just add a CSS rule), as well as adding a hook that's useful for anyone playing with the javascript.</p>\n\n",
      "PostDate": "2019-01-08T10:51:44.9162219Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
