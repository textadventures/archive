{
  "Topic": {
    "TopicId": "tjgvpbo0auyxsmmbchwqsw",
    "ForumId": "10",
    "Title": "Placing Children of Surfaces in Scope During TAKE ALL  (How can we do this?)",
    "LastUpdated": "2018-05-21T02:37:36.2463698Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "4dabe036-5ade-40d6-9809-d4ac159fe3a3",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI have a table, which is a surface.\r\n\r\nThere are items on the table, and they are not initially hidden.\r\n\r\nIs there something simple I can put in the scope field of the 'take' command to make it check surfaces' children during TAKE ALL?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I have a table, which is a surface.</p>\n<p>There are items on the table, and they are not initially hidden.</p>\n<p>Is there something simple I can put in the scope field of the 'take' command to make it check surfaces' children during TAKE ALL?</p>\n\n",
      "PostDate": "2018-05-21T02:37:36.2463698Z",
      "LastEditDate": "2018-05-21T02:38:36.9833496Z",
      "link": null
    },
    {
      "PostId": "bd3cf5f4-a027-43e9-9075-5995e6bc982d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I previously suggested making a separate \"take all\" command that could do this. But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.\r\n\r\nSuggested pseudocode for the 'all' case (either in a \"take all\" command, or modifying CoreParser to allow this for all commands):\r\n```\r\nscope = GetScope (command, whatever the arguments are)\r\ntried = NewObjectList()\r\nwhile (ListCount(scope) > 0) {\r\n  do (command, \"script\", {variable = scope[0]} )\r\n  list add (tried, scope[0])\r\n  scope = ListExclude (GetScope(blah blah), tried)\r\n}\r\n```\r\nBasically, keep picking an object that's still in scope but hasn't been tried yet, and running the command on it. As long as the scope list contains the surface before its children, it should work. (and that seems to be the case for scope functions that are based around GetAllChildObjects)\r\n\r\nThis can't be done using the current \"multiple\" and \"multipleobjects\" structure; but that seems inelegant, redundant, and inefficient in any case. Which is why I'm suggesting either a dedicated \"take all\" command, or changing the way CoreParser deals with \"all\".\r\n(A command could also have a couple of boolean attributes to control whether new objects *added* to scope are handled. For example, if you type \"open all\", and a box turns out to contain a smaller box, should the inner box be opened?)",
      "EditableFormat": "markdown",
      "HTML": "<p>I previously suggested making a separate \"take all\" command that could do this. But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.</p>\n<p>Suggested pseudocode for the 'all' case (either in a \"take all\" command, or modifying CoreParser to allow this for all commands):</p>\n<pre><code>scope = GetScope (command, whatever the arguments are)\ntried = NewObjectList()\nwhile (ListCount(scope) &gt; 0) {\n  do (command, \"script\", {variable = scope[0]} )\n  list add (tried, scope[0])\n  scope = ListExclude (GetScope(blah blah), tried)\n}\n</code></pre>\n<p>Basically, keep picking an object that's still in scope but hasn't been tried yet, and running the command on it. As long as the scope list contains the surface before its children, it should work. (and that seems to be the case for scope functions that are based around GetAllChildObjects)</p>\n<p>This can't be done using the current \"multiple\" and \"multipleobjects\" structure; but that seems inelegant, redundant, and inefficient in any case. Which is why I'm suggesting either a dedicated \"take all\" command, or changing the way CoreParser deals with \"all\".<br>\n(A command could also have a couple of boolean attributes to control whether new objects <em>added</em> to scope are handled. For example, if you type \"open all\", and a box turns out to contain a smaller box, should the inner box be opened?)</p>\n\n",
      "PostDate": "2018-05-21T09:26:54.1649999Z",
      "LastEditDate": "2018-05-21T09:37:01.2952079Z",
      "link": null
    },
    {
      "PostId": "76fbea37-5343-45f3-afc7-b0ca68b02270",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there something simple I can put in the scope field of the 'take' command to make it check surfaces' children during TAKE ALL?\r\n\r\nI should have responded to this first :p\r\nNot in the \"scope\" field, because that's *ignored* by the parser when using \"ALL\". Instead, we have the `multiple` script and/or `multipleobjects` delegate, which do almost the same thing as 'scope' but in a less efficient way, and are only used when the player enters \"ALL\".",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there something simple I can put in the scope field of the 'take' command to make it check surfaces' children during TAKE ALL?</p>\n</blockquote>\n<p>I should have responded to this first :p<br>\nNot in the \"scope\" field, because that's <em>ignored</em> by the parser when using \"ALL\". Instead, we have the <code>multiple</code> script and/or <code>multipleobjects</code> delegate, which do almost the same thing as 'scope' but in a less efficient way, and are only used when the player enters \"ALL\".</p>\n\n",
      "PostDate": "2018-05-21T09:44:02.1796676Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "235f5794-3d96-4c67-853d-79012ef91f80",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The scope field is not used with ALL; it uses the \"multipleobjects\" script on the command instead. Just tested it (which has prompted a minor update), but for me it does indeed check surfaces (and open conainers).",
      "EditableFormat": "markdown",
      "HTML": "<p>The scope field is not used with ALL; it uses the \"multipleobjects\" script on the command instead. Just tested it (which has prompted a minor update), but for me it does indeed check surfaces (and open conainers).</p>\n\n",
      "PostDate": "2018-05-21T09:46:20.5535165Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a4edf285-db70-448c-8dc5-47417665460f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I previously suggested making a separate \"take all\" command that could do this. But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.\r\n\r\nAgreed, but I think for a later release. This would potentially break any game that modified TAKE, etc.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I previously suggested making a separate \"take all\" command that could do this. But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.</p>\n</blockquote>\n<p>Agreed, but I think for a later release. This would potentially break any game that modified TAKE, etc.</p>\n\n",
      "PostDate": "2018-05-21T09:53:09.0709287Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d732f010-38c8-42a2-8c36-d7f6d5fca82b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> This would potentially break any game that modified TAKE, etc.\r\n\r\nI was thinking that if a command has multiple/multipleobjects, they are treated as they are now. If not, object-lookups for \"ALL\" are deferred until the command is actually run.\r\n\r\nThat way, modified 'take' commands that include those attributes will continue to work as they do now; while the newer version of the command can omit them and trust the parser to handle 'all' sanely.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>This would potentially break any game that modified TAKE, etc.</p>\n</blockquote>\n<p>I was thinking that if a command has multiple/multipleobjects, they are treated as they are now. If not, object-lookups for \"ALL\" are deferred until the command is actually run.</p>\n<p>That way, modified 'take' commands that include those attributes will continue to work as they do now; while the newer version of the command can omit them and trust the parser to handle 'all' sanely.</p>\n\n",
      "PostDate": "2018-05-21T10:04:18.3614745Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d8077348-0127-41b8-9b90-cf4d76af597e",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I previously suggested making a separate \"take all\" command that could do this\r\n\r\nI thought I remember that, but couldn't find it for the life of me.\r\n\r\n---\r\n>  But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.\r\n\r\nMaybe it's good that I couldn't find it.\r\n\r\n---\r\n> Not in the \"scope\" field, because that's ignored by the parser when using \"ALL\". Instead, we have the multiple script and/or multipleobjects delegate, which do almost the same thing as 'scope' but in a less efficient way, and are only used when the player enters \"ALL\".\r\n\r\nI just learned something!  (Woot, woot!!!)\r\n\r\n---\r\n> for me it does indeed check surfaces (and open conainers)\r\n\r\nI tried in 5.7 and 5.8.  It tries to take the surfaces and the containers in the room, but it doesn't try to take the things on the surfaces or the things in the containers.\r\n\r\nNow, I don't think it should try to take the things in containers, but I do think it should try to take the stuff on surfaces.\r\n\r\n```\r\nYou are in a room.\r\nYou can see a table (on which there is a bowl (containing an orange), a lazy susan and a hat) and a Man Purse.\r\n\r\n> take all\r\ntable: It's too big to take.\r\nMan Purse: You pick it up.\r\n\r\n> x table\r\nAn oak dining table.\r\n\r\nOn it, you see a bowl (containing an orange), a lazy susan and a hat.\r\n\r\n> take all\r\ntable: It's too big to take.\r\n```\r\n\r\n\r\n---\r\n> This would potentially break any game that modified TAKE, etc.\r\n\r\nI've already been through this twice.  I decided it's my fault for procrastinating.  I shouldn't have a work-in-progress that's still in progress through 3 versions of Quest, anyway...\r\n\r\nPlus, no one in their right mind would update their creation software until they finished up any incomplete projects, unless they were fully prepared to revise their code accordingly; right?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I previously suggested making a separate \"take all\" command that could do this</p>\n</blockquote>\n<p>I thought I remember that, but couldn't find it for the life of me.</p>\n<hr>\n<blockquote>\n<p>But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.</p>\n</blockquote>\n<p>Maybe it's good that I couldn't find it.</p>\n<hr>\n<blockquote>\n<p>Not in the \"scope\" field, because that's ignored by the parser when using \"ALL\". Instead, we have the multiple script and/or multipleobjects delegate, which do almost the same thing as 'scope' but in a less efficient way, and are only used when the player enters \"ALL\".</p>\n</blockquote>\n<p>I just learned something!  (Woot, woot!!!)</p>\n<hr>\n<blockquote>\n<p>for me it does indeed check surfaces (and open conainers)</p>\n</blockquote>\n<p>I tried in 5.7 and 5.8.  It tries to take the surfaces and the containers in the room, but it doesn't try to take the things on the surfaces or the things in the containers.</p>\n<p>Now, I don't think it should try to take the things in containers, but I do think it should try to take the stuff on surfaces.</p>\n<pre><code>You are in a room.\nYou can see a table (on which there is a bowl (containing an orange), a lazy susan and a hat) and a Man Purse.\n\n&gt; take all\ntable: It's too big to take.\nMan Purse: You pick it up.\n\n&gt; x table\nAn oak dining table.\n\nOn it, you see a bowl (containing an orange), a lazy susan and a hat.\n\n&gt; take all\ntable: It's too big to take.\n</code></pre>\n<hr>\n<blockquote>\n<p>This would potentially break any game that modified TAKE, etc.</p>\n</blockquote>\n<p>I've already been through this twice.  I decided it's my fault for procrastinating.  I shouldn't have a work-in-progress that's still in progress through 3 versions of Quest, anyway...</p>\n<p>Plus, no one in their right mind would update their creation software until they finished up any incomplete projects, unless they were fully prepared to revise their code accordingly; right?</p>\n\n",
      "PostDate": "2018-05-21T11:22:32.6526703Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ee3a389d-7cd0-425c-b022-88f30be7c577",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Plus, no one in their right mind would update their creation software until they finished up any incomplete projects, unless they were fully prepared to revise their code accordingly; right?\r\n\r\nI am sure people do just that - and in fairness Quest tells them to update, with no warning.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Plus, no one in their right mind would update their creation software until they finished up any incomplete projects, unless they were fully prepared to revise their code accordingly; right?</p>\n</blockquote>\n<p>I am sure people do just that - and in fairness Quest tells them to update, with no warning.</p>\n\n",
      "PostDate": "2018-05-21T12:39:49.1789916Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "51298e1d-b241-461c-a868-e0d649ce89b9",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I am sure people do just that - and in fairness Quest tells them to update, with no warning.\r\n\r\nThat was an attempt at self-deprecating humor.\r\n\r\nI am one of those people.  ...or I was.  I learned after the second time.\r\n\r\n...but I would have had no issues at all if I hadn't modified default commands, either.\r\n\r\nWell, that's not true.   The wearables addition messed me up a little bit, and there were no mods involved that time.  But the wearables stuff is super-awesome and definitely needs to be built in, so I don't view this one as a big deal.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I am sure people do just that - and in fairness Quest tells them to update, with no warning.</p>\n</blockquote>\n<p>That was an attempt at self-deprecating humor.</p>\n<p>I am one of those people.  ...or I was.  I learned after the second time.</p>\n<p>...but I would have had no issues at all if I hadn't modified default commands, either.</p>\n<p>Well, that's not true.   The wearables addition messed me up a little bit, and there were no mods involved that time.  But the wearables stuff is super-awesome and definitely needs to be built in, so I don't view this one as a big deal.</p>\n\n",
      "PostDate": "2018-05-21T13:24:04.1266917Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "527866be-9fd0-4b12-80fc-f4a5730b29f6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">> But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.\r\n>\r\n> Maybe it's good that I couldn't find it.\r\n\r\nI think the \"take all\" command is a decent stopgap measure. But a *lot* of the code in it is general enough that it could be incorporated into the core parser, to work with all commands that don't already have \"special\" handling of it.\r\n\r\nFor \"take all\", off the top of my head I think I had something like:\r\n```\r\nto_take = GetDirectChildren(game.pov.parent)\r\nfound = false\r\nwhile (ListCount(to_take) > 0) {\r\n  obj = ListItem(to_take, 0)\r\n  list remove (to_take, obj)\r\n\r\n  // Skip scenery, NPCs, and objects that have moved out of scope\r\n  // In the case of a magic item that teleports you when you pick it up,\r\n  //    this also stops \"all\" attempting to take things you can no longer see\r\n  if (ListContains (ScopeVisibleNotHeldNotScenery(), obj) and not (DoesInherit(obj, \"npc_type\") or obj = game.pov)) {\r\n\r\n    // There could also be clauses here so that it skips over things like trees and reflections\r\n    // I think \"not_all\" is a bit heavy handed in some cases; and it would be nice to have a per-command equivalent\r\n    // Personally, I think when the player types \"get all\", they mean \"get all things that look movable\";\r\n    //   which (if you use them) could mean skipping objects that don't have 'take' in their displayverbs\r\n    if (not GetBoolean(obj, \"not_all\")) {\r\n      found = true\r\n      DoTake (obj, true)\r\n    }\r\n\r\n    // If it's got not_all or we failed to take it, try taking things off it\r\n    if (ListContains (ScopeReachableNotHeld(), obj)) {\r\n      to_take = ListCombine (to_take, GetDirectChildren(obj))\r\n    }\r\n  }\r\n}\r\nif (!found) {\r\n  msg (\"[NothingToTake]\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<blockquote>\n<p>But now I've looked at how \"all\" is implemented, I'm thinking that it could be done so much better.</p>\n</blockquote>\n<p>Maybe it's good that I couldn't find it.</p>\n</blockquote>\n<p>I think the \"take all\" command is a decent stopgap measure. But a <em>lot</em> of the code in it is general enough that it could be incorporated into the core parser, to work with all commands that don't already have \"special\" handling of it.</p>\n<p>For \"take all\", off the top of my head I think I had something like:</p>\n<pre><code>to_take = GetDirectChildren(game.pov.parent)\nfound = false\nwhile (ListCount(to_take) &gt; 0) {\n  obj = ListItem(to_take, 0)\n  list remove (to_take, obj)\n\n  // Skip scenery, NPCs, and objects that have moved out of scope\n  // In the case of a magic item that teleports you when you pick it up,\n  //    this also stops \"all\" attempting to take things you can no longer see\n  if (ListContains (ScopeVisibleNotHeldNotScenery(), obj) and not (DoesInherit(obj, \"npc_type\") or obj = game.pov)) {\n\n    // There could also be clauses here so that it skips over things like trees and reflections\n    // I think \"not_all\" is a bit heavy handed in some cases; and it would be nice to have a per-command equivalent\n    // Personally, I think when the player types \"get all\", they mean \"get all things that look movable\";\n    //   which (if you use them) could mean skipping objects that don't have 'take' in their displayverbs\n    if (not GetBoolean(obj, \"not_all\")) {\n      found = true\n      DoTake (obj, true)\n    }\n\n    // If it's got not_all or we failed to take it, try taking things off it\n    if (ListContains (ScopeReachableNotHeld(), obj)) {\n      to_take = ListCombine (to_take, GetDirectChildren(obj))\n    }\n  }\n}\nif (!found) {\n  msg (\"[NothingToTake]\")\n}\n</code></pre>\n\n",
      "PostDate": "2018-05-21T13:26:38.2198387Z",
      "LastEditDate": "2018-05-21T13:28:55.529941Z",
      "link": null
    },
    {
      "PostId": "4b38188d-c5f8-47aa-9931-58844e483d9f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I tried in 5.7 and 5.8. It tries to take the surfaces and the containers in the room, but it doesn't try to take the things on the surfaces or the things in the containers.\r\n\r\nSo what happens with this example game for you? For me, I get the ornament, and the ball if the box is open.\r\n```\r\n<!--Saved by Quest 5.8.6715.16057-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"GET ALL test\">\r\n    <gameid>78311507-d42b-45c8-8749-2074ba0e90a1</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description>The room is big.</description>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"Joanna\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"namedfemale\" />\r\n      <inherit name=\"container_closed\" />\r\n      <feature_container />\r\n      <open type=\"boolean\">false</open>\r\n      <contentsprefix>holding</contentsprefix>\r\n      <transparent />\r\n      <look>Joanna is quite pretty.</look>\r\n    </object>\r\n    <object name=\"Teapot\">\r\n      <inherit name=\"editor_object\" />\r\n      <take />\r\n      <look>It is blue.</look>\r\n      <scenery />\r\n    </object>\r\n    <object name=\"box\">\r\n      <inherit name=\"container_open\" />\r\n      <feature_container />\r\n      <look>A box, made of cardboard.</look>\r\n      <take />\r\n      <object name=\"ball\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n        <object name=\"nail\">\r\n          <inherit name=\"editor_object\" />\r\n        </object>\r\n      </object>\r\n    </object>\r\n    <object name=\"table\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"surface\" />\r\n      <feature_container />\r\n      <object name=\"ornament\">\r\n        <inherit name=\"editor_object\" />\r\n        <take />\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I tried in 5.7 and 5.8. It tries to take the surfaces and the containers in the room, but it doesn't try to take the things on the surfaces or the things in the containers.</p>\n</blockquote>\n<p>So what happens with this example game for you? For me, I get the ornament, and the ball if the box is open.</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6715.16057--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"GET ALL test\"&gt;\n    &lt;gameid&gt;78311507-d42b-45c8-8749-2074ba0e90a1&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description&gt;The room is big.&lt;/description&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Joanna\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"namedfemale\" /&gt;\n      &lt;inherit name=\"container_closed\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;open type=\"boolean\"&gt;false&lt;/open&gt;\n      &lt;contentsprefix&gt;holding&lt;/contentsprefix&gt;\n      &lt;transparent /&gt;\n      &lt;look&gt;Joanna is quite pretty.&lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=\"Teapot\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;take /&gt;\n      &lt;look&gt;It is blue.&lt;/look&gt;\n      &lt;scenery /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"box\"&gt;\n      &lt;inherit name=\"container_open\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;look&gt;A box, made of cardboard.&lt;/look&gt;\n      &lt;take /&gt;\n      &lt;object name=\"ball\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n        &lt;object name=\"nail\"&gt;\n          &lt;inherit name=\"editor_object\" /&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;object name=\"table\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"surface\" /&gt;\n      &lt;feature_container /&gt;\n      &lt;object name=\"ornament\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;take /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-05-21T13:46:31.4441317Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "53363fbd-6cab-44be-bddf-44e3a3ab3b52",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "In Quest 5.8 beta 4\r\n\r\n<a href=\"https://user-images.githubusercontent.com/30656341/40312272-044c734a-5cd8-11e8-9d88-e1a34a4aa964.gif\"><img loop src=\"https://user-images.githubusercontent.com/30656341/40312272-044c734a-5cd8-11e8-9d88-e1a34a4aa964.gif\"/></a>",
      "EditableFormat": "markdown",
      "HTML": "<p>In Quest 5.8 beta 4</p>\n<p><a href=\"https://user-images.githubusercontent.com/30656341/40312272-044c734a-5cd8-11e8-9d88-e1a34a4aa964.gif\"><img src=\"https://user-images.githubusercontent.com/30656341/40312272-044c734a-5cd8-11e8-9d88-e1a34a4aa964.gif\"></a></p>\n\n",
      "PostDate": "2018-05-21T14:19:26.3352399Z",
      "LastEditDate": "2018-05-21T14:20:50.952027Z",
      "link": null
    },
    {
      "PostId": "a8f81d66-5e63-47e5-b90b-e4c42786087f",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "### OFF-TOPIC (sort of)\r\n\r\nIt's not a good idea to put objects with ```visible``` set to false in the player's inventory either.  (I can't remember why I did this.  It seems like I was toying around with NO TEA and TEA or something.)\r\n\r\n```\r\n<!--Saved by Quest 5.8.6708.15638-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Drop ALL\">\r\n    <gameid>f32db144-c83f-4c75-be3b-1d9559acf615</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"thing\">\r\n        <inherit name=\"editor_object\" />\r\n        <visible type=\"boolean\">false</visible>\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/40323259-79f326f8-5cfa-11e8-8948-34e3d552e149.png)\r\n\r\n---\r\nWhat if the player was carrying something which wasn't visible AND something flagged as scenery, you ask?\r\n\r\n```\r\n<!--Saved by Quest 5.8.6708.15638-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Drop ALL\">\r\n    <gameid>f32db144-c83f-4c75-be3b-1d9559acf615</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2018</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <object name=\"thing\">\r\n        <inherit name=\"editor_object\" />\r\n        <visible type=\"boolean\">false</visible>\r\n      </object>\r\n      <object name=\"thing2\">\r\n        <inherit name=\"editor_object\" />\r\n        <scenery />\r\n      </object>\r\n    </object>\r\n  </object>\r\n</asl>\r\n```\r\n\r\n---\r\n![image](https://user-images.githubusercontent.com/30656341/40323402-ddeb3f2e-5cfa-11e8-81c1-c48ff6a97f46.png)\r\n\r\n---\r\nNOTE:\r\n\r\nI'm calling SHENANIGANS!\r\n\r\nThere's spam all over the forum this morning, but I had to switch to this account because K.V. has made too many posts!  \"Whoa, there!!!\"\r\n\r\nI was just trying to help out as much as I could! Gee whiz!!!",
      "EditableFormat": "markdown",
      "HTML": "<h3>OFF-TOPIC (sort of)</h3>\n<p>It's not a good idea to put objects with <code>visible</code> set to false in the player's inventory either.  (I can't remember why I did this.  It seems like I was toying around with NO TEA and TEA or something.)</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6708.15638--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Drop ALL\"&gt;\n    &lt;gameid&gt;f32db144-c83f-4c75-be3b-1d9559acf615&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"thing\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40323259-79f326f8-5cfa-11e8-8948-34e3d552e149.png\" alt=\"image\"></p>\n<hr>\n<p>What if the player was carrying something which wasn't visible AND something flagged as scenery, you ask?</p>\n<pre><code>&lt;!--Saved by Quest 5.8.6708.15638--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Drop ALL\"&gt;\n    &lt;gameid&gt;f32db144-c83f-4c75-be3b-1d9559acf615&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;object name=\"thing\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;visible type=\"boolean\"&gt;false&lt;/visible&gt;\n      &lt;/object&gt;\n      &lt;object name=\"thing2\"&gt;\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;scenery /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/40323402-ddeb3f2e-5cfa-11e8-81c1-c48ff6a97f46.png\" alt=\"image\"></p>\n<hr>\n<p>NOTE:</p>\n<p>I'm calling SHENANIGANS!</p>\n<p>There's spam all over the forum this morning, but I had to switch to this account because K.V. has made too many posts!  \"Whoa, there!!!\"</p>\n<p>I was just trying to help out as much as I could! Gee whiz!!!</p>\n\n",
      "PostDate": "2018-05-21T18:33:05.5734456Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b0410487-e598-4ee0-a5f2-c6988a5ff355",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "... looks like someone's made an error in `drop.multipleobjects`.",
      "EditableFormat": "markdown",
      "HTML": "<p>... looks like someone's made an error in <code>drop.multipleobjects</code>.</p>\n\n",
      "PostDate": "2018-05-21T20:20:30.7520171Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e67ae6f3-59dc-40e6-af17-ff193e1e5a7a",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep!\r\n\r\nI think it all goes back to the same concept:  the player will only be carrying visible objects which aren't scenery.  Therefore, what's the point in checking for either in the inventory pane or when dropping all?",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep!</p>\n<p>I think it all goes back to the same concept:  the player will only be carrying visible objects which aren't scenery.  Therefore, what's the point in checking for either in the inventory pane or when dropping all?</p>\n\n",
      "PostDate": "2018-05-21T22:16:07.6337181Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
