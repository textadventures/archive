{
  "Topic": {
    "TopicId": "uwu5srurykm4mczcxmd7_a",
    "ForumId": "10",
    "Title": "How to create timers in a gamebook",
    "LastUpdated": "2020-02-09T21:44:53.4385894Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "5401e1ed-c342-4598-a60b-32ec173bbaf5",
      "UserId": 320882,
      "Username": "RoyalRB",
      "AvatarUrl": "https://i.imgur.com/nDlnSJ5b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm trying to make a simple timer that does the following:\r\n\r\n-On entering a page, the timer will be activated. Let's say 10 seconds.\r\n-When the timer ends, the player will be sent to another page, where the timer could be set and activated again. \r\n-The timer should be flexible in the amount of seconds. This means page 1 could have 10 seconds, then page 2 could have 5 seconds.\r\n\r\nI tried importing the timer library, but I don't really understand how it works. Could someone explain me how to achieve this kind of timer result? ",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm trying to make a simple timer that does the following:</p>\n<p>-On entering a page, the timer will be activated. Let's say 10 seconds.<br>\n-When the timer ends, the player will be sent to another page, where the timer could be set and activated again.<br>\n-The timer should be flexible in the amount of seconds. This means page 1 could have 10 seconds, then page 2 could have 5 seconds.</p>\n<p>I tried importing the timer library, but I don't really understand how it works. Could someone explain me how to achieve this kind of timer result?</p>\n\n",
      "PostDate": "2020-02-09T21:44:53.4385894Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "82e1ab0b-f693-401b-b475-a52106b75229",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not entirely sure; I believe there were some issues with timers in gamebook mode, but I'm not sure of the details.\r\n\r\nHowever, there's nothing to stop you using javascript timers:\r\n\r\n```\r\nJS.eval(\"setTimeout( function() { sendCommand('page12'); }, 5000);\")\r\n```\r\nWill send the player to page12 after 5 seconds (times are in milliseconds)\r\n\r\nIf you want to be able to cancel it, that might be a little more work. Something like:\r\n\r\n```\r\nJS.eval (\"window.timedPage = setTimeout( function() { sendCommand('page12'); }, 5000);\")\r\n```\r\nto set a timeout, and\r\n```\r\nJS.eval(\"if (window.timedPage) { clearTimeout (window.timedPage); }\")\r\n```\r\nto cancel the one from the previous page. So if you have multiple pages that set a timer, you'd want each of them to cancel the one from the previous page before setting its own.\r\n\r\nNote that in gamebook mode, if the current page has a link to the page the timeout is sending you to, it may print the text of that link as if the player had clicked on it.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not entirely sure; I believe there were some issues with timers in gamebook mode, but I'm not sure of the details.</p>\n<p>However, there's nothing to stop you using javascript timers:</p>\n<pre><code>JS.eval(\"setTimeout( function() { sendCommand('page12'); }, 5000);\")\n</code></pre>\n<p>Will send the player to page12 after 5 seconds (times are in milliseconds)</p>\n<p>If you want to be able to cancel it, that might be a little more work. Something like:</p>\n<pre><code>JS.eval (\"window.timedPage = setTimeout( function() { sendCommand('page12'); }, 5000);\")\n</code></pre>\n<p>to set a timeout, and</p>\n<pre><code>JS.eval(\"if (window.timedPage) { clearTimeout (window.timedPage); }\")\n</code></pre>\n<p>to cancel the one from the previous page. So if you have multiple pages that set a timer, you'd want each of them to cancel the one from the previous page before setting its own.</p>\n<p>Note that in gamebook mode, if the current page has a link to the page the timeout is sending you to, it may print the text of that link as if the player had clicked on it.</p>\n\n",
      "PostDate": "2020-02-09T22:37:33.040324Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
