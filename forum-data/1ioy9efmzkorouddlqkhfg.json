{
  "Topic": {
    "TopicId": "1ioy9efmzkorouddlqkhfg",
    "ForumId": "10",
    "Title": "Random Monsters in Turn Based Events",
    "LastUpdated": "2017-07-05T11:35:29.245683Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "cff9855f-ffc4-4ce4-b71f-a1619f6d09db",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya all, \r\n\r\nI'm currently starting out with Pixie's combat library, although I haven't figured everything out and gone all the way through. Right now, I've just been setting up an example monster and have been wondering about randomness. For a starter, I want to be able to generate/respawn monsters as I go. \r\n\r\nI don't plan on the player ever having to fight more than one monster at once, so a Goblin, a Group of Goblins and a Horde of Goblins would all be one object with different stats. My general idea is that there are safe areas, i.e 'The Inside of your Starship' and there are unsafe areas 'The Glassland wastes'.  You can use a script to 'Explore The Glassland Wastes' and then you get a % of loot, of getting skill points, of finding random events, or of finding a foe.\r\n\r\nSo in this case, the player would go out, find a Goblin and face off against it. I need to consider some way to 'isolate' the player and ignite turn-based combat until the encounter is over, but that's not why I'm here. That's all rambling context in case anyone has suggestions. \r\n\r\nRight! Main point.\r\n\r\nI saw something mooching through old threads at was about a zombie game. They'd got something in the description like `obj.look = ProcessText(\"A \" + obj.alias + \", {random:maggotridden:missing arm:one dangling eye}.\")`\r\n\r\nI'm wondering if there is some kind of combat that is rolling in turns, i.e  the player takes a turn against a Goblin, the Goblin makes a turn back - would the random word still be the same? Or would it create a new random message each time the player looks? (Which is what I assume?)\r\n\r\nI wrote a brief text for a monster just to test.\r\n\r\n```\r\nYou’re facing off against a small creature with {random:greyish-green:blackish-blue:dark yellowy} skin and large, dark eyes that almost seem to glisten. It’s wearing what appears to be the {random:ripped and torn:tattered:slightly burnt:faintly bloody} remains of a {random:crimson red:brown-tan:iron grey:dark blue} woollen jacket, streaked with dust and grime from crawling around the plains. Little hobnail boots make its feet look rather clunky and a variety of {random:steel:copper:bronze:bone} piercings line its long, batlike ears. \r\n“Shinies!” Its voice has a shrill, monstrous screetch to it as it holds its mace up high and gives it a firm, threatening swing. “Shiny! Shinies!” It’s clear the creature’s not going to get away without a fight.\r\n```\r\n\r\nCould I format this in a way so it's set for a monster, consistently, until it's respawned? I assume I could set each 'factor' as an attribute and roll the attributes each time, but its a way to try and make the randomly spawned monsters feel like there's a bit more... Randomness to them.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya all,</p>\n<p>I'm currently starting out with Pixie's combat library, although I haven't figured everything out and gone all the way through. Right now, I've just been setting up an example monster and have been wondering about randomness. For a starter, I want to be able to generate/respawn monsters as I go.</p>\n<p>I don't plan on the player ever having to fight more than one monster at once, so a Goblin, a Group of Goblins and a Horde of Goblins would all be one object with different stats. My general idea is that there are safe areas, i.e 'The Inside of your Starship' and there are unsafe areas 'The Glassland wastes'.  You can use a script to 'Explore The Glassland Wastes' and then you get a % of loot, of getting skill points, of finding random events, or of finding a foe.</p>\n<p>So in this case, the player would go out, find a Goblin and face off against it. I need to consider some way to 'isolate' the player and ignite turn-based combat until the encounter is over, but that's not why I'm here. That's all rambling context in case anyone has suggestions.</p>\n<p>Right! Main point.</p>\n<p>I saw something mooching through old threads at was about a zombie game. They'd got something in the description like <code>obj.look = ProcessText(\"A \" + obj.alias + \", {random:maggotridden:missing arm:one dangling eye}.\")</code></p>\n<p>I'm wondering if there is some kind of combat that is rolling in turns, i.e  the player takes a turn against a Goblin, the Goblin makes a turn back - would the random word still be the same? Or would it create a new random message each time the player looks? (Which is what I assume?)</p>\n<p>I wrote a brief text for a monster just to test.</p>\n<pre><code>You’re facing off against a small creature with {random:greyish-green:blackish-blue:dark yellowy} skin and large, dark eyes that almost seem to glisten. It’s wearing what appears to be the {random:ripped and torn:tattered:slightly burnt:faintly bloody} remains of a {random:crimson red:brown-tan:iron grey:dark blue} woollen jacket, streaked with dust and grime from crawling around the plains. Little hobnail boots make its feet look rather clunky and a variety of {random:steel:copper:bronze:bone} piercings line its long, batlike ears. \n“Shinies!” Its voice has a shrill, monstrous screetch to it as it holds its mace up high and gives it a firm, threatening swing. “Shiny! Shinies!” It’s clear the creature’s not going to get away without a fight.\n</code></pre>\n<p>Could I format this in a way so it's set for a monster, consistently, until it's respawned? I assume I could set each 'factor' as an attribute and roll the attributes each time, but its a way to try and make the randomly spawned monsters feel like there's a bit more... Randomness to them.</p>\n\n",
      "PostDate": "2017-07-05T11:35:29.245683Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c6de02a3-d2d5-4ccc-80c6-cdba112e654a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The trick is in the `ProcessText` function.... which is not yet in Quest. It will do the text processor stuff straightaway, so the modified string is used for the attribute. Every time the player looks, the attribute will be the same.\r\n\r\n Until Quest 5.7 comes out, you can add `ProcessText` to your game. Have it return a string, and a single parameter \"text\", and paste in this code:\r\n```\r\n    data = NewDictionary()\r\n    dictionary add (data, \"fulltext\", text)\r\n    text = ProcessTextSection(text, data)\r\n    return (Replace(Replace(text, \"@@@open@@@\", \"{\"), \"@@@close@@@\", \"}\"))\r\n```\r\nI would suggest creating clones of goblins, and setting the look attribute when the clone is created.",
      "EditableFormat": "markdown",
      "HTML": "<p>The trick is in the <code>ProcessText</code> function.... which is not yet in Quest. It will do the text processor stuff straightaway, so the modified string is used for the attribute. Every time the player looks, the attribute will be the same.</p>\n<p>Until Quest 5.7 comes out, you can add <code>ProcessText</code> to your game. Have it return a string, and a single parameter \"text\", and paste in this code:</p>\n<pre><code>    data = NewDictionary()\n    dictionary add (data, \"fulltext\", text)\n    text = ProcessTextSection(text, data)\n    return (Replace(Replace(text, \"@@@open@@@\", \"{\"), \"@@@close@@@\", \"}\"))\n</code></pre>\n<p>I would suggest creating clones of goblins, and setting the look attribute when the clone is created.</p>\n\n",
      "PostDate": "2017-07-05T13:09:04.623693Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "62538f87-7efc-4492-8cb8-6dd0838b90dd",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How can I manipulate clones? I've not really used them much, but I mean - they're made when the game is running. Then again, I wonder if I'll need to clone them at all. I know I'll be using objects, but with only one monster on screen at once, recycling and changing the same one, dragging it out of its room for combat and throwing it back in when done, that might be easier. \r\n\r\nAlso, adding on your answer, how do I have something return a string? I don't think I've come across this yet. Is there a full tutorial for `ProcessText`?",
      "EditableFormat": "markdown",
      "HTML": "<p>How can I manipulate clones? I've not really used them much, but I mean - they're made when the game is running. Then again, I wonder if I'll need to clone them at all. I know I'll be using objects, but with only one monster on screen at once, recycling and changing the same one, dragging it out of its room for combat and throwing it back in when done, that might be easier.</p>\n<p>Also, adding on your answer, how do I have something return a string? I don't think I've come across this yet. Is there a full tutorial for <code>ProcessText</code>?</p>\n\n",
      "PostDate": "2017-07-05T16:35:11.7255761Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "32dff14e-dcdd-44b4-ba8c-2d55dc22679a",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> How can I manipulate clones?\r\n\r\nSee [here](http://docs.textadventures.co.uk/quest/clones.html) (which just happens to be about cloning goblins).\r\n\r\n> Also, adding on your answer, how do I have something return a string? I don't think I've come across this yet. Is there a full tutorial for ProcessText?#\r\n\r\nThere is a page on creating functions [here](http://docs.textadventures.co.uk/quest/creating_functions_which_return_a_value.html), but basically you select \"string\" from the Returntype drop down list,",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>How can I manipulate clones?</p>\n</blockquote>\n<p>See <a href=\"http://docs.textadventures.co.uk/quest/clones.html\">here</a> (which just happens to be about cloning goblins).</p>\n<blockquote>\n<p>Also, adding on your answer, how do I have something return a string? I don't think I've come across this yet. Is there a full tutorial for ProcessText?#</p>\n</blockquote>\n<p>There is a page on creating functions <a href=\"http://docs.textadventures.co.uk/quest/creating_functions_which_return_a_value.html\">here</a>, but basically you select \"string\" from the Returntype drop down list,</p>\n\n",
      "PostDate": "2017-07-05T16:50:54.1213503Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2fafd130-59b0-4b5e-af69-bfd379b25964",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "http://i.imgur.com/BXvaaIub.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So... You want your text to read like this:\r\nYou’re facing off against a small creature with {monster.skin} skin and large, dark eyes that almost seem to glisten. It’s wearing what appears to be the {monster.jacket1} remains of a {monster.jacket2} woollen jacket, streaked with dust and grime from crawling around the plains. Little hobnail boots make its feet look rather clunky and a variety of {monster.piercings} piercings line its long, batlike ears. \r\n“Shinies!” Its voice has a shrill, monstrous screetch to it as it holds its mace up high and gives it a firm, threatening swing. “Shiny! Shinies!” It’s clear the creature’s not going to get away without a fight.\r\n\r\nAll you need to do is pre-randomize the variables before hand:\r\nmonster.skin= {random:greyish-green:blackish-blue:dark yellowy}\r\nmonster.jacket1=random:ripped and torn:tattered:slightly burnt:faintly bloody}\r\nmonster.jacket2={random:crimson red:brown-tan:iron grey:dark blue}\r\nmonster.piercings= {random:steel:copper:bronze:bone}\r\nor:\r\nS=Split(\"greyish-green:blackish-blue:dark yellowy\" , \":\")\r\nJ1=Split(\":ripped and torn:tattered:slightly burnt:faintly bloody\", \":\")\r\nJ2=Split(\"crimson red:brown-tan:iron grey:dark blue\", \":\")\r\nP=Split(\"steel:copper:bronze:bone\", \":\")\r\nThen:\r\nr=GetRandomInt(1,3)\r\nmonster.skin=stringListItem(S, r)\r\nr=GetRandomInt(1,4)\r\nmonster.skin=stringListItem(J1, r)\r\n\r\n(then the same for the rest of the variables)\r\nThis way, each new creature will be different, but, the same until a new one is generated.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So... You want your text to read like this:<br>\nYou’re facing off against a small creature with {monster.skin} skin and large, dark eyes that almost seem to glisten. It’s wearing what appears to be the {monster.jacket1} remains of a {monster.jacket2} woollen jacket, streaked with dust and grime from crawling around the plains. Little hobnail boots make its feet look rather clunky and a variety of {monster.piercings} piercings line its long, batlike ears.<br>\n“Shinies!” Its voice has a shrill, monstrous screetch to it as it holds its mace up high and gives it a firm, threatening swing. “Shiny! Shinies!” It’s clear the creature’s not going to get away without a fight.</p>\n<p>All you need to do is pre-randomize the variables before hand:<br>\nmonster.skin= {random:greyish-green:blackish-blue:dark yellowy}<br>\nmonster.jacket1=random:ripped and torn:tattered:slightly burnt:faintly bloody}<br>\nmonster.jacket2={random:crimson red:brown-tan:iron grey:dark blue}<br>\nmonster.piercings= {random:steel:copper:bronze:bone}<br>\nor:<br>\nS=Split(\"greyish-green:blackish-blue:dark yellowy\" , \":\")<br>\nJ1=Split(\":ripped and torn:tattered:slightly burnt:faintly bloody\", \":\")<br>\nJ2=Split(\"crimson red:brown-tan:iron grey:dark blue\", \":\")<br>\nP=Split(\"steel:copper:bronze:bone\", \":\")<br>\nThen:<br>\nr=GetRandomInt(1,3)<br>\nmonster.skin=stringListItem(S, r)<br>\nr=GetRandomInt(1,4)<br>\nmonster.skin=stringListItem(J1, r)</p>\n<p>(then the same for the rest of the variables)<br>\nThis way, each new creature will be different, but, the same until a new one is generated.</p>\n\n",
      "PostDate": "2017-07-06T04:08:02.7220727Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4159d458-92ca-40f0-a173-3aaeeaafabf8",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah, that's what I was considering beforehand, but that little text bit got me wondering if it was possible to just do it in text. Using attributes would probably be the easiest method, but it's good to have the ProcessText there just in case it comes in handy some other time.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah, that's what I was considering beforehand, but that little text bit got me wondering if it was possible to just do it in text. Using attributes would probably be the easiest method, but it's good to have the ProcessText there just in case it comes in handy some other time.</p>\n\n",
      "PostDate": "2017-07-06T17:18:51.8296278Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8bb8ec0d-8ac1-42e7-9af3-4197b8b2c901",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The advantage of DarkLizerd's way is you could refer to the trait in other places, saying that you hack into its {monster.skin} skin, for example, and it would be consistent.\r\n\r\nThe diaadvantage is your cannot do that with clones using the text processor (because the clone willhave a different name), but if you are not using clones, that is not a problem.",
      "EditableFormat": "markdown",
      "HTML": "<p>The advantage of DarkLizerd's way is you could refer to the trait in other places, saying that you hack into its {monster.skin} skin, for example, and it would be consistent.</p>\n<p>The diaadvantage is your cannot do that with clones using the text processor (because the clone willhave a different name), but if you are not using clones, that is not a problem.</p>\n\n",
      "PostDate": "2017-07-06T17:51:28.4801987Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0541e34d-a685-4c7e-9877-8d0b7ca313b1",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"For a starter, I want to be able to generate/respawn monsters as I go (JK)\"\r\n\r\nthe trick to this is to have your actual monster Objects as storage/data Objects (aka: not interactive'able by the person playing the game), which you never mess with, and then you can reference them (and thus use them, including cloning them and then using their clones), as an illusion/effect such as that of 'generating/respawning' them.\r\n\r\nThis is a big concept of (gaming) programming (but also in general with any non-gaming program too):\r\n\r\nwhat seems to be happening/going-on with the person playing the game (or the user for non-gaming programs), is NOT actually what is happening/going-on in the programming, it's something completely different in programming, but which creates the effect/illusion of that thing that the person playing (or user) is thinking is happening/going-on, hehe. You don't program in 'generating/re-spawning' of monsters, but your programming does cause/produce that effect/illusion of 'generating/re-spawning' of monsters for the person playing the game (or user).\r\n\r\nAND\r\n\r\n\"I need to consider some way to 'isolate' the player and ignite turn-based combat until the encounter is over (JK)\"\r\n\r\nsee the scripting example in the code box below (see the 'game.start' and the 'battle_fucntion')\r\n\r\n--------------------------\r\n\r\n```\r\n// you'd then use scripting for 'getting' (not technically 'getting/moving') of the monster Objects and/or their clones (that are created through/with this same scripting), but rather referencing of them (and/or of their clones), as we never actually mess with our monster objects, but if we do use clones, we may want to destroy the clones when done, depends on your game design) and doing stuff with them (or their clones) and/or using their stuff (Attributes), which will use List/Dictionary Attribute scripting work as well for this stuff.\r\n\r\n// I show an example of such scripting below (see the 'game.start' and the 'battle_function')\r\n\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <game name=\"example\">\r\n    // blah Attributes\r\n    // example scripting (and also see the actual function at very bottom of this code box too):\r\n    <attr name=\"start\" type=\"script\">\r\n      monster_object_variable = ObjectListItem (monster_container.monster_objectlist_attribute, GetRandomInt (0, ListCount (monster_container.monster_objectlist_attribute) - 1))\r\n      msg (\"A \" + monster_object_variable.alias + \" has spawned. You must fight it and win, else die...\")\r\n      battle_function (monster_object_variable)\r\n      battle_function (monster_object_variable) // this second line (a second calling/usage/doing of the 'battle_function' after the monster is dead --- if you are dead, the game is frozen as the game is over), is for trying to do this upon a dead monster (the first time, looting it, and addition times saying you're silly as there's nothing to do now  with it, you already looted its corpse), if this example was a full-working game code, usually you'd have a 'fight/battle' Verb/Command, which you can click on (or type-in) again after you already killed the monster, to loot its corpse.\r\n    </attr>\r\n  </game>\r\n\r\n  // the storage/data monster Objects, which you never actually mess with (as you're merely referencing them and/or creating clones of them through the scripting), but with the scripting, it creates the illusion/effect of you 'spawning/generating/re-spawning/re-generating' them to the person playing the game:\r\n\r\n  <object name=\"monster_container\"> // for organization (especially) if using the GUI/Editor, but also good regardless anyways.\r\n    <attr name=\"monster_objectlist_attribute\" type=\"objectlist\">orc;ogre</attr>\r\n    <object name=\"orc\">\r\n      // blah Attributes\r\n    </object>\r\n   <object name=\"ogre\">\r\n      // blah Attributes\r\n    </object>\r\n   // etc etc etc monster Objects\r\n  </object>\r\n\r\n  // example scripting:\r\n  // (it's really bad/redundent scripting, can be made much more concise: put the player's turn as its own function and put the monster's turn as its own function (or best: have a function that can handle the turn regardless of who's turn it is), but this is jsut a quick example)\r\n\r\n  <function name=\"battle_function\" parameters=\"monster_object_parameter\">\r\n    <![CDATA[\r\n      if (monster_object_parameter.condition = \"dead\") {\r\n        firsttime {\r\n          msg (\"You loot the dead \" + monster_object_parameter.alias + \"'s corpse\")\r\n          player.current_experience = player.current_experience + monster_object_parameter.experience\r\n          player.current_currency = player.current_currency + monster_object_parameter.currency\r\n          // scripting for getting any items/equipment from the monster (too much work, too lazy to do it here, lol)\r\n        } otherwise {\r\n          msg (\"The \" + monster_object_parameter.alias + \" is still dead, and has already been looted by you, silly.\")\r\n        }\r\n      } else { // if monster not dead\r\n        if (player.speed > monster_object_parameter.speed) {\r\n          msg (\"You get to go first, having greater speed than the \" + monster_object_parameter.alias)\r\n          monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\r\n          msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\r\n          if (monster_object_parameter.current_life < 1) {\r\n            msg (\"You killed the \" + monster_object_parameter.alias + \"!\")\r\n            monster_object_parameter.condition = \"dead\"\r\n          } else { // if monster still alive\r\n            msg (\"The \" + monster_object_parameter.alias + \" still has \" + monster_object_parameter.current_life + \" life remaining.\")\r\n            msg (\"The \" + monster_object_parameter.alias + \" now attacks you!\")\r\n            player.current_life = player.current_life - monster_object_parameter.damage\r\n            msg (\"The \" + monster_object_parameter.alias + \" does \" + monster_object_parameter.damage + \" damage to you\")\r\n            if (player.current_life < 1) {\r\n              msg (\"You were killed by the \" + monster_object_parameter.alias)\r\n              msg (\"GAME OVER\")\r\n              finish\r\n            }\r\n          }\r\n        } else if (player.speed < monster_object_parameter.speed) {\r\n          msg (\"The \" + monster_object_parameter.alias + \" gets to go first, having greater speed than you.\")\r\n          player.current_life = player.current_life - monster_object_parameter.damage\r\n          msg (\"The \" + monster_object_parameter \" does \" + monster_object_parameter.damage + \" damage to you\")\r\n          if (player.current_life < 1) {\r\n            msg (\"You were killed by the \" + monster_object_parameter.alias)\r\n            msg (\"GAME OVER\")\r\n            finish\r\n          } else { // if you're still alive\r\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\r\n            msg (\"You now attack the \" + monster_object_parameter.alias)\r\n            monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\r\n            msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\r\n            if (monster_object_parameter.current_life < 1) {\r\n              msg (\"You killed the \" + monster_object_parameter.alias)\r\n              monster_object_parameter.condition = \"dead\"\r\n            }\r\n          }\r\n        } else if (RandomChance (50)) { // if you and monster have same speed, \"flip a coin\" (RandomChance(50)), to see who goes first // if TRUE, you go first:\r\n          msg (\"You get to go first, having greater speed than the \" + monster_object_parameter.alias)\r\n          monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\r\n          msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\r\n          if (monster_object_parameter.current_life < 1) {\r\n            msg (\"You killed the \" + monster_object_parameter.alias + \"!\")\r\n            monster_object_parameter.condition = \"dead\"\r\n          } else { // if monster still laive\r\n            msg (\"The \" + monster_object_parameter.alias + \" still has \" + monster_object_parameter.current_life + \" life remaining.\")\r\n            msg (\"The \" + monster_object_parameter.alias + \" now attacks you!\")\r\n            player.current_life = player.current_life - monster_object_parameter.damage\r\n            msg (\"The \" + monster_object_parameter.alias + \" does \" + monster_object_parameter.damage + \" damage to you\")\r\n            if (player.current_life < 1) {\r\n              msg (\"You were killed by the \" + monster_object_parameter.alias)\r\n              msg (\"GAME OVER\")\r\n              finish\r\n            }\r\n          }\r\n        } else { // (you and monster have same speed), \"flip a coin\" (RandomChance (50)), to see who goes first // if FALSE, the monster gets to go first:\r\n          msg (\"The \" + monster_object_parameter.alias + \" gets to go first, having greater speed than you.\")\r\n          player.current_life = player.current_life - monster_object_parameter.damage\r\n          msg (\"The \" + monster_object_parameter \" does \" + monster_object_parameter.damage + \" damage to you\")\r\n          if (player.current_life < 1) {\r\n            msg (\"You were killed by the \" + monster_object_parameter.alias)\r\n            msg (\"GAME OVER\")\r\n            finish\r\n          } else { // if you still alive\r\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\r\n            msg (\"You now attack the \" + monster_object_parameter.alias)\r\n            monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\r\n            msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\r\n            if (monster_object_parameter.current_life < 1) {\r\n              msg (\"You killed the \" + monster_object_parameter.alias)\r\n              monster_object_parameter.condition = \"dead\"\r\n            }\r\n          }\r\n        }\r\n        // end of a single battle turn/round (you and monster, have both done your individual fight/attack turns)\r\n        battle_function (monster_object_parameter) // you're stuck in combat with the monster (scripting loop: keep doing battle turns/rounds), until one of you (you or monster) dies (or you can add in more combat action/choices: magic/cast, item, etc, in addition to the effective 'attack' action/option that the scripting is showing/doing here already (just not named as a choice/option as it's the only one in this code example of mine), too, such as specifically for another way of ending the combat looping: flee/escape).\r\n      }\r\n    ]]>\r\n  </function>\r\n\r\n</asl>\r\n```\r\n\r\n------------\r\n\r\noops... I should have added the use of cloning (using cloned objects) ... well it won't be too difficult to include the cloning scripting into my example code above... but I'm too tired/lazy to do it now... (took a bit of work to do the example code above, need a rest first).\r\n\r\n-----------\r\n\r\nyou can also see this old code of mine too (for seeing how to add in multiple combat options/actions/choices):\r\n\r\n(this is super horribly bad code... as this was when I was first learning this stuff)\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483\r\n\r\nand its key/legend for all of my abrevs (I've learned since to NEVER EVER use abrevs ever again, lol, as I got my 'damage, for example: pd: physical damage' vs 'resistances, for example: pr: physical resistance' mixed up, and I myself was forgoting what my own abrevs stood for, laughs):\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486\r\n\r\n--------\r\n\r\nVERY IMPORTANT:\r\n\r\nif the link/download still works, you want to look at Pertex' clean-up of my horrible code:\r\n\r\nhttp://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485\r\n\r\nas, my code is horribly bad, and thus has lots of mistakes, making it NOT a good choice for looking at and trying to understand it\r\n\r\nif Pertex' link/download doesn't work... ask me and I can help you understand my code... and one of these days (like never as I'm lazy and been saying I'd do this for a long time, lol), I may re-do this combat code of mine, now that I know how to do it correctly\r\n\r\n(I do think I have it cleaned up on my computer, but I'd have to find it... too lazy, might be hard to find too...)\r\n\r\n(it'd probably be easier for me to just write in the new-correct combat code, than trying to find the cleaned up code on my computer... if I do actually ahve it... as I may not in fact... I think I do... but my memory is often wrong... my organic/brain-cell/synapsis memory is very faulty, I need silicon/whatever memory chips instead, lol)",
      "EditableFormat": "markdown",
      "HTML": "<p>\"For a starter, I want to be able to generate/respawn monsters as I go (JK)\"</p>\n<p>the trick to this is to have your actual monster Objects as storage/data Objects (aka: not interactive'able by the person playing the game), which you never mess with, and then you can reference them (and thus use them, including cloning them and then using their clones), as an illusion/effect such as that of 'generating/respawning' them.</p>\n<p>This is a big concept of (gaming) programming (but also in general with any non-gaming program too):</p>\n<p>what seems to be happening/going-on with the person playing the game (or the user for non-gaming programs), is NOT actually what is happening/going-on in the programming, it's something completely different in programming, but which creates the effect/illusion of that thing that the person playing (or user) is thinking is happening/going-on, hehe. You don't program in 'generating/re-spawning' of monsters, but your programming does cause/produce that effect/illusion of 'generating/re-spawning' of monsters for the person playing the game (or user).</p>\n<p>AND</p>\n<p>\"I need to consider some way to 'isolate' the player and ignite turn-based combat until the encounter is over (JK)\"</p>\n<p>see the scripting example in the code box below (see the 'game.start' and the 'battle_fucntion')</p>\n<hr>\n<pre><code>// you'd then use scripting for 'getting' (not technically 'getting/moving') of the monster Objects and/or their clones (that are created through/with this same scripting), but rather referencing of them (and/or of their clones), as we never actually mess with our monster objects, but if we do use clones, we may want to destroy the clones when done, depends on your game design) and doing stuff with them (or their clones) and/or using their stuff (Attributes), which will use List/Dictionary Attribute scripting work as well for this stuff.\n\n// I show an example of such scripting below (see the 'game.start' and the 'battle_function')\n\n&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;game name=\"example\"&gt;\n    // blah Attributes\n    // example scripting (and also see the actual function at very bottom of this code box too):\n    &lt;attr name=\"start\" type=\"script\"&gt;\n      monster_object_variable = ObjectListItem (monster_container.monster_objectlist_attribute, GetRandomInt (0, ListCount (monster_container.monster_objectlist_attribute) - 1))\n      msg (\"A \" + monster_object_variable.alias + \" has spawned. You must fight it and win, else die...\")\n      battle_function (monster_object_variable)\n      battle_function (monster_object_variable) // this second line (a second calling/usage/doing of the 'battle_function' after the monster is dead --- if you are dead, the game is frozen as the game is over), is for trying to do this upon a dead monster (the first time, looting it, and addition times saying you're silly as there's nothing to do now  with it, you already looted its corpse), if this example was a full-working game code, usually you'd have a 'fight/battle' Verb/Command, which you can click on (or type-in) again after you already killed the monster, to loot its corpse.\n    &lt;/attr&gt;\n  &lt;/game&gt;\n\n  // the storage/data monster Objects, which you never actually mess with (as you're merely referencing them and/or creating clones of them through the scripting), but with the scripting, it creates the illusion/effect of you 'spawning/generating/re-spawning/re-generating' them to the person playing the game:\n\n  &lt;object name=\"monster_container\"&gt; // for organization (especially) if using the GUI/Editor, but also good regardless anyways.\n    &lt;attr name=\"monster_objectlist_attribute\" type=\"objectlist\"&gt;orc;ogre&lt;/attr&gt;\n    &lt;object name=\"orc\"&gt;\n      // blah Attributes\n    &lt;/object&gt;\n   &lt;object name=\"ogre\"&gt;\n      // blah Attributes\n    &lt;/object&gt;\n   // etc etc etc monster Objects\n  &lt;/object&gt;\n\n  // example scripting:\n  // (it's really bad/redundent scripting, can be made much more concise: put the player's turn as its own function and put the monster's turn as its own function (or best: have a function that can handle the turn regardless of who's turn it is), but this is jsut a quick example)\n\n  &lt;function name=\"battle_function\" parameters=\"monster_object_parameter\"&gt;\n    &lt;![CDATA[\n      if (monster_object_parameter.condition = \"dead\") {\n        firsttime {\n          msg (\"You loot the dead \" + monster_object_parameter.alias + \"'s corpse\")\n          player.current_experience = player.current_experience + monster_object_parameter.experience\n          player.current_currency = player.current_currency + monster_object_parameter.currency\n          // scripting for getting any items/equipment from the monster (too much work, too lazy to do it here, lol)\n        } otherwise {\n          msg (\"The \" + monster_object_parameter.alias + \" is still dead, and has already been looted by you, silly.\")\n        }\n      } else { // if monster not dead\n        if (player.speed &gt; monster_object_parameter.speed) {\n          msg (\"You get to go first, having greater speed than the \" + monster_object_parameter.alias)\n          monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\n          msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\n          if (monster_object_parameter.current_life &lt; 1) {\n            msg (\"You killed the \" + monster_object_parameter.alias + \"!\")\n            monster_object_parameter.condition = \"dead\"\n          } else { // if monster still alive\n            msg (\"The \" + monster_object_parameter.alias + \" still has \" + monster_object_parameter.current_life + \" life remaining.\")\n            msg (\"The \" + monster_object_parameter.alias + \" now attacks you!\")\n            player.current_life = player.current_life - monster_object_parameter.damage\n            msg (\"The \" + monster_object_parameter.alias + \" does \" + monster_object_parameter.damage + \" damage to you\")\n            if (player.current_life &lt; 1) {\n              msg (\"You were killed by the \" + monster_object_parameter.alias)\n              msg (\"GAME OVER\")\n              finish\n            }\n          }\n        } else if (player.speed &lt; monster_object_parameter.speed) {\n          msg (\"The \" + monster_object_parameter.alias + \" gets to go first, having greater speed than you.\")\n          player.current_life = player.current_life - monster_object_parameter.damage\n          msg (\"The \" + monster_object_parameter \" does \" + monster_object_parameter.damage + \" damage to you\")\n          if (player.current_life &lt; 1) {\n            msg (\"You were killed by the \" + monster_object_parameter.alias)\n            msg (\"GAME OVER\")\n            finish\n          } else { // if you're still alive\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\n            msg (\"You now attack the \" + monster_object_parameter.alias)\n            monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\n            msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\n            if (monster_object_parameter.current_life &lt; 1) {\n              msg (\"You killed the \" + monster_object_parameter.alias)\n              monster_object_parameter.condition = \"dead\"\n            }\n          }\n        } else if (RandomChance (50)) { // if you and monster have same speed, \"flip a coin\" (RandomChance(50)), to see who goes first // if TRUE, you go first:\n          msg (\"You get to go first, having greater speed than the \" + monster_object_parameter.alias)\n          monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\n          msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\n          if (monster_object_parameter.current_life &lt; 1) {\n            msg (\"You killed the \" + monster_object_parameter.alias + \"!\")\n            monster_object_parameter.condition = \"dead\"\n          } else { // if monster still laive\n            msg (\"The \" + monster_object_parameter.alias + \" still has \" + monster_object_parameter.current_life + \" life remaining.\")\n            msg (\"The \" + monster_object_parameter.alias + \" now attacks you!\")\n            player.current_life = player.current_life - monster_object_parameter.damage\n            msg (\"The \" + monster_object_parameter.alias + \" does \" + monster_object_parameter.damage + \" damage to you\")\n            if (player.current_life &lt; 1) {\n              msg (\"You were killed by the \" + monster_object_parameter.alias)\n              msg (\"GAME OVER\")\n              finish\n            }\n          }\n        } else { // (you and monster have same speed), \"flip a coin\" (RandomChance (50)), to see who goes first // if FALSE, the monster gets to go first:\n          msg (\"The \" + monster_object_parameter.alias + \" gets to go first, having greater speed than you.\")\n          player.current_life = player.current_life - monster_object_parameter.damage\n          msg (\"The \" + monster_object_parameter \" does \" + monster_object_parameter.damage + \" damage to you\")\n          if (player.current_life &lt; 1) {\n            msg (\"You were killed by the \" + monster_object_parameter.alias)\n            msg (\"GAME OVER\")\n            finish\n          } else { // if you still alive\n            msg (\"You still have \" + player.current_life + \" life remaining.\")\n            msg (\"You now attack the \" + monster_object_parameter.alias)\n            monster_object_parameter.current_life = monster_object_parameter.current_life - player.damage\n            msg (\"You do \" + player.damage + \" damage to the \" + monster_object_parameter.alias)\n            if (monster_object_parameter.current_life &lt; 1) {\n              msg (\"You killed the \" + monster_object_parameter.alias)\n              monster_object_parameter.condition = \"dead\"\n            }\n          }\n        }\n        // end of a single battle turn/round (you and monster, have both done your individual fight/attack turns)\n        battle_function (monster_object_parameter) // you're stuck in combat with the monster (scripting loop: keep doing battle turns/rounds), until one of you (you or monster) dies (or you can add in more combat action/choices: magic/cast, item, etc, in addition to the effective 'attack' action/option that the scripting is showing/doing here already (just not named as a choice/option as it's the only one in this code example of mine), too, such as specifically for another way of ending the combat looping: flee/escape).\n      }\n    ]]&gt;\n  &lt;/function&gt;\n\n&lt;/asl&gt;\n</code></pre>\n<hr>\n<p>oops... I should have added the use of cloning (using cloned objects) ... well it won't be too difficult to include the cloning scripting into my example code above... but I'm too tired/lazy to do it now... (took a bit of work to do the example code above, need a rest first).</p>\n<hr>\n<p>you can also see this old code of mine too (for seeing how to add in multiple combat options/actions/choices):</p>\n<p>(this is super horribly bad code... as this was when I was first learning this stuff)</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22483</p>\n<p>and its key/legend for all of my abrevs (I've learned since to NEVER EVER use abrevs ever again, lol, as I got my 'damage, for example: pd: physical damage' vs 'resistances, for example: pr: physical resistance' mixed up, and I myself was forgoting what my own abrevs stood for, laughs):</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22486</p>\n<hr>\n<p>VERY IMPORTANT:</p>\n<p>if the link/download still works, you want to look at Pertex' clean-up of my horrible code:</p>\n<p>http://textadventures.co.uk/forum/quest/topic/3348/noobie-hks-help-me-thread#22485</p>\n<p>as, my code is horribly bad, and thus has lots of mistakes, making it NOT a good choice for looking at and trying to understand it</p>\n<p>if Pertex' link/download doesn't work... ask me and I can help you understand my code... and one of these days (like never as I'm lazy and been saying I'd do this for a long time, lol), I may re-do this combat code of mine, now that I know how to do it correctly</p>\n<p>(I do think I have it cleaned up on my computer, but I'd have to find it... too lazy, might be hard to find too...)</p>\n<p>(it'd probably be easier for me to just write in the new-correct combat code, than trying to find the cleaned up code on my computer... if I do actually ahve it... as I may not in fact... I think I do... but my memory is often wrong... my organic/brain-cell/synapsis memory is very faulty, I need silicon/whatever memory chips instead, lol)</p>\n\n",
      "PostDate": "2017-07-06T22:24:46.3810346Z",
      "LastEditDate": "2017-07-06T23:50:11.4463155Z",
      "link": null
    },
    {
      "PostId": "59b06562-c752-4b55-9bd8-98e95583ab78",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "\"My general idea is that there are safe areas, i.e 'The Inside of your Starship' and there are unsafe areas 'The Glassland wastes'. You can use a script to 'Explore The Glassland Wastes' and then you get a % of loot, of getting skill points, of finding random events, or of finding a foe. (JK)\"\r\n\r\nsee this link (my 'explore' and 'travel' code), though it is old and has some inefficiencies with the 'Listcount - 1' handling stuff (this was back when I was first trying/learning to do this type of stuff: using Lists/Dictionaries):\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk\r\n\r\nto have a better chance of understanding/following it:\r\n\r\n1. start with the 'explore_function' (I've only got it coded for exploring the 'homeland' in my sample/example code, but you can add in the additional cases for exploring the other types of lands too. Also I only have a single type of 'explore' event: discover a new type of land that you can now travel to, but you can easily add in other 'explore' events too: get X currency, get random item/equipment/clothing/etc, random monster battle, etc etc etc)\r\n\r\n2. then look at the 'data_object.homeland_events_script_dictionary', which adds the lands to the 'data_object.travel_string_list' for the 'travel_function', so that you can now travel to those lands. Also, once you discover a new type of land, I don't want you to be able to get this event again, as this is to be a one-time event, so I have scripting to handle the removing of this event from the 'homeland_events_string_list' list for the next time you try to 'explore')\r\n\r\n3. last, look at the 'travel_function'\r\n\r\nand, just ask for whatever help you need with it, too, of course :D\r\n\r\n------\r\n\r\nand here's my guide on using Lists/Dictionaries too:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\n\r\nask if you need help and/or got any questions on anything",
      "EditableFormat": "markdown",
      "HTML": "<p>\"My general idea is that there are safe areas, i.e 'The Inside of your Starship' and there are unsafe areas 'The Glassland wastes'. You can use a script to 'Explore The Glassland Wastes' and then you get a % of loot, of getting skill points, of finding random events, or of finding a foe. (JK)\"</p>\n<p>see this link (my 'explore' and 'travel' code), though it is old and has some inefficiencies with the 'Listcount - 1' handling stuff (this was back when I was first trying/learning to do this type of stuff: using Lists/Dictionaries):</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk</p>\n<p>to have a better chance of understanding/following it:</p>\n<ol>\n<li>\n<p>start with the 'explore_function' (I've only got it coded for exploring the 'homeland' in my sample/example code, but you can add in the additional cases for exploring the other types of lands too. Also I only have a single type of 'explore' event: discover a new type of land that you can now travel to, but you can easily add in other 'explore' events too: get X currency, get random item/equipment/clothing/etc, random monster battle, etc etc etc)</p>\n</li>\n<li>\n<p>then look at the 'data_object.homeland_events_script_dictionary', which adds the lands to the 'data_object.travel_string_list' for the 'travel_function', so that you can now travel to those lands. Also, once you discover a new type of land, I don't want you to be able to get this event again, as this is to be a one-time event, so I have scripting to handle the removing of this event from the 'homeland_events_string_list' list for the next time you try to 'explore')</p>\n</li>\n<li>\n<p>last, look at the 'travel_function'</p>\n</li>\n</ol>\n<p>and, just ask for whatever help you need with it, too, of course :D</p>\n<hr>\n<p>and here's my guide on using Lists/Dictionaries too:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk</p>\n<p>ask if you need help and/or got any questions on anything</p>\n\n",
      "PostDate": "2017-07-06T22:49:54.8477259Z",
      "LastEditDate": "2017-07-06T23:22:22.7438503Z",
      "link": null
    },
    {
      "PostId": "d4525481-0d6b-4526-98cd-d0cf674ddc58",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(sorry, accidental double-mirror post: this post was the same as the post above)\r\n\r\n(is there a way for normal users to delete their posts?)",
      "EditableFormat": "markdown",
      "HTML": "<p>(sorry, accidental double-mirror post: this post was the same as the post above)</p>\n<p>(is there a way for normal users to delete their posts?)</p>\n\n",
      "PostDate": "2017-07-06T22:50:17.8156174Z",
      "LastEditDate": "2017-07-06T22:54:15.6172067Z",
      "link": null
    }
  ]
}
