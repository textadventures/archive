{
  "Topic": {
    "TopicId": "eu4opxxtbkkz3dhkk_wj5q",
    "ForumId": "10",
    "Title": "GetBoolean within Get Input [Canceled]",
    "LastUpdated": "2019-08-16T13:24:06.946191Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a0a41d97-940a-4511-9614-e8b21377ba23",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Inside my game, I have a character who can upgrade your weapons for you. But I want it set so that they can only upgrade a certain type of weapon. The weapons which have this have a boolean attribute called electric, which defines the weapon as a special sort that the character can upgrade. But when i try it it throws this at me :\r\n\r\nError running script: Error compiling expression 'GetBoolean (result.electric)': Variable does not refer to an object: 'result'\r\n\r\n```\r\nif (player.money >44) {\r\n  msg (\"Alright. Tell me what you want upgraded and if I can do it I will. 45 dogebles per upgrade.\")\r\n  get input {\r\n    if (GetBoolean (result.electric)) {\r\n      result.dmg = result.dmg +25\r\n      result.stockalias = result.stockalias + \"upgraded\"\r\n      msg (\"Alright. Your weapon has been upgraded. +25 dmg -45 dogebles\")\r\n      player.money = player.money -45\r\n    }\r\n    else {\r\n      msg (\"Sorry. That's not a weapon I can upgrade.\")\r\n    }\r\n  }\r\n}\r\nelse {\r\n  msg (\"Afraid you can't afford it.\")\r\n}\r\n```\r\nThis is the code I have. It checks of the player has enough money, then gets input, but at the if script it checks if the weapon has the attribute which allows this character to upgrade it, and commences the script to upgrade the thing. Is there any way to make this error go away or will i have to use a switch script with all the weapons i want to be upgradeable?\r\n\r\nEDIT : I CAN'T GET IT TO WORK PROPERLY. MAYBE I'M AN IDIOT, MAYBE IT DOESN'T WORK, EITHER WAY I'M REMOVING THE FEATURE.",
      "EditableFormat": "markdown",
      "HTML": "<p>Inside my game, I have a character who can upgrade your weapons for you. But I want it set so that they can only upgrade a certain type of weapon. The weapons which have this have a boolean attribute called electric, which defines the weapon as a special sort that the character can upgrade. But when i try it it throws this at me :</p>\n<p>Error running script: Error compiling expression 'GetBoolean (result.electric)': Variable does not refer to an object: 'result'</p>\n<pre><code>if (player.money &gt;44) {\n  msg (\"Alright. Tell me what you want upgraded and if I can do it I will. 45 dogebles per upgrade.\")\n  get input {\n    if (GetBoolean (result.electric)) {\n      result.dmg = result.dmg +25\n      result.stockalias = result.stockalias + \"upgraded\"\n      msg (\"Alright. Your weapon has been upgraded. +25 dmg -45 dogebles\")\n      player.money = player.money -45\n    }\n    else {\n      msg (\"Sorry. That's not a weapon I can upgrade.\")\n    }\n  }\n}\nelse {\n  msg (\"Afraid you can't afford it.\")\n}\n</code></pre>\n<p>This is the code I have. It checks of the player has enough money, then gets input, but at the if script it checks if the weapon has the attribute which allows this character to upgrade it, and commences the script to upgrade the thing. Is there any way to make this error go away or will i have to use a switch script with all the weapons i want to be upgradeable?</p>\n<p>EDIT : I CAN'T GET IT TO WORK PROPERLY. MAYBE I'M AN IDIOT, MAYBE IT DOESN'T WORK, EITHER WAY I'M REMOVING THE FEATURE.</p>\n\n",
      "PostDate": "2019-08-16T13:24:06.946191Z",
      "LastEditDate": "2019-08-17T02:47:34.4385055Z",
      "link": null
    },
    {
      "PostId": "a7e98990-63db-4add-8a39-bf1b7c8683da",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```result``` has a string value, but you want an object value to work with attributes.\r\n\r\nIf the object's alias (which the player must type in exactly) is identical to the object's name (also a string), you can use \r\n```\r\nobj = GetObject(result)\r\nif (GetBoolean (obj.electric)) { // etc., etc.\r\n```\r\nAlternatively, you could use a menu to limit the player to valid choices only (e.g.,```ScopeInventory()```).  The menu would use either an object list, or a string list of object aliases that you would use ```obj = GetObject(result)``` on.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>result</code> has a string value, but you want an object value to work with attributes.</p>\n<p>If the object's alias (which the player must type in exactly) is identical to the object's name (also a string), you can use</p>\n<pre><code>obj = GetObject(result)\nif (GetBoolean (obj.electric)) { // etc., etc.\n</code></pre>\n<p>Alternatively, you could use a menu to limit the player to valid choices only (e.g.,<code>ScopeInventory()</code>).  The menu would use either an object list, or a string list of object aliases that you would use <code>obj = GetObject(result)</code> on.</p>\n\n",
      "PostDate": "2019-08-16T13:52:30.5503642Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f9b97c40-dc4c-48a6-a8e8-d5811ab059df",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "well thing is, all of the objects have different names than the aliases, so I can't do that. On the other hand I really am not good with messing with Scope scripts and object lists. Oh well. Considering the length of the game I doubt anyone will reach it by the time I figure out a solution and push out some sort of hotfix.",
      "EditableFormat": "markdown",
      "HTML": "<p>well thing is, all of the objects have different names than the aliases, so I can't do that. On the other hand I really am not good with messing with Scope scripts and object lists. Oh well. Considering the length of the game I doubt anyone will reach it by the time I figure out a solution and push out some sort of hotfix.</p>\n\n",
      "PostDate": "2019-08-16T15:30:56.2401385Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3e7119e-8396-404b-983f-8c72bd878622",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Rather than using `get input`, wouldn't it be more practical to ask the player to choose from a list of weapons?\r\n\r\nIf you really want the player to type in the *name* of the weapon, you'd need to use `GetObject(result)` to get the actual object.\r\n\r\nIf you want the player to type in the *alias* of the weapon, you'd need to do something like:\r\n```\r\n  get input {\r\n    result = Trim (LCase (result))\r\n    result_handler => {\r\n      result = GetObject (result)\r\n      if (GetBoolean (result, \"electric\")) {\r\n        result.dmg = result.dmg +25\r\n        result.stockalias = result.stockalias + \"upgraded\"\r\n        msg (\"Alright. Your weapon has been upgraded. +25 dmg -45 dogebles\")\r\n        player.money = player.money - 45\r\n      }\r\n      else {\r\n        msg (\"Sorry. That's not a weapon I can upgrade.\")\r\n      }\r\n    }\r\n    fullmatches = NewObjectList()\r\n    partialmatches = NewObjectList()\r\n    foreach (weapon, ScopeInventory()) {\r\n      CompareNames (LCase (GetDisplayName (weapon)), result, weapon, fullmatches, partialmatches)\r\n      if (not weapon.alt = null) {\r\n        foreach (altname, weapon.alt) {\r\n          CompareNames (LCase (altname), result, weapon, fullmatches, partialmatches)\r\n        }\r\n      }\r\n    }\r\n    if (ListCount (fullmatches) = 1) {\r\n      invoke (result_handler, QuickParams (\"result\", ListItem (fullmatches, 0)))\r\n    }\r\n    else if (ListCount (fullmatches) = 0 and ListCount (partialmatches) = 1) {\r\n      invoke (result_handler, QuickParams (\"result\", ListItem (partialmatches, 0)))\r\n    }\r\n    else if (ListCount (fullmatches) + ListCount (partialmatches) = 0) {\r\n      msg (\"I don't have a '\"+result+\"'.\")\r\n    }\r\n    else {\r\n      ShowMenu (\"Which weapon did you mean?\", ListCompact (ListCombine (fullmatches, partialmatches)), true, result_handler)\r\n    }\r\n  }\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Rather than using <code>get input</code>, wouldn't it be more practical to ask the player to choose from a list of weapons?</p>\n<p>If you really want the player to type in the <em>name</em> of the weapon, you'd need to use <code>GetObject(result)</code> to get the actual object.</p>\n<p>If you want the player to type in the <em>alias</em> of the weapon, you'd need to do something like:</p>\n<pre><code>  get input {\n    result = Trim (LCase (result))\n    result_handler =&gt; {\n      result = GetObject (result)\n      if (GetBoolean (result, \"electric\")) {\n        result.dmg = result.dmg +25\n        result.stockalias = result.stockalias + \"upgraded\"\n        msg (\"Alright. Your weapon has been upgraded. +25 dmg -45 dogebles\")\n        player.money = player.money - 45\n      }\n      else {\n        msg (\"Sorry. That's not a weapon I can upgrade.\")\n      }\n    }\n    fullmatches = NewObjectList()\n    partialmatches = NewObjectList()\n    foreach (weapon, ScopeInventory()) {\n      CompareNames (LCase (GetDisplayName (weapon)), result, weapon, fullmatches, partialmatches)\n      if (not weapon.alt = null) {\n        foreach (altname, weapon.alt) {\n          CompareNames (LCase (altname), result, weapon, fullmatches, partialmatches)\n        }\n      }\n    }\n    if (ListCount (fullmatches) = 1) {\n      invoke (result_handler, QuickParams (\"result\", ListItem (fullmatches, 0)))\n    }\n    else if (ListCount (fullmatches) = 0 and ListCount (partialmatches) = 1) {\n      invoke (result_handler, QuickParams (\"result\", ListItem (partialmatches, 0)))\n    }\n    else if (ListCount (fullmatches) + ListCount (partialmatches) = 0) {\n      msg (\"I don't have a '\"+result+\"'.\")\n    }\n    else {\n      ShowMenu (\"Which weapon did you mean?\", ListCompact (ListCombine (fullmatches, partialmatches)), true, result_handler)\n    }\n  }\n</code></pre>\n\n",
      "PostDate": "2019-08-16T16:30:56.4976285Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a62a73cf-530c-4ec0-a395-45ebdb7b3b73",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nget input {\r\n\r\n  string_variable = result\r\n\r\n  object_variable = GetObject (string_variable)\r\n\r\n  if (object_variable = null) {\r\n\r\n    foreach (obj, AllObjects ()) {\r\n\r\n      if (obj.alias = string_variable) {\r\n\r\n        object_variable = obj\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  if (object_variable = null) {\r\n\r\n    msg (\"Error: wrong input (inputted object doesn't exist)\")\r\n\r\n  } else {\r\n\r\n    // whatever scripting  you want for your 'object_variable'\r\n\r\n  }\r\n\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>get input {\n\n  string_variable = result\n\n  object_variable = GetObject (string_variable)\n\n  if (object_variable = null) {\n\n    foreach (obj, AllObjects ()) {\n\n      if (obj.alias = string_variable) {\n\n        object_variable = obj\n\n      }\n\n    }\n\n  }\n\n  if (object_variable = null) {\n\n    msg (\"Error: wrong input (inputted object doesn't exist)\")\n\n  } else {\n\n    // whatever scripting  you want for your 'object_variable'\n\n  }\n\n}\n</code></pre>\n\n",
      "PostDate": "2019-08-17T01:17:25.1560045Z",
      "LastEditDate": "2019-08-17T01:19:41.5633553Z",
      "link": null
    },
    {
      "PostId": "e34c02d6-b332-4811-9244-127b972105b3",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So i've tried most of these responses, but i can't seem to get them to work quite right. Therefore, I will just omit this feature from the game.",
      "EditableFormat": "markdown",
      "HTML": "<p>So i've tried most of these responses, but i can't seem to get them to work quite right. Therefore, I will just omit this feature from the game.</p>\n\n",
      "PostDate": "2019-08-17T02:46:22.2365126Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "70b26807-3610-421b-9134-6c4c459b328f",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can change the names of your objects so that they match their aliases.  Only difficulty would be if the aliases change in-game.",
      "EditableFormat": "markdown",
      "HTML": "<p>You can change the names of your objects so that they match their aliases.  Only difficulty would be if the aliases change in-game.</p>\n\n",
      "PostDate": "2019-08-17T03:14:37.4738416Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5234d3a7-7c21-471b-af4a-548aabece69f",
      "UserId": 383705,
      "Username": "mr.doge9508",
      "AvatarUrl": "https://i.imgur.com/SkD56Vkb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "they do. and that would break a lot of stuff like the ammo system",
      "EditableFormat": "markdown",
      "HTML": "<p>they do. and that would break a lot of stuff like the ammo system</p>\n\n",
      "PostDate": "2019-08-17T08:33:26.3567347Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0aa578e1-7bb2-4cbc-a47e-e2cb3d617063",
      "UserId": 260569,
      "Username": "DarkLizerd",
      "AvatarUrl": "https://i.imgur.com/vjdH3t6b.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just add an attribute to each weapon for what ammo it uses, that should not change through the game.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>just add an attribute to each weapon for what ammo it uses, that should not change through the game.</p>\n\n",
      "PostDate": "2019-08-17T12:43:42.5838046Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
