{
  "Topic": {
    "TopicId": "rcqvaisvek_6e5keytsaiq",
    "ForumId": "10",
    "Title": "Text Processor Flags. [Solved]",
    "LastUpdated": "2021-12-31T21:11:58.4620358Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "74f7d877-68d3-415f-a054-12f430625174",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://i.imgur.com/sC9BK3Gb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello, I am trying to have the {if flag:text} and {if not flag:text} work in my game. While the {if not} works at first, it won't register any new changes (adding or removing flags) while the {if flag:text} doesn't work at all. I'm not sure what I am doing wrong as it seems like it is working yet at the same time it's not.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello, I am trying to have the {if flag:text} and {if not flag:text} work in my game. While the {if not} works at first, it won't register any new changes (adding or removing flags) while the {if flag:text} doesn't work at all. I'm not sure what I am doing wrong as it seems like it is working yet at the same time it's not.</p>\n\n",
      "PostDate": "2021-12-31T21:11:58.4620358Z",
      "LastEditDate": "2022-01-03T15:31:38.0804632Z",
      "link": null
    },
    {
      "PostId": "750b3ac2-bf08-4845-8097-cffcd94eb0d8",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://i.imgur.com/sC9BK3Gb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Still trying thigs to make it work but nothing has changed, can't get the flag text to work and can't get the not flag text to not appear.",
      "EditableFormat": "markdown",
      "HTML": "<p>Still trying thigs to make it work but nothing has changed, can't get the flag text to work and can't get the not flag text to not appear.</p>\n\n",
      "PostDate": "2022-01-02T05:59:42.1807327Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3aec67d6-9cee-4901-be20-20b8130e90ad",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How are you setting the flags?",
      "EditableFormat": "markdown",
      "HTML": "<p>How are you setting the flags?</p>\n\n",
      "PostDate": "2022-01-02T09:51:29.1240438Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a7f43530-0900-44e1-9246-2a710fbd2b67",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://i.imgur.com/sC9BK3Gb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let me get a game here to show you the weird behavior of this, give me a sec...\r\nhere it is:\r\n\r\nhttps://textadventures.co.uk/games/view/naud8ziexukytqef7dfyta/test-game\r\n\r\nLook at the wardrobe and see the four number in the box, like this:\r\n1. The wardrobe looks dirty\r\n2.\r\n3.\r\n4. \r\n\r\nConsidering the fact the code itself is not present that must mean Quest is registering it correctly, yet when you use the two Test Flags and Removers it does not change it one bit.\r\nHere is the text with the code listed:\r\n1. {if not flag Polished:{if not flag Clean: The wardrobe looks dirty}}\r\n2. {if flag Polished: The wardrobe looks polished}\r\n3. {if flag Clean: The wardrobe looks clean}\r\n4. {if flag Polished:{if flag Clean: The wardrobe is both polished and clean}}\r\nAgain I'm not what I'm doing wrong, considering that 1 is showing it properly that must mean with how one is set up then the others should follow yet they don't. I am using the Online version if that helps.",
      "EditableFormat": "markdown",
      "HTML": "<p>Let me get a game here to show you the weird behavior of this, give me a sec...<br>\nhere it is:</p>\n<p>https://textadventures.co.uk/games/view/naud8ziexukytqef7dfyta/test-game</p>\n<p>Look at the wardrobe and see the four number in the box, like this:</p>\n<ol>\n<li>The wardrobe looks dirty</li>\n<li></li>\n<li></li>\n<li></li>\n</ol>\n<p>Considering the fact the code itself is not present that must mean Quest is registering it correctly, yet when you use the two Test Flags and Removers it does not change it one bit.<br>\nHere is the text with the code listed:</p>\n<ol>\n<li>{if not flag Polished:{if not flag Clean: The wardrobe looks dirty}}</li>\n<li>{if flag Polished: The wardrobe looks polished}</li>\n<li>{if flag Clean: The wardrobe looks clean}</li>\n<li>{if flag Polished:{if flag Clean: The wardrobe is both polished and clean}}<br>\nAgain I'm not what I'm doing wrong, considering that 1 is showing it properly that must mean with how one is set up then the others should follow yet they don't. I am using the Online version if that helps.</li>\n</ol>\n\n",
      "PostDate": "2022-01-03T05:58:12.5870339Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e06cd1ec-c62f-4e5b-9429-37aa47c350c0",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, my first guess was right. Those flags are always false, because you don't have any code that sets them.\r\n\r\nThis code:\r\n```\r\nSetObjectFlagOn (Wardrobe, \"Polished\")\r\n```\r\nSets a flag named `Polished` on the object `Wardrobe`.\r\n\r\nThis code:\r\n```\r\n{if not flag Polished:\r\n```\r\nTests if there is a flag named `flag Polished` on the object `game`,\r\n\r\nYou want:\r\n<pre><code>1. {if not <b style=\"color:green\">Wardrobe.Polished</b>:{if not <b style=\"color:green\">Wardrobe.Clean</b>: The wardrobe looks dirty}}\r\n2. {if <b style=\"color:green\">Wardrobe.Polished</b>: The wardrobe looks polished}\r\n3. {if <b style=\"color:green\">Wardrobe.Clean</b>: The wardrobe looks clean}\r\n4. {if <b style=\"color:green\">Wardrobe.Polished</b>:{if <b style=\"color:green\">Wardrobe.Clean</b>: The wardrobe is both polished and clean}}</code></pre>\r\n\r\n(I do agree that a flag name without an object specified *should* refer to the object currently being examined. However, the people who designed the text processor decided to make it use the special object `game` instead. This is one of the things I would like to tidy up if I'm in a position to work on a future update)",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, my first guess was right. Those flags are always false, because you don't have any code that sets them.</p>\n<p>This code:</p>\n<pre><code>SetObjectFlagOn (Wardrobe, \"Polished\")\n</code></pre>\n<p>Sets a flag named <code>Polished</code> on the object <code>Wardrobe</code>.</p>\n<p>This code:</p>\n<pre><code>{if not flag Polished:\n</code></pre>\n<p>Tests if there is a flag named <code>flag Polished</code> on the object <code>game</code>,</p>\n<p>You want:</p>\n<pre><code>1. {if not <b style=\"color: green\">Wardrobe.Polished</b>:{if not <b style=\"color: green\">Wardrobe.Clean</b>: The wardrobe looks dirty}}\n2. {if <b style=\"color: green\">Wardrobe.Polished</b>: The wardrobe looks polished}\n3. {if <b style=\"color: green\">Wardrobe.Clean</b>: The wardrobe looks clean}\n4. {if <b style=\"color: green\">Wardrobe.Polished</b>:{if <b style=\"color: green\">Wardrobe.Clean</b>: The wardrobe is both polished and clean}}</code></pre>\n<p>(I do agree that a flag name without an object specified <em>should</em> refer to the object currently being examined. However, the people who designed the text processor decided to make it use the special object <code>game</code> instead. This is one of the things I would like to tidy up if I'm in a position to work on a future update)</p>\n\n",
      "PostDate": "2022-01-03T11:34:58.2648186Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2d912eeb-2258-4e49-8e17-09ce5b8e7599",
      "UserId": 425865,
      "Username": "Seeker9043",
      "AvatarUrl": "https://i.imgur.com/sC9BK3Gb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OOOOOOOOOOOOOOOOOHHHHHHHHHHHH, it works now! Thank you!\r\n\r\nThough why would Quest list the flag text command like that and not make reference that you need to set it up like how you're doing it.  Here I thought it was buggy or something, which made me worried that I was going to have to spend a good two hours writing all of the different combinations for describing one object as it accumulates flags. Thank you again.",
      "EditableFormat": "markdown",
      "HTML": "<p>OOOOOOOOOOOOOOOOOHHHHHHHHHHHH, it works now! Thank you!</p>\n<p>Though why would Quest list the flag text command like that and not make reference that you need to set it up like how you're doing it.  Here I thought it was buggy or something, which made me worried that I was going to have to spend a good two hours writing all of the different combinations for describing one object as it accumulates flags. Thank you again.</p>\n\n",
      "PostDate": "2022-01-03T15:31:08.6747757Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "62342ee7-022b-4ae1-ba4e-2036f1121e77",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think it's probably because the flag functions were originally designed for the gamebook mode, where *all* flags are on the `game` object. The text processor code is the same for text adventures and gamebooks; so using `game` as the default applies to both. (It's not quite clear which object's flags a text adventure should use as the default… there are arguments that could be made for `game`, the player, or the current object… but for gamebooks `game` is the only one that makes sense, so the text processor uses that)",
      "EditableFormat": "markdown",
      "HTML": "<p>I think it's probably because the flag functions were originally designed for the gamebook mode, where <em>all</em> flags are on the <code>game</code> object. The text processor code is the same for text adventures and gamebooks; so using <code>game</code> as the default applies to both. (It's not quite clear which object's flags a text adventure should use as the default… there are arguments that could be made for <code>game</code>, the player, or the current object… but for gamebooks <code>game</code> is the only one that makes sense, so the text processor uses that)</p>\n\n",
      "PostDate": "2022-01-03T16:39:01.8577883Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
