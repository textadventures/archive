{
  "Topic": {
    "TopicId": "zrvdzrn7fe_pwyonxdslcw",
    "ForumId": "10",
    "Title": "Reducing he players weight when putting objects in other objects.",
    "LastUpdated": "2018-09-13T11:48:30.2232765Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7f77b882-1ddb-44a8-9e23-50ee1d0e8acf",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "See next post...\r\n<font color=white size=1><small><sub><sup>\r\n££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££3333345732894723894723084723809427398423749832740328974283974238947230984723980473289047238943274832748329743209847328947320894732980473298473298\r\n\r\n\r\n\r\n\r\n\r\n </small></sub></sup>",
      "EditableFormat": "markdown",
      "HTML": "<p>See next post...<br>\n<font color=\"white\" size=\"1\"><small><sub><sup><br>\n££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££££3333345732894723894723084723809427398423749832740328974283974238947230984723980473289047238943274832748329743209847328947320894732980473298473298</sup></sub></small></font></p><font color=\"white\" size=\"1\"><small>\n</small><p><small></small></p>\n\n</font>",
      "PostDate": "2018-09-13T11:48:30.2232765Z",
      "LastEditDate": "2018-09-13T12:02:21.7596794Z",
      "link": null
    },
    {
      "PostId": "d801131c-eb2a-405d-9872-7cfb543dc300",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I messed up the formatting in the first post so here it is again in a version more easily readable.\r\n\r\n<h1>Question</h1>\r\nI have a system for encumberance. When the player picks something up the weight of that object is added to the total weight of the player, however it only works when I pick something up and when I drop something NOT when I put an object in another object. See example below....\r\n\r\n<h1>Example of what's working and what's not</h1>\r\nWhen a player pick an object up this happens:\r\n\r\n    player.weight = Round(player.weight, 2)\r\n    player.weight = player.weight + 4.54\r\n    encumbered   //this calls the function to check if the player is uncumbered\r\n\r\nAnd when dropping the object:\r\n\r\n     player.weight = Round(player.weight, 2)\r\n     player.weight = player.weight - 4.54\r\n    marlin.equipped = false\r\n    encumbered\r\n\r\nEverything is working like it should <b>BUT</b> when I use the \"put\" command (instead of drop) it wont reduce the player.weight attribute.\r\n\r\nFor example: <i>Put marlin in crate</i> will put the weapon in the crate without reducing the total weight of the player. \r\nIf I pick it up again it will <b>add</b> the weight of the marlin to the player again. So if I put it in the crate, pick it up, put it back in the crate, pick it up, a couple of times the burden (of nothing) will be so heavy I can't move ('cause that's how the encumbrance function is supposed to work)\r\n\r\nI added this\r\n\r\n    player.weight = player.weight - this.weight\r\n    encumbered\r\n\r\n... to the \"script to run when trying to add an object\" but got this error...\r\n <i>Error running script: Error compiling expression 'player.weight - this.weight': ArithmeticElement: Operation 'Subtract' is not defined for types 'Double' and 'Object'</i>\r\n\r\n\r\nAny ideas how to make this work?",
      "EditableFormat": "markdown",
      "HTML": "<p>I messed up the formatting in the first post so here it is again in a version more easily readable.</p>\n<h1>Question</h1>\nI have a system for encumberance. When the player picks something up the weight of that object is added to the total weight of the player, however it only works when I pick something up and when I drop something NOT when I put an object in another object. See example below....\n<h1>Example of what's working and what's not</h1>\nWhen a player pick an object up this happens:\n<pre><code>player.weight = Round(player.weight, 2)\nplayer.weight = player.weight + 4.54\nencumbered   //this calls the function to check if the player is uncumbered\n</code></pre>\n<p>And when dropping the object:</p>\n<pre><code> player.weight = Round(player.weight, 2)\n player.weight = player.weight - 4.54\nmarlin.equipped = false\nencumbered\n</code></pre>\n<p>Everything is working like it should <b>BUT</b> when I use the \"put\" command (instead of drop) it wont reduce the player.weight attribute.</p>\n<p>For example: <i>Put marlin in crate</i> will put the weapon in the crate without reducing the total weight of the player.<br>\nIf I pick it up again it will <b>add</b> the weight of the marlin to the player again. So if I put it in the crate, pick it up, put it back in the crate, pick it up, a couple of times the burden (of nothing) will be so heavy I can't move ('cause that's how the encumbrance function is supposed to work)</p>\n<p>I added this</p>\n<pre><code>player.weight = player.weight - this.weight\nencumbered\n</code></pre>\n<p>... to the \"script to run when trying to add an object\" but got this error...<br>\n<i>Error running script: Error compiling expression 'player.weight - this.weight': ArithmeticElement: Operation 'Subtract' is not defined for types 'Double' and 'Object'</i></p>\n<p>Any ideas how to make this work?</p>\n\n",
      "PostDate": "2018-09-13T12:00:01.6711039Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5c766eb4-fc93-46a9-bc80-beb8494e7d64",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "quickest error/fix: make sure that your 'this.weight' is also a Double Attribute storing a Double Value, as you can't subtract different data types of values: double (4.05) - integer (1) ---> ERROR! and integer (2) - string (\"hi\") ---> ERROR!\r\n\r\nanother simple issue/fix is if the problem/issue is just that you're using 'this' when you can't: a scope issue, which we can provide you with alternative workarounds\r\n\r\nif these (mis-match of data types or a scope issue with using 'this') aren't the issue... then... got a more difficult issue (something is likely wrong with your code, so we'd need to see possible your entire game code to find the mess up in it) to figure out and fix....",
      "EditableFormat": "markdown",
      "HTML": "<p>quickest error/fix: make sure that your 'this.weight' is also a Double Attribute storing a Double Value, as you can't subtract different data types of values: double (4.05) - integer (1) ---&gt; ERROR! and integer (2) - string (\"hi\") ---&gt; ERROR!</p>\n<p>another simple issue/fix is if the problem/issue is just that you're using 'this' when you can't: a scope issue, which we can provide you with alternative workarounds</p>\n<p>if these (mis-match of data types or a scope issue with using 'this') aren't the issue... then... got a more difficult issue (something is likely wrong with your code, so we'd need to see possible your entire game code to find the mess up in it) to figure out and fix....</p>\n\n",
      "PostDate": "2018-09-13T12:15:35.7243627Z",
      "LastEditDate": "2018-09-13T12:22:08.0538806Z",
      "link": null
    },
    {
      "PostId": "7afc9b1d-2372-47bb-9a94-dce0381c3bc8",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The built in system works more like volume than weight, despite the name, and I pointed this out some years ago.\r\n\r\nI would have the encumbered function calculate the current carry weight each time, rather than tracking it.\r\n```\r\ncarried = 0.0\r\nforeach (obj, GetAllChildObjects(game.pov)) {\r\n  if (HasDouble(obj, \"weight\"))\r\n    carried = carried + obj.weight\r\n  }\r\n}\r\n```\r\nAnd actually I would use integers, but adjust the units to hundreds of a pound, so your marlin weighs 454. It is generally easier using whole numbers.",
      "EditableFormat": "markdown",
      "HTML": "<p>The built in system works more like volume than weight, despite the name, and I pointed this out some years ago.</p>\n<p>I would have the encumbered function calculate the current carry weight each time, rather than tracking it.</p>\n<pre><code>carried = 0.0\nforeach (obj, GetAllChildObjects(game.pov)) {\n  if (HasDouble(obj, \"weight\"))\n    carried = carried + obj.weight\n  }\n}\n</code></pre>\n<p>And actually I would use integers, but adjust the units to hundreds of a pound, so your marlin weighs 454. It is generally easier using whole numbers.</p>\n\n",
      "PostDate": "2018-09-13T13:23:24.8478599Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "731d5ff9-d1d1-4306-8cb7-c68e5eec9a88",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The INT tip sounds logical... I should probably use that .\r\nI'm not using the built in system though... I wanted to make my own (to... you know, learn =).\r\n\r\nSo I guess the question remains... is this\r\n```\r\nplayer.weight = player.weight - this.weight\r\nencumbered\r\n```\r\n(or a version of it)((when putting something into something else)) totally out of the question?\r\n\r\nEdit:\r\nOh, and thanks for replying Pix!\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The INT tip sounds logical... I should probably use that .<br>\nI'm not using the built in system though... I wanted to make my own (to... you know, learn =).</p>\n<p>So I guess the question remains... is this</p>\n<pre><code>player.weight = player.weight - this.weight\nencumbered\n</code></pre>\n<p>(or a version of it)((when putting something into something else)) totally out of the question?</p>\n<p>Edit:<br>\nOh, and thanks for replying Pix!</p>\n\n",
      "PostDate": "2018-09-13T16:50:23.1648398Z",
      "LastEditDate": "2018-09-13T16:50:50.6772767Z",
      "link": null
    },
    {
      "PostId": "91fad4d4-3e15-4a77-ba50-df18271784a3",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Totally missed your post Hege!\r\nI'll look into it after putting the kids to sleep.\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>Totally missed your post Hege!<br>\nI'll look into it after putting the kids to sleep.<br>\nThanks!</p>\n\n",
      "PostDate": "2018-09-13T16:52:07.9960226Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cee8c51f-c136-4d54-a7e9-6827e015e02b",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> problem/issue is just that you're using 'this' when you can't: \r\n\r\n... well lol, thanks for pointing that out!\r\n'this' was referring to the crate, not the object I was trying to add to it. A super lame mistake I should've been able to spot myself.\r\nChanged it from 'this.weight' to 'object.weight' and, of course, everything is working just swell. xD\r\n\r\nThanks guys!",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>problem/issue is just that you're using 'this' when you can't:</p>\n</blockquote>\n<p>... well lol, thanks for pointing that out!<br>\n'this' was referring to the crate, not the object I was trying to add to it. A super lame mistake I should've been able to spot myself.<br>\nChanged it from 'this.weight' to 'object.weight' and, of course, everything is working just swell. xD</p>\n<p>Thanks guys!</p>\n\n",
      "PostDate": "2018-09-14T07:51:34.5643503Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3b701df7-b86c-4037-b4da-72164664aeae",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Nice job cheesemybaby! even though my post was off on what the problem was... you're learning enough of coding, that you realized what was going on with your use of 'this', in that it was the wrong reference/pointer of the object you wanted to use, and the correct reference/pointer of the object you wanted to use is (I'm assuming/presuming) a parameter variable named/labeled/called as 'object'\r\n\r\nwe're making a coder out of you! wink",
      "EditableFormat": "markdown",
      "HTML": "<p>Nice job cheesemybaby! even though my post was off on what the problem was... you're learning enough of coding, that you realized what was going on with your use of 'this', in that it was the wrong reference/pointer of the object you wanted to use, and the correct reference/pointer of the object you wanted to use is (I'm assuming/presuming) a parameter variable named/labeled/called as 'object'</p>\n<p>we're making a coder out of you! wink</p>\n\n",
      "PostDate": "2018-09-14T08:41:51.4217794Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "18ebf05d-064d-4521-95da-dab07d58d924",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I would point out that if you do it this way, you will have to take account of every circumstance in which an item can be added to or removed from the player's inventory. A box you can pick up will have to have code to change your weight for all its contents as well as itself. Potions will have to subtract their own weight when used. If you have a weapon with expendable ammo, do arrows have a weight? A thief stealing an item will have to change the player's weight as well.\r\n\r\nYou end up with the same code in dozens of places; maybe even hundreds. It would be much simpler to have your `encumbered` function add up the weight of everything the player is carrying each time it is called.\r\n\r\nOr… use the `changedparent` script attribute. This is called whenever an object is moved from one place to another, regardless of whether it was moved by a command or another script. You could make it something like:\r\n```\r\n// first find the weight of this object and anything inside it\r\ntotalweight = this.weight\r\nforeach (contents, GetAllChildObjects(this)) {\r\n  if (HasAttribute (contents, \"weight\")) {\r\n    totalweight = totalweight + contents.weight\r\n  }\r\n}\r\nif (not oldvalue = null) {\r\n  if (oldvalue = player or Contains (player, oldvalue)) {\r\n    player.weight = player.weight - totalweight\r\n  }\r\n}\r\nif (Contains (player, this)) {\r\n  player.weight = player.weight + totalweight\r\n}\r\nelse {\r\n  this.equipped = false\r\n}\r\nencumbered\r\n```\r\nThat would work if you take or drop the object, if you put it inside something else, if a thief steals it, or if it's eaten. Using the changed scripts means that you only have to write that code once, and you don't have to worry about remembering to include it every time you script an encounter that could change the ownership of an item. It's a very useful technique to learn.",
      "EditableFormat": "markdown",
      "HTML": "<p>I would point out that if you do it this way, you will have to take account of every circumstance in which an item can be added to or removed from the player's inventory. A box you can pick up will have to have code to change your weight for all its contents as well as itself. Potions will have to subtract their own weight when used. If you have a weapon with expendable ammo, do arrows have a weight? A thief stealing an item will have to change the player's weight as well.</p>\n<p>You end up with the same code in dozens of places; maybe even hundreds. It would be much simpler to have your <code>encumbered</code> function add up the weight of everything the player is carrying each time it is called.</p>\n<p>Or… use the <code>changedparent</code> script attribute. This is called whenever an object is moved from one place to another, regardless of whether it was moved by a command or another script. You could make it something like:</p>\n<pre><code>// first find the weight of this object and anything inside it\ntotalweight = this.weight\nforeach (contents, GetAllChildObjects(this)) {\n  if (HasAttribute (contents, \"weight\")) {\n    totalweight = totalweight + contents.weight\n  }\n}\nif (not oldvalue = null) {\n  if (oldvalue = player or Contains (player, oldvalue)) {\n    player.weight = player.weight - totalweight\n  }\n}\nif (Contains (player, this)) {\n  player.weight = player.weight + totalweight\n}\nelse {\n  this.equipped = false\n}\nencumbered\n</code></pre>\n<p>That would work if you take or drop the object, if you put it inside something else, if a thief steals it, or if it's eaten. Using the changed scripts means that you only have to write that code once, and you don't have to worry about remembering to include it every time you script an encounter that could change the ownership of an item. It's a very useful technique to learn.</p>\n\n",
      "PostDate": "2018-09-14T08:56:37.0240706Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ea696523-fb0b-4ba2-abe1-769a739bcd9b",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@MRAngel\r\nThere's two short lines of code I need to add to every object the player can pick up. \r\n\r\n```\r\nplayer.weight = player.weight + [insert weight here]\r\nencumbered\r\n```\r\n\r\n\r\n... and with that said: I know it's not the best way, or smartest or fastest. I'm currently working on Act II of my (first) game. When starting working on Act I I know absolutely nothing about coding. I made an incredible amount of mistakes but I learned from them. I took what I've learned and started working on Act II but I, of course, still have a looooooooooooooooong way to go before I'd consider myself even an mediocre coder. This is the way I learn and even if I didn't follow your tips in this thread I do appreciate and it is bookmarked for future reference! So... thanks! :)\r\n\r\n\r\n@Hege\r\nHehe... that's the plan =)",
      "EditableFormat": "markdown",
      "HTML": "<p>@MRAngel<br>\nThere's two short lines of code I need to add to every object the player can pick up.</p>\n<pre><code>player.weight = player.weight + [insert weight here]\nencumbered\n</code></pre>\n<p>... and with that said: I know it's not the best way, or smartest or fastest. I'm currently working on Act II of my (first) game. When starting working on Act I I know absolutely nothing about coding. I made an incredible amount of mistakes but I learned from them. I took what I've learned and started working on Act II but I, of course, still have a looooooooooooooooong way to go before I'd consider myself even an mediocre coder. This is the way I learn and even if I didn't follow your tips in this thread I do appreciate and it is bookmarked for future reference! So... thanks! :)</p>\n<p>@Hege<br>\nHehe... that's the plan =)</p>\n\n",
      "PostDate": "2018-09-14T15:09:32.1517602Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "80c55905-9af1-4a2b-b3c4-949bb2504dd6",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> There's two short lines of code I need to add to every object the player can pick up.\r\n\r\nTwo lines if the item can be picked up.\r\nTwo more if it can be put down.\r\nMore if it can be put into a container which can be carried\r\nMore if if could be inside a container which is being picked up\r\nTwo more if it can be given to an NPC\r\nTwo more for every NPC who can give it to the player\r\nMore if an item can be stolen from the player\r\nTwo more if the item can be sold\r\nTwo more if it can be bought\r\nTwo more if an item can be eaten or used up in some way.\r\nMore if there's any effect which destroys items.\r\nAm I missing some?\r\n\r\nTwo lines of code for each item wouldn't be a lot. Two lines for every item, for every way in which it can enter or leave the inventory, could be a lot :-p\r\n\r\n<details>\r\n<summary>Another way to do it, in case you're interested</summary>\r\n\r\nA simpler `changedparent` script:\r\n\r\n```\r\nif (not oldvalue = null and HasAttribute (oldvalue, \"weight\")) {\r\n  oldvalue.weight = oldvalue.weight - this.weight\r\n}\r\nif (not this.parent = null and HasAttribute (this.parent, \"weight\")) {\r\n  this.parent.weight = this.parent.weight + this.weight\r\n}\r\nencumbered\r\n```\r\nThere's two lines of code for picking an object up, and 2 for putting it down :) But in the changed script, they're run whenever the object moves, regardless of whether the command was \"get\", \"drop\", \"put in\", \"give to\", \"eat\", or anything else.\r\n\r\nThough if there's a crate the player can pick up which can have other objects inside it, you'd also have to give it a `changedweight` script, so that it will encumber the player appropriately if you put an object in it while carrying it:\r\n```\r\nif (HasAttribute (this.parent, \"weight\")) {\r\n  this.parent.weight = this.parent.weight + this.weight - oldvalue\r\n}\r\n```\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>There's two short lines of code I need to add to every object the player can pick up.</p>\n</blockquote>\n<p>Two lines if the item can be picked up.<br>\nTwo more if it can be put down.<br>\nMore if it can be put into a container which can be carried<br>\nMore if if could be inside a container which is being picked up<br>\nTwo more if it can be given to an NPC<br>\nTwo more for every NPC who can give it to the player<br>\nMore if an item can be stolen from the player<br>\nTwo more if the item can be sold<br>\nTwo more if it can be bought<br>\nTwo more if an item can be eaten or used up in some way.<br>\nMore if there's any effect which destroys items.<br>\nAm I missing some?</p>\n<p>Two lines of code for each item wouldn't be a lot. Two lines for every item, for every way in which it can enter or leave the inventory, could be a lot :-p</p>\n<details>\n<summary>Another way to do it, in case you're interested</summary>\n<p>A simpler <code>changedparent</code> script:</p>\n<pre><code>if (not oldvalue = null and HasAttribute (oldvalue, \"weight\")) {\n  oldvalue.weight = oldvalue.weight - this.weight\n}\nif (not this.parent = null and HasAttribute (this.parent, \"weight\")) {\n  this.parent.weight = this.parent.weight + this.weight\n}\nencumbered\n</code></pre>\n<p>There's two lines of code for picking an object up, and 2 for putting it down :) But in the changed script, they're run whenever the object moves, regardless of whether the command was \"get\", \"drop\", \"put in\", \"give to\", \"eat\", or anything else.</p>\n<p>Though if there's a crate the player can pick up which can have other objects inside it, you'd also have to give it a <code>changedweight</code> script, so that it will encumber the player appropriately if you put an object in it while carrying it:</p>\n<pre><code>if (HasAttribute (this.parent, \"weight\")) {\n  this.parent.weight = this.parent.weight + this.weight - oldvalue\n}\n</code></pre>\n</details>\n\n",
      "PostDate": "2018-09-14T15:44:41.2674753Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "03f6f70d-f691-48ec-b393-ab78bab3eb5a",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@MRA You didn't read past the example code in my last post did you? =)\r\n\r\n>  ... I know it's not the best way, or smartest or fastest....\r\n\r\n>  ....This is the way I learn....\r\n\r\n>  even if I didn't follow your tips in this thread I do appreciate and it is bookmarked for future reference\r\n\r\nYou're absolutely right in everything you're saying though.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@MRA You didn't read past the example code in my last post did you? =)</p>\n<blockquote>\n<p>... I know it's not the best way, or smartest or fastest....</p>\n</blockquote>\n<blockquote>\n<p>....This is the way I learn....</p>\n</blockquote>\n<blockquote>\n<p>even if I didn't follow your tips in this thread I do appreciate and it is bookmarked for future reference</p>\n</blockquote>\n<p>You're absolutely right in everything you're saying though.</p>\n\n",
      "PostDate": "2018-09-15T07:47:01.1354504Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8ebed074-ab8a-4e99-b971-154ea6e27531",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mra\r\nAbout that whole post of yours ending with:\r\n> It's a very useful technique to learn.\r\n\r\n... that's a really nice way. I don't understand it yet but I'll try to get it all into my thick head. ",
      "EditableFormat": "markdown",
      "HTML": "<p>@mra<br>\nAbout that whole post of yours ending with:</p>\n<blockquote>\n<p>It's a very useful technique to learn.</p>\n</blockquote>\n<p>... that's a really nice way. I don't understand it yet but I'll try to get it all into my thick head.</p>\n\n",
      "PostDate": "2018-09-15T07:54:20.3629366Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "97681088-4e47-4729-9e69-cd079489a121",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That's why I was trying to break it down into a simpler script. I figure if you can follow code that's only slightly different from what you've already got, it could be an effective learning tool.\r\n\r\nYou're using scripts that run when the player uses the \"take\" and \"drop\" commands. But there's also a script for \"whenever the object is moved\", so you don't need to think about all the circumstances that can happen in.\r\nIn case it makes it easier to understand, here's a pseudo-code version of the script above:\r\n```\r\ntotalweight = this.weight + [weight of all objects inside this one if it's a container]\r\n\r\nif [this object was in the inventory before it moved] {\r\n  player.weight = player.weight - totalweight\r\n}\r\n\r\nif [this object is in the inventory after it moved] {\r\n  player.weight = player.weight + totalweight\r\n}\r\nencumbered\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>That's why I was trying to break it down into a simpler script. I figure if you can follow code that's only slightly different from what you've already got, it could be an effective learning tool.</p>\n<p>You're using scripts that run when the player uses the \"take\" and \"drop\" commands. But there's also a script for \"whenever the object is moved\", so you don't need to think about all the circumstances that can happen in.<br>\nIn case it makes it easier to understand, here's a pseudo-code version of the script above:</p>\n<pre><code>totalweight = this.weight + [weight of all objects inside this one if it's a container]\n\nif [this object was in the inventory before it moved] {\n  player.weight = player.weight - totalweight\n}\n\nif [this object is in the inventory after it moved] {\n  player.weight = player.weight + totalweight\n}\nencumbered\n</code></pre>\n\n",
      "PostDate": "2018-09-15T09:06:59.3424341Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "738d0ade-765e-4160-8845-3f6ff48419a7",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mra Thanks for taking the time! It makes way more sense to me now.",
      "EditableFormat": "markdown",
      "HTML": "<p>@mra Thanks for taking the time! It makes way more sense to me now.</p>\n\n",
      "PostDate": "2018-09-16T16:49:21.0280867Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
