{
  "Topic": {
    "TopicId": "6000",
    "ForumId": "18",
    "Title": "NPCs reactions",
    "LastUpdated": "2016-02-27T17:51:46+00:00",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "41476",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "NPCs will seem more realistic if they react to changes in their environment. If the player starts wearing a hat, for instance, it will be cool if the NPC acknowledges that. Here is a way to do that. It is not that simple; some experience in coding is required. Also, it cannot handle NPC and attributes names with spaces in them.\n\nThe first part is a turn script, which should be set to be enabled from the start. It iterates though everything in the current room, and if it is a character, looks for a reaction. Note that it tests whether the object is of the &quot;talkingchar&quot; from ConvLib; if you do not use that, you will need some other test.\n[code:3sfm1mgn]      foreach (o, GetDirectChildren(player&#46;parent)) {\n        if (DoesInherit(o, &quot;talkingchar&quot;)) {\n          //msg(&quot;Doing for &quot; + o&#46;name)\n          if (not HasAttribute(o, &quot;reactionslist&quot;)) {\n            o&#46;reactionslist = NewStringList()\n            if (HasString(o, &quot;reactions&quot;)) {\n              o&#46;reactionslist =  Split(o&#46;reactions, &quot;@&quot;)\n              list remove (o&#46;reactionslist, StringListItem(o&#46;reactionslist, 0))\n            }\n            else {\n              o&#46;reactionslist = NewStringList()\n            }\n          }\n          todelete = NewStringList()\n          continue = true\n          foreach (s, o&#46;reactionslist) {\n            ary = Split(s, &quot;&lt;br/&gt;&quot;)\n            test = StringListItem(ary, 2)\n            test = Replace(test, &quot;this&quot;, o&#46;name)\n            flag = Eval(test)\n            if (flag and continue) {\n              for (i, 3, ListCount(ary) - 1) {\n                s2 = StringListItem(ary, i)\n                if (IsRegexMatch(&quot;^(=|\\\\+|\\\\-) &quot;, s2)) {\n                  SetValue(s2, o)\n                }\n                else if (StartsWith(s2, &quot;~&quot;)) {\n                  deleter = Mid(s2, 2)\n                  foreach(s3, o&#46;reactionslist) {\n                    if (StartsWith(s3, &quot;&lt;br/&gt;&quot; + deleter + &quot;&lt;br/&gt;&quot;)) {\n                      list add (todelete, s3)\n                    }\n                  }\n                }\n                else if (not StartsWith(s2, &quot;//&quot;)) {\n                  msg(s2)\n                }\n              }\n              list add (todelete, s)\n              continue = false\n            }\n          }\n          foreach (s, todelete) {\n            list remove (o&#46;reactionslist, s)\n          }\n        }\n      }[/code:3sfm1mgn]\nYou also need a new function, called SetValue, no return value, taking parameters, s and char. Here is the code:\n[code:3sfm1mgn]    ary = Split(s, &quot; &quot;)\n    if (ListCount(ary) &lt; 4) error (&quot;Insufficient arguments in reaction for &quot; + char,name + &quot;&#58; &quot; + s)\n    sign = StringListItem(ary, 0)\n    list remove(ary, sign)\n    objname = StringListItem(ary, 0)\n    list remove(ary, objname)\n    if (objname = &quot;this&quot;) {\n      obj = char\n    }\n    else {\n      obj = GetObject(objname)\n    }\n    if (obj = null) error (&quot;Object not found in reaction for &quot; + obj&#46;name + &quot;&#58; &quot; + s)\n    attname = StringListItem(ary, 0)\n    list remove(ary, attname)\n    value = Eval(Replace(Join(ary, &quot; &quot;), &quot;this&quot;, char&#46;name))\n    if (sign = &quot;=&quot;) {\n      set(obj, attname, value)\n    }\n    else {\n      oldvalue = GetAttribute (obj, attname)\n      if (sign = &quot;-&quot;) {\n        value = -value\n      }      \n      if (TypeOf(oldvalue) = &quot;null&quot;) {\n        set(obj, attname, value)\n      }\n      else {\n        set(obj, attname, oldvalue + value)\n      }\n    }[/code:3sfm1mgn]\nIf you are using ConvLib, you will find it convenient to edit it. Go to the end of the file, it should look like this:\n[code:3sfm1mgn]    &lt;control&gt;\n      &lt;caption&gt;Run this greeting script&lt;/caption&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;attribute&gt;greet&lt;/attribute&gt;\n      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;\n    &lt;/control&gt;\n    \n&lt;/library&gt;[/code:3sfm1mgn]\nYou need to insert an extra control, so it looks like this:\n[code:3sfm1mgn]    &lt;control&gt;\n      &lt;caption&gt;Run this greeting script&lt;/caption&gt;\n      &lt;controltype&gt;script&lt;/controltype&gt;\n      &lt;attribute&gt;greet&lt;/attribute&gt;\n      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;\n    &lt;/control&gt;\n    \n    &lt;control&gt;\n      &lt;caption&gt;Reactions&lt;/caption&gt;\n      &lt;controltype&gt;richtext&lt;/controltype&gt;\n      &lt;attribute&gt;reactions&lt;/attribute&gt;\n      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;\n    &lt;/control&gt;\n  &lt;/tab&gt;\n  \n&lt;/library&gt;[/code:3sfm1mgn]\nIf you reload your game, you will find a Reactions text area on the conversations tab for NPCs. So what do you do with it?\n\nYou can add any number of reactions to the NPC. In any turn, each NPC will only give one reaction, and the one highest in the list &quot;wins&quot;. Each reaction consists of: a line with just an @; a line with the reaction's name; a line with a condition; and then any number of lines of actions. Here is a simple example, with three reactions:\n\n@\nmetplayer\ntrue\n'Hi,' says the girl.\n@\nplayerhasball\nball.parent = player\n'Can I play with your ball?' asks the girl. 'My name's Mary.'\n+ player count 5\n= mary alias &quot;Mary&quot;+&quot; Smith&quot;\n// Delete other\n~playerhashat\n@\nplayerhashat\nball.parent = player\n'Can I try on your hat?' asks the girl. 'My name's Mary.'\n+ player count 3\n= mary alias &quot;Mary&quot;+&quot; Smith&quot;\n// Deleteother\n~playerhasball\n\nThe first is called &quot;metplayer&quot;, and fires if &quot;true&quot;, i.e., the first turn the player is in the same room. The text is printed.\n\nThe second reaction is called &quot;playerhasball&quot; and is more complicated. It fires if &quot;ball.parent = player&quot;. The condition is standard Quest code, and you can use &quot;this&quot; to refer to the character. If the player does have the ball, the events fire. The first is just text that is displayed, the others illustrate the options available.\n\nIf the line starts with // it is ignored as a comment.\n\nIf it starts =, + or -, then an attribute gets set. You have to set this out very carefully, there must be the sign, the object name, the attribute name and the value, all separated by just one space. The value, however, can be any Quest code. If the symbol is = then the attribute is set to that value, if + then the value is added to it, if - it is taken away. It is up to you to ensure it is of a suitable type. In the example, player.count is increased by 5, and mary.alias is set to &quot;Mary Smith&quot;.\n\nEach reaction will only fire once, but you can also have one reaction disabling another. Use ~ to indicate that the named reaction is to be disabled. In the example above, the second one disables the third and vice versa so only one will ever fire.",
      "EditableFormat": "bbcode",
      "HTML": "NPCs will seem more realistic if they react to changes in their environment. If the player starts wearing a hat, for instance, it will be cool if the NPC acknowledges that. Here is a way to do that. It is not that simple; some experience in coding is required. Also, it cannot handle NPC and attributes names with spaces in them.<br/><br/>The first part is a turn script, which should be set to be enabled from the start. It iterates though everything in the current room, and if it is a character, looks for a reaction. Note that it tests whether the object is of the &quot;talkingchar&quot; from ConvLib; if you do not use that, you will need some other test.<br/><pre><code>      foreach (o, GetDirectChildren(player&#46;parent)) {<br/>        if (DoesInherit(o, &quot;talkingchar&quot;)) {<br/>          //msg(&quot;Doing for &quot; + o&#46;name)<br/>          if (not HasAttribute(o, &quot;reactionslist&quot;)) {<br/>            o&#46;reactionslist = NewStringList()<br/>            if (HasString(o, &quot;reactions&quot;)) {<br/>              o&#46;reactionslist =  Split(o&#46;reactions, &quot;@&quot;)<br/>              list remove (o&#46;reactionslist, StringListItem(o&#46;reactionslist, 0))<br/>            }<br/>            else {<br/>              o&#46;reactionslist = NewStringList()<br/>            }<br/>          }<br/>          todelete = NewStringList()<br/>          continue = true<br/>          foreach (s, o&#46;reactionslist) {<br/>            ary = Split(s, &quot;&lt;br/&gt;&quot;)<br/>            test = StringListItem(ary, 2)<br/>            test = Replace(test, &quot;this&quot;, o&#46;name)<br/>            flag = Eval(test)<br/>            if (flag and continue) {<br/>              for (i, 3, ListCount(ary) - 1) {<br/>                s2 = StringListItem(ary, i)<br/>                if (IsRegexMatch(&quot;^(=|\\\\+|\\\\-) &quot;, s2)) {<br/>                  SetValue(s2, o)<br/>                }<br/>                else if (StartsWith(s2, &quot;~&quot;)) {<br/>                  deleter = Mid(s2, 2)<br/>                  foreach(s3, o&#46;reactionslist) {<br/>                    if (StartsWith(s3, &quot;&lt;br/&gt;&quot; + deleter + &quot;&lt;br/&gt;&quot;)) {<br/>                      list add (todelete, s3)<br/>                    }<br/>                  }<br/>                }<br/>                else if (not StartsWith(s2, &quot;//&quot;)) {<br/>                  msg(s2)<br/>                }<br/>              }<br/>              list add (todelete, s)<br/>              continue = false<br/>            }<br/>          }<br/>          foreach (s, todelete) {<br/>            list remove (o&#46;reactionslist, s)<br/>          }<br/>        }<br/>      }</code></pre><br/>You also need a new function, called SetValue, no return value, taking parameters, s and char. Here is the code:<br/><pre><code>    ary = Split(s, &quot; &quot;)<br/>    if (ListCount(ary) &lt; 4) error (&quot;Insufficient arguments in reaction for &quot; + char,name + &quot;&#58; &quot; + s)<br/>    sign = StringListItem(ary, 0)<br/>    list remove(ary, sign)<br/>    objname = StringListItem(ary, 0)<br/>    list remove(ary, objname)<br/>    if (objname = &quot;this&quot;) {<br/>      obj = char<br/>    }<br/>    else {<br/>      obj = GetObject(objname)<br/>    }<br/>    if (obj = null) error (&quot;Object not found in reaction for &quot; + obj&#46;name + &quot;&#58; &quot; + s)<br/>    attname = StringListItem(ary, 0)<br/>    list remove(ary, attname)<br/>    value = Eval(Replace(Join(ary, &quot; &quot;), &quot;this&quot;, char&#46;name))<br/>    if (sign = &quot;=&quot;) {<br/>      set(obj, attname, value)<br/>    }<br/>    else {<br/>      oldvalue = GetAttribute (obj, attname)<br/>      if (sign = &quot;-&quot;) {<br/>        value = -value<br/>      }      <br/>      if (TypeOf(oldvalue) = &quot;null&quot;) {<br/>        set(obj, attname, value)<br/>      }<br/>      else {<br/>        set(obj, attname, oldvalue + value)<br/>      }<br/>    }</code></pre><br/>If you are using ConvLib, you will find it convenient to edit it. Go to the end of the file, it should look like this:<br/><pre><code>    &lt;control&gt;<br/>      &lt;caption&gt;Run this greeting script&lt;/caption&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;attribute&gt;greet&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/>    <br/>&lt;/library&gt;</code></pre><br/>You need to insert an extra control, so it looks like this:<br/><pre><code>    &lt;control&gt;<br/>      &lt;caption&gt;Run this greeting script&lt;/caption&gt;<br/>      &lt;controltype&gt;script&lt;/controltype&gt;<br/>      &lt;attribute&gt;greet&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/>    <br/>    &lt;control&gt;<br/>      &lt;caption&gt;Reactions&lt;/caption&gt;<br/>      &lt;controltype&gt;richtext&lt;/controltype&gt;<br/>      &lt;attribute&gt;reactions&lt;/attribute&gt;<br/>      &lt;mustinherit&gt;talkingchar&lt;/mustinherit&gt;<br/>    &lt;/control&gt;<br/>  &lt;/tab&gt;<br/>  <br/>&lt;/library&gt;</code></pre><br/>If you reload your game, you will find a Reactions text area on the conversations tab for NPCs. So what do you do with it?<br/><br/>You can add any number of reactions to the NPC. In any turn, each NPC will only give one reaction, and the one highest in the list &quot;wins&quot;. Each reaction consists of: a line with just an @; a line with the reaction's name; a line with a condition; and then any number of lines of actions. Here is a simple example, with three reactions:<br/><br/>@<br/>metplayer<br/>true<br/>'Hi,' says the girl.<br/>@<br/>playerhasball<br/>ball.parent = player<br/>'Can I play with your ball?' asks the girl. 'My name's Mary.'<br/>+ player count 5<br/>= mary alias &quot;Mary&quot;+&quot; Smith&quot;<br/>// Delete other<br/>~playerhashat<br/>@<br/>playerhashat<br/>ball.parent = player<br/>'Can I try on your hat?' asks the girl. 'My name's Mary.'<br/>+ player count 3<br/>= mary alias &quot;Mary&quot;+&quot; Smith&quot;<br/>// Deleteother<br/>~playerhasball<br/><br/>The first is called &quot;metplayer&quot;, and fires if &quot;true&quot;, i.e., the first turn the player is in the same room. The text is printed.<br/><br/>The second reaction is called &quot;playerhasball&quot; and is more complicated. It fires if &quot;ball.parent = player&quot;. The condition is standard Quest code, and you can use &quot;this&quot; to refer to the character. If the player does have the ball, the events fire. The first is just text that is displayed, the others illustrate the options available.<br/><br/>If the line starts with // it is ignored as a comment.<br/><br/>If it starts =, + or -, then an attribute gets set. You have to set this out very carefully, there must be the sign, the object name, the attribute name and the value, all separated by just one space. The value, however, can be any Quest code. If the symbol is = then the attribute is set to that value, if + then the value is added to it, if - it is taken away. It is up to you to ensure it is of a suitable type. In the example, player.count is increased by 5, and mary.alias is set to &quot;Mary Smith&quot;.<br/><br/>Each reaction will only fire once, but you can also have one reaction disabling another. Use ~ to indicate that the named reaction is to be disabled. In the example above, the second one disables the third and vice versa so only one will ever fire.",
      "PostDate": "2016-02-27T17:51:46+00:00",
      "LastEditDate": null
    }
  ]
}
