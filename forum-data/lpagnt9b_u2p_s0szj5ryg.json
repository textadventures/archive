{
  "Topic": {
    "TopicId": "lpagnt9b_u2p_s0szj5ryg",
    "ForumId": "24",
    "Title": "Declaring javascript functions",
    "LastUpdated": "2020-10-24T16:03:30.5665674Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "807a9d35-e8a8-47dc-8fca-b40aa5b5080a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've been playing around with Squiffy a little, and I think I'm getting the hang of how it handles javascript. However, there's a bit of a problem with modifying the javascript.\r\n\r\nSometimes, it might be useful to modify the core functions. Of course, you could do this by modifying the files after it's been compiled, but that isn't always convenient or easy. If you put, for example, `squiffy.story.go = function(section) {` into the JS for a section, then it will change when you visit that section. However, this means you end up having to put your functions into either the master section, or every section that uses them. And that is going to be rather inefficient.\r\n\r\nI've tried putting them in the *first* section, which works until you're loading a saved game. And I wasn't sure how to get around that.\r\n\r\nHere's a workaround, that might be slightly more efficient. Notably, it only defines the functions once:\r\n```\r\n[[]]:\r\n    if (!squiffy.loaded_functions) {\r\n      squiffy.loaded_functions = squiffy.story.sections['init'];\r\n      if (squiffy.loaded_functions) {\r\n        squiffy.story.run(squiffy.loaded_functions);\r\n      }\r\n    }\r\n\r\n@inc turns\r\n\r\nYou've been playing this game for {turns} turns over {times_loaded} sessions!\r\n\r\n[[init]]:\r\n    squiffy.story.go = function (name) {\r\n      // whatever changes you want to make to the function\r\n    };\r\n\r\n@inc times_loaded\r\n````\r\n\r\n(as usual, I'm writing code on the forum as a way of procrastinating from actually doing work. So I've not actually got Squiffy open to test this. But if anyone else thinks it's useful, take a look. I'm basically bodging together an `init` section, which is equivalent to Quest's UI Initialisation script.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've been playing around with Squiffy a little, and I think I'm getting the hang of how it handles javascript. However, there's a bit of a problem with modifying the javascript.</p>\n<p>Sometimes, it might be useful to modify the core functions. Of course, you could do this by modifying the files after it's been compiled, but that isn't always convenient or easy. If you put, for example, <code>squiffy.story.go = function(section) {</code> into the JS for a section, then it will change when you visit that section. However, this means you end up having to put your functions into either the master section, or every section that uses them. And that is going to be rather inefficient.</p>\n<p>I've tried putting them in the <em>first</em> section, which works until you're loading a saved game. And I wasn't sure how to get around that.</p>\n<p>Here's a workaround, that might be slightly more efficient. Notably, it only defines the functions once:</p>\n<pre><code>[[]]:\n    if (!squiffy.loaded_functions) {\n      squiffy.loaded_functions = squiffy.story.sections['init'];\n      if (squiffy.loaded_functions) {\n        squiffy.story.run(squiffy.loaded_functions);\n      }\n    }\n\n@inc turns\n\nYou've been playing this game for {turns} turns over {times_loaded} sessions!\n\n[[init]]:\n    squiffy.story.go = function (name) {\n      // whatever changes you want to make to the function\n    };\n\n@inc times_loaded\n</code></pre>\n<p>(as usual, I'm writing code on the forum as a way of procrastinating from actually doing work. So I've not actually got Squiffy open to test this. But if anyone else thinks it's useful, take a look. I'm basically bodging together an <code>init</code> section, which is equivalent to Quest's UI Initialisation script.</p>\n\n",
      "PostDate": "2020-10-24T16:03:30.5665674Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
