{
  "Topic": {
    "TopicId": "4003",
    "ForumId": "10",
    "Title": "What use is IsDefined?",
    "LastUpdated": "2013-11-14T00:52:33+00:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "26840",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I am curious when you might use the IsDefined function. It seems to only apply to variables, not to objects, attributes, types, commands or functions. Variables exist only within the context of a script, so it would seem to be testing when you have used a variable already in this script. Why not just look further up the script?\n\nWhat am I missing here?",
      "EditableFormat": "bbcode",
      "HTML": "I am curious when you might use the IsDefined function. It seems to only apply to variables, not to objects, attributes, types, commands or functions. Variables exist only within the context of a script, so it would seem to be testing when you have used a variable already in this script. Why not just look further up the script?<br/><br/>What am I missing here?",
      "PostDate": "2013-11-12T07:57:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26841",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "I believe it's used for commands to handle the possibility of one parameter not existing.\n\ne.g. command pattern: throw &lt;object1&gt; at &lt;object2&gt;\n\nif (not IsDefined(&quot;object2&quot;)) {\n   blah\n}\nelse{\n  blah\n}\n\nThus &quot;throw object&quot; and &quot;throw object at object2&quot; can both be handled by the parser. Simply using if object2=null will cause quest to throw up an error.",
      "EditableFormat": "bbcode",
      "HTML": "I believe it's used for commands to handle the possibility of one parameter not existing.<br/><br/>e.g. command pattern: throw &lt;object1&gt; at &lt;object2&gt;<br/><br/>if (not IsDefined(&quot;object2&quot;)) {<br/>   blah<br/>}<br/>else{<br/>  blah<br/>}<br/><br/>Thus &quot;throw object&quot; and &quot;throw object at object2&quot; can both be handled by the parser. Simply using if object2=null will cause quest to throw up an error.",
      "PostDate": "2013-11-12T08:48:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26845",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I do not think that that makes sense. Your command pattern will only be a match if both object1 and object2 are identified. If object2 is absent, Quest says &quot;[i:1qcjc89v]I don't understand your command.[/i:1qcjc89v]&quot; because the pattern matching fails. If object2 is not recognised it says &quot;[i:1qcjc89v]I can't see that. (fjghjhj)[/i:1qcjc89v]&quot; (or whatever). It only runs your script if both object1 and object2 are defined, so there is no need to test if that is the case.\n\nI have looked at the core libraries, and I am more confused than ever. It is in OnEnterRoom:\n\n[code:1qcjc89v]  &lt;function name=&quot;OnEnterRoom&quot; parameters=&quot;oldRoom&quot;&gt;\n    &lt;!&#91;CDATA&#91;\n    game&#46;displayroomdescriptiononstart = false\n    if (IsDefined(&quot;oldRoom&quot;)) {\n      if (oldRoom &lt;&gt; null) {\n        if (HasScript(oldRoom, &quot;onexit&quot;)) {\n          do (oldRoom, &quot;onexit&quot;)\n        }\n      }\n    }\n  // etc[/code:1qcjc89v]\n\nSo here it is apparently checking if the parameter was sent. But Quest throws an error if a function is expecting a parameter, but is not sent one (like this: &quot;[i:1qcjc89v]Error running script&#058; No parameters passed to TestFunction function - expected 1 parameters[/i:1qcjc89v]&quot;), so again it seems redundant.\n\nThe other two places it is used is in a couple of scripts. This is from Coreparser, and is related to what you said:\n\n[code:1qcjc89v]    &lt;script type=&quot;script&quot;&gt;\n      &lt;!&#91;CDATA&#91;\n      if (not IsDefined(&quot;object2&quot;)) {\n        object2 = null\n      }\n  //etc&#46;[/code:1qcjc89v]\n\nAnd in CoreTypes:\n\n[code:1qcjc89v]    &lt;changedparent type=&quot;script&quot;&gt;\n      if (game&#46;pov = this) {\n        if (IsDefined(&quot;oldvalue&quot;)) {\n          OnEnterRoom(oldvalue)\n        }\n        else {\n          OnEnterRoom(null)\n        }\n      }\n  // etc&#46;[/code:1qcjc89v]\n\nHow can oldvalue or object2 be defined in these places? Where do they exist? What is their scope? I understood variables to be defined only within the scope of the script itself.",
      "EditableFormat": "bbcode",
      "HTML": "I do not think that that makes sense. Your command pattern will only be a match if both object1 and object2 are identified. If object2 is absent, Quest says &quot;<span style=\"font-style:italic;\">I don't understand your command.</span>&quot; because the pattern matching fails. If object2 is not recognised it says &quot;<span style=\"font-style:italic;\">I can't see that. (fjghjhj)</span>&quot; (or whatever). It only runs your script if both object1 and object2 are defined, so there is no need to test if that is the case.<br/><br/>I have looked at the core libraries, and I am more confused than ever. It is in OnEnterRoom:<br/><br/><pre><code>  &lt;function name=&quot;OnEnterRoom&quot; parameters=&quot;oldRoom&quot;&gt;<br/>    &lt;!&#91;CDATA&#91;<br/>    game&#46;displayroomdescriptiononstart = false<br/>    if (IsDefined(&quot;oldRoom&quot;)) {<br/>      if (oldRoom &lt;&gt; null) {<br/>        if (HasScript(oldRoom, &quot;onexit&quot;)) {<br/>          do (oldRoom, &quot;onexit&quot;)<br/>        }<br/>      }<br/>    }<br/>  // etc</code></pre><br/><br/>So here it is apparently checking if the parameter was sent. But Quest throws an error if a function is expecting a parameter, but is not sent one (like this: &quot;<span style=\"font-style:italic;\">Error running script&#058; No parameters passed to TestFunction function - expected 1 parameters</span>&quot;), so again it seems redundant.<br/><br/>The other two places it is used is in a couple of scripts. This is from Coreparser, and is related to what you said:<br/><br/><pre><code>    &lt;script type=&quot;script&quot;&gt;<br/>      &lt;!&#91;CDATA&#91;<br/>      if (not IsDefined(&quot;object2&quot;)) {<br/>        object2 = null<br/>      }<br/>  //etc&#46;</code></pre><br/><br/>And in CoreTypes:<br/><br/><pre><code>    &lt;changedparent type=&quot;script&quot;&gt;<br/>      if (game&#46;pov = this) {<br/>        if (IsDefined(&quot;oldvalue&quot;)) {<br/>          OnEnterRoom(oldvalue)<br/>        }<br/>        else {<br/>          OnEnterRoom(null)<br/>        }<br/>      }<br/>  // etc&#46;</code></pre><br/><br/>How can oldvalue or object2 be defined in these places? Where do they exist? What is their scope? I understood variables to be defined only within the scope of the script itself.",
      "PostDate": "2013-11-13T09:24:49+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26846",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "There seems to be internal objects like oldroom which are created and handled by Quest",
      "EditableFormat": "bbcode",
      "HTML": "There seems to be internal objects like oldroom which are created and handled by Quest",
      "PostDate": "2013-11-13T10:20:58+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26847",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "It is for objects?\n\nThat makes sense, but is not at all what the Wiki says:\n[quote:2cqm9jsl]     IsDefined (string variable name) \n\nReturns a boolean indicating whether the specified variable name is defined in the current scope. [/quote:2cqm9jsl]",
      "EditableFormat": "bbcode",
      "HTML": "It is for objects?<br/><br/>That makes sense, but is not at all what the Wiki says:<br/><blockquote><p>     IsDefined (string variable name) <br/><br/>Returns a boolean indicating whether the specified variable name is defined in the current scope. </p></blockquote>",
      "PostDate": "2013-11-13T11:03:11+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26848",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[quote=&quot;The Pixie&quot;:2e9jdiyb]It is for objects?\n[/quote:2e9jdiyb]\n\nThink so, but nonetheless I would use GetObject instead of IsDefined",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite>It is for objects?<br/></blockquote><br/><br/>Think so, but nonetheless I would use GetObject instead of IsDefined",
      "PostDate": "2013-11-13T14:08:21+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26853",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "[quote=&quot;The Pixie&quot;:2izr49vd]I do not think that that makes sense. Your command pattern will only be a match if both object1 and object2 are identified. If object2 is absent, Quest says &quot;[i:2izr49vd]I don't understand your command.[/i:2izr49vd]&quot; because the pattern matching fails. If object2 is not recognised it says &quot;[i:2izr49vd]I can't see that. (fjghjhj)[/i:2izr49vd]&quot; (or whatever). It only runs your script if both object1 and object2 are defined, so there is no need to test if that is the case.[/quote:2izr49vd]\n\nIn this case I meant if your command pattern has multiple cases where some omit a variable present in others.\n\ne.g. throw #object1# at #object2#; throw #object1#\n\nIt allows the same command to account for multi object verbs and single object verbs in the same script. Although GetObject may work for this particular example, other variables like #text# wouldn't be handled.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite>I do not think that that makes sense. Your command pattern will only be a match if both object1 and object2 are identified. If object2 is absent, Quest says &quot;<span style=\"font-style:italic;\">I don't understand your command.</span>&quot; because the pattern matching fails. If object2 is not recognised it says &quot;<span style=\"font-style:italic;\">I can't see that. (fjghjhj)</span>&quot; (or whatever). It only runs your script if both object1 and object2 are defined, so there is no need to test if that is the case.</blockquote><br/><br/>In this case I meant if your command pattern has multiple cases where some omit a variable present in others.<br/><br/>e.g. throw #object1# at #object2#; throw #object1#<br/><br/>It allows the same command to account for multi object verbs and single object verbs in the same script. Although GetObject may work for this particular example, other variables like #text# wouldn't be handled.",
      "PostDate": "2013-11-14T00:52:33+00:00",
      "LastEditDate": null
    }
  ]
}
