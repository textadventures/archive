{
  "Topic": {
    "TopicId": "4014",
    "ForumId": "10",
    "Title": "Inventory message",
    "LastUpdated": "2013-11-27T06:12:58+00:00",
    "ReplyCount": 6
  },
  "Posts": [
    {
      "PostId": "26895",
      "UserId": 0,
      "Username": "m4u",
      "UserAvatar": null,
      "UserGravatar": "71ebfc011d52b6e8d2e91bc9f2fdda5a",
      "EditableText": "Hi guys,  how can I code this for the inventory message?\n\nInstead of saying:\n\n&quot;You have a thing one and a thing two&quot;\n\nSomething saying:\n\n&quot;You have:\n                (tab here) a thing one\n                (tab here) a thing two&quot;",
      "EditableFormat": "bbcode",
      "HTML": "Hi guys,  how can I code this for the inventory message?<br/><br/>Instead of saying:<br/><br/>&quot;You have a thing one and a thing two&quot;<br/><br/>Something saying:<br/><br/>&quot;You have:<br/>                (tab here) a thing one<br/>                (tab here) a thing two&quot;",
      "PostDate": "2013-11-21T15:53:53+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26896",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I don't know if there's a simple answer for this, so I'll wait a bit to answer this the complicated way in the hope someone else will step in. However I'll point you to the complicated answer and maybe you can figure it out yourself. \n\n* In the GUI click on the filter to show library elements (lower left hand corner). \n\n* Then do a search for 'inventory' (search box is in upper left hand corner). \n\n* You'll see the inventory command, click on that. \n\n* copy that into your project\n\n* In the script for that you'll see a list created from FormatObjectList, and the template CarryingListHeader. \n\n* Do a search for CarryingListHeader -- you'll want to change that eventually so copy it into your project. \n\n* Do a search for FormatObjectList. This is the complicated part. \n\n* copy it into your project\n* click on Code View in the script tool bar (second icon from the left in the toolbar on the same line as 'Script&#058;')\n* Above the script you'll see the Parameters box. These are the arguments to the function as called in the inventory command, where you saw [b:3dugljiq]FormatObjectList(Template(&quot;CarryingListHeader&quot;), game.pov, Template(&quot;And&quot;), &quot;.&quot;, true)[/b:3dugljiq]. \n So, the parameters are:\n\n  preList [i:3dugljiq]is [/i:3dugljiq] Template(&quot;CarryingListHeader&quot;)\n  parent [i:3dugljiq]is [/i:3dugljiq] game.pov\n  preFinal [i:3dugljiq]is [/i:3dugljiq] Template(&quot;And&quot;)\n  postList [i:3dugljiq]is [/i:3dugljiq] &quot;.&quot;\n  useinventoryverbs [i:3dugljiq]is [/i:3dugljiq] true\n\nThese are the elements of the inventory text returned when you do the command 'inventory', and are used in the FormatObjectList you see there in code view. \n\nIf you read the FormatObjectList code you'll notice that it calls itself, around line 15 where it says [b:3dugljiq]result = result + FormatObjectList(....)[/b:3dugljiq]. This is a recursive call and it's how it builds the full inventory list. \n\nSo, in a nutshell the complicated way is to rewrite this function to display inventory how you want. You'll also need to change the inventory command so that the parameters to FormatOBjectList are what you want. For example, you probably don't want the Template(&quot;And&quot;) in your inventory text. \n\nSorry I don't have time right now to take a cut at this but maybe someone else can, you can, or there's a simpler way I don't know. Good luck! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "I don't know if there's a simple answer for this, so I'll wait a bit to answer this the complicated way in the hope someone else will step in. However I'll point you to the complicated answer and maybe you can figure it out yourself. <br/><br/>* In the GUI click on the filter to show library elements (lower left hand corner). <br/><br/>* Then do a search for 'inventory' (search box is in upper left hand corner). <br/><br/>* You'll see the inventory command, click on that. <br/><br/>* copy that into your project<br/><br/>* In the script for that you'll see a list created from FormatObjectList, and the template CarryingListHeader. <br/><br/>* Do a search for CarryingListHeader -- you'll want to change that eventually so copy it into your project. <br/><br/>* Do a search for FormatObjectList. This is the complicated part. <br/><br/>* copy it into your project<br/>* click on Code View in the script tool bar (second icon from the left in the toolbar on the same line as 'Script&#058;')<br/>* Above the script you'll see the Parameters box. These are the arguments to the function as called in the inventory command, where you saw <span style=\"font-weight:bold;\">FormatObjectList(Template(&quot;CarryingListHeader&quot;), game.pov, Template(&quot;And&quot;), &quot;.&quot;, true)</span>. <br/> So, the parameters are:<br/><br/>  preList <span style=\"font-style:italic;\">is </span> Template(&quot;CarryingListHeader&quot;)<br/>  parent <span style=\"font-style:italic;\">is </span> game.pov<br/>  preFinal <span style=\"font-style:italic;\">is </span> Template(&quot;And&quot;)<br/>  postList <span style=\"font-style:italic;\">is </span> &quot;.&quot;<br/>  useinventoryverbs <span style=\"font-style:italic;\">is </span> true<br/><br/>These are the elements of the inventory text returned when you do the command 'inventory', and are used in the FormatObjectList you see there in code view. <br/><br/>If you read the FormatObjectList code you'll notice that it calls itself, around line 15 where it says <span style=\"font-weight:bold;\">result = result + FormatObjectList(....)</span>. This is a recursive call and it's how it builds the full inventory list. <br/><br/>So, in a nutshell the complicated way is to rewrite this function to display inventory how you want. You'll also need to change the inventory command so that the parameters to FormatOBjectList are what you want. For example, you probably don't want the Template(&quot;And&quot;) in your inventory text. <br/><br/>Sorry I don't have time right now to take a cut at this but maybe someone else can, you can, or there's a simpler way I don't know. Good luck! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-11-21T16:59:23+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26898",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "[quote=&quot;george&quot;\n* Do a search for FormatObjectList. This is the complicated part. \n* copy it into your project\n[/quote]\n\nIt's better not to change FormatObjectList because it is used in the &quot;Youcansee&quot; function, too.\nSo it is better to create a similar function, something like this:\n\n[code:1ls75xkn]\n    &lt;function name=&quot;FormatObjectList2&quot; type=&quot;string&quot; parameters=&quot;preList, parent, preFinal, postList, useinventoryverbs&quot;&gt;\n    &lt;!&#91;CDATA&#91;\n    result = &quot;&quot;\n    count = 0\n    list = RemoveSceneryObjects(GetDirectChildren(parent))\n    if (CheckDarkness()) {\n      list = RemoveDarkObjects(list)\n    }\n    listLength = ListCount(list)\n    foreach (item, list) {\n      if (LengthOf(result) = 0) result = preList + &quot;&lt;br/&gt;&quot;\n      verbs = GetDisplayVerbs(item)\n      result = result + &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot; + GetDisplayNameLink(item, &quot;object&quot;)\n\n      count = count + 1\n      if (count = listLength - 1) {\n        result = result + &quot;&lt;br/&gt;&quot;\n      }\n      else if (count &lt; listLength) {\n        result = result + &quot;&lt;br/&gt;&quot;\n      }\n    }\n    return (result)\n  &#93;&#93;&gt;\n  &lt;/function&gt;[/code:1ls75xkn]\n\nThis function should do what you want, just change the call of the function in the inventory command from FormatObjectList to FormatObjectList2",
      "EditableFormat": "bbcode",
      "HTML": "[quote=&quot;george&quot;<br/>* Do a search for FormatObjectList. This is the complicated part. <br/>* copy it into your project<br/>[/quote]<br/><br/>It's better not to change FormatObjectList because it is used in the &quot;Youcansee&quot; function, too.<br/>So it is better to create a similar function, something like this:<br/><br/><pre><code><br/>    &lt;function name=&quot;FormatObjectList2&quot; type=&quot;string&quot; parameters=&quot;preList, parent, preFinal, postList, useinventoryverbs&quot;&gt;<br/>    &lt;!&#91;CDATA&#91;<br/>    result = &quot;&quot;<br/>    count = 0<br/>    list = RemoveSceneryObjects(GetDirectChildren(parent))<br/>    if (CheckDarkness()) {<br/>      list = RemoveDarkObjects(list)<br/>    }<br/>    listLength = ListCount(list)<br/>    foreach (item, list) {<br/>      if (LengthOf(result) = 0) result = preList + &quot;&lt;br/&gt;&quot;<br/>      verbs = GetDisplayVerbs(item)<br/>      result = result + &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot; + GetDisplayNameLink(item, &quot;object&quot;)<br/><br/>      count = count + 1<br/>      if (count = listLength - 1) {<br/>        result = result + &quot;&lt;br/&gt;&quot;<br/>      }<br/>      else if (count &lt; listLength) {<br/>        result = result + &quot;&lt;br/&gt;&quot;<br/>      }<br/>    }<br/>    return (result)<br/>  &#93;&#93;&gt;<br/>  &lt;/function&gt;</code></pre><br/><br/>This function should do what you want, just change the call of the function in the inventory command from FormatObjectList to FormatObjectList2",
      "PostDate": "2013-11-21T21:43:40+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26899",
      "UserId": 0,
      "Username": "Liam315",
      "UserAvatar": null,
      "UserGravatar": "ded290a24d340d761d42c897d08111aa",
      "EditableText": "This is the code I used to display my inventory as a list:\n[code:3iz7diw0]if (ListCount(RemoveSceneryObjects(ScopeInventory())) = 0) {\n  msg (&quot;You are not carrying anything&#46;&quot;)\n}\nelse {\n  msg (&quot;You are carrying&#58;&lt;br/&gt;&quot;)\n  foreach (item, GetDirectChildren(game&#46;pov)) {\n    if (not item&#46;scenery) {\n      if ((not item&#46;usedefaultprefix) and (item&#46;prefix = null)) {\n        msg (CapFirst(item&#46;alias))\n      }\n      else {\n        invitem = GetDisplayNameLink(item,&quot;object&quot;)\n        if (CanSeeThrough(item)) {\n          invitem = invitem + FormatObjectList(&quot; (&quot; + item&#46;contentsprefix, item, Template(&quot;And&quot;), &quot;)&quot;, False)\n        }\n        msg (CapFirst(invitem))\n      }\n    }\n  }\n}[/code:3iz7diw0]\nYou might notice the part that says [code:3iz7diw0]    if (not item&#46;scenery) {\n      if ((not item&#46;usedefaultprefix) and (item&#46;prefix = null)) {\n        msg (CapFirst(item&#46;alias))\n      }[/code:3iz7diw0]\nThere was an issue where items without a prefix weren't capitalising which this fixes, but it will cause you problems if you have some objects that don't have an alias.\n\n\nOn the subject of inserting tabs like you would on a word processor, the concept doesn't exist within html. What you can do is use the following: &amp;nbsp\nIt stands for non-breaking space and it forces the whitespace to be preserved rather than collapsed into a single space. Put a few of those in front of the item in the above code and it should replicate the effect you're after.",
      "EditableFormat": "bbcode",
      "HTML": "This is the code I used to display my inventory as a list:<br/><pre><code>if (ListCount(RemoveSceneryObjects(ScopeInventory())) = 0) {<br/>  msg (&quot;You are not carrying anything&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;You are carrying&#58;&lt;br/&gt;&quot;)<br/>  foreach (item, GetDirectChildren(game&#46;pov)) {<br/>    if (not item&#46;scenery) {<br/>      if ((not item&#46;usedefaultprefix) and (item&#46;prefix = null)) {<br/>        msg (CapFirst(item&#46;alias))<br/>      }<br/>      else {<br/>        invitem = GetDisplayNameLink(item,&quot;object&quot;)<br/>        if (CanSeeThrough(item)) {<br/>          invitem = invitem + FormatObjectList(&quot; (&quot; + item&#46;contentsprefix, item, Template(&quot;And&quot;), &quot;)&quot;, False)<br/>        }<br/>        msg (CapFirst(invitem))<br/>      }<br/>    }<br/>  }<br/>}</code></pre><br/>You might notice the part that says <pre><code>    if (not item&#46;scenery) {<br/>      if ((not item&#46;usedefaultprefix) and (item&#46;prefix = null)) {<br/>        msg (CapFirst(item&#46;alias))<br/>      }</code></pre><br/>There was an issue where items without a prefix weren't capitalising which this fixes, but it will cause you problems if you have some objects that don't have an alias.<br/><br/><br/>On the subject of inserting tabs like you would on a word processor, the concept doesn't exist within html. What you can do is use the following: &amp;nbsp<br/>It stands for non-breaking space and it forces the whitespace to be preserved rather than collapsed into a single space. Put a few of those in front of the item in the above code and it should replicate the effect you're after.",
      "PostDate": "2013-11-22T00:28:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26907",
      "UserId": 0,
      "Username": "m4u",
      "UserAvatar": null,
      "UserGravatar": "71ebfc011d52b6e8d2e91bc9f2fdda5a",
      "EditableText": "Thank you guys!  it's working.  How can i achieve the same with the children list? Meaning when you type inventory something that says:\n\na thing containing:\n(tab) a thing one\n(tab) a thing two",
      "EditableFormat": "bbcode",
      "HTML": "Thank you guys!  it's working.  How can i achieve the same with the children list? Meaning when you type inventory something that says:<br/><br/>a thing containing:<br/>(tab) a thing one<br/>(tab) a thing two",
      "PostDate": "2013-11-22T20:44:20+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26917",
      "UserId": 0,
      "Username": "m4u",
      "UserAvatar": null,
      "UserGravatar": "71ebfc011d52b6e8d2e91bc9f2fdda5a",
      "EditableText": "Anyone?",
      "EditableFormat": "bbcode",
      "HTML": "Anyone?",
      "PostDate": "2013-11-25T17:12:19+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "26928",
      "UserId": 0,
      "Username": "george",
      "UserAvatar": null,
      "UserGravatar": "dc6fe8e6172303d85249a13c9a49c1ff",
      "EditableText": "I modified Pertex's code a bit. It plays like this, \n\n[code:1kottzsg]\n&gt; i\nYou are carrying\n     a potion containing\n          a genie\n     a necklace containing\n          a pearl\n          a pendant\n[/code:1kottzsg]\n\nThe new FormatObjectList2 is\n\n[code:1kottzsg]\n&lt;function name=&quot;FormatObjectList2&quot; parameters=&quot;preList, parent, preFinal, postList, useinventoryverbs, level&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    result = &quot;&quot;\n    count = 0\n    list = RemoveSceneryObjects(GetDirectChildren(parent))\n    if (CheckDarkness()) {\n      list = RemoveDarkObjects(list)\n    }\n    listLength = ListCount(list)\n    this_level = level\n    foreach (item, list) {\n      level = this_level\n      if (LengthOf(result) = 0) {\n        result = preList + &quot;&lt;br/&gt;&quot;\n      }\n      verbs = GetDisplayVerbs(item)\n      result = result + Join(Repeat(level * 5, &quot;&amp;nbsp;&quot;), &quot;&quot;) + GetDisplayNameLink(item, &quot;object&quot;)\n      if (CanSeeThrough(item)) {\n        level = level + 1\n        result = result + FormatObjectList2(&quot; &quot; + item&#46;contentsprefix, item, preFinal, &quot;&quot;, useinventoryverbs, level)\n      }\n      count = count + 1\n      if (count &lt; listLength) {\n        result = result + &quot;&lt;br/&gt;&quot;\n      }\n    }\n    return (result)\n  &#93;&#93;&gt;&lt;/function&gt;\n[/code:1kottzsg]\n\nI added the [b:1kottzsg]level [/b:1kottzsg]parameter to keep track of the inventory nesting level. The [b:1kottzsg]this_level[/b:1kottzsg] local variable is necessary to keep track of the proper level as you go down the main inventory list, showing children of objects in inventory. For convenience I added a [b:1kottzsg]Repeat [/b:1kottzsg]function which is this, \n\n[code:1kottzsg]\n  &lt;function name=&quot;Repeat&quot; parameters=&quot;n, s&quot; type=&quot;stringlist&quot;&gt;&lt;!&#91;CDATA&#91;\n    ss = NewStringList()\n    count = 0\n    while (count &lt; n) {\n      count = count + 1\n      list add (ss, s)\n    }\n    return (ss)\n  &#93;&#93;&gt;&lt;/function&gt;\n[/code:1kottzsg]\n\nNote you must modify the inventory command so it calls FormatObjectList2 like, \n\n[b:1kottzsg]FormatObjectList2(Template(&quot;CarryingListHeader&quot;), game.pov, Template(&quot;And&quot;), &quot;.&quot;, true, 1)\n[/b:1kottzsg]\nwhere '1' is the level parameter.",
      "EditableFormat": "bbcode",
      "HTML": "I modified Pertex's code a bit. It plays like this, <br/><br/><pre><code><br/>&gt; i<br/>You are carrying<br/>     a potion containing<br/>          a genie<br/>     a necklace containing<br/>          a pearl<br/>          a pendant<br/></code></pre><br/><br/>The new FormatObjectList2 is<br/><br/><pre><code><br/>&lt;function name=&quot;FormatObjectList2&quot; parameters=&quot;preList, parent, preFinal, postList, useinventoryverbs, level&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    result = &quot;&quot;<br/>    count = 0<br/>    list = RemoveSceneryObjects(GetDirectChildren(parent))<br/>    if (CheckDarkness()) {<br/>      list = RemoveDarkObjects(list)<br/>    }<br/>    listLength = ListCount(list)<br/>    this_level = level<br/>    foreach (item, list) {<br/>      level = this_level<br/>      if (LengthOf(result) = 0) {<br/>        result = preList + &quot;&lt;br/&gt;&quot;<br/>      }<br/>      verbs = GetDisplayVerbs(item)<br/>      result = result + Join(Repeat(level * 5, &quot;&amp;nbsp;&quot;), &quot;&quot;) + GetDisplayNameLink(item, &quot;object&quot;)<br/>      if (CanSeeThrough(item)) {<br/>        level = level + 1<br/>        result = result + FormatObjectList2(&quot; &quot; + item&#46;contentsprefix, item, preFinal, &quot;&quot;, useinventoryverbs, level)<br/>      }<br/>      count = count + 1<br/>      if (count &lt; listLength) {<br/>        result = result + &quot;&lt;br/&gt;&quot;<br/>      }<br/>    }<br/>    return (result)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/></code></pre><br/><br/>I added the <span style=\"font-weight:bold;\">level </span>parameter to keep track of the inventory nesting level. The <span style=\"font-weight:bold;\">this_level</span> local variable is necessary to keep track of the proper level as you go down the main inventory list, showing children of objects in inventory. For convenience I added a <span style=\"font-weight:bold;\">Repeat </span>function which is this, <br/><br/><pre><code><br/>  &lt;function name=&quot;Repeat&quot; parameters=&quot;n, s&quot; type=&quot;stringlist&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    ss = NewStringList()<br/>    count = 0<br/>    while (count &lt; n) {<br/>      count = count + 1<br/>      list add (ss, s)<br/>    }<br/>    return (ss)<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/></code></pre><br/><br/>Note you must modify the inventory command so it calls FormatObjectList2 like, <br/><br/><span style=\"font-weight:bold;\">FormatObjectList2(Template(&quot;CarryingListHeader&quot;), game.pov, Template(&quot;And&quot;), &quot;.&quot;, true, 1)<br/></span><br/>where '1' is the level parameter.",
      "PostDate": "2013-11-27T06:12:58+00:00",
      "LastEditDate": null
    }
  ]
}
