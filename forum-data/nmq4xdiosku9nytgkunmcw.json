{
  "Topic": {
    "TopicId": "nmq4xdiosku9nytgkunmcw",
    "ForumId": "10",
    "Title": "Command scope and unresolved text",
    "LastUpdated": "2020-11-14T13:34:08.6563866Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "7c036a72-8e31-457b-b73e-29409353488c",
      "UserId": 32920,
      "Username": "Father",
      "AvatarUrl": "http://i.imgur.com/ogRXH9lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Could some kind person explain to a non coder in simple terms how to use command scope .\r\nI want player to be carrying the object Box  and see object Front door to use the command. I suppose I could use if / else but I find that too complicated with multi options. I always end in a muddle.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Could some kind person explain to a non coder in simple terms how to use command scope .<br>\nI want player to be carrying the object Box  and see object Front door to use the command. I suppose I could use if / else but I find that too complicated with multi options. I always end in a muddle.</p>\n\n",
      "PostDate": "2020-11-14T13:34:08.6563866Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fadb8ee3-76b7-4bf5-a009-307d5267c489",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Are both the box and the door mentioned in the command the player will be typing?\r\n\r\nIf you have two objects in different scopes for a command, the scope will be a little more complex.\r\n\r\nFor example, if the command you are looking for is \"throw box at door\", and your throw command has the pattern `throw #object1# at #object2#`, then you could give it the scope `object1=inventory|object2=room` to indicate that this command is used to throw an object in the inventory at an object in the room.\r\n\r\nHowever, if the player types the full name of an object that is in the wrong scope, the command will still run. So you will still need to have a few `if` statements in the command's script to make sure that the player is trying to do something sane. A common way to do this would be to check the possible error conditions one by one, and use the `else` clause for actually running the command. For example:\r\n```\r\nif (not Got (object1)) {\r\n  // Object1 isn't in the inventory\r\n  msg (\"You can't throw something you don't have\")\r\n}\r\nelse if (Got (object2)) {\r\n  // object2 is in the inventory\r\n  msg (\"I can't throw it into my pocket\")\r\n}\r\nelse if (not object1 = box) {\r\n  // trying to throw the wrong object\r\n  msg (\"that's too valuable to throw\")\r\n}\r\nelse if (not object1 = door) {\r\n  // trying to throw at the wrong object\r\n  msg (\"that doesn't seem like a good place to throw it\")\r\n}\r\nelse {\r\n  // nothing's gone wrong, so we do the command\r\n  msg (\"You throw it at the door. Something happens.\")\r\n  // whatever other scripts you need to do here\r\n}\r\n```\r\n\r\n<hr/>\r\n\r\nOn the other hand, if the objects are used implicitly, then those if statements are all you need.\r\nFor example, in my remake of 'Circus', there is a command \"syphon fuel\" which you can only do if you have a snorkel and are in the same room as the generator. That command's scope is simply \"room\", because the only object mentioned in the command is 'fuel', which needs to be in the room. The snorkel isn't mentioned in the command the player types, so the scope ignores it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Are both the box and the door mentioned in the command the player will be typing?</p>\n<p>If you have two objects in different scopes for a command, the scope will be a little more complex.</p>\n<p>For example, if the command you are looking for is \"throw box at door\", and your throw command has the pattern <code>throw #object1# at #object2#</code>, then you could give it the scope <code>object1=inventory|object2=room</code> to indicate that this command is used to throw an object in the inventory at an object in the room.</p>\n<p>However, if the player types the full name of an object that is in the wrong scope, the command will still run. So you will still need to have a few <code>if</code> statements in the command's script to make sure that the player is trying to do something sane. A common way to do this would be to check the possible error conditions one by one, and use the <code>else</code> clause for actually running the command. For example:</p>\n<pre><code>if (not Got (object1)) {\n  // Object1 isn't in the inventory\n  msg (\"You can't throw something you don't have\")\n}\nelse if (Got (object2)) {\n  // object2 is in the inventory\n  msg (\"I can't throw it into my pocket\")\n}\nelse if (not object1 = box) {\n  // trying to throw the wrong object\n  msg (\"that's too valuable to throw\")\n}\nelse if (not object1 = door) {\n  // trying to throw at the wrong object\n  msg (\"that doesn't seem like a good place to throw it\")\n}\nelse {\n  // nothing's gone wrong, so we do the command\n  msg (\"You throw it at the door. Something happens.\")\n  // whatever other scripts you need to do here\n}\n</code></pre>\n<hr>\n<p>On the other hand, if the objects are used implicitly, then those if statements are all you need.<br>\nFor example, in my remake of 'Circus', there is a command \"syphon fuel\" which you can only do if you have a snorkel and are in the same room as the generator. That command's scope is simply \"room\", because the only object mentioned in the command is 'fuel', which needs to be in the room. The snorkel isn't mentioned in the command the player types, so the scope ignores it.</p>\n\n",
      "PostDate": "2020-11-14T15:53:12.7310107Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
