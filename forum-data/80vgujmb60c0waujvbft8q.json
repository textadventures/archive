{
  "Topic": {
    "TopicId": "80vgujmb60c0waujvbft8q",
    "ForumId": "10",
    "Title": "Question about VB",
    "LastUpdated": "2019-10-10T07:06:54.6984935Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "22679dfc-b4d4-4a79-9e03-3492dbcd8a49",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/HEtnsWqb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm just curious. \r\n\r\nIs there a way for Quest to completely remove VB and replace it with another coding language to make Quest available on all platforms? Or is this not the only problem? \r\n\r\nI ask because although Windows is used by like 96% of the world and most of the other platforms like Mac and Android are the other 4% ---it would be nice to be able to play games on all platforms. \r\n\r\nThanks in advance :) \r\n\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm just curious.</p>\n<p>Is there a way for Quest to completely remove VB and replace it with another coding language to make Quest available on all platforms? Or is this not the only problem?</p>\n<p>I ask because although Windows is used by like 96% of the world and most of the other platforms like Mac and Android are the other 4% ---it would be nice to be able to play games on all platforms.</p>\n<p>Thanks in advance :)</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2019-10-10T07:06:54.6984935Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9d189beb-8b5c-46f7-bbfe-46cbdc09c6d7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This would basically mean rewriting the engine from the ground up. It's not just a case of translating commands to their equivalents in another language, because different frameworks are structured differently.\r\n\r\nIn theory, all you need is someone willing to put in a hell of a lot of grunt work writing new code. But it would take a long time; and  then there's always the chance that something doesn't work right. A significant chunk of Quest's underlying code is a tissue of bodges and patches overlaid onto each other (`get input` and `wait` specifically come to mind). And a lot of these features aren't properly documented, so it would need to be done by somebody with good problem-solving skills, and also a good knowledge of VB/C# in order to understand the original code.\r\n\r\nI've thought about attempting it; and I'm pretty sure I could do it; but it would likely take a very long time, and I don't work well under pressure (at all). I'm pretty sure I could rebuild it entirely in Javascript, apart from unzipping the .quest files. (There is a javascript implementation of the zip algorithm, but it's slow and unreliable; and depending on the player's browser settings it's likely to run out of memory on games close to 20MB (because different browsers set different limits on how much memory JS is permitted).\r\n\r\nI believe that Quest 6 is being built entirely in JS, but that's a new engine which shares a lot of Quest's commands. So porting your game to it would mean learning a new language and then rewriting all the code you've already got. (Somebody correct me if I'm wrong here?)\r\n\r\nIn fact, the problem isn't even VB. Most games or software created for windows can be made to run on BSD or linux with abstraction layers like Pipelight, Mono, or WINE. The reason this doesn't work for Quest is that it's built around WPF ­(a system to make window layout easier), and WPF is pretty much used by the toy projects that programmers make while they're learning the language. If you ask on the WINE forums about getting WPF support on linux, they immediately know you're talking about Quest because it's about the only released software using it.\r\n\r\nAnyway, I'm rambling.\r\nI've started rebuilding Quest in pure javascript. I've got the XML parser, object model, and the bare bones of an IASL syntax parser. But that still means I need to write all the built-in commands (including low level stuff like `if`), as well as the framework to select, download, or unzip the published game file. It's a big job, and I'd estimate I'm at something like 3%. That's something to work on next once I've got SaveStateLib working.",
      "EditableFormat": "markdown",
      "HTML": "<p>This would basically mean rewriting the engine from the ground up. It's not just a case of translating commands to their equivalents in another language, because different frameworks are structured differently.</p>\n<p>In theory, all you need is someone willing to put in a hell of a lot of grunt work writing new code. But it would take a long time; and  then there's always the chance that something doesn't work right. A significant chunk of Quest's underlying code is a tissue of bodges and patches overlaid onto each other (<code>get input</code> and <code>wait</code> specifically come to mind). And a lot of these features aren't properly documented, so it would need to be done by somebody with good problem-solving skills, and also a good knowledge of VB/C# in order to understand the original code.</p>\n<p>I've thought about attempting it; and I'm pretty sure I could do it; but it would likely take a very long time, and I don't work well under pressure (at all). I'm pretty sure I could rebuild it entirely in Javascript, apart from unzipping the .quest files. (There is a javascript implementation of the zip algorithm, but it's slow and unreliable; and depending on the player's browser settings it's likely to run out of memory on games close to 20MB (because different browsers set different limits on how much memory JS is permitted).</p>\n<p>I believe that Quest 6 is being built entirely in JS, but that's a new engine which shares a lot of Quest's commands. So porting your game to it would mean learning a new language and then rewriting all the code you've already got. (Somebody correct me if I'm wrong here?)</p>\n<p>In fact, the problem isn't even VB. Most games or software created for windows can be made to run on BSD or linux with abstraction layers like Pipelight, Mono, or WINE. The reason this doesn't work for Quest is that it's built around WPF ­(a system to make window layout easier), and WPF is pretty much used by the toy projects that programmers make while they're learning the language. If you ask on the WINE forums about getting WPF support on linux, they immediately know you're talking about Quest because it's about the only released software using it.</p>\n<p>Anyway, I'm rambling.<br>\nI've started rebuilding Quest in pure javascript. I've got the XML parser, object model, and the bare bones of an IASL syntax parser. But that still means I need to write all the built-in commands (including low level stuff like <code>if</code>), as well as the framework to select, download, or unzip the published game file. It's a big job, and I'd estimate I'm at something like 3%. That's something to work on next once I've got SaveStateLib working.</p>\n\n",
      "PostDate": "2019-10-10T08:41:24.4897522Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bf6eddd2-cfd0-4c70-a4df-dd3c9e0cecc5",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "https://i.imgur.com/O07mlRtb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hasn't Pixie already made a lot of progress with Quest 6 in JS?  Maybe you could coordinate with him.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hasn't Pixie already made a lot of progress with Quest 6 in JS?  Maybe you could coordinate with him.</p>\n\n",
      "PostDate": "2019-10-10T09:05:38.5872066Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "fa2fbc45-749f-4f4d-bc51-dffc8b178e35",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Hasn't Pixie already made a lot of progress with Quest 6 in JS? Maybe you could coordinate with him.\r\n\r\nAs far as I'm aware he's treating it as a new platform. It will not be possible to play or convert games from older versions of Quest.\r\n\r\nMy objective is to provide a 'way forward' for people currently using Quest without causing a flag day; I'm not really interested in switching to a new engine, even if it shares many of the same function names.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Hasn't Pixie already made a lot of progress with Quest 6 in JS? Maybe you could coordinate with him.</p>\n</blockquote>\n<p>As far as I'm aware he's treating it as a new platform. It will not be possible to play or convert games from older versions of Quest.</p>\n<p>My objective is to provide a 'way forward' for people currently using Quest without causing a flag day; I'm not really interested in switching to a new engine, even if it shares many of the same function names.</p>\n\n",
      "PostDate": "2019-10-10T10:33:06.352326Z",
      "LastEditDate": "2019-10-10T11:56:55.8273565Z",
      "link": null
    }
  ]
}
