{
  "Topic": {
    "TopicId": "q90u40bwy0wzqvxqmtrpbw",
    "ForumId": "3",
    "Title": "Two questions for Quest veterans",
    "LastUpdated": "2018-03-20T22:57:00.098982Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "11d60488-a3c4-4b2e-922c-cc9d6bf1122e",
      "UserId": 326173,
      "Username": "Curt A. P.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/bc1d5d57408cf4d13f9d9f23c1e3dc56?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So I'm working for a half year on my first idea. I  restarted my project two times because I messed up...\r\n\r\nMy questions for the experienced Quest users/devs is, \r\n**how is your working-flow?**\r\n..and..\r\n**How do you keep the project organized?**\r\n\r\nFor now I created some checklists with **tiddlywiki** parallel to my project.\r\nI add all items, locations, NPCs, etc. into my personal wiki and create some check boxes to check for the tested and wished response.... after test play ...",
      "EditableFormat": "markdown",
      "HTML": "<p>So I'm working for a half year on my first idea. I  restarted my project two times because I messed up...</p>\n<p>My questions for the experienced Quest users/devs is,<br>\n<strong>how is your working-flow?</strong><br>\n..and..<br>\n<strong>How do you keep the project organized?</strong></p>\n<p>For now I created some checklists with <strong>tiddlywiki</strong> parallel to my project.<br>\nI add all items, locations, NPCs, etc. into my personal wiki and create some check boxes to check for the tested and wished response.... after test play ...</p>\n\n",
      "PostDate": "2018-03-20T22:57:00.098982Z",
      "LastEditDate": "2018-03-20T22:57:56.0835981Z",
      "link": null
    },
    {
      "PostId": "73d5c29f-9dc0-49c9-a040-13e470056b55",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n------------------\r\n\r\nwell, there's OOP/OOD (Object Oriented Programming/Design), using encapsulation (\"compartmentalization/organization\", in quest: library files and Objects), for examples:\r\n\r\nI like having one library file, be my omni-resource of notes, code, and etc, that I personally just use as a reference (NOT used as an actual library file used by a game file, and for copy-pasting of code from it into what-ever/where-ever it's to be used), for example:\r\n\r\nresource_library_file.aslx\r\n\r\n```\r\n<library>\r\n\r\n  <!--\r\n  New Default Game Code\r\n  -->\r\n\r\n  <asl version=\"550\">\r\n\r\n    <include ref=\"English.aslx\" />\r\n    <include ref=\"Core.aslx\" />\r\n\r\n    <game name=\"NAME_OF_GAME\">\r\n\r\n      <gameid>SOME_RANDOMLY_GENERATED_HASH_STRING</gameid>\r\n      <version>YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER</version\r\n      <firstpublished>CURRENT_YEAR</firstpublished\r\n\r\n    </game>\r\n\r\n    <object name=\"room\">\r\n\r\n      <inherit name=\"editor_room\" />\r\n\r\n      <object name=\"player\">\r\n\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"editor_player\" />\r\n\r\n      </object>\r\n\r\n    </object>\r\n\r\n  </asl>\r\n\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Library Files\r\n  -->\r\n\r\n  <!--\r\n  Default Engine and Language Library Files\r\n  -->\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <!--\r\n  Custom Engine and Language Library Files\r\n  -->\r\n\r\n  <!--\r\n  Custom Library files\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Delegates\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Templates\r\n  -->  \r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Objects\r\n  -->\r\n\r\n  <!--\r\n  The 'game' Game Settings Object\r\n  -->\r\n\r\n  <game name=\"NAME_OF_GAME\">\r\n\r\n    <gameid>SOME_RANDOMLY_GENERATED_HASH_STRING</gameid>\r\n    <version>YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER</version>\r\n    <firstpublished>CURRENT_YEAR</firstpublished>\r\n    <author>NAME_OF_AUTHOR</author>\r\n    <subtitle>SUBTITLE</subtitle\r\n    <description>ONLINE_DESCRIPTION_OF_GAME</description>\r\n    <category>CATEGORY_OF_GAME</category>\r\n\r\n    <!--\r\n    ETC built-in and/or custom ATTRIBUTES\r\n    -->\r\n\r\n    <attr name=\"start\" type=\"script\">\r\n      // SCRIPTING\r\n    </attr>\r\n\r\n  </game>\r\n\r\n  <!--\r\n  Room Objects\r\n  -->\r\n\r\n  <object name=\"room\">\r\n\r\n    <inherit name=\"editor_room\" />\r\n\r\n  </object>\r\n\r\n  <!--\r\n  Player Objects\r\n  -->\r\n\r\n  <object name=\"player\">\r\n    <inherit name=\"editor_object\" />\r\n    <inherit name=\"editor_player\" />\r\n  </object>\r\n\r\n  <!--\r\n  Non-Player Objects\r\n  -->\r\n\r\n  <!--\r\n  Item Objects\r\n  -->\r\n\r\n  <!--\r\n  Usable Item Objects\r\n  -->\r\n\r\n  <!--\r\n  Battle Item Objects\r\n  -->\r\n\r\n  <!--\r\n  Quest/Special/Key Item Objects\r\n  -->\r\n\r\n  <!--\r\n  Equipment Objects\r\n  -->\r\n\r\n  <!--\r\n  Weapon Equipment Objects\r\n  -->\r\n\r\n  <!--\r\n  Armor Equipment Objects\r\n  -->\r\n\r\n  <!--\r\n  Clothing Equipment Objects\r\n  -->\r\n\r\n  <!--\r\n  Spell Objects\r\n  -->\r\n\r\n  <!--\r\n  Storage Objects\r\n  -->\r\n\r\n  <!--\r\n  Exterior Objects\r\n  -->\r\n\r\n  <!--\r\n  Interior Objects\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Object Types\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Turnscripts\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Timers\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Verbs\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Commands\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Functions\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Systems\r\n  -->\r\n\r\n  <!--\r\n  Leveling System\r\n  -->\r\n\r\n  <!--\r\n  Combat System\r\n  -->\r\n\r\n  <!--\r\n  Equipment System\r\n  -->\r\n\r\n  <!--\r\n  Magic System\r\n  -->\r\n\r\n  <!--\r\n  Stealth/Detection System (stealing/planting, sneaking, etc)\r\n  -->\r\n\r\n  <!--\r\n  Transaction (\"shopping\") System\r\n  -->\r\n\r\n  <!--\r\n  Item System\r\n  -->\r\n\r\n  <!--\r\n  Diplomacy (Dialogue/Conversation/etc) System\r\n  -->\r\n\r\n  <!--\r\n  Record (Journal/Note-Taking) System\r\n  -->\r\n\r\n  <!--\r\n  Storage System\r\n  -->\r\n\r\n  <!--\r\n  Date and Time (and etc) System\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Attributes\r\n  -->\r\n\r\n  <--\r\n  Boolean Attributes\r\n  -->\r\n\r\n  <--\r\n  Integer Attributes\r\n  -->\r\n\r\n  <--\r\n  Double (Decimal numbers: Floats / Floating-Points) Attributes\r\n  -->\r\n\r\n  <--\r\n  String Attributes\r\n  -->\r\n\r\n  <--\r\n  Object Attributes\r\n  -->\r\n\r\n  <--\r\n  List Attributes\r\n  -->\r\n\r\n  <--\r\n  Dictionary Attributes\r\n  -->\r\n\r\n  <--\r\n  Inherited Attributes\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Game Mechanics (Equations/Formulas/Etc)\r\n  -->\r\n\r\n  <!--\r\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\r\n  -->\r\n\r\n  <!--\r\n  Personal Notes and Etc\r\n  -->\r\n\r\n</library>\r\n```\r\n\r\n-----\r\n\r\nand then you can have library files as encapsulation:\r\n\r\ncombat.aslx\r\nmagic.aslx\r\nfire_spells.aslx\r\nplayer_objects.aslx\r\nnon_player_objects.aslx\r\nmonsters.aslx\r\nroom_objects.aslx\r\nitems.aslx\r\nequipment.aslx\r\nweapons.aslx\r\nswords.aslx\r\nstorage.aslx\r\netc etc etc\r\n\r\n---------\r\n\r\nexample of (how to) using library files and of a library file (a 'monster' library file):\r\n\r\nexample_game_file.aslx\r\n\r\n```\r\n<asl version=\"550\">\r\n\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n\r\n  <include ref=\"monsters.aslx\" />\r\n\r\n  <game name=\"NAME_OF_GAME\">\r\n\r\n    <gameid>SOME_RANDOMLY_GENERATED_HASH_STRING</gameid>\r\n    <version>YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER</version\r\n    <firstpublished>CURRENT_YEAR</firstpublished\r\n\r\n  </game>\r\n\r\n    <object name=\"room\">\r\n\r\n      <inherit name=\"editor_room\" />\r\n\r\n      <object name=\"player\">\r\n\r\n        <inherit name=\"editor_object\" />\r\n        <inherit name=\"editor_player\" />\r\n\r\n      </object>\r\n\r\n    </object>\r\n\r\n  </asl>\r\n```\r\n\r\nmonsters.aslx\r\n\r\n(This 'monsters.aslx' Library File and any Library File,  has to be in the same folder as your 'example_game_file.aslx' Game file, for quest to be able to find and use the library file within your game file)\r\n\r\n```\r\n<library>\r\n\r\n  <object name=\"orc\">\r\n  </object>\r\n\r\n  <object name=\"ogre\">\r\n  </object>\r\n\r\n  <object name=\"dragon\">\r\n  </object>\r\n\r\n  <object name=\"skeleton\">\r\n  </object>\r\n\r\n</library>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>well, there's OOP/OOD (Object Oriented Programming/Design), using encapsulation (\"compartmentalization/organization\", in quest: library files and Objects), for examples:</p>\n<p>I like having one library file, be my omni-resource of notes, code, and etc, that I personally just use as a reference (NOT used as an actual library file used by a game file, and for copy-pasting of code from it into what-ever/where-ever it's to be used), for example:</p>\n<p>resource_library_file.aslx</p>\n<pre><code>&lt;library&gt;\n\n  &lt;!--\n  New Default Game Code\n  --&gt;\n\n  &lt;asl version=\"550\"&gt;\n\n    &lt;include ref=\"English.aslx\" /&gt;\n    &lt;include ref=\"Core.aslx\" /&gt;\n\n    &lt;game name=\"NAME_OF_GAME\"&gt;\n\n      &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HASH_STRING&lt;/gameid&gt;\n      &lt;version&gt;YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER&lt;/version\n      &lt;firstpublished&gt;CURRENT_YEAR&lt;/firstpublished\n\n    &lt;/game&gt;\n\n    &lt;object name=\"room\"&gt;\n\n      &lt;inherit name=\"editor_room\" /&gt;\n\n      &lt;object name=\"player\"&gt;\n\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"editor_player\" /&gt;\n\n      &lt;/object&gt;\n\n    &lt;/object&gt;\n\n  &lt;/asl&gt;\n\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Library Files\n  --&gt;\n\n  &lt;!--\n  Default Engine and Language Library Files\n  --&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;!--\n  Custom Engine and Language Library Files\n  --&gt;\n\n  &lt;!--\n  Custom Library files\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Delegates\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Templates\n  --&gt;  \n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Objects\n  --&gt;\n\n  &lt;!--\n  The 'game' Game Settings Object\n  --&gt;\n\n  &lt;game name=\"NAME_OF_GAME\"&gt;\n\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HASH_STRING&lt;/gameid&gt;\n    &lt;version&gt;YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER&lt;/version&gt;\n    &lt;firstpublished&gt;CURRENT_YEAR&lt;/firstpublished&gt;\n    &lt;author&gt;NAME_OF_AUTHOR&lt;/author&gt;\n    &lt;subtitle&gt;SUBTITLE&lt;/subtitle\n    &lt;description&gt;ONLINE_DESCRIPTION_OF_GAME&lt;/description&gt;\n    &lt;category&gt;CATEGORY_OF_GAME&lt;/category&gt;\n\n    &lt;!--\n    ETC built-in and/or custom ATTRIBUTES\n    --&gt;\n\n    &lt;attr name=\"start\" type=\"script\"&gt;\n      // SCRIPTING\n    &lt;/attr&gt;\n\n  &lt;/game&gt;\n\n  &lt;!--\n  Room Objects\n  --&gt;\n\n  &lt;object name=\"room\"&gt;\n\n    &lt;inherit name=\"editor_room\" /&gt;\n\n  &lt;/object&gt;\n\n  &lt;!--\n  Player Objects\n  --&gt;\n\n  &lt;object name=\"player\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;inherit name=\"editor_player\" /&gt;\n  &lt;/object&gt;\n\n  &lt;!--\n  Non-Player Objects\n  --&gt;\n\n  &lt;!--\n  Item Objects\n  --&gt;\n\n  &lt;!--\n  Usable Item Objects\n  --&gt;\n\n  &lt;!--\n  Battle Item Objects\n  --&gt;\n\n  &lt;!--\n  Quest/Special/Key Item Objects\n  --&gt;\n\n  &lt;!--\n  Equipment Objects\n  --&gt;\n\n  &lt;!--\n  Weapon Equipment Objects\n  --&gt;\n\n  &lt;!--\n  Armor Equipment Objects\n  --&gt;\n\n  &lt;!--\n  Clothing Equipment Objects\n  --&gt;\n\n  &lt;!--\n  Spell Objects\n  --&gt;\n\n  &lt;!--\n  Storage Objects\n  --&gt;\n\n  &lt;!--\n  Exterior Objects\n  --&gt;\n\n  &lt;!--\n  Interior Objects\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Object Types\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Turnscripts\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Timers\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Verbs\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Commands\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Functions\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Systems\n  --&gt;\n\n  &lt;!--\n  Leveling System\n  --&gt;\n\n  &lt;!--\n  Combat System\n  --&gt;\n\n  &lt;!--\n  Equipment System\n  --&gt;\n\n  &lt;!--\n  Magic System\n  --&gt;\n\n  &lt;!--\n  Stealth/Detection System (stealing/planting, sneaking, etc)\n  --&gt;\n\n  &lt;!--\n  Transaction (\"shopping\") System\n  --&gt;\n\n  &lt;!--\n  Item System\n  --&gt;\n\n  &lt;!--\n  Diplomacy (Dialogue/Conversation/etc) System\n  --&gt;\n\n  &lt;!--\n  Record (Journal/Note-Taking) System\n  --&gt;\n\n  &lt;!--\n  Storage System\n  --&gt;\n\n  &lt;!--\n  Date and Time (and etc) System\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Attributes\n  --&gt;\n\n  &lt;--\n  Boolean Attributes\n  --&gt;\n\n  &lt;--\n  Integer Attributes\n  --&gt;\n\n  &lt;--\n  Double (Decimal numbers: Floats / Floating-Points) Attributes\n  --&gt;\n\n  &lt;--\n  String Attributes\n  --&gt;\n\n  &lt;--\n  Object Attributes\n  --&gt;\n\n  &lt;--\n  List Attributes\n  --&gt;\n\n  &lt;--\n  Dictionary Attributes\n  --&gt;\n\n  &lt;--\n  Inherited Attributes\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Game Mechanics (Equations/Formulas/Etc)\n  --&gt;\n\n  &lt;!--\n  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n  --&gt;\n\n  &lt;!--\n  Personal Notes and Etc\n  --&gt;\n\n&lt;/library&gt;\n</code></pre>\n<hr>\n<p>and then you can have library files as encapsulation:</p>\n<p>combat.aslx<br>\nmagic.aslx<br>\nfire_spells.aslx<br>\nplayer_objects.aslx<br>\nnon_player_objects.aslx<br>\nmonsters.aslx<br>\nroom_objects.aslx<br>\nitems.aslx<br>\nequipment.aslx<br>\nweapons.aslx<br>\nswords.aslx<br>\nstorage.aslx<br>\netc etc etc</p>\n<hr>\n<p>example of (how to) using library files and of a library file (a 'monster' library file):</p>\n<p>example_game_file.aslx</p>\n<pre><code>&lt;asl version=\"550\"&gt;\n\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n\n  &lt;include ref=\"monsters.aslx\" /&gt;\n\n  &lt;game name=\"NAME_OF_GAME\"&gt;\n\n    &lt;gameid&gt;SOME_RANDOMLY_GENERATED_HASH_STRING&lt;/gameid&gt;\n    &lt;version&gt;YOUR_GAME_VERSION_HISTORY_DECIMAL_NUMBER&lt;/version\n    &lt;firstpublished&gt;CURRENT_YEAR&lt;/firstpublished\n\n  &lt;/game&gt;\n\n    &lt;object name=\"room\"&gt;\n\n      &lt;inherit name=\"editor_room\" /&gt;\n\n      &lt;object name=\"player\"&gt;\n\n        &lt;inherit name=\"editor_object\" /&gt;\n        &lt;inherit name=\"editor_player\" /&gt;\n\n      &lt;/object&gt;\n\n    &lt;/object&gt;\n\n  &lt;/asl&gt;\n</code></pre>\n<p>monsters.aslx</p>\n<p>(This 'monsters.aslx' Library File and any Library File,  has to be in the same folder as your 'example_game_file.aslx' Game file, for quest to be able to find and use the library file within your game file)</p>\n<pre><code>&lt;library&gt;\n\n  &lt;object name=\"orc\"&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"ogre\"&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"dragon\"&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"skeleton\"&gt;\n  &lt;/object&gt;\n\n&lt;/library&gt;\n</code></pre>\n\n",
      "PostDate": "2018-03-21T00:00:06.1415472Z",
      "LastEditDate": "2018-03-21T00:55:23.4372666Z",
      "link": null
    },
    {
      "PostId": "bee7dc3f-6e2c-4c0f-b95d-3417a3e30c7f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's an old resource of mine for content that's been on a long hiatus, lol:\r\n\r\nhttp://textadventures.co.uk/forum/design/topic/3876/rpg-elements-game-mechanics-and-game-design\r\n\r\n(I was just trying to put all of this various RPG stuff in one spot for me and others to use)",
      "EditableFormat": "markdown",
      "HTML": "<p>here's an old resource of mine for content that's been on a long hiatus, lol:</p>\n<p>http://textadventures.co.uk/forum/design/topic/3876/rpg-elements-game-mechanics-and-game-design</p>\n<p>(I was just trying to put all of this various RPG stuff in one spot for me and others to use)</p>\n\n",
      "PostDate": "2018-03-21T00:15:52.5094722Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "09f26c4f-26f0-469b-88dd-770aca5ad260",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I put all rooms inside zones (which are just rooms the player cannot get to), to divide up different parts of the game. I use annotations (turn on on the _Features_ tab of the game object) on each zone (and sometimes each room) to track what is going on there if complicated and to keep a \"to do\" list for the zone.",
      "EditableFormat": "markdown",
      "HTML": "<p>I put all rooms inside zones (which are just rooms the player cannot get to), to divide up different parts of the game. I use annotations (turn on on the <em>Features</em> tab of the game object) on each zone (and sometimes each room) to track what is going on there if complicated and to keep a \"to do\" list for the zone.</p>\n\n",
      "PostDate": "2018-03-21T09:16:29.2901939Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "18101bc5-e409-4f6b-abc5-b977baaabb62",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "to provide an example of what Pixie is talking about with his 'zones' :\r\n\r\nyou can use Objects as Organizational Folders (this is what Pixie is talking about with his 'zones') for working within the GUI/Editor\r\n\r\n(you can name/label them whatever you want, you don't have to name/label them as I do in this example post, lol)\r\n\r\nmy 'XXX_folder_object' Objects are just for my own (the game maker's) organization, they're NOT rooms/locations that the person playing the game interacts with\r\n\r\nmy 'country/colony' Objects ARE the locations that the person playing the game will go to  interact with\r\n\r\nalso the 'players/npcs' are Objects the person playing the game interacts with as well, of course\r\n\r\n```\r\n<object name=\"world_folder_object\">\r\n\r\n  <object name=\"modern_earth_folder_object\">\r\n\r\n    <object name=\"europe_folder_object\">\r\n\r\n      <object name=\"united_kingdom\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n      </object>\r\n\r\n      <object name=\"germany\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n      </object>\r\n\r\n    </object\r\n\r\n    <object name=\"asia_folder_object\">\r\n\r\n      <object name=\"china\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n      </object>\r\n\r\n      <object name=\"japan\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n      </object>\r\n\r\n    </object\r\n\r\n  </object>\r\n\r\n  <object name=\"mars_folder_object\">\r\n\r\n    <object name=\"colony_1\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n    </object>\r\n\r\n    <object name=\"colony_2\">\r\n        <inherit name=\"editor_room\" />\r\n        <!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) -->\r\n    </object>\r\n\r\n  </object>\r\n\r\n</object>\r\n\r\n<object name=\"character_folder_object\">\r\n\r\n  <object name=\"playable_character_folder_object\">\r\n\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <attr name=\"parent\" type=\"object\">germany</attr>\r\n    </object>\r\n\r\n    <object name=\"player_2\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n      <attr name=\"parent\" type=\"object\">colony_1</attr>\r\n    </object>\r\n\r\n  </object>\r\n\r\n  <object name=\"non_playable_character_folder_object\">\r\n\r\n    <object name=\"npc_1\">\r\n      <inherit name=\"editor_object\" />\r\n      <attr name=\"parent\" type=\"object\">united_kingdom</attr>\r\n    </object>\r\n\r\n    <object name=\"npc_2\">\r\n      <inherit name=\"editor_object\" />\r\n      <attr name=\"parent\" type=\"object\">colony_2</attr>\r\n    </object>\r\n\r\n  </object>\r\n\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>to provide an example of what Pixie is talking about with his 'zones' :</p>\n<p>you can use Objects as Organizational Folders (this is what Pixie is talking about with his 'zones') for working within the GUI/Editor</p>\n<p>(you can name/label them whatever you want, you don't have to name/label them as I do in this example post, lol)</p>\n<p>my 'XXX_folder_object' Objects are just for my own (the game maker's) organization, they're NOT rooms/locations that the person playing the game interacts with</p>\n<p>my 'country/colony' Objects ARE the locations that the person playing the game will go to  interact with</p>\n<p>also the 'players/npcs' are Objects the person playing the game interacts with as well, of course</p>\n<pre><code>&lt;object name=\"world_folder_object\"&gt;\n\n  &lt;object name=\"modern_earth_folder_object\"&gt;\n\n    &lt;object name=\"europe_folder_object\"&gt;\n\n      &lt;object name=\"united_kingdom\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n      &lt;/object&gt;\n\n      &lt;object name=\"germany\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n      &lt;/object&gt;\n\n    &lt;/object\n\n    &lt;object name=\"asia_folder_object\"&gt;\n\n      &lt;object name=\"china\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n      &lt;/object&gt;\n\n      &lt;object name=\"japan\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n      &lt;/object&gt;\n\n    &lt;/object\n\n  &lt;/object&gt;\n\n  &lt;object name=\"mars_folder_object\"&gt;\n\n    &lt;object name=\"colony_1\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"colony_2\"&gt;\n        &lt;inherit name=\"editor_room\" /&gt;\n        &lt;!-- 'Exit' Element coding (I'm rusty and too lazy to look it up) --&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"character_folder_object\"&gt;\n\n  &lt;object name=\"playable_character_folder_object\"&gt;\n\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;germany&lt;/attr&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"player_2\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;colony_1&lt;/attr&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n  &lt;object name=\"non_playable_character_folder_object\"&gt;\n\n    &lt;object name=\"npc_1\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;united_kingdom&lt;/attr&gt;\n    &lt;/object&gt;\n\n    &lt;object name=\"npc_2\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;attr name=\"parent\" type=\"object\"&gt;colony_2&lt;/attr&gt;\n    &lt;/object&gt;\n\n  &lt;/object&gt;\n\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2018-03-21T10:19:59.1991176Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7aa3984e-7775-4134-b8de-b1a971075bf4",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I do it the old-fashioned way - paper-pencil.\r\n\r\nI draw my map first with a general idea of the story-line and I start where the player starts and create scenarios as the player would encounter them.  Also, by having the map drawn, it keeps the rooms in a relatively neat working order.  It does require some jumping around in the event a flag was set in one room that requires correspondence in another room, or an item a player needs from one room 'down the road' that needs to used in a previous room.  When I need to jump forward, I simply do that (since my map is already made) and create the flag scenario or drop the needed object in that room.  On my map page I make note of set flags - what triggers it, what object it is on, and the name I have given it.  Example... pushing green button, bad guy number 1, badguyactive.\r\n\r\nIt seems to work well for me.  I think my stories are at least fluent and fairly complex and I have never had any issues with organization.  But, to each their own.  I'm not quite comfortable using annotations as Pixie does, but if you are, that may make more sense to you.  I'm not much of a coder!\r\n\r\nAs for my workflow... that's another story all together.  I just need to make time.  X3 has been stuck in limbo for MONTHS!\r\n\r\nBest of luck!",
      "EditableFormat": "markdown",
      "HTML": "<p>I do it the old-fashioned way - paper-pencil.</p>\n<p>I draw my map first with a general idea of the story-line and I start where the player starts and create scenarios as the player would encounter them.  Also, by having the map drawn, it keeps the rooms in a relatively neat working order.  It does require some jumping around in the event a flag was set in one room that requires correspondence in another room, or an item a player needs from one room 'down the road' that needs to used in a previous room.  When I need to jump forward, I simply do that (since my map is already made) and create the flag scenario or drop the needed object in that room.  On my map page I make note of set flags - what triggers it, what object it is on, and the name I have given it.  Example... pushing green button, bad guy number 1, badguyactive.</p>\n<p>It seems to work well for me.  I think my stories are at least fluent and fairly complex and I have never had any issues with organization.  But, to each their own.  I'm not quite comfortable using annotations as Pixie does, but if you are, that may make more sense to you.  I'm not much of a coder!</p>\n<p>As for my workflow... that's another story all together.  I just need to make time.  X3 has been stuck in limbo for MONTHS!</p>\n<p>Best of luck!</p>\n\n",
      "PostDate": "2018-03-21T16:13:55.9846528Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "258aaf47-1fd4-4290-8b8b-4e1298c9bffa",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have a pretty massive game at the moment and it's only getting bigger. I think it's 60,000+ lines of code and 1.3 million words.\r\n\r\nOne of the best things I can recommend is putting EVERY SINGLE VARIABLE in a Notepad document exactly as it appears in game (so you have consistent spelling). Divide it into categories, list all categories that pertain to whatever scene you are writing in Notepad++ when you go to write so you don't forget variables. \r\n\r\nFor example...\r\n```\r\nplayer.race: human 0, elven 1, dwarven 2, dragon-descended 3, halfling 4, orc-descended 5, gnome 6, dark elf 7, goblin 8, high-demon 9, alaraune 10, demon 11, cow-taur 12, dryad 13, goo 14, naga 15, centaur 16, neko 17, wolf-taur 18, dragon 19, orc 20, doll 21, bee-taur 22, drider 23.\r\n```\r\n```\r\nplayer.haircolor: brunette 0, white 1, red 2, black 3, dirty blonde 4, platinum blonde 5, green 6, purple 7, dark red 8, orange 9, blue 10, ombre 11, neon 12, pastel 13, pink 14, silver 15, rainbow 16.\r\n```\r\nand then doing stuff like this underneath these categories...\r\n```\r\n{if player.race=human:}{if player.race=elven:}{if player.race=dwarven:}{if player.race=dragon-descended:}{if player.race=halfling:}{if player.race=orc-descended:}{if player.race=gnome:}{if player.race=dark elf:}{if player.race=goblin:}{if player.race=high-demon:}{if player.race=alaraune:}{if player.race=demon:}{if player.race=cow-taur:}{if player.race=dryad:}{if player.race=goo:}{if player.race=naga:}{if player.race=centaur:}{if player.race=neko:}{if player.race=wolf-taur:}{if player.race=dragon:}{if player.race=orc:}{if player.race=doll:}{if player.race=bee-taur:}{if player.race=drider:}\r\n```\r\nSo I don't have to rewrite it out 5 million times. \r\n\r\nFor rooms, I do what Pixie does I think.\r\n```\r\nPart 1\r\n   Room 1\r\n   Room 2\r\n   Room 3\r\n\r\nPart 2\r\n   Room 1\r\n   Room 2\r\n   Room 3\r\n```\r\nSince it keeps everything extremely organized into smaller sections.\r\n\r\nI also recommend keeping all your turnscripts together (so you'll likely have to go into Code-View now and then and move separated turnscripts back into the group. \r\n\r\nHope that helps!\r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>I have a pretty massive game at the moment and it's only getting bigger. I think it's 60,000+ lines of code and 1.3 million words.</p>\n<p>One of the best things I can recommend is putting EVERY SINGLE VARIABLE in a Notepad document exactly as it appears in game (so you have consistent spelling). Divide it into categories, list all categories that pertain to whatever scene you are writing in Notepad++ when you go to write so you don't forget variables.</p>\n<p>For example...</p>\n<pre><code>player.race: human 0, elven 1, dwarven 2, dragon-descended 3, halfling 4, orc-descended 5, gnome 6, dark elf 7, goblin 8, high-demon 9, alaraune 10, demon 11, cow-taur 12, dryad 13, goo 14, naga 15, centaur 16, neko 17, wolf-taur 18, dragon 19, orc 20, doll 21, bee-taur 22, drider 23.\n</code></pre>\n<pre><code>player.haircolor: brunette 0, white 1, red 2, black 3, dirty blonde 4, platinum blonde 5, green 6, purple 7, dark red 8, orange 9, blue 10, ombre 11, neon 12, pastel 13, pink 14, silver 15, rainbow 16.\n</code></pre>\n<p>and then doing stuff like this underneath these categories...</p>\n<pre><code>{if player.race=human:}{if player.race=elven:}{if player.race=dwarven:}{if player.race=dragon-descended:}{if player.race=halfling:}{if player.race=orc-descended:}{if player.race=gnome:}{if player.race=dark elf:}{if player.race=goblin:}{if player.race=high-demon:}{if player.race=alaraune:}{if player.race=demon:}{if player.race=cow-taur:}{if player.race=dryad:}{if player.race=goo:}{if player.race=naga:}{if player.race=centaur:}{if player.race=neko:}{if player.race=wolf-taur:}{if player.race=dragon:}{if player.race=orc:}{if player.race=doll:}{if player.race=bee-taur:}{if player.race=drider:}\n</code></pre>\n<p>So I don't have to rewrite it out 5 million times.</p>\n<p>For rooms, I do what Pixie does I think.</p>\n<pre><code>Part 1\n   Room 1\n   Room 2\n   Room 3\n\nPart 2\n   Room 1\n   Room 2\n   Room 3\n</code></pre>\n<p>Since it keeps everything extremely organized into smaller sections.</p>\n<p>I also recommend keeping all your turnscripts together (so you'll likely have to go into Code-View now and then and move separated turnscripts back into the group.</p>\n<p>Hope that helps!</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-03-21T23:25:16.1429762Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ea9ed708-d3fa-41c5-8b1e-37baf518a2c6",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> One of the best things I can recommend is putting EVERY SINGLE VARIABLE in a Notepad document exactly as it appears in game (so you have consistent spelling). Divide it into categories, list all categories that pertain to whatever scene you are writing in Notepad++ when you go to write so you don't forget variables.\r\n\r\nRelated, always use the same convention for naming objects and attrributes, i.e., how you capitalise it, what you do with spaces, etc.\r\n\r\nAnother trick is to have a function that checks for issues. I always give rooms and objects aliases, so my checking function reports: any object/room without an alias; room without a description; object without a look; wearable without slots; topics that show or hide topics that do not exist; etc. I have the function run in game.start.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>One of the best things I can recommend is putting EVERY SINGLE VARIABLE in a Notepad document exactly as it appears in game (so you have consistent spelling). Divide it into categories, list all categories that pertain to whatever scene you are writing in Notepad++ when you go to write so you don't forget variables.</p>\n</blockquote>\n<p>Related, always use the same convention for naming objects and attrributes, i.e., how you capitalise it, what you do with spaces, etc.</p>\n<p>Another trick is to have a function that checks for issues. I always give rooms and objects aliases, so my checking function reports: any object/room without an alias; room without a description; object without a look; wearable without slots; topics that show or hide topics that do not exist; etc. I have the function run in game.start.</p>\n\n",
      "PostDate": "2018-03-23T08:04:20.3146319Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6ead95f2-c3de-44c6-9894-baabfeae0e7d",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "^ wants that function lol >.< !",
      "EditableFormat": "markdown",
      "HTML": "<p>^ wants that function lol &gt;.&lt; !</p>\n\n",
      "PostDate": "2018-03-23T09:05:37.3807234Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "4d7761cc-3b34-4cff-80e7-a98f5ed64a78",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ConvLib already has a function, `TopicTest` that checks topics. Here is an example, but it depends what you want to check in your game. \r\n\r\n```\r\nforeach (obj, AllObjects()) {\r\n  if (not StartsWith(obj.name, \"_\")) {\r\n    if (not HasString(obj, \"alias\")) {\r\n      msg (\"No alias for \" + obj)\r\n    }\r\n    if (DoesInherit(obj, \"editor_room\")) {\r\n      if (not HasString(obj, \"roomtype\")) {\r\n        msg (\"No room type for \" + obj)\r\n      }\r\n      if (HasString(obj, \"description\")) {\r\n        if (obj.description = \"\") {\r\n          msg (\"No description for \" + obj)\r\n        }\r\n      }\r\n      if (obj.usedefaultprefix) {\r\n        msg (\"usedefaultprefix set for \" + obj)\r\n      }\r\n    }\r\n    if (DoesInherit(obj, \"editor_object\")) {\r\n      if (not HasString(obj, \"look\") and not DoesInherit(obj, \"topic\")) {\r\n        msg (\"No look for \" + obj)\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>ConvLib already has a function, <code>TopicTest</code> that checks topics. Here is an example, but it depends what you want to check in your game.</p>\n<pre><code>foreach (obj, AllObjects()) {\n  if (not StartsWith(obj.name, \"_\")) {\n    if (not HasString(obj, \"alias\")) {\n      msg (\"No alias for \" + obj)\n    }\n    if (DoesInherit(obj, \"editor_room\")) {\n      if (not HasString(obj, \"roomtype\")) {\n        msg (\"No room type for \" + obj)\n      }\n      if (HasString(obj, \"description\")) {\n        if (obj.description = \"\") {\n          msg (\"No description for \" + obj)\n        }\n      }\n      if (obj.usedefaultprefix) {\n        msg (\"usedefaultprefix set for \" + obj)\n      }\n    }\n    if (DoesInherit(obj, \"editor_object\")) {\n      if (not HasString(obj, \"look\") and not DoesInherit(obj, \"topic\")) {\n        msg (\"No look for \" + obj)\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2018-03-23T13:28:14.4311443Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1e9876f6-65a7-4162-ad82-8bb7b02dbd72",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I usually don't need extra rooms inside rooms or anything. I just use the computer's Find function.\r\n\r\nAlso, I too, use paper and pencil. I tend to draw everything out before making it.\r\n\r\nAlso, my work flow is very varying.... It has its ups and downs. My old game broke recently, so I am rebuilding it, slowly. I also have a side project now, which I'm also working on slowly.",
      "EditableFormat": "markdown",
      "HTML": "<p>I usually don't need extra rooms inside rooms or anything. I just use the computer's Find function.</p>\n<p>Also, I too, use paper and pencil. I tend to draw everything out before making it.</p>\n<p>Also, my work flow is very varying.... It has its ups and downs. My old game broke recently, so I am rebuilding it, slowly. I also have a side project now, which I'm also working on slowly.</p>\n\n",
      "PostDate": "2018-03-23T21:50:53.5904935Z",
      "LastEditDate": "2018-03-24T02:10:04.7866391Z",
      "link": null
    },
    {
      "PostId": "e25f0102-4801-4f86-b138-050d34c85a56",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "//Put comments everywhere!\r\n\r\nMake liberal use of test games so you can experiment/mess things up to your heart's content without fear!",
      "EditableFormat": "markdown",
      "HTML": "<p>//Put comments everywhere!</p>\n<p>Make liberal use of test games so you can experiment/mess things up to your heart's content without fear!</p>\n\n",
      "PostDate": "2018-04-01T12:04:29.9412753Z",
      "LastEditDate": "2018-04-01T12:28:12.4192367Z",
      "link": null
    },
    {
      "PostId": "2bf29cc8-b696-4e4d-b314-4b0ee5112396",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Regularly make sure you can save games when playing. For some reason saving the game is especially sensitive to coding errors, and they are easier to track down if you know it was fine two days ago.",
      "EditableFormat": "markdown",
      "HTML": "<p>Regularly make sure you can save games when playing. For some reason saving the game is especially sensitive to coding errors, and they are easier to track down if you know it was fine two days ago.</p>\n\n",
      "PostDate": "2018-04-01T20:58:21.4249765Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
