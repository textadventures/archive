{
  "Topic": {
    "TopicId": "y9mtupgjp06jtpzqsa3nnw",
    "ForumId": "15",
    "Title": "Couple questions about Prepositions and Commands",
    "LastUpdated": "2021-04-13T16:41:46.3401596Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "29011817-f8ac-40d9-bb4a-c36fb8c251ca",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "**QUEST 6/JS Questions**\r\nI was reading the \"Creating Commands\" doc for QJS, and I noticed a couple of things that I'm unclear about.\r\n\r\nFirst, when you say \"command\" is that just the QJS term for verbs,\r\nor is a command something special that's different from a verb?\r\n\r\nSecond, it says Quest has trouble parsing _without_ an object separator, i.e. a preposition.\r\nFor some reason, I thought prepositions were usually a problem to be removed.\r\nLike, we need a thing to tell the parser to remove and ignore prepositions,\r\n_because_ it doesn't want them there in the first place, but sometimes silly players try to use them.\r\nCan I not just use the format of [Verb] [Noun] [Noun]?\r\nE.g.: Fire Bow Rat, or Fill Bottle Water\r\n\r\nI was typing up some instructions for the player, to clarify that my game always takes a tool before a target.\r\n\"Always type actions as [Action] [Tool] [Target], and never [Action] [Target] [Tool].\r\nYou Fire (the) Bow (at the) Rat, you don't Fire (at the) Rat (with the) Bow.\"\r\nAs I was doing that, I was also saying that they can skip articles and prepositions, as the game will ignore them,\r\nwhich I assumed would be relatively easy or even standard code,\r\nbut it sounds like trying _not_ to use prepositions may be more trouble than it's worth.\r\n\r\nSo... what's the deal with prepositions, now?\r\n\r\nSidenote: Am I being to picky by forcing that syntax? Will modern IF players be annoyed if they can't flip the nouns?",
      "EditableFormat": "markdown",
      "HTML": "<p><strong>QUEST 6/JS Questions</strong><br>\nI was reading the \"Creating Commands\" doc for QJS, and I noticed a couple of things that I'm unclear about.</p>\n<p>First, when you say \"command\" is that just the QJS term for verbs,<br>\nor is a command something special that's different from a verb?</p>\n<p>Second, it says Quest has trouble parsing <em>without</em> an object separator, i.e. a preposition.<br>\nFor some reason, I thought prepositions were usually a problem to be removed.<br>\nLike, we need a thing to tell the parser to remove and ignore prepositions,<br>\n<em>because</em> it doesn't want them there in the first place, but sometimes silly players try to use them.<br>\nCan I not just use the format of [Verb] [Noun] [Noun]?<br>\nE.g.: Fire Bow Rat, or Fill Bottle Water</p>\n<p>I was typing up some instructions for the player, to clarify that my game always takes a tool before a target.<br>\n\"Always type actions as [Action] [Tool] [Target], and never [Action] [Target] [Tool].<br>\nYou Fire (the) Bow (at the) Rat, you don't Fire (at the) Rat (with the) Bow.\"<br>\nAs I was doing that, I was also saying that they can skip articles and prepositions, as the game will ignore them,<br>\nwhich I assumed would be relatively easy or even standard code,<br>\nbut it sounds like trying <em>not</em> to use prepositions may be more trouble than it's worth.</p>\n<p>So... what's the deal with prepositions, now?</p>\n<p>Sidenote: Am I being to picky by forcing that syntax? Will modern IF players be annoyed if they can't flip the nouns?</p>\n\n",
      "PostDate": "2021-04-13T16:41:46.3401596Z",
      "LastEditDate": "2021-04-13T17:56:19.1496201Z",
      "link": null
    },
    {
      "PostId": "88475337-a72e-4cf6-af9a-dcb38954e984",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> First, when you say \"command\" is that just the QJS term for verbs,\r\n\r\nIn Quest 5, a verb is a special type of command whose behaviour is different for every object it can be used on. I think this is similar the new one, but someone more experienced may be able to answer.\r\n\r\n> Second, it says Quest has trouble parsing without an object separator, i.e. a preposition\r\n\r\nThe problem with \"[verb] [noun] [noun]\" is working out which words belong to which noun if a noun has more than one word.\r\n\r\nIn Quest 5, the prepositions are used to determine where each noun begins and ends, and once that is done you can compare each noun to the list of available objects. Checking each possible grouping of words against each possible object rapidly becomes a large, slow problem.\r\n\r\nI don't know how they're doing it in the new engine… I did post an algorithm a while back which I thought would provide a decent compromise; but it's still slow as hell if you have many objects with words in common. At some point maybe I'll go back and polish it further…",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>First, when you say \"command\" is that just the QJS term for verbs,</p>\n</blockquote>\n<p>In Quest 5, a verb is a special type of command whose behaviour is different for every object it can be used on. I think this is similar the new one, but someone more experienced may be able to answer.</p>\n<blockquote>\n<p>Second, it says Quest has trouble parsing without an object separator, i.e. a preposition</p>\n</blockquote>\n<p>The problem with \"[verb] [noun] [noun]\" is working out which words belong to which noun if a noun has more than one word.</p>\n<p>In Quest 5, the prepositions are used to determine where each noun begins and ends, and once that is done you can compare each noun to the list of available objects. Checking each possible grouping of words against each possible object rapidly becomes a large, slow problem.</p>\n<p>I don't know how they're doing it in the new engine… I did post an algorithm a while back which I thought would provide a decent compromise; but it's still slow as hell if you have many objects with words in common. At some point maybe I'll go back and polish it further…</p>\n\n",
      "PostDate": "2021-04-13T17:09:43.4603267Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e7bc4957-e287-4502-b57b-353af61c05e8",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI'm pretty sure commands and verbs are one in the same.\r\n\r\nAlso, the commands use Regular Expressions as patterns for the parser to match.\r\n\r\nAlso also, this is all being designed so that games will run in any browser, so basic Regular Expressions must be used (no group capture mode ([see this thread](https://textadventures.co.uk/forum/questkit/topic/y9ky21eopeinmgzuj1tl_g/quest-6-messing-around-with-js-regex-group-capture-code))).\r\n\r\nSo, most patterns in Quest 6 are like:\r\n\r\n```/^(?:fire) (.+) (?:at) (.+)$/```\r\n\r\n... or ...\r\n\r\n```/^(?:fill) (.+) (?:with) (.+)$/```\r\n\r\nIf you wanted to leave out the prepositions, you'd have something like ```/^(?:fill) (.+) (.+)$/```, and that would confuse the parser -- because the captured text would just be everything after \"give\".  If you didn't allow object aliases with spaces, you could pull this off.\r\n\r\n\r\n---\r\nBUT, you can edit all the patterns and use capture groups in your RegEx.  Just know that it won't work unless the player has an up-to-date version of Firefox, Chromium, or one of the recent, popular browsers.  So, this is not recommended, although I believe using capture groups would pretty much solve your issue.  Alternatively . . .\r\n\r\nYou could also make multiple commands to handle the same action.\r\n\r\nYou could have a command called \"shootBowAt\" with the pattern ``` /^(?:shoot) (.+) (?:at) (.+)$/```, and another command called \"shootWithBow\" with the pattern ``` /^(?:shoot) (.+) (?:with) (.+)$/```.  Have each command's script figure out who is shooting and who is being shot, then pass those parameters to a function called \"shootBow\" to have it finish the job.\r\n\r\n---\r\nPS\r\n\r\nWe are unofficially using the QuestKit forum when posting about Quest 6 stuff.  (That forum's name will soon be changed to \"Quest 6\", as QuestKit was abandoned long ago.)\r\n\r\nI was posting Quest 6 stuff in the Quest forum at first, and, come to find out, I was confusing the people who are trying to learn to use Quest 5.  (Whoops!)\r\n\r\nSo, this post will probably end up being moved to the QuestKit forum, just to warn you in advance.  :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I'm pretty sure commands and verbs are one in the same.</p>\n<p>Also, the commands use Regular Expressions as patterns for the parser to match.</p>\n<p>Also also, this is all being designed so that games will run in any browser, so basic Regular Expressions must be used (no group capture mode (<a href=\"https://textadventures.co.uk/forum/questkit/topic/y9ky21eopeinmgzuj1tl_g/quest-6-messing-around-with-js-regex-group-capture-code\">see this thread</a>)).</p>\n<p>So, most patterns in Quest 6 are like:</p>\n<p><code>/^(?:fire) (.+) (?:at) (.+)$/</code></p>\n<p>... or ...</p>\n<p><code>/^(?:fill) (.+) (?:with) (.+)$/</code></p>\n<p>If you wanted to leave out the prepositions, you'd have something like <code>/^(?:fill) (.+) (.+)$/</code>, and that would confuse the parser -- because the captured text would just be everything after \"give\".  If you didn't allow object aliases with spaces, you could pull this off.</p>\n<hr>\n<p>BUT, you can edit all the patterns and use capture groups in your RegEx.  Just know that it won't work unless the player has an up-to-date version of Firefox, Chromium, or one of the recent, popular browsers.  So, this is not recommended, although I believe using capture groups would pretty much solve your issue.  Alternatively . . .</p>\n<p>You could also make multiple commands to handle the same action.</p>\n<p>You could have a command called \"shootBowAt\" with the pattern <code>/^(?:shoot) (.+) (?:at) (.+)$/</code>, and another command called \"shootWithBow\" with the pattern <code>/^(?:shoot) (.+) (?:with) (.+)$/</code>.  Have each command's script figure out who is shooting and who is being shot, then pass those parameters to a function called \"shootBow\" to have it finish the job.</p>\n<hr>\n<p>PS</p>\n<p>We are unofficially using the QuestKit forum when posting about Quest 6 stuff.  (That forum's name will soon be changed to \"Quest 6\", as QuestKit was abandoned long ago.)</p>\n<p>I was posting Quest 6 stuff in the Quest forum at first, and, come to find out, I was confusing the people who are trying to learn to use Quest 5.  (Whoops!)</p>\n<p>So, this post will probably end up being moved to the QuestKit forum, just to warn you in advance.  :)</p>\n\n",
      "PostDate": "2021-04-13T17:10:18.3013257Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b23837a8-726e-421a-b230-b3edc397fffb",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ha! mrangel beat me to it!\r\n\r\n> a verb is a special type of command whose behaviour is different for every object it can be used on",
      "EditableFormat": "markdown",
      "HTML": "<p>Ha! mrangel beat me to it!</p>\n<blockquote>\n<p>a verb is a special type of command whose behaviour is different for every object it can be used on</p>\n</blockquote>\n\n",
      "PostDate": "2021-04-13T17:21:43.0336812Z",
      "LastEditDate": "2021-04-24T14:57:25.1326613Z",
      "link": null
    },
    {
      "PostId": "5b54f1c8-a063-4209-b6cc-ec6467501981",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmmm... reading over all this, I feel like I'm just thinking too old school, or too rigid ... or is it lazy? I don't _really_ want to make separate verbs for \"fire [] at []\" and \"shoot [] with [],\" but ... I guess _I coooould_, just to be nice!\r\nIt was indeed my intention to limit all objects to single word names, so I see how the separators are helpful with freeing up your naming options, as well.\r\n\r\nIt also occurs to me that, while forcing a single format might reduce guesswork, it also hampers my options for making puzzles.  For instance, if I wanted the player to use their sword like a lever to tip something over,\r\nwhat would I have them say? \"Lever Sword Statuette\" ? That just doesn't look right at all.\r\n\"Lift/Tip Statuette with Sword\" makes much more sense. So, I guess I better get used to it, ha!\r\n\r\n    We are unofficially using the QuestKit forum when posting about Quest 6 stuff.\r\nD'oh! Duelly noted.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmmm... reading over all this, I feel like I'm just thinking too old school, or too rigid ... or is it lazy? I don't <em>really</em> want to make separate verbs for \"fire [] at []\" and \"shoot [] with [],\" but ... I guess <em>I coooould</em>, just to be nice!<br>\nIt was indeed my intention to limit all objects to single word names, so I see how the separators are helpful with freeing up your naming options, as well.</p>\n<p>It also occurs to me that, while forcing a single format might reduce guesswork, it also hampers my options for making puzzles.  For instance, if I wanted the player to use their sword like a lever to tip something over,<br>\nwhat would I have them say? \"Lever Sword Statuette\" ? That just doesn't look right at all.<br>\n\"Lift/Tip Statuette with Sword\" makes much more sense. So, I guess I better get used to it, ha!</p>\n<pre><code>We are unofficially using the QuestKit forum when posting about Quest 6 stuff.\n</code></pre>\n<p>D'oh! Duelly noted.</p>\n\n",
      "PostDate": "2021-04-13T17:55:24.71767Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ee698bf-efc9-4ebb-bc89-b1b8418f2dbf",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Most players accustomed to Quest games would try **USE SWORD ON STATUETTE**\r\n\r\nMost everyone else would try to \"guess the verb\", so to speak. (Hehehe.) I would assume I had to either **STAB STATUETTE WITH SWORD** or **PUT SWORD UNDER STATUETTE**, then **LIFT SWORD**, or something like that. I would probably try **LIFT STATUETTE WITH SWORD**, too. (Even if I were playing a Quest game, I wouldn't try USE until all else failed.  (I rather enjoy guessing the proper terminology, I reckon.))",
      "EditableFormat": "markdown",
      "HTML": "<p>Most players accustomed to Quest games would try <strong>USE SWORD ON STATUETTE</strong></p>\n<p>Most everyone else would try to \"guess the verb\", so to speak. (Hehehe.) I would assume I had to either <strong>STAB STATUETTE WITH SWORD</strong> or <strong>PUT SWORD UNDER STATUETTE</strong>, then <strong>LIFT SWORD</strong>, or something like that. I would probably try <strong>LIFT STATUETTE WITH SWORD</strong>, too. (Even if I were playing a Quest game, I wouldn't try USE until all else failed.  (I rather enjoy guessing the proper terminology, I reckon.))</p>\n\n",
      "PostDate": "2021-04-13T18:03:48.7511015Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7eb13738-7a91-41b7-a0b9-51435ef31ee1",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is an update on GitHub (as opposed to a new release; you will need to get _parse.js) that will let you reverse the order of nouns.\r\n\r\nSee what to do here:\r\nhttps://github.com/ThePix/QuestJS/wiki/More-on-commands\r\n\r\nPart of the motivation is that I suspect work order will be reversed in some languages.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is an update on GitHub (as opposed to a new release; you will need to get _parse.js) that will let you reverse the order of nouns.</p>\n<p>See what to do here:<br>\nhttps://github.com/ThePix/QuestJS/wiki/More-on-commands</p>\n<p>Part of the motivation is that I suspect work order will be reversed in some languages.</p>\n\n",
      "PostDate": "2021-04-15T08:54:48.1069897Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ada5c98e-ed01-41b6-9a07-72fde537bf3d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> See what to do here:\r\nhttps://github.com/ThePix/QuestJS/wiki/More-on-commands\r\n\r\nI wonder if you'll get any old-time 'nix nerds telling you that the plural of regex is regexen ☺ I think both forms are in use now, but there used to be some people who got quite intense about it.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>See what to do here:<br>\nhttps://github.com/ThePix/QuestJS/wiki/More-on-commands</p>\n</blockquote>\n<p>I wonder if you'll get any old-time 'nix nerds telling you that the plural of regex is regexen ☺ I think both forms are in use now, but there used to be some people who got quite intense about it.</p>\n\n",
      "PostDate": "2021-04-15T09:46:35.9659462Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
