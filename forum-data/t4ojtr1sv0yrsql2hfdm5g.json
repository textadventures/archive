{
  "Topic": {
    "TopicId": "t4ojtr1sv0yrsql2hfdm5g",
    "ForumId": "10",
    "Title": "(Solved) Displaying scenery objects in a use menu",
    "LastUpdated": "2019-07-15T03:11:58.4228619Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "75f0f183-7f1f-4ff1-a893-8c39f8d2a54b",
      "UserId": 428397,
      "Username": "raindare",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6867ed6bfd8f12bdf167118e95619b9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello!\r\n\r\nI am using the text adventure module of Quest to write a gamebook. As a result, the player does not have access to the parser.\r\n\r\nI would like to make it so that by \"using\" items in a room, the player can select objects from a menu on which to use the item.\r\n\r\nThis function appears to do what I want:\r\n\r\nhttps://i.vgy.me/KjCx3S.png\r\n\r\nHowever, it will not allow the player to use the item in question on an object that is flagged as \"Scenery\" (such as a locked door, which would be redundant with the exit it blocks).\r\n\r\nIs there a way to make it so that you can select a \"Scenery\" object from the use menu provided by an item's hyperlink?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello!</p>\n<p>I am using the text adventure module of Quest to write a gamebook. As a result, the player does not have access to the parser.</p>\n<p>I would like to make it so that by \"using\" items in a room, the player can select objects from a menu on which to use the item.</p>\n<p>This function appears to do what I want:</p>\n<p>https://i.vgy.me/KjCx3S.png</p>\n<p>However, it will not allow the player to use the item in question on an object that is flagged as \"Scenery\" (such as a locked door, which would be redundant with the exit it blocks).</p>\n<p>Is there a way to make it so that you can select a \"Scenery\" object from the use menu provided by an item's hyperlink?</p>\n\n",
      "PostDate": "2019-07-15T03:11:58.4228619Z",
      "LastEditDate": "2019-07-19T06:48:34.5156496Z",
      "link": null
    },
    {
      "PostId": "121f3012-fa87-4d8d-bc24-3c1c3d8b0ae8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're using the desktop version of Quest, you can override the built-in function `CreateUseMenuList`.\r\n\r\nI'm not sure if you can access the built-in function somehow to edit it, or if you just need to create a function with the same name. In any case, you should remove the indicated part of the function script:\r\n\r\n<pre><code>  &lt;function name=\"CreateUseMenuList\" parameters=\"object\" type=\"objectlist\">\r\n    objectlist = NewObjectList()\r\n    objectlist = ScopeReachableInventory()\r\n    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())\r\n    excludelist = NewObjectList()\r\n    list add (excludelist, game.pov)\r\n    list add (excludelist, object)\r\n    candidates = NewObjectList()\r\n    candidates = ListExclude(<s style=\"color:red\"><b>RemoveSceneryObjects(</b></s>objectlist<s style=\"color:red\"><b>)</b></s>, excludelist)\r\n    return (candidates)\r\n  &lt;/function></code></pre>",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're using the desktop version of Quest, you can override the built-in function <code>CreateUseMenuList</code>.</p>\n<p>I'm not sure if you can access the built-in function somehow to edit it, or if you just need to create a function with the same name. In any case, you should remove the indicated part of the function script:</p>\n<pre><code>  &lt;function name=\"CreateUseMenuList\" parameters=\"object\" type=\"objectlist\"&gt;\n    objectlist = NewObjectList()\n    objectlist = ScopeReachableInventory()\n    objectlist = ListCombine (objectlist, ScopeReachableNotHeld())\n    excludelist = NewObjectList()\n    list add (excludelist, game.pov)\n    list add (excludelist, object)\n    candidates = NewObjectList()\n    candidates = ListExclude(<s style=\"color: red\"><b>RemoveSceneryObjects(</b></s>objectlist<s style=\"color: red\"><b>)</b></s>, excludelist)\n    return (candidates)\n  &lt;/function&gt;</code></pre>\n\n",
      "PostDate": "2019-07-15T22:42:18.4047962Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f07ed449-287b-4371-9703-200738527caf",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Instructions on how to override a function here:\r\nhttp://docs.textadventures.co.uk/quest/overriding.html",
      "EditableFormat": "markdown",
      "HTML": "<p>Instructions on how to override a function here:<br>\nhttp://docs.textadventures.co.uk/quest/overriding.html</p>\n\n",
      "PostDate": "2019-07-16T06:44:15.7341567Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "139fc359-dee1-4125-b95a-18cce3fe5193",
      "UserId": 428397,
      "Username": "raindare",
      "AvatarUrl": "https://secure.gravatar.com/avatar/6867ed6bfd8f12bdf167118e95619b9e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you! This was very helpful.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you! This was very helpful.</p>\n\n",
      "PostDate": "2019-07-19T06:48:11.9354796Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "17fe371c-3a3b-460a-a2ad-97d56b2b7e1b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(I do think that it would make more sense to be able to override this on a per-object basis; perhaps by having a string attribute called \"scopeforuse\" which takes the same format as a command's scope string. Including scenery objects on the menu seems such an obvious thing that it shouldn't require overriding a core function)",
      "EditableFormat": "markdown",
      "HTML": "<p>(I do think that it would make more sense to be able to override this on a per-object basis; perhaps by having a string attribute called \"scopeforuse\" which takes the same format as a command's scope string. Including scenery objects on the menu seems such an obvious thing that it shouldn't require overriding a core function)</p>\n\n",
      "PostDate": "2019-07-19T07:51:22.8538183Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
