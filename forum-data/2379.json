{
  "Topic": {
    "TopicId": "2379",
    "ForumId": "10",
    "Title": "New Scenery Object",
    "LastUpdated": "2011-01-13T16:28:48+00:00",
    "ReplyCount": 4
  },
  "Posts": [
    {
      "PostId": "17678",
      "UserId": 0,
      "Username": "Dr.Froth",
      "UserAvatar": null,
      "UserGravatar": "e87f2aa904ea379f7988d099701d6f04",
      "EditableText": "What I would really like to see is this:\n\nA new kind of object that is like scenery but has a window where you can add what rooms you want it to be in.  That way I only have to make the &quot;Sky&quot; one time and just put it into every &quot;room&quot; that is outside.\n\nYou could have an area with several rooms with the same kind of carpet and only make it one time...that would be great.\n\nYou should do that Alex.",
      "EditableFormat": "bbcode",
      "HTML": "What I would really like to see is this:<br/><br/>A new kind of object that is like scenery but has a window where you can add what rooms you want it to be in.  That way I only have to make the &quot;Sky&quot; one time and just put it into every &quot;room&quot; that is outside.<br/><br/>You could have an area with several rooms with the same kind of carpet and only make it one time...that would be great.<br/><br/>You should do that Alex.",
      "PostDate": "2011-01-13T05:30:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17680",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I'm planning something like this for Quest 5.0. It could be implemented now entirely in CoreScopes.aslx, as that defines what objects can be seen where.\n\nWe could either have a list property on a room that specifies which additional objects are in scope, or as you suggest, the object could have a list property on it that specifies which additional rooms it appears in (though that sounds like it would be slow, but maybe on initialisation we could just process all the lists and turn the latter into the former).",
      "EditableFormat": "bbcode",
      "HTML": "I'm planning something like this for Quest 5.0. It could be implemented now entirely in CoreScopes.aslx, as that defines what objects can be seen where.<br/><br/>We could either have a list property on a room that specifies which additional objects are in scope, or as you suggest, the object could have a list property on it that specifies which additional rooms it appears in (though that sounds like it would be slow, but maybe on initialisation we could just process all the lists and turn the latter into the former).",
      "PostDate": "2011-01-13T09:49:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17682",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "I thought of windows (and doors), too. I would suggest another solution. The problem of Dr.Froths window is, that you can only use it in one direction. If you have 2 room next to each other and want to use a window or a door in both directions, you have to use 2 objects, which must be coordinated (if you open a door from one side, it must be open from the other side, too).\nSo I thougt of new types of exits. Then you have one object, but you can use it in several rooms.\n\n  &lt;object name=&quot;golden key&quot;&gt;\n      &lt;take/&gt;\n  &lt;/object&gt;\n\t\n  &lt;object name=&quot;lounge&quot;&gt;\n    &lt;start/&gt;\n    &lt;prefix&gt;the&lt;/prefix&gt;\n\t&lt;exit alias=&quot;east&quot; to=&quot;hall&quot; id=&quot;door1&quot;/&gt;\n\t&lt;exit alias=&quot;east&quot; to=&quot;hall&quot; id=&quot;window1&quot;/&gt;\n  &lt;/object&gt;\n\n &lt;object name=&quot;hall&quot;&gt;\n    &lt;prefix&gt;the&lt;/prefix&gt;\n    &lt;exit alias=&quot;west&quot; to=&quot;lounge&quot; id=&quot;door1&quot;/&gt;\n\t&lt;exit alias=&quot;west&quot; to=&quot;lounge&quot; id=&quot;window1&quot;/&gt;\n &lt;/object&gt;\t\n \n &lt;object name=&quot;door1&quot;&gt;\n\t&lt;inherit name=&quot;door&quot;/&gt;\n &lt;/object&gt;\n \n &lt;object name=&quot;window1&quot;&gt;\n\t&lt;inherit name=&quot;window&quot;/&gt;\n &lt;/object&gt;\n \n  &lt;type name=&quot;door&quot;&gt;\n\t&lt;pass&gt;true&lt;/pass&gt;\n\t&lt;viewmode&gt;none&lt;/viewmode&gt;\n\t&lt;locked/&gt;\n\t&lt;key name=&quot;golden key&quot;/&gt;\n  &lt;/type&gt;\n  \n  &lt;type name=&quot;window&quot;&gt;\n\t&lt;pass&gt;false&lt;/pass&gt;\n\t&lt;viewmode&gt;large&lt;/viewmode&gt;\n  &lt;/type&gt;\n\nviewmode =none -&gt; you cant look through it\nviewmode=large -&gt; you can see the other room and all large objects in it (new property of an object)\nviewmode=medium -&gt; you can see the other room and all medium and large objects in it \nviewmode=small-&gt; you can see the other room and all objects in it",
      "EditableFormat": "bbcode",
      "HTML": "I thought of windows (and doors), too. I would suggest another solution. The problem of Dr.Froths window is, that you can only use it in one direction. If you have 2 room next to each other and want to use a window or a door in both directions, you have to use 2 objects, which must be coordinated (if you open a door from one side, it must be open from the other side, too).<br/>So I thougt of new types of exits. Then you have one object, but you can use it in several rooms.<br/><br/>  &lt;object name=&quot;golden key&quot;&gt;<br/>      &lt;take/&gt;<br/>  &lt;/object&gt;<br/>\t<br/>  &lt;object name=&quot;lounge&quot;&gt;<br/>    &lt;start/&gt;<br/>    &lt;prefix&gt;the&lt;/prefix&gt;<br/>\t&lt;exit alias=&quot;east&quot; to=&quot;hall&quot; id=&quot;door1&quot;/&gt;<br/>\t&lt;exit alias=&quot;east&quot; to=&quot;hall&quot; id=&quot;window1&quot;/&gt;<br/>  &lt;/object&gt;<br/><br/> &lt;object name=&quot;hall&quot;&gt;<br/>    &lt;prefix&gt;the&lt;/prefix&gt;<br/>    &lt;exit alias=&quot;west&quot; to=&quot;lounge&quot; id=&quot;door1&quot;/&gt;<br/>\t&lt;exit alias=&quot;west&quot; to=&quot;lounge&quot; id=&quot;window1&quot;/&gt;<br/> &lt;/object&gt;\t<br/> <br/> &lt;object name=&quot;door1&quot;&gt;<br/>\t&lt;inherit name=&quot;door&quot;/&gt;<br/> &lt;/object&gt;<br/> <br/> &lt;object name=&quot;window1&quot;&gt;<br/>\t&lt;inherit name=&quot;window&quot;/&gt;<br/> &lt;/object&gt;<br/> <br/>  &lt;type name=&quot;door&quot;&gt;<br/>\t&lt;pass&gt;true&lt;/pass&gt;<br/>\t&lt;viewmode&gt;none&lt;/viewmode&gt;<br/>\t&lt;locked/&gt;<br/>\t&lt;key name=&quot;golden key&quot;/&gt;<br/>  &lt;/type&gt;<br/>  <br/>  &lt;type name=&quot;window&quot;&gt;<br/>\t&lt;pass&gt;false&lt;/pass&gt;<br/>\t&lt;viewmode&gt;large&lt;/viewmode&gt;<br/>  &lt;/type&gt;<br/><br/>viewmode =none -&gt; you cant look through it<br/>viewmode=large -&gt; you can see the other room and all large objects in it (new property of an object)<br/>viewmode=medium -&gt; you can see the other room and all medium and large objects in it <br/>viewmode=small-&gt; you can see the other room and all objects in it",
      "PostDate": "2011-01-13T11:51:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17683",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I would prefer to do it in a similar way to containers. Currently in Q5, if you have a transparent object in a room, you can see all objects contained within it in the parent room.\n\nNow, a room is just an object in Q5 anyway, so you can nest rooms inside rooms.\n\nInside a parent &quot;room&quot;, you could put a transparent &quot;kitchen&quot; room and a transparent &quot;garden&quot; room. Then in the kitchen you can see objects in the garden, and vice versa. But if you're in the kitchen, then objects in the garden are not within ScopeReachable, so you can only see them, not take them.\n\nSo this is already possible in Q5. But it's not massively elegant at the moment, as you still need a non-transparent meta-room to contain both the kitchen and the garden. Also the garden appears as a viewable object inside the kitchen, which is OK in this particular case but I imagine sometimes you don't actually want the &quot;other&quot; room to be visible as an object itself.",
      "EditableFormat": "bbcode",
      "HTML": "I would prefer to do it in a similar way to containers. Currently in Q5, if you have a transparent object in a room, you can see all objects contained within it in the parent room.<br/><br/>Now, a room is just an object in Q5 anyway, so you can nest rooms inside rooms.<br/><br/>Inside a parent &quot;room&quot;, you could put a transparent &quot;kitchen&quot; room and a transparent &quot;garden&quot; room. Then in the kitchen you can see objects in the garden, and vice versa. But if you're in the kitchen, then objects in the garden are not within ScopeReachable, so you can only see them, not take them.<br/><br/>So this is already possible in Q5. But it's not massively elegant at the moment, as you still need a non-transparent meta-room to contain both the kitchen and the garden. Also the garden appears as a viewable object inside the kitchen, which is OK in this particular case but I imagine sometimes you don't actually want the &quot;other&quot; room to be visible as an object itself.",
      "PostDate": "2011-01-13T12:45:52+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17684",
      "UserId": 0,
      "Username": "Pertex",
      "UserAvatar": "5940_1369854251.gif",
      "UserGravatar": "4cc1e52f99452e841ecf4cbee9eadde9",
      "EditableText": "Uhh, I ve problems to get this  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  Ok, this could solve the problem with windows. If you are in the &quot;kitchen&quot;, you would see &quot;garden&quot; in the list of objects and you can call &quot;look garden&quot;. But I think I wouldn't use this. It feels as if there is no wall between kitchen and garden. I would like to have a window in the kitchen and if I &quot;look window&quot; I want to see the garden. And I want to &quot;open window&quot; and &quot;climb window&quot; to get into the garden. \n\nWhat about three rooms? kitchen can see garden and lobby, garden can see kitchen, lobby can see kitchen? Perhaps it is possible but its hard to understand, complex to do it with an editor or a script.\n\nI am sure, that you can do wonderful things with Q5 (cant wait to get it !!! ), but one of the most important thing is, that &quot;normal&quot; users still can create their game without much knowledge about objects and scripts. And I think my concept of exits would support this  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "EditableFormat": "bbcode",
      "HTML": "Uhh, I ve problems to get this  <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->  Ok, this could solve the problem with windows. If you are in the &quot;kitchen&quot;, you would see &quot;garden&quot; in the list of objects and you can call &quot;look garden&quot;. But I think I wouldn't use this. It feels as if there is no wall between kitchen and garden. I would like to have a window in the kitchen and if I &quot;look window&quot; I want to see the garden. And I want to &quot;open window&quot; and &quot;climb window&quot; to get into the garden. <br/><br/>What about three rooms? kitchen can see garden and lobby, garden can see kitchen, lobby can see kitchen? Perhaps it is possible but its hard to understand, complex to do it with an editor or a script.<br/><br/>I am sure, that you can do wonderful things with Q5 (cant wait to get it !!! ), but one of the most important thing is, that &quot;normal&quot; users still can create their game without much knowledge about objects and scripts. And I think my concept of exits would support this  <!-- s:lol: --><img src=\"{SMILIES_PATH}/icon_lol.gif\" alt=\":lol:\" title=\"Laughing\" /><!-- s:lol: -->",
      "PostDate": "2011-01-13T16:28:48+00:00",
      "LastEditDate": null
    }
  ]
}
