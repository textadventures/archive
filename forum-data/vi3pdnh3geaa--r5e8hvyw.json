{
  "Topic": {
    "TopicId": "vi3pdnh3geaa--r5e8hvyw",
    "ForumId": "10",
    "Title": "Once an object has been removed can it later be restored in the game",
    "LastUpdated": "2020-02-03T11:56:15.8851463Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e42ce23d-bc5f-47a1-91c3-69ddaa93d4af",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For example I have two objects\r\nUnicorn\r\nAngry Unicorn\r\nIn a script command I'd remove the unicorn and move the Angry Unicorn to the current room.\r\nLater I would want to replace the Angry Unicorn with the Unicorn but as I've removed the Unicorn I'm not certain if this is possible.\r\nI could make the unicorn invisible and the angry unicorn visible  but if I typed examine Unicorn then Quest would not know which unicorn I was referring to.\r\n\r\nOne solution would be move move the unicorns between a temp room (maybe a room called zero) and the current room, but there might be a better solution.\r\n\r\nBrian \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>For example I have two objects<br>\nUnicorn<br>\nAngry Unicorn<br>\nIn a script command I'd remove the unicorn and move the Angry Unicorn to the current room.<br>\nLater I would want to replace the Angry Unicorn with the Unicorn but as I've removed the Unicorn I'm not certain if this is possible.<br>\nI could make the unicorn invisible and the angry unicorn visible  but if I typed examine Unicorn then Quest would not know which unicorn I was referring to.</p>\n<p>One solution would be move move the unicorns between a temp room (maybe a room called zero) and the current room, but there might be a better solution.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-03T11:56:15.8851463Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dd08f65a-6460-4200-bd98-85f6aa7a60ef",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> In a script command I'd remove the unicorn and move the Angry Unicorn to the current room.\r\n\r\nThat's fine, as long as you remove the object rather than destroying it.\r\n\r\n`RemoveObject` sets an object's parent to the special value `null`. This means the object is floating in space, outside of any room, where the player can't reach it. You can bring it back whenever you want.\r\n\r\n(If you end up creating objects during the game, for example cloning monsters and potions, this can result in hundreds of pieces of space junk floating around, making your save file huge and taking up more memory. If you're cloning or creating objects, you would need to use `destroy` to get rid of them, but in your case `RemoveObject` does exactly what you want)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>In a script command I'd remove the unicorn and move the Angry Unicorn to the current room.</p>\n</blockquote>\n<p>That's fine, as long as you remove the object rather than destroying it.</p>\n<p><code>RemoveObject</code> sets an object's parent to the special value <code>null</code>. This means the object is floating in space, outside of any room, where the player can't reach it. You can bring it back whenever you want.</p>\n<p>(If you end up creating objects during the game, for example cloning monsters and potions, this can result in hundreds of pieces of space junk floating around, making your save file huge and taking up more memory. If you're cloning or creating objects, you would need to use <code>destroy</code> to get rid of them, but in your case <code>RemoveObject</code> does exactly what you want)</p>\n\n",
      "PostDate": "2020-02-03T12:38:45.5671049Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ff2059fa-60be-4501-867d-e7c3bffec29d",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Another way to do it is what i like to do is make non usable rooms as folders so like a room named items then store all items in there or a room called food and store all food items I use this as it also helps keep me organized and just move items back and forth as needed.",
      "EditableFormat": "markdown",
      "HTML": "<p>Another way to do it is what i like to do is make non usable rooms as folders so like a room named items then store all items in there or a room called food and store all food items I use this as it also helps keep me organized and just move items back and forth as needed.</p>\n\n",
      "PostDate": "2020-02-04T01:52:32.1203543Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5ebc7f1e-9db0-4735-a787-a1440f405928",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "mrangel: So to reinstate a removed object is it just a case of moving the object to the current room?\r\n\r\nonimike: Your idea sounds similar to my zero room (see my original text).",
      "EditableFormat": "markdown",
      "HTML": "<p>mrangel: So to reinstate a removed object is it just a case of moving the object to the current room?</p>\n<p>onimike: Your idea sounds similar to my zero room (see my original text).</p>\n\n",
      "PostDate": "2020-02-04T04:53:15.8101995Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a9fa0c53-f7b1-4b28-9f5b-3f9c617e0435",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "containment/parent-child/\"folder\" heirarchy:\r\n\r\ngrandfather\r\n-> father\r\n->-> son\r\n->->-> grandson\r\n\r\n'grandfather' is the root parent of 'father', 'son', and 'grandson'\r\n\r\n'grandfather' is the direct parent of 'father'\r\n'grandfather' is the indirect parent of 'son' and 'grandson'\r\n\r\n'father' is the direct child of 'grandfather'\r\n'father' is the direct parent of 'son'\r\n'father' is the indirect parent of 'grandson'\r\n\r\n'son' is the indirect child of 'grandfather'\r\n'son' is the direct child of 'father'\r\n'son' is the direct parent of 'grandson'\r\n\r\n'grandson' is the indirect child of 'grandfather' and 'father'\r\n'grandson' is the direct child of 'son'\r\n\r\n---------------------\r\n\r\nmore examples:\r\n\r\nC drive (drive: internal storage)\r\n-> programs (folder)\r\n->-> quest (folder)\r\n->->-> quest.exe (file)\r\n\r\nman\r\n-> pants\r\n->-> wallet\r\n->->-> $5\r\n->->-> $1\r\n-> shirt\r\nwoman\r\n-> purse\r\n->-> wallet\r\n->->-> $10\r\n\r\nquasi (off my bad memory, lol) quest default new game:\r\n\r\nASL (GAME OBJECT)\r\n-> Objects\r\n->-> game\r\n->->-> Verbs\r\n->->-> Commands\r\n->-> room\r\n->->-> player\r\n-> Functions\r\n-> Timers\r\n-> Walkthrough\r\n-> Advanced\r\n->-> Included Libraries\r\n->->-> 'English.aslx'\r\n->->-> 'Core.aslx'\r\n->-> Object Types\r\n->-> JavaScript\r\n\r\n-----------------------\r\n\r\nthe 'remove (NAME_OF_OBJECT)' Function simply sets the built-in 'parent' Object (reference/pointer) Attribute's Value to 'null'\r\n\r\nNAME_OF_OBJECT.parent = null\r\n\r\nwhen an Object's 'parent' Object (reference/pointer) Attribute's Value is 'null', it's actually set to the 'asl' GAME OBJECT (the root parent of quest game: everything must be within the 'asl' GAME OBJECT)\r\n\r\nif you want the 'NAME_OF_OBJECT' Object to be back within the default 'room' Room Object, then you'd just do this:\r\n\r\nNAME_OF_OBJECT.parent = room\r\n// or\r\nset (NAME_OF_OBJECT, \"parent\", room)\r\n// or\r\nMoveObject (NAME_OF_OBJECT, room)\r\n\r\n--------\r\n\r\nwhereas, the 'destroy (NAME_OF_OBJECT)' Function actually does destroy the Object: it ceases to exist in your game",
      "EditableFormat": "markdown",
      "HTML": "<p>containment/parent-child/\"folder\" heirarchy:</p>\n<p>grandfather<br>\n-&gt; father<br>\n-&gt;-&gt; son<br>\n-&gt;-&gt;-&gt; grandson</p>\n<p>'grandfather' is the root parent of 'father', 'son', and 'grandson'</p>\n<p>'grandfather' is the direct parent of 'father'<br>\n'grandfather' is the indirect parent of 'son' and 'grandson'</p>\n<p>'father' is the direct child of 'grandfather'<br>\n'father' is the direct parent of 'son'<br>\n'father' is the indirect parent of 'grandson'</p>\n<p>'son' is the indirect child of 'grandfather'<br>\n'son' is the direct child of 'father'<br>\n'son' is the direct parent of 'grandson'</p>\n<p>'grandson' is the indirect child of 'grandfather' and 'father'<br>\n'grandson' is the direct child of 'son'</p>\n<hr>\n<p>more examples:</p>\n<p>C drive (drive: internal storage)<br>\n-&gt; programs (folder)<br>\n-&gt;-&gt; quest (folder)<br>\n-&gt;-&gt;-&gt; quest.exe (file)</p>\n<p>man<br>\n-&gt; pants<br>\n-&gt;-&gt; wallet<br>\n-&gt;-&gt;-&gt; $5<br>\n-&gt;-&gt;-&gt; $1<br>\n-&gt; shirt<br>\nwoman<br>\n-&gt; purse<br>\n-&gt;-&gt; wallet<br>\n-&gt;-&gt;-&gt; $10</p>\n<p>quasi (off my bad memory, lol) quest default new game:</p>\n<p>ASL (GAME OBJECT)<br>\n-&gt; Objects<br>\n-&gt;-&gt; game<br>\n-&gt;-&gt;-&gt; Verbs<br>\n-&gt;-&gt;-&gt; Commands<br>\n-&gt;-&gt; room<br>\n-&gt;-&gt;-&gt; player<br>\n-&gt; Functions<br>\n-&gt; Timers<br>\n-&gt; Walkthrough<br>\n-&gt; Advanced<br>\n-&gt;-&gt; Included Libraries<br>\n-&gt;-&gt;-&gt; 'English.aslx'<br>\n-&gt;-&gt;-&gt; 'Core.aslx'<br>\n-&gt;-&gt; Object Types<br>\n-&gt;-&gt; JavaScript</p>\n<hr>\n<p>the 'remove (NAME_OF_OBJECT)' Function simply sets the built-in 'parent' Object (reference/pointer) Attribute's Value to 'null'</p>\n<p>NAME_OF_OBJECT.parent = null</p>\n<p>when an Object's 'parent' Object (reference/pointer) Attribute's Value is 'null', it's actually set to the 'asl' GAME OBJECT (the root parent of quest game: everything must be within the 'asl' GAME OBJECT)</p>\n<p>if you want the 'NAME_OF_OBJECT' Object to be back within the default 'room' Room Object, then you'd just do this:</p>\n<p>NAME_OF_OBJECT.parent = room<br>\n// or<br>\nset (NAME_OF_OBJECT, \"parent\", room)<br>\n// or<br>\nMoveObject (NAME_OF_OBJECT, room)</p>\n<hr>\n<p>whereas, the 'destroy (NAME_OF_OBJECT)' Function actually does destroy the Object: it ceases to exist in your game</p>\n\n",
      "PostDate": "2020-02-04T05:38:14.9837719Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "56a83cd9-4d75-42bc-81eb-00aa37cb5ee8",
      "UserId": 454326,
      "Username": "Brian5757",
      "AvatarUrl": "https://secure.gravatar.com/avatar/411c3e8cd4782d4a996f292940a61069?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks hegemonkhan.\r\n\r\nBrian",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks hegemonkhan.</p>\n<p>Brian</p>\n\n",
      "PostDate": "2020-02-04T05:47:40.1122739Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
