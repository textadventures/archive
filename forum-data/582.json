{
  "Topic": {
    "TopicId": "582",
    "ForumId": "10",
    "Title": "If comparison driving me up the wall...",
    "LastUpdated": "2004-12-03T22:42:11+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "4434",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Right, I've looked up and down, left and right... Circular, back in time, and every which way I can... I've looked every which way - but loose, and I'm hoping you look that way at the following code (sorry - that movie just jumped into my head).\n\nSo this if is driving me crazy - it works everywhere else, but here...\n[code:28t4l3db]\t\tset numeric &lt;CML_stotal; $parameter&#40;1&#41;$&gt;\n\t\tif NOT &#40; $parameter&#40;1&#41;$ = %CML_stotal% &#41; then &#123;\n\t\t\tdebug &lt;MATH ERROR == SUB ==&gt;\n\t\t\tdebug &lt;MATH ERROR == Library Parameter &quot;$parameter&#40;1&#41;$&quot; is not a number&#46; Skipping&#46;&#46;&#46;&gt;\n\t\t&#125;[/code:28t4l3db]\nThe if compares a numeric &lt;$parameter(1)$&gt; to a normal $parameter(1)$\nThen if it's a number it will reply with that - if NOT, it'll print this debug message and then luckily, quest defaults the error'd numeric to 0...\n\nBUT when I pass any number into there, I get the if activating... BUT even MORE weird is the fact the numeric and the parameter ARE the same... yet they aren't coming out the comparison the same... WHY!?!?\n*rips out hair*\nAnyone hazard a guess?",
      "EditableFormat": "bbcode",
      "HTML": "Right, I've looked up and down, left and right... Circular, back in time, and every which way I can... I've looked every which way - but loose, and I'm hoping you look that way at the following code (sorry - that movie just jumped into my head).<br/><br/>So this if is driving me crazy - it works everywhere else, but here...<br/><pre><code>\t\tset numeric &lt;CML_stotal; $parameter&#40;1&#41;$&gt;<br/>\t\tif NOT &#40; $parameter&#40;1&#41;$ = %CML_stotal% &#41; then &#123;<br/>\t\t\tdebug &lt;MATH ERROR == SUB ==&gt;<br/>\t\t\tdebug &lt;MATH ERROR == Library Parameter &quot;$parameter&#40;1&#41;$&quot; is not a number&#46; Skipping&#46;&#46;&#46;&gt;<br/>\t\t&#125;</code></pre><br/>The if compares a numeric &lt;$parameter(1)$&gt; to a normal $parameter(1)$<br/>Then if it's a number it will reply with that - if NOT, it'll print this debug message and then luckily, quest defaults the error'd numeric to 0...<br/><br/>BUT when I pass any number into there, I get the if activating... BUT even MORE weird is the fact the numeric and the parameter ARE the same... yet they aren't coming out the comparison the same... WHY!?!?<br/>*rips out hair*<br/>Anyone hazard a guess?",
      "PostDate": "2004-12-03T02:48:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4441",
      "UserId": 0,
      "Username": "I think Im Dead",
      "UserAvatar": null,
      "UserGravatar": "662782b48efa4728f8d0773b83c01ddf",
      "EditableText": "It's probably just quest being picky about the NOT aspect. I think it's a bit out of date and is mostly used for checking if an object has a property or action really.\n\nHave you thought of just checking if %CML_stotal% &lt;&gt; $parameter(1)$ (or vice-versa)?\n\nSeems like the obvious work around, though couldn't you just check the length of %CML_stotal% as a string put into a numeric would result in 0, or just checking if %CML_stotal% is equal to nothing? Both of those seem like easy enough ways to go around it, I'm thinking it is just a muck up with the NOT piece of code.",
      "EditableFormat": "bbcode",
      "HTML": "It's probably just quest being picky about the NOT aspect. I think it's a bit out of date and is mostly used for checking if an object has a property or action really.<br/><br/>Have you thought of just checking if %CML_stotal% &lt;&gt; $parameter(1)$ (or vice-versa)?<br/><br/>Seems like the obvious work around, though couldn't you just check the length of %CML_stotal% as a string put into a numeric would result in 0, or just checking if %CML_stotal% is equal to nothing? Both of those seem like easy enough ways to go around it, I'm thinking it is just a muck up with the NOT piece of code.",
      "PostDate": "2004-12-03T07:37:42+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4443",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "I think I remember something like &lt;&gt; and it complaining... But I'll try again later.\nI Just can't understand why it goes past that bit every time...\nThe reason I don't use zero - is because it is a valid number. And the $lengthof()$ function I think only works on strings... Numerics would result in 1 or more characters anyway - so either way that's impossible to tell.\n\n::EDIT::\nOK... Did what you suggested ITID, &lt;&gt; does work... I can't remember why I didn't use it in the first place - but I must have had a reason.\nAnyway, thanks for the assistance!",
      "EditableFormat": "bbcode",
      "HTML": "I think I remember something like &lt;&gt; and it complaining... But I'll try again later.<br/>I Just can't understand why it goes past that bit every time...<br/>The reason I don't use zero - is because it is a valid number. And the $lengthof()$ function I think only works on strings... Numerics would result in 1 or more characters anyway - so either way that's impossible to tell.<br/><br/>::EDIT::<br/>OK... Did what you suggested ITID, &lt;&gt; does work... I can't remember why I didn't use it in the first place - but I must have had a reason.<br/>Anyway, thanks for the assistance!",
      "PostDate": "2004-12-03T08:14:37+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4444",
      "UserId": 0,
      "Username": "Anonymous",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi guys\n\nTesting for a number not a string is curiously awkward to do in ASL, for example passing the string '007Bond' (where did I get that from I wonder) to a function will see it evaluated as 7 wheras 'Bond007' will be evaluated as 0.  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> \n\nSo basically, if your function accidentally gets passed a variable that contains a mix of alpha &amp; numerics,  results are going to be somewhat unpredictable.   \n\nAlthough it is long winded, I think I'd go with something that tests the passed parameter for valid characters - that way if any non numerics are in the passed variable the whole thing is evaluated as being a string &amp; returns 0. Something like:\n\n[code:2uu5kn4g]define function &lt;IsNumber&gt;\n\n  set string &lt;Test_For; 0123456789-&gt;\n  set string &lt;Passed_Val; $parameter&#40;1&#41;$&gt;\n  set numeric &lt;Test_Result; $parameter&#40;1&#41;$&gt;\n  set numeric &lt;Passed_Len; $lengthof&#40;#Passed_Val#&#41;$&gt;\n\t\n  if &#40;%Passed_Len% = 0&#41; then &#123;\n    set &lt;Test_result;0&gt;\n  &#125;\n  else &#123;\n    for &lt;i;1;%Passed_Len%&gt; &#123;\n      set string &lt;Test_Var;$mid&#40;#Passed_Val#;%i%;1&#41;$&gt;\t\n      if &#40;$instr&#40;#Test_For#;#Test_Var#&#41;$ =0 &#41; then set &lt;Test_Result;0&gt;\n    &#125;\n  &#125;\n  return &lt;%Test_Result%&gt;\t\n\nend define[/code:2uu5kn4g]\n\nHere I've done it so that a passed variable that contains any non numeric returns zero (which is what Quest delivers for strings that don't start with numerics!) I think I'd probably prefer the return of the -32767 (or whatever it is exactly) that Quest returns for an undefined numeric variable.\n\nAl (MaDbRiT)",
      "EditableFormat": "bbcode",
      "HTML": "Hi guys<br/><br/>Testing for a number not a string is curiously awkward to do in ASL, for example passing the string '007Bond' (where did I get that from I wonder) to a function will see it evaluated as 7 wheras 'Bond007' will be evaluated as 0.  <!-- s:shock: --><img src=\"{SMILIES_PATH}/icon_eek.gif\" alt=\":shock:\" title=\"Shocked\" /><!-- s:shock: --> <br/><br/>So basically, if your function accidentally gets passed a variable that contains a mix of alpha &amp; numerics,  results are going to be somewhat unpredictable.   <br/><br/>Although it is long winded, I think I'd go with something that tests the passed parameter for valid characters - that way if any non numerics are in the passed variable the whole thing is evaluated as being a string &amp; returns 0. Something like:<br/><br/><pre><code>define function &lt;IsNumber&gt;<br/><br/>  set string &lt;Test_For; 0123456789-&gt;<br/>  set string &lt;Passed_Val; $parameter&#40;1&#41;$&gt;<br/>  set numeric &lt;Test_Result; $parameter&#40;1&#41;$&gt;<br/>  set numeric &lt;Passed_Len; $lengthof&#40;#Passed_Val#&#41;$&gt;<br/>\t<br/>  if &#40;%Passed_Len% = 0&#41; then &#123;<br/>    set &lt;Test_result;0&gt;<br/>  &#125;<br/>  else &#123;<br/>    for &lt;i;1;%Passed_Len%&gt; &#123;<br/>      set string &lt;Test_Var;$mid&#40;#Passed_Val#;%i%;1&#41;$&gt;\t<br/>      if &#40;$instr&#40;#Test_For#;#Test_Var#&#41;$ =0 &#41; then set &lt;Test_Result;0&gt;<br/>    &#125;<br/>  &#125;<br/>  return &lt;%Test_Result%&gt;\t<br/><br/>end define</code></pre><br/><br/>Here I've done it so that a passed variable that contains any non numeric returns zero (which is what Quest delivers for strings that don't start with numerics!) I think I'd probably prefer the return of the -32767 (or whatever it is exactly) that Quest returns for an undefined numeric variable.<br/><br/>Al (MaDbRiT)",
      "PostDate": "2004-12-03T11:28:45+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4446",
      "UserId": 0,
      "Username": "paul_one",
      "UserAvatar": null,
      "UserGravatar": "fef8a1875028f4300bb683f29c432894",
      "EditableText": "Hmmm, well - my main reson for this - is that the programmer *should* see any error in output, see the debug info (as printed) and then see that the stuff he's passing the function is not a number - or at least, not a proper number (007Bond is one example)... I will have to set the number to zero though...\n\nI think my other functions skip the parameter altogether - but I'm not sure...\n\nThanks for the info though Al - helpful as ever!",
      "EditableFormat": "bbcode",
      "HTML": "Hmmm, well - my main reson for this - is that the programmer *should* see any error in output, see the debug info (as printed) and then see that the stuff he's passing the function is not a number - or at least, not a proper number (007Bond is one example)... I will have to set the number to zero though...<br/><br/>I think my other functions skip the parameter altogether - but I'm not sure...<br/><br/>Thanks for the info though Al - helpful as ever!",
      "PostDate": "2004-12-03T17:20:07+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "4458",
      "UserId": 0,
      "Username": "007bond",
      "UserAvatar": null,
      "UserGravatar": "4c2673a2d8666a97b5c1082c5cf2e0e5",
      "EditableText": "007bond is actually a good example.  Just on that point, i've been trying to write some code for MPlayer that gets the user's input, then checks each character to see if it is a number (0-9).  It works, but it works to well.  It says \"Invalid Character\" even when there are only numbers in it!",
      "EditableFormat": "bbcode",
      "HTML": "007bond is actually a good example.  Just on that point, i've been trying to write some code for MPlayer that gets the user's input, then checks each character to see if it is a number (0-9).  It works, but it works to well.  It says \"Invalid Character\" even when there are only numbers in it!",
      "PostDate": "2004-12-03T22:42:11+00:00",
      "LastEditDate": null
    }
  ]
}
