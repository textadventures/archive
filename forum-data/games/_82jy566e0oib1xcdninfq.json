{
  "Topic": {
    "TopicId": "_82jy566e0oib1xcdninfq",
    "ForumId": "5",
    "Title": "Resident Evil (Coming Soon)",
    "LastUpdated": "2016-09-22T07:10:45.9971854Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d77d23f3-5891-4200-84be-25b05045b08a",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Resident Evil Remastered brought to text adventure. \r\nChris Redfield and Jill Valentine are members of an elite task force known as S.T.A.R.S., as they investigate the outskirts of Raccoon City following the disappearance of their team members. They soon become trapped in a mansion infested with zombies and other monsters. The player, having selected to play as Chris or Jill at the start of the game, must explore the mansion to uncover its secrets. Each character has a different story, outcomes, weapons, defenses and more. \r\n\r\nCredits \r\n\r\nGame Creator Capcom/Biohazard http://www.capcom.co.jp/biohd/ \r\n\r\nWritting: https://www.gamefaqs.com/ps/198462-resident-evil-directors-cut/faqs/20010 \r\n\r\nImages and Map layout: http://www.evilresource.com/ \r\n\r\nWalkthrough: http://www.gamefaqs.com/ps/198454-resident-evil/faqs/59055?page=1 \r\n\r\nThe Pixie for use of Journal Library http://docs.textadventures.co.uk/quest/libraries/journal_library.html \r\nand Custom UI(User Interface)http://textadventures.co.uk/forum/samples/topic/6456/no-longer-failing-to-customise-the-compass-rose \r\n\r\n\r\nAs of now just starting this project I wanted to post game on site to test play-ability in online editor for features and custom UI with save. I am happy enough with the start that's another reason for adding it so early and will give those the link that wish to test or demo what is in so far. Would like to know the way it plays so far is good. Locked up the rest of the mansion for now besides demo area but all is created and connected.\r\n\r\nCurrently In \r\nMost Main Functions Done now time to set them up!\r\nMain Menu(Choose Start,Options,Load(Not Working ATM)and Exit) \r\nOptions Menu(Change font size,color and background color) \r\nCharacter Selection(Play as Jill or Chris each with different stories(Same intro different scenes,story,weapons,etc. listed above) \r\nJournal to take notes and to record room travel to help navigate with map as i don't now how to put in a map that will work for this game best solution i found) to track \r\nIn game \"Pause\" command(Brings up options menu.) \r\nMain Hall Opening story scenes for both Jill and Chris \r\nFirst 2 small puzzles \r\nMap (command to show map list only 1st floor map obtainable as of now) \r\nFirst 2 enemy encounters (Zombie and Cerberus(Zombie dog)each with cut scenes) \r\nEquipable weapons, Defenses, Ammo tracker and Condition monitor \r\nMinor descriptions for now until more main code is done, now its just populating every room with stories for each Jill and Chris (long way to go for completion) \r\nAll items,weapons,rooms,maps,etc. Everything has been created all weapons function correctly, different ammo types for Grenade Launcher(WORKS),different weaknesses and so much more in game and functions just not playable to that extent yet(Story First) \r\n\r\nOnce again if you want to check out what going on so far feel free to email me at onivision @ outlook dot com and i will send you link, didn't want to post as its not near done as far as the story goes.",
      "EditableFormat": "markdown",
      "HTML": "<p>Resident Evil Remastered brought to text adventure.<br>\nChris Redfield and Jill Valentine are members of an elite task force known as S.T.A.R.S., as they investigate the outskirts of Raccoon City following the disappearance of their team members. They soon become trapped in a mansion infested with zombies and other monsters. The player, having selected to play as Chris or Jill at the start of the game, must explore the mansion to uncover its secrets. Each character has a different story, outcomes, weapons, defenses and more.</p>\n<p>Credits</p>\n<p>Game Creator Capcom/Biohazard http://www.capcom.co.jp/biohd/</p>\n<p>Writting: https://www.gamefaqs.com/ps/198462-resident-evil-directors-cut/faqs/20010</p>\n<p>Images and Map layout: http://www.evilresource.com/</p>\n<p>Walkthrough: http://www.gamefaqs.com/ps/198454-resident-evil/faqs/59055?page=1</p>\n<p>The Pixie for use of Journal Library http://docs.textadventures.co.uk/quest/libraries/journal_library.html<br>\nand Custom UI(User Interface)http://textadventures.co.uk/forum/samples/topic/6456/no-longer-failing-to-customise-the-compass-rose</p>\n<p>As of now just starting this project I wanted to post game on site to test play-ability in online editor for features and custom UI with save. I am happy enough with the start that's another reason for adding it so early and will give those the link that wish to test or demo what is in so far. Would like to know the way it plays so far is good. Locked up the rest of the mansion for now besides demo area but all is created and connected.</p>\n<p>Currently In<br>\nMost Main Functions Done now time to set them up!<br>\nMain Menu(Choose Start,Options,Load(Not Working ATM)and Exit)<br>\nOptions Menu(Change font size,color and background color)<br>\nCharacter Selection(Play as Jill or Chris each with different stories(Same intro different scenes,story,weapons,etc. listed above)<br>\nJournal to take notes and to record room travel to help navigate with map as i don't now how to put in a map that will work for this game best solution i found) to track<br>\nIn game \"Pause\" command(Brings up options menu.)<br>\nMain Hall Opening story scenes for both Jill and Chris<br>\nFirst 2 small puzzles<br>\nMap (command to show map list only 1st floor map obtainable as of now)<br>\nFirst 2 enemy encounters (Zombie and Cerberus(Zombie dog)each with cut scenes)<br>\nEquipable weapons, Defenses, Ammo tracker and Condition monitor<br>\nMinor descriptions for now until more main code is done, now its just populating every room with stories for each Jill and Chris (long way to go for completion)<br>\nAll items,weapons,rooms,maps,etc. Everything has been created all weapons function correctly, different ammo types for Grenade Launcher(WORKS),different weaknesses and so much more in game and functions just not playable to that extent yet(Story First)</p>\n<p>Once again if you want to check out what going on so far feel free to email me at onivision @ outlook dot com and i will send you link, didn't want to post as its not near done as far as the story goes.</p>\n\n",
      "PostDate": "2016-09-22T07:10:45.9971854Z",
      "LastEditDate": "2016-09-22T07:12:50.4727452Z"
    },
    {
      "PostId": "eea9f587-2925-40b4-b23e-3fb421563a51",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah awesome, a fellow RE fan, hehe :D\r\n\r\nI've never played the games, but I like the movies (well 1 and 2, anyways. The rest have been poorly done --- I'm interested in how they're going to do the last/ending movie --- as to whether it'd be good or not... is another matter)\r\n\r\nso, that makes me an \"Alice\" (Milla Jovovich) fan, and not Jill Valnetine, lol.\r\n\r\nRE has a great idea, but they never really gave it a definative plot/direction, unfortunately.\r\n\r\n(if you're interested: check out Parasite Eve 1 for the PS1 and the 'Helix' SyFy tv series, really awesome, if you're into zombie/RE/bio-engineering type like stuff)",
      "EditableFormat": "markdown",
      "HTML": "<p>ah awesome, a fellow RE fan, hehe :D</p>\n<p>I've never played the games, but I like the movies (well 1 and 2, anyways. The rest have been poorly done --- I'm interested in how they're going to do the last/ending movie --- as to whether it'd be good or not... is another matter)</p>\n<p>so, that makes me an \"Alice\" (Milla Jovovich) fan, and not Jill Valnetine, lol.</p>\n<p>RE has a great idea, but they never really gave it a definative plot/direction, unfortunately.</p>\n<p>(if you're interested: check out Parasite Eve 1 for the PS1 and the 'Helix' SyFy tv series, really awesome, if you're into zombie/RE/bio-engineering type like stuff)</p>\n\n",
      "PostDate": "2016-09-22T20:30:03.0656745Z",
      "LastEditDate": "2016-09-22T20:31:00.3601448Z"
    },
    {
      "PostId": "1b6397e4-7a04-4235-9f5a-ac55d058168e",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh yeah HK I played Parasite Eve back when it came out great game. And RE was a favorite of mine with the puzzles and suspense of the zombies thought it would make a great text game.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh yeah HK I played Parasite Eve back when it came out great game. And RE was a favorite of mine with the puzzles and suspense of the zombies thought it would make a great text game.</p>\n\n",
      "PostDate": "2016-09-22T20:46:04.8219865Z",
      "LastEditDate": null
    },
    {
      "PostId": "a288b451-604a-4dcd-b820-3b95d416f66d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "since I just found out you're doing an RE game with different damage/elemental-damage types (and want to use armors, which likely also you'd want to have damage / elemental-damage type resistances/defense/protection):\r\n\r\na more elegant way of doing damage/elemental-damage types, is via Pixie's spell library, where you use Dictionary Attributes, as they allow for handling it (opposing elements: bonus/more damage, penalty/less damage, absorb, reflect, immunity, etc). This is a bit more complex/advanced than using Lists, just be warned.\r\n\r\nthink of a Dictionary as an 'input->output' box (or as a conversion), you give it an input, it finds the matching item, and returns/outputs that matching item's content:\r\n\r\ninput: gold_key\r\ndoes the dictionary contain a 'gold_key' item ???\r\npretending it does, and that the 'gold_key' item's content/value is: set (gold_door, \"locked\", false)\r\nthus, it returns it's content/value, (and in this example, since the item is a Script/Function), it's run/activated as well: the gold_door is unlocked.\r\n\r\n3 Dictionary Types:\r\n\r\nString Dictionary: \"STRING 1A\" input -> \"STRING 1B\" output\r\nObject Dictionary: \"STRING A\" input -> OBJECT_A output\r\nScript Dictionary: \"STRING A\" input -> Script(s)_A output\r\n\r\nString Dictionary Attribute:\r\n\"1\" = \"one\"\r\n\"2\" = \"two\"\r\n\"3\" = \"three\"\r\n\r\nif I input \"1\", I get returned \"one\"\r\nif I input \"2\", I get returned \"two\"\r\nif I input \"3\", I get returned \"three\"\r\n\r\n---\r\n\r\nString Dictionary Attribute:\r\n\"1\" = \"one\"\r\n\"2\" = \"two\"\r\n\"3\" = \"three\"\r\n\"three\" = \"3\"\r\n\"two\" = \"2\"\r\n\"one\" = \"1\"\r\n\r\nif I input \"1\", I get returned \"one\"\r\nif I input \"2\", I get returned \"two\"\r\nif I input \"3\", I get returned \"three\"\r\nif I input \"three\", I get returned \"3\"\r\nif I input \"two\", I get returned \"2\"\r\nif I input \"one\", I get returned \"1\"\r\n\r\n--------\r\n\r\n<object name=\"global_data_object\">\r\n  <attr name=\"example_string_dictionary_attribute\" type=\"simplestringdictionary\">1 = one; 2 = two; 3 = three; three = 3; two = 2; one = 1</attr>\r\n</object>\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"1\")\r\n// returned_value = \"one\"\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"2\")\r\n// returned_value = \"two\"\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"3\")\r\n// returned_value = \"three\"\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"two\")\r\n// returned_value = \"2\"\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"three\")\r\n// returned_value = \"3\"\r\n\r\nreturned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"one\")\r\n// returned_value = \"1\"\r\n\r\n------------------------\r\n\r\n```\r\n<object name=\"global_data_object\">\r\n\r\n  <attr name=\"elemental_string_list_attribute\" type=\"simplestringlist\">fire; water; air; earth</attr> // this damage element type list isn't used below, but you'd likely need a list of the elements damage types for other such stuff/usage (for example, if you want to randomly select an element for a monster, or if you need to add/remove elements - which you don't want to be doing with your dictionary for opposite element conversioning). So, there's a purpose to having a list and dictionary, even if they're somewhat similiar to each other.\r\n\r\n  <attr name=\"opposing_elemental_string_dictionary_attribute\" type=\"simplestringdictionary\">fire = water; water = fire; earth = air; air = earth</attr>\r\n\r\n  <object name=\"spells_data_object\">\r\n    <object name=\"water_blast_spell\">\r\n      <attr name=\"elemental_type\" type=\"string\">water</attr>\r\n      <attr name=\"damage\" type=\"int\">500</attr>\r\n    </object>\r\n  </object>\r\n\r\n  <object name=\"monsters_data_object\">\r\n    <object name=\"fire_dragon\">\r\n      <attr name=\"elemental_type\" type=\"string\">fire</attr>\r\n      <attr name=\"current_life\" type=\"int\">1000</attr>\r\n    </object>\r\n  </object>\r\n\r\n</object>\r\n\r\n// scripting:\r\n//\r\n// spell_combat_function (fire_dragon, water_blast_spell)\r\n\r\n<function name=\"spell_combat_function\" parameters=\"monster_parameter, spell_parameter\">\r\n\r\n  opposite_spell_elemental_string_variable = StringDictionaryItem (global_data_object.opposing_elemental_string_dictionary_attribute, spell_parameter.elemental_type)\r\n\r\n  if (monster_parameter.elemental_type = spell_parameter.elemental_type) {\r\n    monster.current_life = monster_parameter.current_life - (spell_parameter.damage / 2)\r\n  } else if (monster_parameter.elemental_type = opposite_spell_elemental_string_variable) {\r\n    monster_parameter.current_life = monster_parameter.current_life - (spell_paramter.damage * 2)\r\n  } else {\r\n    monster_parameter.current_life = monster_parameter.current_life - spell_parameter.damage\r\n  }\r\n\r\n</function>\r\n```\r\n\r\nQuestion: how much life does the fire dragon have left?\r\nAnswer: 0\r\n// fire dragon life = 1000 fire dragon life - (500 water blast spell damage * 2)\r\n// fire dragon life = 1000 fire dragon life - (1000)\r\n// fire dragon life = 0\r\n\r\nsince the 'water_blast_spell' is 'water' elemental, the 'StringDictionaryItem' takes the 'water' input, and finds that it matches up with the 'water = fire' (again note that this is 'input ---> output', so, the 'water = fire' item is only one way: water ---> fire, which is why you need another item as such: 'fire = water', so you have the opposite direction too: fire ---> water) item in the dictionary, and thus returns 'fire'. Since the fire dragon's element is 'fire' it matches up with the returned 'fire' (which is the opposite of the water blast spell's element), and thus correctly, the water bast spell does double damage against the fire dragon.\r\n\r\nthe reason is that we can only match up the same things, we can't match up different things (logically/pragmatically impossible), which is why we need to match up the opposite element of the spell with the monster, if it matches up, then it means that the monster and the spell are opposing elements, and thus the monster gets double damage done to it by the spell.\r\n\r\nit's a very advanced concept/thinking... but hopefully you get it ??? let me know if you don't... it's not an easy concept/thinking.\r\n(it took me along time to understand it... I looked at Pixie spell library for a long long long time, trying to understand what was going on with it... lol)\r\n\r\nobviously, if the monster and the spell are the same element, which we can test/check directly: if (monster.elemental = spell.elemental), then the spell is going to do only half damage (or we could do immunity: no damage, or absorption: heals the monster's life instead of damaging it, or reflection: you get damaged by the spell's damage or half of the spell's damage, instead).\r\n\r\nand if the matchup between monster and spell is anything else... then the spell jus does its normal damage to the monster.\r\n\r\n----------\r\n\r\n```\r\nif (monster: \"fire\" = spell: \"fire\") { // but our 'water_blast_spell' spell is NOT 'fire' elemental (the condition is FALSE: \"fire\" = \"water\"), so we go to the next condition check\r\n  the spell only does half of its damage to the fire dragon\r\n} else if (monster: \"fire\" = \"fire\" <===== opposite of spell:\"water\") // our 'water_blast_spell' spell IS 'water' elemental so we do the nested script below (as the condition is TRUE: \"fire\" = \"fire\")\r\n  the spell does double damage to the fire dragon!\r\n} else { // we don't get here, as our 'water_blast_spell' is 'water' element. If we used, for example, an 'air' element spell, then we'd get here\r\n  the spell does its normal damage to the fire dragon\r\n}\r\n```\r\n\r\n----------\r\n\r\nPixie is a genius! This is such an ingenius method... (once I finally understood it... laughs)",
      "EditableFormat": "markdown",
      "HTML": "<p>since I just found out you're doing an RE game with different damage/elemental-damage types (and want to use armors, which likely also you'd want to have damage / elemental-damage type resistances/defense/protection):</p>\n<p>a more elegant way of doing damage/elemental-damage types, is via Pixie's spell library, where you use Dictionary Attributes, as they allow for handling it (opposing elements: bonus/more damage, penalty/less damage, absorb, reflect, immunity, etc). This is a bit more complex/advanced than using Lists, just be warned.</p>\n<p>think of a Dictionary as an 'input-&gt;output' box (or as a conversion), you give it an input, it finds the matching item, and returns/outputs that matching item's content:</p>\n<p>input: gold_key<br>\ndoes the dictionary contain a 'gold_key' item ???<br>\npretending it does, and that the 'gold_key' item's content/value is: set (gold_door, \"locked\", false)<br>\nthus, it returns it's content/value, (and in this example, since the item is a Script/Function), it's run/activated as well: the gold_door is unlocked.</p>\n<p>3 Dictionary Types:</p>\n<p>String Dictionary: \"STRING 1A\" input -&gt; \"STRING 1B\" output<br>\nObject Dictionary: \"STRING A\" input -&gt; OBJECT_A output<br>\nScript Dictionary: \"STRING A\" input -&gt; Script(s)_A output</p>\n<p>String Dictionary Attribute:<br>\n\"1\" = \"one\"<br>\n\"2\" = \"two\"<br>\n\"3\" = \"three\"</p>\n<p>if I input \"1\", I get returned \"one\"<br>\nif I input \"2\", I get returned \"two\"<br>\nif I input \"3\", I get returned \"three\"</p>\n<hr>\n<p>String Dictionary Attribute:<br>\n\"1\" = \"one\"<br>\n\"2\" = \"two\"<br>\n\"3\" = \"three\"<br>\n\"three\" = \"3\"<br>\n\"two\" = \"2\"<br>\n\"one\" = \"1\"</p>\n<p>if I input \"1\", I get returned \"one\"<br>\nif I input \"2\", I get returned \"two\"<br>\nif I input \"3\", I get returned \"three\"<br>\nif I input \"three\", I get returned \"3\"<br>\nif I input \"two\", I get returned \"2\"<br>\nif I input \"one\", I get returned \"1\"</p>\n<hr>\n\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"1\")<br>\n// returned_value = \"one\"</p>\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"2\")<br>\n// returned_value = \"two\"</p>\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"3\")<br>\n// returned_value = \"three\"</p>\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"two\")<br>\n// returned_value = \"2\"</p>\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"three\")<br>\n// returned_value = \"3\"</p>\n<p>returned_value = StringDictionaryItem (global_data_object.example_string_dictionary_attribute, \"one\")<br>\n// returned_value = \"1\"</p>\n<hr>\n<pre><code>&lt;object name=\"global_data_object\"&gt;\n\n  &lt;attr name=\"elemental_string_list_attribute\" type=\"simplestringlist\"&gt;fire; water; air; earth&lt;/attr&gt; // this damage element type list isn't used below, but you'd likely need a list of the elements damage types for other such stuff/usage (for example, if you want to randomly select an element for a monster, or if you need to add/remove elements - which you don't want to be doing with your dictionary for opposite element conversioning). So, there's a purpose to having a list and dictionary, even if they're somewhat similiar to each other.\n\n  &lt;attr name=\"opposing_elemental_string_dictionary_attribute\" type=\"simplestringdictionary\"&gt;fire = water; water = fire; earth = air; air = earth&lt;/attr&gt;\n\n  &lt;object name=\"spells_data_object\"&gt;\n    &lt;object name=\"water_blast_spell\"&gt;\n      &lt;attr name=\"elemental_type\" type=\"string\"&gt;water&lt;/attr&gt;\n      &lt;attr name=\"damage\" type=\"int\"&gt;500&lt;/attr&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n\n  &lt;object name=\"monsters_data_object\"&gt;\n    &lt;object name=\"fire_dragon\"&gt;\n      &lt;attr name=\"elemental_type\" type=\"string\"&gt;fire&lt;/attr&gt;\n      &lt;attr name=\"current_life\" type=\"int\"&gt;1000&lt;/attr&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n\n&lt;/object&gt;\n\n// scripting:\n//\n// spell_combat_function (fire_dragon, water_blast_spell)\n\n&lt;function name=\"spell_combat_function\" parameters=\"monster_parameter, spell_parameter\"&gt;\n\n  opposite_spell_elemental_string_variable = StringDictionaryItem (global_data_object.opposing_elemental_string_dictionary_attribute, spell_parameter.elemental_type)\n\n  if (monster_parameter.elemental_type = spell_parameter.elemental_type) {\n    monster.current_life = monster_parameter.current_life - (spell_parameter.damage / 2)\n  } else if (monster_parameter.elemental_type = opposite_spell_elemental_string_variable) {\n    monster_parameter.current_life = monster_parameter.current_life - (spell_paramter.damage * 2)\n  } else {\n    monster_parameter.current_life = monster_parameter.current_life - spell_parameter.damage\n  }\n\n&lt;/function&gt;\n</code></pre>\n<p>Question: how much life does the fire dragon have left?<br>\nAnswer: 0<br>\n// fire dragon life = 1000 fire dragon life - (500 water blast spell damage * 2)<br>\n// fire dragon life = 1000 fire dragon life - (1000)<br>\n// fire dragon life = 0</p>\n<p>since the 'water_blast_spell' is 'water' elemental, the 'StringDictionaryItem' takes the 'water' input, and finds that it matches up with the 'water = fire' (again note that this is 'input ---&gt; output', so, the 'water = fire' item is only one way: water ---&gt; fire, which is why you need another item as such: 'fire = water', so you have the opposite direction too: fire ---&gt; water) item in the dictionary, and thus returns 'fire'. Since the fire dragon's element is 'fire' it matches up with the returned 'fire' (which is the opposite of the water blast spell's element), and thus correctly, the water bast spell does double damage against the fire dragon.</p>\n<p>the reason is that we can only match up the same things, we can't match up different things (logically/pragmatically impossible), which is why we need to match up the opposite element of the spell with the monster, if it matches up, then it means that the monster and the spell are opposing elements, and thus the monster gets double damage done to it by the spell.</p>\n<p>it's a very advanced concept/thinking... but hopefully you get it ??? let me know if you don't... it's not an easy concept/thinking.<br>\n(it took me along time to understand it... I looked at Pixie spell library for a long long long time, trying to understand what was going on with it... lol)</p>\n<p>obviously, if the monster and the spell are the same element, which we can test/check directly: if (monster.elemental = spell.elemental), then the spell is going to do only half damage (or we could do immunity: no damage, or absorption: heals the monster's life instead of damaging it, or reflection: you get damaged by the spell's damage or half of the spell's damage, instead).</p>\n<p>and if the matchup between monster and spell is anything else... then the spell jus does its normal damage to the monster.</p>\n<hr>\n<pre><code>if (monster: \"fire\" = spell: \"fire\") { // but our 'water_blast_spell' spell is NOT 'fire' elemental (the condition is FALSE: \"fire\" = \"water\"), so we go to the next condition check\n  the spell only does half of its damage to the fire dragon\n} else if (monster: \"fire\" = \"fire\" &lt;===== opposite of spell:\"water\") // our 'water_blast_spell' spell IS 'water' elemental so we do the nested script below (as the condition is TRUE: \"fire\" = \"fire\")\n  the spell does double damage to the fire dragon!\n} else { // we don't get here, as our 'water_blast_spell' is 'water' element. If we used, for example, an 'air' element spell, then we'd get here\n  the spell does its normal damage to the fire dragon\n}\n</code></pre>\n<hr>\n<p>Pixie is a genius! This is such an ingenius method... (once I finally understood it... laughs)</p>\n\n",
      "PostDate": "2016-09-22T21:38:03.7107866Z",
      "LastEditDate": "2016-09-24T04:46:32.382052Z"
    }
  ]
}
