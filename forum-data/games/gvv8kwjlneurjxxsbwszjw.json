{
  "Topic": {
    "TopicId": "gvv8kwjlneurjxxsbwszjw",
    "ForumId": "5",
    "Title": "Tutorial Advice",
    "LastUpdated": "2017-03-23T03:49:34.8538121Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "023b84ae-9481-4314-abf9-e203cdaab017",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So... I've finally decided to get around to revisiting my tutorial, which I know is not very user friendly. The goal for me is to create a friendly, easy to follow guide on how to use Quest from the most basic to the most advanced (at least as advanced as I can get).  It will be focused on using the GUI and not so much writing your own code, although there will inevitably be references to that.\r\n\r\nMy current plan is this.  Create small 'publications' with specific topics.  For example, the first one I decided to tackle was \"All About Objects\".  Here, there are currently 6 different rooms that progressively get more complex as the user travels south.  \r\n```\r\nThe rooms in order from most northern to southern are:\r\nRoom 1.  Naming objects.  Focus:  'naming objects' and 'using aliases' and 'other names'\r\nRoom 2.  All About Object Tabs.  Focus:  all the tab essentials\r\nRoom 3.  Visibles and Invisibles.  Focus:  making objects seen or unseen in a room.  Very handy!\r\nRoom 4.  Objects that Can Be Switched On/Off.  Focus:  Being able to turn on and off objects like TVs and Radios!\r\nRoom 5.  Combining Objects.  Focus:  Combining two or more objects to make new objects.\r\nRoom 6.  Using Objects on Other Objects.  Focus: Lots of Easy scripting and Complex Scripting.  Depends on what you want to do!\r\n```\r\nI plan on creating similar tutorials for other areas of Quest as well.  The current list of those areas are basically the major scripts:\r\n\r\nIf/Else If/Then\r\nFlags\r\nAdding and Managing Attributes\r\nUsing Commands and Verbs\r\nAdding Sounds and Images, and changing Text and Font options\r\nLight and Dark Options\r\nPlayer Health and Player Score\r\nEdibles and Clothing\r\nCreating Exits and Teleporting/Transportation of Player and Objects\r\nNPC Communication and Give, Tell, Ask\r\nHandling Player Input - Menus, Switch Scripts\r\nContainers, Locking/Unlocking\r\nOutputting Random Responses\r\nTurnscripts and Timers\r\nSimple Combat\r\nText Processor Commands\r\n\r\nThe last two things on my list I think would be helpful, but I have not worked into any of my games yet.\r\n\r\nPlease advise if there is anything that you think might be helpful, whether it is content, organization, layout, etc.  I'm happy to solo this thing (it helps me learn=) as a lot of the descriptions and scenarios are already written, but if anyone wants to contribute, especially in the areas in which I am weak, I would welcome it.\r\n\r\nThanks!\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>So... I've finally decided to get around to revisiting my tutorial, which I know is not very user friendly. The goal for me is to create a friendly, easy to follow guide on how to use Quest from the most basic to the most advanced (at least as advanced as I can get).  It will be focused on using the GUI and not so much writing your own code, although there will inevitably be references to that.</p>\n<p>My current plan is this.  Create small 'publications' with specific topics.  For example, the first one I decided to tackle was \"All About Objects\".  Here, there are currently 6 different rooms that progressively get more complex as the user travels south.</p>\n<pre><code>The rooms in order from most northern to southern are:\nRoom 1.  Naming objects.  Focus:  'naming objects' and 'using aliases' and 'other names'\nRoom 2.  All About Object Tabs.  Focus:  all the tab essentials\nRoom 3.  Visibles and Invisibles.  Focus:  making objects seen or unseen in a room.  Very handy!\nRoom 4.  Objects that Can Be Switched On/Off.  Focus:  Being able to turn on and off objects like TVs and Radios!\nRoom 5.  Combining Objects.  Focus:  Combining two or more objects to make new objects.\nRoom 6.  Using Objects on Other Objects.  Focus: Lots of Easy scripting and Complex Scripting.  Depends on what you want to do!\n</code></pre>\n<p>I plan on creating similar tutorials for other areas of Quest as well.  The current list of those areas are basically the major scripts:</p>\n<p>If/Else If/Then<br>\nFlags<br>\nAdding and Managing Attributes<br>\nUsing Commands and Verbs<br>\nAdding Sounds and Images, and changing Text and Font options<br>\nLight and Dark Options<br>\nPlayer Health and Player Score<br>\nEdibles and Clothing<br>\nCreating Exits and Teleporting/Transportation of Player and Objects<br>\nNPC Communication and Give, Tell, Ask<br>\nHandling Player Input - Menus, Switch Scripts<br>\nContainers, Locking/Unlocking<br>\nOutputting Random Responses<br>\nTurnscripts and Timers<br>\nSimple Combat<br>\nText Processor Commands</p>\n<p>The last two things on my list I think would be helpful, but I have not worked into any of my games yet.</p>\n<p>Please advise if there is anything that you think might be helpful, whether it is content, organization, layout, etc.  I'm happy to solo this thing (it helps me learn=) as a lot of the descriptions and scenarios are already written, but if anyone wants to contribute, especially in the areas in which I am weak, I would welcome it.</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2017-03-23T03:49:34.8538121Z",
      "LastEditDate": null
    },
    {
      "PostId": "d84b8ed6-0187-4e04-a7eb-bff0afe124f0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "sounds good, keep up the awesome work XanMag!\r\n\r\nI'd just recommend also getting to this too when you can include it into your tutorial (not sure if it should be combined with another topic such as Turnscripts+Timers, or as a separate topic in of itself):\r\n\r\nthe special 'changed' Script Attribute is really useful for people to know about too\r\n\r\nalso the 'parent' Object Attribute is useful for people to know/understand about too, but you're probably already going to cover this in one of your topics.",
      "EditableFormat": "markdown",
      "HTML": "<p>sounds good, keep up the awesome work XanMag!</p>\n<p>I'd just recommend also getting to this too when you can include it into your tutorial (not sure if it should be combined with another topic such as Turnscripts+Timers, or as a separate topic in of itself):</p>\n<p>the special 'changed' Script Attribute is really useful for people to know about too</p>\n<p>also the 'parent' Object Attribute is useful for people to know/understand about too, but you're probably already going to cover this in one of your topics.</p>\n\n",
      "PostDate": "2017-03-23T21:56:46.5628567Z",
      "LastEditDate": "2017-03-23T22:00:14.3109265Z"
    },
    {
      "PostId": "c0cce896-d058-400f-91cd-7664eb624ace",
      "UserId": 288307,
      "Username": "crystalwizard",
      "AvatarUrl": "http://i.imgur.com/3AxpbN7b.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As a suggestion, you might consider grabbing a few friends that know nothing about quest, and having them fire questions at you while they try to figure it out without any instructions to read. Jot all the questions down and then work up lessons to deal with them.",
      "EditableFormat": "markdown",
      "HTML": "<p>As a suggestion, you might consider grabbing a few friends that know nothing about quest, and having them fire questions at you while they try to figure it out without any instructions to read. Jot all the questions down and then work up lessons to deal with them.</p>\n\n",
      "PostDate": "2017-03-26T15:41:47.5901273Z",
      "LastEditDate": null
    },
    {
      "PostId": "3c9e0fab-c5e1-4692-b4fb-1189e293f7aa",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thankfully (sort of), I am a teacher and I probably could convince our \"computers\" teacher to work this in near the end of the year.  Use Quest as a learning tool for programming AND help me out with the tutorial along the way!  =)",
      "EditableFormat": "markdown",
      "HTML": "<p>Thankfully (sort of), I am a teacher and I probably could convince our \"computers\" teacher to work this in near the end of the year.  Use Quest as a learning tool for programming AND help me out with the tutorial along the way!  =)</p>\n\n",
      "PostDate": "2017-03-26T16:02:02.185036Z",
      "LastEditDate": null
    },
    {
      "PostId": "0db96c18-40cd-4289-bfb8-473db784177d",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For my introduction to Quest Tutorial I am \"simply\" discussing all the tabs and what they do.  \r\n\r\nHierarchy of input:\r\n\r\n1.  At the introduction to the game the player is presented with a list of word commands (the bold option is the option I am choosing as an example):\r\n2.  **game**, player, object, room, build, about, help are currently in the list\r\n3.  the possible tabs from the game screen are displayed and the player can choose 1 of 8 options (**1 - setup**)\r\n4.  a labelled picture appears with the game screen and setup tab clicked from which the player can select one of the numbers (1, **2**,-10) in the picture to learn its function\r\n5.  The \"Game Name\" box is described.\r\n\r\nMy options for set-up/lay-out, as I see them, are:\r\n1.  Type everything.  Player types 'commands'.  Player types 'game'.  Player types 1.  Player types 2.  They are presented with a homemade menu (switch/case/result) script at each selection.\r\n2.  Create Menus for each interaction.  Player is presented with a menu at the start of the game.  Player chooses 'game'.  Player chooses 1 - setup.  Player chooses 2 - Game Name.  Menus are presented after every selection.\r\n3.  Create a room for each \"command\".  In each room (the game room), the objects will be containers and the possible tabs which can be looked at are inside.  When looking at tab '1 - setup', a picture will appear and the children of 'tab 1 - setup' will be made visible.  The player can then look at 'game name' object (a child of tab 1 - setup) and get a description of the purpose of the game name section of this tab.\r\n\r\nI am leaning toward option 3, as it considers those who prefer typing and those that prefer clicking AND it seems like the least messy of the bunch.  Any ideas/input on this is greatly appreciated!\r\n\r\nThanks!",
      "EditableFormat": "markdown",
      "HTML": "<p>For my introduction to Quest Tutorial I am \"simply\" discussing all the tabs and what they do.</p>\n<p>Hierarchy of input:</p>\n<ol>\n<li>At the introduction to the game the player is presented with a list of word commands (the bold option is the option I am choosing as an example):</li>\n<li><strong>game</strong>, player, object, room, build, about, help are currently in the list</li>\n<li>the possible tabs from the game screen are displayed and the player can choose 1 of 8 options (<strong>1 - setup</strong>)</li>\n<li>a labelled picture appears with the game screen and setup tab clicked from which the player can select one of the numbers (1, <strong>2</strong>,-10) in the picture to learn its function</li>\n<li>The \"Game Name\" box is described.</li>\n</ol>\n<p>My options for set-up/lay-out, as I see them, are:</p>\n<ol>\n<li>Type everything.  Player types 'commands'.  Player types 'game'.  Player types 1.  Player types 2.  They are presented with a homemade menu (switch/case/result) script at each selection.</li>\n<li>Create Menus for each interaction.  Player is presented with a menu at the start of the game.  Player chooses 'game'.  Player chooses 1 - setup.  Player chooses 2 - Game Name.  Menus are presented after every selection.</li>\n<li>Create a room for each \"command\".  In each room (the game room), the objects will be containers and the possible tabs which can be looked at are inside.  When looking at tab '1 - setup', a picture will appear and the children of 'tab 1 - setup' will be made visible.  The player can then look at 'game name' object (a child of tab 1 - setup) and get a description of the purpose of the game name section of this tab.</li>\n</ol>\n<p>I am leaning toward option 3, as it considers those who prefer typing and those that prefer clicking AND it seems like the least messy of the bunch.  Any ideas/input on this is greatly appreciated!</p>\n<p>Thanks!</p>\n\n",
      "PostDate": "2017-03-28T19:48:09.7371951Z",
      "LastEditDate": "2017-03-28T19:49:20.6237451Z"
    }
  ]
}
