{
  "Topic": {
    "TopicId": "ve5cdk_p9ugyaq0pfsrwda",
    "ForumId": "10",
    "Title": "counters [solved]",
    "LastUpdated": "2017-01-20T18:46:01.7493511Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e24c327a-bc05-4772-b4ed-96d3b8a3e627",
      "UserId": 288105,
      "Username": "redskyi",
      "AvatarUrl": "https://graph.facebook.com/1346447678763206/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "so, this has probably been asked before, but being a newbie with scripts, i need it explained in this specific situation. ;A;\r\n\r\nso for Gamebook mode.\r\nbasically, i'm making a game where the player's decisions affect an invisible morale number that is linked to a character. when the player makes decisions that please the character, they get +1 morale. i want to use this 'morale' to make future decisions available or not-available to make. so, if you make enough good decisions, for example get +30 morale, an otherwise unavailable decision becomes available in a future instance.\r\n\r\nthe only thing i've tried is using the counter script, and trying to make it increase and decrease between pages, but i'm probably not doing it right. help?",
      "EditableFormat": "markdown",
      "HTML": "<p>so, this has probably been asked before, but being a newbie with scripts, i need it explained in this specific situation. ;A;</p>\n<p>so for Gamebook mode.<br>\nbasically, i'm making a game where the player's decisions affect an invisible morale number that is linked to a character. when the player makes decisions that please the character, they get +1 morale. i want to use this 'morale' to make future decisions available or not-available to make. so, if you make enough good decisions, for example get +30 morale, an otherwise unavailable decision becomes available in a future instance.</p>\n<p>the only thing i've tried is using the counter script, and trying to make it increase and decrease between pages, but i'm probably not doing it right. help?</p>\n\n",
      "PostDate": "2017-01-20T18:46:01.7493511Z",
      "LastEditDate": "2017-01-23T17:03:05.9114752Z"
    },
    {
      "PostId": "5c4e5d53-8cdd-4721-9583-ab8f1fcad2aa",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You should be able to do this with Object Counter function, use Player as the Object, call it morale and add one to it when the player makes the right decision. There is good help in the tutorial about using Object Counters and Flags, only just learnt them myself and a they're a real game changer.",
      "EditableFormat": "markdown",
      "HTML": "<p>You should be able to do this with Object Counter function, use Player as the Object, call it morale and add one to it when the player makes the right decision. There is good help in the tutorial about using Object Counters and Flags, only just learnt them myself and a they're a real game changer.</p>\n\n",
      "PostDate": "2017-01-20T21:08:47.7468712Z",
      "LastEditDate": null
    },
    {
      "PostId": "b957c03c-9a84-4afe-951d-b4ba19eef5cd",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If that wasn't clear, you need to use an If function on the decision the player makes then run Object Counter depending on decision made by player",
      "EditableFormat": "markdown",
      "HTML": "<p>If that wasn't clear, you need to use an If function on the decision the player makes then run Object Counter depending on decision made by player</p>\n\n",
      "PostDate": "2017-01-20T21:09:49.2645176Z",
      "LastEditDate": null
    },
    {
      "PostId": "9ee8e442-7381-45a7-9fb7-ede1eb88c7cb",
      "UserId": 288105,
      "Username": "redskyi",
      "AvatarUrl": "https://graph.facebook.com/1346447678763206/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, thanks! I'm only wondering how you can do that in Gamebook mode? I can't seem to find anything like that. Dx",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, thanks! I'm only wondering how you can do that in Gamebook mode? I can't seem to find anything like that. Dx</p>\n\n",
      "PostDate": "2017-01-20T21:25:40.923778Z",
      "LastEditDate": null
    },
    {
      "PostId": "463ffc92-3cfd-4edc-a13d-7d057b29327e",
      "UserId": 263865,
      "Username": "NecroDeath",
      "AvatarUrl": "http://i.imgur.com/1w7HHAhb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, sorry, should have read you post more carefully. I've never used Gamebook mode.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, sorry, should have read you post more carefully. I've never used Gamebook mode.</p>\n\n",
      "PostDate": "2017-01-20T21:29:53.719763Z",
      "LastEditDate": null
    },
    {
      "PostId": "741845cd-f82c-4a13-ad42-5cc2fff3d1d7",
      "UserId": 288105,
      "Username": "redskyi",
      "AvatarUrl": "https://graph.facebook.com/1346447678763206/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hahah it's ok, Gamebook mode seems limited I think ;_; But I'll wait in case someone knows \\m/",
      "EditableFormat": "markdown",
      "HTML": "<p>Hahah it's ok, Gamebook mode seems limited I think ;_; But I'll wait in case someone knows \\m/</p>\n\n",
      "PostDate": "2017-01-20T21:33:28.7082713Z",
      "LastEditDate": "2017-01-20T21:34:00.3638289Z"
    },
    {
      "PostId": "07a5120e-1dbb-48cf-b319-b86a32e7ea42",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you need to create your Attribute(s) first (usually you use your very first page to do this), before you can then use them:\r\n\r\n'whatever' Page -> 'Page' Tab -> Page Type: [script] or [script + text] -> (see below)\r\n\r\nadd new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nin the Game Book, you only got two Objects that you can add Attributes to (unlike the Text Adventure):\r\n\r\n1. the 'game' Game Settings Object\r\n2. the 'player' Player Object\r\n\r\nso, replace my 'NAME_OF_OBJECT' with either: 'player' or 'game', so it looks like this:\r\n\r\nset variable game.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\nor\r\nset variable player.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nnext, give your Attribute a name, which will replace my 'NAME_OF_ATTRIBUTE', for example using my own descriptive naming/labeling system/convention:\r\n\r\n'npc_1_morale_integer_attribute'\r\n\r\nset variable game.npc_1_morale_integer_attribute = [EXPRESSION] VALUE_OR_EXPRESSION\r\nor\r\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] VALUE_OR_EXPRESSION\r\n\r\nthe name of the Attribute has nothing to do with the type of the Attribute, I just like to be descriptive with it, as it works well for me, as I can just look/read its name, and know what the Attribute is and for, and it allows for keeping names unique, which they must be, as the name is the ID for quest, for an example of why I like my this labeling/naming system/convention of mine: player.strength_integer_attribute = 100, and, player.strength_string_attribute = \"strong\"\r\n\r\nnow, we give your Attribute (for what you want to do, you want your Attribute to be an Integer/int Attribute by giving it...), a Value (which we want the Value to be an Integer/int Value: etc,-100, -9, -1, 0, 1, 3, 100, etc), so for what you want, we'll give it an initial/starting Value of: 0, see below:\r\n\r\n(quest is able to parse the type of Value, which it uses to determine the type of Attribute)\r\n\r\nset variable game.npc_1_morale_integer_attribute = [EXPRESSION] 0\r\nor\r\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] 0\r\n\r\n--------\r\n\r\nnext, for whatever/whenever the events/actions/decisions/choices (scripting) in your game that you want to increase this 'morale' Integer Attribute, you do use the same script ('set a variable or attribute' Script), but with a slight change:\r\n\r\n'whatever' Page -> 'Page' Tab -> Page Type: [script] or [script + text] -> (see below)\r\n\r\nadd new script -> 'variables' section/category -> 'set a variable or attribute' Script -> (see below)\r\n\r\nset variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION\r\n\r\nso, for example:\r\n\r\nset variable game.npc_1_morale_integer_attribute = [EXPRESSION] game.npc_1_morale_integer_attribute + 1\r\nor\r\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] player.npc_1_morale_integer_attribute + 1\r\n\r\n'counters' are Integer Attributes, which you increase (aka addition, and usually) by 1, but you can do any operation (addition: +, subtraction: -, multiplication: *, division: /, and modulus which is division operation but you're finding/getting the remainder: %, or the string operation of concatenation: +) and any Value, using this 'set a variable or attribute' Script.\r\n\r\n-------\r\n\r\nlastly, for whatever/whenever the events/actions in your game, you use the 'if' Script:\r\n\r\nadd new script -> 'scripts' section/category -> 'if' Script -> (see below)\r\n\r\nif [EXPRESSION] CONDITION:EXPRESSION_OR_BOOLEAN_VALUE/ATTRIBUTE\r\n\r\nfor an example (in code):\r\n\r\n(let me know if you need help with doing this with the GUI/Editor)\r\n\r\n```\r\nif (game.npc_1_morale_integer_attribute > 66) {\r\n  // whatever script(s)\r\n}\r\nelse if (game.npc_1_morale_integer_attribute > 33) {\r\n  // whatever script(s)\r\n}\r\nelse {\r\n  // whatever script(s)\r\n}\r\n\r\n-------------\r\n\r\nString Attribute comparison example:\r\n\r\ngame.npc_1_morale_string_attribute = \"high\" // or: \"medium\" // or: \"low\"\r\n\r\nif (game.npc_1_morale_string_attribute = \"high\") {\r\n  // whatever script(s)\r\n}\r\nelse if (game.npc_1_morale_string_attribute = \"medium\") {\r\n  // whatever script(s)\r\n}\r\nelse if (game.npc_1_morale_string_attribute = \"low\") {\r\n  // whatever script(s)\r\n}\r\n\r\n-----------\r\n\r\nBoolean Attribute example:\r\n\r\ngame.orc_dead_boolean_attribute = false // or: true (though you usually don't want your monster/orc to start out logically dead, lol)\r\n\r\nif (game.orc_dead_boolean_attribute) { // if TRUE\r\n  // script(s)\r\n}\r\nelse { // if FALSE\r\n  // script(s)\r\n}\r\n\r\nor the opposite (via using negation: the 'not' OPERATOR):\r\n\r\nif (not game.orc_dead_boolean_attribute) { // if FALSE\r\n  // script(s)\r\n}\r\nelse { // if TRUE\r\n  // script(s)\r\n}\r\n```\r\n\r\n----------\r\n\r\nhere's a link of my guide on Attributes and the 'if' Script usage:\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk\r\n\r\n(the guide is written for Text Adventure, but Attributes and the 'if' Script usage is the same, only the methods of accessing them differs)\r\n\r\n------------\r\n\r\nP.S.\r\n\r\nif you haven't noticed...\r\n\r\nin Game Book, you only got two Objects that you can add Attributes to:\r\n\r\n'player' and 'game'\r\n\r\nbut, notice how I've shown how you can cheat around this, giving the illusion (same effect) as/of if you had more Objects, examples  (in code):\r\n\r\ngame.npc_1_morale_integer_attribute\r\ngame.npc_2_morale_integer_attribute\r\ngame.npc_3_morale_integer_attribute\r\ngame.monster_1_morale_integer_attribute\r\ngame.monster_2_morale_integer_attribute\r\ngame.monster_3_morale_integer_attribute\r\ngame.monster_1_current_life_integer_attribute\r\ngame.monster_2_current_life_integer_attribute\r\ngame.monster_3_current_life_integer_attribute\r\n\r\nand/or (though using 'game' is more logical aesthetically than using 'player', but there's no practical/actual difference):\r\n\r\nplayer.npc_1_morale_integer_attribute\r\nplayer.npc_2_morale_integer_attribute\r\nplayer.npc_3_morale_integer_attribute\r\nplayer.monster_1_morale_integer_attribute\r\nplayer.monster_2_morale_integer_attribute\r\nplayer.monster_3_morale_integer_attribute\r\nplayer.monster_1_current_life_integer_attribute\r\nplayer.monster_2_current_life_integer_attribute\r\nplayer.monster_3_current_life_integer_attribute",
      "EditableFormat": "markdown",
      "HTML": "<p>you need to create your Attribute(s) first (usually you use your very first page to do this), before you can then use them:</p>\n<p>'whatever' Page -&gt; 'Page' Tab -&gt; Page Type: [script] or [script + text] -&gt; (see below)</p>\n<p>add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>in the Game Book, you only got two Objects that you can add Attributes to (unlike the Text Adventure):</p>\n<ol>\n<li>the 'game' Game Settings Object</li>\n<li>the 'player' Player Object</li>\n</ol>\n<p>so, replace my 'NAME_OF_OBJECT' with either: 'player' or 'game', so it looks like this:</p>\n<p>set variable game.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION<br>\nor<br>\nset variable player.NAME_OF_ATTRIBUTE = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>next, give your Attribute a name, which will replace my 'NAME_OF_ATTRIBUTE', for example using my own descriptive naming/labeling system/convention:</p>\n<p>'npc_1_morale_integer_attribute'</p>\n<p>set variable game.npc_1_morale_integer_attribute = [EXPRESSION] VALUE_OR_EXPRESSION<br>\nor<br>\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] VALUE_OR_EXPRESSION</p>\n<p>the name of the Attribute has nothing to do with the type of the Attribute, I just like to be descriptive with it, as it works well for me, as I can just look/read its name, and know what the Attribute is and for, and it allows for keeping names unique, which they must be, as the name is the ID for quest, for an example of why I like my this labeling/naming system/convention of mine: player.strength_integer_attribute = 100, and, player.strength_string_attribute = \"strong\"</p>\n<p>now, we give your Attribute (for what you want to do, you want your Attribute to be an Integer/int Attribute by giving it...), a Value (which we want the Value to be an Integer/int Value: etc,-100, -9, -1, 0, 1, 3, 100, etc), so for what you want, we'll give it an initial/starting Value of: 0, see below:</p>\n<p>(quest is able to parse the type of Value, which it uses to determine the type of Attribute)</p>\n<p>set variable game.npc_1_morale_integer_attribute = [EXPRESSION] 0<br>\nor<br>\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] 0</p>\n<hr>\n<p>next, for whatever/whenever the events/actions/decisions/choices (scripting) in your game that you want to increase this 'morale' Integer Attribute, you do use the same script ('set a variable or attribute' Script), but with a slight change:</p>\n<p>'whatever' Page -&gt; 'Page' Tab -&gt; Page Type: [script] or [script + text] -&gt; (see below)</p>\n<p>add new script -&gt; 'variables' section/category -&gt; 'set a variable or attribute' Script -&gt; (see below)</p>\n<p>set variable NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = [EXPRESSION] NAME_OF_OBJECT.NAME_OF_ATTRIBUTE OPERATOR VALUE_OR_EXPRESSION</p>\n<p>so, for example:</p>\n<p>set variable game.npc_1_morale_integer_attribute = [EXPRESSION] game.npc_1_morale_integer_attribute + 1<br>\nor<br>\nset variable player.npc_1_morale_integer_attribute = [EXPRESSION] player.npc_1_morale_integer_attribute + 1</p>\n<p>'counters' are Integer Attributes, which you increase (aka addition, and usually) by 1, but you can do any operation (addition: +, subtraction: -, multiplication: *, division: /, and modulus which is division operation but you're finding/getting the remainder: %, or the string operation of concatenation: +) and any Value, using this 'set a variable or attribute' Script.</p>\n<hr>\n<p>lastly, for whatever/whenever the events/actions in your game, you use the 'if' Script:</p>\n<p>add new script -&gt; 'scripts' section/category -&gt; 'if' Script -&gt; (see below)</p>\n<p>if [EXPRESSION] CONDITION:EXPRESSION_OR_BOOLEAN_VALUE/ATTRIBUTE</p>\n<p>for an example (in code):</p>\n<p>(let me know if you need help with doing this with the GUI/Editor)</p>\n<pre><code>if (game.npc_1_morale_integer_attribute &gt; 66) {\n  // whatever script(s)\n}\nelse if (game.npc_1_morale_integer_attribute &gt; 33) {\n  // whatever script(s)\n}\nelse {\n  // whatever script(s)\n}\n\n-------------\n\nString Attribute comparison example:\n\ngame.npc_1_morale_string_attribute = \"high\" // or: \"medium\" // or: \"low\"\n\nif (game.npc_1_morale_string_attribute = \"high\") {\n  // whatever script(s)\n}\nelse if (game.npc_1_morale_string_attribute = \"medium\") {\n  // whatever script(s)\n}\nelse if (game.npc_1_morale_string_attribute = \"low\") {\n  // whatever script(s)\n}\n\n-----------\n\nBoolean Attribute example:\n\ngame.orc_dead_boolean_attribute = false // or: true (though you usually don't want your monster/orc to start out logically dead, lol)\n\nif (game.orc_dead_boolean_attribute) { // if TRUE\n  // script(s)\n}\nelse { // if FALSE\n  // script(s)\n}\n\nor the opposite (via using negation: the 'not' OPERATOR):\n\nif (not game.orc_dead_boolean_attribute) { // if FALSE\n  // script(s)\n}\nelse { // if TRUE\n  // script(s)\n}\n</code></pre>\n<hr>\n<p>here's a link of my guide on Attributes and the 'if' Script usage:</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5559/attributes-and-if-script-guide-by-hk</p>\n<p>(the guide is written for Text Adventure, but Attributes and the 'if' Script usage is the same, only the methods of accessing them differs)</p>\n<hr>\n<p>P.S.</p>\n<p>if you haven't noticed...</p>\n<p>in Game Book, you only got two Objects that you can add Attributes to:</p>\n<p>'player' and 'game'</p>\n<p>but, notice how I've shown how you can cheat around this, giving the illusion (same effect) as/of if you had more Objects, examples  (in code):</p>\n<p>game.npc_1_morale_integer_attribute<br>\ngame.npc_2_morale_integer_attribute<br>\ngame.npc_3_morale_integer_attribute<br>\ngame.monster_1_morale_integer_attribute<br>\ngame.monster_2_morale_integer_attribute<br>\ngame.monster_3_morale_integer_attribute<br>\ngame.monster_1_current_life_integer_attribute<br>\ngame.monster_2_current_life_integer_attribute<br>\ngame.monster_3_current_life_integer_attribute</p>\n<p>and/or (though using 'game' is more logical aesthetically than using 'player', but there's no practical/actual difference):</p>\n<p>player.npc_1_morale_integer_attribute<br>\nplayer.npc_2_morale_integer_attribute<br>\nplayer.npc_3_morale_integer_attribute<br>\nplayer.monster_1_morale_integer_attribute<br>\nplayer.monster_2_morale_integer_attribute<br>\nplayer.monster_3_morale_integer_attribute<br>\nplayer.monster_1_current_life_integer_attribute<br>\nplayer.monster_2_current_life_integer_attribute<br>\nplayer.monster_3_current_life_integer_attribute</p>\n\n",
      "PostDate": "2017-01-21T14:17:24.4432186Z",
      "LastEditDate": "2017-01-21T14:32:09.3502109Z"
    },
    {
      "PostId": "53ea4503-62d2-4729-bfd5-74f110042df4",
      "UserId": 288105,
      "Username": "redskyi",
      "AvatarUrl": "https://graph.facebook.com/1346447678763206/picture?width=80&height=80",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "holy crap thanks hegemonkhan! ^^ i'll start messing around with this and report back if i've got any trouble. thanks again <3",
      "EditableFormat": "markdown",
      "HTML": "<p>holy crap thanks hegemonkhan! ^^ i'll start messing around with this and report back if i've got any trouble. thanks again &lt;3</p>\n\n",
      "PostDate": "2017-01-22T10:19:55.9929916Z",
      "LastEditDate": null
    }
  ]
}
