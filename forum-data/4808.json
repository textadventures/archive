{
  "Topic": {
    "TopicId": "4808",
    "ForumId": "18",
    "Title": "Organizational Designs",
    "LastUpdated": "2014-11-24T22:58:13+00:00",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "31909",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "keep a folder of files of code (and even better if that code is also implemented as being a playable~testable game) that works (your own code, all the library files on this site ~ hehe, and code given in the forum's posts by people ~ hehe)\n\nUSE A LOT of comments (the: ' // your comments ' ) in your Scripting code blocks, as you'd be surprise how easy it is to forget (how to do) things over time... ~ &quot;a pinch of prevention is worth a pound of treatment~cure&quot; (or however the saying goes, lol) ...\n\n[HK Edit: went off on big tangent, bad when you get social ~ when your mind wanders off, laughs, as it is off-topic content for the post that you get social in, when the post's thread is not a social thread. so I removed it]\n\nalso, you may want to use library files (*.aslx) to organize all your game code aspects:\n\n(sometimes it's good to split stuff up as multiple files, such as 'how to guides', and sometimes it's good to have stuff in a single place, aka as a single file for quick reference)\n\n(and you can just copy and paste whatever code from this 'master' library file of yours, into your game file that you're working on)\n\n[code:3rxc5qd9]&lt;library&gt;\n\n  // you can always do more (or less) sub-cateogries as you want for better organization\n\n  &lt;!-- new (default) tree --&gt;\n\n  // the default new game tree&#58;\n  &lt;!--\n  Objects\n    Game\n      Verbs\n      Commands\n    Room\n      Player\n  Functions\n  Timers\n  Walkthrough\n  Advanced\n    Included Libraries\n      English&#46;aslx\n      Core&#46;aslx\n    Templates\n    Dynamic Templates\n    Object Types\n    Javascript\n  Filter -&gt; show Library Elements\n  --&gt;\n\n  &lt;!-- new (default) game code --&gt;\n\n  &lt;asl version=&quot;550&quot;&gt;\n    &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n    &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n    &lt;game name=&quot;xxx&quot;&gt;\n      &lt;gameid&gt;xxx&lt;/gameid&gt;\n      &lt;version&gt;1&#46;0&lt;/version&gt;\n      &lt;firstpublished&gt;2014&lt;/firstpublished&gt;\n    &lt;/game&gt;\n    &lt;object name=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;editor_room&quot; /&gt;\n      &lt;object name=&quot;player&quot;&gt;\n        &lt;inherit name=&quot;editor_object&quot; /&gt;\n        &lt;inherit name=&quot;editor_player&quot; /&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n  &lt;/asl&gt;\n\n  &lt;!-- Libraries --&gt;\n\n  // base~general syntax code for libraries, example&#58; &lt;include ref=&quot;xxx&#46;aslx&quot; /&gt;\n  // the default libraries&#58; 'English&#46;aslx' and 'Core&#46;aslx'\n  // your library code~tag lines, such as&#58; Pixie's Spell Library, Pixie's Simple Combat Library, Pixie's Clock Library, Pertex' Combat Library, Chase's Wearables Library, Sora's Stackable Library, etc etc etc\n  \n  &lt;!-- Templates --&gt;\n\n  &lt;!-- Normal Templates --&gt;\n\n  // base~general syntax for a normal template\n  // your normal template code lines\n\n  &lt;!--Dynamic Templates --&gt;\n\n  // base~general syntax for a dynamic template\n  // your dynamic template code lines\n\n  &lt;!-- Verb Templates --&gt;\n\n  // base~general syntax for a verb template\n  // your dynamic template code lines\n\n  &lt;!-- Commands --&gt;\n\n  // base~general syntax for a command\n  // your commands\n\n  &lt;!-- Functions --&gt;\n\n  // base~general syntax for a function\n  \n  &lt;!-- Character Functions (example of optional sub-category usage) --&gt;\n  \n  // your character functions\n  \n  &lt;!-- Equipment Functions (example of optional sub-category usage) --&gt;\n\n  // your equipment functions\n\n  &lt;!-- Turnscripts --&gt;\n\n  // base~general syntax for a turnscript\n  // your turnscripts\n\n  &lt;!-- Timers --&gt;\n\n  // base~general syntax for a timer\n  // your timers\n\n  &lt;!-- Object Types (Types) --&gt;\n\n  // base~general syntax for an Object Type\n  // your Object Types\n\n  &lt;!-- Attributes --&gt;\n\n  &lt;!-- String Attributes --&gt;\n\n  // base~general syntax for a string attribute\n  // your string attributes\n\n  &lt;!-- Boolean Attributes --&gt;\n\n  // base~general syntax for a boolean attribute\n  // your boolean attributes\n\n  &lt;!-- Integer Attributes --&gt;\n\n  // base~general syntax for an integer attribute\n  // your integer attributes\n\n  &lt;!-- Double Attributes --&gt;\n\n  // base~general syntax for a double attribute\n  // your double attributes\n\n  &lt;!-- Object Attributes --&gt;\n\n  // base~general syntax for an object attribute\n  // your object attributes\n\n  &lt;!-- Script Attributes --&gt;\n\n  // base~general syntax for a script attribute\n  // your script attributes\n\n  &lt;!-- the special 'changed' Script Attributes --&gt;\n\n  // base~general syntax for a special 'changed' script attribute\n  // your 'changed' script attributes\n\n  &lt;!-- List Attributes --&gt;\n\n  &lt;!-- Stringlist Attributes --&gt;\n\n  // base~general syntax for a stringlist attribute\n  // your stringlist attributes\n\n  &lt;!-- Objectlist Attributes --&gt;\n\n  // base~general syntax for an objectlist attribute\n  // your objectlist attributes\n\n  &lt;!-- Dictionary Attributes --&gt;\n\n  &lt;!-- Stringdictionary Attributes --&gt;\n\n  // base~general syntax for a stringdictionary attribute\n  // your stringdictionary attributes\n\n  &lt;!-- Objectdictionary Attributes --&gt;\n\n  // base~general syntax for an objectdictionary attribute\n  // your objectdictionary attributes\n\n  &lt;!-- Scriptdictionary Attributes --&gt;\n\n  // base~general syntax for a scriptlist attribute\n  // your scriptlist attributes\n\n  &lt;!-- Inherited (Object Types) Attributes --&gt;\n\n  // base~general syntax for an inherited attribute\n  // your inherited attributes\n\n  &lt;!-- Objects --&gt;\n\n  &lt;!-- Game Object --&gt;\n\n  // base~general syntax for the Game Object\n  // your Game Object code~tag block\n\n  &lt;!-- Player Objects --&gt;\n\n  // base~general syntax for a Player Object\n  // your Player Objects code~tag blocks\n\n  &lt;!-- Room Objects --&gt;\n\n  // base~general syntax for a Room Object\n  // your Room Objects code~tag blocks\n\n  &lt;!-- Other-Object (non-player non-room) Objects --&gt;\n\n  // base~general syntax for an Other-Object Object\n  // your other-object Objects code~tag blocks\n\n  &lt;!-- 'Data' Objects --&gt;\n\n  // base~general syntax for a 'Data' Object\n  // your 'data' Objects code~tag blocks\n\n  &lt;!-- Tabs (for creating in the GUI~Editor) --&gt;\n\n  // base~general syntax for each type of tab\n  // your tab code~tag blocks\n\n  &lt;!-- Combat System --&gt;\n\n  // mass of code\n\n  &lt;!-- Equipment System --&gt;\n\n  // mass of code\n\n  &lt;!-- Magic System --&gt;\n\n  // mass of code\n\n  &lt;!-- Dialogue System --&gt;\n\n  // mass of code\n\n  &lt;!-- Journal System --&gt;\n\n  // mass of code\n\n  &lt;!-- Storage System --&gt;\n\n  // mass of code\n\n  &lt;!-- Character System --&gt;\n\n  // mass of code\n\n  &lt;!-- 'Pedia' System --&gt;\n\n  // mass of code\n\n  &lt;!-- 'Help' System --&gt;\n\n  // mass of code\n\n  &lt;!-- Event System --&gt;\n\n  // mass of code\n\n  &lt;!-- Item System --&gt;\n\n  // mass of code\n\n  &lt;!-- (Treasure Chest ~ Item Drop) System --&gt;\n\n  // mass of code\n\n  &lt;!-- Game Mechanics (equations, formulas, etc) --&gt;\n\n  // mass of code\n  // an example&#58;\n  &lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    if (player&#46;experience &gt;= player&#46;level * 100 + 100) {\n      player&#46;experience = player&#46;experience - player&#46;level * 100 + 100\n      player&#46;level = player&#46;level + 1\n      leveling_function\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  // another example&#58;\n  player&#46;physical_damage = critical_function (player) * defending_function (player) * player&#46;weapon&#46;physical_damage + player&#46;weapon&#46;physical_damage * player&#46;strength / 100 - defending_function (enemy) * enemy&#46;armor&#46;physical_defense + enemy&#46;armor&#46;physical_defense * enemy&#46;endurance / 100\n\n\n  &lt;!-- Game Design Notes --&gt;\n\n  // mass of notes\n\n&lt;/library&gt;[/code:3rxc5qd9]\n\nenjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\n(and please post your own methods~designs~ideas for organization too (especially the code pros here, if you're willing, hehe).",
      "EditableFormat": "bbcode",
      "HTML": "keep a folder of files of code (and even better if that code is also implemented as being a playable~testable game) that works (your own code, all the library files on this site ~ hehe, and code given in the forum's posts by people ~ hehe)<br/><br/>USE A LOT of comments (the: ' // your comments ' ) in your Scripting code blocks, as you'd be surprise how easy it is to forget (how to do) things over time... ~ &quot;a pinch of prevention is worth a pound of treatment~cure&quot; (or however the saying goes, lol) ...<br/><br/>[HK Edit: went off on big tangent, bad when you get social ~ when your mind wanders off, laughs, as it is off-topic content for the post that you get social in, when the post's thread is not a social thread. so I removed it]<br/><br/>also, you may want to use library files (*.aslx) to organize all your game code aspects:<br/><br/>(sometimes it's good to split stuff up as multiple files, such as 'how to guides', and sometimes it's good to have stuff in a single place, aka as a single file for quick reference)<br/><br/>(and you can just copy and paste whatever code from this 'master' library file of yours, into your game file that you're working on)<br/><br/><pre><code>&lt;library&gt;<br/><br/>  // you can always do more (or less) sub-cateogries as you want for better organization<br/><br/>  &lt;!-- new (default) tree --&gt;<br/><br/>  // the default new game tree&#58;<br/>  &lt;!--<br/>  Objects<br/>    Game<br/>      Verbs<br/>      Commands<br/>    Room<br/>      Player<br/>  Functions<br/>  Timers<br/>  Walkthrough<br/>  Advanced<br/>    Included Libraries<br/>      English&#46;aslx<br/>      Core&#46;aslx<br/>    Templates<br/>    Dynamic Templates<br/>    Object Types<br/>    Javascript<br/>  Filter -&gt; show Library Elements<br/>  --&gt;<br/><br/>  &lt;!-- new (default) game code --&gt;<br/><br/>  &lt;asl version=&quot;550&quot;&gt;<br/>    &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>    &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>    &lt;game name=&quot;xxx&quot;&gt;<br/>      &lt;gameid&gt;xxx&lt;/gameid&gt;<br/>      &lt;version&gt;1&#46;0&lt;/version&gt;<br/>      &lt;firstpublished&gt;2014&lt;/firstpublished&gt;<br/>    &lt;/game&gt;<br/>    &lt;object name=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>      &lt;object name=&quot;player&quot;&gt;<br/>        &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>        &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>  &lt;/asl&gt;<br/><br/>  &lt;!-- Libraries --&gt;<br/><br/>  // base~general syntax code for libraries, example&#58; &lt;include ref=&quot;xxx&#46;aslx&quot; /&gt;<br/>  // the default libraries&#58; 'English&#46;aslx' and 'Core&#46;aslx'<br/>  // your library code~tag lines, such as&#58; Pixie's Spell Library, Pixie's Simple Combat Library, Pixie's Clock Library, Pertex' Combat Library, Chase's Wearables Library, Sora's Stackable Library, etc etc etc<br/>  <br/>  &lt;!-- Templates --&gt;<br/><br/>  &lt;!-- Normal Templates --&gt;<br/><br/>  // base~general syntax for a normal template<br/>  // your normal template code lines<br/><br/>  &lt;!--Dynamic Templates --&gt;<br/><br/>  // base~general syntax for a dynamic template<br/>  // your dynamic template code lines<br/><br/>  &lt;!-- Verb Templates --&gt;<br/><br/>  // base~general syntax for a verb template<br/>  // your dynamic template code lines<br/><br/>  &lt;!-- Commands --&gt;<br/><br/>  // base~general syntax for a command<br/>  // your commands<br/><br/>  &lt;!-- Functions --&gt;<br/><br/>  // base~general syntax for a function<br/>  <br/>  &lt;!-- Character Functions (example of optional sub-category usage) --&gt;<br/>  <br/>  // your character functions<br/>  <br/>  &lt;!-- Equipment Functions (example of optional sub-category usage) --&gt;<br/><br/>  // your equipment functions<br/><br/>  &lt;!-- Turnscripts --&gt;<br/><br/>  // base~general syntax for a turnscript<br/>  // your turnscripts<br/><br/>  &lt;!-- Timers --&gt;<br/><br/>  // base~general syntax for a timer<br/>  // your timers<br/><br/>  &lt;!-- Object Types (Types) --&gt;<br/><br/>  // base~general syntax for an Object Type<br/>  // your Object Types<br/><br/>  &lt;!-- Attributes --&gt;<br/><br/>  &lt;!-- String Attributes --&gt;<br/><br/>  // base~general syntax for a string attribute<br/>  // your string attributes<br/><br/>  &lt;!-- Boolean Attributes --&gt;<br/><br/>  // base~general syntax for a boolean attribute<br/>  // your boolean attributes<br/><br/>  &lt;!-- Integer Attributes --&gt;<br/><br/>  // base~general syntax for an integer attribute<br/>  // your integer attributes<br/><br/>  &lt;!-- Double Attributes --&gt;<br/><br/>  // base~general syntax for a double attribute<br/>  // your double attributes<br/><br/>  &lt;!-- Object Attributes --&gt;<br/><br/>  // base~general syntax for an object attribute<br/>  // your object attributes<br/><br/>  &lt;!-- Script Attributes --&gt;<br/><br/>  // base~general syntax for a script attribute<br/>  // your script attributes<br/><br/>  &lt;!-- the special 'changed' Script Attributes --&gt;<br/><br/>  // base~general syntax for a special 'changed' script attribute<br/>  // your 'changed' script attributes<br/><br/>  &lt;!-- List Attributes --&gt;<br/><br/>  &lt;!-- Stringlist Attributes --&gt;<br/><br/>  // base~general syntax for a stringlist attribute<br/>  // your stringlist attributes<br/><br/>  &lt;!-- Objectlist Attributes --&gt;<br/><br/>  // base~general syntax for an objectlist attribute<br/>  // your objectlist attributes<br/><br/>  &lt;!-- Dictionary Attributes --&gt;<br/><br/>  &lt;!-- Stringdictionary Attributes --&gt;<br/><br/>  // base~general syntax for a stringdictionary attribute<br/>  // your stringdictionary attributes<br/><br/>  &lt;!-- Objectdictionary Attributes --&gt;<br/><br/>  // base~general syntax for an objectdictionary attribute<br/>  // your objectdictionary attributes<br/><br/>  &lt;!-- Scriptdictionary Attributes --&gt;<br/><br/>  // base~general syntax for a scriptlist attribute<br/>  // your scriptlist attributes<br/><br/>  &lt;!-- Inherited (Object Types) Attributes --&gt;<br/><br/>  // base~general syntax for an inherited attribute<br/>  // your inherited attributes<br/><br/>  &lt;!-- Objects --&gt;<br/><br/>  &lt;!-- Game Object --&gt;<br/><br/>  // base~general syntax for the Game Object<br/>  // your Game Object code~tag block<br/><br/>  &lt;!-- Player Objects --&gt;<br/><br/>  // base~general syntax for a Player Object<br/>  // your Player Objects code~tag blocks<br/><br/>  &lt;!-- Room Objects --&gt;<br/><br/>  // base~general syntax for a Room Object<br/>  // your Room Objects code~tag blocks<br/><br/>  &lt;!-- Other-Object (non-player non-room) Objects --&gt;<br/><br/>  // base~general syntax for an Other-Object Object<br/>  // your other-object Objects code~tag blocks<br/><br/>  &lt;!-- 'Data' Objects --&gt;<br/><br/>  // base~general syntax for a 'Data' Object<br/>  // your 'data' Objects code~tag blocks<br/><br/>  &lt;!-- Tabs (for creating in the GUI~Editor) --&gt;<br/><br/>  // base~general syntax for each type of tab<br/>  // your tab code~tag blocks<br/><br/>  &lt;!-- Combat System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Equipment System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Magic System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Dialogue System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Journal System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Storage System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Character System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- 'Pedia' System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- 'Help' System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Event System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Item System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- (Treasure Chest ~ Item Drop) System --&gt;<br/><br/>  // mass of code<br/><br/>  &lt;!-- Game Mechanics (equations, formulas, etc) --&gt;<br/><br/>  // mass of code<br/>  // an example&#58;<br/>  &lt;function name=&quot;leveling_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    if (player&#46;experience &gt;= player&#46;level * 100 + 100) {<br/>      player&#46;experience = player&#46;experience - player&#46;level * 100 + 100<br/>      player&#46;level = player&#46;level + 1<br/>      leveling_function<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  // another example&#58;<br/>  player&#46;physical_damage = critical_function (player) * defending_function (player) * player&#46;weapon&#46;physical_damage + player&#46;weapon&#46;physical_damage * player&#46;strength / 100 - defending_function (enemy) * enemy&#46;armor&#46;physical_defense + enemy&#46;armor&#46;physical_defense * enemy&#46;endurance / 100<br/><br/><br/>  &lt;!-- Game Design Notes --&gt;<br/><br/>  // mass of notes<br/><br/>&lt;/library&gt;</code></pre><br/><br/>enjoy <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>(and please post your own methods~designs~ideas for organization too (especially the code pros here, if you're willing, hehe).",
      "PostDate": "2014-11-24T22:58:13+00:00",
      "LastEditDate": null
    }
  ]
}
