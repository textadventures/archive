{
  "Topic": {
    "TopicId": "6445",
    "ForumId": "10",
    "Title": "Create a verb",
    "LastUpdated": "2016-06-25T22:08:25+01:00",
    "ReplyCount": 9
  },
  "Posts": [
    {
      "PostId": "43682",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "I was wondering if there is a way to script an object to check a condition (like a boolean or the possession of an object) and create on itself a new verb, adding one of that buttons to itself. \n\nSomething like: If the character has a Object:pen, then the Object:book creates a verb to itself name &quot;Autograph&quot; or &quot;Sign&quot;.\n\nI am stumbling over the Add Script options, but cannot figure ut a way doing so.",
      "EditableFormat": "bbcode",
      "HTML": "I was wondering if there is a way to script an object to check a condition (like a boolean or the possession of an object) and create on itself a new verb, adding one of that buttons to itself. <br/><br/>Something like: If the character has a Object:pen, then the Object:book creates a verb to itself name &quot;Autograph&quot; or &quot;Sign&quot;.<br/><br/>I am stumbling over the Add Script options, but cannot figure ut a way doing so.",
      "PostDate": "2016-06-23T13:40:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43683",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I would suggesting adding buttons, rather than scripts (and if you add a script, you will also need to add a button).\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5023\">viewtopic.php?f=18&amp;t=5023</a><!-- l -->\n\nIf you do want to add a script, set it up on another object somewhere the player cannot get to, and just assign it to the relevant attribute.\ndial.rotate = prototype.rotate_script",
      "EditableFormat": "bbcode",
      "HTML": "I would suggesting adding buttons, rather than scripts (and if you add a script, you will also need to add a button).<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5023\">viewtopic.php?f=18&amp;t=5023</a><!-- l --><br/><br/>If you do want to add a script, set it up on another object somewhere the player cannot get to, and just assign it to the relevant attribute.<br/>dial.rotate = prototype.rotate_script",
      "PostDate": "2016-06-23T13:55:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43688",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "Ha! Very useful! I just realized I already had this link open, but was looking for something else on it and ignored the important tricks I am looking for now. \n\nI don't understand why Quest has not this sort of options for the GUI!",
      "EditableFormat": "bbcode",
      "HTML": "Ha! Very useful! I just realized I already had this link open, but was looking for something else on it and ignored the important tricks I am looking for now. <br/><br/>I don't understand why Quest has not this sort of options for the GUI!",
      "PostDate": "2016-06-23T17:24:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43698",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "What happens if I use only AddInventoryVerb(hat, &quot;Wear&quot;) \nas a room script only once?",
      "EditableFormat": "bbcode",
      "HTML": "What happens if I use only AddInventoryVerb(hat, &quot;Wear&quot;) <br/>as a room script only once?",
      "PostDate": "2016-06-23T20:23:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43699",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "Hmmm. I just realized I don't know implementing what I plan doing.",
      "EditableFormat": "bbcode",
      "HTML": "Hmmm. I just realized I don't know implementing what I plan doing.",
      "PostDate": "2016-06-23T20:30:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43715",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I can think you can do it via these methods (I don't know Pixie's Library, as to what Verb Functions he/she has created for use in it):\n\n1. Turnscript (err, this doesn't use the Object to check itself though, as a 'Turnscript' Element/OBJECT is not an/the 'Object' Element/OBJECT, lol)\n\n~ OR ~\n\n2. the special 'changed' Script Attribute (this does use the Object itself):\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/running_a_script_when_an_attribute_changes.html\">http://docs.textadventures.co.uk/quest/ ... anges.html</a><!-- m --> (this explains how it's done via the GUI~Editor)\n\nyou simply create a Script Attribute with this name syntax: changedYOUR_ATTRIBUTE'S_NAME\n\nwhat this does is:\n\nwhen the Value of &quot;YOUR_ATTRIBUTE'S_NAME&quot; (whatever the Attribute Type) Attribute changes, it'll do/run the scripts you've added to this 'changed' Script Attribute\n\nfor example:\n\n[code:eq2ugv4m]&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;current_life_integer_attribute&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;\n  &lt;attr name=&quot;maximum_life_integer_attribute&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;\n  &lt;attr name=&quot;life_string_attribute&quot; type=&quot;string&quot;&gt;999/999&lt;/attr&gt;\n  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;life_string_attribute = Life&#58; !&lt;/attr&gt;\n  &lt;attr name=changedcurrent_life_integer_attribute&quot; type=&quot;script&quot;&gt;\n    if (this&#46;current_life_integer_attribute &lt;= 0) {\n      msg (&quot;You died or were killed&#46;&quot;)\n      msg (&quot;GAME OVER&quot;)\n      finish\n    } else if (this&#46;current_life_integer_attribute &gt; this&#46;maximum_life_integer_attribute) {\n      this&#46;current_life_integer_attribute = this&#46;maximum_life_integer_attribute\n    }\n    this&#46;life_string_attribute = this&#46;current_life_integer_attribute + &quot;/&quot; + this&#46;maximum_life_integer_attribute\n  &lt;/attr&gt;\n  &lt;attr name=changedmaximum_life_integer_attribute&quot; type=&quot;script&quot;&gt;\n    this&#46;life_string_attribute = this&#46;current_life_integer_attribute + &quot;/&quot; + this&#46;maximum_life_integer_attribute\n  &lt;/attr&gt;\n&lt;/object&gt;\n[/code:eq2ugv4m]\n\n-------------\n\nan example:\n\n[code:eq2ugv4m]// you need some kind of scripting to check if the 'whatever' Object contains the 'pen' Object (and/or when you 'take' the 'pen' Object), to set the 'has_pen_boolean_attribute' to 'true', if applicable, and also the reverse too, if no pen (and/or using 'drop' Verb), then to 'false' again&#46;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;has_pen_boolean_attribute&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;\n  &lt;attr name=&quot;changedhas_pen_boolean_attribute&quot; type=&quot;script&quot;&gt;\n    if (this&#46;has_pen_boolean_attribute and not ListContains (action_button&#46;inventoryverbs, &quot;autograph&quot;)) {\n      list add (action_button&#46;inventoryverbs, &quot;autograph&quot;)\n    } else if (not this&#46;has_pen_boolean_attribute and ListContains (action_button&#46;inventoryverbs, &quot;autograph&quot;)) {\n      list remove (action_button&#46;inventoryverbs, &quot;autograph&quot;)\n    }\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;action_button&quot;&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;actions&lt;/attr&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;player&lt;/attr&gt;\n  &lt;attr name=&quot;autograph&quot; type=&quot;script&quot;&gt;\n    // your scripting for doing your autographing of whatever\n  &lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;autograph&lt;/property&gt;\n  &lt;pattern&gt;autograph&lt;/pattern&gt;\n  &lt;defaultexpression&gt;You can't autograph that!&lt;/defaultexpression&gt;\n&lt;/verb&gt;[/code:eq2ugv4m]",
      "EditableFormat": "bbcode",
      "HTML": "I can think you can do it via these methods (I don't know Pixie's Library, as to what Verb Functions he/she has created for use in it):<br/><br/>1. Turnscript (err, this doesn't use the Object to check itself though, as a 'Turnscript' Element/OBJECT is not an/the 'Object' Element/OBJECT, lol)<br/><br/>~ OR ~<br/><br/>2. the special 'changed' Script Attribute (this does use the Object itself):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/running_a_script_when_an_attribute_changes.html\">http://docs.textadventures.co.uk/quest/ ... anges.html</a><!-- m --> (this explains how it's done via the GUI~Editor)<br/><br/>you simply create a Script Attribute with this name syntax: changedYOUR_ATTRIBUTE'S_NAME<br/><br/>what this does is:<br/><br/>when the Value of &quot;YOUR_ATTRIBUTE'S_NAME&quot; (whatever the Attribute Type) Attribute changes, it'll do/run the scripts you've added to this 'changed' Script Attribute<br/><br/>for example:<br/><br/><pre><code>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;current_life_integer_attribute&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;<br/>  &lt;attr name=&quot;maximum_life_integer_attribute&quot; type=&quot;int&quot;&gt;999&lt;/attr&gt;<br/>  &lt;attr name=&quot;life_string_attribute&quot; type=&quot;string&quot;&gt;999/999&lt;/attr&gt;<br/>  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;life_string_attribute = Life&#58; !&lt;/attr&gt;<br/>  &lt;attr name=changedcurrent_life_integer_attribute&quot; type=&quot;script&quot;&gt;<br/>    if (this&#46;current_life_integer_attribute &lt;= 0) {<br/>      msg (&quot;You died or were killed&#46;&quot;)<br/>      msg (&quot;GAME OVER&quot;)<br/>      finish<br/>    } else if (this&#46;current_life_integer_attribute &gt; this&#46;maximum_life_integer_attribute) {<br/>      this&#46;current_life_integer_attribute = this&#46;maximum_life_integer_attribute<br/>    }<br/>    this&#46;life_string_attribute = this&#46;current_life_integer_attribute + &quot;/&quot; + this&#46;maximum_life_integer_attribute<br/>  &lt;/attr&gt;<br/>  &lt;attr name=changedmaximum_life_integer_attribute&quot; type=&quot;script&quot;&gt;<br/>    this&#46;life_string_attribute = this&#46;current_life_integer_attribute + &quot;/&quot; + this&#46;maximum_life_integer_attribute<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/></code></pre><br/><br/>-------------<br/><br/>an example:<br/><br/><pre><code>// you need some kind of scripting to check if the 'whatever' Object contains the 'pen' Object (and/or when you 'take' the 'pen' Object), to set the 'has_pen_boolean_attribute' to 'true', if applicable, and also the reverse too, if no pen (and/or using 'drop' Verb), then to 'false' again&#46;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;has_pen_boolean_attribute&quot; type=&quot;boolean&quot;&gt;false&lt;/attr&gt;<br/>  &lt;attr name=&quot;changedhas_pen_boolean_attribute&quot; type=&quot;script&quot;&gt;<br/>    if (this&#46;has_pen_boolean_attribute and not ListContains (action_button&#46;inventoryverbs, &quot;autograph&quot;)) {<br/>      list add (action_button&#46;inventoryverbs, &quot;autograph&quot;)<br/>    } else if (not this&#46;has_pen_boolean_attribute and ListContains (action_button&#46;inventoryverbs, &quot;autograph&quot;)) {<br/>      list remove (action_button&#46;inventoryverbs, &quot;autograph&quot;)<br/>    }<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;action_button&quot;&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;actions&lt;/attr&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;player&lt;/attr&gt;<br/>  &lt;attr name=&quot;autograph&quot; type=&quot;script&quot;&gt;<br/>    // your scripting for doing your autographing of whatever<br/>  &lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;autograph&lt;/property&gt;<br/>  &lt;pattern&gt;autograph&lt;/pattern&gt;<br/>  &lt;defaultexpression&gt;You can't autograph that!&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;</code></pre>",
      "PostDate": "2016-06-24T09:14:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43717",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "I am almost understanding. lol \n\nI will try to make it happen by making the room check if player has a given object. If so, another object in the room which cannot be taken will then display a new button. \n\nI will study all you people posted and make a try on this.",
      "EditableFormat": "bbcode",
      "HTML": "I am almost understanding. lol <br/><br/>I will try to make it happen by making the room check if player has a given object. If so, another object in the room which cannot be taken will then display a new button. <br/><br/>I will study all you people posted and make a try on this.",
      "PostDate": "2016-06-24T12:08:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43718",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "By &quot;display a new button &quot; I mean display a new verb.",
      "EditableFormat": "bbcode",
      "HTML": "By &quot;display a new button &quot; I mean display a new verb.",
      "PostDate": "2016-06-24T12:14:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43720",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Verbs (actually are just an Object's Script Attributes, and even more technically they're a sub-type of a Command, though they require a bit extra 'verb' coding if you're writing in the code vs using the GUI~EDitor, as the GUI~Editor does all of the extra code work for you):\n\ncreates a 'button' in the 'places and objects' pane and a hyperlink in the big text pane on the left\n\n------\n\nthe displayment (for selecting/clicking/choosing) a Verb is done through 'list add/list remove' Scripts/Functions upon the built-in 'displayverbs' and 'inventoryverbs' Stringlist Attributes:\n\n[code:1r4nhlft]&lt;object name=&quot;blah&quot;&gt;\n  &lt;take /&gt; // this (to the left) is the syntax shorthand for&#58; &lt;attr name=&quot;take&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;drop /&gt; //  this (to the left) is the syntax shorthand for&#58; &lt;attr name=&quot;drop&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;\n  &lt;attr name=&quot;look&quot; type=&quot;string&quot;&gt;You look at the 'blah' object&lt;/attr&gt; // 'look' as a String Attribute; GUI~EDitor&#58; 'blah' Object -&gt; 'Setup' Tab -&gt; Description's &quot;Look at&quot; -&gt; &#91;text&#93; option\n  // or&#58;\n  &lt;attr name&quot;look&quot; type=&quot;script&quot;&gt;msg (&quot;You look at the 'blah' object&quot;)&lt;/attr&gt; // &quot;look&quot; as a Script Attribute; GUI~Editor&#58; 'blah' Object -&gt; 'Setup' Tab -&gt; Description's &quot;Look at&quot; -&gt; &#91;run script&#93; option\n  // the default is this&#58;\n  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;look;take&lt;/attr&gt;\n  &lt;attr name=&quot;inventoryverbs&quot; type=&quot;simplestringlist&quot;&gt;look;drop&lt;/attr&gt;\n&lt;/object&gt;\n\n// this is the extra coding that is needed, which the GUI~Editor does for you, when you 'add Verb' &#58;\n&lt;verb&gt;\n  &lt;property&gt;take&lt;/property&gt;\n  &lt;pattern&gt;take&lt;/property&gt;\n  &lt;defaultexpression&gt;You can't take that&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;look&lt;/property&gt;\n  &lt;pattern&gt;look&lt;/property&gt;\n  &lt;defaultexpression&gt;You can't look at that&lt;/defaultexpression&gt;\n&lt;/verb&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;drop&lt;/property&gt;\n  &lt;pattern&gt;drop&lt;/property&gt;\n  &lt;defaultexpression&gt;You can't drop that&lt;/defaultexpression&gt;\n&lt;/verb&gt;[/code:1r4nhlft]",
      "EditableFormat": "bbcode",
      "HTML": "Verbs (actually are just an Object's Script Attributes, and even more technically they're a sub-type of a Command, though they require a bit extra 'verb' coding if you're writing in the code vs using the GUI~EDitor, as the GUI~Editor does all of the extra code work for you):<br/><br/>creates a 'button' in the 'places and objects' pane and a hyperlink in the big text pane on the left<br/><br/>------<br/><br/>the displayment (for selecting/clicking/choosing) a Verb is done through 'list add/list remove' Scripts/Functions upon the built-in 'displayverbs' and 'inventoryverbs' Stringlist Attributes:<br/><br/><pre><code>&lt;object name=&quot;blah&quot;&gt;<br/>  &lt;take /&gt; // this (to the left) is the syntax shorthand for&#58; &lt;attr name=&quot;take&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;drop /&gt; //  this (to the left) is the syntax shorthand for&#58; &lt;attr name=&quot;drop&quot; type=&quot;boolean&quot;&gt;true&lt;/attr&gt;<br/>  &lt;attr name=&quot;look&quot; type=&quot;string&quot;&gt;You look at the 'blah' object&lt;/attr&gt; // 'look' as a String Attribute; GUI~EDitor&#58; 'blah' Object -&gt; 'Setup' Tab -&gt; Description's &quot;Look at&quot; -&gt; &#91;text&#93; option<br/>  // or&#58;<br/>  &lt;attr name&quot;look&quot; type=&quot;script&quot;&gt;msg (&quot;You look at the 'blah' object&quot;)&lt;/attr&gt; // &quot;look&quot; as a Script Attribute; GUI~Editor&#58; 'blah' Object -&gt; 'Setup' Tab -&gt; Description's &quot;Look at&quot; -&gt; &#91;run script&#93; option<br/>  // the default is this&#58;<br/>  &lt;attr name=&quot;displayverbs&quot; type=&quot;simplestringlist&quot;&gt;look;take&lt;/attr&gt;<br/>  &lt;attr name=&quot;inventoryverbs&quot; type=&quot;simplestringlist&quot;&gt;look;drop&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// this is the extra coding that is needed, which the GUI~Editor does for you, when you 'add Verb' &#58;<br/>&lt;verb&gt;<br/>  &lt;property&gt;take&lt;/property&gt;<br/>  &lt;pattern&gt;take&lt;/property&gt;<br/>  &lt;defaultexpression&gt;You can't take that&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;look&lt;/property&gt;<br/>  &lt;pattern&gt;look&lt;/property&gt;<br/>  &lt;defaultexpression&gt;You can't look at that&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;<br/><br/>&lt;verb&gt;<br/>  &lt;property&gt;drop&lt;/property&gt;<br/>  &lt;pattern&gt;drop&lt;/property&gt;<br/>  &lt;defaultexpression&gt;You can't drop that&lt;/defaultexpression&gt;<br/>&lt;/verb&gt;</code></pre>",
      "PostDate": "2016-06-24T14:27:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43755",
      "UserId": 0,
      "Username": "Deckrect",
      "UserAvatar": null,
      "UserGravatar": "13c7167a5f539c7d2d1ce248f7dbbdfe",
      "EditableText": "Ahhh... enlightment!",
      "EditableFormat": "bbcode",
      "HTML": "Ahhh... enlightment!",
      "PostDate": "2016-06-25T22:08:25+01:00",
      "LastEditDate": null
    }
  ]
}
