{
  "Topic": {
    "TopicId": "ynkakaw6v0sxe-skte46ta",
    "ForumId": "18",
    "Title": "Feeling around in the darkness",
    "LastUpdated": "2023-07-05T06:00:37.87949Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "1dc120f1-72b8-4d93-a5ee-632ecab84eb5",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When I watched the documentary on Text Adventure games, something stuck in my mind.  The blind person who had said that their response to being told by the game that the room was dark was \"so?\"  They wondered why sighted people made the game so that dark rooms meant you couldn't do anything at all.\r\n\r\nSoooo... I've been experimenting with trying to make some things \"do-able\" in the dark:  Here's what I have so far, and wondered if anyone else has thought of this and/or wanted to help improve it?\r\n\r\n```\r\n  <!--\r\n  Command allows player to feel the objects in the room randomly as if groping in the dark.\r\n  -->\r\n  <command name=\"DarkFeel\">\r\n    <pattern>feel</pattern>\r\n    <script>\r\n      if (game.pov.parent.dark = True) {\r\n        do (PickOneChild (game.pov.parent), \"darkfeel\")\r\n      }\r\n      else {\r\n        msg (\"When you're not in the dark, you can just tell me what it is you want to feel....\")\r\n      }\r\n    </script>\r\n  </command>\r\n  <!--\r\n  Works on an exit to allow the player to leave a dark room after finding it.\r\n  -->  \r\n  <darkfeel type=\"script\">\r\n        this = this\r\n        msg (\"You can feel the rungs of what must be the ladder.\")\r\n        msg (\"Do you want to climb out of here?\")\r\n        get input {\r\n          if (result = \"yes\") {\r\n            msg (this.message)\r\n            MoveObject (game.pov, this.to)\r\n          }\r\n          else {\r\n            msg (\"ok then, stay here in the dark.\")\r\n          }\r\n        }\r\n   </darkfeel>\r\n  <!--\r\n  Works to allow player to do most typical things.\r\n  --> \r\n  <darkfeel type=\"script\">\r\n        msg (\"It feels like object2\")\r\n        msg (\"What do you want to do with it?\")\r\n        get input {\r\n          if (result = \"get\") {\r\n            do (this, \"takemsg\")\r\n            AddToInventory (this)\r\n          }\r\n          else if (result = \"open\") {\r\n            do (this, \"openscript\")\r\n          }\r\n          else if (result = \"close\") {\r\n            do (this, \"closescript\")\r\n          }\r\n          else if (result = \"switch on\") {\r\n            do (this, \"turnon\")\r\n            do (this, \"switchonmsg\")\r\n            this.switchedon = True\r\n          }\r\n          else if (result = \"switch off\") {\r\n            do (this, \"turnoff\")\r\n            do (this, \"switchoffmsg\")\r\n            this.switchedon = False\r\n          }\r\n          else if (result = \"wear\") {\r\n            do (this, \"wearmsg\")\r\n            this.worn = True\r\n          }\r\n          else if (result = \"remove\") {\r\n            do (this, \"removemsg\")\r\n            this.worn = False\r\n          }\r\n          else if (result = \"take\") {\r\n            do (this, \"takemsg\")\r\n            AddToInventory (this)\r\n          }\r\n          else if (result = \"use\") {\r\n            do (this, \"use\")\r\n          }\r\n          else if (result = \"eat\") {\r\n            do (this, \"eat\")\r\n          }\r\n          else if (result = \"stand\") {\r\n            do (this, \"stand\")\r\n          }\r\n          else if (result = \"sit\") {\r\n            do (this, \"sit\")\r\n          }\r\n          else if (result = \"recline\") {\r\n            do (this, \"recline\")\r\n          }\r\n          else if (result = \"smell\") {\r\n            do (this, \"smell\")\r\n          }\r\n          else if (result = \"taste\") {\r\n            do (this, \"tastedesc\")\r\n          }\r\n          else {\r\n            msg (\"I'm not sure you can do that in the dark.\")\r\n          }\r\n        }\r\n  </darkfeel>\r\n```\r\nIt uses an attribute called \"darkfeel\" to store the script for what you'd like to have happen when a player does manage to find an object by typing \"feel\" in the dark.\r\n\r\nI couldn't figure out how to make the initial command pick from both random objects and random exits in the room at the same time and just give one that you \"found\" in the dark.\r\n\r\nIt could be easy to put a grue in there to eat them in the dark, or have them stub toes, knock stuff over, etc.  But I also found that if I give them a choice what they want to try and do with the found object, I can't test for whether the object has the script that makes that choice do-able, so I just made it \"do\" as if it were possible.",
      "EditableFormat": "markdown",
      "HTML": "<p>When I watched the documentary on Text Adventure games, something stuck in my mind.  The blind person who had said that their response to being told by the game that the room was dark was \"so?\"  They wondered why sighted people made the game so that dark rooms meant you couldn't do anything at all.</p>\n<p>Soooo... I've been experimenting with trying to make some things \"do-able\" in the dark:  Here's what I have so far, and wondered if anyone else has thought of this and/or wanted to help improve it?</p>\n<pre><code>  &lt;!--\n  Command allows player to feel the objects in the room randomly as if groping in the dark.\n  --&gt;\n  &lt;command name=\"DarkFeel\"&gt;\n    &lt;pattern&gt;feel&lt;/pattern&gt;\n    &lt;script&gt;\n      if (game.pov.parent.dark = True) {\n        do (PickOneChild (game.pov.parent), \"darkfeel\")\n      }\n      else {\n        msg (\"When you're not in the dark, you can just tell me what it is you want to feel....\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;!--\n  Works on an exit to allow the player to leave a dark room after finding it.\n  --&gt;  \n  &lt;darkfeel type=\"script\"&gt;\n        this = this\n        msg (\"You can feel the rungs of what must be the ladder.\")\n        msg (\"Do you want to climb out of here?\")\n        get input {\n          if (result = \"yes\") {\n            msg (this.message)\n            MoveObject (game.pov, this.to)\n          }\n          else {\n            msg (\"ok then, stay here in the dark.\")\n          }\n        }\n   &lt;/darkfeel&gt;\n  &lt;!--\n  Works to allow player to do most typical things.\n  --&gt; \n  &lt;darkfeel type=\"script\"&gt;\n        msg (\"It feels like object2\")\n        msg (\"What do you want to do with it?\")\n        get input {\n          if (result = \"get\") {\n            do (this, \"takemsg\")\n            AddToInventory (this)\n          }\n          else if (result = \"open\") {\n            do (this, \"openscript\")\n          }\n          else if (result = \"close\") {\n            do (this, \"closescript\")\n          }\n          else if (result = \"switch on\") {\n            do (this, \"turnon\")\n            do (this, \"switchonmsg\")\n            this.switchedon = True\n          }\n          else if (result = \"switch off\") {\n            do (this, \"turnoff\")\n            do (this, \"switchoffmsg\")\n            this.switchedon = False\n          }\n          else if (result = \"wear\") {\n            do (this, \"wearmsg\")\n            this.worn = True\n          }\n          else if (result = \"remove\") {\n            do (this, \"removemsg\")\n            this.worn = False\n          }\n          else if (result = \"take\") {\n            do (this, \"takemsg\")\n            AddToInventory (this)\n          }\n          else if (result = \"use\") {\n            do (this, \"use\")\n          }\n          else if (result = \"eat\") {\n            do (this, \"eat\")\n          }\n          else if (result = \"stand\") {\n            do (this, \"stand\")\n          }\n          else if (result = \"sit\") {\n            do (this, \"sit\")\n          }\n          else if (result = \"recline\") {\n            do (this, \"recline\")\n          }\n          else if (result = \"smell\") {\n            do (this, \"smell\")\n          }\n          else if (result = \"taste\") {\n            do (this, \"tastedesc\")\n          }\n          else {\n            msg (\"I'm not sure you can do that in the dark.\")\n          }\n        }\n  &lt;/darkfeel&gt;\n</code></pre>\n<p>It uses an attribute called \"darkfeel\" to store the script for what you'd like to have happen when a player does manage to find an object by typing \"feel\" in the dark.</p>\n<p>I couldn't figure out how to make the initial command pick from both random objects and random exits in the room at the same time and just give one that you \"found\" in the dark.</p>\n<p>It could be easy to put a grue in there to eat them in the dark, or have them stub toes, knock stuff over, etc.  But I also found that if I give them a choice what they want to try and do with the found object, I can't test for whether the object has the script that makes that choice do-able, so I just made it \"do\" as if it were possible.</p>\n\n",
      "PostDate": "2023-07-05T06:00:37.87949Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a1332e24-5d56-40c0-820a-24b4d84927fb",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Discovered an error if the darkfeel attribute doesn't exist, obviously.  \r\n\r\nSo in order to test for it, I amended the command:\r\n\r\n```\r\n  <command name=\"DarkFeel\">\r\n    <pattern>feel</pattern>\r\n    <script>\r\n      o = PickOneChild (game.pov.parent)\r\n      if (game.pov.parent.dark = True) {\r\n        if (HasAttribute(o, \"darkfeel\")) {\r\n          do (o, \"darkfeel\")\r\n        }\r\n        else {\r\n          msg (\"You touch something in the dark, but can't tell what it is by feeling it.\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"When you can see the objects around you, you can just tell me what you'd like to feel.\")\r\n      }\r\n    </script>\r\n  </command>\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Discovered an error if the darkfeel attribute doesn't exist, obviously.</p>\n<p>So in order to test for it, I amended the command:</p>\n<pre><code>  &lt;command name=\"DarkFeel\"&gt;\n    &lt;pattern&gt;feel&lt;/pattern&gt;\n    &lt;script&gt;\n      o = PickOneChild (game.pov.parent)\n      if (game.pov.parent.dark = True) {\n        if (HasAttribute(o, \"darkfeel\")) {\n          do (o, \"darkfeel\")\n        }\n        else {\n          msg (\"You touch something in the dark, but can't tell what it is by feeling it.\")\n        }\n      }\n      else {\n        msg (\"When you can see the objects around you, you can just tell me what you'd like to feel.\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2023-07-09T03:24:08.9336771Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "996515af-c88e-4013-ba68-7696caa35ad8",
      "UserId": 643545,
      "Username": "Ip Man",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3ca198fe75de39041c2e4cd0a8852e3c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, after these several days, I've been able to figure out a few things and make this work better.\r\n\r\nThe result is a simple library called DarkactionsLib.aslx\r\n\r\nIt's a command \"DarkFeel\" allowing the player to type \"feel\" in order to encounter a random object in the dark.\r\n\r\nThe command reads \"darkfeel\" script attribute on an object, so you can add that to any object to do anything you like once something's been found.\r\n\r\nThere's a function \"dowhatdarkobject\" with parameter \"this\" which can be part of the \"darkfeel\" script and would allow the player to do most common actions.\r\n\r\nIt's designed to work if Pixie's CombatLib and PostureLib are installed in your game, but if you're not using them, simply delete the \"kill/attack/fight\", \"sit\", \"stand\", and \"recline\" portions of the dowhatdarkobject function from the library.\r\n\r\nIt's my first library which isn't merely a modification of someone else's!\r\n\r\nThere's a tiny sample example here https://textadventures.co.uk/games/view/d8dwvqqdi0oo15ivkodomg/darkactionslibtest\r\n\r\nand the library looks like this:\r\n```\r\n<?xml version=\"1.0\"?>\r\n<library>\r\n\r\n<!--\r\n\r\n  ****************************************************************************************************\r\n  DarkactionsLib.aslx - Inspired by the blind... allows you to feel around in the dark and interact with objects.\r\n  by IpMan, 2023\r\n  Version 1.0\r\n  ****************************************************************************************************\r\n  Quest-Version: 5.8\r\n   **Is Designed to incorporate actions from Pixie's CombatLib and PostureLib!! That documentation applies.\r\n  If you don't use them, delete the portions of dowhatdarkobject function that include:\r\n  attack, sit, stand, recline**\r\n  ****************************************************************************************************\r\n-->\r\n\r\n  <!--\r\n  DarkFeel Command allows player to feel the objects in the room randomly as if groping in the dark.\r\n  It doesn't find exits, so you'll need to get creative to allow a player to leave a dark room.\r\n  You must have a script \"darkfeel\" on an object in order for this library to work.\r\n  -->\r\n\r\n  <command name=\"DarkFeel\">\r\n    <pattern>feel</pattern>\r\n    <script>\r\n      o = PickOneChild (game.pov.parent)\r\n      if (game.pov.parent.dark = True) {\r\n        if (HasAttribute(o, \"darkfeel\")) {\r\n          do (o, \"darkfeel\")\r\n        }\r\n        else {\r\n          msg (\"You touch something in the dark, but can't tell what it is by feeling it.\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"When you can see the objects around you, you can just tell me what you'd like to feel.\")\r\n      }\r\n    </script>\r\n  </command>\r\n  \r\n  <!--\r\n    This sample script works on an exit to allow the player to leave a dark room after finding it.\r\n    <darkfeel type=\"script\">\r\n        this = this\r\n        msg (\"Do you want use this exit to get out of here?\")\r\n        get input {\r\n          if (result = \"yes\") {\r\n            msg (this.message)\r\n            MoveObject (game.pov, this.to)\r\n          }\r\n          else {\r\n            msg (\"ok then, stay here in the dark.\")\r\n          }\r\n        }\r\n    </darkfeel>\r\n  -->  \r\n\r\n  <!--\r\n  dowhatdarkobjects function works to allow player to do most typical things. \r\n  Call it on your object and name specify \"this\" as the parameter.\r\n  Could be used to activate the darkfeel script on an object other than this one by specifying that object name as the parameter.\r\n  -->   \r\n  <function name=\"dowhatdarkobject\" parameters=\"this\">\r\n    msg (\"What do you want to do with it?\")\r\n    get input {\r\n      if (result = \"get\") {\r\n        if (GetBoolean(this, \"take\")) {\r\n          AddToInventory (this)\r\n          if (HasAttribute(this, \"takemsg\")) {\r\n            msg (this.takemsg)\r\n          }\r\n          else {\r\n            msg (\"You take it.\")\r\n          }\r\n          if (HasAttribute(this, \"ontake\")) {\r\n            do (this, \"ontake\")\r\n          }\r\n          else {\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can get.\")\r\n        }\r\n      }\r\n      else if (result = \"open\") {\r\n        if ((DoesInherit (this, \"openable\"))) {\r\n          if (GetBoolean(this, \"isopen\")) {\r\n            msg (\"It's already opened.\")\r\n          }\r\n          else {\r\n            SetObjectFlagOn (this, \"isopen\")\r\n            do (this, \"openscript\")\r\n          }\r\n        }\r\n        else if ((DoesInherit (this, \"container_open\"))) {\r\n          if (GetBoolean(this, \"isopen\")) {\r\n            msg (\"It's already opened.\")\r\n          }\r\n          else {\r\n            msg (this.openmsg)\r\n            SetObjectFlagOn (this, \"isopen\")\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can open it.\")\r\n        }\r\n      }\r\n      else if (result = \"close\") {\r\n        if ((DoesInherit (this, \"openable\"))) {\r\n          if (GetBoolean(this, \"isopen\")) {\r\n            SetObjectFlagOff (this, \"isopen\")\r\n            do (this, \"closescript\")\r\n          }\r\n          else {\r\n            msg (\"It's already closed\")\r\n          }\r\n        }\r\n        else if ((DoesInherit (this, \"container_open\"))) {\r\n          if (GetBoolean(this, \"isopen\")) {\r\n            msg (this.closemsg)\r\n            SetObjectFlagOff (this, \"isopen\")\r\n          }\r\n          else {\r\n            msg (\"It's already closed.\")\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can close it.\")\r\n        }\r\n      }\r\n      else if (result = \"switch on\") {\r\n        if ((DoesInherit (this, \"switchable\"))) {\r\n          msg (this.switchonmsg)\r\n          this.switchedon = True\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can switch this on.\")\r\n        }\r\n      }\r\n      else if (result = \"switch off\") {\r\n        if ((DoesInherit (this, \"switchable\"))) {\r\n          msg (this.switchoffmsg)\r\n          this.switchedon = False\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can turn this off.\")\r\n        }\r\n      }\r\n      else if (result = \"wear\") {\r\n        if ((DoesInherit (this, \"wearable\"))) {\r\n          msg (\"You'll have to get it to wear it...\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can wear it.\")\r\n        }\r\n      }\r\n      else if (result = \"take\") {\r\n        if (GetBoolean(this, \"take\")) {\r\n          AddToInventory (this)\r\n          if (HasAttribute(this, \"takemsg\")) {\r\n            msg (this.takemsg)\r\n          }\r\n          else {\r\n            msg (\"You take it.\")\r\n          }\r\n          if (HasAttribute(this, \"ontake\")) {\r\n            do (this, \"ontake\")\r\n          }\r\n          else {\r\n          }\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can take.\")\r\n        }\r\n      }\r\n      else if (result = \"use\") {\r\n        if (HasAttribute(this, \"use\")) {\r\n          do (this, \"use\")\r\n        }\r\n        else {\r\n          msg (\"You can't feel how to use it.\")\r\n        }\r\n      }\r\n      else if (result = \"eat\") {\r\n        if ((DoesInherit (this, \"edible\"))) {\r\n          do (this, \"eat\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you should eat.\")\r\n        }\r\n      }\r\n      else if (result = \"stand\") {\r\n        if ((DoesInherit (this, \"furniture_type\"))) {\r\n          do (this, \"stand\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can stand on.\")\r\n        }\r\n      }\r\n      else if (result = \"sit\") {\r\n        if ((DoesInherit (this, \"furniture_type\"))) {\r\n          do (this, \"sit\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can sit on.\")\r\n        }\r\n      }\r\n      else if (result = \"recline\") {\r\n        if ((DoesInherit (this, \"furniture_type\"))) {\r\n          do (this, \"recline\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like you can lounge on it.\")\r\n        }\r\n      }\r\n      else if (result = \"smell\") {\r\n        if (HasAttribute(this, \"smell\")) {\r\n          do (this, \"smell\")\r\n        }\r\n        else {\r\n          msg (\"You can't really smell anything distinctive about it.\")\r\n        }\r\n      }\r\n      else if (result = \"taste\") {\r\n        if (HasAttribute(this, \"tastedesc\")) {\r\n          do (this, \"tastedesc\")\r\n        }\r\n        else {\r\n          msg (\"It tastes like you'd imagined.\")\r\n        }\r\n      }\r\n      else if (result = \"kill\") {\r\n        if (HasAttribute(this, \"attack\")) {\r\n          do (this, \"attack\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can really fight with.\")\r\n        }\r\n      }\r\n      else if (result = \"attack\") {\r\n        if (HasAttribute(this, \"attack\")) {\r\n          do (this, \"attack\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can really fight with.\")\r\n        }\r\n      }\r\n      else if (result = \"fight\") {\r\n        if (HasAttribute(this, \"attack\")) {\r\n          do (this, \"attack\")\r\n        }\r\n        else {\r\n          msg (\"It doesn't feel like something you can really fight with.\")\r\n        }\r\n      }\r\n      else {\r\n        msg (\"I'm not sure you can do that in the dark.\")\r\n      }\r\n    }\r\n  </function>  \r\n\r\n</library>\r\n```\r\n\r\nHere's hoping that it's interesting or helpful for someone.  Maybe someday someone else, or I might refine and perfect it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, after these several days, I've been able to figure out a few things and make this work better.</p>\n<p>The result is a simple library called DarkactionsLib.aslx</p>\n<p>It's a command \"DarkFeel\" allowing the player to type \"feel\" in order to encounter a random object in the dark.</p>\n<p>The command reads \"darkfeel\" script attribute on an object, so you can add that to any object to do anything you like once something's been found.</p>\n<p>There's a function \"dowhatdarkobject\" with parameter \"this\" which can be part of the \"darkfeel\" script and would allow the player to do most common actions.</p>\n<p>It's designed to work if Pixie's CombatLib and PostureLib are installed in your game, but if you're not using them, simply delete the \"kill/attack/fight\", \"sit\", \"stand\", and \"recline\" portions of the dowhatdarkobject function from the library.</p>\n<p>It's my first library which isn't merely a modification of someone else's!</p>\n<p>There's a tiny sample example here https://textadventures.co.uk/games/view/d8dwvqqdi0oo15ivkodomg/darkactionslibtest</p>\n<p>and the library looks like this:</p>\n<pre><code>&lt;?xml version=\"1.0\"?&gt;\n&lt;library&gt;\n\n&lt;!--\n\n  ****************************************************************************************************\n  DarkactionsLib.aslx - Inspired by the blind... allows you to feel around in the dark and interact with objects.\n  by IpMan, 2023\n  Version 1.0\n  ****************************************************************************************************\n  Quest-Version: 5.8\n   **Is Designed to incorporate actions from Pixie's CombatLib and PostureLib!! That documentation applies.\n  If you don't use them, delete the portions of dowhatdarkobject function that include:\n  attack, sit, stand, recline**\n  ****************************************************************************************************\n--&gt;\n\n  &lt;!--\n  DarkFeel Command allows player to feel the objects in the room randomly as if groping in the dark.\n  It doesn't find exits, so you'll need to get creative to allow a player to leave a dark room.\n  You must have a script \"darkfeel\" on an object in order for this library to work.\n  --&gt;\n\n  &lt;command name=\"DarkFeel\"&gt;\n    &lt;pattern&gt;feel&lt;/pattern&gt;\n    &lt;script&gt;\n      o = PickOneChild (game.pov.parent)\n      if (game.pov.parent.dark = True) {\n        if (HasAttribute(o, \"darkfeel\")) {\n          do (o, \"darkfeel\")\n        }\n        else {\n          msg (\"You touch something in the dark, but can't tell what it is by feeling it.\")\n        }\n      }\n      else {\n        msg (\"When you can see the objects around you, you can just tell me what you'd like to feel.\")\n      }\n    &lt;/script&gt;\n  &lt;/command&gt;\n  \n  &lt;!--\n    This sample script works on an exit to allow the player to leave a dark room after finding it.\n    &lt;darkfeel type=\"script\"&gt;\n        this = this\n        msg (\"Do you want use this exit to get out of here?\")\n        get input {\n          if (result = \"yes\") {\n            msg (this.message)\n            MoveObject (game.pov, this.to)\n          }\n          else {\n            msg (\"ok then, stay here in the dark.\")\n          }\n        }\n    &lt;/darkfeel&gt;\n  --&gt;  \n\n  &lt;!--\n  dowhatdarkobjects function works to allow player to do most typical things. \n  Call it on your object and name specify \"this\" as the parameter.\n  Could be used to activate the darkfeel script on an object other than this one by specifying that object name as the parameter.\n  --&gt;   \n  &lt;function name=\"dowhatdarkobject\" parameters=\"this\"&gt;\n    msg (\"What do you want to do with it?\")\n    get input {\n      if (result = \"get\") {\n        if (GetBoolean(this, \"take\")) {\n          AddToInventory (this)\n          if (HasAttribute(this, \"takemsg\")) {\n            msg (this.takemsg)\n          }\n          else {\n            msg (\"You take it.\")\n          }\n          if (HasAttribute(this, \"ontake\")) {\n            do (this, \"ontake\")\n          }\n          else {\n          }\n        }\n        else {\n          msg (\"It doesn't feel like something you can get.\")\n        }\n      }\n      else if (result = \"open\") {\n        if ((DoesInherit (this, \"openable\"))) {\n          if (GetBoolean(this, \"isopen\")) {\n            msg (\"It's already opened.\")\n          }\n          else {\n            SetObjectFlagOn (this, \"isopen\")\n            do (this, \"openscript\")\n          }\n        }\n        else if ((DoesInherit (this, \"container_open\"))) {\n          if (GetBoolean(this, \"isopen\")) {\n            msg (\"It's already opened.\")\n          }\n          else {\n            msg (this.openmsg)\n            SetObjectFlagOn (this, \"isopen\")\n          }\n        }\n        else {\n          msg (\"It doesn't feel like you can open it.\")\n        }\n      }\n      else if (result = \"close\") {\n        if ((DoesInherit (this, \"openable\"))) {\n          if (GetBoolean(this, \"isopen\")) {\n            SetObjectFlagOff (this, \"isopen\")\n            do (this, \"closescript\")\n          }\n          else {\n            msg (\"It's already closed\")\n          }\n        }\n        else if ((DoesInherit (this, \"container_open\"))) {\n          if (GetBoolean(this, \"isopen\")) {\n            msg (this.closemsg)\n            SetObjectFlagOff (this, \"isopen\")\n          }\n          else {\n            msg (\"It's already closed.\")\n          }\n        }\n        else {\n          msg (\"It doesn't feel like you can close it.\")\n        }\n      }\n      else if (result = \"switch on\") {\n        if ((DoesInherit (this, \"switchable\"))) {\n          msg (this.switchonmsg)\n          this.switchedon = True\n        }\n        else {\n          msg (\"It doesn't feel like you can switch this on.\")\n        }\n      }\n      else if (result = \"switch off\") {\n        if ((DoesInherit (this, \"switchable\"))) {\n          msg (this.switchoffmsg)\n          this.switchedon = False\n        }\n        else {\n          msg (\"It doesn't feel like you can turn this off.\")\n        }\n      }\n      else if (result = \"wear\") {\n        if ((DoesInherit (this, \"wearable\"))) {\n          msg (\"You'll have to get it to wear it...\")\n        }\n        else {\n          msg (\"It doesn't feel like you can wear it.\")\n        }\n      }\n      else if (result = \"take\") {\n        if (GetBoolean(this, \"take\")) {\n          AddToInventory (this)\n          if (HasAttribute(this, \"takemsg\")) {\n            msg (this.takemsg)\n          }\n          else {\n            msg (\"You take it.\")\n          }\n          if (HasAttribute(this, \"ontake\")) {\n            do (this, \"ontake\")\n          }\n          else {\n          }\n        }\n        else {\n          msg (\"It doesn't feel like something you can take.\")\n        }\n      }\n      else if (result = \"use\") {\n        if (HasAttribute(this, \"use\")) {\n          do (this, \"use\")\n        }\n        else {\n          msg (\"You can't feel how to use it.\")\n        }\n      }\n      else if (result = \"eat\") {\n        if ((DoesInherit (this, \"edible\"))) {\n          do (this, \"eat\")\n        }\n        else {\n          msg (\"It doesn't feel like something you should eat.\")\n        }\n      }\n      else if (result = \"stand\") {\n        if ((DoesInherit (this, \"furniture_type\"))) {\n          do (this, \"stand\")\n        }\n        else {\n          msg (\"It doesn't feel like something you can stand on.\")\n        }\n      }\n      else if (result = \"sit\") {\n        if ((DoesInherit (this, \"furniture_type\"))) {\n          do (this, \"sit\")\n        }\n        else {\n          msg (\"It doesn't feel like something you can sit on.\")\n        }\n      }\n      else if (result = \"recline\") {\n        if ((DoesInherit (this, \"furniture_type\"))) {\n          do (this, \"recline\")\n        }\n        else {\n          msg (\"It doesn't feel like you can lounge on it.\")\n        }\n      }\n      else if (result = \"smell\") {\n        if (HasAttribute(this, \"smell\")) {\n          do (this, \"smell\")\n        }\n        else {\n          msg (\"You can't really smell anything distinctive about it.\")\n        }\n      }\n      else if (result = \"taste\") {\n        if (HasAttribute(this, \"tastedesc\")) {\n          do (this, \"tastedesc\")\n        }\n        else {\n          msg (\"It tastes like you'd imagined.\")\n        }\n      }\n      else if (result = \"kill\") {\n        if (HasAttribute(this, \"attack\")) {\n          do (this, \"attack\")\n        }\n        else {\n          msg (\"It doesn't feel like something you can really fight with.\")\n        }\n      }\n      else if (result = \"attack\") {\n        if (HasAttribute(this, \"attack\")) {\n          do (this, \"attack\")\n        }\n        else {\n          msg (\"It doesn't feel like something you can really fight with.\")\n        }\n      }\n      else if (result = \"fight\") {\n        if (HasAttribute(this, \"attack\")) {\n          do (this, \"attack\")\n        }\n        else {\n          msg (\"It doesn't feel like something you can really fight with.\")\n        }\n      }\n      else {\n        msg (\"I'm not sure you can do that in the dark.\")\n      }\n    }\n  &lt;/function&gt;  \n\n&lt;/library&gt;\n</code></pre>\n<p>Here's hoping that it's interesting or helpful for someone.  Maybe someday someone else, or I might refine and perfect it.</p>\n\n",
      "PostDate": "2023-07-10T05:02:59.4254185Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
