{
  "Topic": {
    "TopicId": "zjsbiginvewtzebb0qffbq",
    "ForumId": "24",
    "Title": "Why is Squiffy ignoring my setTimeout?",
    "LastUpdated": "2021-10-15T05:44:51.021821Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "42e07eea-f35f-4e90-bc50-8e2fb68643e1",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "    \r\n        var i = 0;\r\n        var txt = 'Lorem ipsum typing effect!'; /* The text */\r\n        window.myFunction = function(typeWriter) {\r\n        while (i < txt.length) {\r\n        document.getElementById(\"type\").innerHTML += txt.charAt(i);\r\n        setTimeout(typeWriter, 50); /*𝕊𝕢𝕦𝕚𝕗𝕗𝕪 𝕛𝕦𝕤𝕥 𝕚𝕘𝕟𝕠𝕣𝕖𝕤 𝕥𝕙𝕚𝕤 𝕝𝕚𝕟𝕖.*/\r\n        i++;\r\n        }\r\n        }\r\n\r\n\r\n    <button onclick=\"myFunction()\">Click me</button>\r\n    <span id=\"type\"></span>",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>    var i = 0;\n    var txt = 'Lorem ipsum typing effect!'; /* The text */\n    window.myFunction = function(typeWriter) {\n    while (i &lt; txt.length) {\n    document.getElementById(\"type\").innerHTML += txt.charAt(i);\n    setTimeout(typeWriter, 50); /*𝕊𝕢𝕦𝕚𝕗𝕗𝕪 𝕛𝕦𝕤𝕥 𝕚𝕘𝕟𝕠𝕣𝕖𝕤 𝕥𝕙𝕚𝕤 𝕝𝕚𝕟𝕖.*/\n    i++;\n    }\n    }\n\n\n&lt;button onclick=\"myFunction()\"&gt;Click me&lt;/button&gt;\n&lt;span id=\"type\"&gt;&lt;/span&gt;\n</code></pre>\n\n",
      "PostDate": "2021-10-15T05:44:51.021821Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c11dc52e-d179-4dcd-b40a-681d869da2a8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You are creating a function with a single parameter `typeWriter`. You call the function with `myFunction()`, so the variable `typeWriter` will be undefined.\r\n\r\nSo, your line `setTimeout(typeWriter, 50);` has the effect of telling the browser to start a timer and run an unspecified function after 50ms.\r\n\r\nThe line isn't actually ignored. If you check the javascript console, you will see:\r\n`Uncaught ReferenceError: typeWriter is not defined`. The loop then stops because of the error.\r\n\r\nIf you passed a function in as `typeWriter`, your function would have the effect of putting the `txt` string into the `type` span, then waiting 50 miliseconds and running `typeWriter` once for each character that was added.\r\n\r\nGiven the function name, I suspect that what you actually wanted might be:\r\n```\r\n    var i = 0;\r\n    var txt = 'Lorem ipsum typing effect!'; /* The text */\r\n    window.typeWriter = function() {\r\n      if (i < txt.length) {\r\n        document.getElementById(\"type\").innerHTML += txt.charAt(i++);\r\n        setTimeout(typeWriter, 50);\r\n      }\r\n    };\r\n\r\n\r\n<button onclick=\"typeWriter()\">Click me</button>\r\n<span id=\"type\"></span>\r\n```\r\n\r\nAlthough in the real world, I would probably use \r\n```\r\n        document.getElementById(\"type\").innerHTML = txt.substring(0, i++);\r\n```\r\nwhich is a little more efficient, and will mess up slightly less if you feed it a txt with HTML tags in.",
      "EditableFormat": "markdown",
      "HTML": "<p>You are creating a function with a single parameter <code>typeWriter</code>. You call the function with <code>myFunction()</code>, so the variable <code>typeWriter</code> will be undefined.</p>\n<p>So, your line <code>setTimeout(typeWriter, 50);</code> has the effect of telling the browser to start a timer and run an unspecified function after 50ms.</p>\n<p>The line isn't actually ignored. If you check the javascript console, you will see:<br>\n<code>Uncaught ReferenceError: typeWriter is not defined</code>. The loop then stops because of the error.</p>\n<p>If you passed a function in as <code>typeWriter</code>, your function would have the effect of putting the <code>txt</code> string into the <code>type</code> span, then waiting 50 miliseconds and running <code>typeWriter</code> once for each character that was added.</p>\n<p>Given the function name, I suspect that what you actually wanted might be:</p>\n<pre><code>    var i = 0;\n    var txt = 'Lorem ipsum typing effect!'; /* The text */\n    window.typeWriter = function() {\n      if (i &lt; txt.length) {\n        document.getElementById(\"type\").innerHTML += txt.charAt(i++);\n        setTimeout(typeWriter, 50);\n      }\n    };\n\n\n&lt;button onclick=\"typeWriter()\"&gt;Click me&lt;/button&gt;\n&lt;span id=\"type\"&gt;&lt;/span&gt;\n</code></pre>\n<p>Although in the real world, I would probably use</p>\n<pre><code>        document.getElementById(\"type\").innerHTML = txt.substring(0, i++);\n</code></pre>\n<p>which is a little more efficient, and will mess up slightly less if you feed it a txt with HTML tags in.</p>\n\n",
      "PostDate": "2021-10-15T08:38:52.3487399Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "75d50882-fab8-4ac0-80dd-b3095e168706",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you!</p>\n\n",
      "PostDate": "2021-10-16T03:12:02.4441902Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "49853f9a-e25b-48cf-bec3-782676208915",
      "UserId": 208122,
      "Username": "IFforClassroom",
      "AvatarUrl": "https://secure.gravatar.com/avatar/9683526b9b2547bc86419ed8a2454df1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, this is probably a dumb question. It certainly demonstrates how little I know. I don't even want anyone to answer it if it's complicated. So here goes: Why does the JavaScript in a section so very different from the Javascript in story.js? \r\n\r\nGlad that's out of the way.\r\n\r\nMore relevant, how would I change Squiffy's @replace function so that, rather than fade in and out, it appears to backspace out and typewrite in?\r\n\r\nmrangel's solution above works great , though. And that made it surprisingly easy and enjoyable to play with it to make it delete. I just think I want all of my future stories to have this effect. It just better creates the illusion that the player is interacting with a 'smart' machine. Fade-out-in tries and fails to be magical, in my opinion.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, this is probably a dumb question. It certainly demonstrates how little I know. I don't even want anyone to answer it if it's complicated. So here goes: Why does the JavaScript in a section so very different from the Javascript in story.js?</p>\n<p>Glad that's out of the way.</p>\n<p>More relevant, how would I change Squiffy's @replace function so that, rather than fade in and out, it appears to backspace out and typewrite in?</p>\n<p>mrangel's solution above works great , though. And that made it surprisingly easy and enjoyable to play with it to make it delete. I just think I want all of my future stories to have this effect. It just better creates the illusion that the player is interacting with a 'smart' machine. Fade-out-in tries and fails to be magical, in my opinion.</p>\n\n",
      "PostDate": "2021-10-17T07:40:00.2974072Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
