{
  "Topic": {
    "TopicId": "bdrez8lzdusvudvmdngcxa",
    "ForumId": "10",
    "Title": "Making a msg directly follow another msg (Solved)",
    "LastUpdated": "2018-08-24T20:10:50.9063446Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "bcb5d81f-b1c9-4dcf-9f69-3e947982627b",
      "UserId": 372999,
      "Username": "Nakita Block",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3bae1b35d822d93e538260a988f64861?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I am making a scripted room description that describes the room according to variables. I don't want to make it obvious by having each variable checked producing a msg on a separate line. Is there a way to print messages that directly follow the previous msg instead of being printed on the next line?\r\n\r\nFor instance in BASIC code you would follow your print command with a semicolon letting the program know the next line printed would be placed immediately after.",
      "EditableFormat": "markdown",
      "HTML": "<p>I am making a scripted room description that describes the room according to variables. I don't want to make it obvious by having each variable checked producing a msg on a separate line. Is there a way to print messages that directly follow the previous msg instead of being printed on the next line?</p>\n<p>For instance in BASIC code you would follow your print command with a semicolon letting the program know the next line printed would be placed immediately after.</p>\n\n",
      "PostDate": "2018-08-24T20:10:50.9063446Z",
      "LastEditDate": "2018-08-24T21:16:15.4888662Z",
      "link": null
    },
    {
      "PostId": "ba3237e7-af76-475c-b0b0-5d8c85718e87",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nOutputTextNoBr (\"Here's the first part of my description. \")\r\nOutputTextNoBr (\"And another part. \")\r\nmsg (\"And the end of the paragraph.\")\r\n```\r\n\r\n(OutputTextNoBr is named after the `<br/>` HTML element, which outputs an extra line break when printed)\r\n\r\nAlternatively, you could have your scripts create the whole description in a string, and then print it all at once.",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>OutputTextNoBr (\"Here's the first part of my description. \")\nOutputTextNoBr (\"And another part. \")\nmsg (\"And the end of the paragraph.\")\n</code></pre>\n<p>(OutputTextNoBr is named after the <code>&lt;br/&gt;</code> HTML element, which outputs an extra line break when printed)</p>\n<p>Alternatively, you could have your scripts create the whole description in a string, and then print it all at once.</p>\n\n",
      "PostDate": "2018-08-24T20:44:32.55833Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "34abe902-29a7-46e0-81ba-e6075e25ab9a",
      "UserId": 372999,
      "Username": "Nakita Block",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3bae1b35d822d93e538260a988f64861?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I love you. Thank you for your quick response.",
      "EditableFormat": "markdown",
      "HTML": "<p>I love you. Thank you for your quick response.</p>\n\n",
      "PostDate": "2018-08-24T21:15:10.1258317Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a04e65a4-749f-465c-97fa-de015a0de537",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "https://i.imgur.com/1xu84dwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can also do...\r\n```\r\nmsg (\"\")\r\nwait {\r\nmsg (\"\")\r\n}\r\n```\r\n\r\n:D \r\n\r\nAnonynn. ",
      "EditableFormat": "markdown",
      "HTML": "<p>You can also do...</p>\n<pre><code>msg (\"\")\nwait {\nmsg (\"\")\n}\n</code></pre>\n<p>:D</p>\n<p>Anonynn.</p>\n\n",
      "PostDate": "2018-08-25T00:20:05.0745168Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2f8614d8-1004-41fa-a164-d36ce01881e3",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n(again, filler for getting my edited post, updated/posted)\r\n\r\n-------------------------\r\n\r\nthe alternative that mrangel was alluding to is known as:\r\n\r\nconcatenation (literally putting things together / next to each other)\r\n\r\nconcatenation is very powerful/useful, there's a lot of applications you can use it for\r\n\r\n------------------\r\n\r\nAddition Arithmetic (uses amounts: integers/int and doubles: floats/floating-points/decimal/fractional):\r\n\r\n5 + 5 = 10\r\n55 + 55 = 110\r\n\r\n5 + \"mama\" = ERROR!\r\n\"mama\" + 5 = ERROR!\r\n\r\n\"5\" + \"5\" = ERROR!\r\n\r\n~~~~~ VS ~~~~~~~~\r\n\r\nConcatenation (uses Strings/\"text\"):\r\n\r\n\"5\" + \"5\" = \"55\"\r\n\"55\" + \"55\" = \"5555\"\r\n\"mama\" + \"mia\" = \"mamamia\"\r\n\"mama\" + \"7\" = \"mama7\"\r\n\"mama\" + \" \" + \"mia\" = \"mama mia\" // \"mama\" + \"(SPACE)\" + \"mia\"\r\n\"mama \" + \"mia\" = \"mama mia\" // \"mama(SPACE)\" + \"mia\"\r\n\"mama\" + \" mia\" = \"mama mia\" // \"mama\" + \"(SPACE)mia\"\r\n\r\n5 + \"mama\" = ERROR!\r\n\"mama\" + 5 = ERROR!\r\n\r\n5 + 5 = ERROR!\r\n\r\n--------------\r\n\r\nhere's a simple example of concatenation:\r\n\r\n(you can use 'if' Scripts to utilize concatenation's powerfulness/usefulness, but I don't show that here, if you want example of it, I can show it, just let me know if you want an example of it, or if you need help with anything)\r\n\r\n```\r\nstring_variable = \"Hi\"\r\nmsg (string_variable)\r\n\r\nmsg (\"\") // this is alternative method of creating a blank/empty line (as you can instead, use the '<br>' html in quest 'msg' scripting directly too)\r\n\r\nstring_variable = string_variable + \", how are you?\"\r\nmsg (string_variable)\r\n\r\nmsg (\"\")\r\n\r\nstring_variable = string_variable + \" My name is HK, what is your name?\"\r\nmsg (string_variable)\r\n\r\nmsg (\"\")\r\n\r\nget input {\r\n\r\n  player.name_string_attribute = result\r\n\r\n  // let's say you typed in: Nakita\r\n\r\n  // result = \"Nakita\" // quest does this automatically (hidden from you) for you (for: 'get input', 'show menu / ShowMenu', 'ask/Ask', and maybe some more Scripts/Functions too)\r\n\r\n  // player.name_string_attribute = [result = \"Nakita\"]\r\n\r\n  // player.name_string_attribute = \"Nakita\"\r\n\r\n}\r\n\r\nstring_variable = string_variable + \" Ah, nice to meet you, \" + player.name_string_attribute + \"!\"\r\nmsg (string_variable)\r\n\r\n// output/display:\r\n\r\nHi\r\n\r\nHi, how are you?\r\n\r\nHi, how are you? My name is HK, what is your name?\r\n\r\nHi, how are you? My name is HK, what is your name? Ah, nice to meet you, Nakita!\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)<br>\n(again, filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>the alternative that mrangel was alluding to is known as:</p>\n<p>concatenation (literally putting things together / next to each other)</p>\n<p>concatenation is very powerful/useful, there's a lot of applications you can use it for</p>\n<hr>\n<p>Addition Arithmetic (uses amounts: integers/int and doubles: floats/floating-points/decimal/fractional):</p>\n<p>5 + 5 = 10<br>\n55 + 55 = 110</p>\n<p>5 + \"mama\" = ERROR!<br>\n\"mama\" + 5 = ERROR!</p>\n<p>\"5\" + \"5\" = ERROR!</p>\n<p>~~~~~ VS ~~~~~~~~</p>\n<p>Concatenation (uses Strings/\"text\"):</p>\n<p>\"5\" + \"5\" = \"55\"<br>\n\"55\" + \"55\" = \"5555\"<br>\n\"mama\" + \"mia\" = \"mamamia\"<br>\n\"mama\" + \"7\" = \"mama7\"<br>\n\"mama\" + \" \" + \"mia\" = \"mama mia\" // \"mama\" + \"(SPACE)\" + \"mia\"<br>\n\"mama \" + \"mia\" = \"mama mia\" // \"mama(SPACE)\" + \"mia\"<br>\n\"mama\" + \" mia\" = \"mama mia\" // \"mama\" + \"(SPACE)mia\"</p>\n<p>5 + \"mama\" = ERROR!<br>\n\"mama\" + 5 = ERROR!</p>\n<p>5 + 5 = ERROR!</p>\n<hr>\n<p>here's a simple example of concatenation:</p>\n<p>(you can use 'if' Scripts to utilize concatenation's powerfulness/usefulness, but I don't show that here, if you want example of it, I can show it, just let me know if you want an example of it, or if you need help with anything)</p>\n<pre><code>string_variable = \"Hi\"\nmsg (string_variable)\n\nmsg (\"\") // this is alternative method of creating a blank/empty line (as you can instead, use the '&lt;br&gt;' html in quest 'msg' scripting directly too)\n\nstring_variable = string_variable + \", how are you?\"\nmsg (string_variable)\n\nmsg (\"\")\n\nstring_variable = string_variable + \" My name is HK, what is your name?\"\nmsg (string_variable)\n\nmsg (\"\")\n\nget input {\n\n  player.name_string_attribute = result\n\n  // let's say you typed in: Nakita\n\n  // result = \"Nakita\" // quest does this automatically (hidden from you) for you (for: 'get input', 'show menu / ShowMenu', 'ask/Ask', and maybe some more Scripts/Functions too)\n\n  // player.name_string_attribute = [result = \"Nakita\"]\n\n  // player.name_string_attribute = \"Nakita\"\n\n}\n\nstring_variable = string_variable + \" Ah, nice to meet you, \" + player.name_string_attribute + \"!\"\nmsg (string_variable)\n\n// output/display:\n\nHi\n\nHi, how are you?\n\nHi, how are you? My name is HK, what is your name?\n\nHi, how are you? My name is HK, what is your name? Ah, nice to meet you, Nakita!\n</code></pre>\n\n",
      "PostDate": "2018-08-25T06:53:06.4520479Z",
      "LastEditDate": "2018-08-25T07:19:44.8165149Z",
      "link": null
    },
    {
      "PostId": "3ab8e090-fc12-415b-8ddb-de76cfc8a7a1",
      "UserId": 372999,
      "Username": "Nakita Block",
      "AvatarUrl": "https://secure.gravatar.com/avatar/3bae1b35d822d93e538260a988f64861?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well that was a lot more information than I expected, which I'm very thankful for. \r\n\r\nThe main thing I appreciate is that when I went back to the editor, I noticed that \"Print without br\" was the second option in the list. And instead of you saying \"You dummy, it's right there in the drop-down menu!\" you actually elaborated on the subject and that's absolutely awesome of you guys. \r\n\r\nIt's extremely helpful that most of this is pretty much like BASIC with a Visual BASIC type of interface, so the more I mess around with it the easier it gets to understand. In many cases I don't even use the interface and instead just write the code myself because it's sometimes faster that way than it is to wait for the options to pop up (at least in the browser it is).\r\n\r\n Anyway I'm rambling. I just wanted to thank you guys for your courteous and out-of-your-way answers. I know I'll have more questions in due time. Right now I'm sure there are things that could be faster, but I've learned how to set and utilize variables (properly, without the syntax error) so I have been able to solve some of my questions just by throwing in an extra variable that may not necessarily be efficient, but it works. Is it okay to once in a while throw out a code just to see if there's a more efficient way to write it?",
      "EditableFormat": "markdown",
      "HTML": "<p>Well that was a lot more information than I expected, which I'm very thankful for.</p>\n<p>The main thing I appreciate is that when I went back to the editor, I noticed that \"Print without br\" was the second option in the list. And instead of you saying \"You dummy, it's right there in the drop-down menu!\" you actually elaborated on the subject and that's absolutely awesome of you guys.</p>\n<p>It's extremely helpful that most of this is pretty much like BASIC with a Visual BASIC type of interface, so the more I mess around with it the easier it gets to understand. In many cases I don't even use the interface and instead just write the code myself because it's sometimes faster that way than it is to wait for the options to pop up (at least in the browser it is).</p>\n<p>Anyway I'm rambling. I just wanted to thank you guys for your courteous and out-of-your-way answers. I know I'll have more questions in due time. Right now I'm sure there are things that could be faster, but I've learned how to set and utilize variables (properly, without the syntax error) so I have been able to solve some of my questions just by throwing in an extra variable that may not necessarily be efficient, but it works. Is it okay to once in a while throw out a code just to see if there's a more efficient way to write it?</p>\n\n",
      "PostDate": "2018-08-29T06:00:19.1059891Z",
      "LastEditDate": "2018-08-29T06:02:18.632719Z",
      "link": null
    },
    {
      "PostId": "453149a6-bae8-45c3-9acb-d026168bf567",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">Is it okay to once in a while throw out a code just to see if there's a more efficient way to write it? (Nakita)\r\n\r\ndefinitely, coders love this... to try to come up with better code, we find it fun! (and can be compulsive-consuming: detrimenting making actual progress on the game/software you're creating, lol, as you can always make the code more efficient and/or more scalable/dynamic/editable --- HK has this problem), hehe :D",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is it okay to once in a while throw out a code just to see if there's a more efficient way to write it? (Nakita)</p>\n</blockquote>\n<p>definitely, coders love this... to try to come up with better code, we find it fun! (and can be compulsive-consuming: detrimenting making actual progress on the game/software you're creating, lol, as you can always make the code more efficient and/or more scalable/dynamic/editable --- HK has this problem), hehe :D</p>\n\n",
      "PostDate": "2018-08-30T06:48:17.2868601Z",
      "LastEditDate": "2018-08-30T06:49:07.0949055Z",
      "link": null
    }
  ]
}
