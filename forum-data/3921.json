{
  "Topic": {
    "TopicId": "3921",
    "ForumId": "10",
    "Title": "Finding objects based on a flag",
    "LastUpdated": "2013-09-22T20:04:17+01:00",
    "ReplyCount": 28
  },
  "Posts": [
    {
      "PostId": "26268",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Hello all\n\nI have a quick question: Is there a way to find objects with a certain flag, without knowing the object that has that specific flag? I seem to only be able to find flags on objects if I already know what object I'm dealing with.\n\nAny help is highly appreciated <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> \n\nThanks",
      "EditableFormat": "bbcode",
      "HTML": "Hello all<br/><br/>I have a quick question: Is there a way to find objects with a certain flag, without knowing the object that has that specific flag? I seem to only be able to find flags on objects if I already know what object I'm dealing with.<br/><br/>Any help is highly appreciated <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> <br/><br/>Thanks",
      "PostDate": "2013-09-16T21:54:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26270",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "&quot;flags&quot; are Boolean Attributes, so in code, look for these code lines:\n\nBoolean Attribute:\n\nname_of_object.name_of_attribute = true_or_false\n~or~\nname_of_variable_string = true_or_false\n\norc.dead=false // alive\norc.dead=true // dead\n~or~\nyou_go_first_in_combat=false // enemy goes first in combat\nyou_go_first_in_combat=true // you go first in combat\n\nCreation (adding an attribute to an object) Line:\n\n[code:3kz9aoek]&lt;name_of_attribute type=&quot;boolean&quot;&gt;true_or_false&lt;/name_of_attribute&gt;[/code:3kz9aoek]\n\nScripting (action = using the attribute. In the GUI~Editor: Add a~new script) Line, for example:\n\n[code:3kz9aoek]if (name_of_object&#46;name_of_attribute=true_or_false) {\n  // then do&#58; whatever coding~script(s)\n}[/code:3kz9aoek]\n\nfor example, of a common custom made~used boolean (&quot;flag&quot;) attribute:\n\n&quot;dead&quot; // for flagging (setting~changing your flag: orc.dead=false ~ alive ---&gt; orc.dead=true ~ killed) when the enemy is killed.\n\n[code:3kz9aoek]&lt;object name=&quot;orc&quot;&gt;\n  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt; // the orc starts out alive obviously\n  &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Fight&lt;/displayverbs&gt;\n  &lt;fight type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91; // our created~added &quot;fight&quot; verb's scripting~scripts\n    if (orc&#46;dead=true) { // you can't fight what is already killed, lol\n      msg (&quot;It is already dead, silly!&quot;) // you can't fight what is already killed, lol\n    } else {\n      // combat coding\n      if (orc&#46;hit_points &lt;= 0) {\n        player&#46;experience = player&#46;experience + orc&#46;experience\n        player&#46;cash = player&#46;cash + orc&#46;experience\n        orc&#46;dead=true // the orc is now set &quot;flagged&quot; as &quot;dead&quot;, as it's hit_points is zero or below zero&#46;\n      }\n      if (player&#46;hit_points &lt;= 0) {\n        msg (&quot;GAME OVER&quot;)\n        finish\n      }\n    }\n  &#93;&#93;&gt;&lt;fight&gt;\n&lt;/object&gt;[/code:3kz9aoek]",
      "EditableFormat": "bbcode",
      "HTML": "&quot;flags&quot; are Boolean Attributes, so in code, look for these code lines:<br/><br/>Boolean Attribute:<br/><br/>name_of_object.name_of_attribute = true_or_false<br/>~or~<br/>name_of_variable_string = true_or_false<br/><br/>orc.dead=false // alive<br/>orc.dead=true // dead<br/>~or~<br/>you_go_first_in_combat=false // enemy goes first in combat<br/>you_go_first_in_combat=true // you go first in combat<br/><br/>Creation (adding an attribute to an object) Line:<br/><br/><pre><code>&lt;name_of_attribute type=&quot;boolean&quot;&gt;true_or_false&lt;/name_of_attribute&gt;</code></pre><br/><br/>Scripting (action = using the attribute. In the GUI~Editor: Add a~new script) Line, for example:<br/><br/><pre><code>if (name_of_object&#46;name_of_attribute=true_or_false) {<br/>  // then do&#58; whatever coding~script(s)<br/>}</code></pre><br/><br/>for example, of a common custom made~used boolean (&quot;flag&quot;) attribute:<br/><br/>&quot;dead&quot; // for flagging (setting~changing your flag: orc.dead=false ~ alive ---&gt; orc.dead=true ~ killed) when the enemy is killed.<br/><br/><pre><code>&lt;object name=&quot;orc&quot;&gt;<br/>  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt; // the orc starts out alive obviously<br/>  &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Fight&lt;/displayverbs&gt;<br/>  &lt;fight type=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91; // our created~added &quot;fight&quot; verb's scripting~scripts<br/>    if (orc&#46;dead=true) { // you can't fight what is already killed, lol<br/>      msg (&quot;It is already dead, silly!&quot;) // you can't fight what is already killed, lol<br/>    } else {<br/>      // combat coding<br/>      if (orc&#46;hit_points &lt;= 0) {<br/>        player&#46;experience = player&#46;experience + orc&#46;experience<br/>        player&#46;cash = player&#46;cash + orc&#46;experience<br/>        orc&#46;dead=true // the orc is now set &quot;flagged&quot; as &quot;dead&quot;, as it's hit_points is zero or below zero&#46;<br/>      }<br/>      if (player&#46;hit_points &lt;= 0) {<br/>        msg (&quot;GAME OVER&quot;)<br/>        finish<br/>      }<br/>    }<br/>  &#93;&#93;&gt;&lt;fight&gt;<br/>&lt;/object&gt;</code></pre>",
      "PostDate": "2013-09-17T02:43:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26273",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Thank you for the reply!\n\nI am using flags to set stuff like whether you're in combat, whether you have something equipped etc. These flags however, I can set because I know what object I'm dealing with. From your example, &quot;orc.dead=true&quot; we set the dead boolean to true on the orc, but that's because we know the object, orc.\n\nI was interested in a way of finding objects with a flag without knowing the object. For example I would like to find an object in a room with flag &quot;enemy&quot;, as this would allow me to send that object to my combat script, based on the flag and not the object, thus having that combat script universal (dunno if universal is the correct term to use, but to avoid having an enemy hardcoded into the script). This might only be a problem, because my take on a solution is wrongly angled <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\nLate yesterday I was able to make another script more universal by using a function with parameters and I believe I can do the same with my combat script, or I hope so at least. I will work on that today and see what I end up with. I appreciate your code example above, and the time you put into it, as it gave me another idea as to how to solve my combat system <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for the reply!<br/><br/>I am using flags to set stuff like whether you're in combat, whether you have something equipped etc. These flags however, I can set because I know what object I'm dealing with. From your example, &quot;orc.dead=true&quot; we set the dead boolean to true on the orc, but that's because we know the object, orc.<br/><br/>I was interested in a way of finding objects with a flag without knowing the object. For example I would like to find an object in a room with flag &quot;enemy&quot;, as this would allow me to send that object to my combat script, based on the flag and not the object, thus having that combat script universal (dunno if universal is the correct term to use, but to avoid having an enemy hardcoded into the script). This might only be a problem, because my take on a solution is wrongly angled <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>Late yesterday I was able to make another script more universal by using a function with parameters and I believe I can do the same with my combat script, or I hope so at least. I will work on that today and see what I end up with. I appreciate your code example above, and the time you put into it, as it gave me another idea as to how to solve my combat system <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2013-09-17T08:30:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26274",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I hope you don't mind (if so tell me), but I'm going to stick with the &quot;code view&quot; form of script. You should be able to map it to the GUI commands as need be - though if you're a coder and are comfortable with code, you might eventually want to just edit the code anyway. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nYou can refer to the player as &quot;player&quot; in your scripts, but the more general form of &quot;game.pov&quot; is preferred, as it leaves the possibility open for using multiple points-of-view in the future (game.pov is just &quot;player&quot; in a normal game).\n\nAn object of any kind can have a parent. That is specified by the attribute &quot;parent&quot; (naturally enough). If you are the parent of an object, then you hold it. If a room is the parent of an object (even the player), then the object is in that room.\n\nSo the current room is just &quot;game.pov.parent&quot;. And there is a handy function called GetDirectChildren that returns all the children of an object - if passed a room, it will be all the objects in that room.\n\nYou can &quot;foreach&quot; over a list. You could do that and search for your flag. So, putting it all together, you could have code like:\n\n[code:1skugxdx]foreach (object, GetDirectChildren(game&#46;pov&#46;parent)) {\n    if (HasFlag(object, &quot;someflag&quot;)) {\n        msg(&quot;object &quot; + object + &quot; has flag someflag&quot;)\n    }\n}[/code:1skugxdx]\nOf course, change &quot;someflag&quot; to what you want. \n\nThere are also &quot;Scope&quot; functions that return objects in various scopes: what you can see (ScopeVisible), what you can take (ScopeReachableNotHeld), what you hold (ScopeInventory), etc. You can find them all here:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Scopes\">http://quest5.net/wiki/Scopes</a><!-- m -->\n\nIf you just want to look in a particular scope, you can use that scope function instead of GetDirectChildren, which gives you all objects, including scenery and objects that might be invisible.\n\nI would suggest you take a look through the Quest library code that is installed. I have found it indispensable in learning how to do things in Quest (or at least some ways to do them <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --> ).\n\nHope that helps.",
      "EditableFormat": "bbcode",
      "HTML": "I hope you don't mind (if so tell me), but I'm going to stick with the &quot;code view&quot; form of script. You should be able to map it to the GUI commands as need be - though if you're a coder and are comfortable with code, you might eventually want to just edit the code anyway. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>You can refer to the player as &quot;player&quot; in your scripts, but the more general form of &quot;game.pov&quot; is preferred, as it leaves the possibility open for using multiple points-of-view in the future (game.pov is just &quot;player&quot; in a normal game).<br/><br/>An object of any kind can have a parent. That is specified by the attribute &quot;parent&quot; (naturally enough). If you are the parent of an object, then you hold it. If a room is the parent of an object (even the player), then the object is in that room.<br/><br/>So the current room is just &quot;game.pov.parent&quot;. And there is a handy function called GetDirectChildren that returns all the children of an object - if passed a room, it will be all the objects in that room.<br/><br/>You can &quot;foreach&quot; over a list. You could do that and search for your flag. So, putting it all together, you could have code like:<br/><br/><pre><code>foreach (object, GetDirectChildren(game&#46;pov&#46;parent)) {<br/>    if (HasFlag(object, &quot;someflag&quot;)) {<br/>        msg(&quot;object &quot; + object + &quot; has flag someflag&quot;)<br/>    }<br/>}</code></pre><br/>Of course, change &quot;someflag&quot; to what you want. <br/><br/>There are also &quot;Scope&quot; functions that return objects in various scopes: what you can see (ScopeVisible), what you can take (ScopeReachableNotHeld), what you hold (ScopeInventory), etc. You can find them all here:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Scopes\">http://quest5.net/wiki/Scopes</a><!-- m --><br/><br/>If you just want to look in a particular scope, you can use that scope function instead of GetDirectChildren, which gives you all objects, including scenery and objects that might be invisible.<br/><br/>I would suggest you take a look through the Quest library code that is installed. I have found it indispensable in learning how to do things in Quest (or at least some ways to do them <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --> ).<br/><br/>Hope that helps.",
      "PostDate": "2013-09-17T09:57:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26275",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "That is extremely helpful jaynabonne!\n\nThat was exactly what I was looking for. Thanks a bunch! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nWhat do you mean by looking through the Quest library code? Do you mean showing the library elements through the filter, and see what functions that reveals? I hadn't thought of that so will certainly do it when I look for ways to do stuff from now on <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "That is extremely helpful jaynabonne!<br/><br/>That was exactly what I was looking for. Thanks a bunch! <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>What do you mean by looking through the Quest library code? Do you mean showing the library elements through the filter, and see what functions that reveals? I hadn't thought of that so will certainly do it when I look for ways to do stuff from now on <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-17T10:08:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26278",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well, you can do it that way, but actually, I meant go to the install path (like C:\\Program Files (x86)\\Quest 5\\Core) and look through the ASLX files. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> You can peruse them with a text editor and even do searches for functions and things. (I have a free version of Visual Studio, so I just point a &quot;Find in Files&quot; command to that folder and look up functions and things.)\n\nYou could probably do both - find the function, type, command, etc in the GUI editor, and then it will tell you which library file the thing is in.",
      "EditableFormat": "bbcode",
      "HTML": "Well, you can do it that way, but actually, I meant go to the install path (like C:\\Program Files (x86)\\Quest 5\\Core) and look through the ASLX files. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> You can peruse them with a text editor and even do searches for functions and things. (I have a free version of Visual Studio, so I just point a &quot;Find in Files&quot; command to that folder and look up functions and things.)<br/><br/>You could probably do both - find the function, type, command, etc in the GUI editor, and then it will tell you which library file the thing is in.",
      "PostDate": "2013-09-17T11:10:54+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26279",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Ah smart, I hadn't even thought of that! Thanks for the help <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Ah smart, I hadn't even thought of that! Thanks for the help <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-17T11:16:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26296",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "my apologies Slent! I should have asked whether you had meant &quot;in getting~finding and using a certain flag in a script&quot; or if you had meant &quot;just finding certain flags attributes on your~or~all various objects&quot;. As I decided to just go with the non-scripting possible meaning, which wasn't what you were asking about, so oops, my bad!\n\nAs Jayna has already explained thoroughly, I'll just mention that there's many ways to &quot;check and get&quot; (find~get and use) an attribute (or an Object too):\n\nhere's a good example (has many instances) of using &quot;checking&quot; and &quot;getting&quot; scripting:\n\n[code:36sejxd5]&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;\n  enemy=GetObject(text)\n  if (enemy=null) {\n    foreach (obj,AllObjects()) {\n      if (obj&#46;alias=text) {\n        enemy=obj\n      } else {\n        msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)\n      }\n    }\n  }\n  if (not enemy=null) {\n    if (not check_reachable_function (enemy) = true) {\n      msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)\n    } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {\n      msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)\n    } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n      msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)\n    } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n      msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n    } else {\n      battle_sequence_function (self,enemy)\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;\n  foreach (obj,ScopeReachableNotHeld ()) {\n    if (obj=enemy) {\n      value = true\n    } else {\n      value = false\n    }\n  }\n  return (value)\n&lt;/function&gt;[/code:36sejxd5]\n\nand in a more (in quasi code) general~conceptual look to it:\n\n[code:36sejxd5]if (has &quot;this&quot;) {\n  if (has &quot;this&quot;) {\n    if (has &quot;this&quot;) {\n      etc &quot;ifs&quot;\n        Get or Do &quot;this&quot;\n      }\n    }\n  }\n}[/code:36sejxd5]\n\nhere's a real example of the multiple &quot;if has&quot; scripting:\n\nChase's Wearables (Equipment) Library:\n\n[code:36sejxd5]&lt;library&gt;\n\t&lt;!--\n\t\tChase's Wearables Library v2&#46;3\n\t\tBased on&#58; Pixie's Clothing Library (originally)\n\t\t\n\t\tYou may edit this library however you please&#46;\n\t\t\n\t\tI decided to include a UI, since not having a UI kinda bugged me&#46;\n\t\t\n\t\tv1&#46;01\n\t\t-Fixed a typo\n\t\t\n\t\tv1&#46;02\n\t\t+Added Event Handlers\n\t\t+Fixed drop bug\n\t\t\n\t\tv1&#46;03\n\t\t+Added configurable wear/remove messages\n\t\t-Removed redundant events\n\t\t\n\t\tv1&#46;04\n\t\t=Fixed an issue with wearing multiple blank items\n\t\t=Fixed the issue with wearing items without aliases\n\t\t\n\t\tv2&#46;0\n\t\t=Rewritten to better support base systems, may have broken older usages\n\t\t+Added wear layer support\n\t\t\n\t\tv2&#46;1\n\t\t=Fixed an issue of an error being thrown when trying to wear something that is not wearable&#46;\n\n\t\tv2&#46;2\n\t\t=Fixed an issue where the custom remove message doesn't play if the item cannot be removed&#46;\n\t\t\n\t\tv2&#46;3\n\t\t=Fixed a significant bug where you could not wear something if a non-wearable item was in your inventory&#46;\n\t\t\n\t\tChase\n\t\tchasesan@gmail&#46;com\n\t--&gt;\n\t\n\t&lt;dynamictemplate name=&quot;WearSuccessful&quot;&gt;&quot;You put &quot; + object&#46;article + &quot; on&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;WearUnsuccessful&quot;&gt;&quot;You can't wear &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;AlreadyWearing&quot;&gt;&quot;You are already wearing &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;CannotWearOver&quot;&gt;&quot;You cannot wear that over &quot; + object&#46;display + &quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;CannotWearWith&quot;&gt;&quot;You cannot wear that while wearing &quot; + object&#46;display + &quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t\n\t&lt;dynamictemplate name=&quot;RemoveSuccessful&quot;&gt;&quot;You take &quot; + object&#46;article + &quot; off&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;RemoveUnsuccessful&quot;&gt;&quot;You can't remove &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t&lt;dynamictemplate name=&quot;RemoveFirst&quot;&gt;&quot;You can't remove that while wearing &quot;+object&#46;display+&quot;&#46;&quot;&lt;/dynamictemplate&gt;\n\t\n\t&lt;template name=&quot;Wear&quot;&gt;Wear&lt;/template&gt;\n\t&lt;verbtemplate name=&quot;wear&quot;&gt;wear&lt;/verbtemplate&gt;\n\t&lt;verbtemplate name=&quot;wear&quot;&gt;put on&lt;/verbtemplate&gt;\n\t\n\t&lt;template name=&quot;Remove&quot;&gt;Remove&lt;/template&gt;\n\t&lt;verbtemplate name=&quot;remove&quot;&gt;remove&lt;/verbtemplate&gt;\n\t&lt;verbtemplate name=&quot;remove&quot;&gt;take off&lt;/verbtemplate&gt;\n\t\n\t&lt;command name=&quot;wear&quot; template=&quot;wear&quot;&gt;\n\t\t&lt;multiple&gt;\n\t\t\treturn (ScopeInventory())\n\t\t&lt;/multiple&gt;\n\t\t&lt;script&gt;\n\t\t\tforeach (obj, object) {\n\t\t\t\tDoWear(obj)\n\t\t\t}\n\t\t&lt;/script&gt;\n\t&lt;/command&gt;\n\n\t&lt;command name=&quot;remove&quot; template=&quot;remove&quot;&gt;\n\t\t&lt;multiple&gt;\n\t\t\treturn (ScopeInventory())\n\t\t&lt;/multiple&gt;\n\t\t&lt;script&gt;\n\t\t\tforeach (obj, object) {\n\t\t\t\tDoRemove(obj)\n\t\t\t}\n\t\t&lt;/script&gt;\n\t&lt;/command&gt;\n\t\n\t&lt;function name=&quot;DoWear&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif(not HasAttribute(object,&quot;worn&quot;)) {\n\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n\t\t} else if (object&#46;parent = player and object&#46;worn = true) {\n\t\t\tmsg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))\n\t\t} else if (not ListContains(ScopeInventory(), object)) {\n\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))\n\t\t} else {\n\t\t\tisLayerProblem = false\n\t\t\tconflictedItem = null\n\t\t\t\n\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {\n\t\t\t\tforeach(item, ScopeReachableInventory()) {\n\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {\n\t\t\t\t\t\tif(item&#46;worn = true) {\n\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {\n\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {\n\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t\tisLayerProblem = true\n\t\t\t\t\t\t\t\t\t} else if(object&#46;wear_layer = item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(conflictedItem = null) {\n\t\t\t\tobject&#46;worn = True\n\t\t\t\tobject&#46;original_drop = object&#46;drop\n\t\t\t\tobject&#46;original_alias = object&#46;alias\n\t\t\t\tobject&#46;drop = false\n\t\t\t\t\n\t\t\t\tobject&#46;display = GetDisplayName(object)\n\t\t\t\tobject&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;\n\t\t\t\t\n\t\t\t\tif(object&#46;wearmsg = null) {\n\t\t\t\t\tmsg (DynamicTemplate(&quot;WearSuccessful&quot;,object))\n\t\t\t\t} else {\n\t\t\t\t\tmsg(object&#46;wearmsg)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//do after\n\t\t\t\tif (HasScript(object, &quot;onafterwear&quot;)) {\n\t\t\t\t\tdo(object, &quot;onafterwear&quot;)\n\t\t\t\t} else if(HasString(object, &quot;onafterwear&quot;)) {\n\t\t\t\t\tmsg(object&#46;onafterwear)\n\t\t\t\t}\n\t\t\t} else if(isLayerProblem = true) {\n\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))\n\t\t\t} else {\n\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))\n\t\t\t}\n\t\t\t\n\t\t}\n\t&#93;&#93;&gt;&lt;/function&gt;\n\t\n\t&lt;function name=&quot;DoRemove&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif (not object&#46;parent = player or not object&#46;worn or not object&#46;removeable) {\n\t\t\tif(object&#46;removemsg = null) {\n\t\t\t\tmsg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))\n\t\t\t} else {\n\t\t\t\tmsg (object&#46;removemsg)\n\t\t\t}\n\t\t} else {\n\t\t\tconflictedItem = null\n\t\t\t//check if we are wearing anything over it\n\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {\n\t\t\t\tforeach(item, ScopeReachableInventory()) {\n\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {\n\t\t\t\t\t\tif(item&#46;worn = true) {\n\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {\n\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {\n\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {\n\t\t\t\t\t\t\t\t\t\tconflictedItem = item\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(conflictedItem = null) {\n\t\t\t\tif(object&#46;removemsg = null) {\n\t\t\t\t\tmsg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))\n\t\t\t\t} else {\n\t\t\t\t\tmsg(object&#46;removemsg)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tobject&#46;worn = false\n\t\t\t\tobject&#46;drop = object&#46;original_drop\n\t\t\t\tobject&#46;alias = object&#46;original_alias\n\t\t\t\tobject&#46;original_drop = null\n\t\t\t\tobject&#46;original_alias = null\n\t\t\t\tobject&#46;display = null\n\t\t\t\t\n\t\t\t\t//do after\n\t\t\t\tif (HasScript(object, &quot;onafterremove&quot;)) {\n\t\t\t\t\tdo(object, &quot;onafterremove&quot;)\n\t\t\t\t} else if(HasString(object, &quot;onafterremove&quot;)) {\n\t\t\t\t\tmsg(object&#46;onafterremove)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tmsg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))\n\t\t\t}\n\t\t}\n\t&#93;&#93;&gt;&lt;/function&gt;\n\t\n\t&lt;type name=&quot;wearable&quot;&gt;\n\t\t&lt;worn type=&quot;boolean&quot;&gt;false&lt;/worn&gt;\n\t\t&lt;removeable type=&quot;boolean&quot;&gt;true&lt;/removeable&gt;\n\t\t&lt;wear_layer type=&quot;int&quot;&gt;2&lt;/wear_layer&gt;\n\t\t&lt;inventoryverbs type=&quot;listextend&quot;&gt;&#91;Wear&#93;;&#91;Remove&#93;&lt;/inventoryverbs&gt;\n\t&lt;/type&gt;\n\t&lt;!-- Interface --&gt;\n\t&lt;tab&gt;\n\t\t&lt;parent&gt;_ObjectEditor&lt;/parent&gt;\n\t\t&lt;caption&gt;Wearable&lt;/caption&gt;\n\t\t&lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;Wearable&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;controltype&gt;dropdowntypes&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;Can be worn?&lt;/caption&gt;\n\t\t\t&lt;types&gt;*=Cannot be worn; wearable=Can be worn&lt;/types&gt;\n\t\t\t&lt;width&gt;150&lt;/width&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;checkbox&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;removeable&lt;/attribute&gt;\n\t\t\t&lt;caption&gt;Removeable?&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;number&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;Wear Layer&lt;/caption&gt;\n\t\t\t&lt;attribute&gt;wear_layer&lt;/attribute&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;caption&gt;Wear Slot&lt;/caption&gt;\n\t\t\t&lt;controltype&gt;list&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;wear_slots&lt;/attribute&gt;\n\t\t\t&lt;editprompt&gt;Please enter the name for the wear location&lt;/editprompt&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;label&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;If two objects have the same wear location, they will not be able to be worn at a same time&#46; Any number items without wear locations can be worn&#46;&lt;/caption&gt;\n\t\t\t&lt;advanced/&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;!-- snip --&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;textbox&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;wearmsg&lt;/attribute&gt;\n\t\t\t&lt;caption&gt;Message to print when wearing (leave blank for default)&lt;/caption&gt;\n\t\t\t&lt;nullable/&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;textbox&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;removemsg&lt;/attribute&gt;\n\t\t\t&lt;caption&gt;Message to print when removing or trying to remove (leave blank for default)&lt;/caption&gt;\n\t\t\t&lt;nullable/&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;!-- Event Handlers from here down none/text/scripts --&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;After Wearing&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;selfcaption&gt;After wearing the object&lt;/selfcaption&gt;\n\t\t\t&lt;controltype&gt;multi&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;onafterwear&lt;/attribute&gt;\n\t\t\t&lt;types&gt;null=None; string=Text; script=Run script&lt;/types&gt;\n\t\t\t&lt;editors&gt;string=textbox&lt;/editors&gt;\n\t\t\t&lt;expand/&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;\n\t\t\t&lt;caption&gt;After Removing&lt;/caption&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t\t&lt;control&gt;\n\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;\n\t\t\t&lt;selfcaption&gt;After removing the object&lt;/selfcaption&gt;\n\t\t\t&lt;controltype&gt;multi&lt;/controltype&gt;\n\t\t\t&lt;attribute&gt;onafterremove&lt;/attribute&gt;\n\t\t\t&lt;types&gt;null=None; string=Text; script=Run script&lt;/types&gt;\n\t\t\t&lt;editors&gt;string=textbox&lt;/editors&gt;\n\t\t\t&lt;expand/&gt;\n\t\t&lt;/control&gt;\n\t\t\n\t&lt;/tab&gt;\n&lt;/library&gt;[/code:36sejxd5]\n\n-----------------------------------------------\n\nreally useful webpages:\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)\n\n<!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)\n\nConditionals (needed for the &quot;checking&quot; part):\n\nIf (and &quot;Else If&quot; and &quot;Else&quot;)\nSwitch\nFor\nForeach\nFirsttime (and &quot;Otherwise&quot;)\nWhile\n\nAlso needed for the &quot;checking&quot;:\n\n&quot;Has&quot;\n\nso, for example of the &quot;if has&quot; and like-kind of scripts:\n\n[code:36sejxd5]if (DoesInherit (orc, &quot;non_playable_character_object_type&quot;) { // checking if this is a &quot;character&quot; that you can get in a fight with, as we don't want to let you get in a fight with a mountain&#46;&#46;&#46; or the air&#46;&#46;&#46; or a table&#46;&#46;&#46; a house&#46;&#46;&#46; a room&#46;&#46;&#46; etc&#46;&#46;&#46; lol\n  if (check_reachable_function (orc) = true) { // checking if you can &quot;reach&quot; the orc (for examples&#58; if the orc is across a river and you can't yet swim nor can you use projectile weapons, then you can't fight the orc, as you're not &quot;next&quot; to it&#46; Or, if the orc is still inside of a locked chest, just pretend with me on this lol, then you can't fight the orc either)\n    if (HasAttribute (orc, &quot;hit_points&quot;) { // checking if the orc has &quot;life&quot; that we can damage and kill, hehe, as we can't fight something that can't be killed&#46;&#46;&#46; that wouldn't be fair, lol\n      if (HasBoolean (orc, &quot;dead&quot;) = false) { // checking if the orc is dead, we don't want to be fighting something that is already dead, lol\n        if (GetBoolean (orc, &quot;hostile&quot;) { // checking if the orc wants to fight or not, sorry, but if you want to kill any~all npcs, you got to at least make them very mad~angry (low &quot;relationship&quot; integer attribute) at you&#46; We don't want to let you kill something that you have a very cordial~friendly (high) &quot;relationship&quot; integer attribute with the thing~npc, hehe&#46;\n          // fight scripting\n        }\n      }\n    }\n  }\n}[/code:36sejxd5]\n\nand most of the scripts:\n\nAll: AllObjects, AllExits, etc etc etc\nGet: GetObject, GetString, etc etc etc\nHas: HasObject, HasBoolean, etc etc etc\nDoes: DoesInherit (for the &quot;Inherit&quot; attribute, aka the Object Types)\nContains: Contains, ContainsVisible, ContainsAccessible, ContainsReachable\nScopes: ScopeInventory, ScopeReachable, etc etc etc\nLists: StringListItem, ObjectListItem, ListItem\nDictionaries: StringDictionaryItem, ObjectDictionaryItem, ScriptDictionaryItem, DictionaryItem\n&quot;Inherit&quot; Attribute (of Object Types): DoesInherit, TypeOf",
      "EditableFormat": "bbcode",
      "HTML": "my apologies Slent! I should have asked whether you had meant &quot;in getting~finding and using a certain flag in a script&quot; or if you had meant &quot;just finding certain flags attributes on your~or~all various objects&quot;. As I decided to just go with the non-scripting possible meaning, which wasn't what you were asking about, so oops, my bad!<br/><br/>As Jayna has already explained thoroughly, I'll just mention that there's many ways to &quot;check and get&quot; (find~get and use) an attribute (or an Object too):<br/><br/>here's a good example (has many instances) of using &quot;checking&quot; and &quot;getting&quot; scripting:<br/><br/><pre><code>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>  if (enemy=null) {<br/>    foreach (obj,AllObjects()) {<br/>      if (obj&#46;alias=text) {<br/>        enemy=obj<br/>      } else {<br/>        msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)<br/>      }<br/>    }<br/>  }<br/>  if (not enemy=null) {<br/>    if (not check_reachable_function (enemy) = true) {<br/>      msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)<br/>    } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {<br/>      msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)<br/>    } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>      msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)<br/>    } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>      msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>    } else {<br/>      battle_sequence_function (self,enemy)<br/>    }<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;<br/>  foreach (obj,ScopeReachableNotHeld ()) {<br/>    if (obj=enemy) {<br/>      value = true<br/>    } else {<br/>      value = false<br/>    }<br/>  }<br/>  return (value)<br/>&lt;/function&gt;</code></pre><br/><br/>and in a more (in quasi code) general~conceptual look to it:<br/><br/><pre><code>if (has &quot;this&quot;) {<br/>  if (has &quot;this&quot;) {<br/>    if (has &quot;this&quot;) {<br/>      etc &quot;ifs&quot;<br/>        Get or Do &quot;this&quot;<br/>      }<br/>    }<br/>  }<br/>}</code></pre><br/><br/>here's a real example of the multiple &quot;if has&quot; scripting:<br/><br/>Chase's Wearables (Equipment) Library:<br/><br/><pre><code>&lt;library&gt;<br/>\t&lt;!--<br/>\t\tChase's Wearables Library v2&#46;3<br/>\t\tBased on&#58; Pixie's Clothing Library (originally)<br/>\t\t<br/>\t\tYou may edit this library however you please&#46;<br/>\t\t<br/>\t\tI decided to include a UI, since not having a UI kinda bugged me&#46;<br/>\t\t<br/>\t\tv1&#46;01<br/>\t\t-Fixed a typo<br/>\t\t<br/>\t\tv1&#46;02<br/>\t\t+Added Event Handlers<br/>\t\t+Fixed drop bug<br/>\t\t<br/>\t\tv1&#46;03<br/>\t\t+Added configurable wear/remove messages<br/>\t\t-Removed redundant events<br/>\t\t<br/>\t\tv1&#46;04<br/>\t\t=Fixed an issue with wearing multiple blank items<br/>\t\t=Fixed the issue with wearing items without aliases<br/>\t\t<br/>\t\tv2&#46;0<br/>\t\t=Rewritten to better support base systems, may have broken older usages<br/>\t\t+Added wear layer support<br/>\t\t<br/>\t\tv2&#46;1<br/>\t\t=Fixed an issue of an error being thrown when trying to wear something that is not wearable&#46;<br/><br/>\t\tv2&#46;2<br/>\t\t=Fixed an issue where the custom remove message doesn't play if the item cannot be removed&#46;<br/>\t\t<br/>\t\tv2&#46;3<br/>\t\t=Fixed a significant bug where you could not wear something if a non-wearable item was in your inventory&#46;<br/>\t\t<br/>\t\tChase<br/>\t\tchasesan@gmail&#46;com<br/>\t--&gt;<br/>\t<br/>\t&lt;dynamictemplate name=&quot;WearSuccessful&quot;&gt;&quot;You put &quot; + object&#46;article + &quot; on&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;WearUnsuccessful&quot;&gt;&quot;You can't wear &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;AlreadyWearing&quot;&gt;&quot;You are already wearing &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;CannotWearOver&quot;&gt;&quot;You cannot wear that over &quot; + object&#46;display + &quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;CannotWearWith&quot;&gt;&quot;You cannot wear that while wearing &quot; + object&#46;display + &quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t<br/>\t&lt;dynamictemplate name=&quot;RemoveSuccessful&quot;&gt;&quot;You take &quot; + object&#46;article + &quot; off&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;RemoveUnsuccessful&quot;&gt;&quot;You can't remove &quot; + object&#46;article + &quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t&lt;dynamictemplate name=&quot;RemoveFirst&quot;&gt;&quot;You can't remove that while wearing &quot;+object&#46;display+&quot;&#46;&quot;&lt;/dynamictemplate&gt;<br/>\t<br/>\t&lt;template name=&quot;Wear&quot;&gt;Wear&lt;/template&gt;<br/>\t&lt;verbtemplate name=&quot;wear&quot;&gt;wear&lt;/verbtemplate&gt;<br/>\t&lt;verbtemplate name=&quot;wear&quot;&gt;put on&lt;/verbtemplate&gt;<br/>\t<br/>\t&lt;template name=&quot;Remove&quot;&gt;Remove&lt;/template&gt;<br/>\t&lt;verbtemplate name=&quot;remove&quot;&gt;remove&lt;/verbtemplate&gt;<br/>\t&lt;verbtemplate name=&quot;remove&quot;&gt;take off&lt;/verbtemplate&gt;<br/>\t<br/>\t&lt;command name=&quot;wear&quot; template=&quot;wear&quot;&gt;<br/>\t\t&lt;multiple&gt;<br/>\t\t\treturn (ScopeInventory())<br/>\t\t&lt;/multiple&gt;<br/>\t\t&lt;script&gt;<br/>\t\t\tforeach (obj, object) {<br/>\t\t\t\tDoWear(obj)<br/>\t\t\t}<br/>\t\t&lt;/script&gt;<br/>\t&lt;/command&gt;<br/><br/>\t&lt;command name=&quot;remove&quot; template=&quot;remove&quot;&gt;<br/>\t\t&lt;multiple&gt;<br/>\t\t\treturn (ScopeInventory())<br/>\t\t&lt;/multiple&gt;<br/>\t\t&lt;script&gt;<br/>\t\t\tforeach (obj, object) {<br/>\t\t\t\tDoRemove(obj)<br/>\t\t\t}<br/>\t\t&lt;/script&gt;<br/>\t&lt;/command&gt;<br/>\t<br/>\t&lt;function name=&quot;DoWear&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif(not HasAttribute(object,&quot;worn&quot;)) {<br/>\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>\t\t} else if (object&#46;parent = player and object&#46;worn = true) {<br/>\t\t\tmsg (DynamicTemplate(&quot;AlreadyWearing&quot;, object))<br/>\t\t} else if (not ListContains(ScopeInventory(), object)) {<br/>\t\t\tmsg (DynamicTemplate(&quot;WearUnsuccessful&quot;, object))<br/>\t\t} else {<br/>\t\t\tisLayerProblem = false<br/>\t\t\tconflictedItem = null<br/>\t\t\t<br/>\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {<br/>\t\t\t\tforeach(item, ScopeReachableInventory()) {<br/>\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {<br/>\t\t\t\t\t\tif(item&#46;worn = true) {<br/>\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {<br/>\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {<br/>\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t\tisLayerProblem = true<br/>\t\t\t\t\t\t\t\t\t} else if(object&#46;wear_layer = item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t}<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\t<br/>\t\t\tif(conflictedItem = null) {<br/>\t\t\t\tobject&#46;worn = True<br/>\t\t\t\tobject&#46;original_drop = object&#46;drop<br/>\t\t\t\tobject&#46;original_alias = object&#46;alias<br/>\t\t\t\tobject&#46;drop = false<br/>\t\t\t\t<br/>\t\t\t\tobject&#46;display = GetDisplayName(object)<br/>\t\t\t\tobject&#46;alias = GetDisplayAlias(object) + &quot; (worn)&quot;<br/>\t\t\t\t<br/>\t\t\t\tif(object&#46;wearmsg = null) {<br/>\t\t\t\t\tmsg (DynamicTemplate(&quot;WearSuccessful&quot;,object))<br/>\t\t\t\t} else {<br/>\t\t\t\t\tmsg(object&#46;wearmsg)<br/>\t\t\t\t}<br/>\t\t\t\t<br/>\t\t\t\t//do after<br/>\t\t\t\tif (HasScript(object, &quot;onafterwear&quot;)) {<br/>\t\t\t\t\tdo(object, &quot;onafterwear&quot;)<br/>\t\t\t\t} else if(HasString(object, &quot;onafterwear&quot;)) {<br/>\t\t\t\t\tmsg(object&#46;onafterwear)<br/>\t\t\t\t}<br/>\t\t\t} else if(isLayerProblem = true) {<br/>\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearOver&quot;,conflictedItem))<br/>\t\t\t} else {<br/>\t\t\t\tmsg(DynamicTemplate(&quot;CannotWearWith&quot;,conflictedItem))<br/>\t\t\t}<br/>\t\t\t<br/>\t\t}<br/>\t&#93;&#93;&gt;&lt;/function&gt;<br/>\t<br/>\t&lt;function name=&quot;DoRemove&quot; parameters=&quot;object&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif (not object&#46;parent = player or not object&#46;worn or not object&#46;removeable) {<br/>\t\t\tif(object&#46;removemsg = null) {<br/>\t\t\t\tmsg (DynamicTemplate(&quot;RemoveUnsuccessful&quot;,object))<br/>\t\t\t} else {<br/>\t\t\t\tmsg (object&#46;removemsg)<br/>\t\t\t}<br/>\t\t} else {<br/>\t\t\tconflictedItem = null<br/>\t\t\t//check if we are wearing anything over it<br/>\t\t\tif(HasAttribute(object,&quot;wear_slots&quot;)) {<br/>\t\t\t\tforeach(item, ScopeReachableInventory()) {<br/>\t\t\t\t\tif(HasAttribute(item,&quot;wear_slots&quot;)) {<br/>\t\t\t\t\t\tif(item&#46;worn = true) {<br/>\t\t\t\t\t\t\tforeach(itemSlot,item&#46;wear_slots) {<br/>\t\t\t\t\t\t\t\tif(ListContains(object&#46;wear_slots,itemSlot)) {<br/>\t\t\t\t\t\t\t\t\tif(object&#46;wear_layer &lt; item&#46;wear_layer) {<br/>\t\t\t\t\t\t\t\t\t\tconflictedItem = item<br/>\t\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t\t}<br/>\t\t\t\t\t\t}<br/>\t\t\t\t\t}<br/>\t\t\t\t}<br/>\t\t\t}<br/>\t\t\t<br/>\t\t\tif(conflictedItem = null) {<br/>\t\t\t\tif(object&#46;removemsg = null) {<br/>\t\t\t\t\tmsg (DynamicTemplate(&quot;RemoveSuccessful&quot;,object))<br/>\t\t\t\t} else {<br/>\t\t\t\t\tmsg(object&#46;removemsg)<br/>\t\t\t\t}<br/>\t\t\t\t<br/>\t\t\t\tobject&#46;worn = false<br/>\t\t\t\tobject&#46;drop = object&#46;original_drop<br/>\t\t\t\tobject&#46;alias = object&#46;original_alias<br/>\t\t\t\tobject&#46;original_drop = null<br/>\t\t\t\tobject&#46;original_alias = null<br/>\t\t\t\tobject&#46;display = null<br/>\t\t\t\t<br/>\t\t\t\t//do after<br/>\t\t\t\tif (HasScript(object, &quot;onafterremove&quot;)) {<br/>\t\t\t\t\tdo(object, &quot;onafterremove&quot;)<br/>\t\t\t\t} else if(HasString(object, &quot;onafterremove&quot;)) {<br/>\t\t\t\t\tmsg(object&#46;onafterremove)<br/>\t\t\t\t}<br/>\t\t\t} else {<br/>\t\t\t\tmsg (DynamicTemplate(&quot;RemoveFirst&quot;, conflictedItem))<br/>\t\t\t}<br/>\t\t}<br/>\t&#93;&#93;&gt;&lt;/function&gt;<br/>\t<br/>\t&lt;type name=&quot;wearable&quot;&gt;<br/>\t\t&lt;worn type=&quot;boolean&quot;&gt;false&lt;/worn&gt;<br/>\t\t&lt;removeable type=&quot;boolean&quot;&gt;true&lt;/removeable&gt;<br/>\t\t&lt;wear_layer type=&quot;int&quot;&gt;2&lt;/wear_layer&gt;<br/>\t\t&lt;inventoryverbs type=&quot;listextend&quot;&gt;&#91;Wear&#93;;&#91;Remove&#93;&lt;/inventoryverbs&gt;<br/>\t&lt;/type&gt;<br/>\t&lt;!-- Interface --&gt;<br/>\t&lt;tab&gt;<br/>\t\t&lt;parent&gt;_ObjectEditor&lt;/parent&gt;<br/>\t\t&lt;caption&gt;Wearable&lt;/caption&gt;<br/>\t\t&lt;mustnotinherit&gt;editor_room; defaultplayer&lt;/mustnotinherit&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;Wearable&lt;/caption&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;controltype&gt;dropdowntypes&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;Can be worn?&lt;/caption&gt;<br/>\t\t\t&lt;types&gt;*=Cannot be worn; wearable=Can be worn&lt;/types&gt;<br/>\t\t\t&lt;width&gt;150&lt;/width&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;checkbox&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;removeable&lt;/attribute&gt;<br/>\t\t\t&lt;caption&gt;Removeable?&lt;/caption&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;number&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;Wear Layer&lt;/caption&gt;<br/>\t\t\t&lt;attribute&gt;wear_layer&lt;/attribute&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;caption&gt;Wear Slot&lt;/caption&gt;<br/>\t\t\t&lt;controltype&gt;list&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;wear_slots&lt;/attribute&gt;<br/>\t\t\t&lt;editprompt&gt;Please enter the name for the wear location&lt;/editprompt&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;label&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;If two objects have the same wear location, they will not be able to be worn at a same time&#46; Any number items without wear locations can be worn&#46;&lt;/caption&gt;<br/>\t\t\t&lt;advanced/&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;!-- snip --&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;textbox&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;wearmsg&lt;/attribute&gt;<br/>\t\t\t&lt;caption&gt;Message to print when wearing (leave blank for default)&lt;/caption&gt;<br/>\t\t\t&lt;nullable/&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;textbox&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;removemsg&lt;/attribute&gt;<br/>\t\t\t&lt;caption&gt;Message to print when removing or trying to remove (leave blank for default)&lt;/caption&gt;<br/>\t\t\t&lt;nullable/&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;!-- Event Handlers from here down none/text/scripts --&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;After Wearing&lt;/caption&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;selfcaption&gt;After wearing the object&lt;/selfcaption&gt;<br/>\t\t\t&lt;controltype&gt;multi&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;onafterwear&lt;/attribute&gt;<br/>\t\t\t&lt;types&gt;null=None; string=Text; script=Run script&lt;/types&gt;<br/>\t\t\t&lt;editors&gt;string=textbox&lt;/editors&gt;<br/>\t\t\t&lt;expand/&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;controltype&gt;title&lt;/controltype&gt;<br/>\t\t\t&lt;caption&gt;After Removing&lt;/caption&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t\t&lt;control&gt;<br/>\t\t\t&lt;mustinherit&gt;wearable&lt;/mustinherit&gt;<br/>\t\t\t&lt;selfcaption&gt;After removing the object&lt;/selfcaption&gt;<br/>\t\t\t&lt;controltype&gt;multi&lt;/controltype&gt;<br/>\t\t\t&lt;attribute&gt;onafterremove&lt;/attribute&gt;<br/>\t\t\t&lt;types&gt;null=None; string=Text; script=Run script&lt;/types&gt;<br/>\t\t\t&lt;editors&gt;string=textbox&lt;/editors&gt;<br/>\t\t\t&lt;expand/&gt;<br/>\t\t&lt;/control&gt;<br/>\t\t<br/>\t&lt;/tab&gt;<br/>&lt;/library&gt;</code></pre><br/><br/>-----------------------------------------------<br/><br/>really useful webpages:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/wiki/Category:All_Functions_and_Script_Commands\">http://quest5.net/wiki/Category:All_Fun ... t_Commands</a><!-- m --> (page 1, range: A-S)<br/><br/><!-- m --><a class=\"postlink\" href=\"http://quest5.net/w/index.php?title=Category:All_Functions_and_Script_Commands&amp;pagefrom=SetExitLightstrength#mw-pages\">http://quest5.net/w/index.php?title=Cat ... h#mw-pages</a><!-- m --> (page 2, range: S-Z)<br/><br/>Conditionals (needed for the &quot;checking&quot; part):<br/><br/>If (and &quot;Else If&quot; and &quot;Else&quot;)<br/>Switch<br/>For<br/>Foreach<br/>Firsttime (and &quot;Otherwise&quot;)<br/>While<br/><br/>Also needed for the &quot;checking&quot;:<br/><br/>&quot;Has&quot;<br/><br/>so, for example of the &quot;if has&quot; and like-kind of scripts:<br/><br/><pre><code>if (DoesInherit (orc, &quot;non_playable_character_object_type&quot;) { // checking if this is a &quot;character&quot; that you can get in a fight with, as we don't want to let you get in a fight with a mountain&#46;&#46;&#46; or the air&#46;&#46;&#46; or a table&#46;&#46;&#46; a house&#46;&#46;&#46; a room&#46;&#46;&#46; etc&#46;&#46;&#46; lol<br/>  if (check_reachable_function (orc) = true) { // checking if you can &quot;reach&quot; the orc (for examples&#58; if the orc is across a river and you can't yet swim nor can you use projectile weapons, then you can't fight the orc, as you're not &quot;next&quot; to it&#46; Or, if the orc is still inside of a locked chest, just pretend with me on this lol, then you can't fight the orc either)<br/>    if (HasAttribute (orc, &quot;hit_points&quot;) { // checking if the orc has &quot;life&quot; that we can damage and kill, hehe, as we can't fight something that can't be killed&#46;&#46;&#46; that wouldn't be fair, lol<br/>      if (HasBoolean (orc, &quot;dead&quot;) = false) { // checking if the orc is dead, we don't want to be fighting something that is already dead, lol<br/>        if (GetBoolean (orc, &quot;hostile&quot;) { // checking if the orc wants to fight or not, sorry, but if you want to kill any~all npcs, you got to at least make them very mad~angry (low &quot;relationship&quot; integer attribute) at you&#46; We don't want to let you kill something that you have a very cordial~friendly (high) &quot;relationship&quot; integer attribute with the thing~npc, hehe&#46;<br/>          // fight scripting<br/>        }<br/>      }<br/>    }<br/>  }<br/>}</code></pre><br/><br/>and most of the scripts:<br/><br/>All: AllObjects, AllExits, etc etc etc<br/>Get: GetObject, GetString, etc etc etc<br/>Has: HasObject, HasBoolean, etc etc etc<br/>Does: DoesInherit (for the &quot;Inherit&quot; attribute, aka the Object Types)<br/>Contains: Contains, ContainsVisible, ContainsAccessible, ContainsReachable<br/>Scopes: ScopeInventory, ScopeReachable, etc etc etc<br/>Lists: StringListItem, ObjectListItem, ListItem<br/>Dictionaries: StringDictionaryItem, ObjectDictionaryItem, ScriptDictionaryItem, DictionaryItem<br/>&quot;Inherit&quot; Attribute (of Object Types): DoesInherit, TypeOf",
      "PostDate": "2013-09-18T02:54:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26300",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Ah, no apologies needed! <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) -->\n\nThose are some helpful code snippets! Yesterday I was thinking about whether my condition-checking for my combat were good, so I was wondering if this is a good order in which to check conditions, before entering combat:\n\n[quote=&quot;HegemonKhan&quot;:22u5l5ja]\n[code:22u5l5ja]if (DoesInherit (orc, &quot;non_playable_character_object_type&quot;) { // checking if this is a &quot;character&quot; that you can get in a fight with, as we don't want to let you get in a fight with a mountain&#46;&#46;&#46; or the air&#46;&#46;&#46; or a table&#46;&#46;&#46; a house&#46;&#46;&#46; a room&#46;&#46;&#46; etc&#46;&#46;&#46; lol\n  if (check_reachable_function (orc) = true) { // checking if you can &quot;reach&quot; the orc (for examples&#58; if the orc is across a river and you can't yet swim nor can you use projectile weapons, then you can't fight the orc, as you're not &quot;next&quot; to it&#46; Or, if the orc is still inside of a locked chest, just pretend with me on this lol, then you can't fight the orc either)\n    if (HasAttribute (orc, &quot;hit_points&quot;) { // checking if the orc has &quot;life&quot; that we can damage and kill, hehe, as we can't fight something that can't be killed&#46;&#46;&#46; that wouldn't be fair, lol\n      if (HasBoolean (orc, &quot;dead&quot;) = false) { // checking if the orc is dead, we don't want to be fighting something that is already dead, lol\n        if (GetBoolean (orc, &quot;hostile&quot;) { // checking if the orc wants to fight or not, sorry, but if you want to kill any~all npcs, you got to at least make them very mad~angry (low &quot;relationship&quot; integer attribute) at you&#46; We don't want to let you kill something that you have a very cordial~friendly (high) &quot;relationship&quot; integer attribute with the thing~npc, hehe&#46;\n          // fight scripting\n        }\n      }\n    }\n  }\n}[/code:22u5l5ja]\n[/quote:22u5l5ja]\n\nMy current condition checking is as follows:\n\n[code:22u5l5ja]\nif (player is in combat) {\n  if (enemyObject has flag enemy) {\n    if (player has weapon equipped) {\n      attack enemy\n      give enemy damage\n      if (enemy health &lt; 1) {\n        enemy dead\n      }\n    } else (player does not have weapon equipped) {\n      can't attack\n    }\n    if (enemy health &gt; 1) {\n      attack player\n      if (player has shield equipped) {\n        if (player blocked) {\n          no damage taken\n        } else (player did not block) {\n          give player damage\n        }\n      } else (player does not have shield) {\n        give player damage\n      }\n    }\n  }\n}\n[/code:22u5l5ja]\n\nCan you guys spot any obvious problems with that order of checking conditions? I have not yet been able to find an error when testing it out, but I might be overlooking something obvious <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Also obvious, I have not implemented stuff like crits, dodge, enemy block and so on.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, no apologies needed! <!-- s;) --><img src=\"{SMILIES_PATH}/icon_wink.gif\" alt=\";)\" title=\"Wink\" /><!-- s;) --><br/><br/>Those are some helpful code snippets! Yesterday I was thinking about whether my condition-checking for my combat were good, so I was wondering if this is a good order in which to check conditions, before entering combat:<br/><br/><blockquote><cite>HegemonKhan wrote:</cite><br/><pre><code>if (DoesInherit (orc, &quot;non_playable_character_object_type&quot;) { // checking if this is a &quot;character&quot; that you can get in a fight with, as we don't want to let you get in a fight with a mountain&#46;&#46;&#46; or the air&#46;&#46;&#46; or a table&#46;&#46;&#46; a house&#46;&#46;&#46; a room&#46;&#46;&#46; etc&#46;&#46;&#46; lol<br/>  if (check_reachable_function (orc) = true) { // checking if you can &quot;reach&quot; the orc (for examples&#58; if the orc is across a river and you can't yet swim nor can you use projectile weapons, then you can't fight the orc, as you're not &quot;next&quot; to it&#46; Or, if the orc is still inside of a locked chest, just pretend with me on this lol, then you can't fight the orc either)<br/>    if (HasAttribute (orc, &quot;hit_points&quot;) { // checking if the orc has &quot;life&quot; that we can damage and kill, hehe, as we can't fight something that can't be killed&#46;&#46;&#46; that wouldn't be fair, lol<br/>      if (HasBoolean (orc, &quot;dead&quot;) = false) { // checking if the orc is dead, we don't want to be fighting something that is already dead, lol<br/>        if (GetBoolean (orc, &quot;hostile&quot;) { // checking if the orc wants to fight or not, sorry, but if you want to kill any~all npcs, you got to at least make them very mad~angry (low &quot;relationship&quot; integer attribute) at you&#46; We don't want to let you kill something that you have a very cordial~friendly (high) &quot;relationship&quot; integer attribute with the thing~npc, hehe&#46;<br/>          // fight scripting<br/>        }<br/>      }<br/>    }<br/>  }<br/>}</code></pre><br/></blockquote><br/><br/>My current condition checking is as follows:<br/><br/><pre><code><br/>if (player is in combat) {<br/>  if (enemyObject has flag enemy) {<br/>    if (player has weapon equipped) {<br/>      attack enemy<br/>      give enemy damage<br/>      if (enemy health &lt; 1) {<br/>        enemy dead<br/>      }<br/>    } else (player does not have weapon equipped) {<br/>      can't attack<br/>    }<br/>    if (enemy health &gt; 1) {<br/>      attack player<br/>      if (player has shield equipped) {<br/>        if (player blocked) {<br/>          no damage taken<br/>        } else (player did not block) {<br/>          give player damage<br/>        }<br/>      } else (player does not have shield) {<br/>        give player damage<br/>      }<br/>    }<br/>  }<br/>}<br/></code></pre><br/><br/>Can you guys spot any obvious problems with that order of checking conditions? I have not yet been able to find an error when testing it out, but I might be overlooking something obvious <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> Also obvious, I have not implemented stuff like crits, dodge, enemy block and so on.",
      "PostDate": "2013-09-18T09:08:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26301",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here are some thoughts based on a combat system I implemented once. I'm not sure if you've actually coded the pseudo-code you posted, so I don't know if you've already worked through some of these issues. Take them as just my reaction. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n1) It's clearly a design decision, but not allowing a player to fight who has no weapon is not typical, at least not in games I have seen. Most games I've seen, if you have no weapon, you fight with your bare hands. In a sense, you do have a weapon - your hands. (In fact, that's how I did it - if you had no equipped weapon, internally you had a &quot;bare hands&quot; weapon assigned.)\n\n2) Breaking the damage phase out from the attack feels wrong to me, unless you just always get the same amount of damage for an attack. It seems the damage would have to be tied to the attack, in terms of how the attack is done (e.g. melee weapon, spell, etc), whether it was successful (attack could be blocked, enemy could dodge, inept attacker could miss, attack or spell could be diffused somehow), etc. So, to me, assigning damage is really rolled up into the attack itself, as it's a direct consequence of the attack and can only be determined at the time the attack is done.\n\n3) Your use of &quot;1&quot; for a health limit is a bit odd to me, and might even be a bug in your pseudo-code, unless it has a special meaning. You have enemy health being &lt; 1 as dead and &gt;1 as being able to fight. Do you really mean that if the enemy has health of exactly 1, they are not dead but also cannot fight? (Perhaps they're too injured or...) I think it would be clearer to use 0 as your basis. If the health is &lt;= 0 (if hits can drive it negative), then it's dead. If health &gt;0 then they're alive and kicking.\n\n4) In some combat systems, combat order is not fixed. Combatants have a &quot;speed&quot; attribute which determines which one goes first. If that is the case, then a hard-coded order won't work.\n\n5) The way Quest is designed, you can't block. Since I wanted player input for an attack (e.g. attack, cast spell, use item, flee), that meant it could not be all lumped together like that. It had to be driven from one event to the next, in a taking turns sort of fashion. For example,\n- Pick an initial combatant based on speed.\n- Have that combatant perform some sort of an attack. If the combatant is an NPC, have it decided how to attack. If it's the player, have the player choose from a menu.\n- Once the attack mode is decided, execute the attack. The attack may or may not cause damage, depending on what happens, but damage is assigned during the actual attack. \n- Move to the next combatant.\n\nThe break in the action for the player comes in where the player is deciding how to attack. So there must be allowance for that to happen, allowing for functions to return so Quest can continue (that is - no blocking for input).\n\nI don't know if that helps, and maybe you already have code working that you like. I just think that you're going to need a different code structure, especially as you start to implement some of those things you haven't put in yet. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Here are some thoughts based on a combat system I implemented once. I'm not sure if you've actually coded the pseudo-code you posted, so I don't know if you've already worked through some of these issues. Take them as just my reaction. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>1) It's clearly a design decision, but not allowing a player to fight who has no weapon is not typical, at least not in games I have seen. Most games I've seen, if you have no weapon, you fight with your bare hands. In a sense, you do have a weapon - your hands. (In fact, that's how I did it - if you had no equipped weapon, internally you had a &quot;bare hands&quot; weapon assigned.)<br/><br/>2) Breaking the damage phase out from the attack feels wrong to me, unless you just always get the same amount of damage for an attack. It seems the damage would have to be tied to the attack, in terms of how the attack is done (e.g. melee weapon, spell, etc), whether it was successful (attack could be blocked, enemy could dodge, inept attacker could miss, attack or spell could be diffused somehow), etc. So, to me, assigning damage is really rolled up into the attack itself, as it's a direct consequence of the attack and can only be determined at the time the attack is done.<br/><br/>3) Your use of &quot;1&quot; for a health limit is a bit odd to me, and might even be a bug in your pseudo-code, unless it has a special meaning. You have enemy health being &lt; 1 as dead and &gt;1 as being able to fight. Do you really mean that if the enemy has health of exactly 1, they are not dead but also cannot fight? (Perhaps they're too injured or...) I think it would be clearer to use 0 as your basis. If the health is &lt;= 0 (if hits can drive it negative), then it's dead. If health &gt;0 then they're alive and kicking.<br/><br/>4) In some combat systems, combat order is not fixed. Combatants have a &quot;speed&quot; attribute which determines which one goes first. If that is the case, then a hard-coded order won't work.<br/><br/>5) The way Quest is designed, you can't block. Since I wanted player input for an attack (e.g. attack, cast spell, use item, flee), that meant it could not be all lumped together like that. It had to be driven from one event to the next, in a taking turns sort of fashion. For example,<br/>- Pick an initial combatant based on speed.<br/>- Have that combatant perform some sort of an attack. If the combatant is an NPC, have it decided how to attack. If it's the player, have the player choose from a menu.<br/>- Once the attack mode is decided, execute the attack. The attack may or may not cause damage, depending on what happens, but damage is assigned during the actual attack. <br/>- Move to the next combatant.<br/><br/>The break in the action for the player comes in where the player is deciding how to attack. So there must be allowance for that to happen, allowing for functions to return so Quest can continue (that is - no blocking for input).<br/><br/>I don't know if that helps, and maybe you already have code working that you like. I just think that you're going to need a different code structure, especially as you start to implement some of those things you haven't put in yet. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-18T14:02:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26302",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Thank you for your reactions <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I appreciate it\n\n1) It is a design decision to not being able to attack without a weapon equipped. Whether it is a good decision I'm not yet sure of though. You might be right that it is better to be able to fight with just your bare hands so I'll give this some thought\n\n2) When you say breaking up my damage and attack phase, is that based on the two lines &quot;attack enemy&quot; and &quot;give enemy damage&quot;? If so, they are not meant as two actual events like attacking and dealing damage. That is an error from my side in writing it as such in the above example. I simply meant that I print out the damage I give (because it is a constant number) and then I'm subtracting that number from the enemies health. But the damage and attack doesn't actually happen at different times. If I change the damage to be a random number, I would have to change this though, which I am aware of <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\n3) The &lt; 1 and &gt; 1 was because of me not wanting an enemy with 0 life that can fight. As the way I see it, if you hit 0 (or less life) you are dead. Is &lt; 1 not the same, but not as explicit, as 0, -1, -2 etc? The reason I'm not using 0 is because that would mean the enemy could be at 0 as &lt; 0 is -1 and below. Then I would end up with two limits, a &lt; 1 for dead but a &gt; 0 for alive? <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\n4) I have indeed thought about an attack speed as that really is a very nice way of making a turn based game less turn based <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> But I believe that such a system is a bit too advaced for me right now, but I certainly am interested in implementing such a system at some point! It might not be as advanced as I think, but I'll wait a bit with implementing this.\n\n5) I am not entirely sure what you mean about this. The player can not write &quot;block&quot; in the command and use a turn on that, instead it is a random chance based on the block value the player has. When the enemy attacks after the player has attacked (as the player always starts first in my system, for now <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->), it first checks whether the player has a shield equipped. If so, it takes the players block chance and sets that as a random chance. If that random chance is &quot;met&quot;, it merely prints out that the player blocked, and the enemy turn is over. If, however, the random chance was not met, the enemy attacks.\n\nI am aware that this system is a bit &quot;square&quot;. The player always attacks first, the enemy only attacks if the player attacks, the damage is a constant number etc. I am however working on a turn script in which the enemy will attack even if the player does not attack. But I'm having a small error with that, something I might ask for help with later tonight <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> I'm also heavily considering making the damage a damage range, but that is not yet done.\n\nIf I may be so bold, what kind of structure would you then recommend? Right now I'm not yet set on which attributes should play a factor in combat (crit, dodge, speed etc.) which is also why I'm not sure what kind of problems I might run into further down the road <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "Thank you for your reactions <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I appreciate it<br/><br/>1) It is a design decision to not being able to attack without a weapon equipped. Whether it is a good decision I'm not yet sure of though. You might be right that it is better to be able to fight with just your bare hands so I'll give this some thought<br/><br/>2) When you say breaking up my damage and attack phase, is that based on the two lines &quot;attack enemy&quot; and &quot;give enemy damage&quot;? If so, they are not meant as two actual events like attacking and dealing damage. That is an error from my side in writing it as such in the above example. I simply meant that I print out the damage I give (because it is a constant number) and then I'm subtracting that number from the enemies health. But the damage and attack doesn't actually happen at different times. If I change the damage to be a random number, I would have to change this though, which I am aware of <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>3) The &lt; 1 and &gt; 1 was because of me not wanting an enemy with 0 life that can fight. As the way I see it, if you hit 0 (or less life) you are dead. Is &lt; 1 not the same, but not as explicit, as 0, -1, -2 etc? The reason I'm not using 0 is because that would mean the enemy could be at 0 as &lt; 0 is -1 and below. Then I would end up with two limits, a &lt; 1 for dead but a &gt; 0 for alive? <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>4) I have indeed thought about an attack speed as that really is a very nice way of making a turn based game less turn based <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> But I believe that such a system is a bit too advaced for me right now, but I certainly am interested in implementing such a system at some point! It might not be as advanced as I think, but I'll wait a bit with implementing this.<br/><br/>5) I am not entirely sure what you mean about this. The player can not write &quot;block&quot; in the command and use a turn on that, instead it is a random chance based on the block value the player has. When the enemy attacks after the player has attacked (as the player always starts first in my system, for now <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->), it first checks whether the player has a shield equipped. If so, it takes the players block chance and sets that as a random chance. If that random chance is &quot;met&quot;, it merely prints out that the player blocked, and the enemy turn is over. If, however, the random chance was not met, the enemy attacks.<br/><br/>I am aware that this system is a bit &quot;square&quot;. The player always attacks first, the enemy only attacks if the player attacks, the damage is a constant number etc. I am however working on a turn script in which the enemy will attack even if the player does not attack. But I'm having a small error with that, something I might ask for help with later tonight <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> I'm also heavily considering making the damage a damage range, but that is not yet done.<br/><br/>If I may be so bold, what kind of structure would you then recommend? Right now I'm not yet set on which attributes should play a factor in combat (crit, dodge, speed etc.) which is also why I'm not sure what kind of problems I might run into further down the road <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2013-09-18T14:33:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26303",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, so it sounds like you do actually have code working for this. As long as it's doing what you want, then I have no objection. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was judging just based on the pseudo-code, and I was anticipating problems that don't seem to be an issue. So... good! lol\n\nAs far as the &quot;&lt; 1&quot; - &quot;&gt; 1&quot; thing, you still have it where if the enemy is alive but with health of 1, then it will be alive but no longer fight. If you want it that way, cool. It just looked like an error to me. If you don't mean it that way, you can just make it &quot;&gt;= 1&quot; for the fight condition. (Note that in my example, I didn't have &quot;&lt; 0&quot; for dead - I had &quot;&lt;= 0&quot; which includes 0. Normally, something would be dead when its health = 0. Since you had &lt; 1 to begin with, I thought you might have been including negative health as well, so I included that in mine.)\n\nI don't really have a structure to suggest, as it would be more complex. We could discuss that further if you think you might need to expand your code. I'd have to figure out how to explain it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I sort of did already, but not with much code or pseudo-code.",
      "EditableFormat": "bbcode",
      "HTML": "Ok, so it sounds like you do actually have code working for this. As long as it's doing what you want, then I have no objection. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I was judging just based on the pseudo-code, and I was anticipating problems that don't seem to be an issue. So... good! lol<br/><br/>As far as the &quot;&lt; 1&quot; - &quot;&gt; 1&quot; thing, you still have it where if the enemy is alive but with health of 1, then it will be alive but no longer fight. If you want it that way, cool. It just looked like an error to me. If you don't mean it that way, you can just make it &quot;&gt;= 1&quot; for the fight condition. (Note that in my example, I didn't have &quot;&lt; 0&quot; for dead - I had &quot;&lt;= 0&quot; which includes 0. Normally, something would be dead when its health = 0. Since you had &lt; 1 to begin with, I thought you might have been including negative health as well, so I included that in mine.)<br/><br/>I don't really have a structure to suggest, as it would be more complex. We could discuss that further if you think you might need to expand your code. I'd have to figure out how to explain it. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I sort of did already, but not with much code or pseudo-code.",
      "PostDate": "2013-09-18T15:00:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26304",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Also, I forgot about the &quot;block&quot; thing. I'm afraid I used a word that had (at least) two meanings. I wasn't referring to blocking in combat; I was referring to code being able to block while it waits for input. If, for example, you wanted the player to be able to choose a type of attack in your pseudo-code where &quot;attack&quot; takes place, you would have to rewrite all the code, as you can't sit and wait (block) for the input to complete. You'd have to exit the function and then have a script kick in when the input happens. That doesn't sound like an issue now, but just keep it in mind.",
      "EditableFormat": "bbcode",
      "HTML": "Also, I forgot about the &quot;block&quot; thing. I'm afraid I used a word that had (at least) two meanings. I wasn't referring to blocking in combat; I was referring to code being able to block while it waits for input. If, for example, you wanted the player to be able to choose a type of attack in your pseudo-code where &quot;attack&quot; takes place, you would have to rewrite all the code, as you can't sit and wait (block) for the input to complete. You'd have to exit the function and then have a script kick in when the input happens. That doesn't sound like an issue now, but just keep it in mind.",
      "PostDate": "2013-09-18T15:06:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26305",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Yes I have this code actually working. I just wrote it in pseudo form to shorten it, hopefully making it more reader-friendly - although I'm not sure that it did <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> As I wrote before I have not yet been able to provoke errors where my current script does not work. As far as I can tell, it is bahaving as it is supposed to, although with the flaws as mentioned above with no crit, no speed etc. My concern is whether this specific order of checking conditions might cause some problems later. But I guess I'll find out if/when that happens <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\nNow I can see what you're saying about the &gt; 1 statement. I thought you meant &gt; 0 which would be 1, but you are totally right that my code is bugged if the enemy lands at 1 hp. I have to fix that, thank you! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI can see what you mean by not being able to block/halt the code, waiting for player input. I'm not sure how you would build up a system that could do that, except putting it all in either a switch or lots of if, if else statements? Is there another way to do that? It would be nice to, in the future, be able to differentiate between, let's say &quot;stab&quot; and &quot;swing&quot;, where each type of attack had a different purpose. Is that what you mean? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nI certainly would be interested in discussing it further as I'm not sure whether I'm doing it correct or if there is an easier and more robust way of doing things. You easily get caught in a specific way of doing things when coding but it might not be very suited for this kind of development. Not just with this combat script but with everything.\n\nOnce again, I really appreciate the time you guys put into helping a new Quester out <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Yes I have this code actually working. I just wrote it in pseudo form to shorten it, hopefully making it more reader-friendly - although I'm not sure that it did <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> As I wrote before I have not yet been able to provoke errors where my current script does not work. As far as I can tell, it is bahaving as it is supposed to, although with the flaws as mentioned above with no crit, no speed etc. My concern is whether this specific order of checking conditions might cause some problems later. But I guess I'll find out if/when that happens <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>Now I can see what you're saying about the &gt; 1 statement. I thought you meant &gt; 0 which would be 1, but you are totally right that my code is bugged if the enemy lands at 1 hp. I have to fix that, thank you! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I can see what you mean by not being able to block/halt the code, waiting for player input. I'm not sure how you would build up a system that could do that, except putting it all in either a switch or lots of if, if else statements? Is there another way to do that? It would be nice to, in the future, be able to differentiate between, let's say &quot;stab&quot; and &quot;swing&quot;, where each type of attack had a different purpose. Is that what you mean? <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>I certainly would be interested in discussing it further as I'm not sure whether I'm doing it correct or if there is an easier and more robust way of doing things. You easily get caught in a specific way of doing things when coding but it might not be very suited for this kind of development. Not just with this combat script but with everything.<br/><br/>Once again, I really appreciate the time you guys put into helping a new Quester out <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-18T16:50:02+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26306",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ooo goodie good, hehe! You're getting into combat coding! I left out big chunks of my own combat coding as I thought you just wanted the &quot;checking&quot; stuff for whether to fight or not.\n\na quick note: a major choice to make about combat, is whether you want it &quot;(script block) controlled&quot; (turn based), or more of a &quot;real time&quot; combat feel, where you don't get locked into a script block until combat ends. Pixie's Combat Library is an example of a real time combat feel, whereas, Pertex or mine+Pertex, is a turn based combat design.\n\n(do note, I'm still quite an amature~noob with coding, but I've come far enough to do this, at least)\n\n(Full credit goes to Pertex and his Combat Library as I used its structure as my guide for my combat code)\n\ntake a look at what I've done, for hopefully some helpful ideas\n\nand feel free to download or copy-n-paste it, and test~play it out, hehe\n\nhere's my combat code:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+thread&amp;start=120\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+thread&amp;start=120</a><!-- l -->\n(if it doesn't go to the last pages, go to the last pages for my working combat coding, my &quot;veni vidi vici&quot; post, lol)\n\nAlso, the code below, is cleaned up, by and thanks to, Pertex, whereas my code in the link to the post~thread above isn't.\n\n(sorry about all the abrevs... I haven't got around to writing them out... yet, so forgive me for the inconvenience of having to use the key~legend I'll provide below for it. I made this code a good while ago, before I realized that it's good to write things out, so not only can others know what is going on or what is what, but also so that I myself know as well, as I found~realize that it is easy to forget what you yourself were doing after not that much length of time, even if you think you'd never forget, lol)\n\n[code:3opwbo9c]&lt;asl version=&quot;540&quot;&gt;\n      &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n      &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n      &lt;game name=&quot;Test&quot;&gt;\n        &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;\n        &lt;version&gt;1&#46;0&lt;/version&gt;\n        &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;\n        &lt;start type=&quot;script&quot;&gt;\n          cc\n        &lt;/start&gt;\n        &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n        &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;\n      &lt;/game&gt;\n      &lt;object name=&quot;room&quot;&gt;\n        &lt;inherit name=&quot;editor_room&quot; /&gt;\n        &lt;object name=&quot;player&quot;&gt;\n          &lt;inherit name=&quot;defaultplayer&quot; /&gt;\n          &lt;inherit name=&quot;pc&quot; /&gt;\n          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;\n          &lt;str type=&quot;int&quot;&gt;100&lt;/str&gt;\n          &lt;end type=&quot;int&quot;&gt;100&lt;/end&gt;\n          &lt;dex type=&quot;int&quot;&gt;100&lt;/dex&gt;\n          &lt;agi type=&quot;int&quot;&gt;100&lt;/agi&gt;\n          &lt;spd type=&quot;int&quot;&gt;100&lt;/spd&gt;\n          &lt;hc type=&quot;int&quot;&gt;100&lt;/hc&gt;\n          &lt;pd type=&quot;int&quot;&gt;100&lt;/pd&gt;\n          &lt;pr type=&quot;int&quot;&gt;100&lt;/pr&gt;\n        &lt;/object&gt;\n        &lt;object name=&quot;orc1&quot;&gt;\n          &lt;inherit name=&quot;editor_object&quot; /&gt;\n          &lt;inherit name=&quot;npc&quot; /&gt;\n          &lt;hostile type=&quot;boolean&quot;&gt;true&lt;/hostile&gt;\n          &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n          &lt;alias&gt;orc&lt;/alias&gt;\n          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;\n          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;\n          &lt;str type=&quot;int&quot;&gt;25&lt;/str&gt;\n          &lt;end type=&quot;int&quot;&gt;25&lt;/end&gt;\n          &lt;dex type=&quot;int&quot;&gt;25&lt;/dex&gt;\n          &lt;agi type=&quot;int&quot;&gt;25&lt;/agi&gt;\n          &lt;spd type=&quot;int&quot;&gt;25&lt;/spd&gt;\n          &lt;hc type=&quot;int&quot;&gt;25&lt;/hc&gt;\n          &lt;pd type=&quot;int&quot;&gt;25&lt;/pd&gt;\n          &lt;pr type=&quot;int&quot;&gt;25&lt;/pr&gt;\n        &lt;/object&gt;\n      &lt;/object&gt;\n      &lt;turnscript name=&quot;game_turns&quot;&gt;\n        &lt;enabled /&gt;\n        &lt;script&gt;\n          sa\n          game&#46;turns = game&#46;turns + 1\n        &lt;/script&gt;\n      &lt;/turnscript&gt;\n      &lt;command name=&quot;fight&quot;&gt;\n        &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n        &lt;script&gt;\n          battle_system (game&#46;pov,text)\n        &lt;/script&gt;\n      &lt;/command&gt;\n      &lt;type name=&quot;char&quot;&gt;\n        &lt;cur_hp type=&quot;int&quot;&gt;0&lt;/cur_hp&gt;\n        &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;\n        &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n        &lt;max_hp type=&quot;int&quot;&gt;0&lt;/max_hp&gt;\n        &lt;str type=&quot;int&quot;&gt;0&lt;/str&gt;\n        &lt;end type=&quot;int&quot;&gt;0&lt;/end&gt;\n        &lt;dex type=&quot;int&quot;&gt;0&lt;/dex&gt;\n        &lt;agi type=&quot;int&quot;&gt;0&lt;/agi&gt;\n        &lt;spd type=&quot;int&quot;&gt;0&lt;/spd&gt;\n        &lt;hp type=&quot;int&quot;&gt;0&lt;/hp&gt;\n        &lt;hc type=&quot;int&quot;&gt;0&lt;/hc&gt;\n        &lt;pd type=&quot;int&quot;&gt;0&lt;/pd&gt;\n        &lt;pr type=&quot;int&quot;&gt;0&lt;/pr&gt;\n      &lt;/type&gt;\n      &lt;type name=&quot;pc&quot;&gt;\n        &lt;inherit name=&quot;char&quot; /&gt;\n        &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = &lt;/statusattributes&gt;\n      &lt;/type&gt;\n      &lt;type name=&quot;npc&quot;&gt;\n        &lt;inherit name=&quot;char&quot; /&gt;\n        &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n        &lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;\n        &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Talk; Fight&lt;/displayverbs&gt;\n      &lt;/type&gt;\n      &lt;function name=&quot;cc&quot;&gt;\n        msg (&quot;What is your name?&quot;)\n        get input {\n          game&#46;pov&#46;alias = result\n          msg (&quot; - &quot; + game&#46;pov&#46;alias)\n          show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {\n            game&#46;pov&#46;gender = result\n            show menu (&quot;What is your race?&quot;, split (&quot;human;dwarf;elf&quot; , &quot;;&quot;), false) {\n              game&#46;pov&#46;race = result\n              show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {\n                game&#46;pov&#46;class = result\n                msg (game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class + &quot;&#46;&quot;)\n                wait {\n                  ClearScreen\n\t\t\t\t  \n                }\n              }\n            }\n          }\n        }\n      &lt;/function&gt;\n      &lt;function name=&quot;sa&quot;&gt;\n        game&#46;pov&#46;hp = game&#46;pov&#46;cur_hp + &quot; / &quot; + game&#46;pov&#46;max_hp\n      &lt;/function&gt;\n      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;\n        enemy = GetObject (text)\n        if (enemy = null) {\n          foreach (obj,AllObjects()) {\n            if (obj&#46;alias=text) {\n              enemy = obj\n            }\n          }\n        }\n        if (enemy = null) {\n          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)\n        }\n        else if (not Doesinherit (enemy,&quot;npc&quot;)) {\n          msg (&quot;You can not battle that!&quot;)\n        }\n        else if (not npc_reachable (enemy)) {\n          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n        }\n        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)\n        }\n        else {\n\t\t\tbattle_sequence (self,enemy)\n    \t} \n\n      &lt;/function&gt;\n      &lt;function name=&quot;battle_sequence&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tif (enemy&#46;dead = false) {\n\t\t\tplayerfirst=false\n\t\t\tif (GetInt (self,&quot;spd&quot;) &gt; GetInt (enemy,&quot;spd&quot;)) {\n\t\t\t\tplayerfirst=true\n\t\t\t} else if (GetInt (self,&quot;spd&quot;) = GetInt (enemy,&quot;spd&quot;) and RandomChance (50)) {\n\t\t\t\tplayerfirst=true\n\t\t\t}   \t\t  \n\t\t\t\n\t\t\tif (playerfirst) {\n\t\t\t   msg (&quot;You get to go first for this round&quot;)\n\t\t\t   self_battle_turn (self,enemy) \n\t\t\t   on ready {\n\t\t\t\t if (not enemy&#46;dead){\n\t\t\t\t   enemy_battle_turn (self,enemy) \n\t\t\t\t }\n\t\t\t   }\n\t\t\t} else {\n\t\t\t   msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)\n\t\t\t\tenemy_battle_turn (self,enemy) \n\t\t\t\tmsg (&quot;It is now your turn&#46;&quot;)\n\t\t\t\tself_battle_turn (self,enemy) \n\t\t\t}\n\t\t\ton ready {\n\t\t\t\tmsg (&quot;The round has ended&#46;&quot;)\n\t\t\t\tmsg(&quot;&quot;)  \n\t\t\t\tbattle_sequence (self,enemy)\t\n\t\t\t}\t\n        } \telse { \n\t\t\t\tmsg (&quot;The battle is over&#46;&quot;)\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;self_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n\t\tmsg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n        wait {\n          show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {\n            switch (result) {\n              case (&quot;Attack&quot;) {\n                fourth_value = false\n                if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;spd&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;evaded your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;Dex&quot;) - GetInt (self,&quot;agi&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;parried your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;dex&quot;)) = true) {\n                  msg (enemy&#46;alias + &quot;blocked your attack!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;spd&quot;)) = false) {\n                  msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)\n                  fourth_value = true\n                }\n                else if (RandomChance (GetInt (enemy,&quot;pr&quot;) - GetInt (self,&quot;hc&quot;)) = true) {\n                  msg (&quot;Your attack got resisted by &quot; + enemy&#46;alias +&quot;!&quot;)\n                  fourth_value = true\n                }\n                else if (fourth_value = false) {\n                  if (self&#46;defending = true and enemy&#46;defending = true) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                    self&#46;defending = false\n                  }\n                  else if (self&#46;defending = true and enemy&#46;defending = false) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                    self&#46;defending = false\n                  }\n                  else if (self&#46;defending = false and enemy&#46;defending = true) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                  }\n                  else if (self&#46;defending = false and enemy&#46;defending = false) {\n                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)\n                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n                  }\n                }\n              }\n              case (&quot;Defend&quot;) {\n                if (self&#46;defending = false) {\n                  self&#46;defending = true\n                }\n              }\n              case (&quot;Cast&quot;) {\n                self&#46;defending = false\n              }\n              case (&quot;Item&quot;) {\n                self&#46;defending = false\n              }\n              case (&quot;Run&quot;) {\n                self&#46;defending = false\n              }\n            }\n            if (GetInt (enemy,&quot;cur_hp&quot;) &gt; 0) {\n\t\t\t  if ( RandomChance (GetInt (self,&quot;spd&quot;) - GetInt (enemy,&quot;spd&quot;))= true) {\n                msg (&quot;You get an extra battle turn!&quot;)\n                self_battle_turn (self,enemy)\n              }\n              else {\n                msg (&quot;Your battle turn is over&#46;&quot;)\n              }\n            }\n            else if (GetInt (enemy,&quot;cur_hp&quot;) &lt;= 0) {\n              msg (enemy&#46;alias + &quot; is dead&#46;&quot;)\n              msg (&quot;You have won the battle!&quot;)\n              enemy&#46;defending = false\n              enemy&#46;dead = true\n            }\n          }\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;enemy_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n        msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)\n        result = GetRandomInt (1,3)\n        switch (result) {\n          case (1) {\n            sixth_value = false\n            if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;spd&quot;)) = true) {\n              msg (&quot;You have evaded the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;agi&quot;)) = true) {\n              msg (&quot;You have parried the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;dex&quot;)) = true) {\n              msg (&quot;You have blocked the attack!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (enemy,&quot;dex&quot;) - GetInt (self,&quot;spd&quot;)) = false) {\n              msg (enemy&#46;alias +&quot;'s attack missed!&quot;)\n              sixth_value = true\n            }\n            else if (RandomChance (GetInt (self,&quot;pr&quot;) - GetInt (enemy,&quot;hc&quot;)) = true) {\n              msg (&quot;You resisted the attack!&quot;)\n              sixth_value = true\n            }\n            else if (sixth_value = false) {\n              if (enemy&#46;defending = true and self&#46;defending = true) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n                enemy&#46;defending = false\n              }\n              else if (enemy&#46;defending = true and self&#46;defending = false) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n                enemy&#46;defending = false\n              }\n              else if (enemy&#46;defending = false and self&#46;defending = true) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n              }\n              else if (enemy&#46;defending = false and self&#46;defending = false) {\n                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)\n                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n              }\n            }\n          }\n          case (2) {\n            if (enemy&#46;defending = false) {\n              msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)\n              enemy&#46;defending = true\n            }\n          }\n          case (3) {\n            enemy&#46;defending = false\n            msg (&quot;Cast&quot;)\n          }\n        }\n        if (GetInt (self,&quot;cur_hp&quot;) &gt; 0) {\n          if (RandomChance (GetInt (enemy,&quot;spd&quot;) - GetInt (self,&quot;spd&quot;)) = true) {\n            msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)\n            wait {\n              enemy_battle_turn (self,enemy)\n            }\n          }\n          else {\n            msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)\n          }\n        }\n        else if (GetInt (self,&quot;cur_hp&quot;) &lt;= 0) {\n          msg (self&#46;alias + &quot; has died&#46;&quot;)\n          msg (&quot;GAME OVER&quot;)\n          finish\n        }\n      &#93;&#93;&gt;&lt;/function&gt;\n      &lt;function name=&quot;npc_reachable&quot; parameters=&quot;object&quot; type=&quot;boolean&quot;&gt;\n        value = false\n        foreach (x,ScopeReachableNotHeld ()) {\n          if (x=object) {\n            value = true\n          }\n        }\n        return (value)\n      &lt;/function&gt;\n      &lt;function name=&quot;crit_hit&quot; parameters=&quot;object&quot; type=&quot;int&quot;&gt;\n        if (RandomChance (GetInt (object,&quot;luck&quot;)) = true) {\n          value = 2\n        }\n        else {\n          value = 1\n        }\n        return (value)\n      &lt;/function&gt;\n    &lt;/asl&gt;[/code:3opwbo9c]\n\nand the legend~key for it:\n\n[code:3opwbo9c]01&#46; cc = character creation function\n02&#46; sa = status attributes (mainly for implementing/displaying of ' cur / max ' stats) function\n03&#46; char = character object type (&quot;pcs&quot;, &quot;npcs&quot;, &quot;monsters&quot;, etc&#46;, so, not a room, item, equipment, spell, etc)\n04&#46; pc = playable character object type (&quot;player&quot; characters / game&#46;povs)\n05&#46; npc = non-playable character (&quot;people&quot;, &quot;monsters&quot;, and etc, so not a &quot;player&quot; character / not a game&#46;pov, I'm going to have a hostility system, so any npc can be friendly or hostile, instead of having an actual &quot;monster/enemy&quot; type set aside)\n06&#46; hp = hit points (life) stat attribute\n07&#46; mp = mana points (magic) stat attribute\n08&#46; str = strength (physical damage, carry weight / equipment requirement, etc) stat attribute\n09&#46; end = endurance (physical defense, and etc) stat attribute\n10&#46; dex = dexterity (weapon~attack skill, think of this as &quot;if your attack connects or not, do you 'whiff' or not&quot;, so not to gete confused with hc, and etc) stat attribute\n11&#46; agi = agility (dodging/evading, and etc) stat attribute\n12&#46; spd = speed (who goes first in battle, extra battle turns, escaping from battle, and etc) stat attribute\n13&#46; hc = hit chance (think of this more as piercing their armor or not, so not to get confused with dex, and etc) stat attribute\n14&#46; pd = physical damage stat attribute\n15&#46; fp = fire damage stat attribute\n16&#46; wp = water damage stat attribute\n17&#46; ap = air damage stat attribute\n18&#46; ed = earth damage stat attribute\n19&#46; ld = light damage stat attribute\n20&#46; dd = dark damage stat attribute\n21&#46; pr = physical resistance stat attribute\n22&#46; fr = fire resistance stat attribute\n23&#46; wr = water resistance stat attribute\n24&#46; ar = air resistance stat attribute\n25&#46; er = earth resistance stat attribute\n26&#46; lr = light resistance stat attribute\n27&#46; dr = dark resistance stat attribute\n28&#46; defending = boolean (reduces damage done for that character and increases the damage done by that character, if they chosoe to attack on the next turn)\n29&#46; escaped = boolean, run from battle (not completed/implemented yet)\n30&#46; hostile = boolean, any npc can be friendly or a(n) &quot;monster/enemy&quot;, based upon a hostility scale (0-100), but not completed\n31&#46; dead = boolean\n32&#46; crit_hit = critical hit (bonus damage based upon luck)\n33&#46; luck = luck stat attribute\n34&#46; lvl = level stat attribute\n35&#46; exp = experience stat attribute\n36&#46; cash = cash stat attribute (currency)\n37&#46; lvlup = level up function[/code:3opwbo9c]",
      "EditableFormat": "bbcode",
      "HTML": "ooo goodie good, hehe! You're getting into combat coding! I left out big chunks of my own combat coding as I thought you just wanted the &quot;checking&quot; stuff for whether to fight or not.<br/><br/>a quick note: a major choice to make about combat, is whether you want it &quot;(script block) controlled&quot; (turn based), or more of a &quot;real time&quot; combat feel, where you don't get locked into a script block until combat ends. Pixie's Combat Library is an example of a real time combat feel, whereas, Pertex or mine+Pertex, is a turn based combat design.<br/><br/>(do note, I'm still quite an amature~noob with coding, but I've come far enough to do this, at least)<br/><br/>(Full credit goes to Pertex and his Combat Library as I used its structure as my guide for my combat code)<br/><br/>take a look at what I've done, for hopefully some helpful ideas<br/><br/>and feel free to download or copy-n-paste it, and test~play it out, hehe<br/><br/>here's my combat code:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+thread&amp;start=120\">viewtopic.php?f=10&amp;t=3348&amp;hilit=hk+noob+thread&amp;start=120</a><!-- l --><br/>(if it doesn't go to the last pages, go to the last pages for my working combat coding, my &quot;veni vidi vici&quot; post, lol)<br/><br/>Also, the code below, is cleaned up, by and thanks to, Pertex, whereas my code in the link to the post~thread above isn't.<br/><br/>(sorry about all the abrevs... I haven't got around to writing them out... yet, so forgive me for the inconvenience of having to use the key~legend I'll provide below for it. I made this code a good while ago, before I realized that it's good to write things out, so not only can others know what is going on or what is what, but also so that I myself know as well, as I found~realize that it is easy to forget what you yourself were doing after not that much length of time, even if you think you'd never forget, lol)<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>      &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>      &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>      &lt;game name=&quot;Test&quot;&gt;<br/>        &lt;gameid&gt;d83ba5bb-2e3c-4f31-80c9-3e88a2dc082c&lt;/gameid&gt;<br/>        &lt;version&gt;1&#46;0&lt;/version&gt;<br/>        &lt;pov type=&quot;object&quot;&gt;player&lt;/pov&gt;<br/>        &lt;start type=&quot;script&quot;&gt;<br/>          cc<br/>        &lt;/start&gt;<br/>        &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>        &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns = &lt;/statusattributes&gt;<br/>      &lt;/game&gt;<br/>      &lt;object name=&quot;room&quot;&gt;<br/>        &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>        &lt;object name=&quot;player&quot;&gt;<br/>          &lt;inherit name=&quot;defaultplayer&quot; /&gt;<br/>          &lt;inherit name=&quot;pc&quot; /&gt;<br/>          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;<br/>          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;<br/>          &lt;str type=&quot;int&quot;&gt;100&lt;/str&gt;<br/>          &lt;end type=&quot;int&quot;&gt;100&lt;/end&gt;<br/>          &lt;dex type=&quot;int&quot;&gt;100&lt;/dex&gt;<br/>          &lt;agi type=&quot;int&quot;&gt;100&lt;/agi&gt;<br/>          &lt;spd type=&quot;int&quot;&gt;100&lt;/spd&gt;<br/>          &lt;hc type=&quot;int&quot;&gt;100&lt;/hc&gt;<br/>          &lt;pd type=&quot;int&quot;&gt;100&lt;/pd&gt;<br/>          &lt;pr type=&quot;int&quot;&gt;100&lt;/pr&gt;<br/>        &lt;/object&gt;<br/>        &lt;object name=&quot;orc1&quot;&gt;<br/>          &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>          &lt;inherit name=&quot;npc&quot; /&gt;<br/>          &lt;hostile type=&quot;boolean&quot;&gt;true&lt;/hostile&gt;<br/>          &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>          &lt;alias&gt;orc&lt;/alias&gt;<br/>          &lt;cur_hp type=&quot;int&quot;&gt;999&lt;/cur_hp&gt;<br/>          &lt;max_hp type=&quot;int&quot;&gt;999&lt;/max_hp&gt;<br/>          &lt;str type=&quot;int&quot;&gt;25&lt;/str&gt;<br/>          &lt;end type=&quot;int&quot;&gt;25&lt;/end&gt;<br/>          &lt;dex type=&quot;int&quot;&gt;25&lt;/dex&gt;<br/>          &lt;agi type=&quot;int&quot;&gt;25&lt;/agi&gt;<br/>          &lt;spd type=&quot;int&quot;&gt;25&lt;/spd&gt;<br/>          &lt;hc type=&quot;int&quot;&gt;25&lt;/hc&gt;<br/>          &lt;pd type=&quot;int&quot;&gt;25&lt;/pd&gt;<br/>          &lt;pr type=&quot;int&quot;&gt;25&lt;/pr&gt;<br/>        &lt;/object&gt;<br/>      &lt;/object&gt;<br/>      &lt;turnscript name=&quot;game_turns&quot;&gt;<br/>        &lt;enabled /&gt;<br/>        &lt;script&gt;<br/>          sa<br/>          game&#46;turns = game&#46;turns + 1<br/>        &lt;/script&gt;<br/>      &lt;/turnscript&gt;<br/>      &lt;command name=&quot;fight&quot;&gt;<br/>        &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>        &lt;script&gt;<br/>          battle_system (game&#46;pov,text)<br/>        &lt;/script&gt;<br/>      &lt;/command&gt;<br/>      &lt;type name=&quot;char&quot;&gt;<br/>        &lt;cur_hp type=&quot;int&quot;&gt;0&lt;/cur_hp&gt;<br/>        &lt;drop type=&quot;boolean&quot;&gt;false&lt;/drop&gt;<br/>        &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>        &lt;max_hp type=&quot;int&quot;&gt;0&lt;/max_hp&gt;<br/>        &lt;str type=&quot;int&quot;&gt;0&lt;/str&gt;<br/>        &lt;end type=&quot;int&quot;&gt;0&lt;/end&gt;<br/>        &lt;dex type=&quot;int&quot;&gt;0&lt;/dex&gt;<br/>        &lt;agi type=&quot;int&quot;&gt;0&lt;/agi&gt;<br/>        &lt;spd type=&quot;int&quot;&gt;0&lt;/spd&gt;<br/>        &lt;hp type=&quot;int&quot;&gt;0&lt;/hp&gt;<br/>        &lt;hc type=&quot;int&quot;&gt;0&lt;/hc&gt;<br/>        &lt;pd type=&quot;int&quot;&gt;0&lt;/pd&gt;<br/>        &lt;pr type=&quot;int&quot;&gt;0&lt;/pr&gt;<br/>      &lt;/type&gt;<br/>      &lt;type name=&quot;pc&quot;&gt;<br/>        &lt;inherit name=&quot;char&quot; /&gt;<br/>        &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;hp = ;str = ;end = ;dex = ;agi = ;spd = ;hc = ;pd = ;pr = &lt;/statusattributes&gt;<br/>      &lt;/type&gt;<br/>      &lt;type name=&quot;npc&quot;&gt;<br/>        &lt;inherit name=&quot;char&quot; /&gt;<br/>        &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>        &lt;hostile type=&quot;boolean&quot;&gt;false&lt;/hostile&gt;<br/>        &lt;displayverbs type=&quot;simplestringlist&quot;&gt;Look at; Talk; Fight&lt;/displayverbs&gt;<br/>      &lt;/type&gt;<br/>      &lt;function name=&quot;cc&quot;&gt;<br/>        msg (&quot;What is your name?&quot;)<br/>        get input {<br/>          game&#46;pov&#46;alias = result<br/>          msg (&quot; - &quot; + game&#46;pov&#46;alias)<br/>          show menu (&quot;What is your gender?&quot;, split (&quot;male;female&quot; , &quot;;&quot;), false) {<br/>            game&#46;pov&#46;gender = result<br/>            show menu (&quot;What is your race?&quot;, split (&quot;human;dwarf;elf&quot; , &quot;;&quot;), false) {<br/>              game&#46;pov&#46;race = result<br/>              show menu (&quot;What is your class?&quot;, split (&quot;warrior;cleric;mage;thief&quot; , &quot;;&quot;), false) {<br/>                game&#46;pov&#46;class = result<br/>                msg (game&#46;pov&#46;alias + &quot; is a &quot; + game&#46;pov&#46;gender + &quot; &quot; + game&#46;pov&#46;race + &quot; &quot; + game&#46;pov&#46;class + &quot;&#46;&quot;)<br/>                wait {<br/>                  ClearScreen<br/>\t\t\t\t  <br/>                }<br/>              }<br/>            }<br/>          }<br/>        }<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;sa&quot;&gt;<br/>        game&#46;pov&#46;hp = game&#46;pov&#46;cur_hp + &quot; / &quot; + game&#46;pov&#46;max_hp<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;battle_system&quot; parameters=&quot;self,text&quot;&gt;<br/>        enemy = GetObject (text)<br/>        if (enemy = null) {<br/>          foreach (obj,AllObjects()) {<br/>            if (obj&#46;alias=text) {<br/>              enemy = obj<br/>            }<br/>          }<br/>        }<br/>        if (enemy = null) {<br/>          msg (&quot;There is no &quot; + text + &quot; here&#46;&quot;)<br/>        }<br/>        else if (not Doesinherit (enemy,&quot;npc&quot;)) {<br/>          msg (&quot;You can not battle that!&quot;)<br/>        }<br/>        else if (not npc_reachable (enemy)) {<br/>          msg (&quot;There is no &quot; + enemy&#46;alias + &quot; in your vicinity&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>          msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>        }<br/>        else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>          msg (enemy&#46;alias + &quot; is not hostile&#46;&quot;)<br/>        }<br/>        else {<br/>\t\t\tbattle_sequence (self,enemy)<br/>    \t} <br/><br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;battle_sequence&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tif (enemy&#46;dead = false) {<br/>\t\t\tplayerfirst=false<br/>\t\t\tif (GetInt (self,&quot;spd&quot;) &gt; GetInt (enemy,&quot;spd&quot;)) {<br/>\t\t\t\tplayerfirst=true<br/>\t\t\t} else if (GetInt (self,&quot;spd&quot;) = GetInt (enemy,&quot;spd&quot;) and RandomChance (50)) {<br/>\t\t\t\tplayerfirst=true<br/>\t\t\t}   \t\t  <br/>\t\t\t<br/>\t\t\tif (playerfirst) {<br/>\t\t\t   msg (&quot;You get to go first for this round&quot;)<br/>\t\t\t   self_battle_turn (self,enemy) <br/>\t\t\t   on ready {<br/>\t\t\t\t if (not enemy&#46;dead){<br/>\t\t\t\t   enemy_battle_turn (self,enemy) <br/>\t\t\t\t }<br/>\t\t\t   }<br/>\t\t\t} else {<br/>\t\t\t   msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)<br/>\t\t\t\tenemy_battle_turn (self,enemy) <br/>\t\t\t\tmsg (&quot;It is now your turn&#46;&quot;)<br/>\t\t\t\tself_battle_turn (self,enemy) <br/>\t\t\t}<br/>\t\t\ton ready {<br/>\t\t\t\tmsg (&quot;The round has ended&#46;&quot;)<br/>\t\t\t\tmsg(&quot;&quot;)  <br/>\t\t\t\tbattle_sequence (self,enemy)\t<br/>\t\t\t}\t<br/>        } \telse { <br/>\t\t\t\tmsg (&quot;The battle is over&#46;&quot;)<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;self_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>\t\tmsg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        wait {<br/>          show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {<br/>            switch (result) {<br/>              case (&quot;Attack&quot;) {<br/>                fourth_value = false<br/>                if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;spd&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;evaded your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;Dex&quot;) - GetInt (self,&quot;agi&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;parried your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;agi&quot;) - GetInt (self,&quot;dex&quot;)) = true) {<br/>                  msg (enemy&#46;alias + &quot;blocked your attack!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;spd&quot;)) = false) {<br/>                  msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (RandomChance (GetInt (enemy,&quot;pr&quot;) - GetInt (self,&quot;hc&quot;)) = true) {<br/>                  msg (&quot;Your attack got resisted by &quot; + enemy&#46;alias +&quot;!&quot;)<br/>                  fourth_value = true<br/>                }<br/>                else if (fourth_value = false) {<br/>                  if (self&#46;defending = true and enemy&#46;defending = true) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                    self&#46;defending = false<br/>                  }<br/>                  else if (self&#46;defending = true and enemy&#46;defending = false) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * 2 * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                    self&#46;defending = false<br/>                  }<br/>                  else if (self&#46;defending = false and enemy&#46;defending = true) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) / 2 + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                  }<br/>                  else if (self&#46;defending = false and enemy&#46;defending = false) {<br/>                    enemy&#46;cur_hp = enemy&#46;cur_hp - (crit_hit (self) * GetInt (self,&quot;pd&quot;) + GetInt (self,&quot;pd&quot;) * (GetInt (self,&quot;str&quot;) - GetInt (enemy,&quot;end&quot;)) / 100)<br/>                    msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                  }<br/>                }<br/>              }<br/>              case (&quot;Defend&quot;) {<br/>                if (self&#46;defending = false) {<br/>                  self&#46;defending = true<br/>                }<br/>              }<br/>              case (&quot;Cast&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>              case (&quot;Item&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>              case (&quot;Run&quot;) {<br/>                self&#46;defending = false<br/>              }<br/>            }<br/>            if (GetInt (enemy,&quot;cur_hp&quot;) &gt; 0) {<br/>\t\t\t  if ( RandomChance (GetInt (self,&quot;spd&quot;) - GetInt (enemy,&quot;spd&quot;))= true) {<br/>                msg (&quot;You get an extra battle turn!&quot;)<br/>                self_battle_turn (self,enemy)<br/>              }<br/>              else {<br/>                msg (&quot;Your battle turn is over&#46;&quot;)<br/>              }<br/>            }<br/>            else if (GetInt (enemy,&quot;cur_hp&quot;) &lt;= 0) {<br/>              msg (enemy&#46;alias + &quot; is dead&#46;&quot;)<br/>              msg (&quot;You have won the battle!&quot;)<br/>              enemy&#46;defending = false<br/>              enemy&#46;dead = true<br/>            }<br/>          }<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;enemy_battle_turn&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>        msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>        result = GetRandomInt (1,3)<br/>        switch (result) {<br/>          case (1) {<br/>            sixth_value = false<br/>            if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;spd&quot;)) = true) {<br/>              msg (&quot;You have evaded the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;dex&quot;) - GetInt (enemy,&quot;agi&quot;)) = true) {<br/>              msg (&quot;You have parried the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;agi&quot;) - GetInt (enemy,&quot;dex&quot;)) = true) {<br/>              msg (&quot;You have blocked the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (enemy,&quot;dex&quot;) - GetInt (self,&quot;spd&quot;)) = false) {<br/>              msg (enemy&#46;alias +&quot;'s attack missed!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (RandomChance (GetInt (self,&quot;pr&quot;) - GetInt (enemy,&quot;hc&quot;)) = true) {<br/>              msg (&quot;You resisted the attack!&quot;)<br/>              sixth_value = true<br/>            }<br/>            else if (sixth_value = false) {<br/>              if (enemy&#46;defending = true and self&#46;defending = true) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                enemy&#46;defending = false<br/>              }<br/>              else if (enemy&#46;defending = true and self&#46;defending = false) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * 2 * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>                enemy&#46;defending = false<br/>              }<br/>              else if (enemy&#46;defending = false and self&#46;defending = true) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) / 2 + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>              }<br/>              else if (enemy&#46;defending = false and self&#46;defending = false) {<br/>                self&#46;cur_hp = self&#46;cur_hp - (crit_hit (enemy) * GetInt (enemy,&quot;pd&quot;) + GetInt (enemy,&quot;pd&quot;) * (GetInt (enemy,&quot;str&quot;) - GetInt (self,&quot;end&quot;)) / 100)<br/>                msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>              }<br/>            }<br/>          }<br/>          case (2) {<br/>            if (enemy&#46;defending = false) {<br/>              msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)<br/>              enemy&#46;defending = true<br/>            }<br/>          }<br/>          case (3) {<br/>            enemy&#46;defending = false<br/>            msg (&quot;Cast&quot;)<br/>          }<br/>        }<br/>        if (GetInt (self,&quot;cur_hp&quot;) &gt; 0) {<br/>          if (RandomChance (GetInt (enemy,&quot;spd&quot;) - GetInt (self,&quot;spd&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)<br/>            wait {<br/>              enemy_battle_turn (self,enemy)<br/>            }<br/>          }<br/>          else {<br/>            msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)<br/>          }<br/>        }<br/>        else if (GetInt (self,&quot;cur_hp&quot;) &lt;= 0) {<br/>          msg (self&#46;alias + &quot; has died&#46;&quot;)<br/>          msg (&quot;GAME OVER&quot;)<br/>          finish<br/>        }<br/>      &#93;&#93;&gt;&lt;/function&gt;<br/>      &lt;function name=&quot;npc_reachable&quot; parameters=&quot;object&quot; type=&quot;boolean&quot;&gt;<br/>        value = false<br/>        foreach (x,ScopeReachableNotHeld ()) {<br/>          if (x=object) {<br/>            value = true<br/>          }<br/>        }<br/>        return (value)<br/>      &lt;/function&gt;<br/>      &lt;function name=&quot;crit_hit&quot; parameters=&quot;object&quot; type=&quot;int&quot;&gt;<br/>        if (RandomChance (GetInt (object,&quot;luck&quot;)) = true) {<br/>          value = 2<br/>        }<br/>        else {<br/>          value = 1<br/>        }<br/>        return (value)<br/>      &lt;/function&gt;<br/>    &lt;/asl&gt;</code></pre><br/><br/>and the legend~key for it:<br/><br/><pre><code>01&#46; cc = character creation function<br/>02&#46; sa = status attributes (mainly for implementing/displaying of ' cur / max ' stats) function<br/>03&#46; char = character object type (&quot;pcs&quot;, &quot;npcs&quot;, &quot;monsters&quot;, etc&#46;, so, not a room, item, equipment, spell, etc)<br/>04&#46; pc = playable character object type (&quot;player&quot; characters / game&#46;povs)<br/>05&#46; npc = non-playable character (&quot;people&quot;, &quot;monsters&quot;, and etc, so not a &quot;player&quot; character / not a game&#46;pov, I'm going to have a hostility system, so any npc can be friendly or hostile, instead of having an actual &quot;monster/enemy&quot; type set aside)<br/>06&#46; hp = hit points (life) stat attribute<br/>07&#46; mp = mana points (magic) stat attribute<br/>08&#46; str = strength (physical damage, carry weight / equipment requirement, etc) stat attribute<br/>09&#46; end = endurance (physical defense, and etc) stat attribute<br/>10&#46; dex = dexterity (weapon~attack skill, think of this as &quot;if your attack connects or not, do you 'whiff' or not&quot;, so not to gete confused with hc, and etc) stat attribute<br/>11&#46; agi = agility (dodging/evading, and etc) stat attribute<br/>12&#46; spd = speed (who goes first in battle, extra battle turns, escaping from battle, and etc) stat attribute<br/>13&#46; hc = hit chance (think of this more as piercing their armor or not, so not to get confused with dex, and etc) stat attribute<br/>14&#46; pd = physical damage stat attribute<br/>15&#46; fp = fire damage stat attribute<br/>16&#46; wp = water damage stat attribute<br/>17&#46; ap = air damage stat attribute<br/>18&#46; ed = earth damage stat attribute<br/>19&#46; ld = light damage stat attribute<br/>20&#46; dd = dark damage stat attribute<br/>21&#46; pr = physical resistance stat attribute<br/>22&#46; fr = fire resistance stat attribute<br/>23&#46; wr = water resistance stat attribute<br/>24&#46; ar = air resistance stat attribute<br/>25&#46; er = earth resistance stat attribute<br/>26&#46; lr = light resistance stat attribute<br/>27&#46; dr = dark resistance stat attribute<br/>28&#46; defending = boolean (reduces damage done for that character and increases the damage done by that character, if they chosoe to attack on the next turn)<br/>29&#46; escaped = boolean, run from battle (not completed/implemented yet)<br/>30&#46; hostile = boolean, any npc can be friendly or a(n) &quot;monster/enemy&quot;, based upon a hostility scale (0-100), but not completed<br/>31&#46; dead = boolean<br/>32&#46; crit_hit = critical hit (bonus damage based upon luck)<br/>33&#46; luck = luck stat attribute<br/>34&#46; lvl = level stat attribute<br/>35&#46; exp = experience stat attribute<br/>36&#46; cash = cash stat attribute (currency)<br/>37&#46; lvlup = level up function</code></pre><div><a href=\"/attachment/721\">EDITED v5.4 Pertex testing combat cleanup.aslx</a></div>",
      "PostDate": "2013-09-19T01:16:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26307",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "and here's this too (I've written stuff out in this, so it's easier to follow), it's a more recent (hopefully better) work of mine:\n\n(this may not be functional though ~ it may not work ~ might have errors too, as I haven't got around to testing it out yet)\n\n(it was~is just a &quot;brainstorm coding&quot; work of mine, trying to figure out how to do a stat selection when you choose to do your level up menu~scripting thing, and maybe there might be some lines of trying to work on adding in equipment and~or magic too script stuff, I'm still working on learning how to do equipment+magic coding... laughs)\n\n[code:3gc2c8hs]&lt;library&gt;\n\n&lt;!-- New Game --&gt;\n\n&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Colloseum&quot;&gt;\n    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n&lt;/asl&gt;\n\n&lt;!-- Object Types --&gt;\n\n&lt;type name=&quot;character_object_type&quot;&gt;\n\n  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;\n  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;\n  &lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;\n  &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;\n  &lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;\n  &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;\n  &lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;\n  &lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;\n  &lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;\n  &lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;\n  \n  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;\n  \n  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;\n  \n  &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;\n  &lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;\n  \n  &lt;experience_points type=&quot;int&quot;&gt;0&lt;/experience_points&gt;\n  &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;\n  &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;\n  &lt;level_up_points type=&quot;int&quot;&gt;0&lt;/level_up_points&gt;\n  &lt;attribute_points type=&quot;int&quot;&gt;0&lt;/attribute_points&gt;\n  \n  &lt;health_points type=&quot;string&quot;&gt;0/0&lt;/health_points&gt;\n  &lt;mana_points type=&quot;string&quot;&gt;0/0&lt;/mana_points&gt;\n  \n  &lt;current_health_points type=&quot;int&quot;&gt;0&lt;/current_health_points&gt;\n  &lt;maximum_health_points type=&quot;int&quot;&gt;0&lt;/maximum_health_points&gt;\n  &lt;current_mana_points type=&quot;int&quot;&gt;0&lt;/current_mana_points&gt;\n  &lt;maximum_mana_points type=&quot;int&quot;&gt;0&lt;/maximum_mana_points&gt;\n  \n&lt;/type&gt;\n\n&lt;!-- Turnscripts --&gt;\n\n&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;\n  status_attributes_function\n  level_up_function\n  game&#46;turns = game&#46;turns + 1\n&lt;/turnscript&gt;\n\n&lt;!-- Commands --&gt;\n\n&lt;command name=&quot;fight_command&quot;&gt;\n  &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n  &lt;script&gt;\n    fight_function (game&#46;pov,text)\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;command name=&quot;level_up_system_command&quot;&gt;\n  &lt;pattern&gt;lvlup&lt;/pattern&gt;\n  &lt;script&gt;\n    level_up_system_function\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;!-- Functions --&gt;\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;\n  enemy=GetObject(text)\n  if (enemy=null) {\n    foreach (obj,AllObjects()) {\n\t  if (obj&#46;alias=text) {\n\t    enemy=obj\n\t  } else {\n\t    msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)\n\t  }\n\t}\n  } else if (not check_reachable_function (enemy) = true) {\n    msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)\n  } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {\n    msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)\n  } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {\n    msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)\n  } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {\n    msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)\n  } else {\n    battle_sequence_function (self,enemy)\n  }\n&lt;/function&gt;\n\n&lt;function name=&quot;battle_sequence_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (enemy&#46;dead=false or self&#46;escaped=false) {\n    you_go_first=false\n    if (GetInt (self,&quot;speed&quot;) &gt; GetInt (enemy,&quot;speed&quot;) {\n\t  you_go_first=true\n\t} else if (GetInt (self,&quot;speed&quot;) = GetInt (enemy,&quot;speed&quot;) and RandomChance (50)=true) {\n\t    you_go_first=true\n\t}\n    if (you_go_first=true) {\n\t  msg (&quot;You get to go first for this round&quot;)\n\t  self_battle_turn_function (self,enemy)\n\t  on ready {\n\t    if (not enemy&#46;dead=true or not self&#46;escaped=true){\n\t      enemy_battle_turn_function (self,enemy)\n\t\t}\n\t  }\n\t} else {\n\t  msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)\n\t  enemy_battle_turn_function (self,enemy)\n      on ready {\n        if (not enemy&#46;dead=true or not self&#46;escaped=true){\t  \n\t      msg (&quot;It is now your turn&#46;&quot;)\n\t      self_battle_turn_function (self,enemy)\n\t\t}\n\t  }\n\t}\n\ton ready {\n\t  msg (&quot;The round has ended&#46;&quot;) \n\t  battle_sequence_function (self,enemy)\n\t}\n  } else { \n    msg (&quot;The battle is over&#46;&quot;)\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;self_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)\n  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n  wait {\n    show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {\n      switch (result) {\n        case (&quot;Attack&quot;) {\n          self_attack_failed = false\n          if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;speed&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;evaded your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;agility&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;parried your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;dexterity&quot;)) = true) {\n            msg (enemy&#46;alias + &quot;blocked your attack!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;speed&quot;)) = false) {\n            msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (RandomChance (GetInt (enemy,&quot;armor_class&quot;) - GetInt (self,&quot;attack_rating&quot;)) = true) {\n            msg (&quot;Your attack failed to penetrate &quot; + enemy&#46;alias +&quot;!&quot;)\n            self_attack_failed = true\n\t\t\tself&#46;defending = false\n          } else if (self_attack_failed = false) {\n            if (self&#46;defending = true and enemy&#46;defending = true) {\n              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n              self&#46;defending = false\n            } else if (self&#46;defending = true and enemy&#46;defending = false) {\n              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n              self&#46;defending = false\n            } else if (self&#46;defending = false and enemy&#46;defending = true) {\n              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n            } else if (self&#46;defending = false and enemy&#46;defending = false) {\n              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)\n              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n            }\n          }\n        }\n        case (&quot;Defend&quot;) {\n\t\t  msg (&quot;You defend yourself against &quot; + enemy&#46;alias)\n          self&#46;defending = true\n        }\n        case (&quot;Cast&quot;) {\n          self&#46;defending = false\n        }\n        case (&quot;Item&quot;) {\n          self&#46;defending = false\n        }\n        case (&quot;Run&quot;) {\n          self&#46;defending = false\n\t\t  self&#46;escaping = true\n        }\n      }\n      if (GetInt (enemy,&quot;current_health_points&quot;) &gt; 0) {\n\t    if ( RandomChance (GetInt (self,&quot;speed&quot;) - GetInt (enemy,&quot;speed&quot;))= true) {\n          msg (&quot;You get an extra battle turn!&quot;)\n          self_battle_turn (self,enemy)\n        } else {\n          msg (&quot;Your battle turn is over&#46;&quot;)\n        }\n      } else if (GetInt (enemy,&quot;current_health_points&quot;) &lt;= 0) {\n        msg (enemy&#46;alias + &quot; is dead&#46;&quot;)\n        msg (&quot;You have won the battle!&quot;)\n\t\tself&#46;defending = false\n\t\tself&#46;escaping = false\n        enemy&#46;defending = false\n        enemy&#46;dead = true\n      }\n    }\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;enemy_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)\n  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)\n  result = GetRandomInt (1,3)\n  switch (result) {\n    case (1) {\n      enemy_attack_failed = false\n      if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;speed&quot;)) = true) {\n        msg (&quot;You have evaded the attack!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;agility&quot;)) = true) {\n        msg (&quot;You have parried the attack!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;dexterity&quot;)) = true) {\n        msg (&quot;You have blocked the attack!&quot;)\n        enemy_attack_failed = true\n\t    enemy&#46;defending = false\n      } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;speed&quot;)) = false) {\n        msg (enemy&#46;alias +&quot;'s attack missed!&quot;)\n        enemy_attack_failed = true\n\t\tenemy&#46;defending = false\n      } else if (RandomChance (GetInt (self,&quot;armor_class&quot;) - GetInt (enemy,&quot;attack_rating&quot;)) = true) {\n        msg (&quot;You weren't penetrated by the attack!&quot;)\n        enemy_attack_failed = true\n\t    enemy&#46;defending = false\n      } else if (enemy_attack_failed = false) {\n        if (enemy&#46;defending = true and self&#46;defending = true) {\n          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n          msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)\n          enemy&#46;defending = false\n        } else if (enemy&#46;defending = true and self&#46;defending = false) {\n          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)\n          enemy&#46;defending = false\n        } else if (enemy&#46;defending = false and self&#46;defending = true) {\n          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)\n        } else if (enemy&#46;defending = false and self&#46;defending = false) {\n          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)\n          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)\n        }\n      }\n    }\n    case (2) {\n      msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)\n      enemy&#46;defending = true\n    }\n    case (3) {\n      enemy&#46;defending = false\n      msg (&quot;Cast&quot;)\n    }\n  }\n  if (GetInt (self,&quot;current_health_points&quot;) &gt; 0) {\n    if (RandomChance (GetInt (enemy,&quot;speed&quot;) - GetInt (self,&quot;speed&quot;)) = true) {\n      msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)\n      wait {\n        enemy_battle_turn (self,enemy)\n      }\n    } else {\n      msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)\n    }\n  } else if (GetInt (self,&quot;current_health_points&quot;) &lt;= 0) {\n    msg (self&#46;alias + &quot; has died&#46;&quot;)\n    msg (&quot;GAME OVER&quot;)\n    finish\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;\n  foreach (obj,ScopeReachableNotHeld ()) {\n    if (obj=enemy) {\n      value = true\n\t} else {\n\t  value = false\n\t}\n  }\n  return (value)\n&lt;/function&gt;\n\n&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;target&quot; type=&quot;int&quot;&gt;\n  if (RandomChance (GetInt (target,&quot;luck&quot;)) = true) {\n    value = 2\n  } else {\n    value = 1\n  }\n  return (value)\n&lt;/function&gt;\n\n&lt;function name=&quot;level_up_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {\n    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)\n\tgame&#46;pov&#46;attribute_points = game&#46;pov&#46;attribute_points + 5\n\tgame&#46;pov&#46;level_up_points = game&#46;pov&#46;level_up_points + 1\n\tgame&#46;pov&#46;level = game&#46;pov&#46;level + 1\n\tlevel_up_function\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;level_up_system_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (game&#46;pov&#46;level_up_points &gt; 0) {\n    if (game&#46;pov&#46;attribute_points &gt; 0) {\n\t  show menu (&quot;What attribute would you like to raise?&quot;,split(&quot;strength;endurance;dexterity;agility;speed;intelligence;spirituality;mentality;piety;luck&quot;,&quot;;&quot;),false) {\n\t    switch (result) {\n\t\t  case (&quot;strength&quot;) {\n\t\t    msg (&quot;How many points?&quot;)\n\t\t\tget input {\n\t\t\t  game&#46;pov&#46;points=result\n\t\t  }\n\t  }\n    }\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\n&lt;function name=&quot;status_attributes_function&quot;&gt;\n  game&#46;pov&#46;health_points = game&#46;pov&#46;current_health_points + &quot;/&quot; + game&#46;pov&#46;maximum_health_points\n  game&#46;pov&#46;mana_points = game&#46;pov&#46;current_mana_points + &quot;/&quot; + game&#46;pov&#46;maximum_mana_points\n&lt;/function&gt;\n\n&lt;function name=&quot;shop_function&quot;&gt;\n&lt;/function&gt;\n\n&lt;/library&gt;[/code:3gc2c8hs]\n\n------------------------------\n\np.s.\n\n[HK Edit: ignore this part, as I wrote this post before reading the latter posts of yours, Jayna. I too thought you meant a &quot;combat block&quot; effect, so my apologies. Some day, I'll be thinking at your high level of coding, lol. HK still thinks at a low level of code, and so that was: block = &quot;combat blocking effect&quot;, lol]\n\nYou can quasi &quot;block&quot; (and parry, dodge~evade, and etc)... there's a few ways (simple to more complex) to code in this effect... <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\n-----------------------------\n\nP.S.S.\n\nin regards to #3, I think Jayna was talking about, what happens when~(if) the enemy has exactly 1 life, as you're using greater than and lesser than, you'll have a problem as the quest engine won't know what to do at 1 life, is the enemy dead or is it still alive? You simply need to change one of your operators to being: &quot;and equal to&quot;\n\n[code:3gc2c8hs]if (orc&#46;hit_points &lt; 1) {\n  orc&#46;dead=true\n  msg (&quot;the orc is now dead&quot;)\n} else if (orc&#46;hit_points &gt;= 1) {\n  msg (&quot;the orc is still alive&quot;)\n}\n\n~OR~\n\nif (orc&#46;hit_points &lt;= 0) {\n  orc&#46;dead=true\n  msg (&quot;the orc is now dead&quot;)\n} else if (orc&#46;hit_points &gt; 0) {\n  msg (&quot;the orc is still alive&quot;)\n}\n\nbut not what you have&#58;\n\nif (orc&#46;hit_points &lt; 1) {\n  orc&#46;dead=true\n  msg (&quot;the orc is now dead&quot;)\n} else if (orc&#46;hit_points &gt; 1) {\n  msg (&quot;the orc is still alive&quot;)\n} else if (orc&#46;hit_points = 1) {\n  // quest engine&#58; &#46;&#46;&#46;???&#46;&#46;&#46;???&#46;&#46;&#46;&#46;???&#46;&#46;&#46;&#46;\n  // quest engine&#58; ERROR!\n}[/code:3gc2c8hs]\n\n------------------------------\n\nQuest's Operators:\n\nname: format~syntax\n\n// sorry, I forgot the correct terminology... argh! Jayna can explain this easily though of what I'm trying to say, lol.\n1. equals a value (computational equals): =\n2. equals (&quot;the same as this&quot; ~ string comparison equals ~ algebraic substitution): =\n// quest internally knows when to do &quot;=&quot; vs &quot;==&quot;, Alex did this for noobs, who may not understand~realize the difference, and so, they can safely just type in &quot;=&quot;, and quest will figure out whether it's suppose to do the function for &quot;=&quot; or for &quot;==&quot;.\n\n3. greater than: &gt;\n4. lesser than: &lt; \n5. greater than and equal to: &gt;=\n6. lesser than and equal to: &lt;=\n\n~ I'm not sure if you can put the equals sign first too (I haven't tested~tried it), or if not:\n5. =&gt;\n6. =&lt;\n\nNOTE: since the &quot;tags&quot; (not sure if this is the correct terminology) are: [b:3gc2c8hs]&lt;[/b:3gc2c8hs] object name=&quot;blah&quot; [b:3gc2c8hs]&gt;[/b:3gc2c8hs], to tell quest that you want the &quot;&gt;&quot; and &quot;&lt;&quot; to be understood as the symbols for &quot;greater than&quot; and &quot;lesser than&quot;, then you got to add this in to your script&#058;\n\n[code:3gc2c8hs]&lt;fight name=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (orc&#46;hit_points &lt;= 0) {\n    // blah coding\n  }\n&#93;&#93;&gt;&lt;/fight&gt;\n\n&lt;function name&quot;blah&quot;&gt;&lt;!&#91;CDATA&#91;\n  if (orc&#46;hit_points &lt;= 0) {\n    // blah coding\n  }\n&#93;&#93;&gt;&lt;/function&gt;\n\netc&#46;&#46;&#46;\n\n&lt;!&#91;CDATA&#91; greater than and~or lesser than scripting &#93;&#93;&gt;[/code:3gc2c8hs]\n\nas otherwise you get an error, as it'll think the:\n\n&lt;= 0 ) {\n\nis a tag, and it's like: where's the ending tag? thus the ERROR.\n\nmissing: &gt;&lt;/blah&gt;\nand: incorrect ID &quot;tag&quot; format~syntax too\n\nas the correct syntax~format is (a single example only):\n\n&lt;object name=&quot;orc&quot;&gt;&lt;/object&gt;\n\nand not:\n\n&lt;= 0 ) {\n\nlol",
      "EditableFormat": "bbcode",
      "HTML": "and here's this too (I've written stuff out in this, so it's easier to follow), it's a more recent (hopefully better) work of mine:<br/><br/>(this may not be functional though ~ it may not work ~ might have errors too, as I haven't got around to testing it out yet)<br/><br/>(it was~is just a &quot;brainstorm coding&quot; work of mine, trying to figure out how to do a stat selection when you choose to do your level up menu~scripting thing, and maybe there might be some lines of trying to work on adding in equipment and~or magic too script stuff, I'm still working on learning how to do equipment+magic coding... laughs)<br/><br/><pre><code>&lt;library&gt;<br/><br/>&lt;!-- New Game --&gt;<br/><br/>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Colloseum&quot;&gt;<br/>    &lt;gameid&gt;bbc85c01-6e80-4a71-8abf-c1e870fb5b42&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>&lt;/asl&gt;<br/><br/>&lt;!-- Object Types --&gt;<br/><br/>&lt;type name=&quot;character_object_type&quot;&gt;<br/><br/>  &lt;strength type=&quot;int&quot;&gt;0&lt;/strength&gt;<br/>  &lt;endurance type=&quot;int&quot;&gt;0&lt;/endurance&gt;<br/>  &lt;dexterity type=&quot;int&quot;&gt;0&lt;/dexterity&gt;<br/>  &lt;agility type=&quot;int&quot;&gt;0&lt;/agility&gt;<br/>  &lt;speed type=&quot;int&quot;&gt;0&lt;/speed&gt;<br/>  &lt;intelligence type=&quot;int&quot;&gt;0&lt;/intelligence&gt;<br/>  &lt;spirituality type=&quot;int&quot;&gt;0&lt;/spirituality&gt;<br/>  &lt;mentality type=&quot;int&quot;&gt;0&lt;/mentality&gt;<br/>  &lt;piety type=&quot;int&quot;&gt;0&lt;/piety&gt;<br/>  &lt;luck type=&quot;int&quot;&gt;0&lt;/luck&gt;<br/>  <br/>  &lt;dead type=&quot;boolean&quot;&gt;false&lt;/dead&gt;<br/>  <br/>  &lt;undead type=&quot;boolean&quot;&gt;false&lt;/undead&gt;<br/>  <br/>  &lt;defending type=&quot;boolean&quot;&gt;false&lt;/defending&gt;<br/>  &lt;casting type=&quot;boolean&quot;&gt;false&lt;/casting&gt;<br/>  <br/>  &lt;experience_points type=&quot;int&quot;&gt;0&lt;/experience_points&gt;<br/>  &lt;cash type=&quot;int&quot;&gt;0&lt;/cash&gt;<br/>  &lt;level type=&quot;int&quot;&gt;0&lt;/level&gt;<br/>  &lt;level_up_points type=&quot;int&quot;&gt;0&lt;/level_up_points&gt;<br/>  &lt;attribute_points type=&quot;int&quot;&gt;0&lt;/attribute_points&gt;<br/>  <br/>  &lt;health_points type=&quot;string&quot;&gt;0/0&lt;/health_points&gt;<br/>  &lt;mana_points type=&quot;string&quot;&gt;0/0&lt;/mana_points&gt;<br/>  <br/>  &lt;current_health_points type=&quot;int&quot;&gt;0&lt;/current_health_points&gt;<br/>  &lt;maximum_health_points type=&quot;int&quot;&gt;0&lt;/maximum_health_points&gt;<br/>  &lt;current_mana_points type=&quot;int&quot;&gt;0&lt;/current_mana_points&gt;<br/>  &lt;maximum_mana_points type=&quot;int&quot;&gt;0&lt;/maximum_mana_points&gt;<br/>  <br/>&lt;/type&gt;<br/><br/>&lt;!-- Turnscripts --&gt;<br/><br/>&lt;turnscript name=&quot;global_events_turnscript&quot;&gt;<br/>  status_attributes_function<br/>  level_up_function<br/>  game&#46;turns = game&#46;turns + 1<br/>&lt;/turnscript&gt;<br/><br/>&lt;!-- Commands --&gt;<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>  &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    fight_function (game&#46;pov,text)<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;command name=&quot;level_up_system_command&quot;&gt;<br/>  &lt;pattern&gt;lvlup&lt;/pattern&gt;<br/>  &lt;script&gt;<br/>    level_up_system_function<br/>  &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;!-- Functions --&gt;<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text&quot;&gt;<br/>  enemy=GetObject(text)<br/>  if (enemy=null) {<br/>    foreach (obj,AllObjects()) {<br/>\t  if (obj&#46;alias=text) {<br/>\t    enemy=obj<br/>\t  } else {<br/>\t    msg (&quot;There seemingly is no &quot; + text + &quot; here&#46;&quot;)<br/>\t  }<br/>\t}<br/>  } else if (not check_reachable_function (enemy) = true) {<br/>    msg (&quot;There seemingly is no &quot; + enemy&#46;alias + &quot; here&#46;&quot;)<br/>  } else if (not DoesInherit (enemy,&quot;character_object_type&quot;)) {<br/>    msg (enemy&#46;alias + &quot;is seemingly not something that you can battle&#46;&quot;)<br/>  } else if (GetBoolean (enemy,&quot;hostile&quot;) = false) {<br/>    msg (enemy&#46;alias + &quot; is seemingly not something that you can battle&#46;&quot;)<br/>  } else if (GetBoolean (enemy,&quot;dead&quot;) = true) {<br/>    msg (enemy&#46;alias + &quot; is already dead&#46;&quot;)<br/>  } else {<br/>    battle_sequence_function (self,enemy)<br/>  }<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;battle_sequence_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (enemy&#46;dead=false or self&#46;escaped=false) {<br/>    you_go_first=false<br/>    if (GetInt (self,&quot;speed&quot;) &gt; GetInt (enemy,&quot;speed&quot;) {<br/>\t  you_go_first=true<br/>\t} else if (GetInt (self,&quot;speed&quot;) = GetInt (enemy,&quot;speed&quot;) and RandomChance (50)=true) {<br/>\t    you_go_first=true<br/>\t}<br/>    if (you_go_first=true) {<br/>\t  msg (&quot;You get to go first for this round&quot;)<br/>\t  self_battle_turn_function (self,enemy)<br/>\t  on ready {<br/>\t    if (not enemy&#46;dead=true or not self&#46;escaped=true){<br/>\t      enemy_battle_turn_function (self,enemy)<br/>\t\t}<br/>\t  }<br/>\t} else {<br/>\t  msg (enemy&#46;alias + &quot; gets to go first for this round&#46;&quot;)<br/>\t  enemy_battle_turn_function (self,enemy)<br/>      on ready {<br/>        if (not enemy&#46;dead=true or not self&#46;escaped=true){\t  <br/>\t      msg (&quot;It is now your turn&#46;&quot;)<br/>\t      self_battle_turn_function (self,enemy)<br/>\t\t}<br/>\t  }<br/>\t}<br/>\ton ready {<br/>\t  msg (&quot;The round has ended&#46;&quot;) <br/>\t  battle_sequence_function (self,enemy)<br/>\t}<br/>  } else { <br/>    msg (&quot;The battle is over&#46;&quot;)<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;self_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>  wait {<br/>    show menu (&quot;What is your battle choice?&quot;, split (&quot;Attack;Defend;Cast;Item;Run&quot;, &quot;;&quot;), false) {<br/>      switch (result) {<br/>        case (&quot;Attack&quot;) {<br/>          self_attack_failed = false<br/>          if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;speed&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;evaded your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;agility&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;parried your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;agility&quot;) - GetInt (self,&quot;dexterity&quot;)) = true) {<br/>            msg (enemy&#46;alias + &quot;blocked your attack!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;speed&quot;)) = false) {<br/>            msg (&quot;Your attack missed &quot; + enemy&#46;alias +&quot;!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (RandomChance (GetInt (enemy,&quot;armor_class&quot;) - GetInt (self,&quot;attack_rating&quot;)) = true) {<br/>            msg (&quot;Your attack failed to penetrate &quot; + enemy&#46;alias +&quot;!&quot;)<br/>            self_attack_failed = true<br/>\t\t\tself&#46;defending = false<br/>          } else if (self_attack_failed = false) {<br/>            if (self&#46;defending = true and enemy&#46;defending = true) {<br/>              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>              self&#46;defending = false<br/>            } else if (self&#46;defending = true and enemy&#46;defending = false) {<br/>              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * 2 * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>              self&#46;defending = false<br/>            } else if (self&#46;defending = false and enemy&#46;defending = true) {<br/>              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) / 2 + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>            } else if (self&#46;defending = false and enemy&#46;defending = false) {<br/>              enemy&#46;current_health_points = enemy&#46;current_health_points - (critical_hit_function (self) * GetInt (self,&quot;physical_damage&quot;) + GetInt (self,&quot;physical_damage&quot;) * (GetInt (self,&quot;strength&quot;) - GetInt (enemy,&quot;endurance&quot;)) / 100)<br/>              msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>            }<br/>          }<br/>        }<br/>        case (&quot;Defend&quot;) {<br/>\t\t  msg (&quot;You defend yourself against &quot; + enemy&#46;alias)<br/>          self&#46;defending = true<br/>        }<br/>        case (&quot;Cast&quot;) {<br/>          self&#46;defending = false<br/>        }<br/>        case (&quot;Item&quot;) {<br/>          self&#46;defending = false<br/>        }<br/>        case (&quot;Run&quot;) {<br/>          self&#46;defending = false<br/>\t\t  self&#46;escaping = true<br/>        }<br/>      }<br/>      if (GetInt (enemy,&quot;current_health_points&quot;) &gt; 0) {<br/>\t    if ( RandomChance (GetInt (self,&quot;speed&quot;) - GetInt (enemy,&quot;speed&quot;))= true) {<br/>          msg (&quot;You get an extra battle turn!&quot;)<br/>          self_battle_turn (self,enemy)<br/>        } else {<br/>          msg (&quot;Your battle turn is over&#46;&quot;)<br/>        }<br/>      } else if (GetInt (enemy,&quot;current_health_points&quot;) &lt;= 0) {<br/>        msg (enemy&#46;alias + &quot; is dead&#46;&quot;)<br/>        msg (&quot;You have won the battle!&quot;)<br/>\t\tself&#46;defending = false<br/>\t\tself&#46;escaping = false<br/>        enemy&#46;defending = false<br/>        enemy&#46;dead = true<br/>      }<br/>    }<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;enemy_battle_turn_function&quot; parameters=&quot;self,enemy&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>  msg (enemy&#46;alias + &quot; has &quot; + enemy&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>  result = GetRandomInt (1,3)<br/>  switch (result) {<br/>    case (1) {<br/>      enemy_attack_failed = false<br/>      if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;speed&quot;)) = true) {<br/>        msg (&quot;You have evaded the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;dexterity&quot;) - GetInt (enemy,&quot;agility&quot;)) = true) {<br/>        msg (&quot;You have parried the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;agility&quot;) - GetInt (enemy,&quot;dexterity&quot;)) = true) {<br/>        msg (&quot;You have blocked the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t    enemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (enemy,&quot;dexterity&quot;) - GetInt (self,&quot;speed&quot;)) = false) {<br/>        msg (enemy&#46;alias +&quot;'s attack missed!&quot;)<br/>        enemy_attack_failed = true<br/>\t\tenemy&#46;defending = false<br/>      } else if (RandomChance (GetInt (self,&quot;armor_class&quot;) - GetInt (enemy,&quot;attack_rating&quot;)) = true) {<br/>        msg (&quot;You weren't penetrated by the attack!&quot;)<br/>        enemy_attack_failed = true<br/>\t    enemy&#46;defending = false<br/>      } else if (enemy_attack_failed = false) {<br/>        if (enemy&#46;defending = true and self&#46;defending = true) {<br/>          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>          msg (self&#46;alias + &quot; has &quot; + self&#46;cur_hp + &quot; HP left&#46;&quot;)<br/>          enemy&#46;defending = false<br/>        } else if (enemy&#46;defending = true and self&#46;defending = false) {<br/>          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * 2 * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>          enemy&#46;defending = false<br/>        } else if (enemy&#46;defending = false and self&#46;defending = true) {<br/>          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) / 2 + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>        } else if (enemy&#46;defending = false and self&#46;defending = false) {<br/>          self&#46;current_health_points = self&#46;current_health_points - (critical_hit_function (enemy) * GetInt (enemy,&quot;physical_damage&quot;) + GetInt (enemy,&quot;physical_damage&quot;) * (GetInt (enemy,&quot;strength&quot;) - GetInt (self,&quot;endurance&quot;)) / 100)<br/>          msg (self&#46;alias + &quot; has &quot; + self&#46;current_health_points + &quot; HP left&#46;&quot;)<br/>        }<br/>      }<br/>    }<br/>    case (2) {<br/>      msg (enemy&#46;alias + &quot; has choosen to defend itself&#46;&quot;)<br/>      enemy&#46;defending = true<br/>    }<br/>    case (3) {<br/>      enemy&#46;defending = false<br/>      msg (&quot;Cast&quot;)<br/>    }<br/>  }<br/>  if (GetInt (self,&quot;current_health_points&quot;) &gt; 0) {<br/>    if (RandomChance (GetInt (enemy,&quot;speed&quot;) - GetInt (self,&quot;speed&quot;)) = true) {<br/>      msg (enemy&#46;alias + &quot; gets an extra battle turn!&quot;)<br/>      wait {<br/>        enemy_battle_turn (self,enemy)<br/>      }<br/>    } else {<br/>      msg (enemy&#46;alias + &quot; 's battle turn is over&#46;&quot;)<br/>    }<br/>  } else if (GetInt (self,&quot;current_health_points&quot;) &lt;= 0) {<br/>    msg (self&#46;alias + &quot; has died&#46;&quot;)<br/>    msg (&quot;GAME OVER&quot;)<br/>    finish<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;check_reachable_function&quot; parameters=&quot;enemy&quot; type=&quot;boolean&quot;&gt;<br/>  foreach (obj,ScopeReachableNotHeld ()) {<br/>    if (obj=enemy) {<br/>      value = true<br/>\t} else {<br/>\t  value = false<br/>\t}<br/>  }<br/>  return (value)<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;critical_hit_function&quot; parameters=&quot;target&quot; type=&quot;int&quot;&gt;<br/>  if (RandomChance (GetInt (target,&quot;luck&quot;)) = true) {<br/>    value = 2<br/>  } else {<br/>    value = 1<br/>  }<br/>  return (value)<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;level_up_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (game&#46;pov&#46;experience_points &gt;= game&#46;pov&#46;level * 100 + 100) {<br/>    game&#46;pov&#46;experience_points = game&#46;pov&#46;experience_points - (game&#46;pov&#46;level * 100 + 100)<br/>\tgame&#46;pov&#46;attribute_points = game&#46;pov&#46;attribute_points + 5<br/>\tgame&#46;pov&#46;level_up_points = game&#46;pov&#46;level_up_points + 1<br/>\tgame&#46;pov&#46;level = game&#46;pov&#46;level + 1<br/>\tlevel_up_function<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;level_up_system_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (game&#46;pov&#46;level_up_points &gt; 0) {<br/>    if (game&#46;pov&#46;attribute_points &gt; 0) {<br/>\t  show menu (&quot;What attribute would you like to raise?&quot;,split(&quot;strength;endurance;dexterity;agility;speed;intelligence;spirituality;mentality;piety;luck&quot;,&quot;;&quot;),false) {<br/>\t    switch (result) {<br/>\t\t  case (&quot;strength&quot;) {<br/>\t\t    msg (&quot;How many points?&quot;)<br/>\t\t\tget input {<br/>\t\t\t  game&#46;pov&#46;points=result<br/>\t\t  }<br/>\t  }<br/>    }<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>&lt;function name=&quot;status_attributes_function&quot;&gt;<br/>  game&#46;pov&#46;health_points = game&#46;pov&#46;current_health_points + &quot;/&quot; + game&#46;pov&#46;maximum_health_points<br/>  game&#46;pov&#46;mana_points = game&#46;pov&#46;current_mana_points + &quot;/&quot; + game&#46;pov&#46;maximum_mana_points<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;shop_function&quot;&gt;<br/>&lt;/function&gt;<br/><br/>&lt;/library&gt;</code></pre><br/><br/>------------------------------<br/><br/>p.s.<br/><br/>[HK Edit: ignore this part, as I wrote this post before reading the latter posts of yours, Jayna. I too thought you meant a &quot;combat block&quot; effect, so my apologies. Some day, I'll be thinking at your high level of coding, lol. HK still thinks at a low level of code, and so that was: block = &quot;combat blocking effect&quot;, lol]<br/><br/>You can quasi &quot;block&quot; (and parry, dodge~evade, and etc)... there's a few ways (simple to more complex) to code in this effect... <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>-----------------------------<br/><br/>P.S.S.<br/><br/>in regards to #3, I think Jayna was talking about, what happens when~(if) the enemy has exactly 1 life, as you're using greater than and lesser than, you'll have a problem as the quest engine won't know what to do at 1 life, is the enemy dead or is it still alive? You simply need to change one of your operators to being: &quot;and equal to&quot;<br/><br/><pre><code>if (orc&#46;hit_points &lt; 1) {<br/>  orc&#46;dead=true<br/>  msg (&quot;the orc is now dead&quot;)<br/>} else if (orc&#46;hit_points &gt;= 1) {<br/>  msg (&quot;the orc is still alive&quot;)<br/>}<br/><br/>~OR~<br/><br/>if (orc&#46;hit_points &lt;= 0) {<br/>  orc&#46;dead=true<br/>  msg (&quot;the orc is now dead&quot;)<br/>} else if (orc&#46;hit_points &gt; 0) {<br/>  msg (&quot;the orc is still alive&quot;)<br/>}<br/><br/>but not what you have&#58;<br/><br/>if (orc&#46;hit_points &lt; 1) {<br/>  orc&#46;dead=true<br/>  msg (&quot;the orc is now dead&quot;)<br/>} else if (orc&#46;hit_points &gt; 1) {<br/>  msg (&quot;the orc is still alive&quot;)<br/>} else if (orc&#46;hit_points = 1) {<br/>  // quest engine&#58; &#46;&#46;&#46;???&#46;&#46;&#46;???&#46;&#46;&#46;&#46;???&#46;&#46;&#46;&#46;<br/>  // quest engine&#58; ERROR!<br/>}</code></pre><br/><br/>------------------------------<br/><br/>Quest's Operators:<br/><br/>name: format~syntax<br/><br/>// sorry, I forgot the correct terminology... argh! Jayna can explain this easily though of what I'm trying to say, lol.<br/>1. equals a value (computational equals): =<br/>2. equals (&quot;the same as this&quot; ~ string comparison equals ~ algebraic substitution): =<br/>// quest internally knows when to do &quot;=&quot; vs &quot;==&quot;, Alex did this for noobs, who may not understand~realize the difference, and so, they can safely just type in &quot;=&quot;, and quest will figure out whether it's suppose to do the function for &quot;=&quot; or for &quot;==&quot;.<br/><br/>3. greater than: &gt;<br/>4. lesser than: &lt; <br/>5. greater than and equal to: &gt;=<br/>6. lesser than and equal to: &lt;=<br/><br/>~ I'm not sure if you can put the equals sign first too (I haven't tested~tried it), or if not:<br/>5. =&gt;<br/>6. =&lt;<br/><br/>NOTE: since the &quot;tags&quot; (not sure if this is the correct terminology) are: <span style=\"font-weight:bold;\">&lt;</span> object name=&quot;blah&quot; <span style=\"font-weight:bold;\">&gt;</span>, to tell quest that you want the &quot;&gt;&quot; and &quot;&lt;&quot; to be understood as the symbols for &quot;greater than&quot; and &quot;lesser than&quot;, then you got to add this in to your script&#058;<br/><br/><pre><code>&lt;fight name=&quot;script&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (orc&#46;hit_points &lt;= 0) {<br/>    // blah coding<br/>  }<br/>&#93;&#93;&gt;&lt;/fight&gt;<br/><br/>&lt;function name&quot;blah&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  if (orc&#46;hit_points &lt;= 0) {<br/>    // blah coding<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;<br/><br/>etc&#46;&#46;&#46;<br/><br/>&lt;!&#91;CDATA&#91; greater than and~or lesser than scripting &#93;&#93;&gt;</code></pre><br/><br/>as otherwise you get an error, as it'll think the:<br/><br/>&lt;= 0 ) {<br/><br/>is a tag, and it's like: where's the ending tag? thus the ERROR.<br/><br/>missing: &gt;&lt;/blah&gt;<br/>and: incorrect ID &quot;tag&quot; format~syntax too<br/><br/>as the correct syntax~format is (a single example only):<br/><br/>&lt;object name=&quot;orc&quot;&gt;&lt;/object&gt;<br/><br/>and not:<br/><br/>&lt;= 0 ) {<br/><br/>lol<div><a href=\"/attachment/720\">Colloseum Library File.aslx</a></div>",
      "PostDate": "2013-09-19T01:18:50+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26311",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Well my question was meant for the order of condition checking (the if, if else etc), which is also why I did it in pseudo form.\n\nEven though I'm a big fan of a more real time based combat system that feels fluent and not so turn based, I think I'll wait a bit with implementing that. I've already learned a lot about Quest by doing my current combat system and to make sure I progress with the rest of the game, I'll let it stay in its current locked, turn based form.\n\nI'll add a lot of other stuff to the game and also the combat script and at some point when I feel more comfortable with the game I'll probably rewrite the combat code to a more fluent system. I already have some ideas for it based on your guys code, so that is awesome. And I can certainly use the code you've pasted for the system!\n\nI'm very impressed by all the attributes you have in the script, like endurance, dexterity, agility etc. Very detailed and with a lot of possibilities. I like that! I might steal from it at some point <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nA detail I spotted in your script is the chance to get an extra turn. That one would be somewhat simple to implement yet give the system a more fluent feel!\n\nAnd you are right about the #3 point I had with the life being 1. I have fixed that, thanks! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nThe last code you posted about how to implement the &lt;= is very helpful. I tried to implement the &lt;= and &gt;= at some point but got the error you are talking about. Good to know how to implement it without getting that error! Thanks.\n\nAgain, thanks for all the useful code. I'll get a lot out of just reading through it! Appreciated.",
      "EditableFormat": "bbcode",
      "HTML": "Well my question was meant for the order of condition checking (the if, if else etc), which is also why I did it in pseudo form.<br/><br/>Even though I'm a big fan of a more real time based combat system that feels fluent and not so turn based, I think I'll wait a bit with implementing that. I've already learned a lot about Quest by doing my current combat system and to make sure I progress with the rest of the game, I'll let it stay in its current locked, turn based form.<br/><br/>I'll add a lot of other stuff to the game and also the combat script and at some point when I feel more comfortable with the game I'll probably rewrite the combat code to a more fluent system. I already have some ideas for it based on your guys code, so that is awesome. And I can certainly use the code you've pasted for the system!<br/><br/>I'm very impressed by all the attributes you have in the script, like endurance, dexterity, agility etc. Very detailed and with a lot of possibilities. I like that! I might steal from it at some point <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>A detail I spotted in your script is the chance to get an extra turn. That one would be somewhat simple to implement yet give the system a more fluent feel!<br/><br/>And you are right about the #3 point I had with the life being 1. I have fixed that, thanks! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>The last code you posted about how to implement the &lt;= is very helpful. I tried to implement the &lt;= and &gt;= at some point but got the error you are talking about. Good to know how to implement it without getting that error! Thanks.<br/><br/>Again, thanks for all the useful code. I'll get a lot out of just reading through it! Appreciated.",
      "PostDate": "2013-09-19T07:55:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26339",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "I got another, more general questions, regarding flags.\n\nI was just sitting working on some code when I realized I was switching between using flags and boolean attributes. For instance, when the player enters combat I set a flag but when I'm checking whether an enemy is dead I check a boolean attribute on that enemy object.\n\nI know that a flag is a quick way to assess a true/false state, but when would it be appropriate to use a boolean attribute on an object instead of just setting/unsetting a flag? It might be wrong that I'm &quot;only&quot; setting a flag when player enters combat, so I might wanna rework that, dunno?",
      "EditableFormat": "bbcode",
      "HTML": "I got another, more general questions, regarding flags.<br/><br/>I was just sitting working on some code when I realized I was switching between using flags and boolean attributes. For instance, when the player enters combat I set a flag but when I'm checking whether an enemy is dead I check a boolean attribute on that enemy object.<br/><br/>I know that a flag is a quick way to assess a true/false state, but when would it be appropriate to use a boolean attribute on an object instead of just setting/unsetting a flag? It might be wrong that I'm &quot;only&quot; setting a flag when player enters combat, so I might wanna rework that, dunno?",
      "PostDate": "2013-09-22T09:10:34+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26340",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "A &quot;flag&quot; in Quest is just a Boolean attribute. There is no flag attribute as such. If you select &quot;Set flag&quot; in the editor, it turns into SetObjectFlagOn, and &quot;Unset flag&quot; turns into SetObjectFlagOff. Those functions look like this:\n\n[code:1c7utsau]  &lt;function name=&quot;SetObjectFlagOn&quot; parameters=&quot;object, flag&quot;&gt;\n    set (object, flag, true)\n  &lt;/function&gt;\n\n  &lt;function name=&quot;SetObjectFlagOff&quot; parameters=&quot;object, flag&quot;&gt;\n    set (object, flag, false)\n  &lt;/function&gt;[/code:1c7utsau]\n\n&quot;true&quot; and &quot;false&quot; are just Boolean values. Similarly, and &quot;if&quot; with &quot;object has flag&quot; turns into &quot;GetBoolean&quot;. Basically, flags are just Boolean attributes.\n\nI suspect it was deemed more scary and less obvious to use &quot;Set Boolean&quot; and &quot;object has Boolean&quot; for less coding-skilled game developers, so the more neutral word &quot;flag&quot; was used up in the editor instead - mostly. Unfortunately, it creates this conceptual dissonance since they sound like two different things. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "A &quot;flag&quot; in Quest is just a Boolean attribute. There is no flag attribute as such. If you select &quot;Set flag&quot; in the editor, it turns into SetObjectFlagOn, and &quot;Unset flag&quot; turns into SetObjectFlagOff. Those functions look like this:<br/><br/><pre><code>  &lt;function name=&quot;SetObjectFlagOn&quot; parameters=&quot;object, flag&quot;&gt;<br/>    set (object, flag, true)<br/>  &lt;/function&gt;<br/><br/>  &lt;function name=&quot;SetObjectFlagOff&quot; parameters=&quot;object, flag&quot;&gt;<br/>    set (object, flag, false)<br/>  &lt;/function&gt;</code></pre><br/><br/>&quot;true&quot; and &quot;false&quot; are just Boolean values. Similarly, and &quot;if&quot; with &quot;object has flag&quot; turns into &quot;GetBoolean&quot;. Basically, flags are just Boolean attributes.<br/><br/>I suspect it was deemed more scary and less obvious to use &quot;Set Boolean&quot; and &quot;object has Boolean&quot; for less coding-skilled game developers, so the more neutral word &quot;flag&quot; was used up in the editor instead - mostly. Unfortunately, it creates this conceptual dissonance since they sound like two different things. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-22T10:53:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26342",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Hmm I might have formulated my question bad <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> I am aware that flags are boolean attributes, but you can also set a boolean attribute on your object directly (in the example I posted above enemy.dead = false/true).\n\nMy question is more meant as a &quot;do you use flags in some situations and if so, in which, or do you only use boolean attributes&quot;? I know a flag is also a boolean attribute, but when I say attribute, i mean one you create on the object and set to a boolean type <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->\n\nMore simply put; when do you simply use flags and when do you use the boolean type on an attribute? Or do you only ever use one or the other? <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "EditableFormat": "bbcode",
      "HTML": "Hmm I might have formulated my question bad <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --> I am aware that flags are boolean attributes, but you can also set a boolean attribute on your object directly (in the example I posted above enemy.dead = false/true).<br/><br/>My question is more meant as a &quot;do you use flags in some situations and if so, in which, or do you only use boolean attributes&quot;? I know a flag is also a boolean attribute, but when I say attribute, i mean one you create on the object and set to a boolean type <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P --><br/><br/>More simply put; when do you simply use flags and when do you use the boolean type on an attribute? Or do you only ever use one or the other? <!-- s:P --><img src=\"{SMILIES_PATH}/icon_razz.gif\" alt=\":P\" title=\"Razz\" /><!-- s:P -->",
      "PostDate": "2013-09-22T11:14:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26343",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I personally edit code in Code View (or via a text editor), and it makes more sense to me to simply put &quot;object.flag = true&quot; rather than &quot;SetObjectFlagOn(object, &quot;flag&quot;)), which just turns into the same thing. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nIf I want a pre-defined attribute (which can simplify checks), then I will create a Boolean attribute. (You'd have to even if you wanted a flag, if you wanted the flag to be pre-existing.)",
      "EditableFormat": "bbcode",
      "HTML": "I personally edit code in Code View (or via a text editor), and it makes more sense to me to simply put &quot;object.flag = true&quot; rather than &quot;SetObjectFlagOn(object, &quot;flag&quot;)), which just turns into the same thing. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>If I want a pre-defined attribute (which can simplify checks), then I will create a Boolean attribute. (You'd have to even if you wanted a flag, if you wanted the flag to be pre-existing.)",
      "PostDate": "2013-09-22T11:31:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26344",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm still not quite clear in what you're trying to ask about, as I and maybe Jayna are confused, due to that &quot;flags&quot; are booleans (boolean attributes).\n\nI believe that in the GUI~Editor, there's two types of scripts, one to create (add) the &quot;flag&quot; (boolean attribute), and another (well two of them) to toggle the &quot;flag&quot; (boolean attribute) between &quot;on&quot; (&quot;=true&quot;) and &quot;off&quot; (&quot;=false&quot;), if my memory serves (I'm too lazy to start up quest).\n\n-----\n\nCreating the Flag~Boolean:\n\nIn-Code:\n\n&lt;object name=&quot;blah&quot;&gt;\n-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;\n-&gt; &lt;name_of_boolean type=&quot;boolean&quot;&gt;true_or_false&lt;/name_of_boolean&gt;\n&lt;/object&gt;\n\n~is the SAME as~\n\nGUI~Editor:\n\nwhatever the script is called... meh\n\n---------\n\nToggling the Flag~Boolean:\n\nIn-Code: Object.Boolean=true &lt;---&gt; SetObjectFlagOn :GUI~Editor\nIn-Code: Object.Boolean=false &lt;---&gt; SetObjectFlagOff :GUI~Editor\n\n----------\n\nare you any change refering to, for example:\n\nvariable_string=true_or_false\nhandled=false // or true\nyou_go_first=false // or true\nresult_x=false // or true\nvalue_x=false // or true\n\n~vs~\n\nObject.Boolean=true_or_false\norc.dead=false // or true\netc examples\n\n------------------------------\n\nfor me, I got my own question in terms of what is a better code design structure:\n\nbooleans vs (strings vs stringlists)\n\nbooleans are quicker~easier to toggle, but you got to make the booleans for everything ~ lots of booleans!\n\nstring~stringlists reduce the amount of code lines for them compared to the amount of code lines needed for booleans, but they take more code lines to toggle them.\n\nfor example:\n\nobject.walking=true vs object.current_locomotion=walking vs object.current_locomotion_string_list // walking\nobject.running=false\nobject.flying=false\n\nobject.running=true vs object.current_locomotion=running vs object.current_locomotion_string_list // running\nobject.walking=false\nobject.flying=false\n\nobject.flying=true vs object.current_locomotion=flying vs object.current_locomotion_string_list // flying\nobject.running=false\nobject.walking=false\n\netc... etc... etc...\n\n(or other examples: such as like with traditional rpg status effects: poisoned, confused, muted~silenced, paralyzed, stunned, sleeping, blinded, cursed, petrified, and etc)\n\nAnd, are there certain scenerios~situations where for some things it is better to use booleans, other certain scenerios~situations where for some things it is better to use strings, and still other certain scenerios~situations where for some things it is better to use stringlists ???",
      "EditableFormat": "bbcode",
      "HTML": "I'm still not quite clear in what you're trying to ask about, as I and maybe Jayna are confused, due to that &quot;flags&quot; are booleans (boolean attributes).<br/><br/>I believe that in the GUI~Editor, there's two types of scripts, one to create (add) the &quot;flag&quot; (boolean attribute), and another (well two of them) to toggle the &quot;flag&quot; (boolean attribute) between &quot;on&quot; (&quot;=true&quot;) and &quot;off&quot; (&quot;=false&quot;), if my memory serves (I'm too lazy to start up quest).<br/><br/>-----<br/><br/>Creating the Flag~Boolean:<br/><br/>In-Code:<br/><br/>&lt;object name=&quot;blah&quot;&gt;<br/>-&gt; &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>-&gt; &lt;name_of_boolean type=&quot;boolean&quot;&gt;true_or_false&lt;/name_of_boolean&gt;<br/>&lt;/object&gt;<br/><br/>~is the SAME as~<br/><br/>GUI~Editor:<br/><br/>whatever the script is called... meh<br/><br/>---------<br/><br/>Toggling the Flag~Boolean:<br/><br/>In-Code: Object.Boolean=true &lt;---&gt; SetObjectFlagOn :GUI~Editor<br/>In-Code: Object.Boolean=false &lt;---&gt; SetObjectFlagOff :GUI~Editor<br/><br/>----------<br/><br/>are you any change refering to, for example:<br/><br/>variable_string=true_or_false<br/>handled=false // or true<br/>you_go_first=false // or true<br/>result_x=false // or true<br/>value_x=false // or true<br/><br/>~vs~<br/><br/>Object.Boolean=true_or_false<br/>orc.dead=false // or true<br/>etc examples<br/><br/>------------------------------<br/><br/>for me, I got my own question in terms of what is a better code design structure:<br/><br/>booleans vs (strings vs stringlists)<br/><br/>booleans are quicker~easier to toggle, but you got to make the booleans for everything ~ lots of booleans!<br/><br/>string~stringlists reduce the amount of code lines for them compared to the amount of code lines needed for booleans, but they take more code lines to toggle them.<br/><br/>for example:<br/><br/>object.walking=true vs object.current_locomotion=walking vs object.current_locomotion_string_list // walking<br/>object.running=false<br/>object.flying=false<br/><br/>object.running=true vs object.current_locomotion=running vs object.current_locomotion_string_list // running<br/>object.walking=false<br/>object.flying=false<br/><br/>object.flying=true vs object.current_locomotion=flying vs object.current_locomotion_string_list // flying<br/>object.running=false<br/>object.walking=false<br/><br/>etc... etc... etc...<br/><br/>(or other examples: such as like with traditional rpg status effects: poisoned, confused, muted~silenced, paralyzed, stunned, sleeping, blinded, cursed, petrified, and etc)<br/><br/>And, are there certain scenerios~situations where for some things it is better to use booleans, other certain scenerios~situations where for some things it is better to use strings, and still other certain scenerios~situations where for some things it is better to use stringlists ???",
      "PostDate": "2013-09-22T14:04:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26345",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Haha yeh I do know it is hard as I'm having a hard time explaining it. It makes it even harder when I don't know the system that well yet. And writing it doesn't really help on it either <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> So sorry about that! I'll try again:\n\nWhen you want something to be either true or false you use a boolean. I do know what a boolean is; that is not my concern nor is it how to use it.\n\nIn Quest, you can set a boolean by either setting a flag on an object [i:26rnoif1][b:26rnoif1]OR[/b:26rnoif1][/i:26rnoif1] you can set an attribute with the type boolean on the object and then change it when you need to. As far as I know, the attribute with the type boolean has to be set at the start of the game and can then be toggled between true and false as the game progresses. The flag, however, you do not need to have predefined on your object.\n\nSo my question is:\n\nWhen would you just set a flag and when would you use an attribute with the type boolean on your object? I know you can use them to achieve the same goal (checking whether something is true or false), which is why I wonder if there is any situation in which you would rather use the one over the other?\n\nIndeed Khan, I have the same questions when working with Quest - in what situations are what ways of doing something appropriate. This is actually a bit in that category <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Haha yeh I do know it is hard as I'm having a hard time explaining it. It makes it even harder when I don't know the system that well yet. And writing it doesn't really help on it either <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> So sorry about that! I'll try again:<br/><br/>When you want something to be either true or false you use a boolean. I do know what a boolean is; that is not my concern nor is it how to use it.<br/><br/>In Quest, you can set a boolean by either setting a flag on an object <span style=\"font-style:italic;\"><span style=\"font-weight:bold;\">OR</span></span> you can set an attribute with the type boolean on the object and then change it when you need to. As far as I know, the attribute with the type boolean has to be set at the start of the game and can then be toggled between true and false as the game progresses. The flag, however, you do not need to have predefined on your object.<br/><br/>So my question is:<br/><br/>When would you just set a flag and when would you use an attribute with the type boolean on your object? I know you can use them to achieve the same goal (checking whether something is true or false), which is why I wonder if there is any situation in which you would rather use the one over the other?<br/><br/>Indeed Khan, I have the same questions when working with Quest - in what situations are what ways of doing something appropriate. This is actually a bit in that category <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-22T16:00:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26346",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, so let me rephrase your question:\n\n[quote:24vot1ci]When would you just set a Boolean in script and when would you pre-define an attribute with the type boolean on your object?[/quote:24vot1ci]\n\nBasically, why pre-define a Boolean attribute or not? There are a couple of ways to use a Boolean on an object, and the answer changes depending on what you're doing.\n\n1) Check for the *existence* of a Boolean attribute. I've seen this used in some code that HK posted, and I thought it was an error at first, but then I realized it was an alternate way of using attributes. In this case, you would start out with no attribute defined, and then your code would use HasBoolean to see if the attribute exists. This is a bit odd to me to go this route, and you can use GetBoolean just as easily, since that function will return false if the attribute does not exist or is not Boolean. The trick with going this way is that in order to &quot;unset&quot; the Boolean, you need to assign it to null to remove it from the object, since it's an existence check. That makes it even more bizarre to me, but I have seen this route taken, especially for Boolean values that don't change.\n\n2) Check for the *value* of a Boolean attribute. This is the more standard way of doing things, and the GetBoolean method makes it simple, since it returns false if the attribute doesn't exist. If you always use GetBoolean, then it doesn't matter whether you pre-define the attribute or not. A missing attribute comes back false. You only get true if you set it to true.\n\nWhy would you want to predefine the Boolean? It allows you to not use GetBoolean but use the attribute directly - object.flag instead of GetBoolean(object, &quot;flag&quot;) since the attribute always exists. I don't know if there is any advantage to this speed-wise, but it might seem cleaner to some (I have gone that way myself). If you get in the habit of always using GetBoolean, then it doesn't matter whether you predefine your Boolean attributes or not.\n\nI hope I at least touched on what you were asking.  <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Ok, so let me rephrase your question:<br/><br/><blockquote><p>When would you just set a Boolean in script and when would you pre-define an attribute with the type boolean on your object?</p></blockquote><br/><br/>Basically, why pre-define a Boolean attribute or not? There are a couple of ways to use a Boolean on an object, and the answer changes depending on what you're doing.<br/><br/>1) Check for the *existence* of a Boolean attribute. I've seen this used in some code that HK posted, and I thought it was an error at first, but then I realized it was an alternate way of using attributes. In this case, you would start out with no attribute defined, and then your code would use HasBoolean to see if the attribute exists. This is a bit odd to me to go this route, and you can use GetBoolean just as easily, since that function will return false if the attribute does not exist or is not Boolean. The trick with going this way is that in order to &quot;unset&quot; the Boolean, you need to assign it to null to remove it from the object, since it's an existence check. That makes it even more bizarre to me, but I have seen this route taken, especially for Boolean values that don't change.<br/><br/>2) Check for the *value* of a Boolean attribute. This is the more standard way of doing things, and the GetBoolean method makes it simple, since it returns false if the attribute doesn't exist. If you always use GetBoolean, then it doesn't matter whether you pre-define the attribute or not. A missing attribute comes back false. You only get true if you set it to true.<br/><br/>Why would you want to predefine the Boolean? It allows you to not use GetBoolean but use the attribute directly - object.flag instead of GetBoolean(object, &quot;flag&quot;) since the attribute always exists. I don't know if there is any advantage to this speed-wise, but it might seem cleaner to some (I have gone that way myself). If you get in the habit of always using GetBoolean, then it doesn't matter whether you predefine your Boolean attributes or not.<br/><br/>I hope I at least touched on what you were asking.  <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2013-09-22T17:15:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26347",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Another thought: \n\nIf I have a single object that has Boolean attributes, I will typically just define them in the object. They are part of the particular signature of that object.\n\nIf I have a *class* of objects, some of which have the Boolean attribute and some of which don't, then I will often not bother putting it in the base type, to keep from proliferating the attribute to all the objects created from that type. It seems more compact to do it that way, and GetBoolean makes it simple, since it will return false when the attribute doesn't exist.\n\nIn the end, it comes down to your own design thoughts, how you want to do code based on the principles that make sense to you!",
      "EditableFormat": "bbcode",
      "HTML": "Another thought: <br/><br/>If I have a single object that has Boolean attributes, I will typically just define them in the object. They are part of the particular signature of that object.<br/><br/>If I have a *class* of objects, some of which have the Boolean attribute and some of which don't, then I will often not bother putting it in the base type, to keep from proliferating the attribute to all the objects created from that type. It seems more compact to do it that way, and GetBoolean makes it simple, since it will return false when the attribute doesn't exist.<br/><br/>In the end, it comes down to your own design thoughts, how you want to do code based on the principles that make sense to you!",
      "PostDate": "2013-09-22T17:22:46+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26348",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Sorry for the confusion jayna with my posts using HasBoolean, as I just use it as I figure it makes more sense for noobs, then the GetBoolean's &quot;auto check&quot; if the attribute exists and if set to true, as noobs probably don't know about this aspect of it.\n\nif (HasAttribute (object, &quot;attribute&quot;) = false_or_true) { script }\n\nI feel this a very clear script for new people to understand, and allows you to also set it to act on false ~ more customization.",
      "EditableFormat": "bbcode",
      "HTML": "Sorry for the confusion jayna with my posts using HasBoolean, as I just use it as I figure it makes more sense for noobs, then the GetBoolean's &quot;auto check&quot; if the attribute exists and if set to true, as noobs probably don't know about this aspect of it.<br/><br/>if (HasAttribute (object, &quot;attribute&quot;) = false_or_true) { script }<br/><br/>I feel this a very clear script for new people to understand, and allows you to also set it to act on false ~ more customization.",
      "PostDate": "2013-09-22T17:33:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26349",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "You can definitely use HasXXXX for existence checks. But I think it would be more confusing to try to explain to a newbie that you can use SetObjectFlagOn with HasBoolean but you then can't use SetObjectFlagOff - you have to set the attribute to null to make it go away, which is completely non-parallel and doesn't fit in with the GUI editor's command set.\n\nAs I said, if you're using it as an existence check for something you define *in your game file*, such that they are static flags on an object (not changing), then you can get away with it. If you want to turn flags on and off, it works much better to simply use GetBoolean (which corresponds to the GUI editor's &quot;object has flag&quot; script command). That then allows you to set the flag to true and false (and not something more mind-bending like true and null).\n\nAnd just so we're clear:\n\nFor HasBoolean, it will return true if there is a Boolean attribute with value of either true or false, and it will return false if there is no Boolean attribute.\n\nFor GetBoolea, it will return true if there is a Boolean attribute with value true. Else it will return false.\n\nThe fact that HasBoolean will return true if an object has a Boolean with value false is the part that needs to be remembered.",
      "EditableFormat": "bbcode",
      "HTML": "You can definitely use HasXXXX for existence checks. But I think it would be more confusing to try to explain to a newbie that you can use SetObjectFlagOn with HasBoolean but you then can't use SetObjectFlagOff - you have to set the attribute to null to make it go away, which is completely non-parallel and doesn't fit in with the GUI editor's command set.<br/><br/>As I said, if you're using it as an existence check for something you define *in your game file*, such that they are static flags on an object (not changing), then you can get away with it. If you want to turn flags on and off, it works much better to simply use GetBoolean (which corresponds to the GUI editor's &quot;object has flag&quot; script command). That then allows you to set the flag to true and false (and not something more mind-bending like true and null).<br/><br/>And just so we're clear:<br/><br/>For HasBoolean, it will return true if there is a Boolean attribute with value of either true or false, and it will return false if there is no Boolean attribute.<br/><br/>For GetBoolea, it will return true if there is a Boolean attribute with value true. Else it will return false.<br/><br/>The fact that HasBoolean will return true if an object has a Boolean with value false is the part that needs to be remembered.",
      "PostDate": "2013-09-22T18:33:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26350",
      "UserId": 0,
      "Username": "Slent",
      "UserAvatar": "6984_1379369689.png",
      "UserGravatar": "735aaf35bb538e1483a67fa49881c233",
      "EditableText": "Okay that makes it clearer. I did suspect that it was just a matter of design choice but I wasn't sure whether there was any difference with the two. I think I'll go through my code and change some of the instances where I use flag as I feel a predefined attribute would be more appropriate. \n\nI can see what you say HK, with the check with HasBoolean. I find it rather neat actually but whether I'll ever need such a check instead of following jaynas way I'm not sure. But thanks for your input, greatly appreciated.",
      "EditableFormat": "bbcode",
      "HTML": "Okay that makes it clearer. I did suspect that it was just a matter of design choice but I wasn't sure whether there was any difference with the two. I think I'll go through my code and change some of the instances where I use flag as I feel a predefined attribute would be more appropriate. <br/><br/>I can see what you say HK, with the check with HasBoolean. I find it rather neat actually but whether I'll ever need such a check instead of following jaynas way I'm not sure. But thanks for your input, greatly appreciated.",
      "PostDate": "2013-09-22T18:55:00+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "26351",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "oops, I seem to have gotten my &quot;facts&quot; wrong, lol. Thanks for the correction and explanation, Jayna. Hopefully, I'll remember these actual facts now... HK crosses his fingers. Use GetBoolean, don't use HasBoolean, HK rehearses, hehe.",
      "EditableFormat": "bbcode",
      "HTML": "oops, I seem to have gotten my &quot;facts&quot; wrong, lol. Thanks for the correction and explanation, Jayna. Hopefully, I'll remember these actual facts now... HK crosses his fingers. Use GetBoolean, don't use HasBoolean, HK rehearses, hehe.",
      "PostDate": "2013-09-22T20:04:17+01:00",
      "LastEditDate": null
    }
  ]
}
