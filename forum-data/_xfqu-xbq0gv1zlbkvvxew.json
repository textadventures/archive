{
  "Topic": {
    "TopicId": "_xfqu-xbq0gv1zlbkvvxew",
    "ForumId": "10",
    "Title": "calendar system",
    "LastUpdated": "2016-10-28T05:58:42.4929578Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e07549c1-0156-489a-9c21-be436e98d9cd",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So hello community, I just found this program and am very new to it, and not 5 minutes into learning I realized that I'd need a time based system for my game to run season and time based events. At this point this is very much beyond my understanding in the editor; I've done mods for Skyrim, Legends of Grimrock, and Fallout 4, but this is my first foray into the world of text based games. I'm sure this is technically possible to script but I'm not sure how to go about it. \r\n\r\nWhat I'm looking for is a way to display a calendar in game. The closest thing to what I want is The Pixie's clock, and I took a serious look at it; but it the limit of 99 days really hurts with what I want to do. Here's the vision of what I'm looking for. A clock that displays the current in-game Month, day, hour and minute to the player.  I fully expect the players to go through several 'years' in game to catch all the events. Could also have the year, though the year itself could be a simple +1 counter from the start date set if even there at all. I have no plans on doing anything with the actual year differences. Time would progress just like in The Pixie's clock library; the player moving from room to room and doing events would move time along manually. Certain events could take months, (being in a coma for 6 months as an example).\r\n\r\nLogically speaking I know how this should technically work. It would be tracked in seconds, so a 5 minute walk would be 360 second advancement internally with two 'counters'; one for seconds and other for minutes. Then so on for hours, days, and months; even years. Technically once the base two are done the rest is a simple extension. This brings me to my question. Is there a way of extending The Pixie's clock library to be 365 days instead of 99? From there it would be a simple matter of setting the 'months' so that day 1 - 31 is displayed as January and 32 - 59 is February, etc. If I understand anything of how this system works that is. ",
      "EditableFormat": "markdown",
      "HTML": "<p>So hello community, I just found this program and am very new to it, and not 5 minutes into learning I realized that I'd need a time based system for my game to run season and time based events. At this point this is very much beyond my understanding in the editor; I've done mods for Skyrim, Legends of Grimrock, and Fallout 4, but this is my first foray into the world of text based games. I'm sure this is technically possible to script but I'm not sure how to go about it.</p>\n<p>What I'm looking for is a way to display a calendar in game. The closest thing to what I want is The Pixie's clock, and I took a serious look at it; but it the limit of 99 days really hurts with what I want to do. Here's the vision of what I'm looking for. A clock that displays the current in-game Month, day, hour and minute to the player.  I fully expect the players to go through several 'years' in game to catch all the events. Could also have the year, though the year itself could be a simple +1 counter from the start date set if even there at all. I have no plans on doing anything with the actual year differences. Time would progress just like in The Pixie's clock library; the player moving from room to room and doing events would move time along manually. Certain events could take months, (being in a coma for 6 months as an example).</p>\n<p>Logically speaking I know how this should technically work. It would be tracked in seconds, so a 5 minute walk would be 360 second advancement internally with two 'counters'; one for seconds and other for minutes. Then so on for hours, days, and months; even years. Technically once the base two are done the rest is a simple extension. This brings me to my question. Is there a way of extending The Pixie's clock library to be 365 days instead of 99? From there it would be a simple matter of setting the 'months' so that day 1 - 31 is displayed as January and 32 - 59 is February, etc. If I understand anything of how this system works that is.</p>\n\n",
      "PostDate": "2016-10-28T05:58:42.4929578Z",
      "LastEditDate": null
    },
    {
      "PostId": "cb5590f6-cc72-42fe-aaec-b8f158ab1e3e",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've tried to dabble into 'time and date' stuff, but it's really complicated (unless you create/use a very simple system) to try to have a 'real-world' 'time and date' system, as for me, just trying to understand the actual formula for the actual days in a year, change of days in a month every leap year and etc involved stuff, just kept getting more and more complex (though, I do suck-at/hate math), laughs. But, if you want to tackle this messy stuff, best of luck to you. It really gave me an appreciation of people who uphold/maintain/understand the technology that gives us our 'time and date' system in the real world, and of clocks/calenders on computers, and etc, lol.\r\n\r\nHowever, I'd recommend not using 'real time' (Timers), but instead using the internal turns (any typed-in input or click of the mouse button on a hyperlink or the completion of a scripting, etc) (Turnscripts). Timers (using real time) are just really messy (ever done networking? or played multiplayer games online/offline, trying to synchronize the timing is really difficult to do so, whether it's between offline computers connected by a cable or online computers across the internet; ever experienced \"lag\" or \"OOS: out of sync, errors/crashes\" before? lol lol lol lol)\r\n\r\nif you need help with coding individual parts, let me know and I can help with that stuff, but depending on how accurate you want your system to be to real 'time and date', I can't help with that, it's too complicated/complex for me.\r\n\r\ngenerally, the design is this:\r\n\r\nTime:\r\n\r\nyou have Integer Attribute(s) (which can be increased/decreased normally per internal turn and/or specified for actions/events: ie, traveling to this location increases the time by an hour whereas traveling to this location increases the time by a day / 24 hours, compared of to lets say the normal time between internal turns, being a second) for keeping track of whatever units of time you want to work with (seconds, minutes, hours, days, weeks, years, etc); the easiest is to just use a single base/smallest unit of time, and base (sorry, not good location for a pun) the other units of time off of that base/smallest unit of time.\r\n\r\nto then deal with displaying 'clock time', you use the modulus (division but it finds/gets/returns the REMAINDER) operator: %\r\n\r\n(the modulus operation is great for 'cyclic' stuff --- see below in the code box, and also for determining numbers' factors/if odd/if even: if VALUE%2=0, it is even, if not VALUE%2=0, it is odd, if VALUE%3=0, it has a factor of 3, if VALUE%7=0, it has a factor of 7, etc)\r\n\r\n```\r\ntime_data_object.hour_integer_attribute = SOME_CURRENT_VALUE\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = A_VALUE_INCLUSIVELY_WITHIN_ZERO_TO_TWENTY_THREE_RANGE_:_0_-_23\r\n\r\ntime_data_object.hour_integer_attribute = 0\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 0\r\n\r\ntime_data_object.hour_integer_attribute = 1\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 1\r\n\r\ntime_data_object.hour_integer_attribute = 23\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 23\r\n\r\ntime_data_object.hour_integer_attribute = 24\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 0\r\n\r\ntime_data_object.hour_integer_attribute = 25\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 1\r\n\r\ntime_data_object.hour_integer_attribute = 47\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 23\r\n\r\ntime_data_object.hour_integer_attribute = 48\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 0\r\n\r\ntime_data_object.hour_integer_attribute = 49\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 1\r\n\r\ntime_data_object.hour_integer_attribute = 71\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 23\r\n\r\ntime_data_object.hour_integer_attribute = 72\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 0\r\n\r\ntime_data_object.hour_integer_attribute = 73\r\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\r\n// time_data_object.military_hour_clock_time_integer_attribute = 1\r\n\r\nyou get the idea... lol\r\n\r\ntime_data_object.hour_integer_attribute = 18\r\ntime_data_object.civilian_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 12\r\n// time_data_object.civilian_hour_clock_time_integer_attribute = 6 // this could be 6 am or 6 pm, you have to handle this too\r\n```\r\n\r\nI'm getting tired... but hopefully these links go into more of this stuff, including handling the 'date' aspect that I didn't cover in this post (day: sunday-saturday, seasons: winter-spring, months: january-december, etc etc etc):\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/4317/time-and-date-coding\r\nhttp://textadventures.co.uk/forum/quest/topic/5068/time-and-date-coding-a-syntaxformat-question\r\nhttp://textadventures.co.uk/forum/samples/topic/4162/countdown-timer-code (just for amusement - my brain's \"methods of madness\", lol)\r\n\r\n(I can't find any other links, in my quick-brief searching)\r\n\r\n-----------\r\n\r\nas for the 'date' stuff, that involves using List/Dictionary Attributes... I'll try to find links for them at a later time...\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\n\r\nI briefly give an example of handling 'days/months/etc' at roughly halfway through, but if you don't understand how dictionary and list Attributes work, you're going to need to learn if you want to handle calender/day/month/season/astrology-horoscope-zodiac-constellation/etc type stuff.\r\n\r\nI'll still provide more links at a later time... if I can find them or if they even exist (lol) ... on more specifically the month/day/etc coding with lists and dictionaries. Or, I'll just write up a post on this stuff... if I got the time and am not lazy, lol.\r\n\r\n---------\r\n\r\nif you're able to understand this 'time and date / calender' stuff, I'd just look up online on how 'time and date / calenders' ARE coded... there should be stuff online for how a calender software does the coding for it, for how it determines the month, the day, etc etc etc stuff.\r\n\r\notherwise, use Pixie's code, as it's the most well-done thus far publically available for coding noobs (and/or those who're not smart enough to understand time/date/coding/math stuff) like me, and if you want and/or can, you can expand upon it, but I'd use it as a starting base, or just use it as it is, if you can't create your own time/date/calender system.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've tried to dabble into 'time and date' stuff, but it's really complicated (unless you create/use a very simple system) to try to have a 'real-world' 'time and date' system, as for me, just trying to understand the actual formula for the actual days in a year, change of days in a month every leap year and etc involved stuff, just kept getting more and more complex (though, I do suck-at/hate math), laughs. But, if you want to tackle this messy stuff, best of luck to you. It really gave me an appreciation of people who uphold/maintain/understand the technology that gives us our 'time and date' system in the real world, and of clocks/calenders on computers, and etc, lol.</p>\n<p>However, I'd recommend not using 'real time' (Timers), but instead using the internal turns (any typed-in input or click of the mouse button on a hyperlink or the completion of a scripting, etc) (Turnscripts). Timers (using real time) are just really messy (ever done networking? or played multiplayer games online/offline, trying to synchronize the timing is really difficult to do so, whether it's between offline computers connected by a cable or online computers across the internet; ever experienced \"lag\" or \"OOS: out of sync, errors/crashes\" before? lol lol lol lol)</p>\n<p>if you need help with coding individual parts, let me know and I can help with that stuff, but depending on how accurate you want your system to be to real 'time and date', I can't help with that, it's too complicated/complex for me.</p>\n<p>generally, the design is this:</p>\n<p>Time:</p>\n<p>you have Integer Attribute(s) (which can be increased/decreased normally per internal turn and/or specified for actions/events: ie, traveling to this location increases the time by an hour whereas traveling to this location increases the time by a day / 24 hours, compared of to lets say the normal time between internal turns, being a second) for keeping track of whatever units of time you want to work with (seconds, minutes, hours, days, weeks, years, etc); the easiest is to just use a single base/smallest unit of time, and base (sorry, not good location for a pun) the other units of time off of that base/smallest unit of time.</p>\n<p>to then deal with displaying 'clock time', you use the modulus (division but it finds/gets/returns the REMAINDER) operator: %</p>\n<p>(the modulus operation is great for 'cyclic' stuff --- see below in the code box, and also for determining numbers' factors/if odd/if even: if VALUE%2=0, it is even, if not VALUE%2=0, it is odd, if VALUE%3=0, it has a factor of 3, if VALUE%7=0, it has a factor of 7, etc)</p>\n<pre><code>time_data_object.hour_integer_attribute = SOME_CURRENT_VALUE\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = A_VALUE_INCLUSIVELY_WITHIN_ZERO_TO_TWENTY_THREE_RANGE_:_0_-_23\n\ntime_data_object.hour_integer_attribute = 0\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 0\n\ntime_data_object.hour_integer_attribute = 1\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 1\n\ntime_data_object.hour_integer_attribute = 23\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 23\n\ntime_data_object.hour_integer_attribute = 24\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 0\n\ntime_data_object.hour_integer_attribute = 25\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 1\n\ntime_data_object.hour_integer_attribute = 47\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 23\n\ntime_data_object.hour_integer_attribute = 48\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 0\n\ntime_data_object.hour_integer_attribute = 49\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 1\n\ntime_data_object.hour_integer_attribute = 71\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 23\n\ntime_data_object.hour_integer_attribute = 72\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 0\n\ntime_data_object.hour_integer_attribute = 73\ntime_data_object.military_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 24\n// time_data_object.military_hour_clock_time_integer_attribute = 1\n\nyou get the idea... lol\n\ntime_data_object.hour_integer_attribute = 18\ntime_data_object.civilian_hour_clock_time_integer_attribute = time_data_object.hour_integer_attribute % 12\n// time_data_object.civilian_hour_clock_time_integer_attribute = 6 // this could be 6 am or 6 pm, you have to handle this too\n</code></pre>\n<p>I'm getting tired... but hopefully these links go into more of this stuff, including handling the 'date' aspect that I didn't cover in this post (day: sunday-saturday, seasons: winter-spring, months: january-december, etc etc etc):</p>\n<p>http://textadventures.co.uk/forum/samples/topic/4317/time-and-date-coding<br>\nhttp://textadventures.co.uk/forum/quest/topic/5068/time-and-date-coding-a-syntaxformat-question<br>\nhttp://textadventures.co.uk/forum/samples/topic/4162/countdown-timer-code (just for amusement - my brain's \"methods of madness\", lol)</p>\n<p>(I can't find any other links, in my quick-brief searching)</p>\n<hr>\n<p>as for the 'date' stuff, that involves using List/Dictionary Attributes... I'll try to find links for them at a later time...</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk</p>\n<p>I briefly give an example of handling 'days/months/etc' at roughly halfway through, but if you don't understand how dictionary and list Attributes work, you're going to need to learn if you want to handle calender/day/month/season/astrology-horoscope-zodiac-constellation/etc type stuff.</p>\n<p>I'll still provide more links at a later time... if I can find them or if they even exist (lol) ... on more specifically the month/day/etc coding with lists and dictionaries. Or, I'll just write up a post on this stuff... if I got the time and am not lazy, lol.</p>\n<hr>\n<p>if you're able to understand this 'time and date / calender' stuff, I'd just look up online on how 'time and date / calenders' ARE coded... there should be stuff online for how a calender software does the coding for it, for how it determines the month, the day, etc etc etc stuff.</p>\n<p>otherwise, use Pixie's code, as it's the most well-done thus far publically available for coding noobs (and/or those who're not smart enough to understand time/date/coding/math stuff) like me, and if you want and/or can, you can expand upon it, but I'd use it as a starting base, or just use it as it is, if you can't create your own time/date/calender system.</p>\n\n",
      "PostDate": "2016-10-28T07:20:19.1505533Z",
      "LastEditDate": "2016-10-28T08:04:45.302773Z"
    },
    {
      "PostId": "78643621-72e2-476d-85d4-3ff0376c1076",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That last bit is exactly what I'm looking at doing. Pixie's Clock system is a great start at what I'm looking at doing. It just needs to be modified to fit the parameters that I need for this. So the question becomes how do I modify ?her? library to fit this?\r\n\r\nEdit:\r\nI sat down and did some thinking on how to accomplish a yearly calendar utilizing the system. Instead of trying to extend her 99 days to 365 then figure out how to parse that out into months. Instead I think resetting the 'day' Pixies system and then add months would be best here. Here's the 'code' I've worked out so far and this probably won't work if put into Quest. It's more of a placeholder until I can figure out how to actually make it work in code.\r\n\r\n```\r\nmonthsend[1] = 31\r\nif ((year mod 4 = 0) : \r\n\tLeapyear = 1 & monthsend[2] = 29\r\nelse\r\n\tLeapyear = 0 & monthsend[2] = 28\r\nend\r\nmonthsend[3] = 31\r\nmonthsend[4] = 30\r\nmonthsend[5] = 31\r\nmonthsend[6] = 30\r\nmonthsend[7] = 31\r\nmonthsend[8] = 31\r\nmonthsend[9] = 30\r\nmonthsend[10] = 31\r\nmonthsend[11] = 30\r\nmonthsend[12] = 31\r\n\r\n$monthName[1] = 'January'\r\n$monthName[2] = 'February'\r\n$monthName[3] = 'March'\r\n$monthName[4] = 'April'\r\n$monthName[5] = 'May'\r\n$monthName[6] = 'June'\r\n$monthName[7] = 'July'\r\n$monthName[8] = 'August'\r\n$monthName[9] = 'September'\r\n$monthName[10] = 'October' \r\n$monthName[11] = 'November'\r\n$monthName[12] = 'December'\r\n\r\n$month = $monthName[month]\r\n\r\nif day > monthsEnd[month]:\r\n\tday -= monthsEnd[month]\r\n\tmonth += 1\r\n\r\n\tif month > 12: month = 1 & year += 1\r\n\r\n\tif month < 1: month = 1\r\n\r\n\t$month = $monthName[month]\r\nend \r\n```\r\n\r\nThis basically checks the day number. If the day number is greater than the months end day it advances to the next month. I also included a check for year to include leap year but the functionality isn't completely implemented at this point. This would also allow a creation of events based on simply a day; so the event could happen on that day every month.",
      "EditableFormat": "markdown",
      "HTML": "<p>That last bit is exactly what I'm looking at doing. Pixie's Clock system is a great start at what I'm looking at doing. It just needs to be modified to fit the parameters that I need for this. So the question becomes how do I modify ?her? library to fit this?</p>\n<p>Edit:<br>\nI sat down and did some thinking on how to accomplish a yearly calendar utilizing the system. Instead of trying to extend her 99 days to 365 then figure out how to parse that out into months. Instead I think resetting the 'day' Pixies system and then add months would be best here. Here's the 'code' I've worked out so far and this probably won't work if put into Quest. It's more of a placeholder until I can figure out how to actually make it work in code.</p>\n<pre><code>monthsend[1] = 31\nif ((year mod 4 = 0) : \n\tLeapyear = 1 &amp; monthsend[2] = 29\nelse\n\tLeapyear = 0 &amp; monthsend[2] = 28\nend\nmonthsend[3] = 31\nmonthsend[4] = 30\nmonthsend[5] = 31\nmonthsend[6] = 30\nmonthsend[7] = 31\nmonthsend[8] = 31\nmonthsend[9] = 30\nmonthsend[10] = 31\nmonthsend[11] = 30\nmonthsend[12] = 31\n\n$monthName[1] = 'January'\n$monthName[2] = 'February'\n$monthName[3] = 'March'\n$monthName[4] = 'April'\n$monthName[5] = 'May'\n$monthName[6] = 'June'\n$monthName[7] = 'July'\n$monthName[8] = 'August'\n$monthName[9] = 'September'\n$monthName[10] = 'October' \n$monthName[11] = 'November'\n$monthName[12] = 'December'\n\n$month = $monthName[month]\n\nif day &gt; monthsEnd[month]:\n\tday -= monthsEnd[month]\n\tmonth += 1\n\n\tif month &gt; 12: month = 1 &amp; year += 1\n\n\tif month &lt; 1: month = 1\n\n\t$month = $monthName[month]\nend \n</code></pre>\n<p>This basically checks the day number. If the day number is greater than the months end day it advances to the next month. I also included a check for year to include leap year but the functionality isn't completely implemented at this point. This would also allow a creation of events based on simply a day; so the event could happen on that day every month.</p>\n\n",
      "PostDate": "2016-10-29T03:30:55.9541947Z",
      "LastEditDate": "2016-10-31T04:47:22.6050094Z"
    },
    {
      "PostId": "1e14b950-254a-425a-aef6-10ebf66ba3d1",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've ran into a small problem with Pixie's code. When I put in her snippet:\r\n```\r\n  player.parent = this.to\r\n  SetInc(6)\r\n```\r\nIn a room as an exit script then run the game. I get this error:\r\n\r\n```\r\nError running script: Error evaluating expression '(not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression '(not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetBoolean(game.pov.parent, \"dark\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\r\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\r\n```\r\n\r\nI've yet to modify anything in her library so I am kind of baffled as to what is going wrong, unless I'm simply putting the script in the wrong place or missing another library. Not that I see where else to put it. Also the 'game' is two rooms with nothing in them. Any assistance would be greatly appreciated.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've ran into a small problem with Pixie's code. When I put in her snippet:</p>\n<pre><code>  player.parent = this.to\n  SetInc(6)\n</code></pre>\n<p>In a room as an exit script then run the game. I get this error:</p>\n<pre><code>Error running script: Error evaluating expression '(not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression '(not GetBoolean(game.pov.parent, \"visited\")) and HasScript(game.pov.parent, \"beforefirstenter\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetBoolean(game.pov.parent, \"dark\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(room)': GetAllChildObjects function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetBoolean(room, \"transparent\")': GetBoolean function expected object parameter but was passed 'null'\nError running script: Error evaluating expression 'GetAllChildObjects(newParent)': GetAllChildObjects function expected object parameter but was passed 'null'\n</code></pre>\n<p>I've yet to modify anything in her library so I am kind of baffled as to what is going wrong, unless I'm simply putting the script in the wrong place or missing another library. Not that I see where else to put it. Also the 'game' is two rooms with nothing in them. Any assistance would be greatly appreciated.</p>\n\n",
      "PostDate": "2016-11-01T16:38:41.721325Z",
      "LastEditDate": "2016-11-01T16:40:05.7918025Z"
    },
    {
      "PostId": "8216e483-fcda-4c98-95d9-53ed42bcfd16",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "quest docs' main page:\r\n\r\nhttp://docs.textadventures.co.uk/quest/ (see the menu bar at the top for most of Quest's Scripts --- Script Attributes, Functions --- note that after clicking on 'functions' there's a link to switch from its categorical ordering to an alphabetical ordering, Types --- data/Attribute types, Elements)\r\n\r\nhere's the docs on Lists (Arrays) and Dictionaries (somewhat the same as Arrays):\r\n\r\nhttp://docs.textadventures.co.uk/quest/guides/using_lists.html\r\nhttp://docs.textadventures.co.uk/quest/using_dictionaries.html\r\n\r\nhere's a guide of mine on Lists (Arrays)/Dictionaries (somewhat the same as Arrays):\r\n\r\nhttp://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk\r\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk (old/poor code)\r\n\r\n--------------\r\n\r\n```\r\nOBJECTS (of OOP/OOD --- underlying quest code, if I'm somewhat understanding its design, lol):\r\n\r\nat user-level, they're called/known as...\r\n\r\nElements (Objects, Exits, Attributes --- these must be contained within any Element except another Attribute of course, Verbs, Functions, Commands, Turnscripts, Timers, Object Types --- quest's user level Classes/Groups, etc etc etc)\r\n\r\n// ---------------------\r\n\r\n// VARIABLES (3 types --- keeping this simple):\r\n//\r\n// -> (1) Variable: local/temporary: NAME_OF_Variable = VALUE_OR_EXPRESSION\r\n// -> (2) Attribute: global/permanent (so long as the container/containing Object exists or still exists, of course): NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\n// -> (3) Parameters/Arguments: deals with Functions/Commands/etc\r\n\r\n// ---------------\r\n\r\n// Quest's OPERATORS:\r\n//\r\n// Assignment/Comparison-Equal To: =\r\n// Addition/Concatenation: +\r\n// Subtraction/Negative Number: -\r\n// Multiplication: *\r\n// Division (normal divison: finding/getting/returning the quotient): /\r\n// Modulus (division, but finds/gets/returns the remainder): %\r\n// AND: and\r\n// OR: or\r\n// Negation (Not) A: not NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\r\n// Negation (Not) B: <> // if coding directly, you need to enclose scripting within the '<![CDATA[ your_scripting ]]>' ?xml/aslx? tags, to tell quest that your '>' and '<' symbols are to be seen as 'greater than' and 'lesser than', instead of as the xml/aslx tags, ie '<object name=\"toy\">content/body</object>' // if using the GUI/Editor for your scripting, it handles this for you // quest's unique 'aslx' is very similiar to 'xml', and its scripting is is similiar to C++/Java, excluding quest's user-friendly operators and etc stuff.\r\n\r\n// --------------\r\n\r\nLists' index number starts at: 0 // first item in list\r\nListCount(LIST) = returns the quantity of items in list\r\nLists' last index (last item in list) number is: ListCount (LIST) - 1\r\nListItem(LIST, ListCount(LIST)) = ERROR (out of bounds of list error)\r\nListItem(LIST, ListCount(LIST) - 1) = NO error: returns the last item in your list\r\n// so, if you want to work with the more human-friendly '1', then you got to account for '+/- 1' between using the value  for your list index number (1 - 1 = 0) vs dislaying the value to your human players (0 + 1 = 1)\r\n\r\n// ----------------------\r\n\r\n<object name=\"global_data_object\">\r\n  <attr name=\"month_stringlist_attribute\" type=\"simplestringlist\">january;february;march;april;may;june;july;august;september;october;november;december</attr>\r\n  <attr name=\"month_stringdictionary_attribute\" type=\"simplestringdictionary\">january=1;february=2;march=3;april=4;may=5;june=6;july=7;august=8;september=9;october=10;november=11;december=12;1=january;2=february;3=march;4=april;5=may;6=june;7=july;8=august;9=september;10=october;11=november;12=december</attr>\r\n  <attr name=\"nonleap_month_day_string_dictionary_attribute\" type=\"simplestringdictionary\">january=31;february=28;march=31;april=30;may=31;june=30;july=31;august=31;september=30;october=31;november=30;december=31;31=january;28=february;31=march;30=april;31=may;30=june;31=july;31=august;30=september;31=october;30=november;31=december</attr>\r\n  <attr name=\"leap_month_day_string_dictionary_attribute\" type=\"simplestringdictionary\">january=31;february=29;march=31;april=30;may=31;june=30;july=31;august=31;september=30;october=31;november=30;december=31;31=january;29=february;31=march;30=april;31=may;30=june;31=july;31=august;30=september;31=october;30=november;31=december</attr>\r\n  <attr name=\"day_stringlist_attribute\" type=\"simplestringlist\">sunday;monday;tuesday;wednesday;thursday;friday;saturday</attr>\r\n  <attr name=\"day_stringdictionary_attribute\" type=\"simplestringdictionary\">sunday=1;monday=2;tuesday=3;wednesday=4;thursday=5;friday=6;saturday=7;1=sunday;2=monday;3=tuesday;4=wednesday;5=thursday;6=friday;7=saturday</attr>\r\n  <attr name=\"season_stringlist_attribute\" type=\"simplestringlist\">winter;spring;summer;autumn</attr>\r\n  <attr name=\"season_stringdictionary_attribute\" type=\"simplestringdictionary\">winter=1;spring=2;summer=3;autumn=4;1=winter;2=spring;3=summer;4=autumn</attr>\r\n</object>\r\n\r\n// string_var = \"0\"\r\n// integer_var = ToInt (string_var)\r\n// integer_var = 0\r\n\r\n// integer_var = 0\r\n// string_var = ToString (integer_var)\r\n// string_var = \"0\"\r\n\r\n// ToDouble (var) // quest's floating points/floats/decimal numbers data/attribute type\r\n\r\n// IsInt (var/val) // returns true/false\r\n// isNumeric (var/val) // returns true/false\r\n\r\n// Lists and Dictionaries are basically an 'input-output' Function:\r\n\r\nString Lists: input (LIST, string index number) ---> output (string value)\r\nString Lists: input (LIST, string index number) ---> output (object reference value)\r\n\r\nString Dictionaries: input (DICTIONARY, \"string key\") ---> output (string value)\r\nObject Dictionaries: input (DICTIONARY, \"string key\") ---> output (object reference value)\r\nScript Dictionaries: input (DICTIONARY, \"string key\") ---> output (script value/s)\r\n\r\nVARIABLE = ListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns a string/object, quest will handle the return type for you, based upon your inputted List's items)\r\n\r\nVARIABLE = StringListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns a string, inputted List must have string items\r\n\r\nVARIABLE = ObjectListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns an object, inputted List must have object items\r\n\r\nsame/similar concepts/logic for/with the Dictionaries:\r\n\r\nDictionaryItem(xxx)\r\nStringDictionaryItem(xxx)\r\nObjectDictionaryItem(xxx)\r\nScriptDictionaryItem(xxx)\r\n\r\n// var = 0\r\n// VARIABLE = StringDictionaryItem (global_data_object.month_stringlist_attribute, var)\r\n// VARIABLE = \"january\"\r\n\r\n// var = 11\r\n// VARIABLE = StringDictionaryItem (global_data_object.month_stringlist_attribute, var)\r\n// VARIABLE = \"december\"\r\n\r\n// var = \"28\"\r\n// VARIABLE = StringDictionaryItem (global_data_object.month_day_stringdictionary_attribute, var)\r\n// VARIABLE = \"february\"\r\n\r\n// var = \"29\"\r\n// VARIABLE = StringDictionaryItem (global_data_object.leap_month_day_stringdictionary_attribute, var)\r\n// VARIABLE = \"february\"\r\n\r\n// var = \"february\"\r\n// VARIABLE = StringDictionaryItem (global_data_object.month_day_stringdictionary_attribute, var)\r\n// VARIABLE = \"28\"\r\n\r\n// var = \"february\"\r\n// VARIABLE = StringDictionaryItem (global_data_object.leap_month_day_stringdictionary_attribute, var)\r\n// VARIABLE = \"29\"\r\n\r\n// you can also add/remove items from a list/dictionary too:\r\n\r\n// (for example... if you only want to have one month dictionary, then you'll have to 'remove--->add' to remove the wrong/old entry/item and add in the correct/new entry/item for when changing between 'february = 28 vs february = 29' days, though you can use add/remove for many other game design implications too, of course)\r\n\r\nlist add (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, \"NAME_OF_ITEM\") // String Value/Item for a Stringlist Attribute\r\nlist remove (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, \"NAME_OF_ITEM\") // String Value/Item for a Stringlist Attribute\r\n\r\nlist add (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, NAME_OF_ITEM) // Object (reference) Value/Item for an Objectlist Attribute\r\nlist remove (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, NAME_OF_ITEM) // Object (reference) Value/Item for an Objectlist Attribute\r\n\r\ndictionary add (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\", \"String_VALUE\") // string dictionary\r\ndictionary remove (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\") // string dictionary\r\n\r\ndictionary add (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\", String_VALUE) // object dictionary\r\ndictionary remove (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\") // object dictionary\r\n\r\n// I'm not sure of the syntax for a Script Dictionary's script item...\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>quest docs' main page:</p>\n<p>http://docs.textadventures.co.uk/quest/ (see the menu bar at the top for most of Quest's Scripts --- Script Attributes, Functions --- note that after clicking on 'functions' there's a link to switch from its categorical ordering to an alphabetical ordering, Types --- data/Attribute types, Elements)</p>\n<p>here's the docs on Lists (Arrays) and Dictionaries (somewhat the same as Arrays):</p>\n<p>http://docs.textadventures.co.uk/quest/guides/using_lists.html<br>\nhttp://docs.textadventures.co.uk/quest/using_dictionaries.html</p>\n<p>here's a guide of mine on Lists (Arrays)/Dictionaries (somewhat the same as Arrays):</p>\n<p>http://textadventures.co.uk/forum/samples/topic/5137/list-and-dictionary-extensive-guide-by-hk<br>\nhttp://textadventures.co.uk/forum/samples/topic/5138/explore-and-travel-code-sample-by-hk (old/poor code)</p>\n<hr>\n<pre><code>OBJECTS (of OOP/OOD --- underlying quest code, if I'm somewhat understanding its design, lol):\n\nat user-level, they're called/known as...\n\nElements (Objects, Exits, Attributes --- these must be contained within any Element except another Attribute of course, Verbs, Functions, Commands, Turnscripts, Timers, Object Types --- quest's user level Classes/Groups, etc etc etc)\n\n// ---------------------\n\n// VARIABLES (3 types --- keeping this simple):\n//\n// -&gt; (1) Variable: local/temporary: NAME_OF_Variable = VALUE_OR_EXPRESSION\n// -&gt; (2) Attribute: global/permanent (so long as the container/containing Object exists or still exists, of course): NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\n// -&gt; (3) Parameters/Arguments: deals with Functions/Commands/etc\n\n// ---------------\n\n// Quest's OPERATORS:\n//\n// Assignment/Comparison-Equal To: =\n// Addition/Concatenation: +\n// Subtraction/Negative Number: -\n// Multiplication: *\n// Division (normal divison: finding/getting/returning the quotient): /\n// Modulus (division, but finds/gets/returns the remainder): %\n// AND: and\n// OR: or\n// Negation (Not) A: not NAME_OF_OBJECT.NAME_OF_ATTRIBUTE = VALUE_OR_EXPRESSION\n// Negation (Not) B: &lt;&gt; // if coding directly, you need to enclose scripting within the '&lt;![CDATA[ your_scripting ]]&gt;' ?xml/aslx? tags, to tell quest that your '&gt;' and '&lt;' symbols are to be seen as 'greater than' and 'lesser than', instead of as the xml/aslx tags, ie '&lt;object name=\"toy\"&gt;content/body&lt;/object&gt;' // if using the GUI/Editor for your scripting, it handles this for you // quest's unique 'aslx' is very similiar to 'xml', and its scripting is is similiar to C++/Java, excluding quest's user-friendly operators and etc stuff.\n\n// --------------\n\nLists' index number starts at: 0 // first item in list\nListCount(LIST) = returns the quantity of items in list\nLists' last index (last item in list) number is: ListCount (LIST) - 1\nListItem(LIST, ListCount(LIST)) = ERROR (out of bounds of list error)\nListItem(LIST, ListCount(LIST) - 1) = NO error: returns the last item in your list\n// so, if you want to work with the more human-friendly '1', then you got to account for '+/- 1' between using the value  for your list index number (1 - 1 = 0) vs dislaying the value to your human players (0 + 1 = 1)\n\n// ----------------------\n\n&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"month_stringlist_attribute\" type=\"simplestringlist\"&gt;january;february;march;april;may;june;july;august;september;october;november;december&lt;/attr&gt;\n  &lt;attr name=\"month_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;january=1;february=2;march=3;april=4;may=5;june=6;july=7;august=8;september=9;october=10;november=11;december=12;1=january;2=february;3=march;4=april;5=may;6=june;7=july;8=august;9=september;10=october;11=november;12=december&lt;/attr&gt;\n  &lt;attr name=\"nonleap_month_day_string_dictionary_attribute\" type=\"simplestringdictionary\"&gt;january=31;february=28;march=31;april=30;may=31;june=30;july=31;august=31;september=30;october=31;november=30;december=31;31=january;28=february;31=march;30=april;31=may;30=june;31=july;31=august;30=september;31=october;30=november;31=december&lt;/attr&gt;\n  &lt;attr name=\"leap_month_day_string_dictionary_attribute\" type=\"simplestringdictionary\"&gt;january=31;february=29;march=31;april=30;may=31;june=30;july=31;august=31;september=30;october=31;november=30;december=31;31=january;29=february;31=march;30=april;31=may;30=june;31=july;31=august;30=september;31=october;30=november;31=december&lt;/attr&gt;\n  &lt;attr name=\"day_stringlist_attribute\" type=\"simplestringlist\"&gt;sunday;monday;tuesday;wednesday;thursday;friday;saturday&lt;/attr&gt;\n  &lt;attr name=\"day_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;sunday=1;monday=2;tuesday=3;wednesday=4;thursday=5;friday=6;saturday=7;1=sunday;2=monday;3=tuesday;4=wednesday;5=thursday;6=friday;7=saturday&lt;/attr&gt;\n  &lt;attr name=\"season_stringlist_attribute\" type=\"simplestringlist\"&gt;winter;spring;summer;autumn&lt;/attr&gt;\n  &lt;attr name=\"season_stringdictionary_attribute\" type=\"simplestringdictionary\"&gt;winter=1;spring=2;summer=3;autumn=4;1=winter;2=spring;3=summer;4=autumn&lt;/attr&gt;\n&lt;/object&gt;\n\n// string_var = \"0\"\n// integer_var = ToInt (string_var)\n// integer_var = 0\n\n// integer_var = 0\n// string_var = ToString (integer_var)\n// string_var = \"0\"\n\n// ToDouble (var) // quest's floating points/floats/decimal numbers data/attribute type\n\n// IsInt (var/val) // returns true/false\n// isNumeric (var/val) // returns true/false\n\n// Lists and Dictionaries are basically an 'input-output' Function:\n\nString Lists: input (LIST, string index number) ---&gt; output (string value)\nString Lists: input (LIST, string index number) ---&gt; output (object reference value)\n\nString Dictionaries: input (DICTIONARY, \"string key\") ---&gt; output (string value)\nObject Dictionaries: input (DICTIONARY, \"string key\") ---&gt; output (object reference value)\nScript Dictionaries: input (DICTIONARY, \"string key\") ---&gt; output (script value/s)\n\nVARIABLE = ListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns a string/object, quest will handle the return type for you, based upon your inputted List's items)\n\nVARIABLE = StringListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns a string, inputted List must have string items\n\nVARIABLE = ObjectListItem (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, index_number_INPUT) // returns an object, inputted List must have object items\n\nsame/similar concepts/logic for/with the Dictionaries:\n\nDictionaryItem(xxx)\nStringDictionaryItem(xxx)\nObjectDictionaryItem(xxx)\nScriptDictionaryItem(xxx)\n\n// var = 0\n// VARIABLE = StringDictionaryItem (global_data_object.month_stringlist_attribute, var)\n// VARIABLE = \"january\"\n\n// var = 11\n// VARIABLE = StringDictionaryItem (global_data_object.month_stringlist_attribute, var)\n// VARIABLE = \"december\"\n\n// var = \"28\"\n// VARIABLE = StringDictionaryItem (global_data_object.month_day_stringdictionary_attribute, var)\n// VARIABLE = \"february\"\n\n// var = \"29\"\n// VARIABLE = StringDictionaryItem (global_data_object.leap_month_day_stringdictionary_attribute, var)\n// VARIABLE = \"february\"\n\n// var = \"february\"\n// VARIABLE = StringDictionaryItem (global_data_object.month_day_stringdictionary_attribute, var)\n// VARIABLE = \"28\"\n\n// var = \"february\"\n// VARIABLE = StringDictionaryItem (global_data_object.leap_month_day_stringdictionary_attribute, var)\n// VARIABLE = \"29\"\n\n// you can also add/remove items from a list/dictionary too:\n\n// (for example... if you only want to have one month dictionary, then you'll have to 'remove---&gt;add' to remove the wrong/old entry/item and add in the correct/new entry/item for when changing between 'february = 28 vs february = 29' days, though you can use add/remove for many other game design implications too, of course)\n\nlist add (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, \"NAME_OF_ITEM\") // String Value/Item for a Stringlist Attribute\nlist remove (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, \"NAME_OF_ITEM\") // String Value/Item for a Stringlist Attribute\n\nlist add (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, NAME_OF_ITEM) // Object (reference) Value/Item for an Objectlist Attribute\nlist remove (NAME_OF_OBJECT.NAME_OF_LIST_ATTRIBUTE, NAME_OF_ITEM) // Object (reference) Value/Item for an Objectlist Attribute\n\ndictionary add (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\", \"String_VALUE\") // string dictionary\ndictionary remove (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\") // string dictionary\n\ndictionary add (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\", String_VALUE) // object dictionary\ndictionary remove (NAME_OF_OBJECT.NAME_OF_DICTIONARY_ATTRIBUTE, \"NAME_OF_String_KEY\") // object dictionary\n\n// I'm not sure of the syntax for a Script Dictionary's script item...\n</code></pre>\n\n",
      "PostDate": "2016-11-01T20:58:08.0084601Z",
      "LastEditDate": "2016-11-01T21:57:25.0621189Z"
    },
    {
      "PostId": "66a6bcc1-3111-4eb0-b57a-0caf03974505",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I've ran into a small problem with Pixie's code. When I put in her snippet:\r\n>\r\n> ` player.parent = this.to`\r\n> `  SetInc(6)`\r\n>\r\n> In a room as an exit script then run the game. I get this error:\r\n\r\nIt needs to go into the exit, not the room. The exit has an attribute called \"to\", which is the destination, so the script moves the player there. The room has no such exit, so sets the player's current location to `null`, and errors ensue...\r\n\r\n_His_ code snippet by the way.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I've ran into a small problem with Pixie's code. When I put in her snippet:</p>\n<p><code>player.parent = this.to</code><br>\n<code>SetInc(6)</code></p>\n<p>In a room as an exit script then run the game. I get this error:</p>\n</blockquote>\n<p>It needs to go into the exit, not the room. The exit has an attribute called \"to\", which is the destination, so the script moves the player there. The room has no such exit, so sets the player's current location to <code>null</code>, and errors ensue...</p>\n<p><em>His</em> code snippet by the way.</p>\n\n",
      "PostDate": "2016-11-02T08:01:14.9686153Z",
      "LastEditDate": "2016-11-02T08:01:54.6319889Z"
    },
    {
      "PostId": "fe3d7869-fa72-4f26-bfdf-517acfd24873",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you both, you've both been very helpful to me on this. At this point I'm fully well over my head; I should probably generate some initial story, get the character gen working, and then come back to this after I'm a bit more familiar with how the editor works. That way I have something to actually test with. Hegemokhan I think has pretty much written the rest of the syntax out for me it seems if I read it right. \r\n\r\nAlso thanks for the clarification Pixie. That helps out a lot! Sorry about the Gender thing. Wasn't sure decided going with the default was better than hazarding a guess.\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you both, you've both been very helpful to me on this. At this point I'm fully well over my head; I should probably generate some initial story, get the character gen working, and then come back to this after I'm a bit more familiar with how the editor works. That way I have something to actually test with. Hegemokhan I think has pretty much written the rest of the syntax out for me it seems if I read it right.</p>\n<p>Also thanks for the clarification Pixie. That helps out a lot! Sorry about the Gender thing. Wasn't sure decided going with the default was better than hazarding a guess.</p>\n\n",
      "PostDate": "2016-11-04T02:21:26.7006565Z",
      "LastEditDate": null
    },
    {
      "PostId": "fd799a54-69d3-4ac6-adde-e7f380a71a2b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yep (barring likely mistakes, lol), that's quest's syntax for the stuff (replace my CAPS stuff with what you need to put there, and you can 'name' your stuff however you want too of course --- such as with my list/dictionary Attributes' names --- you don't have to use my naming/labeling system/convention, lol)\r\n\r\n------\r\n\r\nif I can remember now that Pixie is a he/him... so I don't have to use he/she... ARGH... that extra '/she' is a pain... (trying to be respectful is almost not worth it) lol.",
      "EditableFormat": "markdown",
      "HTML": "<p>yep (barring likely mistakes, lol), that's quest's syntax for the stuff (replace my CAPS stuff with what you need to put there, and you can 'name' your stuff however you want too of course --- such as with my list/dictionary Attributes' names --- you don't have to use my naming/labeling system/convention, lol)</p>\n<hr>\n<p>if I can remember now that Pixie is a he/him... so I don't have to use he/she... ARGH... that extra '/she' is a pain... (trying to be respectful is almost not worth it) lol.</p>\n\n",
      "PostDate": "2016-11-04T09:51:25.4649233Z",
      "LastEditDate": "2016-11-04T09:59:42.3398295Z"
    },
    {
      "PostId": "83e4691a-5abf-4537-bc5b-244bda064e90",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey, The Pixie; I'm having trouble locating which part of your library deals with displaying the time in the interface. I thought it was this part of the code, but either I didn't do it right (entirely possible) or I miss read what it's doing. \r\n\r\n```\r\n<function name=\"IncTime\"><![CDATA[\r\n    on ready {\r\n      game_clock.time = game_clock.time + 1\r\n      //msg(\"game_clock.time = \" + game_clock.time)\r\n      //msg(\"game_clock.event = \" + game_clock.event)\r\n      game_clock.minutes = game_clock.time % 60\r\n      game_clock.hours24 = (game_clock.time / 60) % 24\r\n      game_clock.days = game_clock.time / (60 * 24)\r\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\r\n      game_clock.countdown = game_clock.countdown - 1\r\n      //msg(\"Looking for: \" + name)\r\n      o = GetObject(name)\r\n      if (not o = null and HasScript(o, \"look\")) {\r\n        if (game_clock.testing) msg(\"Found: \" + o + \" (\" + o.alias + \")\")\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        do(o, \"look\")\r\n      }\r\n      else if (game_clock.countdown < 0 and HasAttribute(game_clock, \"nextstep\")) {\r\n        if (game_clock.testing) msg(\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        step = game_clock.nextstep\r\n        game_clock.nextstep = null\r\n        do(step, \"look\")\r\n      }\r\n      game.clock = TimeAsString()\r\n    }\r\n  ]]></function>",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey, The Pixie; I'm having trouble locating which part of your library deals with displaying the time in the interface. I thought it was this part of the code, but either I didn't do it right (entirely possible) or I miss read what it's doing.</p>\n<pre><code>&lt;function name=\"IncTime\"&gt;&lt;![CDATA[\n    on ready {\n      game_clock.time = game_clock.time + 1\n      //msg(\"game_clock.time = \" + game_clock.time)\n      //msg(\"game_clock.event = \" + game_clock.event)\n      game_clock.minutes = game_clock.time % 60\n      game_clock.hours24 = (game_clock.time / 60) % 24\n      game_clock.days = game_clock.time / (60 * 24)\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\n      game_clock.countdown = game_clock.countdown - 1\n      //msg(\"Looking for: \" + name)\n      o = GetObject(name)\n      if (not o = null and HasScript(o, \"look\")) {\n        if (game_clock.testing) msg(\"Found: \" + o + \" (\" + o.alias + \")\")\n        // this is used by wait\n        game_clock.event = true\n        do(o, \"look\")\n      }\n      else if (game_clock.countdown &lt; 0 and HasAttribute(game_clock, \"nextstep\")) {\n        if (game_clock.testing) msg(\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\n        // this is used by wait\n        game_clock.event = true\n        step = game_clock.nextstep\n        game_clock.nextstep = null\n        do(step, \"look\")\n      }\n      game.clock = TimeAsString()\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2016-11-11T23:55:01.4688816Z",
      "LastEditDate": null
    },
    {
      "PostId": "5909e83e-719d-4217-be5c-d9e8cf0976c8",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "To get something to display in the interface, you need to set it as a status attribute, either on the game object or the player object, on the _Attributes_ tab. In this case, you would add \"clock\" to the game object.\r\n\r\nThe relevant line from the above function is then the last one:\r\n```\r\ngame.clock = TimeAsString()",
      "EditableFormat": "markdown",
      "HTML": "<p>To get something to display in the interface, you need to set it as a status attribute, either on the game object or the player object, on the <em>Attributes</em> tab. In this case, you would add \"clock\" to the game object.</p>\n<p>The relevant line from the above function is then the last one:</p>\n<pre><code>game.clock = TimeAsString()\n</code></pre>\n\n",
      "PostDate": "2016-11-12T16:21:54.1054711Z",
      "LastEditDate": null
    },
    {
      "PostId": "1d36278c-8c92-4e6d-aee7-73999927d492",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The clock library is limited to 99 days for the events aspect, which expects the day to be a two digit string. If you are not using that, it should work fine (though it would be a good idea to put the start time to day 365 and check everything is okay).\r\n\r\nIntegers in Quest seem to have a limit of a little over 2 billion (2^31 = 2147483648 I guess), after which they become negative with no warning. If you store the date and time as a single integer you are then limited to 68 years (2147483647/365/24/60/60).\r\n\r\nHere is some code for a function that will take a parameter called `days` and calculate a date as a string, counting from the year 2000 up to 2067, returning it as a string.\r\n```\r\nmonths = Split(\"January;February;March;April;May;June;July;August;September;October;November;December\", \";\")\r\nyear = 2000\r\nflag = true\r\nwhile (flag) {\r\n  if (year % 4 = 0) {\r\n    days_this_year = 366\r\n  }\r\n  else {\r\n    days_this_year = 365\r\n  }\r\n  if (day > days_this_year) {\r\n    year = year + 1\r\n    day = day - days_this_year\r\n  }\r\n  else {\r\n    flag = false\r\n  }\r\n}\r\nif (year % 4 = 0) {\r\n  days_in_months = Split(\"31;29;31;30;31;30;31;31;30;31;30;31\", \";\")\r\n}\r\nelse {\r\n  days_in_months = Split(\"31;28;31;30;31;30;31;31;30;31;30;31\", \";\")\r\n}\r\nmonth = 0\r\nfor (i, 0, 11) {\r\n  days_in_month = ToInt(StringListItem(days_in_months, i))\r\n  if (day > days_in_month) {\r\n    month = month + 1\r\n    day = day - days_in_month\r\n  }\r\n  else {\r\n    return (\"\" + day + \"th of \" + StringListItem(months, month) + \", \" + year)\r\n  }\r\n}",
      "EditableFormat": "markdown",
      "HTML": "<p>The clock library is limited to 99 days for the events aspect, which expects the day to be a two digit string. If you are not using that, it should work fine (though it would be a good idea to put the start time to day 365 and check everything is okay).</p>\n<p>Integers in Quest seem to have a limit of a little over 2 billion (2^31 = 2147483648 I guess), after which they become negative with no warning. If you store the date and time as a single integer you are then limited to 68 years (2147483647/365/24/60/60).</p>\n<p>Here is some code for a function that will take a parameter called <code>days</code> and calculate a date as a string, counting from the year 2000 up to 2067, returning it as a string.</p>\n<pre><code>months = Split(\"January;February;March;April;May;June;July;August;September;October;November;December\", \";\")\nyear = 2000\nflag = true\nwhile (flag) {\n  if (year % 4 = 0) {\n    days_this_year = 366\n  }\n  else {\n    days_this_year = 365\n  }\n  if (day &gt; days_this_year) {\n    year = year + 1\n    day = day - days_this_year\n  }\n  else {\n    flag = false\n  }\n}\nif (year % 4 = 0) {\n  days_in_months = Split(\"31;29;31;30;31;30;31;31;30;31;30;31\", \";\")\n}\nelse {\n  days_in_months = Split(\"31;28;31;30;31;30;31;31;30;31;30;31\", \";\")\n}\nmonth = 0\nfor (i, 0, 11) {\n  days_in_month = ToInt(StringListItem(days_in_months, i))\n  if (day &gt; days_in_month) {\n    month = month + 1\n    day = day - days_in_month\n  }\n  else {\n    return (\"\" + day + \"th of \" + StringListItem(months, month) + \", \" + year)\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2016-11-12T17:09:07.337981Z",
      "LastEditDate": null
    },
    {
      "PostId": "e95480b6-1677-4b7a-916f-8faed8590406",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Wow thanks Pixie! I was actually wanting to use the event calculator as well for this; but I didn't see it expecting 2 digits for the time and day as too much of a problem though. Here were my thoughts on this:\r\n\r\nA: If the days were limited to the days in the month; then the days would never go over 2 digits or even close to 99.\r\n      1. This would probably ruin the \"Time since started\" function.\r\nB: With the months portion added in, I could expand the event tracker and look up to include month in it's search.\r\nC: Year would just be a visual for the player and not have any real affect on the events at all. \r\nD: Rolling over to a new year; would mean missed events could and would be able to be done again.\r\nE: Was looking at possibly having a completed flag so specific events didn't get repeated once done.\r\n\r\nI wrote out some code in LUA which is what I'm most familiar with really quickly to illustrate what I'm looking at here. Maybe that will help. Also thanks so much for being patient with me and answering my questions so far. You've all been amazing help to me and I'm learning so much!\r\n\r\n```\r\nfunction clocktime\r\n\r\n-- minutes = m\r\n-- 24 Hour = h\r\n-- 12 Hour = t\r\n-- Days = d\r\n-- Weekday = w\r\n-- Month = n\r\n-- Monthday = x\r\n-- counter = i\r\n\r\nweekday = {{\"Monday\", 1},{\"Tuesday\", 2},{\"Wednesday\", 3},{\"Thursday\", 4},{\"Friday\", 5},{\"Saturday\", 6},{\"Sunday\", 7}}\r\nmonth = {{\"January\", 1},{\"february\", 2},{\"March\", 3},{\"April\", 4},{\"May\", 5},{\"June\", 6},{\"July\", 7},{\"August\", 8},{\"September\", 9},{\"October\", 10},{\"November\", 11},{\"December\", 12}}\r\nendmonth = {{\"January\", 31},{\"february\", 28},{\"March\", 31},{\"April\", 30},{\"May\", 31},{\"June\", 30},{\"July\", 31},{\"August\", 31},{\"September\", 30},{\"October\", 31},{\"November\", 30},{\"December\", 31}}\r\n\r\n\"w, n d t:m\"\r\n\r\nfor i = 1, do\r\n   m = m + i\r\n      if m > 60 then\r\n         m - 60\r\n         h + 1\r\n      andif h > 24 then\r\n         h - 24\r\n         d + 1\r\n      else\r\n         return nil\r\n      end\r\n   end\r\n   if h > 12 then\r\n      t = h - 12\r\n   else\r\n      t = h\r\n   end\r\n   n = month\r\n   if d > endmonth then\r\n      n + 1\r\n   andif n > 12\r\n      n - 12\r\n   else\r\n      return nil\r\n   end\r\nend\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Wow thanks Pixie! I was actually wanting to use the event calculator as well for this; but I didn't see it expecting 2 digits for the time and day as too much of a problem though. Here were my thoughts on this:</p>\n<p>A: If the days were limited to the days in the month; then the days would never go over 2 digits or even close to 99.<br>\n1. This would probably ruin the \"Time since started\" function.<br>\nB: With the months portion added in, I could expand the event tracker and look up to include month in it's search.<br>\nC: Year would just be a visual for the player and not have any real affect on the events at all.<br>\nD: Rolling over to a new year; would mean missed events could and would be able to be done again.<br>\nE: Was looking at possibly having a completed flag so specific events didn't get repeated once done.</p>\n<p>I wrote out some code in LUA which is what I'm most familiar with really quickly to illustrate what I'm looking at here. Maybe that will help. Also thanks so much for being patient with me and answering my questions so far. You've all been amazing help to me and I'm learning so much!</p>\n<pre><code>function clocktime\n\n-- minutes = m\n-- 24 Hour = h\n-- 12 Hour = t\n-- Days = d\n-- Weekday = w\n-- Month = n\n-- Monthday = x\n-- counter = i\n\nweekday = {{\"Monday\", 1},{\"Tuesday\", 2},{\"Wednesday\", 3},{\"Thursday\", 4},{\"Friday\", 5},{\"Saturday\", 6},{\"Sunday\", 7}}\nmonth = {{\"January\", 1},{\"february\", 2},{\"March\", 3},{\"April\", 4},{\"May\", 5},{\"June\", 6},{\"July\", 7},{\"August\", 8},{\"September\", 9},{\"October\", 10},{\"November\", 11},{\"December\", 12}}\nendmonth = {{\"January\", 31},{\"february\", 28},{\"March\", 31},{\"April\", 30},{\"May\", 31},{\"June\", 30},{\"July\", 31},{\"August\", 31},{\"September\", 30},{\"October\", 31},{\"November\", 30},{\"December\", 31}}\n\n\"w, n d t:m\"\n\nfor i = 1, do\n   m = m + i\n      if m &gt; 60 then\n         m - 60\n         h + 1\n      andif h &gt; 24 then\n         h - 24\n         d + 1\n      else\n         return nil\n      end\n   end\n   if h &gt; 12 then\n      t = h - 12\n   else\n      t = h\n   end\n   n = month\n   if d &gt; endmonth then\n      n + 1\n   andif n &gt; 12\n      n - 12\n   else\n      return nil\n   end\nend\n</code></pre>\n\n",
      "PostDate": "2016-11-14T04:56:50.3062598Z",
      "LastEditDate": null
    },
    {
      "PostId": "5d8ff12d-9e2f-4295-a4f3-425038060687",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I guess a second question I have here, is that are we limited to putting the entire date into a single string? Couldn't we use multiple strings or make it so the 'day' keeps going back to 0 when a month is advanced?",
      "EditableFormat": "markdown",
      "HTML": "<p>I guess a second question I have here, is that are we limited to putting the entire date into a single string? Couldn't we use multiple strings or make it so the 'day' keeps going back to 0 when a month is advanced?</p>\n\n",
      "PostDate": "2016-11-14T23:04:10.0800918Z",
      "LastEditDate": null
    },
    {
      "PostId": "c3abb751-583c-496a-9d79-d1858c51af85",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "resetting a value to zero, example:\r\n\r\n(also, look into Dictionary Attributes: String Dictionaries, Object Dictionaries, and/or Script Dictionaries)\r\n\r\n(and/or use a Function and/or a Turnscript)\r\n\r\n(and there's also the modulus operator: %)\r\n\r\n```\r\n// the special 'changedXXX' Script Attribute:\r\n<object name=\"global_data_object\">\r\n  <attr name=\"day_integer_attribute\" type=\"int\">0</attr>\r\n  <attr name=\"month_string_attribute\" type=\"string\">unknown</attr>\r\n  <attr name=\"changedmonth_string_attribute\" type=\"script\">\r\n    this.day_integer_attribute = 1\r\n  </attr>\r\n</object>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>resetting a value to zero, example:</p>\n<p>(also, look into Dictionary Attributes: String Dictionaries, Object Dictionaries, and/or Script Dictionaries)</p>\n<p>(and/or use a Function and/or a Turnscript)</p>\n<p>(and there's also the modulus operator: %)</p>\n<pre><code>// the special 'changedXXX' Script Attribute:\n&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"day_integer_attribute\" type=\"int\"&gt;0&lt;/attr&gt;\n  &lt;attr name=\"month_string_attribute\" type=\"string\"&gt;unknown&lt;/attr&gt;\n  &lt;attr name=\"changedmonth_string_attribute\" type=\"script\"&gt;\n    this.day_integer_attribute = 1\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n\n",
      "PostDate": "2016-11-15T02:53:44.2037626Z",
      "LastEditDate": "2016-11-15T02:59:32.3520542Z"
    },
    {
      "PostId": "84727438-490e-4133-9951-7ab1f9310fb8",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hmmm... I've been looking at some things here with Java. I now know why the integer rolls over to a negative number when it hits that number, and I have some ideas about how to extend it so that value doesn't 'creep' like it does currently and allow people to use essentially an 'endless' system for their events. Don't have anything to present right now, as I'm still plowing through lessons in Java, but I'll get there. On a side note I'm liking the option of using a switch for the month and weekday. That would limit some of the string 'bloat' right there. The biggest roadblock so far is the printing as a string thing. I'm making progress in baby steps but I see a way of doing this the way I want it done. So huge progress at the same time. Your guys help so far has been invaluable as well both in understanding what the code here is doing and what we can do with it.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hmmm... I've been looking at some things here with Java. I now know why the integer rolls over to a negative number when it hits that number, and I have some ideas about how to extend it so that value doesn't 'creep' like it does currently and allow people to use essentially an 'endless' system for their events. Don't have anything to present right now, as I'm still plowing through lessons in Java, but I'll get there. On a side note I'm liking the option of using a switch for the month and weekday. That would limit some of the string 'bloat' right there. The biggest roadblock so far is the printing as a string thing. I'm making progress in baby steps but I see a way of doing this the way I want it done. So huge progress at the same time. Your guys help so far has been invaluable as well both in understanding what the code here is doing and what we can do with it.</p>\n\n",
      "PostDate": "2016-11-23T23:06:07.6861093Z",
      "LastEditDate": null
    },
    {
      "PostId": "050876c3-bfa4-41de-a10a-0b49a68f8eba",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What's the problem with printing as a string, you're having?\r\n\r\n(You seem to know programming, so you should be familiar with string concatenation, and the syntax isn't too difficult, along with an output/string being made up of text or VARIABLE or both)",
      "EditableFormat": "markdown",
      "HTML": "<p>What's the problem with printing as a string, you're having?</p>\n<p>(You seem to know programming, so you should be familiar with string concatenation, and the syntax isn't too difficult, along with an output/string being made up of text or VARIABLE or both)</p>\n\n",
      "PostDate": "2016-11-24T05:56:41.6672427Z",
      "LastEditDate": null
    },
    {
      "PostId": "34c0a544-4b5e-4fdc-9364-00c044ab3f32",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The problem is the string cap. +- 2147483648 is the max Java allows before it rolls over, and with the system in place would allow for ~67 years. While this is more than sufficient  for what I want to do right now. (I'm well on my way to creation) I am looking at ways of extending this and to keep the integer as low as possible. \r\n\r\nI was looking at doing this by moving the more 'static' information like Weekday and Month away from the print as string function or having separate strings for the various parts. Looking for efficiency and completion in case at some point in the future wants something that could be considered 'limitless' like a game with DND elves that a player could potentially play for 1800 years. Could even include custom number of months per year, or days per week.\r\n\r\nBesides it's far better than reaching X turn and being confronted with \"You have a heart attack from old age, you are dead\". Because the code will literally fail if the string goes past that.",
      "EditableFormat": "markdown",
      "HTML": "<p>The problem is the string cap. +- 2147483648 is the max Java allows before it rolls over, and with the system in place would allow for ~67 years. While this is more than sufficient  for what I want to do right now. (I'm well on my way to creation) I am looking at ways of extending this and to keep the integer as low as possible.</p>\n<p>I was looking at doing this by moving the more 'static' information like Weekday and Month away from the print as string function or having separate strings for the various parts. Looking for efficiency and completion in case at some point in the future wants something that could be considered 'limitless' like a game with DND elves that a player could potentially play for 1800 years. Could even include custom number of months per year, or days per week.</p>\n<p>Besides it's far better than reaching X turn and being confronted with \"You have a heart attack from old age, you are dead\". Because the code will literally fail if the string goes past that.</p>\n\n",
      "PostDate": "2016-11-25T00:38:21.5883479Z",
      "LastEditDate": null
    },
    {
      "PostId": "e25ef282-aa99-462b-abeb-1d97a4f7e85b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ah... the issue is the data type size limitation with java/css stuff or whatever it is you're doing... there's various designs/methods/ways of handling/dealing-with it... which you'are probably more familiar/creative with, then I am.",
      "EditableFormat": "markdown",
      "HTML": "<p>ah... the issue is the data type size limitation with java/css stuff or whatever it is you're doing... there's various designs/methods/ways of handling/dealing-with it... which you'are probably more familiar/creative with, then I am.</p>\n\n",
      "PostDate": "2016-11-25T05:32:19.1358183Z",
      "LastEditDate": null
    },
    {
      "PostId": "729978c8-76ba-4fe8-98fd-9a87f602ff38",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sooo... I may have been dumb here and miss read something wasting two weeks of time. Quest uses Java or JavaScript for the coding it does? I'm having a blonde moment and cannot find the info on the website.",
      "EditableFormat": "markdown",
      "HTML": "<p>Sooo... I may have been dumb here and miss read something wasting two weeks of time. Quest uses Java or JavaScript for the coding it does? I'm having a blonde moment and cannot find the info on the website.</p>\n\n",
      "PostDate": "2016-12-08T22:50:41.3691978Z",
      "LastEditDate": null
    },
    {
      "PostId": "5653d51a-c543-49f7-beb0-7b0bb4d4c943",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Quest uses it's own coding language, 'aslx', it has two types of coding: (1) the 'xml/html'-like*** (ie web languages) 'creation tag block/line' code it uses, it also can use JS (JavaScript, a scripting only language I think - I don't know/not-learned 'JS' yet, 'JS' is NOT the same as the 'Java' programming language), but-and (2) quest's scripting code syntax is similiar to 'C++/Java', and quest also has similiar features (Lists/Dictionaries) to those found in the 'Python' programming language.\r\n\r\nPython is more popular in Europe, C++ and Java is more popular in the U.S., though Python is gaining some popularity here now.\r\n\r\n-------\r\n\r\nif you're interested, I highly recommend downloading notepad++, and if you do download it, once you got it installed and opened up, select 'xml' as the coding language (there's a 'language' option/drop-down in its menu bar at the top), and it will color-code for you, and I haven't noticed any issues with choosing 'xml', as it seems to work fine for quest's language. Notepad++ is also really nice as it has most/many programming language choices for color coding\r\n\r\nhttps://notepad-plus-plus.org/\r\n\r\nit's just an text-code editor software, it's not a full blown SDK/IDE software like VS (Visual Studio), NetBeans, Eclipse, etc\r\n\r\n---------------\r\n\r\n.***\r\n```\r\n<xxx>xxx</xxx>\r\n\r\nor\r\n\r\n<xxx>\r\n  xxx\r\n</xxx>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Quest uses it's own coding language, 'aslx', it has two types of coding: (1) the 'xml/html'-like*** (ie web languages) 'creation tag block/line' code it uses, it also can use JS (JavaScript, a scripting only language I think - I don't know/not-learned 'JS' yet, 'JS' is NOT the same as the 'Java' programming language), but-and (2) quest's scripting code syntax is similiar to 'C++/Java', and quest also has similiar features (Lists/Dictionaries) to those found in the 'Python' programming language.</p>\n<p>Python is more popular in Europe, C++ and Java is more popular in the U.S., though Python is gaining some popularity here now.</p>\n<hr>\n<p>if you're interested, I highly recommend downloading notepad++, and if you do download it, once you got it installed and opened up, select 'xml' as the coding language (there's a 'language' option/drop-down in its menu bar at the top), and it will color-code for you, and I haven't noticed any issues with choosing 'xml', as it seems to work fine for quest's language. Notepad++ is also really nice as it has most/many programming language choices for color coding</p>\n<p>https://notepad-plus-plus.org/</p>\n<p>it's just an text-code editor software, it's not a full blown SDK/IDE software like VS (Visual Studio), NetBeans, Eclipse, etc</p>\n<hr>\n<p>.***</p>\n<pre><code>&lt;xxx&gt;xxx&lt;/xxx&gt;\n\nor\n\n&lt;xxx&gt;\n  xxx\n&lt;/xxx&gt;\n</code></pre>\n\n",
      "PostDate": "2016-12-08T23:39:10.4551939Z",
      "LastEditDate": "2016-12-08T23:54:57.2465091Z"
    },
    {
      "PostId": "36caba36-1b22-4f82-a715-7f349e2f187a",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay that was what was confusing me. The coding format I'm seeing is XML based. While I've been working in Java to do this as it felt the best to work with. I just want to know if Quest will accept Java or Javascript at this point?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay that was what was confusing me. The coding format I'm seeing is XML based. While I've been working in Java to do this as it felt the best to work with. I just want to know if Quest will accept Java or Javascript at this point?</p>\n\n",
      "PostDate": "2016-12-10T19:13:24.7599807Z",
      "LastEditDate": null
    },
    {
      "PostId": "1975ca98-1de9-43f7-8078-ab78edfce4e2",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "No. It uses its own language (as well as XML), which is somewhat Java-like, but not Java. You can use JavaScript in the interface, but not to do this kind of stuff.",
      "EditableFormat": "markdown",
      "HTML": "<p>No. It uses its own language (as well as XML), which is somewhat Java-like, but not Java. You can use JavaScript in the interface, but not to do this kind of stuff.</p>\n\n",
      "PostDate": "2016-12-10T19:24:42.9429724Z",
      "LastEditDate": null
    },
    {
      "PostId": "ffeecb3b-a626-49ad-b5fc-bc521513be3b",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to share the progress I've made on this. It's all based off of Pixie's Clock function. I'm basically taking that and expanding it to fulfill what I need. Also I'm only including the parts that have been edited from her original, there's a lot of code here as it is.\r\n\r\n```\r\n  <object name=\"game_clock\">\r\n    <inherit name=\"editor_object\" />\r\n    <time type=\"int\">0</time>\r\n    <minutes type=\"int\">0</minutes>\r\n    <hours24 type=\"int\">0</hours24>\r\n    <days type=\"int\">1</days>\r\n\t<week type=\"int\">1</week>\r\n\t<month type=\"int\">1</month>\r\n\t<year type=\"int\">2000</year>\r\n\t<attr name=\"monthofYear\" type=\"simplestringdictionary\"> 1=January;2=February;3=March;4=April;5=May;6=June;7=July;8=August;9=September;10=October;11=November;12=December;</attr>\r\n\t<attr name=\"dayofWeek\" type=\"simplestringdictionary\">1=Sunday;2=Monday;3=Tuesday;4=Wednesday;5=Thursday;6=Friday;7=Saturday;</attr>\r\n    <countdown type=\"int\">0</countdown>\r\n    <increment type=\"int\">0</increment>\r\n    <waittime type=\"int\">15</waittime>\r\n    <testing type=\"boolean\">false</testing>\r\n    <clockmsg>You take your fob watch from your pocket, and look at it. It's ###.</clockmsg>\r\n    <changedtime type=\"script\">\r\n      JS.eval(\"$('#clock').html('\" + TimeAsString() + \"');\")\r\n    </changedtime>\r\n  </object>\r\n\r\n  <function name=\"TimeAsString\" type=\"string\"><![CDATA[\r\n    hours = game_clock.hours24 % 12\r\n    if (hours = 0) {\r\n      hours = 12\r\n    }\r\n    s = dayofWeek + \", \" + monthofYear + \" \" + dayofMonth + \" \" + 12hourDay + \":\" + minuteofHour\r\n    if (game_clock.hours24 < 12) {\r\n      return (s + \" am\")\r\n    }\r\n    else {\r\n      return (s + \" pm\")\r\n    }\r\n  ]]></function>\r\n\r\n  <function name=\"IncTime\"><![CDATA[\r\n    on ready {\r\n    game_clock.minutes = game_clock.minutes + 1\r\n      //msg(\"game_clock.time = \" + game_clock.time)\r\n      //msg(\"game_clock.event = \" + game_clock.event)\r\n    if (game_clock.minutes > 60) {\r\n\t\tgame_clock.minutes = 0\r\n\t\tgame_clock.hours = game_clock.hours24 + 1\t  \r\n\t\t}\r\n\telse {\r\n\t\tgame_clock.minutes = game_clock.minutes\r\n\t\t}\r\n\tif (game_clock.hours24 > 24) {\r\n\t\tgame_clock.hours24 = 0\r\n\t\tgame_clock.days = game_clock.days + 1\r\n\t\tgame_clock.weeks = game_clock.weeks + 1\r\n\t\t}\r\n\telse {\r\n\t\tgame_clock.hours24 = game_clock.hours24\r\n\t\t}\r\n\tif (game_clock.weeks > 7) {\r\n\t\tgame_clock.weeks = 1\r\n\t\t}\r\n\telse {\r\n\t\tgame_clock.weeks = game_clock.weeks\r\n\t\t}\r\n\tif (year % 4 = 0) {\r\n\t\tdays_in_months = Split(\"31;29;31;30;31;30;31;31;30;31;30;31\", \";\")\r\n\t\t}\r\n\telse {\r\n\t\tdays_in_months = Split(\"31;28;31;30;31;30;31;31;30;31;30;31\", \";\")\r\n\t\t}\r\n\tmonth = 0\r\n\tfor (p, 0, 11) {\r\n\t\tdays_in_month = ToInt(StringListItem(days_in_months, p))\r\n\t\tif (day > days_in_month) {\r\n\t\t\tmonth = month + 1\r\n\t\t\tday = day - days_in_month\r\n\t\t\t}\r\n\t\telse {\r\n//intentionally left blank\r\n\t\t\t}\r\n\t\t}\r\n\r\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\r\n      game_clock.countdown = game_clock.countdown - 1\r\n      //msg(\"Looking for: \" + name)\r\n      o = GetObject(name)\r\n      if (not o = null and HasScript(o, \"look\")) {\r\n        if (game_clock.testing) msg(\"Found: \" + o + \" (\" + o.alias + \")\")\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        do(o, \"look\")\r\n      }\r\n      else if (game_clock.countdown < 0 and HasAttribute(game_clock, \"nextstep\")) {\r\n        if (game_clock.testing) msg(\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\r\n        // this is used by wait\r\n        game_clock.event = true\r\n        step = game_clock.nextstep\r\n        game_clock.nextstep = null\r\n        do(step, \"look\")\r\n      }\r\n      game.clock = TimeAsString()\r\n    }\r\n  ]]></function>\r\n```\r\nNo I'm not an experienced coder; more of a beginner if I was to rate myself in code at all. My understanding is purely from my understanding of logic systems. So if there are errors in what you see please let me know so I can squash the bugs now instead of later.\r\n\r\nAlso I was looking at the Functions List and didn't see a command to 'return nil'? What I'd like to do is use a Boolean function to check all these if/else statements and just run the conditions because they don't need an else. I'm not at that point yet in learning how to write that yet though. The way I have it works, but the other way is a lot cleaner.",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to share the progress I've made on this. It's all based off of Pixie's Clock function. I'm basically taking that and expanding it to fulfill what I need. Also I'm only including the parts that have been edited from her original, there's a lot of code here as it is.</p>\n<pre><code>  &lt;object name=\"game_clock\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;time type=\"int\"&gt;0&lt;/time&gt;\n    &lt;minutes type=\"int\"&gt;0&lt;/minutes&gt;\n    &lt;hours24 type=\"int\"&gt;0&lt;/hours24&gt;\n    &lt;days type=\"int\"&gt;1&lt;/days&gt;\n\t&lt;week type=\"int\"&gt;1&lt;/week&gt;\n\t&lt;month type=\"int\"&gt;1&lt;/month&gt;\n\t&lt;year type=\"int\"&gt;2000&lt;/year&gt;\n\t&lt;attr name=\"monthofYear\" type=\"simplestringdictionary\"&gt; 1=January;2=February;3=March;4=April;5=May;6=June;7=July;8=August;9=September;10=October;11=November;12=December;&lt;/attr&gt;\n\t&lt;attr name=\"dayofWeek\" type=\"simplestringdictionary\"&gt;1=Sunday;2=Monday;3=Tuesday;4=Wednesday;5=Thursday;6=Friday;7=Saturday;&lt;/attr&gt;\n    &lt;countdown type=\"int\"&gt;0&lt;/countdown&gt;\n    &lt;increment type=\"int\"&gt;0&lt;/increment&gt;\n    &lt;waittime type=\"int\"&gt;15&lt;/waittime&gt;\n    &lt;testing type=\"boolean\"&gt;false&lt;/testing&gt;\n    &lt;clockmsg&gt;You take your fob watch from your pocket, and look at it. It's ###.&lt;/clockmsg&gt;\n    &lt;changedtime type=\"script\"&gt;\n      JS.eval(\"$('#clock').html('\" + TimeAsString() + \"');\")\n    &lt;/changedtime&gt;\n  &lt;/object&gt;\n\n  &lt;function name=\"TimeAsString\" type=\"string\"&gt;&lt;![CDATA[\n    hours = game_clock.hours24 % 12\n    if (hours = 0) {\n      hours = 12\n    }\n    s = dayofWeek + \", \" + monthofYear + \" \" + dayofMonth + \" \" + 12hourDay + \":\" + minuteofHour\n    if (game_clock.hours24 &lt; 12) {\n      return (s + \" am\")\n    }\n    else {\n      return (s + \" pm\")\n    }\n  ]]&gt;&lt;/function&gt;\n\n  &lt;function name=\"IncTime\"&gt;&lt;![CDATA[\n    on ready {\n    game_clock.minutes = game_clock.minutes + 1\n      //msg(\"game_clock.time = \" + game_clock.time)\n      //msg(\"game_clock.event = \" + game_clock.event)\n    if (game_clock.minutes &gt; 60) {\n\t\tgame_clock.minutes = 0\n\t\tgame_clock.hours = game_clock.hours24 + 1\t  \n\t\t}\n\telse {\n\t\tgame_clock.minutes = game_clock.minutes\n\t\t}\n\tif (game_clock.hours24 &gt; 24) {\n\t\tgame_clock.hours24 = 0\n\t\tgame_clock.days = game_clock.days + 1\n\t\tgame_clock.weeks = game_clock.weeks + 1\n\t\t}\n\telse {\n\t\tgame_clock.hours24 = game_clock.hours24\n\t\t}\n\tif (game_clock.weeks &gt; 7) {\n\t\tgame_clock.weeks = 1\n\t\t}\n\telse {\n\t\tgame_clock.weeks = game_clock.weeks\n\t\t}\n\tif (year % 4 = 0) {\n\t\tdays_in_months = Split(\"31;29;31;30;31;30;31;31;30;31;30;31\", \";\")\n\t\t}\n\telse {\n\t\tdays_in_months = Split(\"31;28;31;30;31;30;31;31;30;31;30;31\", \";\")\n\t\t}\n\tmonth = 0\n\tfor (p, 0, 11) {\n\t\tdays_in_month = ToInt(StringListItem(days_in_months, p))\n\t\tif (day &gt; days_in_month) {\n\t\t\tmonth = month + 1\n\t\t\tday = day - days_in_month\n\t\t\t}\n\t\telse {\n//intentionally left blank\n\t\t\t}\n\t\t}\n\n      name = \"event_\" + DD(game_clock.days) + \"_\" + DD(game_clock.hours24) + \"_\" + DD(game_clock.minutes)\n      game_clock.countdown = game_clock.countdown - 1\n      //msg(\"Looking for: \" + name)\n      o = GetObject(name)\n      if (not o = null and HasScript(o, \"look\")) {\n        if (game_clock.testing) msg(\"Found: \" + o + \" (\" + o.alias + \")\")\n        // this is used by wait\n        game_clock.event = true\n        do(o, \"look\")\n      }\n      else if (game_clock.countdown &lt; 0 and HasAttribute(game_clock, \"nextstep\")) {\n        if (game_clock.testing) msg(\"Step found: \" + game_clock.nextstep + \" (\" + game_clock.nextstep.alias + \")\")\n        // this is used by wait\n        game_clock.event = true\n        step = game_clock.nextstep\n        game_clock.nextstep = null\n        do(step, \"look\")\n      }\n      game.clock = TimeAsString()\n    }\n  ]]&gt;&lt;/function&gt;\n</code></pre>\n<p>No I'm not an experienced coder; more of a beginner if I was to rate myself in code at all. My understanding is purely from my understanding of logic systems. So if there are errors in what you see please let me know so I can squash the bugs now instead of later.</p>\n<p>Also I was looking at the Functions List and didn't see a command to 'return nil'? What I'd like to do is use a Boolean function to check all these if/else statements and just run the conditions because they don't need an else. I'm not at that point yet in learning how to write that yet though. The way I have it works, but the other way is a lot cleaner.</p>\n\n",
      "PostDate": "2016-12-14T23:13:00.7739705Z",
      "LastEditDate": null
    },
    {
      "PostId": "13e92182-f68d-4350-97b9-5f35d19f6036",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "quest does have the 'null' Value/Data~Atttribute type, Functions have to have a return type specified, but for whatever the data type for the return type you specify, you should be able to return the 'null' value for it.\r\n\r\nhttp://docs.textadventures.co.uk/quest/types/null.html\r\n^^^^^^^\r\nhttp://docs.textadventures.co.uk/quest/types/ ",
      "EditableFormat": "markdown",
      "HTML": "<p>quest does have the 'null' Value/Data~Atttribute type, Functions have to have a return type specified, but for whatever the data type for the return type you specify, you should be able to return the 'null' value for it.</p>\n<p>http://docs.textadventures.co.uk/quest/types/null.html<br>\n^^^^^^^<br>\nhttp://docs.textadventures.co.uk/quest/types/</p>\n\n",
      "PostDate": "2016-12-15T07:38:01.79899Z",
      "LastEditDate": "2016-12-15T07:39:09.6805831Z"
    },
    {
      "PostId": "e0dcd597-1d56-46d9-9b50-08d60fbb481b",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks! That solves one issue, now I can essentially put all the else parts to 'return null' to close them. Still would rather not use the if/else statements here but my brain can't seem to figure out a better method; but knows there should be one.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks! That solves one issue, now I can essentially put all the else parts to 'return null' to close them. Still would rather not use the if/else statements here but my brain can't seem to figure out a better method; but knows there should be one.</p>\n\n",
      "PostDate": "2016-12-15T14:42:56.1355646Z",
      "LastEditDate": null
    },
    {
      "PostId": "a3afc870-f404-4d21-814c-05f84f5e3c2b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "you can actually just not have the 'else' line/block too:\r\n\r\n```\r\nif (orc.dead) {\r\n  msg (\"The orc is dead\")\r\n}\r\n// (implied else: obviously without an else, nothing / no action occurs when the 'if' condition fails, it just moves on to it's next script/action/game-play/whatever)\r\n\r\nor you can leave the else's action/script blank:\r\n\r\nif (orc.dead) {\r\n  msg (\"The orc is dead\")\r\n}\r\nelse {}\r\n\r\n------\r\n\r\nexamples of more/different styles for the brackets/braces (you can do this for all bracing/brackets, so all of the styles below can be done for the 'if' line as well as any line of code using/needing braces/brackets. I'm not sure if quest requires new-lines or if it can all be done on one line, but this is never done, regardless, as it's unreadable by humans):\r\n\r\nif (orc.dead) {\r\n  msg (\"The orc is dead\")\r\n}\r\nelse {\r\n}\r\n\r\nor\r\n\r\nif (orc.dead)\r\n{\r\n  msg (\"The orc is dead\")\r\n}\r\nelse\r\n{\r\n}\r\n\r\nor\r\n\r\nif (orc.dead)\r\n{\r\n  msg (\"The orc is dead\")\r\n}\r\nelse\r\n{}\r\n\r\n------ VS -----------\r\n\r\nif (orc.dead) {\r\n  msg (\"The orc is dead\")\r\n} else {\r\n  msg (\"The orc is alive\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>you can actually just not have the 'else' line/block too:</p>\n<pre><code>if (orc.dead) {\n  msg (\"The orc is dead\")\n}\n// (implied else: obviously without an else, nothing / no action occurs when the 'if' condition fails, it just moves on to it's next script/action/game-play/whatever)\n\nor you can leave the else's action/script blank:\n\nif (orc.dead) {\n  msg (\"The orc is dead\")\n}\nelse {}\n\n------\n\nexamples of more/different styles for the brackets/braces (you can do this for all bracing/brackets, so all of the styles below can be done for the 'if' line as well as any line of code using/needing braces/brackets. I'm not sure if quest requires new-lines or if it can all be done on one line, but this is never done, regardless, as it's unreadable by humans):\n\nif (orc.dead) {\n  msg (\"The orc is dead\")\n}\nelse {\n}\n\nor\n\nif (orc.dead)\n{\n  msg (\"The orc is dead\")\n}\nelse\n{\n}\n\nor\n\nif (orc.dead)\n{\n  msg (\"The orc is dead\")\n}\nelse\n{}\n\n------ VS -----------\n\nif (orc.dead) {\n  msg (\"The orc is dead\")\n} else {\n  msg (\"The orc is alive\")\n}\n</code></pre>\n\n",
      "PostDate": "2016-12-16T04:13:04.9991691Z",
      "LastEditDate": "2016-12-17T07:50:15.5066687Z"
    },
    {
      "PostId": "95e875b4-31f9-4154-813a-b685cb132cad",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So you're saying I can do just\r\n\r\n```\r\n    if (game_clock.minutes > 60) {\r\n\t\tgame_clock.minutes = 0\r\n\t\tgame_clock.hours = game_clock.hours24 + 1\t  \r\n\t\t}\r\n```\r\n\r\n... and just omit the else statement completely? That would be really nice for what I am doing here. I know some languages have problems with that though.",
      "EditableFormat": "markdown",
      "HTML": "<p>So you're saying I can do just</p>\n<pre><code>    if (game_clock.minutes &gt; 60) {\n\t\tgame_clock.minutes = 0\n\t\tgame_clock.hours = game_clock.hours24 + 1\t  \n\t\t}\n</code></pre>\n<p>... and just omit the else statement completely? That would be really nice for what I am doing here. I know some languages have problems with that though.</p>\n\n",
      "PostDate": "2016-12-16T14:39:43.61248Z",
      "LastEditDate": null
    },
    {
      "PostId": "5234d72b-8c2e-4ae7-993b-813f0dda7b72",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "yep, exactly. the 'else' (and 'else if/s') condition(s) is(are) completely OPTIONAL:\r\n\r\neither don't even code in the 'else' (if doing in code) or you jsut leave the 'else' condition's script-action, blank (don't add any script to/for it)\r\n\r\n------------\r\n\r\nhere's the 4 combinations of the 'if block' :\r\n\r\n(negation/not can be applied of course, but I'm not including the negations/nots here as combinations)\r\n\r\n```\r\n1. an 'if' if block:\r\n\r\nif (CONDITION) {\r\n  // script/action\r\n}\r\n\r\nor, for example if doing strickly via the GUI/Editor (not technically an 'if' if block, but has the same effect as an 'if' if block):\r\n\r\nif (CONDITION) {\r\n  // script/action\r\n} else {\r\n  // (leave this blank --- don't add in any script/action here)\r\n}\r\n\r\n2. an 'if-else' if block:\r\n\r\nif (CONDITION) {\r\n  // script/action\r\n} else {\r\n  // script/action\r\n}\r\n\r\n3. an 'if-else if' if block:\r\n\r\nif (CONDITION) {\r\n  // script/action\r\n} else if (CONDITION) {\r\n  // script/action\r\n}\r\n// optionally: etc/more 'else ifs' as you want/need\r\n\r\n4. an 'if-else if-else' if block:\r\n\r\nif (CONDITION) {\r\n  // script/action\r\n} else if (CONDITION) {\r\n  // script/action\r\n}\r\n// optionally: etc/more 'else ifs' as you want/need\r\nelse {\r\n  // script/action\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>yep, exactly. the 'else' (and 'else if/s') condition(s) is(are) completely OPTIONAL:</p>\n<p>either don't even code in the 'else' (if doing in code) or you jsut leave the 'else' condition's script-action, blank (don't add any script to/for it)</p>\n<hr>\n<p>here's the 4 combinations of the 'if block' :</p>\n<p>(negation/not can be applied of course, but I'm not including the negations/nots here as combinations)</p>\n<pre><code>1. an 'if' if block:\n\nif (CONDITION) {\n  // script/action\n}\n\nor, for example if doing strickly via the GUI/Editor (not technically an 'if' if block, but has the same effect as an 'if' if block):\n\nif (CONDITION) {\n  // script/action\n} else {\n  // (leave this blank --- don't add in any script/action here)\n}\n\n2. an 'if-else' if block:\n\nif (CONDITION) {\n  // script/action\n} else {\n  // script/action\n}\n\n3. an 'if-else if' if block:\n\nif (CONDITION) {\n  // script/action\n} else if (CONDITION) {\n  // script/action\n}\n// optionally: etc/more 'else ifs' as you want/need\n\n4. an 'if-else if-else' if block:\n\nif (CONDITION) {\n  // script/action\n} else if (CONDITION) {\n  // script/action\n}\n// optionally: etc/more 'else ifs' as you want/need\nelse {\n  // script/action\n}\n</code></pre>\n\n",
      "PostDate": "2016-12-17T07:34:38.7010954Z",
      "LastEditDate": "2016-12-17T07:58:30.7702503Z"
    },
    {
      "PostId": "82893a6b-844a-448d-9955-468e6ea6183a",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay so I've gotten to a point where I wanted to test my work in quest and naturally I have errors. I'm kind of expecting this to have a lot of errors right now. This just was not the error I was expecting. This is what I'm getting and I have no idea as to why since this has been built within Pixie's clock framework. Any hints as to what's going on?\r\n\r\n```\r\nFailed to load game due to the following errors:\r\nError: Error adding type 'editor_object' to element 'game_clock': No element 'editor_object' of type 'ObjectType'\r\n```\r\nMy guess is it's not liking this section of code: \r\n\r\n```\r\n  <object name=\"game_clock\">\r\n    <inherit name=\"editor_object\" />\r\n    <time type=\"int\">0</time>\r\n    <minutes type=\"int\">0</minutes>\r\n    <hours24 type=\"int\">0</hours24>\r\n    <days type=\"int\">1</days>\r\n\t<week type=\"int\">1</week>\r\n\t<month type=\"int\">1</month>\r\n\t<year type=\"int\">2000</year>\r\n\t<attr name=\"monthofYear\" type=\"simplestringdictionary\"> 1=January;2=February;3=March;4=April;5=May;6=June;7=July;8=August;9=September;10=October;11=November;12=December;</attr>\r\n\t<attr name=\"dayofWeek\" type=\"simplestringdictionary\">1=Sunday;2=Monday;3=Tuesday;4=Wednesday;5=Thursday;6=Friday;7=Saturday;</attr>\r\n    <countdown type=\"int\">0</countdown>\r\n    <increment type=\"int\">0</increment>\r\n    <waittime type=\"int\">15</waittime>\r\n    <testing type=\"boolean\">false</testing>\r\n    <clockmsg>You take your fob watch from your pocket, and look at it. It's ###.</clockmsg>\r\n    <changedtime type=\"script\">\r\n      JS.eval(\"$('#clock').html('\" + TimeAsString() + \"');\")\r\n    </changedtime>\r\n  </object>\r\n```\r\nSpecifically the ``` <inherit name=\"editor_object\" /> ``` section of the code; but after looking at it and going through the website and Pixies original code. I can't see the reason why for the life of me this is popping up. When his original works just fine.",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay so I've gotten to a point where I wanted to test my work in quest and naturally I have errors. I'm kind of expecting this to have a lot of errors right now. This just was not the error I was expecting. This is what I'm getting and I have no idea as to why since this has been built within Pixie's clock framework. Any hints as to what's going on?</p>\n<pre><code>Failed to load game due to the following errors:\nError: Error adding type 'editor_object' to element 'game_clock': No element 'editor_object' of type 'ObjectType'\n</code></pre>\n<p>My guess is it's not liking this section of code:</p>\n<pre><code>  &lt;object name=\"game_clock\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;time type=\"int\"&gt;0&lt;/time&gt;\n    &lt;minutes type=\"int\"&gt;0&lt;/minutes&gt;\n    &lt;hours24 type=\"int\"&gt;0&lt;/hours24&gt;\n    &lt;days type=\"int\"&gt;1&lt;/days&gt;\n\t&lt;week type=\"int\"&gt;1&lt;/week&gt;\n\t&lt;month type=\"int\"&gt;1&lt;/month&gt;\n\t&lt;year type=\"int\"&gt;2000&lt;/year&gt;\n\t&lt;attr name=\"monthofYear\" type=\"simplestringdictionary\"&gt; 1=January;2=February;3=March;4=April;5=May;6=June;7=July;8=August;9=September;10=October;11=November;12=December;&lt;/attr&gt;\n\t&lt;attr name=\"dayofWeek\" type=\"simplestringdictionary\"&gt;1=Sunday;2=Monday;3=Tuesday;4=Wednesday;5=Thursday;6=Friday;7=Saturday;&lt;/attr&gt;\n    &lt;countdown type=\"int\"&gt;0&lt;/countdown&gt;\n    &lt;increment type=\"int\"&gt;0&lt;/increment&gt;\n    &lt;waittime type=\"int\"&gt;15&lt;/waittime&gt;\n    &lt;testing type=\"boolean\"&gt;false&lt;/testing&gt;\n    &lt;clockmsg&gt;You take your fob watch from your pocket, and look at it. It's ###.&lt;/clockmsg&gt;\n    &lt;changedtime type=\"script\"&gt;\n      JS.eval(\"$('#clock').html('\" + TimeAsString() + \"');\")\n    &lt;/changedtime&gt;\n  &lt;/object&gt;\n</code></pre>\n<p>Specifically the <code>&lt;inherit name=\"editor_object\" /&gt;</code> section of the code; but after looking at it and going through the website and Pixies original code. I can't see the reason why for the life of me this is popping up. When his original works just fine.</p>\n\n",
      "PostDate": "2016-12-20T21:03:19.6055303Z",
      "LastEditDate": "2016-12-20T21:04:25.7507941Z"
    },
    {
      "PostId": "5bfcfb6c-e254-44c1-87d1-2a9f870b130f",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Sounds like you are missing the core library. In full code, the top four lines should look like this:\r\n```\r\n<!--Saved by Quest 5.6.6108.15891-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n```\r\nWhat do you see? Are you editing this outside of Quest?",
      "EditableFormat": "markdown",
      "HTML": "<p>Sounds like you are missing the core library. In full code, the top four lines should look like this:</p>\n<pre><code>&lt;!--Saved by Quest 5.6.6108.15891--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n</code></pre>\n<p>What do you see? Are you editing this outside of Quest?</p>\n\n",
      "PostDate": "2016-12-20T21:44:18.9556706Z",
      "LastEditDate": null
    },
    {
      "PostId": "e7952984-01f0-4ea8-96ca-a53165ded7a9",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That was it! Thanks Pixie! I seriously have no idea how that happened. While I'm using notepad++ to edit the clocklib with it formatted to display XML as it's language. I've not touched the game I'm using to test it in. So somewhere between saves in the quest editor I must have accidentally deleted the core library and not noticed.\r\n\r\nNow onto the actual getting this working part. I can write code for months, but it doesn't do me any good if I can't test it and make sure it works! .... - and it means probably another million and a half questions from me as I run into things I don't understand.",
      "EditableFormat": "markdown",
      "HTML": "<p>That was it! Thanks Pixie! I seriously have no idea how that happened. While I'm using notepad++ to edit the clocklib with it formatted to display XML as it's language. I've not touched the game I'm using to test it in. So somewhere between saves in the quest editor I must have accidentally deleted the core library and not noticed.</p>\n<p>Now onto the actual getting this working part. I can write code for months, but it doesn't do me any good if I can't test it and make sure it works! .... - and it means probably another million and a half questions from me as I run into things I don't understand.</p>\n\n",
      "PostDate": "2016-12-20T22:17:26.1281123Z",
      "LastEditDate": null
    },
    {
      "PostId": "83fa58f6-495b-4923-b052-707656318c10",
      "UserId": 271880,
      "Username": "Morodin",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0b800f253a05cadec3bc6de58fe67761?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, I am being dumb again, must be the holiday eggnog. Either that or losing my 1 TB drive over the holidays addled me more than I thought. I'm going with the former; my eggnog hangovers aren't that bad. :-P This is what I'm getting:\r\n\r\n```\r\nError running script: Error compiling expression 'currentWeekday + \", \" + curentMonth + \" \" + dayofMonth + \" \" + 12hourDay + \":\" + minuteofHour': Unknown object or variable 'currentWeekday'\r\n\r\nError running script: Error compiling expression 'toInt(StringListItem(dayofWeek, w))': Unknown object or variable 'dayofWeek'\r\n```\r\nThe first comes up when I run the game the second appears when switching rooms. Is this because I've not fully converted Pixie's code over yet. Or did I actually code this wrong and miss something?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, I am being dumb again, must be the holiday eggnog. Either that or losing my 1 TB drive over the holidays addled me more than I thought. I'm going with the former; my eggnog hangovers aren't that bad. :-P This is what I'm getting:</p>\n<pre><code>Error running script: Error compiling expression 'currentWeekday + \", \" + curentMonth + \" \" + dayofMonth + \" \" + 12hourDay + \":\" + minuteofHour': Unknown object or variable 'currentWeekday'\n\nError running script: Error compiling expression 'toInt(StringListItem(dayofWeek, w))': Unknown object or variable 'dayofWeek'\n</code></pre>\n<p>The first comes up when I run the game the second appears when switching rooms. Is this because I've not fully converted Pixie's code over yet. Or did I actually code this wrong and miss something?</p>\n\n",
      "PostDate": "2017-01-08T22:54:35.8935634Z",
      "LastEditDate": null
    },
    {
      "PostId": "7d8c2f43-a979-4093-b9db-0fe6731beeeb",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "both are just coding errors (this is the majority of coding/programming: you're not coding... you're fixing up your mistakes, spelling mistakes or typos or accidental spaces from highlighting and copying or forgotten symbol/parenthesis/brace/bracket/etc, etc etc etc, lol), you just need to fix your code up.\r\n\r\nfrom the looks of them, it's likely you just need to create those Attributes for whatever the Object (or they're Variables if done locally):\r\n\r\nUnknown object or variable 'currentWeekday' --- you need to create a 'currentWeekday' (check spelling too - as you can have this in your code but it's got a different spelling/typo in it and/or also look for any accidental spaces from highlighting and copying too far... as these are the worst.. hardest to spot/find --- you must be a spelling nazi when coding! coding must have ZERO spelling/typo mistakes!) Attribute (or Variable if just doing locally in the script, but it's more likely it's to be an Attribute contained within some Object)\r\n\r\nand the same with this:\r\n\r\nUnknown object or variable 'dayofWeek'",
      "EditableFormat": "markdown",
      "HTML": "<p>both are just coding errors (this is the majority of coding/programming: you're not coding... you're fixing up your mistakes, spelling mistakes or typos or accidental spaces from highlighting and copying or forgotten symbol/parenthesis/brace/bracket/etc, etc etc etc, lol), you just need to fix your code up.</p>\n<p>from the looks of them, it's likely you just need to create those Attributes for whatever the Object (or they're Variables if done locally):</p>\n<p>Unknown object or variable 'currentWeekday' --- you need to create a 'currentWeekday' (check spelling too - as you can have this in your code but it's got a different spelling/typo in it and/or also look for any accidental spaces from highlighting and copying too far... as these are the worst.. hardest to spot/find --- you must be a spelling nazi when coding! coding must have ZERO spelling/typo mistakes!) Attribute (or Variable if just doing locally in the script, but it's more likely it's to be an Attribute contained within some Object)</p>\n<p>and the same with this:</p>\n<p>Unknown object or variable 'dayofWeek'</p>\n\n",
      "PostDate": "2017-01-09T02:05:00.6474481Z",
      "LastEditDate": "2017-01-09T02:07:33.6250445Z"
    }
  ]
}
