{
  "Topic": {
    "TopicId": "mx-d-y1hn0ox3_axtunr8q",
    "ForumId": "10",
    "Title": "how to make usable objects with out needing to pick the object up?",
    "LastUpdated": "2019-07-04T18:57:36.524867Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "b462cf88-04d5-4684-ac57-064cb98a7ec9",
      "UserId": 404708,
      "Username": "darstar/Onlyonedarjain",
      "AvatarUrl": "https://secure.gravatar.com/avatar/e9bc97db026c5bf23474cd8a9a886b5e?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "im kinda new to quest and so dont know a lot about it and i was wondering, is there anyway to make it so you can use items with out picking them up?  so lets say i wanted to make a sink, without picking it up is there anyway i can make it so you can say wash your hands in it? ",
      "EditableFormat": "markdown",
      "HTML": "<p>im kinda new to quest and so dont know a lot about it and i was wondering, is there anyway to make it so you can use items with out picking them up?  so lets say i wanted to make a sink, without picking it up is there anyway i can make it so you can say wash your hands in it?</p>\n\n",
      "PostDate": "2019-07-04T18:57:36.524867Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8a3bfc66-81aa-454d-85de-64fcf70b8273",
      "UserId": 282833,
      "Username": "Io",
      "AvatarUrl": "http://i.imgur.com/XVmdocTb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You should be good by going into the object's Object tab, and adding Use to the Display Verbs list, and then going to Features, checking Use/Give on, then adding the code you want under the newly formed Use/Give tab.",
      "EditableFormat": "markdown",
      "HTML": "<p>You should be good by going into the object's Object tab, and adding Use to the Display Verbs list, and then going to Features, checking Use/Give on, then adding the code you want under the newly formed Use/Give tab.</p>\n\n",
      "PostDate": "2019-07-04T19:02:11.8577398Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9f5c8547-8804-48ac-80b7-6aecad09d031",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "the general design concept:\r\n\r\nIndividual Objects can have their own actions (Script Attributes / Verbs): 'take', 'drop', 'use', 'talk', 'equip', 'cast', 'attack', 'defend', 'steal', 'learn', 'read', 'escape/run/flee', 'explore/search', etc etc etc\r\n\r\nthe already built-in Verbs/Script_Attributes, are very useful/powerful, as they're already coded to handle everything for you due to their internal coding, but you can certainly create/add your own custom Verbs/Script_Attributes too\r\n\r\nand/or\r\n\r\nyou can get input from the player (the 'Command' Element and 'get input' Script/Function), but then you got to handle those inputs yourself (check if its correct, if the inputs exist as Objects and/or Attributes, selecting/getting the objects and/or scripts, etc etc etc), which allows you do actions upon whatever you want, though that means you also got to handle it completely as well\r\n\r\n----------\r\n\r\nexample of both design methods\r\n\r\nfor my custom 'talk_command' Command:\r\n\r\nduring game play, you'd type in:\r\n\r\n(the example that I  used, checks if the inputted object exists within your current location/room, we'd need different/extra coding to handle it searching through the rest of the game, if that was desired/needed/wanted of it)\r\n\r\ntalk npc1\r\ntalk npc2\r\ntalk fail test\r\n\r\nand the 'Verb' usage provides extra internal coding, that makes its Script Attribute, show up (and handles it as to be working) as the buttons and/or hyperlinks for the Object during game play, but otherwise, Verbs are basically actually just Script Attributes (but internal coding wise, they're a, specialized type or sub type, of the 'Command' Element)\r\n\r\n```\r\n<object name=\"room\">\r\n\r\n  <inherit name=\"editor_room\" />\r\n\r\n</object>\r\n\r\n<object name=\"player\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n  <inherit name=\"editor_player\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n</object>\r\n\r\n<object name=\"npc1\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"talk\" type=\"script\">\r\n\r\n    msg (\"You say \\\"hi\\\" to \" + npc1.name + \".\")\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<object name=\"npc2\">\r\n\r\n  <inherit name=\"editor_object\" />\r\n\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n\r\n  <attr name=\"talk\" type=\"script\">\r\n\r\n    msg (\"You say \\\"hi\\\" to \" + npc2.name + \".\")\r\n\r\n  </attr>\r\n\r\n</object>\r\n\r\n<verb name=\"talk_verb\">\r\n\r\n  <property>talk</property>\r\n\r\n  <pattern>talk</pattern>\r\n\r\n</verb>\r\n\r\n<command name=\"talk_command\">\r\n\r\n  <pattern>talk #object#</pattern>\r\n\r\n  <script>\r\n\r\n    msg (\"You say \\\"hi\\\" to \" + object.name + \".\")\r\n\r\n  </script>\r\n\r\n  <unresolved>The inputted object either doesn't exist at all within the entire game or you just got the wrong spelling (typo) or it just doesn't exist within your current location/room</unresolved>\r\n\r\n</command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>the general design concept:</p>\n<p>Individual Objects can have their own actions (Script Attributes / Verbs): 'take', 'drop', 'use', 'talk', 'equip', 'cast', 'attack', 'defend', 'steal', 'learn', 'read', 'escape/run/flee', 'explore/search', etc etc etc</p>\n<p>the already built-in Verbs/Script_Attributes, are very useful/powerful, as they're already coded to handle everything for you due to their internal coding, but you can certainly create/add your own custom Verbs/Script_Attributes too</p>\n<p>and/or</p>\n<p>you can get input from the player (the 'Command' Element and 'get input' Script/Function), but then you got to handle those inputs yourself (check if its correct, if the inputs exist as Objects and/or Attributes, selecting/getting the objects and/or scripts, etc etc etc), which allows you do actions upon whatever you want, though that means you also got to handle it completely as well</p>\n<hr>\n<p>example of both design methods</p>\n<p>for my custom 'talk_command' Command:</p>\n<p>during game play, you'd type in:</p>\n<p>(the example that I  used, checks if the inputted object exists within your current location/room, we'd need different/extra coding to handle it searching through the rest of the game, if that was desired/needed/wanted of it)</p>\n<p>talk npc1<br>\ntalk npc2<br>\ntalk fail test</p>\n<p>and the 'Verb' usage provides extra internal coding, that makes its Script Attribute, show up (and handles it as to be working) as the buttons and/or hyperlinks for the Object during game play, but otherwise, Verbs are basically actually just Script Attributes (but internal coding wise, they're a, specialized type or sub type, of the 'Command' Element)</p>\n<pre><code>&lt;object name=\"room\"&gt;\n\n  &lt;inherit name=\"editor_room\" /&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n  &lt;inherit name=\"editor_player\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"npc1\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n\n    msg (\"You say \\\"hi\\\" to \" + npc1.name + \".\")\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;object name=\"npc2\"&gt;\n\n  &lt;inherit name=\"editor_object\" /&gt;\n\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n\n  &lt;attr name=\"talk\" type=\"script\"&gt;\n\n    msg (\"You say \\\"hi\\\" to \" + npc2.name + \".\")\n\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;verb name=\"talk_verb\"&gt;\n\n  &lt;property&gt;talk&lt;/property&gt;\n\n  &lt;pattern&gt;talk&lt;/pattern&gt;\n\n&lt;/verb&gt;\n\n&lt;command name=\"talk_command\"&gt;\n\n  &lt;pattern&gt;talk #object#&lt;/pattern&gt;\n\n  &lt;script&gt;\n\n    msg (\"You say \\\"hi\\\" to \" + object.name + \".\")\n\n  &lt;/script&gt;\n\n  &lt;unresolved&gt;The inputted object either doesn't exist at all within the entire game or you just got the wrong spelling (typo) or it just doesn't exist within your current location/room&lt;/unresolved&gt;\n\n&lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2019-07-04T20:11:56.8928019Z",
      "LastEditDate": "2019-07-04T20:16:11.6883725Z",
      "link": null
    },
    {
      "PostId": "07314879-3a82-421d-a869-bcf39a58a74b",
      "UserId": 418718,
      "Username": "Marina90",
      "AvatarUrl": "https://secure.gravatar.com/avatar/447ca971e3d2973d8c721875e07be721?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Here you will learn what is important, it gives you a link to an interesting web page: <a href=\"https://happywheels3d.io/\">happy wheels</a>\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Here you will learn what is important, it gives you a link to an interesting web page: <a href=\"https://happywheels3d.io/\">happy wheels</a></p>\n\n",
      "PostDate": "2019-07-05T08:00:58.0048354Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
