{
  "Topic": {
    "TopicId": "8ffofngkw0eyitf8u5v6uq",
    "ForumId": "10",
    "Title": "How to have a verb do multiple things? [SOLVED]",
    "LastUpdated": "2022-02-21T16:13:26.9905846Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6a10fc01-6318-49c3-8ca0-1e2377d96bde",
      "UserId": 580228,
      "Username": "VerchielMarch",
      "AvatarUrl": "https://i.imgur.com/Ybv3eWbb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello! I am very very new to this (as in I downloaded this game late last night levels of new) So i'm sorry if this question is silly. I looked around on the forums but perhaps im not looking in the right places!\r\n\r\nAnyway, I'm looking to have a character read a book but I can't figure out how to have \"read book\" bring up multiple phrases. I don't want them all coming up at once, but I have about 4 different passages written for the character to read. \r\n\r\nBasically like read the book, then flip to another page and read again (if the player does so) and so on and so forth. \r\n\r\nAgain sorry if this is something thats been answered before or is sort of a dumb question. Thank you!",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello! I am very very new to this (as in I downloaded this game late last night levels of new) So i'm sorry if this question is silly. I looked around on the forums but perhaps im not looking in the right places!</p>\n<p>Anyway, I'm looking to have a character read a book but I can't figure out how to have \"read book\" bring up multiple phrases. I don't want them all coming up at once, but I have about 4 different passages written for the character to read.</p>\n<p>Basically like read the book, then flip to another page and read again (if the player does so) and so on and so forth.</p>\n<p>Again sorry if this is something thats been answered before or is sort of a dumb question. Thank you!</p>\n\n",
      "PostDate": "2022-02-21T16:13:26.9905846Z",
      "LastEditDate": "2022-02-22T05:14:23.2281439Z",
      "link": null
    },
    {
      "PostId": "527c6f02-7af3-4266-bef0-727255a6ee83",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm also very new but I think I have a solution, using Script options called:\r\n- Set Variable or Attribute\r\n- Show Menu\r\n- Switch\r\n\r\nThis is usually for multiple choices, but you can use it with single choices.\r\n\r\nIf you know how to use Code View on the little Script Window, you can Copy & Paste the following in, and then turn off Code View on that Script Window to see how it looks in the Quest Interface.\r\n```\r\ncontinueBOOK = Split(\"Continue\")\r\nShowMenu (\"THIS IS CHAPTER 1 TEXT\", continueBOOK, true) {\r\n  switch (result) {\r\n    case (\"Continue\") {\r\n      continueBOOK = Split(\"Continue\")\r\n      ShowMenu (\"THIS IS CHAPTER 2 TEXT\", continueBOOK, true) {\r\n        switch (result) {\r\n          case (\"Continue\") {\r\n            continueBOOK = Split(\"Continue\")\r\n            ShowMenu (\"THIS IS CHAPTER 3 TEXT\", continueBOOK, true) {\r\n              switch (result) {\r\n                case (\"Continue\") {\r\n                  msg (\"THIS IS CHAPTER 4 TEXT\")\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```What is happening here is:```\r\n\r\ncontinueBOOK = Split(\"Continue\")\r\nis creating a variable and calling it continueBOOK, then filling that variable with Split options, in this case, only 'Continue'.\r\n\r\nShowMenu (\"THIS IS CHAPTER 1 TEXT\", continueBOOK, true) {\r\nis giving the player a list of options, and it's getting that list (in this case only 'Continue') from the variable continueBOOK that we just made. (I dont know what the 'true' on the end means tbh)\r\n\r\nswitch (result) {\r\nI think is just the game knowing how to treat the options?\r\n\r\ncase (\"Continue\") {\r\njust means 'what happens when they choose the split option \"Continue\"'. for multi options you would have multiple case lines.\r\n\r\nafter that, the menu method just repeats itself, but using the next chapter's text for the Text of the 'ShowMenu' Menu. Im using the Menu's title to show the story instead of using a 'print message' option.\r\n\r\nThe last time, I do use a 'print message' option, because it's the last chapter and the player doesnt need a command to go do something else ^^",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm also very new but I think I have a solution, using Script options called:</p>\n<ul>\n<li>Set Variable or Attribute</li>\n<li>Show Menu</li>\n<li>Switch</li>\n</ul>\n<p>This is usually for multiple choices, but you can use it with single choices.</p>\n<p>If you know how to use Code View on the little Script Window, you can Copy &amp; Paste the following in, and then turn off Code View on that Script Window to see how it looks in the Quest Interface.</p>\n<pre><code>continueBOOK = Split(\"Continue\")\nShowMenu (\"THIS IS CHAPTER 1 TEXT\", continueBOOK, true) {\n  switch (result) {\n    case (\"Continue\") {\n      continueBOOK = Split(\"Continue\")\n      ShowMenu (\"THIS IS CHAPTER 2 TEXT\", continueBOOK, true) {\n        switch (result) {\n          case (\"Continue\") {\n            continueBOOK = Split(\"Continue\")\n            ShowMenu (\"THIS IS CHAPTER 3 TEXT\", continueBOOK, true) {\n              switch (result) {\n                case (\"Continue\") {\n                  msg (\"THIS IS CHAPTER 4 TEXT\")\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p><code>What is happening here is:</code></p>\n<p>continueBOOK = Split(\"Continue\")<br>\nis creating a variable and calling it continueBOOK, then filling that variable with Split options, in this case, only 'Continue'.</p>\n<p>ShowMenu (\"THIS IS CHAPTER 1 TEXT\", continueBOOK, true) {<br>\nis giving the player a list of options, and it's getting that list (in this case only 'Continue') from the variable continueBOOK that we just made. (I dont know what the 'true' on the end means tbh)</p>\n<p>switch (result) {<br>\nI think is just the game knowing how to treat the options?</p>\n<p>case (\"Continue\") {<br>\njust means 'what happens when they choose the split option \"Continue\"'. for multi options you would have multiple case lines.</p>\n<p>after that, the menu method just repeats itself, but using the next chapter's text for the Text of the 'ShowMenu' Menu. Im using the Menu's title to show the story instead of using a 'print message' option.</p>\n<p>The last time, I do use a 'print message' option, because it's the last chapter and the player doesnt need a command to go do something else ^^</p>\n\n",
      "PostDate": "2022-02-21T18:13:52.1583127Z",
      "LastEditDate": "2022-02-21T18:19:35.6653863Z",
      "link": null
    },
    {
      "PostId": "27e13cb8-6f03-49a3-92ed-47ab2b15c6c8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I should point out that this is a little more complex than it needs to be. The `switch` and `case` is just like putting `if (result = \"Continue\") {`, but it's more efficient than `if` when there are lots more options. But in this case, you already know what `result` is, because there's only one option. So you could just do:\r\n```\r\nmsg (\"THIS IS CHAPTER 1 TEXT\")\r\nShowMenu (\"\", Split(\"Continue\"), true) {\r\n  msg (\"THIS IS CHAPTER 2 TEXT\")\r\n  ShowMenu (\"\", Split(\"Continue\"), true) {\r\n    msg (\"THIS IS CHAPTER 3 TEXT\")\r\n    ShowMenu (\"\", Split(\"Continue\"), true) {\r\n      msg (\"THIS IS CHAPTER 4 TEXT\")\r\n    }\r\n  }\r\n}\r\n```\r\n(Not sure if you want to put the chapter text in the ShowMenu function, or print it first. The big difference is that putting in on the `ShowMenu` line will cause it to be a part  of the menu, so it will be hidden at the end of the turn (so the book's content disappears from the screen as soon as the player clicks \"Continue\"  or stops reading).\r\n\r\nI wasn't sure what kind of interaction the original poster wanted.\r\nThis solution is a good idea if you want a \"Continue\" link, but you also want the player to be able to type another command and do something else.\r\n\r\nIf you want to force them to press continue, you would instead use:\r\n```\r\nmsg (\"THIS IS CHAPTER 1 TEXT\")\r\nwait {\r\n  msg (\"THIS IS CHAPTER 2 TEXT\")\r\n  wait {\r\n    msg (\"THIS IS CHAPTER 3 TEXT\")\r\n    wait {\r\n      msg (\"THIS IS CHAPTER 4 TEXT\")\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nIf you want the book to show a different page the second time the player uses the \"read\" verb, you would make it something like:\r\n```\r\nif (not HasInt (this, \"chapter\")) {\r\n  this.chapter = 1\r\n}\r\nelse {\r\n  this.chapter = this.chapter % 4 + 1\r\n}\r\nswitch (this.chapter) {\r\n  case (1) {\r\n    msg (\"THIS IS CHAPTER 1 TEXT\")\r\n  }\r\n  case (2) {\r\n    msg (\"THIS IS CHAPTER 2 TEXT\")\r\n  }\r\n  case (3) {\r\n    msg (\"THIS IS CHAPTER 3 TEXT\")\r\n  }\r\n  case (4) {\r\n    msg (\"THIS IS CHAPTER 4 TEXT\")\r\n  }\r\n}\r\n```\r\n\r\nOr if you have 4 pages and you want to pick one at random each time you read the book:\r\n```\r\nswitch (GetRandomInt(1,4)) {\r\n  case (1) {\r\n    msg (\"THIS IS CHAPTER 1 TEXT\")\r\n  }\r\n  case (2) {\r\n    msg (\"THIS IS CHAPTER 2 TEXT\")\r\n  }\r\n  case (3) {\r\n    msg (\"THIS IS CHAPTER 3 TEXT\")\r\n  }\r\n  case (4) {\r\n    msg (\"THIS IS CHAPTER 4 TEXT\")\r\n  }\r\n}\r\n```\r\n(Or, if you have the verb's type as text rather than script, you can use the Text Processor's random function:\r\n```\r\n{random:THIS IS CHAPTER 1 TEXT:THIS IS CHAPTER 2 TEXT:THIS IS CHAPTER 3 TEXT:THIS IS CHAPTER 4 TEXT}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>I should point out that this is a little more complex than it needs to be. The <code>switch</code> and <code>case</code> is just like putting <code>if (result = \"Continue\") {</code>, but it's more efficient than <code>if</code> when there are lots more options. But in this case, you already know what <code>result</code> is, because there's only one option. So you could just do:</p>\n<pre><code>msg (\"THIS IS CHAPTER 1 TEXT\")\nShowMenu (\"\", Split(\"Continue\"), true) {\n  msg (\"THIS IS CHAPTER 2 TEXT\")\n  ShowMenu (\"\", Split(\"Continue\"), true) {\n    msg (\"THIS IS CHAPTER 3 TEXT\")\n    ShowMenu (\"\", Split(\"Continue\"), true) {\n      msg (\"THIS IS CHAPTER 4 TEXT\")\n    }\n  }\n}\n</code></pre>\n<p>(Not sure if you want to put the chapter text in the ShowMenu function, or print it first. The big difference is that putting in on the <code>ShowMenu</code> line will cause it to be a part  of the menu, so it will be hidden at the end of the turn (so the book's content disappears from the screen as soon as the player clicks \"Continue\"  or stops reading).</p>\n<p>I wasn't sure what kind of interaction the original poster wanted.<br>\nThis solution is a good idea if you want a \"Continue\" link, but you also want the player to be able to type another command and do something else.</p>\n<p>If you want to force them to press continue, you would instead use:</p>\n<pre><code>msg (\"THIS IS CHAPTER 1 TEXT\")\nwait {\n  msg (\"THIS IS CHAPTER 2 TEXT\")\n  wait {\n    msg (\"THIS IS CHAPTER 3 TEXT\")\n    wait {\n      msg (\"THIS IS CHAPTER 4 TEXT\")\n    }\n  }\n}\n</code></pre>\n<p>If you want the book to show a different page the second time the player uses the \"read\" verb, you would make it something like:</p>\n<pre><code>if (not HasInt (this, \"chapter\")) {\n  this.chapter = 1\n}\nelse {\n  this.chapter = this.chapter % 4 + 1\n}\nswitch (this.chapter) {\n  case (1) {\n    msg (\"THIS IS CHAPTER 1 TEXT\")\n  }\n  case (2) {\n    msg (\"THIS IS CHAPTER 2 TEXT\")\n  }\n  case (3) {\n    msg (\"THIS IS CHAPTER 3 TEXT\")\n  }\n  case (4) {\n    msg (\"THIS IS CHAPTER 4 TEXT\")\n  }\n}\n</code></pre>\n<p>Or if you have 4 pages and you want to pick one at random each time you read the book:</p>\n<pre><code>switch (GetRandomInt(1,4)) {\n  case (1) {\n    msg (\"THIS IS CHAPTER 1 TEXT\")\n  }\n  case (2) {\n    msg (\"THIS IS CHAPTER 2 TEXT\")\n  }\n  case (3) {\n    msg (\"THIS IS CHAPTER 3 TEXT\")\n  }\n  case (4) {\n    msg (\"THIS IS CHAPTER 4 TEXT\")\n  }\n}\n</code></pre>\n<p>(Or, if you have the verb's type as text rather than script, you can use the Text Processor's random function:</p>\n<pre><code>{random:THIS IS CHAPTER 1 TEXT:THIS IS CHAPTER 2 TEXT:THIS IS CHAPTER 3 TEXT:THIS IS CHAPTER 4 TEXT}\n</code></pre>\n\n",
      "PostDate": "2022-02-21T20:26:58.3858798Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ad2796bf-003c-4a56-833a-0bd34fd034e8",
      "UserId": 580228,
      "Username": "VerchielMarch",
      "AvatarUrl": "https://i.imgur.com/Ybv3eWbb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes!! Thank you to you both but mrangel that was exactly what I needed!! Thank you so much!! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes!! Thank you to you both but mrangel that was exactly what I needed!! Thank you so much!!</p>\n\n",
      "PostDate": "2022-02-21T23:24:50.7213461Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "17a92a92-339f-4a6a-aa54-cb6b3b99f146",
      "UserId": 580122,
      "Username": "YiKwang",
      "AvatarUrl": "https://i.imgur.com/wHILBBmb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I personally really like the way the Switch Menu Text method switches out the last chapter for the new one. \r\n\r\nIs there a way to 'clear previous X lines' or something, for the \r\n```\r\nmsg (\"THIS IS CHAPTER 1 TEXT\")\r\nwait {\r\n  msg (\"THIS IS CHAPTER 2 TEXT\")\r\n  wait {\r\n```\r\nmethod?",
      "EditableFormat": "markdown",
      "HTML": "<p>I personally really like the way the Switch Menu Text method switches out the last chapter for the new one.</p>\n<p>Is there a way to 'clear previous X lines' or something, for the</p>\n<pre><code>msg (\"THIS IS CHAPTER 1 TEXT\")\nwait {\n  msg (\"THIS IS CHAPTER 2 TEXT\")\n  wait {\n</code></pre>\n<p>method?</p>\n\n",
      "PostDate": "2022-02-22T07:04:57.6172453Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "baf8f96a-1ae4-4540-a7ef-40ca8a57616d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to 'clear previous X lines' or something\r\n\r\nBefore outputting text, use:\r\n<pre><code><em style=\"color:blue\">game.section_to_hide</em> = StartNewOutputSection()</code></pre>\r\n(where <em style=\"color:blue\">game.section_to_hide</em> can be any object and attribute name that makes sense)\r\n\r\nAfter outputting the text:\r\n<pre><code>EndOutputSection (<em style=\"color:blue\">game.section_to_hide</em>)</code></pre>\r\n\r\nAnd when you want to make it disappear:\r\n<pre><code>HideOutputSection (<em style=\"color:blue\">game.section_to_hide</em>)</code></pre>\r\n\r\n(`ShowMenu` uses the attribute `game.menuoutputsection` – so someone who doesn't like the way the menu hides answers could do something like:\r\n```\r\nShowMenu (\"What… is your favourite colour?\", Split(\"lavender;pink;purple;mauve;burgundy\"), true) {\r\n  JS.eval(\"$(\\\"a[onclick^=\\\\\\\"ASLEvent('ShowMenuResponse'\\\\\\\"]\\\").removeAttr('onclick');\")\r\n  // code to handle answers here\r\n}\r\ngame.menuoutputsection = \"\"\r\n```\r\nWhich disables the hiding. (The `JS.eval` line disables all menu-response links in the output, because clicking one after Quest thinks you already responded to the menu would be a problem. I prefer to use a slightly more complex version, which hides all menu options apart from the one you chose… but that takes quite a bit more code)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to 'clear previous X lines' or something</p>\n</blockquote>\n<p>Before outputting text, use:</p>\n<pre><code><em style=\"color: blue\">game.section_to_hide</em> = StartNewOutputSection()</code></pre>\n<p>(where <em style=\"color: blue\">game.section_to_hide</em> can be any object and attribute name that makes sense)</p>\n<p>After outputting the text:</p>\n<pre><code>EndOutputSection (<em style=\"color: blue\">game.section_to_hide</em>)</code></pre>\n<p>And when you want to make it disappear:</p>\n<pre><code>HideOutputSection (<em style=\"color: blue\">game.section_to_hide</em>)</code></pre>\n<p>(<code>ShowMenu</code> uses the attribute <code>game.menuoutputsection</code> – so someone who doesn't like the way the menu hides answers could do something like:</p>\n<pre><code>ShowMenu (\"What… is your favourite colour?\", Split(\"lavender;pink;purple;mauve;burgundy\"), true) {\n  JS.eval(\"$(\\\"a[onclick^=\\\\\\\"ASLEvent('ShowMenuResponse'\\\\\\\"]\\\").removeAttr('onclick');\")\n  // code to handle answers here\n}\ngame.menuoutputsection = \"\"\n</code></pre>\n<p>Which disables the hiding. (The <code>JS.eval</code> line disables all menu-response links in the output, because clicking one after Quest thinks you already responded to the menu would be a problem. I prefer to use a slightly more complex version, which hides all menu options apart from the one you chose… but that takes quite a bit more code)</p>\n\n",
      "PostDate": "2022-02-22T09:51:48.3625175Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "26c06b75-15b8-4eb5-a8d5-afdfaf8c079b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Is there a way to 'clear previous X lines' or something\r\n\r\nIf you actually want to remove a number of lines, rather than a section you previously marked, you could use javascript to remove the last \"line\", although what it considers a line may be confusing at times. I'm removing `<div>`s, which normally correspond with each call to `msg`; but may be part of a line if you used `OutputTextNoBr`, and may miss anything that was printed using `OutputTextRaw`.\r\n```\r\nfor (i, 1, number_of_lines) {\r\n  JS.eval(\"$('#divOutput > div > div').last().remove();\")\r\n}\r\nJS.eval(\"$('#divOutput').css(\"min-height: 0\");\r\n```\r\n\r\nOr animating like `HideOutputSection` does: \r\n```\r\nfor (i, 1, number_of_lines) {\r\n  JS.eval(\"$('#divOutput > div > div:not(.removeline)').last().addClass('removeline');\")\r\n}\r\nJS.eval(\"$('.removeline').hide(250, function () { $(this).remove(); }); $(\"#divOutput\").animate({'min-height':0}, 260);\")\r\n```\r\n",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Is there a way to 'clear previous X lines' or something</p>\n</blockquote>\n<p>If you actually want to remove a number of lines, rather than a section you previously marked, you could use javascript to remove the last \"line\", although what it considers a line may be confusing at times. I'm removing <code>&lt;div&gt;</code>s, which normally correspond with each call to <code>msg</code>; but may be part of a line if you used <code>OutputTextNoBr</code>, and may miss anything that was printed using <code>OutputTextRaw</code>.</p>\n<pre><code>for (i, 1, number_of_lines) {\n  JS.eval(\"$('#divOutput &gt; div &gt; div').last().remove();\")\n}\nJS.eval(\"$('#divOutput').css(\"min-height: 0\");\n</code></pre>\n<p>Or animating like <code>HideOutputSection</code> does:</p>\n<pre><code>for (i, 1, number_of_lines) {\n  JS.eval(\"$('#divOutput &gt; div &gt; div:not(.removeline)').last().addClass('removeline');\")\n}\nJS.eval(\"$('.removeline').hide(250, function () { $(this).remove(); }); $(\"#divOutput\").animate({'min-height':0}, 260);\")\n</code></pre>\n\n",
      "PostDate": "2022-02-22T10:02:29.0460769Z",
      "LastEditDate": "2022-02-22T10:08:21.6093474Z",
      "link": null
    },
    {
      "PostId": "f33ca304-375a-4fe2-b699-82dc2c68d836",
      "UserId": 580947,
      "Username": "Zolalewis",
      "AvatarUrl": "https://secure.gravatar.com/avatar/b4d8a87a893ef591c36b664ab8544ba1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It's normal to ask what you don't know, don't worry, if you have more questions write them down, because that's the only way to develop! So I prefer to write each chapter or new idea in a new row. I read https://freebooksummary.com/category/cats-cradle and it is easier and clearer for me to have each idea separately. The essence of the free book summary remains the same and is structured in this way. Also, when programming, I like to set Cats Cradl's work characteristics more organized.",
      "EditableFormat": "markdown",
      "HTML": "<p>It's normal to ask what you don't know, don't worry, if you have more questions write them down, because that's the only way to develop! So I prefer to write each chapter or new idea in a new row. I read https://freebooksummary.com/category/cats-cradle and it is easier and clearer for me to have each idea separately. The essence of the free book summary remains the same and is structured in this way. Also, when programming, I like to set Cats Cradl's work characteristics more organized.</p>\n\n",
      "PostDate": "2022-03-01T14:39:42.6667638Z",
      "LastEditDate": "2022-03-03T16:08:12.5158396Z",
      "link": null
    }
  ]
}
