{
  "Topic": {
    "TopicId": "rvijnetcm0a8nnzynzjdpg",
    "ForumId": "10",
    "Title": "Choose the two highest values from a list",
    "LastUpdated": "2017-01-13T12:17:18.8967203Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6261ef86-2778-44ae-8b4f-26794f8ea872",
      "UserId": 267130,
      "Username": "Xilefenko",
      "AvatarUrl": "http://i.imgur.com/jWsgzi4b.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You are in a closed Area with a variety of characters you can talk to. For asking and answering the right things you can build up relationships(->their “friendship” counter goes up). At the end of the Area I want that the two characters with the most “Friendship points” go to you and say goodbye. How can you make it that the game check's which of the characters have the highest value so that it prints the corresponding text based on the Outcome?",
      "EditableFormat": "markdown",
      "HTML": "<p>You are in a closed Area with a variety of characters you can talk to. For asking and answering the right things you can build up relationships(-&gt;their “friendship” counter goes up). At the end of the Area I want that the two characters with the most “Friendship points” go to you and say goodbye. How can you make it that the game check's which of the characters have the highest value so that it prints the corresponding text based on the Outcome?</p>\n\n",
      "PostDate": "2017-01-13T12:17:18.8967203Z",
      "LastEditDate": null
    },
    {
      "PostId": "b27f8587-ca51-4b53-903a-5be537b8b14f",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I believe there is a way to sort a list. (Yes, there is! http://docs.textadventures.co.uk/quest//functions/objectlistsort.html)\r\n\r\nIf you could sort by the attribute in question, then you could just pick off the two on the end.",
      "EditableFormat": "markdown",
      "HTML": "<p>I believe there is a way to sort a list. (Yes, there is! http://docs.textadventures.co.uk/quest//functions/objectlistsort.html)</p>\n<p>If you could sort by the attribute in question, then you could just pick off the two on the end.</p>\n\n",
      "PostDate": "2017-01-13T12:36:10.6221053Z",
      "LastEditDate": null
    },
    {
      "PostId": "cd8dd658-99b4-455c-974f-c36582336ac6",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "ignore this post\r\n\r\nmy attempt at doing what the 'objectlistsort' Function already does, only to find out I need to have a sort function anyways within what I'm doing, and/or I need to use recursion+data_structure_design for this to be working correctly and/or to do the needed sorting...\r\n\r\n```\r\n<function name=\"get_character_max_value_function\" parameters=\"objectlist_parameter, attribute_parameter, character_value_quantity_parameter\" type=\"objectlist\">\r\n  not_handled_boolean_variable = true\r\n  objectlist_variable = NewObjectList ()\r\n  for (number_variable, 1, character_value_quantity_parameter) {\r\n    list add (objectlist_variable, ObjectListItem (objectlist_parameter, number_variable - 1))\r\n  }\r\n  foreach (object_placeholder_variable_1, objectlist_parameter) {\r\n    foreach (object_placeholder_variable_2, objectlist_variable) {\r\n      if (not_handled_boolean_variable and object_placeholder_variable_1.attribute_parameter > object_placeholder_variable_2.attribute_parameter) {\r\n        list remove (objectlist_variable, object_placeholder_variable_2)\r\n        list add (objectlist_variable, object_placeholder_variable_1)\r\n        not_handled_boolean_variable = false\r\n        // I need to sort my list here, otherwise this won't work\r\n        // (probably using recursion+data_structure design would make this much more clean/concise)\r\n        // also, using a nested 'foreach' is 'N^2', very inefficient...\r\n      }\r\n      not_handled_boolean_variable = true\r\n    }\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>ignore this post</p>\n<p>my attempt at doing what the 'objectlistsort' Function already does, only to find out I need to have a sort function anyways within what I'm doing, and/or I need to use recursion+data_structure_design for this to be working correctly and/or to do the needed sorting...</p>\n<pre><code>&lt;function name=\"get_character_max_value_function\" parameters=\"objectlist_parameter, attribute_parameter, character_value_quantity_parameter\" type=\"objectlist\"&gt;\n  not_handled_boolean_variable = true\n  objectlist_variable = NewObjectList ()\n  for (number_variable, 1, character_value_quantity_parameter) {\n    list add (objectlist_variable, ObjectListItem (objectlist_parameter, number_variable - 1))\n  }\n  foreach (object_placeholder_variable_1, objectlist_parameter) {\n    foreach (object_placeholder_variable_2, objectlist_variable) {\n      if (not_handled_boolean_variable and object_placeholder_variable_1.attribute_parameter &gt; object_placeholder_variable_2.attribute_parameter) {\n        list remove (objectlist_variable, object_placeholder_variable_2)\n        list add (objectlist_variable, object_placeholder_variable_1)\n        not_handled_boolean_variable = false\n        // I need to sort my list here, otherwise this won't work\n        // (probably using recursion+data_structure design would make this much more clean/concise)\n        // also, using a nested 'foreach' is 'N^2', very inefficient...\n      }\n      not_handled_boolean_variable = true\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-01-13T19:59:15.1594406Z",
      "LastEditDate": "2017-01-13T20:04:23.6963168Z"
    },
    {
      "PostId": "3e27830a-6f43-41cb-811a-1e9cfc960ec1",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just a note: if you wish to access an attribute indirectly (that is, via a string), then you can't just tack the variable onto an object. In other words, \"object_placeholder_variable_1.attribute_parameter\" will look for an attribute named \"attribute_parameter\", not what the variable \"attribute_parameter\" points to. You'd have to use GetAttribute to make it work as desired.\r\n\r\nAs far as the rest... Well, you posted it for some reason, I suppose. :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Just a note: if you wish to access an attribute indirectly (that is, via a string), then you can't just tack the variable onto an object. In other words, \"object_placeholder_variable_1.attribute_parameter\" will look for an attribute named \"attribute_parameter\", not what the variable \"attribute_parameter\" points to. You'd have to use GetAttribute to make it work as desired.</p>\n<p>As far as the rest... Well, you posted it for some reason, I suppose. :)</p>\n\n",
      "PostDate": "2017-01-16T19:21:02.7265109Z",
      "LastEditDate": null
    },
    {
      "PostId": "f1fdac47-33ba-4743-9592-a3a7fb9eec6d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "was a failed attempt by me, more complicated than I thought, due to storing multiple most/min values... and adding/removing items from the list.",
      "EditableFormat": "markdown",
      "HTML": "<p>was a failed attempt by me, more complicated than I thought, due to storing multiple most/min values... and adding/removing items from the list.</p>\n\n",
      "PostDate": "2017-01-16T20:33:32.4381008Z",
      "LastEditDate": null
    },
    {
      "PostId": "71eb2ed6-dfe4-4129-b17f-15af33b44bee",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, I got that!\r\n\r\nIf you wanted to try again, think about this (which might help):\r\n1) In Quest, you can only add items on the end of a list. So if you want to sort, you need to add them in sorted order.\r\n2) Start out with an empty result list\r\n3) While there are items left in the source list, find the item with the lowest attribute.\r\n4) Move it to the new list. (You had that idea in your code.)\r\n5) Repeat until no items left\r\n6) You can't modify lists that you're enumerating with foreach\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, I got that!</p>\n<p>If you wanted to try again, think about this (which might help):</p>\n<ol>\n<li>In Quest, you can only add items on the end of a list. So if you want to sort, you need to add them in sorted order.</li>\n<li>Start out with an empty result list</li>\n<li>While there are items left in the source list, find the item with the lowest attribute.</li>\n<li>Move it to the new list. (You had that idea in your code.)</li>\n<li>Repeat until no items left</li>\n<li>You can't modify lists that you're enumerating with foreach</li>\n</ol>\n\n",
      "PostDate": "2017-01-16T21:45:36.5841779Z",
      "LastEditDate": "2017-01-16T21:47:54.61245Z"
    }
  ]
}
