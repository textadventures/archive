{
  "Topic": {
    "TopicId": "87gmk2vyseastnbqri17rg",
    "ForumId": "10",
    "Title": "Questing Implementation [SOLVED]",
    "LastUpdated": "2016-08-09T20:24:20.6919784Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "50c0cceb-2282-4f83-b967-e62e3f025bc2",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I tried looking up in the forums about implementing a \"Questing System\", but I couldn't find anything about it. I was wondering if someone has any suggestions about their own :) \r\n\r\nI was thinking a global command with something like quest.object1, attribute, completed/not completed. But I'm not sure. \r\n \r\n\r\n\r\n\r\n ",
      "EditableFormat": "markdown",
      "HTML": "<p>I tried looking up in the forums about implementing a \"Questing System\", but I couldn't find anything about it. I was wondering if someone has any suggestions about their own :)</p>\n<p>I was thinking a global command with something like quest.object1, attribute, completed/not completed. But I'm not sure.</p>\n\n",
      "PostDate": "2016-08-09T20:24:20.6919784Z",
      "LastEditDate": "2016-08-10T03:33:14.9392983Z"
    },
    {
      "PostId": "bf79bfda-e003-4151-aa03-32c0463fc69d",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Jay and Pixie can probably create a really fancy/advanced quest/mission/task/award/trophy/etc system, but your idea is how I would do it too (with a bit more stuff for its implementation), with my limited code ability.\r\n\r\n```\r\n// when a quest is discovered/known/made-available, you need to do this:\r\n\r\nadd_quest_status_stringdictionary_function (NAME_OF_QUEST)\r\n\r\n// --------------------------\r\n\r\n// when a quest is completed, you need to do this:\r\n\r\nupdate_quest_status_stringdictionary_function (NAME_OF_QUEST)\r\n\r\n// --------------------------\r\n\r\n<command name=\"quest_screen_command\">\r\n  <pattern>quest</pattern>\r\n  <script>\r\n    quest_screen_function\r\n  </script>\r\n</command>\r\n\r\n<function name=\"quest_screen_function\">\r\n  ClearScreen\r\n  msg (\"Quest Screen:\")\r\n  numbering = 0\r\n  foreach (quest_name_variable, game.pov.quest_stringlist_attribute) {\r\n    numbering = numbering + 1\r\n    msg (\"\")\r\n    msg (numbering + \". \" + quest_name_variable + \" Quest: \" + StringDictionaryItem (game.pov.quest_status_stringdictionary_attribute, quest_name_variable))\r\n    msg (\"\")\r\n    msg (StringDictionaryItem (global_data_object.quest_description_stringdictionary_attribute, quest_name_variable))\r\n  }\r\n  wait {\r\n    ClearScreen\r\n  }\r\n</function>\r\n\r\n<function name=\"add_quest_status_stringdictionary_function\" parameters=\"quest_name_parameter\">\r\n   // HK edit: I forgot this needed code:\r\n  if (not HasAttribute (game.pov, \"quest_status_stringdictionary_attribute\")) {\r\n    game.pov.quest_status_stringdictionary_attribute = NewStringDictionary()\r\n  }\r\n  dictionary add (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter, \"incomplete\")\r\n</function>\r\n\r\n<function name=\"update_quest_status_stringdictionary_function\" parameters=\"quest_name_parameter\">\r\n  // I wasn't sure if the Value can be changed directly, and if it can do changed directly, can it be done with 'set', or is it done some other way and how? We need Pixie or Jay to answer this for us, lol. So, I just did this instead below:\r\n  dictionary remove (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter)\r\n  dictionary add (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter, \"completed\")\r\n</function>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\">quest_name_1;quest_name_2;etc</attr> // as you discover/know quests, add them to this list: your current list of known/discovered quests\r\n</object>\r\n\r\n// if you want etc Player Objects:\r\n<object name=\"player2\">\r\n  <attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\">quest_name_1;quest_name_2;etc</attr> // as you discover/know quests, add them to this list: your current list of known/discovered quests\r\n</object>\r\n\r\n// etc Player Objects, if you want/need\r\n\r\n<object name=\"global_data_object\">\r\n  <attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\">quest_name_1;quest_name_2;etc</attr> // list of ALL quests\r\n  <attr name=\"quest_description_stringdictionary_attribute\" type=\"stringdictionary\">\r\n    <item>\r\n      <key>quest_name_1</key>\r\n      <value>DESCRIPTION_OF_QUEST</value>\r\n    </item>\r\n    <item>\r\n      <key>quest_name_2</key>\r\n      <value>DESCRIPTION_OF_QUEST</value>\r\n    </item>\r\n    <item>\r\n      <key>etc</key>\r\n      <value>DESCRIPTION_OF_QUEST</value>\r\n    </item>\r\n  </attr>\r\n</object>\r\n```\r\n\r\nask if you got any questions, need any explanation, and/or if anything is unclear or confusing.\r\n\r\nP.S.\r\n\r\nlet me know if you want to add in other details, such as what the reward is for completing the quest, and whatever else such details you want included. And, I'll adjust or add to the code to be able to do this for you.",
      "EditableFormat": "markdown",
      "HTML": "<p>Jay and Pixie can probably create a really fancy/advanced quest/mission/task/award/trophy/etc system, but your idea is how I would do it too (with a bit more stuff for its implementation), with my limited code ability.</p>\n<pre><code>// when a quest is discovered/known/made-available, you need to do this:\n\nadd_quest_status_stringdictionary_function (NAME_OF_QUEST)\n\n// --------------------------\n\n// when a quest is completed, you need to do this:\n\nupdate_quest_status_stringdictionary_function (NAME_OF_QUEST)\n\n// --------------------------\n\n&lt;command name=\"quest_screen_command\"&gt;\n  &lt;pattern&gt;quest&lt;/pattern&gt;\n  &lt;script&gt;\n    quest_screen_function\n  &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=\"quest_screen_function\"&gt;\n  ClearScreen\n  msg (\"Quest Screen:\")\n  numbering = 0\n  foreach (quest_name_variable, game.pov.quest_stringlist_attribute) {\n    numbering = numbering + 1\n    msg (\"\")\n    msg (numbering + \". \" + quest_name_variable + \" Quest: \" + StringDictionaryItem (game.pov.quest_status_stringdictionary_attribute, quest_name_variable))\n    msg (\"\")\n    msg (StringDictionaryItem (global_data_object.quest_description_stringdictionary_attribute, quest_name_variable))\n  }\n  wait {\n    ClearScreen\n  }\n&lt;/function&gt;\n\n&lt;function name=\"add_quest_status_stringdictionary_function\" parameters=\"quest_name_parameter\"&gt;\n   // HK edit: I forgot this needed code:\n  if (not HasAttribute (game.pov, \"quest_status_stringdictionary_attribute\")) {\n    game.pov.quest_status_stringdictionary_attribute = NewStringDictionary()\n  }\n  dictionary add (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter, \"incomplete\")\n&lt;/function&gt;\n\n&lt;function name=\"update_quest_status_stringdictionary_function\" parameters=\"quest_name_parameter\"&gt;\n  // I wasn't sure if the Value can be changed directly, and if it can do changed directly, can it be done with 'set', or is it done some other way and how? We need Pixie or Jay to answer this for us, lol. So, I just did this instead below:\n  dictionary remove (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter)\n  dictionary add (game.pov.quest_status_stringdictionary_attribute, quest_name_parameter, \"completed\")\n&lt;/function&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\"&gt;quest_name_1;quest_name_2;etc&lt;/attr&gt; // as you discover/know quests, add them to this list: your current list of known/discovered quests\n&lt;/object&gt;\n\n// if you want etc Player Objects:\n&lt;object name=\"player2\"&gt;\n  &lt;attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\"&gt;quest_name_1;quest_name_2;etc&lt;/attr&gt; // as you discover/know quests, add them to this list: your current list of known/discovered quests\n&lt;/object&gt;\n\n// etc Player Objects, if you want/need\n\n&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\"&gt;quest_name_1;quest_name_2;etc&lt;/attr&gt; // list of ALL quests\n  &lt;attr name=\"quest_description_stringdictionary_attribute\" type=\"stringdictionary\"&gt;\n    &lt;item&gt;\n      &lt;key&gt;quest_name_1&lt;/key&gt;\n      &lt;value&gt;DESCRIPTION_OF_QUEST&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;quest_name_2&lt;/key&gt;\n      &lt;value&gt;DESCRIPTION_OF_QUEST&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;etc&lt;/key&gt;\n      &lt;value&gt;DESCRIPTION_OF_QUEST&lt;/value&gt;\n    &lt;/item&gt;\n  &lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<p>ask if you got any questions, need any explanation, and/or if anything is unclear or confusing.</p>\n<p>P.S.</p>\n<p>let me know if you want to add in other details, such as what the reward is for completing the quest, and whatever else such details you want included. And, I'll adjust or add to the code to be able to do this for you.</p>\n\n",
      "PostDate": "2016-08-09T22:02:04.141793Z",
      "LastEditDate": "2016-08-10T13:27:44.8114181Z"
    },
    {
      "PostId": "c4bb5ac3-4a49-4b7b-9b74-c655bd5f202b",
      "UserId": 248029,
      "Username": "Anonynn",
      "AvatarUrl": "http://i.imgur.com/28lV6nMb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm not sure I need it that complicated @_@. I think I could do something like...\r\n\r\nquest.object - attributes\r\nrecieved.boolean.false (true if the quest has been received/visible. False if invisible/not received)\r\ncompleted.boolean.false (true if completed)\r\n\r\nI'd rather not create a bunch of object though because they would just fill up the player's inventory. \r\n\r\nMaybe something like...\r\n\r\nplayer.objects, attributes\r\nquest1.boolean.false\r\nchangedquest1.script\r\n\r\nI dunno.\r\n\r\n---------------------**UPDATE**-------------------------\r\nActually, I figured out a way easier way. \r\n\r\nMake ...\r\n```\r\nGlobal Command: quests\r\nAttributes\r\nquest1.boolean.false (true if the quest has been received)\r\nquest1flag.boolean.false (true if the quest has been completed)\r\nchangedquest1.script\r\nif (quests.quest1flag=False) {\r\n}\r\nelse {\r\n  msg (\"<br/>You've completed Quest 1! <br/><br/>You gain...<br/>\")\r\n}\r\nMain Command Script\r\nmsg (\"{if quests.quest1=True:Quest 1: <i>You're trying to complete your first quest!</i>{if quests.quest1flag=True: **<u>COMPLETED</u>**}}\")\r\n```\r\nThen when you want the player to start a quest, you add to the room or wherever. \r\n```\r\nquests.quest1=True (this is a set variable script)\r\n```\r\nHope this helps everyone wanting to do this!",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm not sure I need it that complicated @_@. I think I could do something like...</p>\n<p>quest.object - attributes<br>\nrecieved.boolean.false (true if the quest has been received/visible. False if invisible/not received)<br>\ncompleted.boolean.false (true if completed)</p>\n<p>I'd rather not create a bunch of object though because they would just fill up the player's inventory.</p>\n<p>Maybe something like...</p>\n<p>player.objects, attributes<br>\nquest1.boolean.false<br>\nchangedquest1.script</p>\n<p>I dunno.</p>\n<p>---------------------<strong>UPDATE</strong>-------------------------<br>\nActually, I figured out a way easier way.</p>\n<p>Make ...</p>\n<pre><code>Global Command: quests\nAttributes\nquest1.boolean.false (true if the quest has been received)\nquest1flag.boolean.false (true if the quest has been completed)\nchangedquest1.script\nif (quests.quest1flag=False) {\n}\nelse {\n  msg (\"&lt;br/&gt;You've completed Quest 1! &lt;br/&gt;&lt;br/&gt;You gain...&lt;br/&gt;\")\n}\nMain Command Script\nmsg (\"{if quests.quest1=True:Quest 1: &lt;i&gt;You're trying to complete your first quest!&lt;/i&gt;{if quests.quest1flag=True: **&lt;u&gt;COMPLETED&lt;/u&gt;**}}\")\n</code></pre>\n<p>Then when you want the player to start a quest, you add to the room or wherever.</p>\n<pre><code>quests.quest1=True (this is a set variable script)\n</code></pre>\n<p>Hope this helps everyone wanting to do this!</p>\n\n",
      "PostDate": "2016-08-10T03:03:57.0286338Z",
      "LastEditDate": "2016-08-10T03:41:43.0582549Z"
    },
    {
      "PostId": "467286a0-558b-448b-96f2-6ef4d6912fba",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It might be better to use an int rather than a boolean. That way you can track when the player is in the quest. At the very least you have four states:\r\n\r\nQuest not given\r\nQuest given but not completed\r\nQuest completed\r\nReward given\r\n\r\nYou could have several hoops for the player to jump through in the middle of the that.",
      "EditableFormat": "markdown",
      "HTML": "<p>It might be better to use an int rather than a boolean. That way you can track when the player is in the quest. At the very least you have four states:</p>\n<p>Quest not given<br>\nQuest given but not completed<br>\nQuest completed<br>\nReward given</p>\n<p>You could have several hoops for the player to jump through in the middle of the that.</p>\n\n",
      "PostDate": "2016-08-10T07:46:48.8686984Z",
      "LastEditDate": null
    },
    {
      "PostId": "f1d97544-a82f-4aa5-9f2e-e354a9188dd0",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's not too much going on with my code, but it's able to be expanded pretty easily, but of course the code itself is complicated, despite what it is doing isn't that much, lol.\r\n\r\nThe code is mainly complex to make it handle most of the work for you, and to be able to be easily expanded upon based on your wants/needs.\r\n\r\nyou put all of your quests (names) in your game into the 'global_data_object.quest_stringlist_attribute' list, for example:\r\n\r\n```\r\n<object name=\"global_data_object\">\r\n  <attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\">rescue_kitten;rescue_princess;bring_girl_flowers;etc</attr>\r\n</object>\r\n```\r\n\r\nand if you put in your descriptions/briefing/info/reward/etc of ALL of the quests (this code can be adjusted to handle what you want, additional info/rewards/details/etc and/or changed around if you don't like it):\r\n\r\n```\r\n<attr name=\"quest_description_stringdictionary_attribute\" type=\"stringdictionary\">\r\n    <item>\r\n      <key>rescue_kitten</key>\r\n      <value>You best friend's baby kitten crawled up into a tree and is too scared to climb back down</value>\r\n    </item>\r\n    <item>\r\n      <key>rescue_princess</key>\r\n      <value>The princess has been taken by a dragon, go into the dragon's lair and slay the dragon, to rescue her.</value>\r\n    </item>\r\n    <item>\r\n      <key>give_flowers_to_girl</key>\r\n      <value>There's a girl that you like, go buy some flowers to then give them to her</value>\r\n    </item>\r\n  </attr>\r\n```\r\n\r\nas you discover quests, you add them to that Player Object's 'quest_stringlist_attribute', via using the 'add_quest_status_stringdictionary_function (QUEST_NAME)'\r\n\r\nupon typing in 'quest', you'll see your current quest information (you won't see the quests you've not discovered yet - don't want to spoil the game's future/further progress/content quests --- this is the purpose of the 'quest_stringlist_attribute' for each of your Player Objects, this is the list of your currently discovered quests, so that you're not seeing all of the quests in the game to be discovered - not spoiling the game), for example:\r\n\r\n```\r\nQuest Screen:\r\n\r\n1. Rescue Kitten Quest: incomplete\r\n\r\nYou best friend's baby kitten crawled up into a tree and is too scared to climb back down\r\n\r\n2. Rescue Princess Quest: incomplete\r\n\r\netc etc etc\r\n\r\n3. Give Flowers to Girl Quest: incomplete\r\n\r\netc etc etc\r\n```\r\n\r\nand upon completing a quest, use this Function: 'update_quest_status_stringdictionary_function (QUEST_NAME)'.\r\n\r\nand now, your 'quest_screen_command' Command's display will be for example:\r\n\r\n```\r\nQuest Screen:\r\n\r\n1. Rescue Kitten Quest: completed\r\n\r\nYou best friend's baby kitten crawled up into a tree and is too scared to climb back down\r\n\r\n2. Rescue Princess Quest: completed\r\n\r\netc etc etc\r\n\r\n3. Give Flowers to Girl Quest: incomplete\r\n\r\netc etc etc\r\n\r\n4. Teach townspeople to grow food quest: incomplete\r\n\r\netc etc etc\r\n```\r\n\r\n--------------------------------------\r\n\r\nif you just want something really simple:\r\n\r\njust have a bunch of Boolean (or String or Integer) Attributes, which you adjust as needed, and then have a Command to show/display them of course\r\n\r\n```\r\n<object name=\"quest_object\">\r\n  <attr name=\"rescue_kitten_quest_is_completed_boolean_attribute\" type=\"boolean\">false</attr>\r\n  <attr name=\"rescue_princess_quest_is_completed_boolean_attribute\" type=\"boolean\">false</attr>\r\n  <attr name=\"give_flowers_to_girl_quest_is_completed_boolean_attribute\" type=\"boolean\">false</attr>\r\n</object>\r\n\r\n<command name=\"quest_command\">\r\n  <pattern>quest</pattern>\r\n  <script>\r\n    // this is a very inefficient way of doing it: manually/individually, if you want better ways, see my previous post for example, and ask for help if you're interested in doing it in a more efficient way:\r\n    ClearScreen\r\n    msg (\"Quest Screen\")\r\n    msg (\"\")\r\n    msg (\"Rescue Kitten Quest: \" + quest_object.rescue_kitten_quest_is_completed_boolean_attribute)\r\n    msg (\"Rescue Princess Quest: \" + quest_object.rescue_princess_quest_is_completed_boolean_attribute)\r\n    // etc etc msg quest scripts\r\n    wait {\r\n      ClearScreen\r\n    }\r\n  </script>\r\n</command>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>there's not too much going on with my code, but it's able to be expanded pretty easily, but of course the code itself is complicated, despite what it is doing isn't that much, lol.</p>\n<p>The code is mainly complex to make it handle most of the work for you, and to be able to be easily expanded upon based on your wants/needs.</p>\n<p>you put all of your quests (names) in your game into the 'global_data_object.quest_stringlist_attribute' list, for example:</p>\n<pre><code>&lt;object name=\"global_data_object\"&gt;\n  &lt;attr name=\"quest_stringlist_attribute\" type=\"simplestringlist\"&gt;rescue_kitten;rescue_princess;bring_girl_flowers;etc&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<p>and if you put in your descriptions/briefing/info/reward/etc of ALL of the quests (this code can be adjusted to handle what you want, additional info/rewards/details/etc and/or changed around if you don't like it):</p>\n<pre><code>&lt;attr name=\"quest_description_stringdictionary_attribute\" type=\"stringdictionary\"&gt;\n    &lt;item&gt;\n      &lt;key&gt;rescue_kitten&lt;/key&gt;\n      &lt;value&gt;You best friend's baby kitten crawled up into a tree and is too scared to climb back down&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;rescue_princess&lt;/key&gt;\n      &lt;value&gt;The princess has been taken by a dragon, go into the dragon's lair and slay the dragon, to rescue her.&lt;/value&gt;\n    &lt;/item&gt;\n    &lt;item&gt;\n      &lt;key&gt;give_flowers_to_girl&lt;/key&gt;\n      &lt;value&gt;There's a girl that you like, go buy some flowers to then give them to her&lt;/value&gt;\n    &lt;/item&gt;\n  &lt;/attr&gt;\n</code></pre>\n<p>as you discover quests, you add them to that Player Object's 'quest_stringlist_attribute', via using the 'add_quest_status_stringdictionary_function (QUEST_NAME)'</p>\n<p>upon typing in 'quest', you'll see your current quest information (you won't see the quests you've not discovered yet - don't want to spoil the game's future/further progress/content quests --- this is the purpose of the 'quest_stringlist_attribute' for each of your Player Objects, this is the list of your currently discovered quests, so that you're not seeing all of the quests in the game to be discovered - not spoiling the game), for example:</p>\n<pre><code>Quest Screen:\n\n1. Rescue Kitten Quest: incomplete\n\nYou best friend's baby kitten crawled up into a tree and is too scared to climb back down\n\n2. Rescue Princess Quest: incomplete\n\netc etc etc\n\n3. Give Flowers to Girl Quest: incomplete\n\netc etc etc\n</code></pre>\n<p>and upon completing a quest, use this Function: 'update_quest_status_stringdictionary_function (QUEST_NAME)'.</p>\n<p>and now, your 'quest_screen_command' Command's display will be for example:</p>\n<pre><code>Quest Screen:\n\n1. Rescue Kitten Quest: completed\n\nYou best friend's baby kitten crawled up into a tree and is too scared to climb back down\n\n2. Rescue Princess Quest: completed\n\netc etc etc\n\n3. Give Flowers to Girl Quest: incomplete\n\netc etc etc\n\n4. Teach townspeople to grow food quest: incomplete\n\netc etc etc\n</code></pre>\n<hr>\n<p>if you just want something really simple:</p>\n<p>just have a bunch of Boolean (or String or Integer) Attributes, which you adjust as needed, and then have a Command to show/display them of course</p>\n<pre><code>&lt;object name=\"quest_object\"&gt;\n  &lt;attr name=\"rescue_kitten_quest_is_completed_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"rescue_princess_quest_is_completed_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n  &lt;attr name=\"give_flowers_to_girl_quest_is_completed_boolean_attribute\" type=\"boolean\"&gt;false&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;command name=\"quest_command\"&gt;\n  &lt;pattern&gt;quest&lt;/pattern&gt;\n  &lt;script&gt;\n    // this is a very inefficient way of doing it: manually/individually, if you want better ways, see my previous post for example, and ask for help if you're interested in doing it in a more efficient way:\n    ClearScreen\n    msg (\"Quest Screen\")\n    msg (\"\")\n    msg (\"Rescue Kitten Quest: \" + quest_object.rescue_kitten_quest_is_completed_boolean_attribute)\n    msg (\"Rescue Princess Quest: \" + quest_object.rescue_princess_quest_is_completed_boolean_attribute)\n    // etc etc msg quest scripts\n    wait {\n      ClearScreen\n    }\n  &lt;/script&gt;\n&lt;/command&gt;\n</code></pre>\n\n",
      "PostDate": "2016-08-10T12:01:17.0767831Z",
      "LastEditDate": "2016-08-10T12:12:11.4333775Z"
    }
  ]
}
