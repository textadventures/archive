{
  "Topic": {
    "TopicId": "2427",
    "ForumId": "10",
    "Title": "Mono",
    "LastUpdated": "2011-04-18T09:28:04+01:00",
    "ReplyCount": 7
  },
  "Posts": [
    {
      "PostId": "17906",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "I haven't had a chance to dig through the code yet (next day or two), but have you been using P/Invoke or any nonmanaged libraries? What would be the chance this project could be altered to work with Mono? If you're using VB.NET and C# this could very easily be a cross-platform application.\n\nI haven't looked at the code in the slightest yet so this could be a ridiculous hope.",
      "EditableFormat": "bbcode",
      "HTML": "I haven't had a chance to dig through the code yet (next day or two), but have you been using P/Invoke or any nonmanaged libraries? What would be the chance this project could be altered to work with Mono? If you're using VB.NET and C# this could very easily be a cross-platform application.<br/><br/>I haven't looked at the code in the slightest yet so this could be a ridiculous hope.",
      "PostDate": "2011-03-15T23:42:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17909",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Yes I'm hoping to get Quest 5 working with Mono too. It's pure .NET - there's no P/Invoke, unmanaged libraries etc. so it should be relatively straightforward to get it working in Mono.\n\nI had a bit of a play with MonoDevelop a few months ago and their VB.NET compiler doesn't handle everything correctly, so there would be a bit of work to get it to [i:2e5yx29e]compile[/i:2e5yx29e] under Mono. But getting it just to [i:2e5yx29e]run[/i:2e5yx29e] under Mono using the normal binaries should be easier.\n\nThe only complication I can think of is in the Player component. This embeds a browser, so Internet Explorer obviously under .NET, not sure what would be embedded under Mono. The Player component has to be registered via COM so that JavaScript within the browser can call the .NET functions. This probably won't work under Mono but there may be workarounds.",
      "EditableFormat": "bbcode",
      "HTML": "Yes I'm hoping to get Quest 5 working with Mono too. It's pure .NET - there's no P/Invoke, unmanaged libraries etc. so it should be relatively straightforward to get it working in Mono.<br/><br/>I had a bit of a play with MonoDevelop a few months ago and their VB.NET compiler doesn't handle everything correctly, so there would be a bit of work to get it to <span style=\"font-style:italic;\">compile</span> under Mono. But getting it just to <span style=\"font-style:italic;\">run</span> under Mono using the normal binaries should be easier.<br/><br/>The only complication I can think of is in the Player component. This embeds a browser, so Internet Explorer obviously under .NET, not sure what would be embedded under Mono. The Player component has to be registered via COM so that JavaScript within the browser can call the .NET functions. This probably won't work under Mono but there may be workarounds.",
      "PostDate": "2011-03-16T17:11:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17910",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "I'll see what I can do to get this running under Linux at least. I have Slackware and Debian running on another box, and I do plenty of development on that. From what I understand the Mono WebBrowser component doesn't have support for window.external.\n\nThis page has some useful information: [url:slbkq2b7]http&#58;//www&#46;mono-project&#46;com/WebBrowser[/url:slbkq2b7]\n\nI have Q5 compiling under Windows 7, and I'll see what I can do to compile it through Mono.",
      "EditableFormat": "bbcode",
      "HTML": "I'll see what I can do to get this running under Linux at least. I have Slackware and Debian running on another box, and I do plenty of development on that. From what I understand the Mono WebBrowser component doesn't have support for window.external.<br/><br/>This page has some useful information: <a href=\"http&#58;//www&#46;mono-project&#46;com/WebBrowser\" rel=\"nofollow\">http&#58;//www&#46;mono-project&#46;com/WebBrowser</a><br/><br/>I have Q5 compiling under Windows 7, and I'll see what I can do to compile it through Mono.",
      "PostDate": "2011-03-16T17:18:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17911",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "Ah, thanks, that's interesting. It's a shame that Mono doesn't support window.external because that's exactly what Quest uses in WebFunctions.js to implement ASLEvent.\n\nCurrently ASLEvent is only used in a couple of demo ASLX files for doing &quot;custom&quot; things on the interface, so it's not a big problem yet. Hopefully the hyperlinks will still work as that's done by handling the Click event on the HtmlElement.\n\nThere's a hacky solution to the lack of window.external support here: <!-- m --><a class=\"postlink\" href=\"http://stackoverflow.com/questions/1084850/mono-and-window-external\">http://stackoverflow.com/questions/1084 ... w-external</a><!-- m --> - maybe worth considering, or perhaps there's a better solution?",
      "EditableFormat": "bbcode",
      "HTML": "Ah, thanks, that's interesting. It's a shame that Mono doesn't support window.external because that's exactly what Quest uses in WebFunctions.js to implement ASLEvent.<br/><br/>Currently ASLEvent is only used in a couple of demo ASLX files for doing &quot;custom&quot; things on the interface, so it's not a big problem yet. Hopefully the hyperlinks will still work as that's done by handling the Click event on the HtmlElement.<br/><br/>There's a hacky solution to the lack of window.external support here: <!-- m --><a class=\"postlink\" href=\"http://stackoverflow.com/questions/1084850/mono-and-window-external\">http://stackoverflow.com/questions/1084 ... w-external</a><!-- m --> - maybe worth considering, or perhaps there's a better solution?",
      "PostDate": "2011-03-16T19:57:01+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17912",
      "UserId": 0,
      "Username": "Cryophile",
      "UserAvatar": null,
      "UserGravatar": "cbb093447274bd6d64613a0a60a7ab52",
      "EditableText": "Have you considered using Gecko instead of IE? window.external is very IE specific, and I can't see proper support being added in Mono's WebBrowser any time soon (and WebBrowser development is kind of slow or nonexistent). It would probably be easier to do this than any workaround.\n\n[url:1uuqu3ms]http&#58;//code&#46;google&#46;com/p/geckofx/[/url:1uuqu3ms]\n\nI'm slowly poring over what you have for Quest 5 right now.",
      "EditableFormat": "bbcode",
      "HTML": "Have you considered using Gecko instead of IE? window.external is very IE specific, and I can't see proper support being added in Mono's WebBrowser any time soon (and WebBrowser development is kind of slow or nonexistent). It would probably be easier to do this than any workaround.<br/><br/><a href=\"http&#58;//code&#46;google&#46;com/p/geckofx/\" rel=\"nofollow\">http&#58;//code&#46;google&#46;com/p/geckofx/</a><br/><br/>I'm slowly poring over what you have for Quest 5 right now.",
      "PostDate": "2011-03-16T20:21:29+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17913",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I think you're right, that is probably the solution. Frankly I find the WebBrowser control a bit of a pain anyway!\n\nI need to do some work on the (desktop) Player component to add in functionality which I've recently added to WebPlayer, so it's probably a good time to look at migrating it over to GeckoFX before any more significant work is done on it.",
      "EditableFormat": "bbcode",
      "HTML": "I think you're right, that is probably the solution. Frankly I find the WebBrowser control a bit of a pain anyway!<br/><br/>I need to do some work on the (desktop) Player component to add in functionality which I've recently added to WebPlayer, so it's probably a good time to look at migrating it over to GeckoFX before any more significant work is done on it.",
      "PostDate": "2011-03-16T21:04:26+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "17916",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I think GeckoFX may be overkill for this problem actually - it will bloat the download hugely, and it will add a dependency on a COM object which I want to avoid if possible.\n\nBut the good news is I've now removed the requirement for window.external - the ASLEvent function is now able to bridge the gap between JavaScript and ASL in a different way, using a hidden div element which we add a click event handler to. It's not hugely elegant but then neither was the window.external solution.\n\nThe nice thing is this means we don't need to register the Player.dll component for COM interop any more, which means you no longer need to run Visual Studio in admin mode! Maybe it even means you won't need admin rights to install Quest either.\n\nLatest code is uploaded to CodePlex...",
      "EditableFormat": "bbcode",
      "HTML": "I think GeckoFX may be overkill for this problem actually - it will bloat the download hugely, and it will add a dependency on a COM object which I want to avoid if possible.<br/><br/>But the good news is I've now removed the requirement for window.external - the ASLEvent function is now able to bridge the gap between JavaScript and ASL in a different way, using a hidden div element which we add a click event handler to. It's not hugely elegant but then neither was the window.external solution.<br/><br/>The nice thing is this means we don't need to register the Player.dll component for COM interop any more, which means you no longer need to run Visual Studio in admin mode! Maybe it even means you won't need admin rights to install Quest either.<br/><br/>Latest code is uploaded to CodePlex...",
      "PostDate": "2011-03-19T18:42:43+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "18013",
      "UserId": 0,
      "Username": "Alex",
      "UserAvatar": null,
      "UserGravatar": "188b72c5e13327f4fde3989dca7d7d53",
      "EditableText": "I had a bit of a play with Mono the other day and the implementation of WinForms seems very glitchy - it was quite hard to get anything to run at all, and I had to remove a load of controls in order to do so.\n\nI think a better approach will probably be to rewrite the front end for Mono. I don't think this should be too enormous a pain, as I've tried to keep the UI code totally separate throughout - we've already got two IPlayer implementations, the desktop Player and WebPlayer. So adding a third, say MacPlayer using MonoMac, shouldn't be too hard and it will give us a nice native UI on Mac.\n\nI guess for Linux that Gtk# would the way forward?\n\nIf we want a cross-platform Editor that will be a bigger amount of work as there's more UI there, but again the way I'm writing it I'm trying to keep the UI component as small as possible, with the &quot;real&quot; work happening in the EditorController component which can be used as the basis for multiple Editor UIs in the same way.\n\nI think for Quest 5.0, the IASL and IPlayer interfaces are now reasonably stable and unlikely to change significantly, so now would be a great time to start looking at a Mac version of the Player. Any volunteers?  <!-- s8) --><img src=\"{SMILIES_PATH}/icon_cool.gif\" alt=\"8)\" title=\"Cool\" /><!-- s8) -->",
      "EditableFormat": "bbcode",
      "HTML": "I had a bit of a play with Mono the other day and the implementation of WinForms seems very glitchy - it was quite hard to get anything to run at all, and I had to remove a load of controls in order to do so.<br/><br/>I think a better approach will probably be to rewrite the front end for Mono. I don't think this should be too enormous a pain, as I've tried to keep the UI code totally separate throughout - we've already got two IPlayer implementations, the desktop Player and WebPlayer. So adding a third, say MacPlayer using MonoMac, shouldn't be too hard and it will give us a nice native UI on Mac.<br/><br/>I guess for Linux that Gtk# would the way forward?<br/><br/>If we want a cross-platform Editor that will be a bigger amount of work as there's more UI there, but again the way I'm writing it I'm trying to keep the UI component as small as possible, with the &quot;real&quot; work happening in the EditorController component which can be used as the basis for multiple Editor UIs in the same way.<br/><br/>I think for Quest 5.0, the IASL and IPlayer interfaces are now reasonably stable and unlikely to change significantly, so now would be a great time to start looking at a Mac version of the Player. Any volunteers?  <!-- s8) --><img src=\"{SMILIES_PATH}/icon_cool.gif\" alt=\"8)\" title=\"Cool\" /><!-- s8) -->",
      "PostDate": "2011-04-18T09:28:04+01:00",
      "LastEditDate": null
    }
  ]
}
