{
  "Topic": {
    "TopicId": "5420",
    "ForumId": "10",
    "Title": "Integers with Text Value",
    "LastUpdated": "2015-09-14T19:26:31+01:00",
    "ReplyCount": 44
  },
  "Posts": [
    {
      "PostId": "37667",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Okay, so now that other stuff is taken care of. I was wondering if it was possible for an Integer value to display text...or have a text disguise. \n\nFor example, I currently have height as a stringlist with the values: 5'8, 5'9, 5'10 and so on. So I was wondering if it's possible to (easily) transfer those values into numerical integer values. \n\nMy idea is...\n\nPeople can choose their own heights and whatnot in the character creation. But later on in the game they can shrink and grow in height, for example, growing one inch or shrinking one inch. Well, as a stringlist if the player is 6'0 feet tall, and they hit one of those instances it'll be a mess of code to try and get the game to understand a universal shrink one inch no matter what height the character is, but as an integer or numerical value, the game would just subtract one inch from the current value....right?\n\nSounds way easier to me. \n\nCan this be done?",
      "EditableFormat": "bbcode",
      "HTML": "Okay, so now that other stuff is taken care of. I was wondering if it was possible for an Integer value to display text...or have a text disguise. <br/><br/>For example, I currently have height as a stringlist with the values: 5'8, 5'9, 5'10 and so on. So I was wondering if it's possible to (easily) transfer those values into numerical integer values. <br/><br/>My idea is...<br/><br/>People can choose their own heights and whatnot in the character creation. But later on in the game they can shrink and grow in height, for example, growing one inch or shrinking one inch. Well, as a stringlist if the player is 6'0 feet tall, and they hit one of those instances it'll be a mess of code to try and get the game to understand a universal shrink one inch no matter what height the character is, but as an integer or numerical value, the game would just subtract one inch from the current value....right?<br/><br/>Sounds way easier to me. <br/><br/>Can this be done?",
      "PostDate": "2015-08-17T00:47:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37668",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "Not sure, but it'd probably me easier if you used metric.  =)\n\nChanging 1.8m meters to 1.7m is probably a lot easier to write code for than 5'9&quot; to 5'8&quot;.  Just a thought...",
      "EditableFormat": "bbcode",
      "HTML": "Not sure, but it'd probably me easier if you used metric.  =)<br/><br/>Changing 1.8m meters to 1.7m is probably a lot easier to write code for than 5'9&quot; to 5'8&quot;.  Just a thought...",
      "PostDate": "2015-08-17T02:40:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37671",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:32gys4i7]Not sure, but it'd probably me easier if you used metric. =)\n\nChanging 1.8m meters to 1.7m is probably a lot easier to write code for than 5'9&quot; to 5'8&quot;. Just a thought...[/quote:32gys4i7]\n\nI would actually love to have both metric and imperial. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Not sure, but it'd probably me easier if you used metric. =)<br/><br/>Changing 1.8m meters to 1.7m is probably a lot easier to write code for than 5'9&quot; to 5'8&quot;. Just a thought...</p></blockquote><br/><br/>I would actually love to have both metric and imperial. <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2015-08-17T03:06:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37672",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes (but not via transfering~converting your strings, example 6'9'', into integers), instead you use Integer Attributes, which can then be used to format into the desired strings (String Attributes) that you want, and the simpliest way is to do this, is actually to decide upon a single base unit to use, for example with using height and Norse~American (base 12):\n\nfeet or inches\n\nlet's say we choose 'inches' as our single base unit:\n\n[code:11xfwgev]Reference&#58;\n\n0 inches = 0 feet\n12 inches = 1 foot\n24 inches = 2 feet\n36 inches = 3 feet\n48 inches = 4 feet\n60 inches = 5 feet\n72 inches = 6 feet\n84 inches = 7 feet\n96 inches = 8 feet\n108 inches = 9 feet\n120 inches = 10 feet[/code:11xfwgev]\n\nexample1: if you're 5 feet, then you'll input '60' for your height in inches in the code below\nexample2: if you're 6 feet and a half (6 inches), then you'll input '78' for your height in inches in the code below\n\n[code:11xfwgev]&lt;function name=&quot;height_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (&quot;What is your height (in inches)?&quot;)\n  get input {\n    if (IsInt (result) and result &gt;= 0 and result &lt;= 120) {\n      player&#46;inch_height_integer_attribute = result\n      player&#46;feet_height_integer_attribute = player&#46;inch_height_integer_attribute / 12\n      player&#46;remaining_inches_integer_attribute = player&#46;inch_height_attribute % 12 \n      player&#46;height_string_attribute = &quot;Height&#58; You are &quot; + player&#46;feet_height_integer_attribute + &quot; feet and &quot; + (player&#46;remaining_inches_integer_attribute + &quot; inches tall&quot;\n    } else {\n      msg (&quot;Wrong input, try again&quot;)\n      height_function\n    }\n  }\n&#93;&#93;&gt;&lt;/function&gt;[/code:11xfwgev]\n\n-------------\n\nwe could choose 'feet' as our base unit instead, and do the reverse (feet * 12 = inches, etc etc etc)\n\n-------------\n\nwe could also get two inputs instead (directly getting our 'inch' and 'feet' Integer Attribute VARIABLES):\n\n[code:11xfwgev]&lt;function name=&quot;height_function&quot;&gt;&lt;!&#91;CDATA&#91;\n  msg (&quot;What is your height?&quot;)\n  msg (&quot;(Type in your feet first, then you'll be asked again, for your inches)&quot;)\n  msg (&quot;&quot;)\n  msg (&quot;Feet?&quot;)\n  get input {\n    if (IsInt (result) and result &gt;= 0 and result &lt; 10) {\n      player&#46;feet_height_integer_attribute = result\n      msg (&quot;Inches?&quot;)\n      get input {\n        if (IsInt (result) and result &gt;= 0 and result &lt; 12) {\n          player&#46;inches_height_integer_attribute = result\n          player&#46;height_string_attribute = &quot;Height&#58; You are &quot; + player&#46;feet_height_integer_attribute + &quot; feet and &quot; + player&#46;inches_integer_attribute + &quot; inches tall&quot;\n        } else {\n          msg (&quot;Wrong input, try again&quot;)\n          height_function\n        }\n    } else {\n      msg (&quot;Wrong input, try again&quot;)\n      height_function\n    }\n  }\n&#93;&#93;&gt;&lt;/function&gt;[/code:11xfwgev]",
      "EditableFormat": "bbcode",
      "HTML": "yes (but not via transfering~converting your strings, example 6'9'', into integers), instead you use Integer Attributes, which can then be used to format into the desired strings (String Attributes) that you want, and the simpliest way is to do this, is actually to decide upon a single base unit to use, for example with using height and Norse~American (base 12):<br/><br/>feet or inches<br/><br/>let's say we choose 'inches' as our single base unit:<br/><br/><pre><code>Reference&#58;<br/><br/>0 inches = 0 feet<br/>12 inches = 1 foot<br/>24 inches = 2 feet<br/>36 inches = 3 feet<br/>48 inches = 4 feet<br/>60 inches = 5 feet<br/>72 inches = 6 feet<br/>84 inches = 7 feet<br/>96 inches = 8 feet<br/>108 inches = 9 feet<br/>120 inches = 10 feet</code></pre><br/><br/>example1: if you're 5 feet, then you'll input '60' for your height in inches in the code below<br/>example2: if you're 6 feet and a half (6 inches), then you'll input '78' for your height in inches in the code below<br/><br/><pre><code>&lt;function name=&quot;height_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (&quot;What is your height (in inches)?&quot;)<br/>  get input {<br/>    if (IsInt (result) and result &gt;= 0 and result &lt;= 120) {<br/>      player&#46;inch_height_integer_attribute = result<br/>      player&#46;feet_height_integer_attribute = player&#46;inch_height_integer_attribute / 12<br/>      player&#46;remaining_inches_integer_attribute = player&#46;inch_height_attribute % 12 <br/>      player&#46;height_string_attribute = &quot;Height&#58; You are &quot; + player&#46;feet_height_integer_attribute + &quot; feet and &quot; + (player&#46;remaining_inches_integer_attribute + &quot; inches tall&quot;<br/>    } else {<br/>      msg (&quot;Wrong input, try again&quot;)<br/>      height_function<br/>    }<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;</code></pre><br/><br/>-------------<br/><br/>we could choose 'feet' as our base unit instead, and do the reverse (feet * 12 = inches, etc etc etc)<br/><br/>-------------<br/><br/>we could also get two inputs instead (directly getting our 'inch' and 'feet' Integer Attribute VARIABLES):<br/><br/><pre><code>&lt;function name=&quot;height_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>  msg (&quot;What is your height?&quot;)<br/>  msg (&quot;(Type in your feet first, then you'll be asked again, for your inches)&quot;)<br/>  msg (&quot;&quot;)<br/>  msg (&quot;Feet?&quot;)<br/>  get input {<br/>    if (IsInt (result) and result &gt;= 0 and result &lt; 10) {<br/>      player&#46;feet_height_integer_attribute = result<br/>      msg (&quot;Inches?&quot;)<br/>      get input {<br/>        if (IsInt (result) and result &gt;= 0 and result &lt; 12) {<br/>          player&#46;inches_height_integer_attribute = result<br/>          player&#46;height_string_attribute = &quot;Height&#58; You are &quot; + player&#46;feet_height_integer_attribute + &quot; feet and &quot; + player&#46;inches_integer_attribute + &quot; inches tall&quot;<br/>        } else {<br/>          msg (&quot;Wrong input, try again&quot;)<br/>          height_function<br/>        }<br/>    } else {<br/>      msg (&quot;Wrong input, try again&quot;)<br/>      height_function<br/>    }<br/>  }<br/>&#93;&#93;&gt;&lt;/function&gt;</code></pre>",
      "PostDate": "2015-08-17T03:08:20+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37673",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "as for Metric (base 10) vs Norse~American (base 12), see if you can figure out how to do it... there's a few designs, depending on what you want for your game (for example, do you want: at beginning of the game, the person chooses metric or norse~american and that is all that gets displayed to the person throughout the game, or do you want metric and norse~american to both be displayed throughout the game, or do you want to be able to toggle~switch between metric and norse~american throughout the game? Each of these designs determine what and how much coding you need to do for the rest of your entire game code, as well, as the code for just the beginning part of your game)\n\nif not, ask, and we can help.\n\n------------\n\nP.S.\n\nthis code of mine covers a lot of character creation stuff that you may be interested in for your own game:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4988\">viewtopic.php?f=18&amp;t=4988</a><!-- l -->\n\nask, if you need help with any of it, or need anything explained.",
      "EditableFormat": "bbcode",
      "HTML": "as for Metric (base 10) vs Norse~American (base 12), see if you can figure out how to do it... there's a few designs, depending on what you want for your game (for example, do you want: at beginning of the game, the person chooses metric or norse~american and that is all that gets displayed to the person throughout the game, or do you want metric and norse~american to both be displayed throughout the game, or do you want to be able to toggle~switch between metric and norse~american throughout the game? Each of these designs determine what and how much coding you need to do for the rest of your entire game code, as well, as the code for just the beginning part of your game)<br/><br/>if not, ask, and we can help.<br/><br/>------------<br/><br/>P.S.<br/><br/>this code of mine covers a lot of character creation stuff that you may be interested in for your own game:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=4988\">viewtopic.php?f=18&amp;t=4988</a><!-- l --><br/><br/>ask, if you need help with any of it, or need anything explained.",
      "PostDate": "2015-08-17T03:13:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37687",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Well, the the height thing was just an example. I can always set up a metric stringlist corresponding to the height to display {if player.height=5'5: 1.6 meters} or {if player.height=5'5: 65 inches} or something like that. That isn't that big of an issue. \n\nI don't think I'd have to change the stringlists of the character creation itself, but I was wondering if I could change the extended stringlists (the ones to be used in the game and not the character creation) into integers, or if that would make it easier to leave it as it is. I suppose I need to explain it a little better...\n\nWith using height as an example. \n\nI am 5'6 ....I drink a height potion that will make me 1 inch taller. Well, the problem is, since the player can be anywhere between 5'0 and 6'5 having a potion that makes the player 1 inch taller would confuse the engine, I think. But if I had an integer disguised in there like... and integer of 2 represents a 5'6 person, and an integer of 3 represents a 5'7 person, then all I would have to do is make the potion to +1 height, and the player would see 5'7 instead. Right?",
      "EditableFormat": "bbcode",
      "HTML": "Well, the the height thing was just an example. I can always set up a metric stringlist corresponding to the height to display {if player.height=5'5: 1.6 meters} or {if player.height=5'5: 65 inches} or something like that. That isn't that big of an issue. <br/><br/>I don't think I'd have to change the stringlists of the character creation itself, but I was wondering if I could change the extended stringlists (the ones to be used in the game and not the character creation) into integers, or if that would make it easier to leave it as it is. I suppose I need to explain it a little better...<br/><br/>With using height as an example. <br/><br/>I am 5'6 ....I drink a height potion that will make me 1 inch taller. Well, the problem is, since the player can be anywhere between 5'0 and 6'5 having a potion that makes the player 1 inch taller would confuse the engine, I think. But if I had an integer disguised in there like... and integer of 2 represents a 5'6 person, and an integer of 3 represents a 5'7 person, then all I would have to do is make the potion to +1 height, and the player would see 5'7 instead. Right?",
      "PostDate": "2015-08-17T21:18:23+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37690",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yes, for that design, the String List Attribute that you already got, actually does this very thing for you (you just got to learn how to work with 'StringListItem'~Index numbering~positioning of Lists, which I try to guide+explain for you below), for example:\n\n--------\n\nas scripting:\n\n[code:14vui61r]game&#46;height_stringlist_attribute = split (&quot;1&#46;0; 2&#46;0; 3&#46;0; 4&#46;0; 5&#46;0&quot;, &quot;;&quot;)[/code:14vui61r]\n\nas creation tag:\n\n[code:14vui61r]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;height_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;1&#46;0; 2&#46;0; 3&#46;0; 4&#46;0; 5&#46;0&lt;/attr&gt;\n&lt;/game&gt;[/code:14vui61r]\n\n---------\n\nthe items~Values (for this example: 1.0, 2.0, 3.0, 4.0, 5.0) of the 'game.height_stringlist_attribute' Stringlist Attribute of the 'game' Game Object, are of 'type:string'\n\n-------\n\nconceptually about String List Attributes:\n\n[code:14vui61r]game&#46;height_stringlist_attribute = split (&quot;index number 0 position; index number 1 position; index number 2 position; index number position 3; index number 4 position&quot;, &quot;;&quot;)[/code:14vui61r]\n\n[code:14vui61r]&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;height_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;index number 0 position; index number 1 position; index number 2 position; index number 3 position; index number 4 position&lt;/attr&gt;\n&lt;/game&gt;[/code:14vui61r]\n\n&quot;1.0&quot; &lt;----&gt; index number 0 position\n&quot;2.0&quot; &lt;----&gt; index number 1 position\n&quot;3.0&quot; &lt;----&gt; index number 2 position\n&quot;4.0&quot; &lt;----&gt; index number 3 position\n&quot;5.0&quot; &lt;----&gt; index number 4 position\n\n------\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_lists.html\">http://docs.textadventures.co.uk/quest/ ... lists.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/stringlistitem.html\">http://docs.textadventures.co.uk/quest/ ... titem.html</a><!-- m -->\n\nStringListItem (Object_name.Stringlist_Attribute_name, index_number_position)\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 0)\n// player.height_string_attribute = &quot;1.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 1)\n// player.height_string_attribute = &quot;2.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 2)\n// player.height_string_attribute = &quot;3.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 3)\n// player.height_string_attribute = &quot;4.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 4)\n// player.height_string_attribute = &quot;5.0&quot;\n\nz = 3\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, z)\n// player.height_string_attribute = &quot;4.0&quot;\n\nshow menu (&quot;Number?&quot;, split (&quot;0; 1; 2; 3; 4&quot;, &quot;;&quot;), false) {\n// for example, you choose 1\n// result = 1\n}\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)\n// player.height_string_attribute = &quot;2.0&quot;\n\nmsg (&quot;Type in a number from 0 to 4&quot;)\nget input {\n// for example, you type: 2\n// result = 2\n}\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)\n// player.height_string_attribute = &quot;3.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, GetRandomInt (0, 4) )\n// player.height_string_attribute = StringListItem (game.height_stringlist_attribute, randomly it will select: 0 or 1 or 2 or 3 or 4 )\n// player.height_string_attribute = (based on whatever the random choosen index number is, it will be the matching~corresponding: &quot;1.0&quot; or &quot;2.0&quot; or &quot;3.0&quot; or &quot;4.0&quot; or &quot;5.0&quot;)\n\nx = GetRandomInt (0, 4)\n// for example, let's say it randonly chooses: 4\n// x = 4\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, x )\n// player.height_string_attribute = &quot;5.0&quot;\n\nplayer.feet_integer_attribute = 3\n// you drink a weak height potion (+1 feet): player.feet_integer_attribute = player.feet_integer_attribute + 1\n// player.feet_integer_attribute = 4\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, player.feet_integer_attribute)\n// before you drank the weak height potion: player.height_string_attribute = &quot;4.0&quot;\n// after you drank the weak height potion: player.height_string_attribute = &quot;5.0&quot;",
      "EditableFormat": "bbcode",
      "HTML": "yes, for that design, the String List Attribute that you already got, actually does this very thing for you (you just got to learn how to work with 'StringListItem'~Index numbering~positioning of Lists, which I try to guide+explain for you below), for example:<br/><br/>--------<br/><br/>as scripting:<br/><br/><pre><code>game&#46;height_stringlist_attribute = split (&quot;1&#46;0; 2&#46;0; 3&#46;0; 4&#46;0; 5&#46;0&quot;, &quot;;&quot;)</code></pre><br/><br/>as creation tag:<br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;height_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;1&#46;0; 2&#46;0; 3&#46;0; 4&#46;0; 5&#46;0&lt;/attr&gt;<br/>&lt;/game&gt;</code></pre><br/><br/>---------<br/><br/>the items~Values (for this example: 1.0, 2.0, 3.0, 4.0, 5.0) of the 'game.height_stringlist_attribute' Stringlist Attribute of the 'game' Game Object, are of 'type:string'<br/><br/>-------<br/><br/>conceptually about String List Attributes:<br/><br/><pre><code>game&#46;height_stringlist_attribute = split (&quot;index number 0 position; index number 1 position; index number 2 position; index number position 3; index number 4 position&quot;, &quot;;&quot;)</code></pre><br/><br/><pre><code>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;height_stringlist_attribute&quot; type=&quot;simplestringlist&quot;&gt;index number 0 position; index number 1 position; index number 2 position; index number 3 position; index number 4 position&lt;/attr&gt;<br/>&lt;/game&gt;</code></pre><br/><br/>&quot;1.0&quot; &lt;----&gt; index number 0 position<br/>&quot;2.0&quot; &lt;----&gt; index number 1 position<br/>&quot;3.0&quot; &lt;----&gt; index number 2 position<br/>&quot;4.0&quot; &lt;----&gt; index number 3 position<br/>&quot;5.0&quot; &lt;----&gt; index number 4 position<br/><br/>------<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/guides/using_lists.html\">http://docs.textadventures.co.uk/quest/ ... lists.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/stringlistitem.html\">http://docs.textadventures.co.uk/quest/ ... titem.html</a><!-- m --><br/><br/>StringListItem (Object_name.Stringlist_Attribute_name, index_number_position)<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 0)<br/>// player.height_string_attribute = &quot;1.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 1)<br/>// player.height_string_attribute = &quot;2.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 2)<br/>// player.height_string_attribute = &quot;3.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 3)<br/>// player.height_string_attribute = &quot;4.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 4)<br/>// player.height_string_attribute = &quot;5.0&quot;<br/><br/>z = 3<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, z)<br/>// player.height_string_attribute = &quot;4.0&quot;<br/><br/>show menu (&quot;Number?&quot;, split (&quot;0; 1; 2; 3; 4&quot;, &quot;;&quot;), false) {<br/>// for example, you choose 1<br/>// result = 1<br/>}<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)<br/>// player.height_string_attribute = &quot;2.0&quot;<br/><br/>msg (&quot;Type in a number from 0 to 4&quot;)<br/>get input {<br/>// for example, you type: 2<br/>// result = 2<br/>}<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)<br/>// player.height_string_attribute = &quot;3.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, GetRandomInt (0, 4) )<br/>// player.height_string_attribute = StringListItem (game.height_stringlist_attribute, randomly it will select: 0 or 1 or 2 or 3 or 4 )<br/>// player.height_string_attribute = (based on whatever the random choosen index number is, it will be the matching~corresponding: &quot;1.0&quot; or &quot;2.0&quot; or &quot;3.0&quot; or &quot;4.0&quot; or &quot;5.0&quot;)<br/><br/>x = GetRandomInt (0, 4)<br/>// for example, let's say it randonly chooses: 4<br/>// x = 4<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, x )<br/>// player.height_string_attribute = &quot;5.0&quot;<br/><br/>player.feet_integer_attribute = 3<br/>// you drink a weak height potion (+1 feet): player.feet_integer_attribute = player.feet_integer_attribute + 1<br/>// player.feet_integer_attribute = 4<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, player.feet_integer_attribute)<br/>// before you drank the weak height potion: player.height_string_attribute = &quot;4.0&quot;<br/>// after you drank the weak height potion: player.height_string_attribute = &quot;5.0&quot;",
      "PostDate": "2015-08-18T07:56:35+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37691",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Why not have the integer as the height in inches?\n\nI would use the integer as the primary attribute, and set a string attribute based on that. If you want to be fancy, set up a change script on the integer to automatically update the string.\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709\">viewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709</a><!-- l -->\n\nScript to convert the integer to a string:\nplayer.heightasstring = &quot;&quot; + player.height / 12 + &quot;'&quot; + player.height % 12",
      "EditableFormat": "bbcode",
      "HTML": "Why not have the integer as the height in inches?<br/><br/>I would use the integer as the primary attribute, and set a string attribute based on that. If you want to be fancy, set up a change script on the integer to automatically update the string.<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709\">viewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709</a><!-- l --><br/><br/>Script to convert the integer to a string:<br/>player.heightasstring = &quot;&quot; + player.height / 12 + &quot;'&quot; + player.height % 12",
      "PostDate": "2015-08-18T07:58:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37699",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:38e34bqq]&quot;1.0&quot; &lt;----&gt; index number 0 position\n&quot;2.0&quot; &lt;----&gt; index number 1 position\n&quot;3.0&quot; &lt;----&gt; index number 2 position\n&quot;4.0&quot; &lt;----&gt; index number 3 position\n&quot;5.0&quot; &lt;----&gt; index number 4 position\n\n------\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --> ... lists.html\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --> ... titem.html\n\nStringListItem (Object_name.Stringlist_Attribute_name, index_number_position)\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 0)\n// player.height_string_attribute = &quot;1.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 1)\n// player.height_string_attribute = &quot;2.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 2)\n// player.height_string_attribute = &quot;3.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 3)\n// player.height_string_attribute = &quot;4.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, 4)\n// player.height_string_attribute = &quot;5.0&quot;\n\nz = 3\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, z)\n// player.height_string_attribute = &quot;4.0&quot;\n\nshow menu (&quot;Number?&quot;, split (&quot;0; 1; 2; 3; 4&quot;, &quot;;&quot;), false) {\n// for example, you choose 1\n// result = 1\n}\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)\n// player.height_string_attribute = &quot;2.0&quot;\n\nmsg (&quot;Type in a number from 0 to 4&quot;)\nget input {\n// for example, you type: 2\n// result = 2\n}\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)\n// player.height_string_attribute = &quot;3.0&quot;\n\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, GetRandomInt (0, 4) )\n// player.height_string_attribute = StringListItem (game.height_stringlist_attribute, randomly it will select: 0 or 1 or 2 or 3 or 4 )\n// player.height_string_attribute = (based on whatever the random choosen index number is, it will be the matching~corresponding: &quot;1.0&quot; or &quot;2.0&quot; or &quot;3.0&quot; or &quot;4.0&quot; or &quot;5.0&quot;)\n\nx = GetRandomInt (0, 4)\n// for example, let's say it randonly chooses: 4\n// x = 4\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, x )\n// player.height_string_attribute = &quot;5.0&quot;\n\nplayer.feet_integer_attribute = 3\n// you drink a weak height potion (+1 feet): player.feet_integer_attribute = player.feet_integer_attribute + 1\n// player.feet_integer_attribute = 4\nplayer.height_string_attribute = StringListItem (game.height_stringlist_attribute, player.feet_integer_attribute)\n// before you drank the weak height potion: player.height_string_attribute = &quot;4.0&quot;\n// after you drank the weak height potion: player.height_string_attribute = &quot;5.0&quot;[/quote:38e34bqq]\n\nOkay, so this is completely beyond my understanding lol. Maybe if we can break it up into pieces and do little bits at a time, I might be able to get it. You are saying I can use the extended library we made to work like an integer value? \n\n[quote:38e34bqq]Why not have the integer as the height in inches?\n\nI would use the integer as the primary attribute, and set a string attribute based on that. If you want to be fancy, set up a change script on the integer to automatically update the string.\nviewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709\n\nScript to convert the integer to a string:\nplayer.heightasstring = &quot;&quot; + player.height / 12 + &quot;'&quot; + player.height % 12[/quote:38e34bqq]\n\nWhere would I put that? I'm not sure I follow clearly.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>&quot;1.0&quot; &lt;----&gt; index number 0 position<br/>&quot;2.0&quot; &lt;----&gt; index number 1 position<br/>&quot;3.0&quot; &lt;----&gt; index number 2 position<br/>&quot;4.0&quot; &lt;----&gt; index number 3 position<br/>&quot;5.0&quot; &lt;----&gt; index number 4 position<br/><br/>------<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --> ... lists.html<br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/\">http://docs.textadventures.co.uk/quest/</a><!-- m --> ... titem.html<br/><br/>StringListItem (Object_name.Stringlist_Attribute_name, index_number_position)<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 0)<br/>// player.height_string_attribute = &quot;1.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 1)<br/>// player.height_string_attribute = &quot;2.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 2)<br/>// player.height_string_attribute = &quot;3.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 3)<br/>// player.height_string_attribute = &quot;4.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, 4)<br/>// player.height_string_attribute = &quot;5.0&quot;<br/><br/>z = 3<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, z)<br/>// player.height_string_attribute = &quot;4.0&quot;<br/><br/>show menu (&quot;Number?&quot;, split (&quot;0; 1; 2; 3; 4&quot;, &quot;;&quot;), false) {<br/>// for example, you choose 1<br/>// result = 1<br/>}<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)<br/>// player.height_string_attribute = &quot;2.0&quot;<br/><br/>msg (&quot;Type in a number from 0 to 4&quot;)<br/>get input {<br/>// for example, you type: 2<br/>// result = 2<br/>}<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, result)<br/>// player.height_string_attribute = &quot;3.0&quot;<br/><br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, GetRandomInt (0, 4) )<br/>// player.height_string_attribute = StringListItem (game.height_stringlist_attribute, randomly it will select: 0 or 1 or 2 or 3 or 4 )<br/>// player.height_string_attribute = (based on whatever the random choosen index number is, it will be the matching~corresponding: &quot;1.0&quot; or &quot;2.0&quot; or &quot;3.0&quot; or &quot;4.0&quot; or &quot;5.0&quot;)<br/><br/>x = GetRandomInt (0, 4)<br/>// for example, let's say it randonly chooses: 4<br/>// x = 4<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, x )<br/>// player.height_string_attribute = &quot;5.0&quot;<br/><br/>player.feet_integer_attribute = 3<br/>// you drink a weak height potion (+1 feet): player.feet_integer_attribute = player.feet_integer_attribute + 1<br/>// player.feet_integer_attribute = 4<br/>player.height_string_attribute = StringListItem (game.height_stringlist_attribute, player.feet_integer_attribute)<br/>// before you drank the weak height potion: player.height_string_attribute = &quot;4.0&quot;<br/>// after you drank the weak height potion: player.height_string_attribute = &quot;5.0&quot;</p></blockquote><br/><br/>Okay, so this is completely beyond my understanding lol. Maybe if we can break it up into pieces and do little bits at a time, I might be able to get it. You are saying I can use the extended library we made to work like an integer value? <br/><br/><blockquote><p>Why not have the integer as the height in inches?<br/><br/>I would use the integer as the primary attribute, and set a string attribute based on that. If you want to be fancy, set up a change script on the integer to automatically update the string.<br/>viewtopic.php?f=18&amp;t=5307&amp;p=36709#p36709<br/><br/>Script to convert the integer to a string:<br/>player.heightasstring = &quot;&quot; + player.height / 12 + &quot;'&quot; + player.height % 12</p></blockquote><br/><br/>Where would I put that? I'm not sure I follow clearly.",
      "PostDate": "2015-08-19T05:58:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37711",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "let's try this analogy:\n\nyou're familiar with real-life grociery shopping lists (though excluding the quantity of each item), I presume:\n\nvertically:\n\n1. eggs\n2. milk\n3. bread\n4. meat\n\nor horizontally:\n\n(1) eggs, (2) milk, (3) bread, (4) meat\n\n--------\n\nexcept, instead of starting with (1), we start with (0):\n\nvertically:\n\n0. eggs\n1. milk\n2. bread\n3. meat\n\nor horizontally:\n\n(0) eggs, (1) milk, (2) bread, (3) meat\n\n------\n\nnow, that you know your shopping list's index ordering, let's remove the index ordering, as it's understood (by quest already and hopefully you too now):\n\nvertically:\n\neggs\nmilk\nbread\nmeat\n\nor horizontally:\n\neggs, milk, bread, meat\n\n-------\n\nif I asked you to just~only get the index '0' item on~in the shopping list, what item are you to get?\n\nAnswer: eggs\n\nif I asked you to just~only get the index '1' item on~in the shopping list, what item are you to get?\n\nAnswer: milk\n\nif I asked you to just~only get the index '2' item on~in the shopping list, what item are you to get?\n\nAnswer: bread\n\nif I asked you to just~only get the index '3' item on~in the shopping list, what item are you to get?\n\nAnswer: meat\n\nif I asked you to just~only get the index '4' item on~in the shopping list, what item are you to get?\n\nAnswer: ERROR, there is no 4th index item (there are 4 items, but they're indexed from starting at 0, not 1, so the 4th item is the '3' index position in the shopping list. Thus the 4th index item would be the 5th item, but there is no 5th item in this shopping list, there's only 4 items)\n\n----------\n\nnow, let's write the shopping list as code:\n\n(I'm using the 'game' Game Object, as the Object that has~added the 'shopping_list' Stringlist Attribute for this example post of mine, but you can have~use any Object instead having~added your various Stringlist Attributes)\n\n[code:3sf09tlc]in scripting&#58;\n\ngame&#46;shopping_list = split (&quot;eggs;milk;bread;meat&quot;, &quot;;&quot;)\n\n------------ and~or --------------------------\n\nas 'creation' tag block&#58;\n\nhorizontal, type=&quot;simplestringlist&quot;, is better for only single word items, such as our shopping list&#58;\n\n&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;shopping_list&quot; type=&quot;simplestringlist&quot;&gt;eggs;milk;bread;meat&lt;/attr&gt;\n&lt;/game&gt;\n\nor\n\nvertical, type=&quot;stringlist&quot;, is better when you got long sentences for your items, for an example&#58;\n\n&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;race_description_list&quot; type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;Human Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;\n    &lt;value&gt;Dwarf Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;\n    &lt;value&gt;Elf Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;\n  &lt;/attr&gt;\n&lt;/game&gt;\n\nthough you can certainly use vertical for single word items too if you like\n\nhere is our shopping list vertically&#58;\n\n&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;shopping_list&quot; type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;eggs&lt;/value&gt;\n    &lt;value&gt;milk&lt;/value&gt;\n    &lt;value&gt;bread&lt;/value&gt;\n    &lt;value&gt;meat&lt;/value&gt;\n  &lt;/attr&gt;\n&lt;/game&gt;[/code:3sf09tlc]\n\n---------------------\n\nthis code line below, gets the (string) item in your String List, based on the index number you provide it:\n\n(caps matter for this, it must be: S-tring L-ist I-tem, see below)\n\nVARIABLE = StringListItem (List_name, index number)\n\nso, for our example:\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 0)\n// Question: what (string) item is in the player's grociery bag ???\n// Answer: &quot;eggs&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 3)\n// Question: what (string) item is in the player's grociery bag ???\n// Answer: &quot;meat&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 1)\n// Question: what (string) item is in the player's grociery bag ???\n// Answer: &quot;milk&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 2)\n// Question: what (string) item is in the player's grociery bag ???\n// Answer: &quot;bread&quot;\n\n---------\n\ndoes this makes sense now?\n\n-----------\n\nthe hidden-understood index ordering is always LEFT-TO-RIGHT (or: UP-TO-DOWN) and it starts with ZERO\n\n---------\n\n[b:3sf09tlc][size=150:3sf09tlc]challenge~tests~practice for you:[/size:3sf09tlc][/b:3sf09tlc]\n\n(notice that I changed the index number placement of the items from my example above, for this test~challenge~practice for you below)\n\n[code:3sf09tlc]game&#46;shopping_list = split (&quot;bread;meat;milk;eggs&quot;, &quot;;&quot;)\n\n------- and~or -------------------------------\n\n&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;shopping_list&quot; type=&quot;simplestringlist&quot;&gt;bread;meat;milk;eggs&lt;/attr&gt;\n&lt;/game&gt;\n\nor\n\n&lt;game name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;shopping_list&quot; type=&quot;stringlist&quot;&gt;\n    &lt;value&gt;bread&lt;/value&gt;\n    &lt;value&gt;meat&lt;/value&gt;\n    &lt;value&gt;milk&lt;/value&gt;\n    &lt;value&gt;eggs&lt;/value&gt;\n  &lt;/attr&gt;\n&lt;/game&gt;[/code:3sf09tlc]\n\nQuestion: the 'eggs' item's index number is? Answer: 3\nQuestion: the 'meat' index number is? Answer: 1\nQuestion: the 'milk' index number is? Answer: 2\nQuestion: the 'bread' index number is? Answer: 0\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 2)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: &quot;milk&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 0)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: &quot;bread&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 3)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: &quot;eggs&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 1)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: &quot;meat&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 4)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: ERROR, there is no 4th index item, as your list only contains 4 items, the 4th item is 3rd index\n\nplayer.grociery_bag = StringListItem (game.shopping_list, GetRandomInt (0,3))\n// Question: what (string) item is in the player's grociery bag?\n// Answer: (randomly: &quot;eggs&quot; or &quot;milk&quot; or &quot;bread&quot; or &quot;meat&quot;)\n\nx = 2\nplayer.grociery_bag = StringListItem (game.shopping_list, x)\n// Question: what (string) item is in the player's grociery bag?\n// Answer: &quot;milk&quot;\n\n[code:3sf09tlc]show menu (&quot;Number?&quot;, split (&quot;0;1;2;3&quot;, &quot;;&quot;), false) {\n  // let's say you selected&#58; 1\n  // result = 1\n  player&#46;grociery_bag = StringListItem (game&#46;shopping_list, result)\n}[/code:3sf09tlc]\nQuestion: what (string) item is in the player's grociery bag?\nAnswer: &quot;meat&quot;\n\n[code:3sf09tlc]msg (&quot;Type in the number of the item you want&quot;)\nDisplayList (game&#46;shopping_list, true)\nget input {\n  // let's say you typed in&#58; 4\n  // result = 4\n  if (IsInt (result) and result &gt;= 1 and result &lt;= ListCount (game&#46;shopping_list) ) {\n    player&#46;grociery_bag = StringListItem (game&#46;shopping_list, ToInt (result) - 1)\n    // this will work, due to the 'ToInt (result) - 1', this code is a bit more advanced, so study it, or ask for help\n    // hint1&#58; ListCount (List_name) ~~ gets~returns the total number of items in your list, ie&#58; 4 (remember&#58; that this 4th~last item's index number is&#58; 3)\n    // hint2&#58; ListCount (List_name) - 1 ~~ total number of items in your list - 1 = a correct index number of an item in your list\n  }\n}[/code:3sf09tlc]\nQuestion: what (string) item is in the player's grociery bag?\nAnswer: &quot;eggs&quot;\nAnswer Explanation: 4 - 1 = 3 index number = &quot;eggs&quot; ----&gt; &quot;eggs&quot;\n\nif I typed in '3', instead of 4:\nAnswer: &quot;milk&quot;\nAnswer Explanation: 3 - 1 = 2 index number = &quot;milk&quot; ----&gt; &quot;milk&quot;\n\nif I typed in '2', instead of 4:\nAnswer: &quot;meat&quot;\nAnswer Explanation: 2 - 1 = 1 index number = &quot;meat&quot; ----&gt; &quot;meat&quot;\n\nif I typed in '1', instead of 4:\nAnswer: &quot;bread&quot;\nAnswer Explanation: 1 - 1 = 0 index number = &quot;bread&quot; ----&gt; &quot;bread&quot;",
      "EditableFormat": "bbcode",
      "HTML": "let's try this analogy:<br/><br/>you're familiar with real-life grociery shopping lists (though excluding the quantity of each item), I presume:<br/><br/>vertically:<br/><br/>1. eggs<br/>2. milk<br/>3. bread<br/>4. meat<br/><br/>or horizontally:<br/><br/>(1) eggs, (2) milk, (3) bread, (4) meat<br/><br/>--------<br/><br/>except, instead of starting with (1), we start with (0):<br/><br/>vertically:<br/><br/>0. eggs<br/>1. milk<br/>2. bread<br/>3. meat<br/><br/>or horizontally:<br/><br/>(0) eggs, (1) milk, (2) bread, (3) meat<br/><br/>------<br/><br/>now, that you know your shopping list's index ordering, let's remove the index ordering, as it's understood (by quest already and hopefully you too now):<br/><br/>vertically:<br/><br/>eggs<br/>milk<br/>bread<br/>meat<br/><br/>or horizontally:<br/><br/>eggs, milk, bread, meat<br/><br/>-------<br/><br/>if I asked you to just~only get the index '0' item on~in the shopping list, what item are you to get?<br/><br/>Answer: eggs<br/><br/>if I asked you to just~only get the index '1' item on~in the shopping list, what item are you to get?<br/><br/>Answer: milk<br/><br/>if I asked you to just~only get the index '2' item on~in the shopping list, what item are you to get?<br/><br/>Answer: bread<br/><br/>if I asked you to just~only get the index '3' item on~in the shopping list, what item are you to get?<br/><br/>Answer: meat<br/><br/>if I asked you to just~only get the index '4' item on~in the shopping list, what item are you to get?<br/><br/>Answer: ERROR, there is no 4th index item (there are 4 items, but they're indexed from starting at 0, not 1, so the 4th item is the '3' index position in the shopping list. Thus the 4th index item would be the 5th item, but there is no 5th item in this shopping list, there's only 4 items)<br/><br/>----------<br/><br/>now, let's write the shopping list as code:<br/><br/>(I'm using the 'game' Game Object, as the Object that has~added the 'shopping_list' Stringlist Attribute for this example post of mine, but you can have~use any Object instead having~added your various Stringlist Attributes)<br/><br/><pre><code>in scripting&#58;<br/><br/>game&#46;shopping_list = split (&quot;eggs;milk;bread;meat&quot;, &quot;;&quot;)<br/><br/>------------ and~or --------------------------<br/><br/>as 'creation' tag block&#58;<br/><br/>horizontal, type=&quot;simplestringlist&quot;, is better for only single word items, such as our shopping list&#58;<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;shopping_list&quot; type=&quot;simplestringlist&quot;&gt;eggs;milk;bread;meat&lt;/attr&gt;<br/>&lt;/game&gt;<br/><br/>or<br/><br/>vertical, type=&quot;stringlist&quot;, is better when you got long sentences for your items, for an example&#58;<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;race_description_list&quot; type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;Human Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;<br/>    &lt;value&gt;Dwarf Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;<br/>    &lt;value&gt;Elf Race Description&#58; blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah&lt;/value&gt;<br/>  &lt;/attr&gt;<br/>&lt;/game&gt;<br/><br/>though you can certainly use vertical for single word items too if you like<br/><br/>here is our shopping list vertically&#58;<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;shopping_list&quot; type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;eggs&lt;/value&gt;<br/>    &lt;value&gt;milk&lt;/value&gt;<br/>    &lt;value&gt;bread&lt;/value&gt;<br/>    &lt;value&gt;meat&lt;/value&gt;<br/>  &lt;/attr&gt;<br/>&lt;/game&gt;</code></pre><br/><br/>---------------------<br/><br/>this code line below, gets the (string) item in your String List, based on the index number you provide it:<br/><br/>(caps matter for this, it must be: S-tring L-ist I-tem, see below)<br/><br/>VARIABLE = StringListItem (List_name, index number)<br/><br/>so, for our example:<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 0)<br/>// Question: what (string) item is in the player's grociery bag ???<br/>// Answer: &quot;eggs&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 3)<br/>// Question: what (string) item is in the player's grociery bag ???<br/>// Answer: &quot;meat&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 1)<br/>// Question: what (string) item is in the player's grociery bag ???<br/>// Answer: &quot;milk&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 2)<br/>// Question: what (string) item is in the player's grociery bag ???<br/>// Answer: &quot;bread&quot;<br/><br/>---------<br/><br/>does this makes sense now?<br/><br/>-----------<br/><br/>the hidden-understood index ordering is always LEFT-TO-RIGHT (or: UP-TO-DOWN) and it starts with ZERO<br/><br/>---------<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:150\">challenge~tests~practice for you:</span></span><br/><br/>(notice that I changed the index number placement of the items from my example above, for this test~challenge~practice for you below)<br/><br/><pre><code>game&#46;shopping_list = split (&quot;bread;meat;milk;eggs&quot;, &quot;;&quot;)<br/><br/>------- and~or -------------------------------<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;shopping_list&quot; type=&quot;simplestringlist&quot;&gt;bread;meat;milk;eggs&lt;/attr&gt;<br/>&lt;/game&gt;<br/><br/>or<br/><br/>&lt;game name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;shopping_list&quot; type=&quot;stringlist&quot;&gt;<br/>    &lt;value&gt;bread&lt;/value&gt;<br/>    &lt;value&gt;meat&lt;/value&gt;<br/>    &lt;value&gt;milk&lt;/value&gt;<br/>    &lt;value&gt;eggs&lt;/value&gt;<br/>  &lt;/attr&gt;<br/>&lt;/game&gt;</code></pre><br/><br/>Question: the 'eggs' item's index number is? Answer: 3<br/>Question: the 'meat' index number is? Answer: 1<br/>Question: the 'milk' index number is? Answer: 2<br/>Question: the 'bread' index number is? Answer: 0<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 2)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: &quot;milk&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 0)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: &quot;bread&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 3)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: &quot;eggs&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 1)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: &quot;meat&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 4)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: ERROR, there is no 4th index item, as your list only contains 4 items, the 4th item is 3rd index<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, GetRandomInt (0,3))<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: (randomly: &quot;eggs&quot; or &quot;milk&quot; or &quot;bread&quot; or &quot;meat&quot;)<br/><br/>x = 2<br/>player.grociery_bag = StringListItem (game.shopping_list, x)<br/>// Question: what (string) item is in the player's grociery bag?<br/>// Answer: &quot;milk&quot;<br/><br/><pre><code>show menu (&quot;Number?&quot;, split (&quot;0;1;2;3&quot;, &quot;;&quot;), false) {<br/>  // let's say you selected&#58; 1<br/>  // result = 1<br/>  player&#46;grociery_bag = StringListItem (game&#46;shopping_list, result)<br/>}</code></pre><br/>Question: what (string) item is in the player's grociery bag?<br/>Answer: &quot;meat&quot;<br/><br/><pre><code>msg (&quot;Type in the number of the item you want&quot;)<br/>DisplayList (game&#46;shopping_list, true)<br/>get input {<br/>  // let's say you typed in&#58; 4<br/>  // result = 4<br/>  if (IsInt (result) and result &gt;= 1 and result &lt;= ListCount (game&#46;shopping_list) ) {<br/>    player&#46;grociery_bag = StringListItem (game&#46;shopping_list, ToInt (result) - 1)<br/>    // this will work, due to the 'ToInt (result) - 1', this code is a bit more advanced, so study it, or ask for help<br/>    // hint1&#58; ListCount (List_name) ~~ gets~returns the total number of items in your list, ie&#58; 4 (remember&#58; that this 4th~last item's index number is&#58; 3)<br/>    // hint2&#58; ListCount (List_name) - 1 ~~ total number of items in your list - 1 = a correct index number of an item in your list<br/>  }<br/>}</code></pre><br/>Question: what (string) item is in the player's grociery bag?<br/>Answer: &quot;eggs&quot;<br/>Answer Explanation: 4 - 1 = 3 index number = &quot;eggs&quot; ----&gt; &quot;eggs&quot;<br/><br/>if I typed in '3', instead of 4:<br/>Answer: &quot;milk&quot;<br/>Answer Explanation: 3 - 1 = 2 index number = &quot;milk&quot; ----&gt; &quot;milk&quot;<br/><br/>if I typed in '2', instead of 4:<br/>Answer: &quot;meat&quot;<br/>Answer Explanation: 2 - 1 = 1 index number = &quot;meat&quot; ----&gt; &quot;meat&quot;<br/><br/>if I typed in '1', instead of 4:<br/>Answer: &quot;bread&quot;<br/>Answer Explanation: 1 - 1 = 0 index number = &quot;bread&quot; ----&gt; &quot;bread&quot;",
      "PostDate": "2015-08-20T23:51:01+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37714",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Okay! Going to attempt to see if I understood all that. \n\nWhen making a &quot;Integer List&quot; that refers to a &quot;String List&quot; the items in that String List will always start at the number &quot;0&quot; and move upward from there. If the number referred to doesn't exist, it becomes an ERROR. \n\nYou go into the &quot;Game Object&quot; and &quot;Attributes&quot; ((In my case, I'd go to &quot;Object Group, Data Group, fulldata&quot;))\n\nand find the rest of the &quot;Extended String List&quot; items that I already have. Vertical list for short-worded lists, Horizontal lists for long-worded lists.\n\nI think the only thing I don't get is how to make the individual Stringlists into Integer Lists. \n\nFrom what you said...\n\nDo you...\n\nClick &quot;Attributes&quot;, Select the &quot;StringList&quot; I want to start with like...&quot;height&quot;, for example, and...?\n[quote:18oajm1t]\nVARIABLE = StringListItem (List_name, index number)[/quote:18oajm1t]\n\nAdd a change-script or something?\n\nI'm lost, lol. \n\nI appreciate the detailed explanation so far though, but you have to remember I'm an idiot.",
      "EditableFormat": "bbcode",
      "HTML": "Okay! Going to attempt to see if I understood all that. <br/><br/>When making a &quot;Integer List&quot; that refers to a &quot;String List&quot; the items in that String List will always start at the number &quot;0&quot; and move upward from there. If the number referred to doesn't exist, it becomes an ERROR. <br/><br/>You go into the &quot;Game Object&quot; and &quot;Attributes&quot; ((In my case, I'd go to &quot;Object Group, Data Group, fulldata&quot;))<br/><br/>and find the rest of the &quot;Extended String List&quot; items that I already have. Vertical list for short-worded lists, Horizontal lists for long-worded lists.<br/><br/>I think the only thing I don't get is how to make the individual Stringlists into Integer Lists. <br/><br/>From what you said...<br/><br/>Do you...<br/><br/>Click &quot;Attributes&quot;, Select the &quot;StringList&quot; I want to start with like...&quot;height&quot;, for example, and...?<br/><blockquote><p><br/>VARIABLE = StringListItem (List_name, index number)</p></blockquote><br/><br/>Add a change-script or something?<br/><br/>I'm lost, lol. <br/><br/>I appreciate the detailed explanation so far though, but you have to remember I'm an idiot.",
      "PostDate": "2015-08-21T04:59:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37715",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you just create~add a Stringlist Attribute, there is no &quot;integer list&quot; (sorry for the confusion!), but I'll try to explain (hopefully better than last post) below:\n\nwe need to first get you familiar with using~working with Lists... then, we'll tackle specifically for what you want to do in your game, with your game's Attributes, Objects, and etc.\n\nlet's do this in the GUI~Editor, to make it easier for you.\n\nfor example:\n\ncreate a new game, for using this guide\n\n'game' Game Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n// you can use any Object, it doesn't have to be the 'game' Game Object, but then everywhere in my code below, you'll have to put in the name of your choosen object, in-place of where you see 'game' in my 'buy' Verb code block below for using this example.\n\n(Object Name: game)\nAttribute Name: shopping_list\nAttribute Type: stringlist\nAttribute Value (Add): (see below)\n\nthe first (string) item (let's add: eggs) you add is internally (you never get to see this) stored as index number: 0\n\nthe second (string) item (let's add: milk) you add is internally stored as index number: 1\n\nand so forth....\n\nthe 'StringListItem' uses the index number (that you specify in its code line) to return the (string) item's name from your String List\n\nfirst added item to your String List: eggs ~~~~~ 'eggs' is internally matched to index number: 0\nsecond added item to your String List: milk ~~~~~ 'milk' is internally matched to index number: 1\nthird added item to your String List: bread ~~~~~ 'bread' is internally matched to index number: 2\nfourth (and last) added item to your String List: meat ~~~~ 'meat' is internally matched to index number: 3\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 0)\n// we specified the '0' index number as seen above, and thus it returns: &quot;eggs&quot;\n// player.grociery_bag = &quot;eggs&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 1)\n// we specified the '1' index number as seen above, and thus it returns: &quot;milk&quot;\n// player.grociery_bag = &quot;milk&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 3)\n// we specified the '3' index number as seen above, and thus it returns: &quot;meat&quot;\n// player.grociery_bag = &quot;meat&quot;\n\nplayer.grociery_bag = StringListItem (game.shopping_list, 2)\n// we specified the '2' index number as seen above, and thus it returns: &quot;bread&quot;\n// player.grociery_bag = &quot;bread&quot;\n\nnow, there's many ways of specifying what number for the index number in the 'StringListItem', such as using: 'GetRandomInt', or a number input (using 'get input' ---&gt; result), or using a menu selection (using 'show menu' ---&gt; result), and etc...\n\n---------\n\nand real quick, let's create~add the String Attribute to your 'player' Player Object:\n\n'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: player)\nAttribute Name: grociery_bag\nAttribute Type: string\nAttribute Value: empty\n\n---------\n\nnow, let's create an Object named 'market' in your 'room' Room Object:\n\n'room' Room Object -&gt; 'Objects' Tab -&gt; Add -&gt; Name: market\n\n'market' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; Name: buy\n\nfor your 'buy' Verb (lazy, showing in code):\n\n(this code below is advanced for you right now, so just use it, don't try to understand it yet, we'll get to explaining it, much later on)\n\n(I just want you to create this sample game yourself and see the use of a list in action, to help-start familiarizing you to lists and using lists)\n\n[code:3d8rqwlv]msg (&quot;Type in the number of the item that you want to buy&quot;)\nDisplayList (game&#46;shopping_list, true)\nget input {\n  if (IsInt (result) and result &gt;= 0 and result &lt;= ListCount (game&#46;shopping_list) - 1) {\n    player&#46;grociery_bag = StringListItem (game&#46;shopping_list, result)\n    msg (&quot;You bought&#58; &quot; + player&#46;grociery_bag)\n  } else {\n    msg (&quot;Wrong input, try again&quot;)\n  }\n}[/code:3d8rqwlv]\n\n----------------\n\n// maybe this will help:\n//\n// pretend that you have your 4 students get in a line\n//\n// the first student (Mike) you tell him to remember his number: 0 (because the 1st student in the line is ALWAYS told to remember the number: 0)\n// the second student (John) you tell him to remember his number: 1 (because the 2nd student in the line is ALWAYS told to remember the number: 1)\n// the third student (Chris) you tell him to remember his number: 2 (because the 3rd student in the line is ALWAYS told to remember the number: 2)\n// the fourth (and last) student (Bill) you tell him to remember his number: 3 (because the 4th student in the line is ALWAYS told to remember the number: 3)\n//\n// when~if using the GUI~Editor, when~by adding items~values to a Stringlist Attribute, the first added item is automatically matched up to index: 0, the second added item is automatically matched up with index: 1, and so forth...\n//\n// when~if using code, using the horizontal code form (using either: 'split' scripting or the 'creation' tag line), the leftmost item~value is your first item (automatically matched up to index: 0), the second leftmost item~value is your second item (automatically matched up to index: 1), and so forth\n//\n// when~if using code, using the vertical code form (the 'creation' tag block), the uppermost item~value is your first item (automatically matched up to index: 0), the second uppermost item is your second item (automatically matched up to index: 1), and so forth.\n//\n// the below is conceptually what 'StringListItem' command~function, as shown in its full usage example of 'player.grociery_bag = StringListItem (game.shopping_list, 0_or_1_or_2_or_3)', is doing:\n//\n// you speak: &quot;if your number is 0, say your name&quot;, and the first student answers: &quot;Mike&quot;\n// you speak again: &quot;if your number is 3, say your name&quot;, and the fourth (last) student answers: &quot;Bill&quot;\n// you speak again: &quot;if your number is 2, say your name&quot;, and the third student answers: &quot;Chris&quot;\n// you speak again: &quot;if your number is 1, say your name&quot;, and the second student answers: &quot;John&quot;\n//\n// you speak again: &quot;if your number is 4, say your name&quot;, and the 4 students all look at each other, as none were told to remember the number 4 by you... after a minute... You realize you made an error!\n\n--------------------\n\nP.S.\n\nyou are *NOT* an idiot !!!!\n\nLists (and even worse: Dictionaries) are a huge huge huge step up in both: comprehension (and comprehension of all of Lists~Dictionaries uses~applications) and coding.\n\nAlso, I'm a pathetic guide~explainer (I fail majorly as a teacher), sighs. Pixie or Jay or TM123 could probably have you understanding and using Lists and Dictionaries in like a minute, laughs.",
      "EditableFormat": "bbcode",
      "HTML": "you just create~add a Stringlist Attribute, there is no &quot;integer list&quot; (sorry for the confusion!), but I'll try to explain (hopefully better than last post) below:<br/><br/>we need to first get you familiar with using~working with Lists... then, we'll tackle specifically for what you want to do in your game, with your game's Attributes, Objects, and etc.<br/><br/>let's do this in the GUI~Editor, to make it easier for you.<br/><br/>for example:<br/><br/>create a new game, for using this guide<br/><br/>'game' Game Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>// you can use any Object, it doesn't have to be the 'game' Game Object, but then everywhere in my code below, you'll have to put in the name of your choosen object, in-place of where you see 'game' in my 'buy' Verb code block below for using this example.<br/><br/>(Object Name: game)<br/>Attribute Name: shopping_list<br/>Attribute Type: stringlist<br/>Attribute Value (Add): (see below)<br/><br/>the first (string) item (let's add: eggs) you add is internally (you never get to see this) stored as index number: 0<br/><br/>the second (string) item (let's add: milk) you add is internally stored as index number: 1<br/><br/>and so forth....<br/><br/>the 'StringListItem' uses the index number (that you specify in its code line) to return the (string) item's name from your String List<br/><br/>first added item to your String List: eggs ~~~~~ 'eggs' is internally matched to index number: 0<br/>second added item to your String List: milk ~~~~~ 'milk' is internally matched to index number: 1<br/>third added item to your String List: bread ~~~~~ 'bread' is internally matched to index number: 2<br/>fourth (and last) added item to your String List: meat ~~~~ 'meat' is internally matched to index number: 3<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 0)<br/>// we specified the '0' index number as seen above, and thus it returns: &quot;eggs&quot;<br/>// player.grociery_bag = &quot;eggs&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 1)<br/>// we specified the '1' index number as seen above, and thus it returns: &quot;milk&quot;<br/>// player.grociery_bag = &quot;milk&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 3)<br/>// we specified the '3' index number as seen above, and thus it returns: &quot;meat&quot;<br/>// player.grociery_bag = &quot;meat&quot;<br/><br/>player.grociery_bag = StringListItem (game.shopping_list, 2)<br/>// we specified the '2' index number as seen above, and thus it returns: &quot;bread&quot;<br/>// player.grociery_bag = &quot;bread&quot;<br/><br/>now, there's many ways of specifying what number for the index number in the 'StringListItem', such as using: 'GetRandomInt', or a number input (using 'get input' ---&gt; result), or using a menu selection (using 'show menu' ---&gt; result), and etc...<br/><br/>---------<br/><br/>and real quick, let's create~add the String Attribute to your 'player' Player Object:<br/><br/>'player' Player Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: player)<br/>Attribute Name: grociery_bag<br/>Attribute Type: string<br/>Attribute Value: empty<br/><br/>---------<br/><br/>now, let's create an Object named 'market' in your 'room' Room Object:<br/><br/>'room' Room Object -&gt; 'Objects' Tab -&gt; Add -&gt; Name: market<br/><br/>'market' Object -&gt; 'Verbs' Tab -&gt; Add -&gt; Name: buy<br/><br/>for your 'buy' Verb (lazy, showing in code):<br/><br/>(this code below is advanced for you right now, so just use it, don't try to understand it yet, we'll get to explaining it, much later on)<br/><br/>(I just want you to create this sample game yourself and see the use of a list in action, to help-start familiarizing you to lists and using lists)<br/><br/><pre><code>msg (&quot;Type in the number of the item that you want to buy&quot;)<br/>DisplayList (game&#46;shopping_list, true)<br/>get input {<br/>  if (IsInt (result) and result &gt;= 0 and result &lt;= ListCount (game&#46;shopping_list) - 1) {<br/>    player&#46;grociery_bag = StringListItem (game&#46;shopping_list, result)<br/>    msg (&quot;You bought&#58; &quot; + player&#46;grociery_bag)<br/>  } else {<br/>    msg (&quot;Wrong input, try again&quot;)<br/>  }<br/>}</code></pre><br/><br/>----------------<br/><br/>// maybe this will help:<br/>//<br/>// pretend that you have your 4 students get in a line<br/>//<br/>// the first student (Mike) you tell him to remember his number: 0 (because the 1st student in the line is ALWAYS told to remember the number: 0)<br/>// the second student (John) you tell him to remember his number: 1 (because the 2nd student in the line is ALWAYS told to remember the number: 1)<br/>// the third student (Chris) you tell him to remember his number: 2 (because the 3rd student in the line is ALWAYS told to remember the number: 2)<br/>// the fourth (and last) student (Bill) you tell him to remember his number: 3 (because the 4th student in the line is ALWAYS told to remember the number: 3)<br/>//<br/>// when~if using the GUI~Editor, when~by adding items~values to a Stringlist Attribute, the first added item is automatically matched up to index: 0, the second added item is automatically matched up with index: 1, and so forth...<br/>//<br/>// when~if using code, using the horizontal code form (using either: 'split' scripting or the 'creation' tag line), the leftmost item~value is your first item (automatically matched up to index: 0), the second leftmost item~value is your second item (automatically matched up to index: 1), and so forth<br/>//<br/>// when~if using code, using the vertical code form (the 'creation' tag block), the uppermost item~value is your first item (automatically matched up to index: 0), the second uppermost item is your second item (automatically matched up to index: 1), and so forth.<br/>//<br/>// the below is conceptually what 'StringListItem' command~function, as shown in its full usage example of 'player.grociery_bag = StringListItem (game.shopping_list, 0_or_1_or_2_or_3)', is doing:<br/>//<br/>// you speak: &quot;if your number is 0, say your name&quot;, and the first student answers: &quot;Mike&quot;<br/>// you speak again: &quot;if your number is 3, say your name&quot;, and the fourth (last) student answers: &quot;Bill&quot;<br/>// you speak again: &quot;if your number is 2, say your name&quot;, and the third student answers: &quot;Chris&quot;<br/>// you speak again: &quot;if your number is 1, say your name&quot;, and the second student answers: &quot;John&quot;<br/>//<br/>// you speak again: &quot;if your number is 4, say your name&quot;, and the 4 students all look at each other, as none were told to remember the number 4 by you... after a minute... You realize you made an error!<br/><br/>--------------------<br/><br/>P.S.<br/><br/>you are *NOT* an idiot !!!!<br/><br/>Lists (and even worse: Dictionaries) are a huge huge huge step up in both: comprehension (and comprehension of all of Lists~Dictionaries uses~applications) and coding.<br/><br/>Also, I'm a pathetic guide~explainer (I fail majorly as a teacher), sighs. Pixie or Jay or TM123 could probably have you understanding and using Lists and Dictionaries in like a minute, laughs.",
      "PostDate": "2015-08-21T05:48:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37726",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "So basically...\n\nWhat you're saying is when I created the Extended &quot;StringLists&quot; they already had integer values assigned to them (invisible to me but not invisible to the Quest Engine). \n\nThe first thing in the StringList is &quot;0&quot; \n\nFor example, races.\n\nRace Attribute, StringList, Add...\n\nhuman (0)\nelven (1)\ndwarven (2) \n\nand so on? \n\nSo if I want the game to refer to one of those Extended StringLists I need to go, for example, \n\nplayer.race = StringListItem (game.fulldata, 2) ?\n\n((fulldata is where all the Extended Libraries are stored. It is under Objects, Data Group, then fulldata))",
      "EditableFormat": "bbcode",
      "HTML": "So basically...<br/><br/>What you're saying is when I created the Extended &quot;StringLists&quot; they already had integer values assigned to them (invisible to me but not invisible to the Quest Engine). <br/><br/>The first thing in the StringList is &quot;0&quot; <br/><br/>For example, races.<br/><br/>Race Attribute, StringList, Add...<br/><br/>human (0)<br/>elven (1)<br/>dwarven (2) <br/><br/>and so on? <br/><br/>So if I want the game to refer to one of those Extended StringLists I need to go, for example, <br/><br/>player.race = StringListItem (game.fulldata, 2) ?<br/><br/>((fulldata is where all the Extended Libraries are stored. It is under Objects, Data Group, then fulldata))",
      "PostDate": "2015-08-22T05:17:49+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37727",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "yea, that's pretty much it... but I believe you want this, approximitely:\n\nplayer.height = StringListItem (fulldata.height_list, whatever_index_number)\n\npsuedocode (NOT proper syntax):\n\nplayer.height = 0.0 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:0)\nplayer.height = 5.0 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:10)\nplayer.height = 2.5 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:5)\n\n----------------\n\nconceptually, with lists, it's this that we're doing with the 'StringListItem' :\n\ninput (index number) ---&gt; outputs~returns (item's value~name)\n\nstick -&gt; input (index number) -&gt; into -&gt; StringListItem () Function -&gt; spits out -&gt; output (item's value~name) -&gt; gets assigned to a VARIABLE -&gt; player.height\n\njust like in algebra:\n\nf(x) = y = x + 4\nf(8) = y = 8 + 4 = 12\nf(8) = y = 12\n\nthe 'index number' is 'x', the 'player.height' is 'f(x)'~'y', and the value 'items value~name' is the value '12'\n\n---------------\n\nnow, back to what you originally wanted~asked for ... laughs:\n\nyour height list, is something like this (showing it using the horizontal code form, aka: type=&quot;simplestringlist&quot; ):\n\n[code:1nx1gzle]&lt;object name=&quot;fulldata&quot;&gt;\n  &lt;attr name=&quot;height_list&quot; type=&quot;simplestringlist&quot;&gt;0&#46;0; 0&#46;5; 1&#46;0; 1&#46;5; 2&#46;0; 2&#46;5; 3&#46;0; etc&lt;/attr&gt;\n&lt;/attr&gt;[/code:1nx1gzle]\n\nlet's say you drink your heght potion,\nin your 'height potion' Object's 'drink' Verb,\nyou want approximitely:\n\nold_height = argh\nplayer.height = StringListItem (fulldata.height_list, old_height + argh)\n\n..... great, just great......\n\nnow that we took all that time to understand lists and indexes... it looks like we got to use a dictionary instead... HK hits his head on the desk... (well, at least hopefully you might understand using lists better, maybe using 'StringListItem' for something else...)\n\nlet me know if~when you're ready to move to learning dictionaries... laughs....\n\nmaybe you should just use Pixie's method, and re-design the rest of your game for it (it'll probably be better than trying to keep going with this route)\n\n-----------------\n\nunless...\n\n@PIXIE~JAY~PERTEX~ETC:\n\ncan we get (return) the index number from an item in a list (the reverse process of the 'StringListItem' command~function) ???",
      "EditableFormat": "bbcode",
      "HTML": "yea, that's pretty much it... but I believe you want this, approximitely:<br/><br/>player.height = StringListItem (fulldata.height_list, whatever_index_number)<br/><br/>psuedocode (NOT proper syntax):<br/><br/>player.height = 0.0 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:0)<br/>player.height = 5.0 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:10)<br/>player.height = 2.5 &lt;--- output &lt;--- StringListItem (fulldata.height_list, input:5)<br/><br/>----------------<br/><br/>conceptually, with lists, it's this that we're doing with the 'StringListItem' :<br/><br/>input (index number) ---&gt; outputs~returns (item's value~name)<br/><br/>stick -&gt; input (index number) -&gt; into -&gt; StringListItem () Function -&gt; spits out -&gt; output (item's value~name) -&gt; gets assigned to a VARIABLE -&gt; player.height<br/><br/>just like in algebra:<br/><br/>f(x) = y = x + 4<br/>f(8) = y = 8 + 4 = 12<br/>f(8) = y = 12<br/><br/>the 'index number' is 'x', the 'player.height' is 'f(x)'~'y', and the value 'items value~name' is the value '12'<br/><br/>---------------<br/><br/>now, back to what you originally wanted~asked for ... laughs:<br/><br/>your height list, is something like this (showing it using the horizontal code form, aka: type=&quot;simplestringlist&quot; ):<br/><br/><pre><code>&lt;object name=&quot;fulldata&quot;&gt;<br/>  &lt;attr name=&quot;height_list&quot; type=&quot;simplestringlist&quot;&gt;0&#46;0; 0&#46;5; 1&#46;0; 1&#46;5; 2&#46;0; 2&#46;5; 3&#46;0; etc&lt;/attr&gt;<br/>&lt;/attr&gt;</code></pre><br/><br/>let's say you drink your heght potion,<br/>in your 'height potion' Object's 'drink' Verb,<br/>you want approximitely:<br/><br/>old_height = argh<br/>player.height = StringListItem (fulldata.height_list, old_height + argh)<br/><br/>..... great, just great......<br/><br/>now that we took all that time to understand lists and indexes... it looks like we got to use a dictionary instead... HK hits his head on the desk... (well, at least hopefully you might understand using lists better, maybe using 'StringListItem' for something else...)<br/><br/>let me know if~when you're ready to move to learning dictionaries... laughs....<br/><br/>maybe you should just use Pixie's method, and re-design the rest of your game for it (it'll probably be better than trying to keep going with this route)<br/><br/>-----------------<br/><br/>unless...<br/><br/>@PIXIE~JAY~PERTEX~ETC:<br/><br/>can we get (return) the index number from an item in a list (the reverse process of the 'StringListItem' command~function) ???",
      "PostDate": "2015-08-22T07:19:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37810",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Sorry it took so long for me to get back to you and thank you! I just want to make sure I understand how to do this. It's been a long week in class. Ugh.\n\nAlrighty so...\n\nIn my fulldata extended lists, I would put....\n\nplayer.height = StringListItem (fulldata.height_list + 2)  for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?\n\nAlso, I was curious to know about &quot;height_list&quot;  ...do I put &quot;height_list&quot; or do I match it to player.height? Or does &quot;height_list&quot; help the Quest Stringlists to identify that it's pulling from a list? \n\nThanks again for all the help, hope classes are going well so far!",
      "EditableFormat": "bbcode",
      "HTML": "Sorry it took so long for me to get back to you and thank you! I just want to make sure I understand how to do this. It's been a long week in class. Ugh.<br/><br/>Alrighty so...<br/><br/>In my fulldata extended lists, I would put....<br/><br/>player.height = StringListItem (fulldata.height_list + 2)  for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?<br/><br/>Also, I was curious to know about &quot;height_list&quot;  ...do I put &quot;height_list&quot; or do I match it to player.height? Or does &quot;height_list&quot; help the Quest Stringlists to identify that it's pulling from a list? <br/><br/>Thanks again for all the help, hope classes are going well so far!",
      "PostDate": "2015-08-30T06:07:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37811",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;neonayon&quot;:1i4l641p]player.height = StringListItem (fulldata.height_list + 2) for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?[/quote:1i4l641p]\n\nno it would not, as this isn't quite how lists work... you can't do the '+2', at least not like that, you can't. It's too difficult and long for me to try to explain how it could be done... too complex to explain...\n\nI really think you should just use Pixie's method (and adjust ~ re-designing parts of your game), and not work with Lists~Dictionaries, as it's unneccessarily a ton of extra work (far beyond adjusting ~ re-designing parts of your game), compared to just using an 'int' or a 'double' for your height. (You can keep the list you got for your character creation, but also have an 'int' or 'double' Attribute on your 'player' for working with your height, it's much easier than trying to use Lists~Dictionary Attributes).\n\n---------\n\n[quote=&quot;neonayon&quot;:1i4l641p]Also, I was curious to know about &quot;height_list&quot; ...do I put &quot;height_list&quot; or do I match it to player.height? Or does &quot;height_list&quot; help the Quest Stringlists to identify that it's pulling from a list?[/quote:1i4l641p]\n\nthat's just my own labeling~naming, for me to distinguish to you: your 'fulldata' Object's List Attribute (I don't know what you named~labeled it as) from your 'player' Player Object's 'height' Attribute.\n\n-------\n\n[quote=&quot;neonayon&quot;:1i4l641p]It's been a long week in class. Ugh.[/quote:1i4l641p]\n\ntell me about it... I'm doing school work 24/7... my &quot;weekend&quot; (thurs to sun) is literally spent doing all of my homework... sighs... and mon to thurs, I'm in class doing school work and also at home... doing homework... fun life I got right now... I love when people ask me how my &quot;weekend&quot; was... as I can answer: &quot;What weekend? I've been doing homework non-stop over all of my weekends. Oh ya, here and there I get to watch tv or play games or eat for like 30 minutes, during my breaks, in-between doing my homework assignments or reading textbooks.&quot;",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>neonayon wrote:</cite>player.height = StringListItem (fulldata.height_list + 2) for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?</blockquote><br/><br/>no it would not, as this isn't quite how lists work... you can't do the '+2', at least not like that, you can't. It's too difficult and long for me to try to explain how it could be done... too complex to explain...<br/><br/>I really think you should just use Pixie's method (and adjust ~ re-designing parts of your game), and not work with Lists~Dictionaries, as it's unneccessarily a ton of extra work (far beyond adjusting ~ re-designing parts of your game), compared to just using an 'int' or a 'double' for your height. (You can keep the list you got for your character creation, but also have an 'int' or 'double' Attribute on your 'player' for working with your height, it's much easier than trying to use Lists~Dictionary Attributes).<br/><br/>---------<br/><br/><blockquote><cite>neonayon wrote:</cite>Also, I was curious to know about &quot;height_list&quot; ...do I put &quot;height_list&quot; or do I match it to player.height? Or does &quot;height_list&quot; help the Quest Stringlists to identify that it's pulling from a list?</blockquote><br/><br/>that's just my own labeling~naming, for me to distinguish to you: your 'fulldata' Object's List Attribute (I don't know what you named~labeled it as) from your 'player' Player Object's 'height' Attribute.<br/><br/>-------<br/><br/><blockquote><cite>neonayon wrote:</cite>It's been a long week in class. Ugh.</blockquote><br/><br/>tell me about it... I'm doing school work 24/7... my &quot;weekend&quot; (thurs to sun) is literally spent doing all of my homework... sighs... and mon to thurs, I'm in class doing school work and also at home... doing homework... fun life I got right now... I love when people ask me how my &quot;weekend&quot; was... as I can answer: &quot;What weekend? I've been doing homework non-stop over all of my weekends. Oh ya, here and there I get to watch tv or play games or eat for like 30 minutes, during my breaks, in-between doing my homework assignments or reading textbooks.&quot;",
      "PostDate": "2015-08-30T06:44:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37818",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Hmm....well, I definitely need to do something. \n\nI just need a list that I can draw from during the game, and would like those something's to be represented with a number. So that if the player falls into a trap or something I can just do a quick line of code or GUI to increase or decrease whatever attribute was changed like, height, weight, etc. \n\nI'm sure the initial character creation process can remain as it is since I use the exact same values (only extended) in the fulldata object of the game. I'd be fine with List-Dictionaries if I could get them to work like that, but if not then I definitely need to change the lists from string-lists to integers. I'm just at a loss of how. \n\n\nI went ahead and made my &quot;Race Stringlist&quot; yesterday (for all of the different components of the extended data actually (which took forever)), here are the races, for example...\n\n[u:2nzm6r90]player.race[/u:2nzm6r90]: human 0, elven 1, dwarven 2, dragon-descented 3, halfling 4, orc-descented 5, gnome 6, dark elf 7, goblin 8, centauress 9, succubus 10, alarune 11, demon 12, cow-girl 13, dryad 14, slime 15, goo-girl 16, incubus 17, minotaur 18, naga 19, centaur 20, neko 21, random 22. \n\nI did this so it would be easier to refer to the Stringlists from what you were talking about before but if it's a ton of work and using integers values is better than I'd rather do less work for more gain! lol\n\n\n\n\n~~~~~~~\n\nAs for the school thing, yeah....I know. It's exhausting right now. But keep at it HK! You can do it!",
      "EditableFormat": "bbcode",
      "HTML": "Hmm....well, I definitely need to do something. <br/><br/>I just need a list that I can draw from during the game, and would like those something's to be represented with a number. So that if the player falls into a trap or something I can just do a quick line of code or GUI to increase or decrease whatever attribute was changed like, height, weight, etc. <br/><br/>I'm sure the initial character creation process can remain as it is since I use the exact same values (only extended) in the fulldata object of the game. I'd be fine with List-Dictionaries if I could get them to work like that, but if not then I definitely need to change the lists from string-lists to integers. I'm just at a loss of how. <br/><br/><br/>I went ahead and made my &quot;Race Stringlist&quot; yesterday (for all of the different components of the extended data actually (which took forever)), here are the races, for example...<br/><br/><span style=\"text-decoration:underline;\">player.race</span>: human 0, elven 1, dwarven 2, dragon-descented 3, halfling 4, orc-descented 5, gnome 6, dark elf 7, goblin 8, centauress 9, succubus 10, alarune 11, demon 12, cow-girl 13, dryad 14, slime 15, goo-girl 16, incubus 17, minotaur 18, naga 19, centaur 20, neko 21, random 22. <br/><br/>I did this so it would be easier to refer to the Stringlists from what you were talking about before but if it's a ton of work and using integers values is better than I'd rather do less work for more gain! lol<br/><br/><br/><br/><br/>~~~~~~~<br/><br/>As for the school thing, yeah....I know. It's exhausting right now. But keep at it HK! You can do it!",
      "PostDate": "2015-08-30T19:29:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37820",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "basically there are two parts to the solution that fits your problem.\n\n#1: the height index value, the integer that refers to the current height\n\n#2: the actual height value to be displayed such as 5'6&quot;\n\nvalue #1 makes the most sense to save as a player attribute as this tells the game the value to look at whenever you want the players current height. Value #2 is what you pull from the master list of heights when you want to actually display it. You can either save this to another player attribute or just reference it directly whenever you want it displayed, that's up to you.\n\nso for your example above of moving the player's height rating up 2 steps will look more like this\n\n[code:2xdfo5j6]\n//this is the players height rating\nplayer&#46;height_rating = 4\n\n//this will set the displayed height value to the equivalent from your master list\nplayer&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)\n\n//to modify this alter the players built in height rating then resync with the master list value\nplayer&#46;height_rating = player&#46;height_rating + 2\nplayer&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)[/code:2xdfo5j6]\n\n[quote:2xdfo5j6]player.height = StringListItem (fulldata.height_list + 2) for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?[/quote:2xdfo5j6]\nThe first problem here is that you didn't input a value to add the +2 to, also it wasn't separated from the list name, so that would throw an error, but syntax aside you need to grab the &quot;rating&quot; value from the player before you can pick something out of your list. Secondly if you calculated with a +2 you don't change the players actual height rating, you will set the displayed height correctly but as soon as you reference the rating value again it is still unchanged and will reset your height. So you need to put the +2 calculation into changing the player rating as I did in my example and then just run a normal check for the displayed value.\n\nEDIT: as for the racial thing, honestly I might just keep that as a string value attribute on the player, though it certainly wouldn't hurt to have a list value as the master list of official races so you can check for consistency to keep in mind what specific name you're using in the code so you don't start getting errors when the game looks for racial identifier names that don't quite match up. Another alternative would be to use a StringDictionary, as they work somewhat similar to lists, except instead of an integer value for the index it uses a string, so you can basically have a system name for your races and when you look them up they display as the string listed under that name.\n\nie: for whatever reason I want to insist on referring to the naga race in my code as 'snake_person' but obviously I don't want that as the official display in the game, it would look something like this.\n[code:2xdfo5j6]//racial list dictionary attribute is fulldata&#46;racial_list\n\ndictionary add (fulldata&#46;racial_list, snake_person, Naga)\n//repeat with other races to build the list if not inputting directly into the actual attribute[/code:2xdfo5j6]\n\nthen whenever I reference the DictionaryItem(fulldata.racial_list, snake_person) the game displays the result as &quot;Naga&quot; so I can reference it in whatever way I prefer in the code in actual text without affecting the displayed value and not having to remember the index it ended up under. a bit more complicated this way but tends to be easier to decipher and locate the correct info when a lot of variables get involved.\n\nan example of how this would look when you do something with the actual value in code\n[code:2xdfo5j6]//something happens to change player race\nplayer&#46;race = &quot;snake_person&quot;\n\n//set the display name from the master list\ndisplay&#46;player_race = DictionaryItem (fulldata&#46;racial_list, player&#46;race)\n//your display value for player_race is now whatever you want the actual players to see[/code:2xdfo5j6]\n*note display isn't an actual built in thing, it's just an extra object I would personally use for organizational purposes with this sort of thing",
      "EditableFormat": "bbcode",
      "HTML": "basically there are two parts to the solution that fits your problem.<br/><br/>#1: the height index value, the integer that refers to the current height<br/><br/>#2: the actual height value to be displayed such as 5'6&quot;<br/><br/>value #1 makes the most sense to save as a player attribute as this tells the game the value to look at whenever you want the players current height. Value #2 is what you pull from the master list of heights when you want to actually display it. You can either save this to another player attribute or just reference it directly whenever you want it displayed, that's up to you.<br/><br/>so for your example above of moving the player's height rating up 2 steps will look more like this<br/><br/><pre><code><br/>//this is the players height rating<br/>player&#46;height_rating = 4<br/><br/>//this will set the displayed height value to the equivalent from your master list<br/>player&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)<br/><br/>//to modify this alter the players built in height rating then resync with the master list value<br/>player&#46;height_rating = player&#46;height_rating + 2<br/>player&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)</code></pre><br/><br/><blockquote><p>player.height = StringListItem (fulldata.height_list + 2) for example, if I wanted a player to move up plus two steps.....like saying if they had a height of 5.2 feet...and I used + 2 right there, it would move them up to 5.4 feet?</p></blockquote><br/>The first problem here is that you didn't input a value to add the +2 to, also it wasn't separated from the list name, so that would throw an error, but syntax aside you need to grab the &quot;rating&quot; value from the player before you can pick something out of your list. Secondly if you calculated with a +2 you don't change the players actual height rating, you will set the displayed height correctly but as soon as you reference the rating value again it is still unchanged and will reset your height. So you need to put the +2 calculation into changing the player rating as I did in my example and then just run a normal check for the displayed value.<br/><br/>EDIT: as for the racial thing, honestly I might just keep that as a string value attribute on the player, though it certainly wouldn't hurt to have a list value as the master list of official races so you can check for consistency to keep in mind what specific name you're using in the code so you don't start getting errors when the game looks for racial identifier names that don't quite match up. Another alternative would be to use a StringDictionary, as they work somewhat similar to lists, except instead of an integer value for the index it uses a string, so you can basically have a system name for your races and when you look them up they display as the string listed under that name.<br/><br/>ie: for whatever reason I want to insist on referring to the naga race in my code as 'snake_person' but obviously I don't want that as the official display in the game, it would look something like this.<br/><pre><code>//racial list dictionary attribute is fulldata&#46;racial_list<br/><br/>dictionary add (fulldata&#46;racial_list, snake_person, Naga)<br/>//repeat with other races to build the list if not inputting directly into the actual attribute</code></pre><br/><br/>then whenever I reference the DictionaryItem(fulldata.racial_list, snake_person) the game displays the result as &quot;Naga&quot; so I can reference it in whatever way I prefer in the code in actual text without affecting the displayed value and not having to remember the index it ended up under. a bit more complicated this way but tends to be easier to decipher and locate the correct info when a lot of variables get involved.<br/><br/>an example of how this would look when you do something with the actual value in code<br/><pre><code>//something happens to change player race<br/>player&#46;race = &quot;snake_person&quot;<br/><br/>//set the display name from the master list<br/>display&#46;player_race = DictionaryItem (fulldata&#46;racial_list, player&#46;race)<br/>//your display value for player_race is now whatever you want the actual players to see</code></pre><br/>*note display isn't an actual built in thing, it's just an extra object I would personally use for organizational purposes with this sort of thing",
      "PostDate": "2015-08-30T19:49:53+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37821",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;TinFoilMkIV&quot;:184hdu5z]basically there are two parts to the solution that fits your problem.\n\n#1: the height index value, the integer that refers to the current height\n\n#2: the actual height value to be displayed such as 5'6&quot;\n\nvalue #1 makes the most sense to save as a player attribute as this tells the game the value to look at whenever you want the players current height. Value #2 is what you pull from the master list of heights when you want to actually display it. You can either save this to another player attribute or just reference it directly whenever you want it displayed, that's up to you.[/quote:184hdu5z]\nDefinitely do it that way. It is much easier.\n\n\nFor the races, consider using objects. Have a room called &quot;races&quot;, and in it object called &quot;dwarf&quot;, &quot;elf&quot;, etc. Then you can add attributes to those objects such as name (Dwarf), average height (50 inches), plural (Dwarves), adjective (Dwarven) and so on. When the player picks a race, you go:\n[code:184hdu5z]player&#46;race = dwarf[/code:184hdu5z]\nThen in descriptions, you can do:\n[code:184hdu5z]msg(&quot;Like all &quot; + player&#46;race&#46;plural + &quot; you have blue hair&#46;&quot;)[/code:184hdu5z]\nUnfortunately, the text processor cannot cope with player.race.plural. If you want to use the text processor, you could copy the chosen races attributes into a new object called player_race\n[code:184hdu5z]player_race = player&#46;race&#46;name\nplayer_race = player&#46;race&#46;plural\n//etc[/code:184hdu5z]\nThen:\n[code:184hdu5z]Like all {player_race&#46;plural} you have blue hair&#46;[/code:184hdu5z]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>TinFoilMkIV wrote:</cite>basically there are two parts to the solution that fits your problem.<br/><br/>#1: the height index value, the integer that refers to the current height<br/><br/>#2: the actual height value to be displayed such as 5'6&quot;<br/><br/>value #1 makes the most sense to save as a player attribute as this tells the game the value to look at whenever you want the players current height. Value #2 is what you pull from the master list of heights when you want to actually display it. You can either save this to another player attribute or just reference it directly whenever you want it displayed, that's up to you.</blockquote><br/>Definitely do it that way. It is much easier.<br/><br/><br/>For the races, consider using objects. Have a room called &quot;races&quot;, and in it object called &quot;dwarf&quot;, &quot;elf&quot;, etc. Then you can add attributes to those objects such as name (Dwarf), average height (50 inches), plural (Dwarves), adjective (Dwarven) and so on. When the player picks a race, you go:<br/><pre><code>player&#46;race = dwarf</code></pre><br/>Then in descriptions, you can do:<br/><pre><code>msg(&quot;Like all &quot; + player&#46;race&#46;plural + &quot; you have blue hair&#46;&quot;)</code></pre><br/>Unfortunately, the text processor cannot cope with player.race.plural. If you want to use the text processor, you could copy the chosen races attributes into a new object called player_race<br/><pre><code>player_race = player&#46;race&#46;name<br/>player_race = player&#46;race&#46;plural<br/>//etc</code></pre><br/>Then:<br/><pre><code>Like all {player_race&#46;plural} you have blue hair&#46;</code></pre>",
      "PostDate": "2015-08-30T20:15:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37826",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:2lrjmkea]//this is the players height rating\nplayer.height_rating = 4\n\n//this will set the displayed height value to the equivalent from your master list\nplayer.height = ListItem(fulldata.height_list, player.height_rating)\n\n//to modify this alter the players built in height rating then resync with the master list value\nplayer.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)[/quote:2lrjmkea]\n\nOkay. So just to be clear (I'm a beginner still so bare with me)...\n\nSo on the player.object, I go to Attributes and add [i:2lrjmkea]height_rating[/i:2lrjmkea] for example, as an [i:2lrjmkea]integer [/i:2lrjmkea] value. Now the problem is, the player gets to choose their height in the beginning of the game (separate object called creation.object, which doesn't have to be messed with), among other traits. What number would I put for.... player.height_rating = # in that case?\n\n[quote:2lrjmkea]player.height = ListItem(fulldata.height_list, player.height_rating)[/quote:2lrjmkea]\n\nI think I understand this aspect --- and \n[quote:2lrjmkea]\nplayer.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)[/quote:2lrjmkea]\n\nBut just to be clear...I put this in the game itself let's say I have \n\nTallroom\n\nplayer enters it. In the scripting I do ... player.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)   ----- which is &quot;Add Variable&quot; etc?",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>//this is the players height rating<br/>player.height_rating = 4<br/><br/>//this will set the displayed height value to the equivalent from your master list<br/>player.height = ListItem(fulldata.height_list, player.height_rating)<br/><br/>//to modify this alter the players built in height rating then resync with the master list value<br/>player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)</p></blockquote><br/><br/>Okay. So just to be clear (I'm a beginner still so bare with me)...<br/><br/>So on the player.object, I go to Attributes and add <span style=\"font-style:italic;\">height_rating</span> for example, as an <span style=\"font-style:italic;\">integer </span> value. Now the problem is, the player gets to choose their height in the beginning of the game (separate object called creation.object, which doesn't have to be messed with), among other traits. What number would I put for.... player.height_rating = # in that case?<br/><br/><blockquote><p>player.height = ListItem(fulldata.height_list, player.height_rating)</p></blockquote><br/><br/>I think I understand this aspect --- and <br/><blockquote><p><br/>player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)</p></blockquote><br/><br/>But just to be clear...I put this in the game itself let's say I have <br/><br/>Tallroom<br/><br/>player enters it. In the scripting I do ... player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)   ----- which is &quot;Add Variable&quot; etc?",
      "PostDate": "2015-09-01T06:10:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37830",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Looks like the creation bit gets you a string called result with the number of feet, a dot and then the inches (eg &quot;5.6&quot;). To convert that to an integer, (after handling random) do this:\n[code:3rau4pqy]height_as_array = Split(result, &quot;&#46;&quot;)\nplayer&#46;height_rating = ToInt(StringListItem(height_as_array, 0)) * 12 + ToInt(StringListItem(height_as_array, 1))[/code:3rau4pqy]\nConsider player.height_rating to be the primary attribute, everything else is derived from that. If the player grows two inches, change that attribute like this.\n[code:3rau4pqy]player&#46;height_rating = player&#46;height_rating + 2[/code:3rau4pqy]\nThen create a function call GetHeight. Set its return type to be a string, and paste in this code:\n[code:3rau4pqy]return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)[/code:3rau4pqy]\nDo you use the text processor to display the height?\n\n[i:3rau4pqy]If you do you do use the text processor:[/i:3rau4pqy]\n\nSet up a secondary attribute, player.height, and a change script on player.height_rating to keep them in step. To do that, add a new attribute to the player called changedheight_rating, set it to be a script, and paste in this code:\n[code:3rau4pqy]player&#46;height = GetHeight()[/code:3rau4pqy]\n\n[i:3rau4pqy]If you do you do NOT use the text processor:[/i:3rau4pqy]\n\nYou do not need another attribute, just use the function when you want to display the height.\n[code:3rau4pqy]msg(&quot;You are now &quot; + GetHeight() + &quot; tall!&quot;)[/code:3rau4pqy]\n\nBy the way, I have put all this code in a test game and checked it all works.",
      "EditableFormat": "bbcode",
      "HTML": "Looks like the creation bit gets you a string called result with the number of feet, a dot and then the inches (eg &quot;5.6&quot;). To convert that to an integer, (after handling random) do this:<br/><pre><code>height_as_array = Split(result, &quot;&#46;&quot;)<br/>player&#46;height_rating = ToInt(StringListItem(height_as_array, 0)) * 12 + ToInt(StringListItem(height_as_array, 1))</code></pre><br/>Consider player.height_rating to be the primary attribute, everything else is derived from that. If the player grows two inches, change that attribute like this.<br/><pre><code>player&#46;height_rating = player&#46;height_rating + 2</code></pre><br/>Then create a function call GetHeight. Set its return type to be a string, and paste in this code:<br/><pre><code>return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)</code></pre><br/>Do you use the text processor to display the height?<br/><br/><span style=\"font-style:italic;\">If you do you do use the text processor:</span><br/><br/>Set up a secondary attribute, player.height, and a change script on player.height_rating to keep them in step. To do that, add a new attribute to the player called changedheight_rating, set it to be a script, and paste in this code:<br/><pre><code>player&#46;height = GetHeight()</code></pre><br/><br/><span style=\"font-style:italic;\">If you do you do NOT use the text processor:</span><br/><br/>You do not need another attribute, just use the function when you want to display the height.<br/><pre><code>msg(&quot;You are now &quot; + GetHeight() + &quot; tall!&quot;)</code></pre><br/><br/>By the way, I have put all this code in a test game and checked it all works.",
      "PostDate": "2015-09-01T08:48:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37831",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;Neonayon&quot;:l86icvzh][quote:l86icvzh]//this is the players height rating\nplayer.height_rating = 4\n\n//this will set the displayed height value to the equivalent from your master list\nplayer.height = ListItem(fulldata.height_list, player.height_rating)\n\n//to modify this alter the players built in height rating then resync with the master list value\nplayer.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)[/quote:l86icvzh]\n\nOkay. So just to be clear (I'm a beginner still so bare with me)...\n\nSo on the player.object, I go to Attributes and add [i:l86icvzh]height_rating[/i:l86icvzh] for example, as an [i:l86icvzh]integer [/i:l86icvzh] value. Now the problem is, the player gets to choose their height in the beginning of the game (separate object called creation.object, which doesn't have to be messed with), among other traits. What number would I put for.... player.height_rating = # in that case?[/quote:l86icvzh]\nWell as far as when you first create the attribute in the editor I'd just leave it at 0 or whatever you want the default value to be. As far as changing it in the character creator, the easiest method would be to just give the player some preset options. So you would list some choices and when the player selects a starting height from those choices you would code it to just set [b:l86icvzh]player.height_rating[/b:l86icvzh] to the integer value of that height in the master list.\n\nThere are ways to convert a player entered measurement but those can get pretty tricky. If you really want to pursue that route I would stick with only allowing the entered measurement to be entirely in inches or cm or whatever your preferred measurement unit is. It's a lot easier to handle a single number than a height listed in multiple parts.\n[quote:l86icvzh]\n[quote:l86icvzh]player.height = ListItem(fulldata.height_list, player.height_rating)[/quote:l86icvzh]\n\nI think I understand this aspect --- and \n[quote:l86icvzh]\nplayer.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)[/quote:l86icvzh]\n\nBut just to be clear...I put this in the game itself let's say I have \n\nTallroom\n\nplayer enters it. In the scripting I do ... player.height_rating = player.height_rating + 2\nplayer.height = ListItem(fulldata.height_list, player.height_rating)   ----- which is &quot;Add Variable&quot; etc?[/quote:l86icvzh]\nbasically whenever you change the [b:l86icvzh]player.height_rating[/b:l86icvzh] you then have to recalculate the [b:l86icvzh]player.height[/b:l86icvzh], otherwise the game wont actually show the height change since the [b:l86icvzh]player.height[/b:l86icvzh] is what the player will see. And at the same time you should only ever need to calculate the [b:l86icvzh]player.height[/b:l86icvzh] when you change the [b:l86icvzh]player.height_rating[/b:l86icvzh], as it should be correct as long as the rating wasn't changed.\n\nSince they will almost always be altered and recalculated together it wouldn't be a bad idea to create a custom function, something like\n[code:l86icvzh]\n//function name &#58;  Change_Height\n//parameters&#58; change\n\n// to call this function in code will look like this\n//Change_Height(#)\n\nplayer&#46;height_rating = player&#46;height_rating + &#91;u&#93;change&#91;/u&#93;\nplayer&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)\n[/code:l86icvzh]\nThis way when you want to do something like say add 2 to your height rating, you can just call [b:l86icvzh]Change_Height (2)[/b:l86icvzh], and for a height decrease you simply use a negative number.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite><blockquote><p>//this is the players height rating<br/>player.height_rating = 4<br/><br/>//this will set the displayed height value to the equivalent from your master list<br/>player.height = ListItem(fulldata.height_list, player.height_rating)<br/><br/>//to modify this alter the players built in height rating then resync with the master list value<br/>player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)</blockquote><br/><br/>Okay. So just to be clear (I'm a beginner still so bare with me)...<br/><br/>So on the player.object, I go to Attributes and add <span style=\"font-style:italic;\">height_rating</span> for example, as an <span style=\"font-style:italic;\">integer </span> value. Now the problem is, the player gets to choose their height in the beginning of the game (separate object called creation.object, which doesn't have to be messed with), among other traits. What number would I put for.... player.height_rating = # in that case?</p></blockquote><br/>Well as far as when you first create the attribute in the editor I'd just leave it at 0 or whatever you want the default value to be. As far as changing it in the character creator, the easiest method would be to just give the player some preset options. So you would list some choices and when the player selects a starting height from those choices you would code it to just set <span style=\"font-weight:bold;\">player.height_rating</span> to the integer value of that height in the master list.<br/><br/>There are ways to convert a player entered measurement but those can get pretty tricky. If you really want to pursue that route I would stick with only allowing the entered measurement to be entirely in inches or cm or whatever your preferred measurement unit is. It's a lot easier to handle a single number than a height listed in multiple parts.<br/><blockquote><p><br/>[quote]player.height = ListItem(fulldata.height_list, player.height_rating)</p></blockquote><br/><br/>I think I understand this aspect --- and <br/><blockquote><p><br/>player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)</p></blockquote><br/><br/>But just to be clear...I put this in the game itself let's say I have <br/><br/>Tallroom<br/><br/>player enters it. In the scripting I do ... player.height_rating = player.height_rating + 2<br/>player.height = ListItem(fulldata.height_list, player.height_rating)   ----- which is &quot;Add Variable&quot; etc?[/quote]<br/>basically whenever you change the <span style=\"font-weight:bold;\">player.height_rating</span> you then have to recalculate the <span style=\"font-weight:bold;\">player.height</span>, otherwise the game wont actually show the height change since the <span style=\"font-weight:bold;\">player.height</span> is what the player will see. And at the same time you should only ever need to calculate the <span style=\"font-weight:bold;\">player.height</span> when you change the <span style=\"font-weight:bold;\">player.height_rating</span>, as it should be correct as long as the rating wasn't changed.<br/><br/>Since they will almost always be altered and recalculated together it wouldn't be a bad idea to create a custom function, something like<br/><pre><code><br/>//function name &#58;  Change_Height<br/>//parameters&#58; change<br/><br/>// to call this function in code will look like this<br/>//Change_Height(#)<br/><br/>player&#46;height_rating = player&#46;height_rating + &#91;u&#93;change&#91;/u&#93;<br/>player&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)<br/></code></pre><br/>This way when you want to do something like say add 2 to your height rating, you can just call <span style=\"font-weight:bold;\">Change_Height (2)</span>, and for a height decrease you simply use a negative number.",
      "PostDate": "2015-09-01T19:48:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37860",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:14x8v2w6]Well, as far as when you first create the attribute in the editor I'd just leave it at 0 or whatever you want the default value to be. As far as changing it in the character creator, the easiest method would be to just give the player some preset options.[/quote:14x8v2w6]\n\nYes, the player in the &quot;creator&quot; have choices ranging from 5.0 - 6.0 ...every two inches. For example, 5.2, 5.4, 5.6 etc (if that's what you meant). The fulldata.object (containing the extended lists) goes beyond that. For example, 3.0 to 7.0, every two inches. \n\n[quote:14x8v2w6]So you would list some choices and when the player selects a starting height from those choices you would code it to just set player.height_rating to the integer value of that height in the master list.[/quote:14x8v2w6]\n\nNot sure what you mean. Kind of have to dumb it down for me, cause I'm really slow apparently lol.\n\nSo first, I go to the player.object where the height attribute is (which is currently a stringlist), then I create an integer attribute called height_rating and set it to 0?\n\n[quote:14x8v2w6]basically whenever you change the player.height_rating you then have to recalculate the player.height, otherwise the game wont actually show the height change since the player.height is what the player will see. [/quote:14x8v2w6]\n\nSo in the game I will be changing the &quot;height_rating&quot; instead of the height directly (which is what the player sees). Got that. \n\n[quote:14x8v2w6]And at the same time you should only ever need to calculate the player.height when you change the player.height_rating, as it should be correct as long as the rating wasn't changed.[/quote:14x8v2w6]\n\nHow would I go about doing that? Calculating the player.height when I change the rating. \n\n[quote:14x8v2w6]This way when you want to do something like say add 2 to your height rating, you can just call Change_Height (2), and for a height decrease you simply use a negative number.[/quote:14x8v2w6]\n\nI understand this part. I'm just confused about how I should go about setting up all these things. I don't know where to start. \n\nCurrently, I have stringlists....I know for each of them, I need to create integer-based attribute ratings for each of the current attributes on the player, for example...\n\nplayer.race\nplayer.race_rating\nplayer.height\nplayer.height_rating\nplayer.eyecolor\nplayer.eyecolor_rating\n\netc\n\nOnce I have those ratings and they are set to &quot;0&quot; what do I do from there? \n\n((Also, thank you Pixie and Tin so far on helping me, I really appreciate your patience))",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Well, as far as when you first create the attribute in the editor I'd just leave it at 0 or whatever you want the default value to be. As far as changing it in the character creator, the easiest method would be to just give the player some preset options.</p></blockquote><br/><br/>Yes, the player in the &quot;creator&quot; have choices ranging from 5.0 - 6.0 ...every two inches. For example, 5.2, 5.4, 5.6 etc (if that's what you meant). The fulldata.object (containing the extended lists) goes beyond that. For example, 3.0 to 7.0, every two inches. <br/><br/><blockquote><p>So you would list some choices and when the player selects a starting height from those choices you would code it to just set player.height_rating to the integer value of that height in the master list.</p></blockquote><br/><br/>Not sure what you mean. Kind of have to dumb it down for me, cause I'm really slow apparently lol.<br/><br/>So first, I go to the player.object where the height attribute is (which is currently a stringlist), then I create an integer attribute called height_rating and set it to 0?<br/><br/><blockquote><p>basically whenever you change the player.height_rating you then have to recalculate the player.height, otherwise the game wont actually show the height change since the player.height is what the player will see. </p></blockquote><br/><br/>So in the game I will be changing the &quot;height_rating&quot; instead of the height directly (which is what the player sees). Got that. <br/><br/><blockquote><p>And at the same time you should only ever need to calculate the player.height when you change the player.height_rating, as it should be correct as long as the rating wasn't changed.</p></blockquote><br/><br/>How would I go about doing that? Calculating the player.height when I change the rating. <br/><br/><blockquote><p>This way when you want to do something like say add 2 to your height rating, you can just call Change_Height (2), and for a height decrease you simply use a negative number.</p></blockquote><br/><br/>I understand this part. I'm just confused about how I should go about setting up all these things. I don't know where to start. <br/><br/>Currently, I have stringlists....I know for each of them, I need to create integer-based attribute ratings for each of the current attributes on the player, for example...<br/><br/>player.race<br/>player.race_rating<br/>player.height<br/>player.height_rating<br/>player.eyecolor<br/>player.eyecolor_rating<br/><br/>etc<br/><br/>Once I have those ratings and they are set to &quot;0&quot; what do I do from there? <br/><br/>((Also, thank you Pixie and Tin so far on helping me, I really appreciate your patience))",
      "PostDate": "2015-09-04T20:08:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37868",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "you roughly (or should) have something like this:\n\n[code:177au755]&lt;object name=&quot;creator&quot;&gt;\n  &lt;attr name=&quot;creation_height_list&quot; type=&quot;simplestringlist&quot;&gt;5&#46;0; 5&#46;2; &#46;&#46;&#46; ; 5&#46;10; 6&#46;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;fulldata&quot;&gt;\n  &lt;attr name=&quot;full_height_list&quot; type=&quot;simplestringlist&quot;&gt;3&#46;0; 3&#46;2; &#46;&#46;&#46; ; 6&#46;10; 7&#46;0&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;\n  &lt;attr name=&quot;sex&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;\n  // etc Attributes\n\n  &lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;\n  &lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n\n  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;height = Height&#58; !; alias = Name&#58; !; sex = Sex&#58; !; etc_etc_etc&lt;/attr&gt;\n&lt;/object&gt;[/code:177au755]\n\nfor your character creation, you use:\n\n[code:177au755]&lt;object name=&quot;creator&quot;&gt;\n  &lt;attr name=&quot;creation_height_list&quot; type=&quot;simplestringlist&quot;&gt;5&#46;0; 5&#46;2; &#46;&#46;&#46; ; 5&#46;10; 6&#46;0&lt;/attr&gt;\n&lt;/object&gt;[/code:177au755]\n\nletting them select a height (via 'showmenu()' for the in-line if I remember right), let's say they select '5.6' :\n\nplayer.height = &quot;5.6&quot;\n\nbut during the game, their height can change, which, using Pixie's~Tin's method of the 'player.height_rating' Integer Attribute, is what we alter, which in-turn will determine what the 'player.height' String Attribute's height value is:\n\nconceptually about your 'fulldata.full_height_list', this is what it is~(will be) doing:\n\n(we change the 'player.height_rating' in a script during game play, which will determine~adjust your 'player.height' as seen below)\n\n[u:177au755]player.height_rating...|...player.height.....[/u:177au755]\n..............0.................|.........3.0...........\n..............1.................|.........3.2...........\n..............2.................|.........3.4...........\n..............3.................|.........3.6...........\n..............4.................|.........3.8...........\netc etc etc\n..............?.................|.........7.0...........\n\nthis happens when we do this:\n\nplayer.height = StringListItem (fulldata.full_height_list, player.height_rating)\n\nusing it in either:\n\nthe special 'changed' Script&#058;\n\n[code:177au755]object name=&quot;player&quot;&gt;\n  &lt;changedheight_rating type=&quot;script&quot;&gt;\n    player&#46;height = StringListItem (fulldata&#46;full_height_list, player&#46;height_rating)\n  &lt;/changedheight_rating&gt;\n&lt;/object&gt;[/code:177au755]\n\nor, a (global) Turnscript&#058;\n\n[code:177au755]&lt;turnscript name=&quot;xxx&quot;&gt;\n  &lt;enabled&gt;\n  &lt;script&gt;\n    player&#46;height = StringListItem (fulldata&#46;full_height_list, player&#46;height_rating)\n  &lt;/script&gt;\n&lt;/turnscript&gt;[/code:177au755]\n\n-----\n\nso, let's say we start out as:\n\nplayer.height = &quot;5.6&quot;\n\nplayer.height_rating = 0 // (actually we got a problem with this Attribute... we need to set it to it's proper value for '5.6', whatever the index value is for the '5.6' using your 'fulldata.full_height_list', for this example, as the 'changed' Script or Turnscript, will immediately change your, player.height=&quot;5.6&quot;, to, player.height=&quot;3.0&quot;... you can ask Pixie and~or Tin, as they'll understand this issue, and can help you with it step by step if you need help with it. Ask them to read over this post of mine (if they haven't), and they'll understand this issue and be able to help you with it.\n\nthen during the game, we drink a height (+2) potion:\n\nplayer.height_rating = player.height_rating + 2\n// player.height_rating = 0 + 2 = 2\n// player.height_rating = 2\n\nnow our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:\n\nplayer.height = StringListItem (fulldata.full_height_list, player.height_rating)\n// player.height = &quot;3.4&quot;\n\nlet's say we drank the height (+2) potion again, resulting in:\n\n// player.height_rating = 2 + 2 = 4\n\nand again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:\n\n// player.height = &quot;3.8&quot;\n\nand let's say we drink a different height (-1) potion:\n\n// player.height_rating = 4 - 1 = 3\n\nand again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:\n\n// player.height = &quot;3.6&quot;\n\nand let's say we drink a different height (-3) potion:\n\n// player.height_rating = 3 - 3 = 0\n\nand again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:\n\n// player.height = &quot;3.0&quot;",
      "EditableFormat": "bbcode",
      "HTML": "you roughly (or should) have something like this:<br/><br/><pre><code>&lt;object name=&quot;creator&quot;&gt;<br/>  &lt;attr name=&quot;creation_height_list&quot; type=&quot;simplestringlist&quot;&gt;5&#46;0; 5&#46;2; &#46;&#46;&#46; ; 5&#46;10; 6&#46;0&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;fulldata&quot;&gt;<br/>  &lt;attr name=&quot;full_height_list&quot; type=&quot;simplestringlist&quot;&gt;3&#46;0; 3&#46;2; &#46;&#46;&#46; ; 6&#46;10; 7&#46;0&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;attr name=&quot;alias&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;<br/>  &lt;attr name=&quot;sex&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;<br/>  // etc Attributes<br/><br/>  &lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;<br/>  &lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/><br/>  &lt;attr name=&quot;statusattributes&quot; type=&quot;simplestringdictionary&quot;&gt;height = Height&#58; !; alias = Name&#58; !; sex = Sex&#58; !; etc_etc_etc&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>for your character creation, you use:<br/><br/><pre><code>&lt;object name=&quot;creator&quot;&gt;<br/>  &lt;attr name=&quot;creation_height_list&quot; type=&quot;simplestringlist&quot;&gt;5&#46;0; 5&#46;2; &#46;&#46;&#46; ; 5&#46;10; 6&#46;0&lt;/attr&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>letting them select a height (via 'showmenu()' for the in-line if I remember right), let's say they select '5.6' :<br/><br/>player.height = &quot;5.6&quot;<br/><br/>but during the game, their height can change, which, using Pixie's~Tin's method of the 'player.height_rating' Integer Attribute, is what we alter, which in-turn will determine what the 'player.height' String Attribute's height value is:<br/><br/>conceptually about your 'fulldata.full_height_list', this is what it is~(will be) doing:<br/><br/>(we change the 'player.height_rating' in a script during game play, which will determine~adjust your 'player.height' as seen below)<br/><br/><span style=\"text-decoration:underline;\">player.height_rating...|...player.height.....</span><br/>..............0.................|.........3.0...........<br/>..............1.................|.........3.2...........<br/>..............2.................|.........3.4...........<br/>..............3.................|.........3.6...........<br/>..............4.................|.........3.8...........<br/>etc etc etc<br/>..............?.................|.........7.0...........<br/><br/>this happens when we do this:<br/><br/>player.height = StringListItem (fulldata.full_height_list, player.height_rating)<br/><br/>using it in either:<br/><br/>the special 'changed' Script&#058;<br/><br/><pre><code>object name=&quot;player&quot;&gt;<br/>  &lt;changedheight_rating type=&quot;script&quot;&gt;<br/>    player&#46;height = StringListItem (fulldata&#46;full_height_list, player&#46;height_rating)<br/>  &lt;/changedheight_rating&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>or, a (global) Turnscript&#058;<br/><br/><pre><code>&lt;turnscript name=&quot;xxx&quot;&gt;<br/>  &lt;enabled&gt;<br/>  &lt;script&gt;<br/>    player&#46;height = StringListItem (fulldata&#46;full_height_list, player&#46;height_rating)<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;</code></pre><br/><br/>-----<br/><br/>so, let's say we start out as:<br/><br/>player.height = &quot;5.6&quot;<br/><br/>player.height_rating = 0 // (actually we got a problem with this Attribute... we need to set it to it's proper value for '5.6', whatever the index value is for the '5.6' using your 'fulldata.full_height_list', for this example, as the 'changed' Script or Turnscript, will immediately change your, player.height=&quot;5.6&quot;, to, player.height=&quot;3.0&quot;... you can ask Pixie and~or Tin, as they'll understand this issue, and can help you with it step by step if you need help with it. Ask them to read over this post of mine (if they haven't), and they'll understand this issue and be able to help you with it.<br/><br/>then during the game, we drink a height (+2) potion:<br/><br/>player.height_rating = player.height_rating + 2<br/>// player.height_rating = 0 + 2 = 2<br/>// player.height_rating = 2<br/><br/>now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:<br/><br/>player.height = StringListItem (fulldata.full_height_list, player.height_rating)<br/>// player.height = &quot;3.4&quot;<br/><br/>let's say we drank the height (+2) potion again, resulting in:<br/><br/>// player.height_rating = 2 + 2 = 4<br/><br/>and again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:<br/><br/>// player.height = &quot;3.8&quot;<br/><br/>and let's say we drink a different height (-1) potion:<br/><br/>// player.height_rating = 4 - 1 = 3<br/><br/>and again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:<br/><br/>// player.height = &quot;3.6&quot;<br/><br/>and let's say we drink a different height (-3) potion:<br/><br/>// player.height_rating = 3 - 3 = 0<br/><br/>and again, now our 'player' Object's special 'changed' Script or our (global) Turnscript, kicks in, giving us our new height:<br/><br/>// player.height = &quot;3.0&quot;",
      "PostDate": "2015-09-05T07:38:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37880",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;Neonayon&quot;:1uejxoqj][quote:1uejxoqj]So you would list some choices and when the player selects a starting height from those choices you would code it to just set player.height_rating to the integer value of that height in the master list.[/quote:1uejxoqj]\n\nNot sure what you mean. Kind of have to dumb it down for me, cause I'm really slow apparently lol.\n\nSo first, I go to the player.object where the height attribute is (which is currently a stringlist), then I create an integer attribute called height_rating and set it to 0?[/quote:1uejxoqj]\nWhat I was trying to say, is when you give the player a list of choices say  5'2&quot;, 5'6&quot;, 5'10&quot; for example, when the player selects one the script will first set their height_rating to the master list integer that matches with those values. so something like this\n[code:1uejxoqj]//display options for player to choose\n\n//player chose 5'6&quot;\n\nplayer&#46;height = 5'6&quot;\nplayer&#46;height_rating = 7[/code:1uejxoqj]\nor if you want to be extra careful and possibly plan to alter your full_data values, you can just set the height_rating, and then run the script that sets the player.height based on it\n\n[quote:1uejxoqj][quote:1uejxoqj]And at the same time you should only ever need to calculate the player.height when you change the player.height_rating, as it should be correct as long as the rating wasn't changed.[/quote:1uejxoqj]\n\nHow would I go about doing that? Calculating the player.height when I change the rating. [/quote:1uejxoqj]\nThat is basically what I was describing with the Change_Height(#) function, where it includes the player.height = (....) line which calculates the display height after you change the rating. That's all I really meant by that, is just including the script to get your displayed height off the master list whenever you change the rating, so including them together as one function is probably a good solution.\n\n[quote:1uejxoqj][quote:1uejxoqj]This way when you want to do something like say add 2 to your height rating, you can just call Change_Height (2), and for a height decrease you simply use a negative number.[/quote:1uejxoqj]\n\nI understand this part. I'm just confused about how I should go about setting up all these things. I don't know where to start. \n\nCurrently, I have stringlists....I know for each of them, I need to create integer-based attribute ratings for each of the current attributes on the player, for example...\n\nplayer.race\nplayer.race_rating\nplayer.height\nplayer.height_rating\nplayer.eyecolor\nplayer.eyecolor_rating\n\netc\n\nOnce I have those ratings and they are set to &quot;0&quot; what do I do from there? [/quote:1uejxoqj] \nWell you really don't need the ratings for every attribute, the string attribute should do everything you need. The advantage of using the ratings is most obvious for things like height, where the attribute has some type of numerical value that may increase/decrease throughout the game. The non-numerical strings are less necessary, as you're not likely to be in a situation where player.race_rating + 2 wont end up with some weird results. The part where those ratings do benefit you is that you have a master list in one location where you can change the race names and such without breaking all existing code that references that race, as well as less opportunities for errors related to spelling. The downside is that of course down the line when you look at a code that checks for &quot;player.race_rating = 5&quot; it's a lot more likely you won't actually remember what race that is immediately and may have to go back and check the master list.\n\nAs for your question of where to go from there, well, you build your master lists if you haven't already, and then you decide which values the player will be allowed to start as and make those options in the character creation. From that point really you just use the display attributes for anything when the player actually sees the attribute and you use the rating when you want to change one of the attributes.\n\n[quote:1uejxoqj]((Also, thank you Pixie and Tin so far on helping me, I really appreciate your patience))[/quote:1uejxoqj] No problem, I like looking at this kind of stuff. Considerably less convoluted then half the code I end up putting myself through, heh. Helps me to step back and make sure I'm not building one giant mess with my own code.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite><blockquote><p>So you would list some choices and when the player selects a starting height from those choices you would code it to just set player.height_rating to the integer value of that height in the master list.</blockquote><br/><br/>Not sure what you mean. Kind of have to dumb it down for me, cause I'm really slow apparently lol.<br/><br/>So first, I go to the player.object where the height attribute is (which is currently a stringlist), then I create an integer attribute called height_rating and set it to 0?</p></blockquote><br/>What I was trying to say, is when you give the player a list of choices say  5'2&quot;, 5'6&quot;, 5'10&quot; for example, when the player selects one the script will first set their height_rating to the master list integer that matches with those values. so something like this<br/><pre><code>//display options for player to choose<br/><br/>//player chose 5'6&quot;<br/><br/>player&#46;height = 5'6&quot;<br/>player&#46;height_rating = 7</code></pre><br/>or if you want to be extra careful and possibly plan to alter your full_data values, you can just set the height_rating, and then run the script that sets the player.height based on it<br/><br/><blockquote><p>[quote]And at the same time you should only ever need to calculate the player.height when you change the player.height_rating, as it should be correct as long as the rating wasn't changed.</p></blockquote><br/><br/>How would I go about doing that? Calculating the player.height when I change the rating. [/quote]<br/>That is basically what I was describing with the Change_Height(#) function, where it includes the player.height = (....) line which calculates the display height after you change the rating. That's all I really meant by that, is just including the script to get your displayed height off the master list whenever you change the rating, so including them together as one function is probably a good solution.<br/><br/><blockquote><p>[quote]This way when you want to do something like say add 2 to your height rating, you can just call Change_Height (2), and for a height decrease you simply use a negative number.</p></blockquote><br/><br/>I understand this part. I'm just confused about how I should go about setting up all these things. I don't know where to start. <br/><br/>Currently, I have stringlists....I know for each of them, I need to create integer-based attribute ratings for each of the current attributes on the player, for example...<br/><br/>player.race<br/>player.race_rating<br/>player.height<br/>player.height_rating<br/>player.eyecolor<br/>player.eyecolor_rating<br/><br/>etc<br/><br/>Once I have those ratings and they are set to &quot;0&quot; what do I do from there? [/quote] <br/>Well you really don't need the ratings for every attribute, the string attribute should do everything you need. The advantage of using the ratings is most obvious for things like height, where the attribute has some type of numerical value that may increase/decrease throughout the game. The non-numerical strings are less necessary, as you're not likely to be in a situation where player.race_rating + 2 wont end up with some weird results. The part where those ratings do benefit you is that you have a master list in one location where you can change the race names and such without breaking all existing code that references that race, as well as less opportunities for errors related to spelling. The downside is that of course down the line when you look at a code that checks for &quot;player.race_rating = 5&quot; it's a lot more likely you won't actually remember what race that is immediately and may have to go back and check the master list.<br/><br/>As for your question of where to go from there, well, you build your master lists if you haven't already, and then you decide which values the player will be allowed to start as and make those options in the character creation. From that point really you just use the display attributes for anything when the player actually sees the attribute and you use the rating when you want to change one of the attributes.<br/><br/><blockquote><p>((Also, thank you Pixie and Tin so far on helping me, I really appreciate your patience))</p></blockquote> No problem, I like looking at this kind of stuff. Considerably less convoluted then half the code I end up putting myself through, heh. Helps me to step back and make sure I'm not building one giant mess with my own code.",
      "PostDate": "2015-09-05T13:18:19+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37906",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Okay...I'm not sure why, but neither of you are putting this in simple terms for me. I need it completely broken down! I must be really awful at this. \n\nWhy do I need a second list that displays the same exact information? I have...for example...\n\n[u:3vacznqc]Creation[/u:3vacznqc]\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\n[u:3vacznqc]Full Data[/u:3vacznqc]\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0\n\n\nNow from what I understand you guys want me to create a second list for these...for example\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n[b:3vacznqc]player.height_list: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0[/b:3vacznqc]\n\nand \n\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0\n[b:3vacznqc]player.height_list: &quot;string list&quot;: 3.0 --- 7.0[/b:3vacznqc]\n\nSo why am I making that a new (second) list, which is exactly the same? Why can't I use the first lists? Keep in mind I have no idea where to place the &quot;code&quot; for these either...so it'll have to be done in the GUI, I guess. \n\nFrom what I've gathered...\n\nI need these lists...\n\n[u:3vacznqc]Creation[/u:3vacznqc]\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\n[u:3vacznqc]Full Data[/u:3vacznqc]\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0\n\n...to correspond with one another (match up). \n\nI have already written out both lists and made sure the numbers match for them. Now I just need to put this into action. \n\nFrom what I gathered here, HK said....\n\n[quote:3vacznqc]&lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;\n&lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;[/quote:3vacznqc]\n\n^--- is this why I need the secondary lists (player.height_list)? Why can't I just use the lists. If not, then I'll have to have secondary lists for just about everything, which display the same lists...\n\nI know the &quot;unknown&quot; needs to be unknown because it's filled in by the player. \n\nplayer.height = StringListItem (fulldata.full_height_list, player.height_rating)\n\n^--- I know this is the end result. But why can't it be ....\n\nplayer.height = StringListItem (fulldata.height, player.height) ?\n\n\n\n\n\n-------------- \n\n\nEssentially all I want to do.....is after the player creates their character, manipulate that selection from the fulldata list. I have a creation list....and a fulldata list. The fulldata list is an expansion directly from the creation list. \n\nI just want to be able to make a player (no matter what they chose) to become taller or shorter, tanner or paler, skinnier and more fat, etc\n\nI don't want/need it to be anymore complicated than it needs to be. Ugh. Sorry I'm just incredibly frustrated. Not with you guys.\n\nI still have to do a damn Combat System and a Transformation System too, and this stuff is the first steps.",
      "EditableFormat": "bbcode",
      "HTML": "Okay...I'm not sure why, but neither of you are putting this in simple terms for me. I need it completely broken down! I must be really awful at this. <br/><br/>Why do I need a second list that displays the same exact information? I have...for example...<br/><br/><span style=\"text-decoration:underline;\">Creation</span><br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/><span style=\"text-decoration:underline;\">Full Data</span><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0<br/><br/><br/>Now from what I understand you guys want me to create a second list for these...for example<br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><span style=\"font-weight:bold;\">player.height_list: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0</span><br/><br/>and <br/><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0<br/><span style=\"font-weight:bold;\">player.height_list: &quot;string list&quot;: 3.0 --- 7.0</span><br/><br/>So why am I making that a new (second) list, which is exactly the same? Why can't I use the first lists? Keep in mind I have no idea where to place the &quot;code&quot; for these either...so it'll have to be done in the GUI, I guess. <br/><br/>From what I've gathered...<br/><br/>I need these lists...<br/><br/><span style=\"text-decoration:underline;\">Creation</span><br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/><span style=\"text-decoration:underline;\">Full Data</span><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0<br/><br/>...to correspond with one another (match up). <br/><br/>I have already written out both lists and made sure the numbers match for them. Now I just need to put this into action. <br/><br/>From what I gathered here, HK said....<br/><br/><blockquote><p>&lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;<br/>&lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;</p></blockquote><br/><br/>^--- is this why I need the secondary lists (player.height_list)? Why can't I just use the lists. If not, then I'll have to have secondary lists for just about everything, which display the same lists...<br/><br/>I know the &quot;unknown&quot; needs to be unknown because it's filled in by the player. <br/><br/>player.height = StringListItem (fulldata.full_height_list, player.height_rating)<br/><br/>^--- I know this is the end result. But why can't it be ....<br/><br/>player.height = StringListItem (fulldata.height, player.height) ?<br/><br/><br/><br/><br/><br/>-------------- <br/><br/><br/>Essentially all I want to do.....is after the player creates their character, manipulate that selection from the fulldata list. I have a creation list....and a fulldata list. The fulldata list is an expansion directly from the creation list. <br/><br/>I just want to be able to make a player (no matter what they chose) to become taller or shorter, tanner or paler, skinnier and more fat, etc<br/><br/>I don't want/need it to be anymore complicated than it needs to be. Ugh. Sorry I'm just incredibly frustrated. Not with you guys.<br/><br/>I still have to do a damn Combat System and a Transformation System too, and this stuff is the first steps.",
      "PostDate": "2015-09-07T05:27:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37907",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "my apologies, for confusing you neonayon!\n\nmy wrong usage of 'creation.height_list' and my 'fulldata.full_height_list', is just your 'creation.height' and 'fulldata.height', as I couldn't remember what~how you named them. Don't make any duplicates of them, lol. Again, my bad!",
      "EditableFormat": "bbcode",
      "HTML": "my apologies, for confusing you neonayon!<br/><br/>my wrong usage of 'creation.height_list' and my 'fulldata.full_height_list', is just your 'creation.height' and 'fulldata.height', as I couldn't remember what~how you named them. Don't make any duplicates of them, lol. Again, my bad!",
      "PostDate": "2015-09-07T05:48:11+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37908",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "You didn't confuse me. It's perfectly okay! \n\nI tend to get really confused about all this because I'm new at it, and dealing with a lot of these complicated features. Once I have all this out of the way, I hopefully won't have to deal with it again.\n\nI know you guys are doing your best to help, and I really, really appreciate it. I really do. So even if you have to explain it a hundred ways, I still won't ever be mad at you guys for taking time out of your day to deal with all this mundane stuff you've already mastered and having the patience to explain it to a newbie.\n\nWould you mind reexplaining all of that?",
      "EditableFormat": "bbcode",
      "HTML": "You didn't confuse me. It's perfectly okay! <br/><br/>I tend to get really confused about all this because I'm new at it, and dealing with a lot of these complicated features. Once I have all this out of the way, I hopefully won't have to deal with it again.<br/><br/>I know you guys are doing your best to help, and I really, really appreciate it. I really do. So even if you have to explain it a hundred ways, I still won't ever be mad at you guys for taking time out of your day to deal with all this mundane stuff you've already mastered and having the patience to explain it to a newbie.<br/><br/>Would you mind reexplaining all of that?",
      "PostDate": "2015-09-07T05:51:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37909",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "just one little correction (and explanation as I've confused you about it) on when you're writing this stuff:\n\n[quote=&quot;neonayon&quot;:3idm3wg2]Creation\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\nFull Data\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0[/quote:3idm3wg2]\n\nYou should be saying it like this (aka: understanding it as):\n\nObject (Name):\n\nCreation\n\na Stringlist Attribute added to the 'Creation' Object:\n\nCreation.height: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\nas seen by doing it through the GUI~Editor:\n\n'Creation' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: Creation)\nAttribute Name: height\nAttribute Type: stringlist\nAttribute Value (add): 5.0, 5.2, ... , 6.0\n\n'Full Data' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\n(Object Name: Creation)\nAttribute Name: height\nAttribute Type: stringlist\nAttribute Value (add): 3.0, 3.2, ... , 7.0\n\nsee how the word~text on the left side of the dot has to be the Object that you added the Attribute to~into, and the word~text on the right side of the dot is the name of the Attribute that you added to~into the specific Object.\n\njust wanted to correct your usage of 'player.height', as this isn't correct in understanding quest and its coding structure.",
      "EditableFormat": "bbcode",
      "HTML": "just one little correction (and explanation as I've confused you about it) on when you're writing this stuff:<br/><br/><blockquote><cite>neonayon wrote:</cite>Creation<br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/>Full Data<br/>player.height: &quot;string list&quot;: 3.0 --- 7.0</blockquote><br/><br/>You should be saying it like this (aka: understanding it as):<br/><br/>Object (Name):<br/><br/>Creation<br/><br/>a Stringlist Attribute added to the 'Creation' Object:<br/><br/>Creation.height: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/>as seen by doing it through the GUI~Editor:<br/><br/>'Creation' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: Creation)<br/>Attribute Name: height<br/>Attribute Type: stringlist<br/>Attribute Value (add): 5.0, 5.2, ... , 6.0<br/><br/>'Full Data' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>(Object Name: Creation)<br/>Attribute Name: height<br/>Attribute Type: stringlist<br/>Attribute Value (add): 3.0, 3.2, ... , 7.0<br/><br/>see how the word~text on the left side of the dot has to be the Object that you added the Attribute to~into, and the word~text on the right side of the dot is the name of the Attribute that you added to~into the specific Object.<br/><br/>just wanted to correct your usage of 'player.height', as this isn't correct in understanding quest and its coding structure.",
      "PostDate": "2015-09-07T06:03:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37910",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "these of mine:\n\n&lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;\n&lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;\n\n(again, you do NOT need any secondary~duplicate height lists, so these Attributes above have nothing to do with my confusion about secondary~duplicate height lists) \n\nare the Attributes added to~into~for your 'player' Object\n\nhere's how to do it via the GUI~Editor (as the above, 'creation' tag code, is confusing you, as you've not learned~understand it yet):\n\n'player' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; add -&gt; (see below, repeat as needed)\n\n(Object Name: player)\nAttribute Name: height\nAttribute Type: string\nAttribute Value: unknown // (or whatever you want for the initial display, such as '0.0' or whatever, before it is set~selected by your character creation section at the start of the game play)\n\n(Object Name: player)\nAttribute Name: height_rating\nAttribute Type: int (integer)\nAttribute Value: (this is an issue... Stringdictionary usage would fix it... but I doubt you want to get into learning dictionaries when you're still learning lists)\n\n-------\n\nthen, when your game begins, I believe you already got the character creation setup working right?, so it takes care of setting your 'player.height' already. But, we've got the issue with your 'player.height_rating', as this needs to be matching-corresponding to your character creation selected~set 'player.height'..., sighs... I'm not sure if there's a simple way to deal with this issue for you... sighs.",
      "EditableFormat": "bbcode",
      "HTML": "these of mine:<br/><br/>&lt;attr name=&quot;height&quot; type=&quot;string&quot;&gt;unknown&lt;/attr&gt;<br/>&lt;attr name=&quot;height_rating&quot; type=&quot;int&quot;&gt;0&lt;/attr&gt;<br/><br/>(again, you do NOT need any secondary~duplicate height lists, so these Attributes above have nothing to do with my confusion about secondary~duplicate height lists) <br/><br/>are the Attributes added to~into~for your 'player' Object<br/><br/>here's how to do it via the GUI~Editor (as the above, 'creation' tag code, is confusing you, as you've not learned~understand it yet):<br/><br/>'player' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; add -&gt; (see below, repeat as needed)<br/><br/>(Object Name: player)<br/>Attribute Name: height<br/>Attribute Type: string<br/>Attribute Value: unknown // (or whatever you want for the initial display, such as '0.0' or whatever, before it is set~selected by your character creation section at the start of the game play)<br/><br/>(Object Name: player)<br/>Attribute Name: height_rating<br/>Attribute Type: int (integer)<br/>Attribute Value: (this is an issue... Stringdictionary usage would fix it... but I doubt you want to get into learning dictionaries when you're still learning lists)<br/><br/>-------<br/><br/>then, when your game begins, I believe you already got the character creation setup working right?, so it takes care of setting your 'player.height' already. But, we've got the issue with your 'player.height_rating', as this needs to be matching-corresponding to your character creation selected~set 'player.height'..., sighs... I'm not sure if there's a simple way to deal with this issue for you... sighs.",
      "PostDate": "2015-09-07T06:15:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37911",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "actually... when I get the time (hopefully sometime in the next week or two ... well if I don't have tests to study for...hmm), I'll guide you step by step through a new slightly different setup that'll work and you'll be able to (hopefully) understand very easily too.\n\nAs what you got right now... has a few issues with it, to get it working... so, it'll be better to create a slightly change in setup, than trying to correct your current setup to work fully.",
      "EditableFormat": "bbcode",
      "HTML": "actually... when I get the time (hopefully sometime in the next week or two ... well if I don't have tests to study for...hmm), I'll guide you step by step through a new slightly different setup that'll work and you'll be able to (hopefully) understand very easily too.<br/><br/>As what you got right now... has a few issues with it, to get it working... so, it'll be better to create a slightly change in setup, than trying to correct your current setup to work fully.",
      "PostDate": "2015-09-07T06:24:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37912",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:nyovhryj]Object Name: player)\nAttribute Name: height\nAttribute Type: string\nAttribute Value: unknown // (or whatever you want for the initial display, such as '0.0' or whatever, before it is set~selected by your character creation section at the start of the game play)[/quote:nyovhryj]\n\n^--- I actually already have this set up on the player.object as well, you did it for me a while ago when you reorganized my game. Remember?\n\n[quote:nyovhryj](Object Name: player)\nAttribute Name: height_rating\nAttribute Type: int (integer)\nAttribute Value: (this is an issue... Stringdictionary usage would fix it... but I doubt you want to get into learning dictionaries when you're still learning lists)[/quote:nyovhryj]\n\n^--- so I still need to make this one, then. Okay! \n\nAlso, I don't mind using String Dictionaries if you have the patience to teach it lol. So far, so good though with this explanation (I already had all of that up to the height_rating thing right there.\n\n[quote:nyovhryj]\nactually... when I get the time (hopefully sometime in the next week or two ... well if I don't have tests to study for...hmm), I'll guide you step by step through a design that'll work and you'll be able to (hopefully) understand easily.\n\nAs what you got right now... has a few issues with it to get it working... so, it'll be better to create a slightly change in setup, than trying to correct your current setup to work fully.[/quote:nyovhryj]\n\nOh, hm. well, I suppose! Good luck on your tests and whatnot, just don't forget about this! I have a couple of tests as well. Maybe someone can move me along until you can explain your new idea! Or I have a million other things on the game to work on too.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>Object Name: player)<br/>Attribute Name: height<br/>Attribute Type: string<br/>Attribute Value: unknown // (or whatever you want for the initial display, such as '0.0' or whatever, before it is set~selected by your character creation section at the start of the game play)</p></blockquote><br/><br/>^--- I actually already have this set up on the player.object as well, you did it for me a while ago when you reorganized my game. Remember?<br/><br/><blockquote><p>(Object Name: player)<br/>Attribute Name: height_rating<br/>Attribute Type: int (integer)<br/>Attribute Value: (this is an issue... Stringdictionary usage would fix it... but I doubt you want to get into learning dictionaries when you're still learning lists)</p></blockquote><br/><br/>^--- so I still need to make this one, then. Okay! <br/><br/>Also, I don't mind using String Dictionaries if you have the patience to teach it lol. So far, so good though with this explanation (I already had all of that up to the height_rating thing right there.<br/><br/><blockquote><p><br/>actually... when I get the time (hopefully sometime in the next week or two ... well if I don't have tests to study for...hmm), I'll guide you step by step through a design that'll work and you'll be able to (hopefully) understand easily.<br/><br/>As what you got right now... has a few issues with it to get it working... so, it'll be better to create a slightly change in setup, than trying to correct your current setup to work fully.</p></blockquote><br/><br/>Oh, hm. well, I suppose! Good luck on your tests and whatnot, just don't forget about this! I have a couple of tests as well. Maybe someone can move me along until you can explain your new idea! Or I have a million other things on the game to work on too.",
      "PostDate": "2015-09-07T06:25:29+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37913",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "if you want to learn Dictionaries, that would make all of this much easier!, though we'd have to re-create a new setup, but it shouldn't be too bad to do.\n\nDictionaries actually aren't too much different from Lists, but they can be a bit harder to grasp~understand, especially if Lists are still confusing to you.",
      "EditableFormat": "bbcode",
      "HTML": "if you want to learn Dictionaries, that would make all of this much easier!, though we'd have to re-create a new setup, but it shouldn't be too bad to do.<br/><br/>Dictionaries actually aren't too much different from Lists, but they can be a bit harder to grasp~understand, especially if Lists are still confusing to you.",
      "PostDate": "2015-09-07T06:28:45+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37914",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote:3lw2tgn9]if you want to learn Dictionaries, that would make all of this much easier!, though we'd have to re-create a new setup, but it shouldn't be too bad to do.\n\nDictionaries actually aren't too much different from Lists, but they can be a bit harder to grasp~understand, especially if Lists are still confusing to you.[/quote:3lw2tgn9]\n\nAs long as you have the patience of walking me through it, I can recreate things.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><p>if you want to learn Dictionaries, that would make all of this much easier!, though we'd have to re-create a new setup, but it shouldn't be too bad to do.<br/><br/>Dictionaries actually aren't too much different from Lists, but they can be a bit harder to grasp~understand, especially if Lists are still confusing to you.</p></blockquote><br/><br/>As long as you have the patience of walking me through it, I can recreate things.",
      "PostDate": "2015-09-07T06:39:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37919",
      "UserId": 0,
      "Username": "TinFoilMkIV",
      "UserAvatar": null,
      "UserGravatar": "d70c7b1a4be0b3fe6f68912d606f4298",
      "EditableText": "[quote=&quot;Neonayon&quot;:3o67wn6l]Okay...I'm not sure why, but neither of you are putting this in simple terms for me. I need it completely broken down! I must be really awful at this. \n\nWhy do I need a second list that displays the same exact information? I have...for example...\n\n[u:3o67wn6l]Creation[/u:3o67wn6l]\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\n[u:3o67wn6l]Full Data[/u:3o67wn6l]\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0\n\n\nNow from what I understand you guys want me to create a second list for these...for example\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n[b:3o67wn6l]player.height_list: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0[/b:3o67wn6l]\n\nand \n\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0\n[b:3o67wn6l]player.height_list: &quot;string list&quot;: 3.0 --- 7.0[/b:3o67wn6l]\n\nSo why am I making that a new (second) list, which is exactly the same? Why can't I use the first lists? Keep in mind I have no idea where to place the &quot;code&quot; for these either...so it'll have to be done in the GUI, I guess. \n[/quote:3o67wn6l]\nAh I think I see the problem, bit of miscommunication on both sides.\n\nThe [b:3o67wn6l]player.height[/b:3o67wn6l] is not supposed to be a string list, just a regular string, since 5'6&quot; has to be stored as a string due to non numerical characters. The [b:3o67wn6l]player.height[/b:3o67wn6l] only needs to hold the current value of the players height, not the full list.\n\n[code:3o67wn6l]player&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)[/code:3o67wn6l]\nI think this is the part that was confusing you?  Sorry if I sometimes put to much together at once when I'm writing out equations.\n\nfirst we have [[b:3o67wn6l]player.height[/b:3o67wn6l] =] this is setting the value of the player.height string, which is just a single string attribute\n\nthe [ListItem()] will pull a single value from a list, in this case the master list\n*see [url=http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/functions/listitem&#46;html:3o67wn6l]ListItem[/url:3o67wn6l]*\n\n[[b:3o67wn6l]fulldata.height_list[/b:3o67wn6l]] is the first parameter of the ListItem function, which is the ID of the list being looked at\n\n[[b:3o67wn6l]player.height_rating[/b:3o67wn6l]] is being used as the second parameter for ListItem, which is used as the index of the list\n\nso all together this line of code will use the [b:3o67wn6l]player.height_rating[/b:3o67wn6l] as an index to find string from the [b:3o67wn6l]fulldata.height_list[/b:3o67wn6l] then set [b:3o67wn6l]player.height[/b:3o67wn6l] equal to the string value on that list. So it will use the current height_rating to setup the players height string correctly\n\nUltimately you do not strictly need a [b:3o67wn6l]player.height[/b:3o67wn6l] attribute, you can just use ListItem() to pull the value directly from your master list whenever you need it, it depends on how you plan to use it or whatever is easier to keep track of.\n\n[quote:3o67wn6l]\nFrom what I've gathered...\n\nI need these lists...\n\n[u:3o67wn6l]Creation[/u:3o67wn6l]\nplayer.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0\n\n[u:3o67wn6l]Full Data[/u:3o67wn6l]\nplayer.height: &quot;string list&quot;: 3.0 --- 7.0 [/quote:3o67wn6l]\nYou shouldn't need the player.height to be a string list, just an individual string, as I hopefully explained adequately above.\n\n[quote:3o67wn6l]\nplayer.height = StringListItem (fulldata.full_height_list, player.height_rating)\n\n^--- I know this is the end result. But why can't it be ....\n\nplayer.height = StringListItem (fulldata.height, player.height) ?\n[/quote:3o67wn6l]\nwell for one that method could only be used once since you're setting player.height to a different value based on itself, so that script won't be useable more than once without getting odd results.\n\n[b:3o67wn6l]player.height[/b:3o67wn6l] = StringListItem (fulldata.height, [b:3o67wn6l][u:3o67wn6l]player.height[/u:3o67wn6l][/b:3o67wn6l])\n^the problem is the underlined section, since you're using the current value as a list index, the only time this works cleanly is if the list index is the same as the list item, in which case the list itself is completely redundant\n\n[quote:3o67wn6l]\nEssentially all I want to do.....is after the player creates their character, manipulate that selection from the fulldata list. I have a creation list....and a fulldata list. The fulldata list is an expansion directly from the creation list. \n\nI just want to be able to make a player (no matter what they chose) to become taller or shorter, tanner or paler, skinnier and more fat, etc\n[/quote:3o67wn6l]\n\nYou're actually very close to getting this down, and string lists are really the way to go to have a +/- to a stat type that isn't a strict integer. There's just a bit of confusion over the equation to pull the info from your master list it seems.\n\n\nEDIT: As for dictionaries they really are similar to lists, except the indexes used don't need to be numbers and they don't have to be in order. If you want to do things like +1 height, or +1 lightness, and that sort of thing, then a list is probably easier to use, as they are always based on numbers and ordered. They're both made up of indexes and a corresponding item, it's more how they're organized and accessed.\n\nA dictionary works more like the index in a text book, where you can look up an idea or specific item by name and then it will direct you to the relevant information. The indexes used in a dictionary can be any type of string, and they don't need an order, unlike lists which will always be ordered from 0 to however many items you have.\n\nI can go into more detail on how it would work when I have a clearer idea what its going to be used for, hopefully this will at least give you an idea of how they're different from lists.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite>Okay...I'm not sure why, but neither of you are putting this in simple terms for me. I need it completely broken down! I must be really awful at this. <br/><br/>Why do I need a second list that displays the same exact information? I have...for example...<br/><br/><span style=\"text-decoration:underline;\">Creation</span><br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/><span style=\"text-decoration:underline;\">Full Data</span><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0<br/><br/><br/>Now from what I understand you guys want me to create a second list for these...for example<br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><span style=\"font-weight:bold;\">player.height_list: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0</span><br/><br/>and <br/><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0<br/><span style=\"font-weight:bold;\">player.height_list: &quot;string list&quot;: 3.0 --- 7.0</span><br/><br/>So why am I making that a new (second) list, which is exactly the same? Why can't I use the first lists? Keep in mind I have no idea where to place the &quot;code&quot; for these either...so it'll have to be done in the GUI, I guess. <br/></blockquote><br/>Ah I think I see the problem, bit of miscommunication on both sides.<br/><br/>The <span style=\"font-weight:bold;\">player.height</span> is not supposed to be a string list, just a regular string, since 5'6&quot; has to be stored as a string due to non numerical characters. The <span style=\"font-weight:bold;\">player.height</span> only needs to hold the current value of the players height, not the full list.<br/><br/><pre><code>player&#46;height = ListItem(fulldata&#46;height_list, player&#46;height_rating)</code></pre><br/>I think this is the part that was confusing you?  Sorry if I sometimes put to much together at once when I'm writing out equations.<br/><br/>first we have [<span style=\"font-weight:bold;\">player.height</span> =] this is setting the value of the player.height string, which is just a single string attribute<br/><br/>the [ListItem()] will pull a single value from a list, in this case the master list<br/>*see <a href=\"http&#58;//docs&#46;textadventures&#46;co&#46;uk/quest/functions/listitem&#46;html\" rel=\"nofollow\">ListItem</a>*<br/><br/>[<span style=\"font-weight:bold;\">fulldata.height_list</span>] is the first parameter of the ListItem function, which is the ID of the list being looked at<br/><br/>[<span style=\"font-weight:bold;\">player.height_rating</span>] is being used as the second parameter for ListItem, which is used as the index of the list<br/><br/>so all together this line of code will use the <span style=\"font-weight:bold;\">player.height_rating</span> as an index to find string from the <span style=\"font-weight:bold;\">fulldata.height_list</span> then set <span style=\"font-weight:bold;\">player.height</span> equal to the string value on that list. So it will use the current height_rating to setup the players height string correctly<br/><br/>Ultimately you do not strictly need a <span style=\"font-weight:bold;\">player.height</span> attribute, you can just use ListItem() to pull the value directly from your master list whenever you need it, it depends on how you plan to use it or whatever is easier to keep track of.<br/><br/><blockquote><p><br/>From what I've gathered...<br/><br/>I need these lists...<br/><br/><span style=\"text-decoration:underline;\">Creation</span><br/>player.height: &quot;string list&quot;: 5.0, 5.2, 5.4, 5.6, --- 6.0<br/><br/><span style=\"text-decoration:underline;\">Full Data</span><br/>player.height: &quot;string list&quot;: 3.0 --- 7.0 </p></blockquote><br/>You shouldn't need the player.height to be a string list, just an individual string, as I hopefully explained adequately above.<br/><br/><blockquote><p><br/>player.height = StringListItem (fulldata.full_height_list, player.height_rating)<br/><br/>^--- I know this is the end result. But why can't it be ....<br/><br/>player.height = StringListItem (fulldata.height, player.height) ?<br/></p></blockquote><br/>well for one that method could only be used once since you're setting player.height to a different value based on itself, so that script won't be useable more than once without getting odd results.<br/><br/><span style=\"font-weight:bold;\">player.height</span> = StringListItem (fulldata.height, <span style=\"font-weight:bold;\"><span style=\"text-decoration:underline;\">player.height</span></span>)<br/>^the problem is the underlined section, since you're using the current value as a list index, the only time this works cleanly is if the list index is the same as the list item, in which case the list itself is completely redundant<br/><br/><blockquote><p><br/>Essentially all I want to do.....is after the player creates their character, manipulate that selection from the fulldata list. I have a creation list....and a fulldata list. The fulldata list is an expansion directly from the creation list. <br/><br/>I just want to be able to make a player (no matter what they chose) to become taller or shorter, tanner or paler, skinnier and more fat, etc<br/></p></blockquote><br/><br/>You're actually very close to getting this down, and string lists are really the way to go to have a +/- to a stat type that isn't a strict integer. There's just a bit of confusion over the equation to pull the info from your master list it seems.<br/><br/><br/>EDIT: As for dictionaries they really are similar to lists, except the indexes used don't need to be numbers and they don't have to be in order. If you want to do things like +1 height, or +1 lightness, and that sort of thing, then a list is probably easier to use, as they are always based on numbers and ordered. They're both made up of indexes and a corresponding item, it's more how they're organized and accessed.<br/><br/>A dictionary works more like the index in a text book, where you can look up an idea or specific item by name and then it will direct you to the relevant information. The indexes used in a dictionary can be any type of string, and they don't need an order, unlike lists which will always be ordered from 0 to however many items you have.<br/><br/>I can go into more detail on how it would work when I have a clearer idea what its going to be used for, hopefully this will at least give you an idea of how they're different from lists.",
      "PostDate": "2015-09-07T20:15:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37922",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "@Neonayon (and Tin possibly too):\n\nthe reason a Dictionary works great is that it deals with your 'player.height_rating' issue not being set to match up with with your selection of your initial 'player.height' from the character creation at the start of the game (as the global Turnscript will immediately change your 'player.height' to correspondingly what you put for your 'player.height' via in your code for its initial value), as the Dictionary allows you to switch back and forth between your (now as this is a Dictionary) 'string_index_key1' and your 'key1s_value'.\n\n---------\n\n@Neonayon *and Tin* (this will get everything working for neonayon, if you can help her with the below, I'd be immesnely appreciative, as I may be too busy with school to help her immeidately with this):\n\n[b:2pk8gn94][size=150:2pk8gn94]I also, overnight (while I slept, lol), I thought of an easy way to deal with this issue, without changing over to using Dictionaries:[/size:2pk8gn94][/b:2pk8gn94]\n\nit's a bit bad~messy~ugly coding design, but who cares, it's a simple quick fix (a band-aid isn't that bad~ugly, wink), hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nwe'll just need to help you to add some scripts at the end of your character creation, which will set your 'player.height_rating' to the correct value, based upon what your selected 'player.height' is from the character creation menu-list scripts in it, for quick simple example:\n\n[code:2pk8gn94]// neonayon's initial limited height selection list *only* for the start of the game (character creation)&#58;\n// Creation&#46;height = split (&quot;5&#46;0;5&#46;2;5&#46;4;5&#46;6;5&#46;8;5&#46;10;6&#46;0&quot;, &quot;;&quot;)\n\n// neonayon's full height range list during game play (after the initial limited selection of height of the character creation)&#58;\n// Full Data&#46;height = split (&quot;3&#46;0;3&#46;2;3&#46;4;3&#46;6;3&#46;8;3&#46;10;4&#46;0;4&#46;2;4&#46;4;4&#46;6;4&#46;8;4&#46;10;5&#46;0;5&#46;2;5&#46;4;5&#46;6;5&#46;8;5&#46;10;6&#46;0;6&#46;2;6&#46;4;6&#46;6;6&#46;8;6&#46;10;7&#46;0&quot;, &quot;;&quot;)\n\n&#46;&#46;&#46;index_integer&#46;&#46;&#46;&#46;|&#46;&#46;string_value\n&#46;&#46;&#46;(height_rating)&#46;&#46;|&#46;&#46;&#46;&#46;(height)\n--------------------|-----------------\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;0&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;0&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;1&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;2&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;2&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;4&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;3&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;6&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;4&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;8&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;5&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;10&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;6&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;0&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;7&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;2&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;8&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;4&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;9&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;6&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;10&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;8&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;11&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;10&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;12&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;0&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;13&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;2&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;14&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;4&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;15&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;6&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;16&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;8&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;17&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;10&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;18&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;0&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;19&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;2&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;20&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;4&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;21&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;6&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;22&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;8&#46;&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;23&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;10&#46;&#46;&#46;&#46;&#46;\n&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;24&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;7&#46;0&#46;&#46;&#46;&#46;&#46;&#46;\n---------------------|---------------\n\na qwasi-part of your 'character creation' script block within~for your 'game' Object -&gt; 'script' Tab -&gt; 'start' Script&#058;\n\nshowmenu (&quot;Height?&quot;, Creation&#46;height, false) {\n  player&#46;height = ToString (result)\n  \n  // The fix to deal with the issue of non-set 'player&#46;height_rating=(null or unknown)', see below&#58;\n  \n  if (player&#46;height = &quot;5&#46;0&quot;) {\n    player&#46;height_rating = 12\n  } else if (player&#46;height = &quot;5&#46;2&quot;) {\n    player&#46;height_rating = 13\n  } else if (player&#46;height = &quot;5&#46;4&quot;) {\n    player&#46;height_rating = 14\n  } else if (player&#46;height = &quot;5&#46;6&quot;) {\n    player&#46;height_rating = 15\n  } else if (player&#46;height = &quot;5&#46;8&quot;) {\n    player&#46;height_rating = 16\n  } else if (player&#46;height = &quot;5&#46;10&quot;) {\n    player&#46;height_rating = 17\n  } else if (player&#46;height = &quot;6&#46;0&quot;) {\n    player&#46;height_rating = 18\n  }\n}\n\n// and because of the fix above, now your 'player&#46;height_rating' is correctly set (after~from the character creation) and thus won't cause any issues with your global Turnscript&#058;\n\n&lt;turnscript name=&quot;xxx&quot;&gt;\n  &lt;enabled /&gt;\n  &lt;script&gt;\n    player&#46;height = StringListItem(Full Data&#46;height, player&#46;height_rating)\n  &lt;/script&gt;\n&lt;/turnscript&gt;\n\n// during game play, the full height range is the 'Full Data&#46;height' Stringlist Attribute, from 3&#46;0 to 7&#46;0, by 2 inch intervals\n\n// for example, neonayon has a 'height_growth_potion' that can be drunk during game play&#58;\n\nplayer&#46;height_rating = player&#46;height_rating + 2\n\n// which then her global Turnscript kicks-in, changing her 'player&#46;height'[/code:2pk8gn94]",
      "EditableFormat": "bbcode",
      "HTML": "@Neonayon (and Tin possibly too):<br/><br/>the reason a Dictionary works great is that it deals with your 'player.height_rating' issue not being set to match up with with your selection of your initial 'player.height' from the character creation at the start of the game (as the global Turnscript will immediately change your 'player.height' to correspondingly what you put for your 'player.height' via in your code for its initial value), as the Dictionary allows you to switch back and forth between your (now as this is a Dictionary) 'string_index_key1' and your 'key1s_value'.<br/><br/>---------<br/><br/>@Neonayon *and Tin* (this will get everything working for neonayon, if you can help her with the below, I'd be immesnely appreciative, as I may be too busy with school to help her immeidately with this):<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-size:150\">I also, overnight (while I slept, lol), I thought of an easy way to deal with this issue, without changing over to using Dictionaries:</span></span><br/><br/>it's a bit bad~messy~ugly coding design, but who cares, it's a simple quick fix (a band-aid isn't that bad~ugly, wink), hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>we'll just need to help you to add some scripts at the end of your character creation, which will set your 'player.height_rating' to the correct value, based upon what your selected 'player.height' is from the character creation menu-list scripts in it, for quick simple example:<br/><br/><pre><code>// neonayon's initial limited height selection list *only* for the start of the game (character creation)&#58;<br/>// Creation&#46;height = split (&quot;5&#46;0;5&#46;2;5&#46;4;5&#46;6;5&#46;8;5&#46;10;6&#46;0&quot;, &quot;;&quot;)<br/><br/>// neonayon's full height range list during game play (after the initial limited selection of height of the character creation)&#58;<br/>// Full Data&#46;height = split (&quot;3&#46;0;3&#46;2;3&#46;4;3&#46;6;3&#46;8;3&#46;10;4&#46;0;4&#46;2;4&#46;4;4&#46;6;4&#46;8;4&#46;10;5&#46;0;5&#46;2;5&#46;4;5&#46;6;5&#46;8;5&#46;10;6&#46;0;6&#46;2;6&#46;4;6&#46;6;6&#46;8;6&#46;10;7&#46;0&quot;, &quot;;&quot;)<br/><br/>&#46;&#46;&#46;index_integer&#46;&#46;&#46;&#46;|&#46;&#46;string_value<br/>&#46;&#46;&#46;(height_rating)&#46;&#46;|&#46;&#46;&#46;&#46;(height)<br/>--------------------|-----------------<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;0&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;0&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;1&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;2&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;2&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;4&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;3&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;6&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;4&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;8&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;5&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;3&#46;10&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;6&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;0&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;7&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;2&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;8&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;4&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;9&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;6&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;10&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;8&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;11&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;4&#46;10&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;12&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;0&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;13&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;2&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;14&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;4&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;15&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;6&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;16&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;8&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;17&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;5&#46;10&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;18&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;0&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;19&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;2&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;20&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;4&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;21&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;6&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;22&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;8&#46;&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;23&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;6&#46;10&#46;&#46;&#46;&#46;&#46;<br/>&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;24&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;&#46;|&#46;&#46;&#46;&#46;&#46;&#46;7&#46;0&#46;&#46;&#46;&#46;&#46;&#46;<br/>---------------------|---------------<br/><br/>a qwasi-part of your 'character creation' script block within~for your 'game' Object -&gt; 'script' Tab -&gt; 'start' Script&#058;<br/><br/>showmenu (&quot;Height?&quot;, Creation&#46;height, false) {<br/>  player&#46;height = ToString (result)<br/>  <br/>  // The fix to deal with the issue of non-set 'player&#46;height_rating=(null or unknown)', see below&#58;<br/>  <br/>  if (player&#46;height = &quot;5&#46;0&quot;) {<br/>    player&#46;height_rating = 12<br/>  } else if (player&#46;height = &quot;5&#46;2&quot;) {<br/>    player&#46;height_rating = 13<br/>  } else if (player&#46;height = &quot;5&#46;4&quot;) {<br/>    player&#46;height_rating = 14<br/>  } else if (player&#46;height = &quot;5&#46;6&quot;) {<br/>    player&#46;height_rating = 15<br/>  } else if (player&#46;height = &quot;5&#46;8&quot;) {<br/>    player&#46;height_rating = 16<br/>  } else if (player&#46;height = &quot;5&#46;10&quot;) {<br/>    player&#46;height_rating = 17<br/>  } else if (player&#46;height = &quot;6&#46;0&quot;) {<br/>    player&#46;height_rating = 18<br/>  }<br/>}<br/><br/>// and because of the fix above, now your 'player&#46;height_rating' is correctly set (after~from the character creation) and thus won't cause any issues with your global Turnscript&#058;<br/><br/>&lt;turnscript name=&quot;xxx&quot;&gt;<br/>  &lt;enabled /&gt;<br/>  &lt;script&gt;<br/>    player&#46;height = StringListItem(Full Data&#46;height, player&#46;height_rating)<br/>  &lt;/script&gt;<br/>&lt;/turnscript&gt;<br/><br/>// during game play, the full height range is the 'Full Data&#46;height' Stringlist Attribute, from 3&#46;0 to 7&#46;0, by 2 inch intervals<br/><br/>// for example, neonayon has a 'height_growth_potion' that can be drunk during game play&#58;<br/><br/>player&#46;height_rating = player&#46;height_rating + 2<br/><br/>// which then her global Turnscript kicks-in, changing her 'player&#46;height'</code></pre>",
      "PostDate": "2015-09-07T23:43:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37926",
      "UserId": 0,
      "Username": "HaganeSteel",
      "UserAvatar": null,
      "UserGravatar": "df37a725b4b0ec648419f1076777c4b8",
      "EditableText": "Like my other post, this may or may not help. Maybe I can simplify what everyone is trying to say here.\n\nIn Carrion Fire, the player has two attributes: HP and Condition. Condition is a string. HP is an integer.\n\nI then have a third attribute that's called changedHP. The attribute &quot;changedHP&quot; runs every time the HP integer is added to or subtracted from. This is what &quot;changedHP&quot; does:\n\n[attachment=1:3hpmsrre]<!-- ia1 -->HP.png<!-- ia1 -->[/attachment:3hpmsrre]\n\n The &quot;Condition&quot; string, by default, says &quot;Normal,&quot; since the player begins at max health.\n\n[attachment=0:3hpmsrre]<!-- ia0 -->HP2.png<!-- ia0 -->[/attachment:3hpmsrre]",
      "EditableFormat": "bbcode",
      "HTML": "Like my other post, this may or may not help. Maybe I can simplify what everyone is trying to say here.<br/><br/>In Carrion Fire, the player has two attributes: HP and Condition. Condition is a string. HP is an integer.<br/><br/>I then have a third attribute that's called changedHP. The attribute &quot;changedHP&quot; runs every time the HP integer is added to or subtracted from. This is what &quot;changedHP&quot; does:<br/><br/><div><img src=\"/attachment/1319\" alt=\"HP.png\" /></div><br/><br/> The &quot;Condition&quot; string, by default, says &quot;Normal,&quot; since the player begins at max health.<br/><br/><div><img src=\"/attachment/1320\" alt=\"HP2.png\" /></div>",
      "PostDate": "2015-09-08T00:35:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37928",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "thank you Hagane!\n\nneonayon wasn't able to understand the special 'changed' Script Attributes from the wiki documentation, but your post will be a great help to her in understanding it! Especially as it has nice pics of doing it in the GUI~Editor, much easier for neonayon than her trying to figure it out in code from me, laughs.\n\nShe's currently using Turnscripts, which has the same effect as your method of using the special 'changed' Script Attributes.\n\nher problem is~was slightly different as it dealt with conceptually (using your 'HP' and 'condition' example) needing a way to go from (a selected state of) 'condition' to 'HP', the opposite~backwards direction of your example, of going from (a change) in 'HP' to 'condition'.\n\n--------\n\nalso, if you're interested (if you don't know of this already), you can do this (using my own labels~names, lol):\n\n[code:3cvmt6kj]if (player&#46;current_life_integer &gt; player&#46;maximum_life_integer) {\n  player&#46;current_life_integer = player&#46;maximum_life_integer\n}[/code:3cvmt6kj]\n\nwhat this does is, say your life is: 'Life: 900/999&quot;, and you drink a health potion that restores +500 HP... this code will ensure that your life is this: 'Life: 999/999'.\n\nand it will work for any max life, for anotehr example:\n\nwhat this does is, say your life is: 'Life: 250/500&quot;, and you drink a health potion that restores +500 HP... this code will ensure that your life is this: 'Life: 500/500'.\n\nit puts (assigns) your max life variable's value into your current life variable as its value.",
      "EditableFormat": "bbcode",
      "HTML": "thank you Hagane!<br/><br/>neonayon wasn't able to understand the special 'changed' Script Attributes from the wiki documentation, but your post will be a great help to her in understanding it! Especially as it has nice pics of doing it in the GUI~Editor, much easier for neonayon than her trying to figure it out in code from me, laughs.<br/><br/>She's currently using Turnscripts, which has the same effect as your method of using the special 'changed' Script Attributes.<br/><br/>her problem is~was slightly different as it dealt with conceptually (using your 'HP' and 'condition' example) needing a way to go from (a selected state of) 'condition' to 'HP', the opposite~backwards direction of your example, of going from (a change) in 'HP' to 'condition'.<br/><br/>--------<br/><br/>also, if you're interested (if you don't know of this already), you can do this (using my own labels~names, lol):<br/><br/><pre><code>if (player&#46;current_life_integer &gt; player&#46;maximum_life_integer) {<br/>  player&#46;current_life_integer = player&#46;maximum_life_integer<br/>}</code></pre><br/><br/>what this does is, say your life is: 'Life: 900/999&quot;, and you drink a health potion that restores +500 HP... this code will ensure that your life is this: 'Life: 999/999'.<br/><br/>and it will work for any max life, for anotehr example:<br/><br/>what this does is, say your life is: 'Life: 250/500&quot;, and you drink a health potion that restores +500 HP... this code will ensure that your life is this: 'Life: 500/500'.<br/><br/>it puts (assigns) your max life variable's value into your current life variable as its value.",
      "PostDate": "2015-09-08T06:14:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37930",
      "UserId": 0,
      "Username": "HaganeSteel",
      "UserAvatar": null,
      "UserGravatar": "df37a725b4b0ec648419f1076777c4b8",
      "EditableText": "If I'm understanding you right, you can just invert it.\n\nIt'd be a &quot;changedCondition&quot; script. If Condition = &quot; Normal &quot; then set variable: player.HP = 6.",
      "EditableFormat": "bbcode",
      "HTML": "If I'm understanding you right, you can just invert it.<br/><br/>It'd be a &quot;changedCondition&quot; script. If Condition = &quot; Normal &quot; then set variable: player.HP = 6.",
      "PostDate": "2015-09-08T08:17:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37945",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Why not use JavaScript for the character creation?\n\n<!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m -->",
      "EditableFormat": "bbcode",
      "HTML": "Why not use JavaScript for the character creation?<br/><br/><!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m -->",
      "PostDate": "2015-09-09T13:12:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37948",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "[quote=&quot;The Pixie&quot;:2rk708y7]Why not use JavaScript for the character creation?\n\n<!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m -->[/quote:2rk708y7]\n\nPix, you cray cray if you think I can program in Java script!! I can barely use Quest! That looks fantastic though. But I think I'm too much of a newbie to do any substantial work like that. I still have to figure out a basic combat system, and items that affect the characters appearance. Maybe once I figure out those backbones I'll be able to Java.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>The Pixie wrote:</cite>Why not use JavaScript for the character creation?<br/><br/><!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m --></blockquote><br/><br/>Pix, you cray cray if you think I can program in Java script!! I can barely use Quest! That looks fantastic though. But I think I'm too much of a newbie to do any substantial work like that. I still have to figure out a basic combat system, and items that affect the characters appearance. Maybe once I figure out those backbones I'll be able to Java.",
      "PostDate": "2015-09-09T22:03:18+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37979",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Alright, so Pixie was helping me in email a bit, but I haven't been able to get a hold of him in the last few days to continue fixing things. I'm still not sure how to manipulate the coding or do what was hoping to do...\n\nHere's what he did. \n\nHe created a secondary &quot;GetHeight&quot; function.\n\n[code:1mx8ypwa]return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)[/code:1mx8ypwa]\n\nand a &quot;ListIndex&quot; function as well.\n\n[code:1mx8ypwa]// Returns the index of the given item in the given list, or -1 if it is not found\ncount = 0\nmsg (&quot;looking for &quot; + item)\nforeach (o, lst) {\n  if (o = item) {\n    return (count)\n  }\n  msg (&quot;not &quot; + o)\n  count = count + 1\n}\nreturn (-1)[/code:1mx8ypwa]\n\nand he added a player.object, attribute called 'changedheight_rating...\n\n[quote:1mx8ypwa]player.height = GetHeight()\n[/quote:1mx8ypwa]\n\n--------------------\n\nSo my problem is, I don't know how to use this at all. He has a reply here saying...\n\n[quote=&quot;The Pixie&quot;]Looks like the creation bit gets you a string called result with the number of feet, a dot and then the inches (eg &quot;5.6&quot;). To convert that to an integer, (after handling random) do this:\n[code:1mx8ypwa]height_as_array = Split(result, &quot;&#46;&quot;)\nplayer&#46;height_rating = ToInt(StringListItem(height_as_array, 0)) * 12 + ToInt(StringListItem(height_as_array, 1))[/code:1mx8ypwa]\nConsider player.height_rating to be the primary attribute, everything else is derived from that. If the player grows two inches, change that attribute like this.\n[code:1mx8ypwa]player&#46;height_rating = player&#46;height_rating + 2[/code:1mx8ypwa]\nThen create a function call GetHeight. Set its return type to be a string, and paste in this code:\n[code:1mx8ypwa]return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)[/code:1mx8ypwa]\nDo you use the text processor to display the height?\n\n[i:1mx8ypwa]If you do you do use the text processor:[/i:1mx8ypwa]\n\nSet up a secondary attribute, player.height, and a change script on player.height_rating to keep them in step. To do that, add a new attribute to the player called changedheight_rating, set it to be a script, and paste in this code:\n[code:1mx8ypwa]player&#46;height = GetHeight()[/code:1mx8ypwa]\n\n--------------------------\n\nBut as I said I still don't know how to just increase and decrease the height values during the game, and I don't know how to manipulate the other lists I have that don't have numerical values. As I said before, my two stringlist lists match up completely starting with &quot;0&quot;. One list is for a character creation where the player has limited choices at first and one is a larger/expanded list that the player can get during the course of the game. Using height as an example is in the beginning they can choose between 5'0 to 6'0 (every 2 inches) ...and the expanded list allows them to become 3'0 to 7'0. \n\nSo I have other things in the list like haircolor, body sizes, orientations etc, which don't have numerical values. They are stringlists and match up starting at &quot;0&quot; as HK said. \n\nBut during the course of the game, I want &quot;traps&quot; to be able to decrease or increase those values with a quick code. For example...\n\n[b:1mx8ypwa][i:1mx8ypwa]((WARNING: THE FOLLOWING IS RATED R for RESTRICTED))[/i:1mx8ypwa][/b:1mx8ypwa]\n\nLet's say the player chooses to have a flat butt (lol) plank butt, and decide to drink a &quot;butt increasing&quot; potion, which expands their butt and makes it a little bigger. \n\nSo on the creation and fulldata stringlists both are [b:1mx8ypwa]flat &quot;0&quot;[/b:1mx8ypwa] and the potion increases the butt +1 ....bringing them to the next level, [b:1mx8ypwa]small &quot;1&quot;[/b:1mx8ypwa]. Let's say they do it again, which makes their butt bigger, [b:1mx8ypwa]average &quot;3&quot;[/b:1mx8ypwa] and so on.\n\n[b:1mx8ypwa][i:1mx8ypwa]((R-RATED SECTION COMPLETE))[/i:1mx8ypwa][/b:1mx8ypwa]\n\nSo how would I do that? I hope this is clear x-x",
      "EditableFormat": "bbcode",
      "HTML": "Alright, so Pixie was helping me in email a bit, but I haven't been able to get a hold of him in the last few days to continue fixing things. I'm still not sure how to manipulate the coding or do what was hoping to do...<br/><br/>Here's what he did. <br/><br/>He created a secondary &quot;GetHeight&quot; function.<br/><br/><pre><code>return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)</code></pre><br/><br/>and a &quot;ListIndex&quot; function as well.<br/><br/><pre><code>// Returns the index of the given item in the given list, or -1 if it is not found<br/>count = 0<br/>msg (&quot;looking for &quot; + item)<br/>foreach (o, lst) {<br/>  if (o = item) {<br/>    return (count)<br/>  }<br/>  msg (&quot;not &quot; + o)<br/>  count = count + 1<br/>}<br/>return (-1)</code></pre><br/><br/>and he added a player.object, attribute called 'changedheight_rating...<br/><br/><blockquote><p>player.height = GetHeight()<br/></p></blockquote><br/><br/>--------------------<br/><br/>So my problem is, I don't know how to use this at all. He has a reply here saying...<br/><br/>[quote=&quot;The Pixie&quot;]Looks like the creation bit gets you a string called result with the number of feet, a dot and then the inches (eg &quot;5.6&quot;). To convert that to an integer, (after handling random) do this:<br/><pre><code>height_as_array = Split(result, &quot;&#46;&quot;)<br/>player&#46;height_rating = ToInt(StringListItem(height_as_array, 0)) * 12 + ToInt(StringListItem(height_as_array, 1))</code></pre><br/>Consider player.height_rating to be the primary attribute, everything else is derived from that. If the player grows two inches, change that attribute like this.<br/><pre><code>player&#46;height_rating = player&#46;height_rating + 2</code></pre><br/>Then create a function call GetHeight. Set its return type to be a string, and paste in this code:<br/><pre><code>return (&quot;&quot; + player&#46;height_rating / 12 + &quot;'&quot; + player&#46;height_rating % 12)</code></pre><br/>Do you use the text processor to display the height?<br/><br/><span style=\"font-style:italic;\">If you do you do use the text processor:</span><br/><br/>Set up a secondary attribute, player.height, and a change script on player.height_rating to keep them in step. To do that, add a new attribute to the player called changedheight_rating, set it to be a script, and paste in this code:<br/><pre><code>player&#46;height = GetHeight()</code></pre><br/><br/>--------------------------<br/><br/>But as I said I still don't know how to just increase and decrease the height values during the game, and I don't know how to manipulate the other lists I have that don't have numerical values. As I said before, my two stringlist lists match up completely starting with &quot;0&quot;. One list is for a character creation where the player has limited choices at first and one is a larger/expanded list that the player can get during the course of the game. Using height as an example is in the beginning they can choose between 5'0 to 6'0 (every 2 inches) ...and the expanded list allows them to become 3'0 to 7'0. <br/><br/>So I have other things in the list like haircolor, body sizes, orientations etc, which don't have numerical values. They are stringlists and match up starting at &quot;0&quot; as HK said. <br/><br/>But during the course of the game, I want &quot;traps&quot; to be able to decrease or increase those values with a quick code. For example...<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">((WARNING: THE FOLLOWING IS RATED R for RESTRICTED))</span></span><br/><br/>Let's say the player chooses to have a flat butt (lol) plank butt, and decide to drink a &quot;butt increasing&quot; potion, which expands their butt and makes it a little bigger. <br/><br/>So on the creation and fulldata stringlists both are <span style=\"font-weight:bold;\">flat &quot;0&quot;</span> and the potion increases the butt +1 ....bringing them to the next level, <span style=\"font-weight:bold;\">small &quot;1&quot;</span>. Let's say they do it again, which makes their butt bigger, <span style=\"font-weight:bold;\">average &quot;3&quot;</span> and so on.<br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">((R-RATED SECTION COMPLETE))</span></span><br/><br/>So how would I do that? I hope this is clear x-x",
      "PostDate": "2015-09-13T22:29:52+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37981",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;Neonayon&quot;:1jxh8jfq][quote=&quot;The Pixie&quot;:1jxh8jfq]Why not use JavaScript for the character creation?\n\n<!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m -->[/quote:1jxh8jfq]\n\nPix, you cray cray if you think I can program in Java script!! I can barely use Quest! That looks fantastic though. But I think I'm too much of a newbie to do any substantial work like that. I still have to figure out a basic combat system, and items that affect the characters appearance. Maybe once I figure out those backbones I'll be able to Java.[/quote:1jxh8jfq]\nGiven me a couple of days and I will see what I can do for you.\n\nBy the way, JavaScript is a very different language to Java.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>Neonayon wrote:</cite><blockquote><p><b>&quot;The Pixie&quot;</b></p><p>Why not use JavaScript for the character creation?<br/><br/><!-- m --><a class=\"postlink\" href=\"http://textadventures.co.uk/games/view/zkega6dzdekt86lcu97skg/ui-test-for-neonayon\">http://textadventures.co.uk/games/view/ ... r-neonayon</a><!-- m --></blockquote><br/><br/>Pix, you cray cray if you think I can program in Java script!! I can barely use Quest! That looks fantastic though. But I think I'm too much of a newbie to do any substantial work like that. I still have to figure out a basic combat system, and items that affect the characters appearance. Maybe once I figure out those backbones I'll be able to Java.</p></blockquote><br/>Given me a couple of days and I will see what I can do for you.<br/><br/>By the way, JavaScript is a very different language to Java.",
      "PostDate": "2015-09-14T07:55:09+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37982",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "Actually, if you e-mail me the latest version, I will hook in the library I created here:\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5474\">viewtopic.php?f=18&amp;t=5474</a><!-- l -->",
      "EditableFormat": "bbcode",
      "HTML": "Actually, if you e-mail me the latest version, I will hook in the library I created here:<br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5474\">viewtopic.php?f=18&amp;t=5474</a><!-- l -->",
      "PostDate": "2015-09-14T09:53:37+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37983",
      "UserId": 0,
      "Username": "Anonynn",
      "UserAvatar": "7661_1463890118.jpg",
      "UserGravatar": "2eea18890a69714beb5b926a7b559e64",
      "EditableText": "Ah, so that's what you've been up to? Did my questions/dilemma inspire all that new-coding? I'll shoot you the email asap. Just don't forget how to explain to me how to use it, haha.",
      "EditableFormat": "bbcode",
      "HTML": "Ah, so that's what you've been up to? Did my questions/dilemma inspire all that new-coding? I'll shoot you the email asap. Just don't forget how to explain to me how to use it, haha.",
      "PostDate": "2015-09-14T19:26:31+01:00",
      "LastEditDate": null
    }
  ]
}
