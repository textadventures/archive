{
  "Topic": {
    "TopicId": "0pzpmsmupuybhdwmjo3shg",
    "ForumId": "10",
    "Title": "the 'this' within Script Attributes, is not handled by 'invoke', but is handled by 'do'",
    "LastUpdated": "2019-08-23T10:10:11.7907562Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "d5770dac-62e6-419d-ad43-88529cf59709",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I was pulling my hear out as 'this' was no longer working in an Object's Script Attributes, but finally I tracked it down, to it not working through the use of 'invoke', but works fine with 'do', in activating the Object's Script Attributes\r\n\r\nmaybe if Pixie or whoever knows the internal coding of quest, if you can check the 'invoke' coding, as maybe it was forgotten or accidentally messed up to no longer work with 'this' within the Script Attributes\r\n\r\nor, is 'invoke' not suppose to work with 'this' within the Script Attributes it is activating?\r\n\r\n'do' uses an Object Parameter (and a Script Parameter), while 'invoke' does not (it just uses a Script Parameter), is this why 'this' doesn't work with 'invoke', but does work with 'do ???\r\n\r\n('this' also works with Delegates too, just not with 'invoke')",
      "EditableFormat": "markdown",
      "HTML": "<p>I was pulling my hear out as 'this' was no longer working in an Object's Script Attributes, but finally I tracked it down, to it not working through the use of 'invoke', but works fine with 'do', in activating the Object's Script Attributes</p>\n<p>maybe if Pixie or whoever knows the internal coding of quest, if you can check the 'invoke' coding, as maybe it was forgotten or accidentally messed up to no longer work with 'this' within the Script Attributes</p>\n<p>or, is 'invoke' not suppose to work with 'this' within the Script Attributes it is activating?</p>\n<p>'do' uses an Object Parameter (and a Script Parameter), while 'invoke' does not (it just uses a Script Parameter), is this why 'this' doesn't work with 'invoke', but does work with 'do ???</p>\n<p>('this' also works with Delegates too, just not with 'invoke')</p>\n\n",
      "PostDate": "2019-08-23T10:10:11.7907562Z",
      "LastEditDate": "2019-08-23T10:21:18.988777Z",
      "link": null
    },
    {
      "PostId": "c89721a4-1a78-4236-82ca-55eead0ff043",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep, that's the difference between 'do' and 'invoke'.\r\n\r\n`invoke` invokes a **script**.\r\n`do` does a **script attribute** of `this`.\r\n\r\nThat is exactly how it's supposed to work.",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep, that's the difference between 'do' and 'invoke'.</p>\n<p><code>invoke</code> invokes a <strong>script</strong>.<br>\n<code>do</code> does a <strong>script attribute</strong> of <code>this</code>.</p>\n<p>That is exactly how it's supposed to work.</p>\n\n",
      "PostDate": "2019-08-23T10:28:09.8840517Z",
      "LastEditDate": "2019-08-23T10:30:37.9366838Z",
      "link": null
    },
    {
      "PostId": "cdd7efee-4b23-4789-b5ce-3c66e78300e1",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let's say you have a script attribute named \"testing\".\r\n\r\nTo ```invoke``` that:\r\n\r\n```\r\ninvoke (this.testing)\r\n```\r\n\r\n---\r\nIt messed me up before, because the syntax is different when using ```do```:\r\n\r\n```\r\ndo (this, \"testing\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Let's say you have a script attribute named \"testing\".</p>\n<p>To <code>invoke</code> that:</p>\n<pre><code>invoke (this.testing)\n</code></pre>\n<hr>\n<p>It messed me up before, because the syntax is different when using <code>do</code>:</p>\n<pre><code>do (this, \"testing\")\n</code></pre>\n\n",
      "PostDate": "2019-08-23T13:01:44.6098121Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "dec3c09b-467d-4d9f-b5f3-ec741a112e5c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@ RH:\r\n\r\nI meant using 'this' within the Script Attribute when: using 'invoke' to call the Script Attribute (doesn't work) vs using 'do' to call the Script Attribute (does work):\r\n\r\n```\r\ninvoke (test_object.test_script) // causes an error: 'this' is not defined, not recognized as Object or variable\r\n\r\ndo (test_object, \"test_script\") // NO error, displays correctly: 7\r\n\r\n// using the Verb Functionality (hyperlinks and/or right pane object-buttons): NO error, displays correctly: 7\r\n\r\n// game.start, via the automatic running/calling of it, works fine too\r\n\r\n// (need to test 'invoking' the 'game.start', to confirm it causes an error, lol)\r\n\r\n// rundelete (blah_object, \"blah_script\") // need to test this a bit more thoroughly (if it always works with 'this' or if it depends upon the passed Parameters of the Delegate)\r\n\r\n-------\r\n\r\n<delegate name=\"blah_delegate\" />\r\n\r\n<game name=\"NAME_OF_GAME\">\r\n\r\n  <attr name=\"firstpublished\" type=\"string\">2019</attr>\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    msg (this.firstpublished)\r\n\r\n    invoke (game.start) // need to test, if causes error (should cause error, ignore that this would be an infinite/endless loop, as is, lol)\r\n\r\n    do (game, \"start\") // need to test, if causes error (should work, ignore that this would be an infinite/endless loop, as is, lol)\r\n\r\n    rundelete (blah_object, \"blah_script\") // need to test/examine a bit more with the Delegates, to see if using 'this' always works or not (if it has to do with the Parameters of the Delegate or not)\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<object name=\"test_object\">\r\n\r\n  <attr name=\"count\" type=\"int\">7</attr>\r\n\r\n  <attr name=\"test_script\" type=\"script\">\r\n    msg (this.count)\r\n  </attr>\r\n\r\n  <attr name=\"blah_script\" type=\"blah_delegate\">\r\n    msg (this.count)\r\n  </attr>\r\n\r\n</object>\r\n\r\n<verb>\r\n  <property>test_script</property>\r\n  <pattern>test_script</pattern>\r\n</verb>\r\n```\r\n\r\n--------\r\n\r\n@ mrangel:\r\n\r\nthis entire time, until now, I've never had a problem with using 'this' within a Script Attribute, I never realized that I must have never used 'this' and 'invoke' together, as this is my first time ever being met with 'this' not working, it took quite a bit of time for me to track down why 'this' was no longer working for me, laughs\r\n\r\nAlso, I just realized now... in my troubleshooting search for why 'this' wasn't working for me, I was looking at some other code of mine, and it was working fine with using 'this' within a Script Attribute, but I was using the Verb Functionality (using the hyperlinks/right-pane object-buttons) to call the Script Attributes, and had no problem with using 'this' within the Script Attribute, it was only occurring when I was calling them using 'invoke', if only I had known/realized it... sighs.. argh\r\n\r\n(its hard to track down the cause of a problem, when you don't know what is cause of the problem, lol)\r\n\r\n(now, in hindsight, I'm realizing a lot of things that I was clueless about as I was trying to figure out why 'this' was no longer working for me, haha, like the Verb Functionality just now)",
      "EditableFormat": "markdown",
      "HTML": "<p>@ RH:</p>\n<p>I meant using 'this' within the Script Attribute when: using 'invoke' to call the Script Attribute (doesn't work) vs using 'do' to call the Script Attribute (does work):</p>\n<pre><code>invoke (test_object.test_script) // causes an error: 'this' is not defined, not recognized as Object or variable\n\ndo (test_object, \"test_script\") // NO error, displays correctly: 7\n\n// using the Verb Functionality (hyperlinks and/or right pane object-buttons): NO error, displays correctly: 7\n\n// game.start, via the automatic running/calling of it, works fine too\n\n// (need to test 'invoking' the 'game.start', to confirm it causes an error, lol)\n\n// rundelete (blah_object, \"blah_script\") // need to test this a bit more thoroughly (if it always works with 'this' or if it depends upon the passed Parameters of the Delegate)\n\n-------\n\n&lt;delegate name=\"blah_delegate\" /&gt;\n\n&lt;game name=\"NAME_OF_GAME\"&gt;\n\n  &lt;attr name=\"firstpublished\" type=\"string\"&gt;2019&lt;/attr&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    msg (this.firstpublished)\n\n    invoke (game.start) // need to test, if causes error (should cause error, ignore that this would be an infinite/endless loop, as is, lol)\n\n    do (game, \"start\") // need to test, if causes error (should work, ignore that this would be an infinite/endless loop, as is, lol)\n\n    rundelete (blah_object, \"blah_script\") // need to test/examine a bit more with the Delegates, to see if using 'this' always works or not (if it has to do with the Parameters of the Delegate or not)\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;object name=\"test_object\"&gt;\n\n  &lt;attr name=\"count\" type=\"int\"&gt;7&lt;/attr&gt;\n\n  &lt;attr name=\"test_script\" type=\"script\"&gt;\n    msg (this.count)\n  &lt;/attr&gt;\n\n  &lt;attr name=\"blah_script\" type=\"blah_delegate\"&gt;\n    msg (this.count)\n  &lt;/attr&gt;\n\n&lt;/object&gt;\n\n&lt;verb&gt;\n  &lt;property&gt;test_script&lt;/property&gt;\n  &lt;pattern&gt;test_script&lt;/pattern&gt;\n&lt;/verb&gt;\n</code></pre>\n<hr>\n<p>@ mrangel:</p>\n<p>this entire time, until now, I've never had a problem with using 'this' within a Script Attribute, I never realized that I must have never used 'this' and 'invoke' together, as this is my first time ever being met with 'this' not working, it took quite a bit of time for me to track down why 'this' was no longer working for me, laughs</p>\n<p>Also, I just realized now... in my troubleshooting search for why 'this' wasn't working for me, I was looking at some other code of mine, and it was working fine with using 'this' within a Script Attribute, but I was using the Verb Functionality (using the hyperlinks/right-pane object-buttons) to call the Script Attributes, and had no problem with using 'this' within the Script Attribute, it was only occurring when I was calling them using 'invoke', if only I had known/realized it... sighs.. argh</p>\n<p>(its hard to track down the cause of a problem, when you don't know what is cause of the problem, lol)</p>\n<p>(now, in hindsight, I'm realizing a lot of things that I was clueless about as I was trying to figure out why 'this' was no longer working for me, haha, like the Verb Functionality just now)</p>\n\n",
      "PostDate": "2019-08-23T14:47:19.1150975Z",
      "LastEditDate": "2019-08-23T15:10:36.5816434Z",
      "link": null
    },
    {
      "PostId": "27b78cc4-1846-4424-a509-b14ec8c4c841",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": ">     invoke (test_object.test_script)\r\n\r\nWhen the interpreter comes to this, it first evaluates the expression `test_object.test_script`, which returns a script.\r\n\r\nThis script is then passed to the `invoke` function.\r\n\r\nInvoke only knows about the script; it doesn't know anything about the expression that returned the script. It doesn't know if you got the script from a script attribute, a dictonary, a variable, a function that returns a script, or anywhere else.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<pre><code>invoke (test_object.test_script)\n</code></pre>\n</blockquote>\n<p>When the interpreter comes to this, it first evaluates the expression <code>test_object.test_script</code>, which returns a script.</p>\n<p>This script is then passed to the <code>invoke</code> function.</p>\n<p>Invoke only knows about the script; it doesn't know anything about the expression that returned the script. It doesn't know if you got the script from a script attribute, a dictonary, a variable, a function that returns a script, or anywhere else.</p>\n\n",
      "PostDate": "2019-08-23T15:50:19.7217041Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a3257fc7-faa0-4783-b651-de1af2e0f6cb",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm confused and trying to understand.\r\n\r\nHere is my small example game:\r\n\r\n<details>\r\n\r\n```\r\n<!--Saved by Quest 5.8.6809.15141-->\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Invoke this\">\r\n    <gameid>9110e147-2ff2-4e45-a69c-387b3fe96d73</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2019</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"maguffin\">\r\n      <inherit name=\"editor_object\" />\r\n      <attr name=\"script_att\" type=\"script\">\r\n        msg (\"This is the script_att!\")\r\n      </attr>\r\n      <test type=\"script\">\r\n        invoke (this.script_att)\r\n      </test>\r\n    </object>\r\n  </object>\r\n  <verb>\r\n    <property>testing</property>\r\n    <pattern>testing</pattern>\r\n    <defaultexpression>\"You can't testing \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n  <verb>\r\n    <property>test</property>\r\n    <pattern>test</pattern>\r\n    <defaultexpression>\"You can't test \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n</asl>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nWhen I use the ```maguffin``` object's ```test``` verb (which runs ```invoke (this.script_att)```), it works.\r\n\r\nWhat am I doing differently?",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm confused and trying to understand.</p>\n<p>Here is my small example game:</p>\n<details>\n<pre><code>&lt;!--Saved by Quest 5.8.6809.15141--&gt;\n&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Invoke this\"&gt;\n    &lt;gameid&gt;9110e147-2ff2-4e45-a69c-387b3fe96d73&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2019&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"maguffin\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;attr name=\"script_att\" type=\"script\"&gt;\n        msg (\"This is the script_att!\")\n      &lt;/attr&gt;\n      &lt;test type=\"script\"&gt;\n        invoke (this.script_att)\n      &lt;/test&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;testing&lt;/property&gt;\n    &lt;pattern&gt;testing&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't testing \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;verb&gt;\n    &lt;property&gt;test&lt;/property&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't test \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n</details>\n<hr>\n<p>When I use the <code>maguffin</code> object's <code>test</code> verb (which runs <code>invoke (this.script_att)</code>), it works.</p>\n<p>What am I doing differently?</p>\n\n",
      "PostDate": "2019-08-23T22:31:18.5477862Z",
      "LastEditDate": "2019-08-23T22:32:14.7199266Z",
      "link": null
    },
    {
      "PostId": "8853fc72-86a4-46c9-9556-cd93e23c0a16",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, never mind.  I think I see what you guys are talking about.\r\n\r\nIf my ```maguffin``` object had a ```testing``` script attribute like this:\r\n\r\n```\r\nmsg(this.alias)\r\n```\r\n\r\n---\r\n...then ```invoke``` would throw an error, but ```do``` would work correctly.\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, never mind.  I think I see what you guys are talking about.</p>\n<p>If my <code>maguffin</code> object had a <code>testing</code> script attribute like this:</p>\n<pre><code>msg(this.alias)\n</code></pre>\n<hr>\n<p>...then <code>invoke</code> would throw an error, but <code>do</code> would work correctly.</p>\n\n",
      "PostDate": "2019-08-23T22:40:08.5790743Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cb99dc8c-3ac0-4caa-bb69-9e8da08a18bc",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Although if you really want to use \"this\" with invoke, you can.\r\n\r\n<code style=\"color: green\">do (someobject, \"someattribute\")</code> is functionally the same as <code style=\"color: green\">invoke (GetScript (someobject, \"someattribute\"), QuickParams (\"this\", someobject))</code>\r\n\r\nHere's a thought on why that might be useful:\r\n<details>\r\n<summary>Silly code off the top of my head</summary>\r\n\r\nThis would create a function which takes the same parameters as `do`, but can be used on an attribute that is a list or dictionary of scripts (in which case it runs all of them). Not sure if there's any use to it, but it shows that it might be useful to manually put \"this\" into the parameters array passed to `invoke`.\r\n\r\n```\r\n<function name=\"FlexibleDo\" parameters=\"object, attribute, params\">\r\n  if (not IsDefined (\"params\")) {\r\n    params = NewDictionary()\r\n  }\r\n  else if (params = null) {\r\n    params = NewDictionary()\r\n  }\r\n  if (DictionaryContains (params, \"this\")) {\r\n    dictionary remove (params, \"this\")\r\n  }\r\n  dictionary add (params, \"this\", object)\r\n  scripts = NewList()\r\n  switch (TypeOf (object, attribute)) {\r\n    case (\"script\") {\r\n      list add (scripts, GetAttribute (object, attribute))\r\n    }\r\n    case (\"list\") {\r\n      scripts = GetAttribute (object, attribute)\r\n    }\r\n    case (\"dictionary\", \"scriptdictionary\") {\r\n      dict = GetAttribute (object, attribute)\r\n      foreach (key, dict) {\r\n        list add (scripts, DictionaryItem (dict, key))\r\n      }\r\n    }\r\n    default {\r\n      error (object.name + \".\" + attribute + \" isn't a script collection.\")\r\n    }\r\n  }\r\n  foreach (script, scripts) {\r\n    if (TypeOf (script) = \"script\") {\r\n      invoke (script, params)\r\n    }\r\n  }\r\n</function>\r\n```\r\n\r\n(it would also be fairly simple to modify this function so that it displays a text or runs a script, in the way verb attributes are handled)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>Although if you really want to use \"this\" with invoke, you can.</p>\n<p><code style=\"color: green\">do (someobject, \"someattribute\")</code> is functionally the same as <code style=\"color: green\">invoke (GetScript (someobject, \"someattribute\"), QuickParams (\"this\", someobject))</code></p>\n<p>Here's a thought on why that might be useful:</p>\n<details>\n<summary>Silly code off the top of my head</summary>\n<p>This would create a function which takes the same parameters as <code>do</code>, but can be used on an attribute that is a list or dictionary of scripts (in which case it runs all of them). Not sure if there's any use to it, but it shows that it might be useful to manually put \"this\" into the parameters array passed to <code>invoke</code>.</p>\n<pre><code>&lt;function name=\"FlexibleDo\" parameters=\"object, attribute, params\"&gt;\n  if (not IsDefined (\"params\")) {\n    params = NewDictionary()\n  }\n  else if (params = null) {\n    params = NewDictionary()\n  }\n  if (DictionaryContains (params, \"this\")) {\n    dictionary remove (params, \"this\")\n  }\n  dictionary add (params, \"this\", object)\n  scripts = NewList()\n  switch (TypeOf (object, attribute)) {\n    case (\"script\") {\n      list add (scripts, GetAttribute (object, attribute))\n    }\n    case (\"list\") {\n      scripts = GetAttribute (object, attribute)\n    }\n    case (\"dictionary\", \"scriptdictionary\") {\n      dict = GetAttribute (object, attribute)\n      foreach (key, dict) {\n        list add (scripts, DictionaryItem (dict, key))\n      }\n    }\n    default {\n      error (object.name + \".\" + attribute + \" isn't a script collection.\")\n    }\n  }\n  foreach (script, scripts) {\n    if (TypeOf (script) = \"script\") {\n      invoke (script, params)\n    }\n  }\n&lt;/function&gt;\n</code></pre>\n<p>(it would also be fairly simple to modify this function so that it displays a text or runs a script, in the way verb attributes are handled)</p>\n</details>\n\n",
      "PostDate": "2019-08-23T23:03:21.3619837Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "41f4327a-8975-43cf-a5f5-26a289dec65a",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For anyone who isn't grasping the concept (like I wasn't), I've updated my ```maguffin``` object to demonstrate.\r\n\r\nHere's the code:\r\n\r\n<details>\r\n\r\n```\r\n    <object name=\"maguffin\">\r\n      <inherit name=\"editor_object\" />\r\n      <attr name=\"msg_att\">This is script_att_two!</attr>\r\n      <attr name=\"script_att\" type=\"script\">\r\n        msg (\"This is script_att!\")\r\n      </attr>\r\n      <attr name=\"script_att_two\" type=\"script\">\r\n        msg (this.msg_att)\r\n      </attr>\r\n      <test type=\"script\">\r\n        msg (\"Using 'invoke'...\")\r\n        msg (\"Invoking script_att...\")\r\n        invoke (this.script_att)\r\n        // *** ABOVE LINE DOES NOT THROW AN ERROR BECAUSE this NOT USED IN script_att\r\n        msg (\"Invoking script_att_two...\")\r\n        invoke (this.script_att_two)\r\n        // *** ABOVE LINE THROWS ERROR BECAUSE this IS USED IN script_att_two\r\n        //\r\n        // *** THE REST OF THIS CODE WORKS CORRECTLY\r\n        msg (\"Using 'do'...\")\r\n        msg (\"Doing script_att...\")\r\n        do (this, \"script_att\")\r\n        msg (\"Doing script_att_two...\")\r\n        do (this, \"script_att_two\")\r\n      </test>\r\n    </object>\r\n```\r\n\r\n</details>\r\n\r\n---\r\nHere's a screenshot of gameplay:\r\n\r\n<details>\r\n\r\n![Invoke_this-SCREENSHOT](https://user-images.githubusercontent.com/30656341/63628465-326dd500-c5fc-11e9-9740-2059d4414c99.png)\r\n\r\n</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>For anyone who isn't grasping the concept (like I wasn't), I've updated my <code>maguffin</code> object to demonstrate.</p>\n<p>Here's the code:</p>\n<details>\n<pre><code>    &lt;object name=\"maguffin\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;attr name=\"msg_att\"&gt;This is script_att_two!&lt;/attr&gt;\n      &lt;attr name=\"script_att\" type=\"script\"&gt;\n        msg (\"This is script_att!\")\n      &lt;/attr&gt;\n      &lt;attr name=\"script_att_two\" type=\"script\"&gt;\n        msg (this.msg_att)\n      &lt;/attr&gt;\n      &lt;test type=\"script\"&gt;\n        msg (\"Using 'invoke'...\")\n        msg (\"Invoking script_att...\")\n        invoke (this.script_att)\n        // *** ABOVE LINE DOES NOT THROW AN ERROR BECAUSE this NOT USED IN script_att\n        msg (\"Invoking script_att_two...\")\n        invoke (this.script_att_two)\n        // *** ABOVE LINE THROWS ERROR BECAUSE this IS USED IN script_att_two\n        //\n        // *** THE REST OF THIS CODE WORKS CORRECTLY\n        msg (\"Using 'do'...\")\n        msg (\"Doing script_att...\")\n        do (this, \"script_att\")\n        msg (\"Doing script_att_two...\")\n        do (this, \"script_att_two\")\n      &lt;/test&gt;\n    &lt;/object&gt;\n</code></pre>\n</details>\n<hr>\n<p>Here's a screenshot of gameplay:</p>\n<details>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/63628465-326dd500-c5fc-11e9-9740-2059d4414c99.png\" alt=\"Invoke_this-SCREENSHOT\"></p>\n</details>\n\n",
      "PostDate": "2019-08-23T23:20:01.9657565Z",
      "LastEditDate": "2019-08-23T23:21:19.4996653Z",
      "link": null
    }
  ]
}
