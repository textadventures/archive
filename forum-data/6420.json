{
  "Topic": {
    "TopicId": "6420",
    "ForumId": "10",
    "Title": "Setting variable to an object's attribute, named by a string",
    "LastUpdated": "2016-06-14T06:42:31+01:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "43423",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "I'm trying to set a new variable to an object's attribute. Thing is, this script is being used in several places, and the attribute name is not always the same. I would set it to object.whatever, but I need to set it to object.????whatever, where the ???? value changes every time... It's kind of hard to explain, sorry. I just need a function that can return an object's attribute given two variables: an object, and a string variable, where the string variable denotes the object's attribute. It seems so easy, but I simply can't find it out. Can anybody help?",
      "EditableFormat": "bbcode",
      "HTML": "I'm trying to set a new variable to an object's attribute. Thing is, this script is being used in several places, and the attribute name is not always the same. I would set it to object.whatever, but I need to set it to object.????whatever, where the ???? value changes every time... It's kind of hard to explain, sorry. I just need a function that can return an object's attribute given two variables: an object, and a string variable, where the string variable denotes the object's attribute. It seems so easy, but I simply can't find it out. Can anybody help?",
      "PostDate": "2016-06-13T23:07:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43424",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'm not quite understanding this/what you're saying (I'm having trouble due to not understanding the terminology you're using), sighs, but I'll give some guesses:\n\nmy terminology/understanding:\n\nVARIABLE\n-&gt; Variable\n-&gt; Attribute\n-&gt; Parameter\n\nValue\n-&gt; simple expression\n-&gt; complex expression\n\nVariable:\n\nthese are erased (NOT preserved/saved) once the scripting that contains them is finished; Variables are temporary/local VARIABLES\n\nVariable_name = Value\n\nresult = &quot;HK&quot;\nresult = x + 5\nhandled = false\nhandled = true\nyou_go_first = true\nyou_go_first = false\nprimary_pigment_color_list = split (&quot;red;blue;yellow&quot;, &quot;;&quot;)\nright_hand = sword // 'sword' has to exist (be an actual/existing Object)\ndamage = 5 * (x + 4) / (x - 7)\ndamage = weapon_damage + weapon_damage * (strength / 100)\ndamage = strength\ndamage = strength + endurance\n\nAttribute:\n\nthese are preserved/saved as they're attached/connected/contained/held to/by an Object (so long as the Object exists/still exists of course), and thus you can use/reuse them anywhere in your game (in other/any scripting); Attributes are permanent*/global VARIABLES\n\n*again, so long as the Object exists/still exists\n\nAttribute_name.Attribute_name = Value\n\ngame.state = 0\ngame.state = 1\ngame.state = 7\ngame.state = &quot;0&quot;\ngame.state = &quot;1&quot;\ngame.state = &quot;7&quot;\nplayer.alias = &quot;HK&quot;\nplayer.alias = &quot;Playinful&quot;\nplayer.strength = 100\norc.dead = true\norc.dead = false\ngame.sex_list = split (&quot;male;female&quot;, &quot;;&quot;)\nplayer.right_hand = sword // 'sword' has to exist (be an actual/existing Object)\nplayer.damage = player.weapon.damage + player.weapon.damage * (player.strength / 100) - (orc.armor.defense + orc.armor.defense * (orc.endurance / 100))\nplayer.damage = player.strength\nplayer.damage = player.strength + player.endurance\n\n------------------\n\nthe 'set' and 'do' Scripts/Functions are very powerful (you can concatenate):\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/set.html\">http://docs.textadventures.co.uk/quest/scripts/set.html</a><!-- m -->\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m -->\n\nfor an example:\n\n[code:2auwz9zx]// game&#46;primary_attribute_list = split (&quot;strength;endurance;dexterity;agility;speed;luck;intelligence;spirituality;mentality;personality&quot;, &quot;;&quot;)\nforeach (primary_attribute, game&#46;primary_attribute_list) {\n  set (player, primary_attribute + &quot;_integer_attribute&quot;, 100)\n  set (monster_1, primary_attribute + &quot;_integer_attribute&quot;, 10)\n}\n\n// monster_1&#46;alias = orc\nSet (monster_1, &quot;alias&quot;, monster_1&#46;alias + &quot; (hostile)&quot;)\n\n/*\nresult(s)&#58;\n\n(I like my names describing what something is, I prefer 'player&#46;strength_integer_attribute' over 'player&#46;strength', as this let's me easily organize and keep them unique, for example, I can have this too along with the other attribute&#58; player&#46;strength_string_attribute = &quot;strong/average/weak&quot;, whereas I couldn't do this obviously&#58; player&#46;strength = 100 and player&#46;strength = &quot;strong&quot;, and as I also don't like using upper case, and all the other standard conventions, either as they just confuse me)\n\nplayer&#46;strength_integer_attribute = 100\nplayer&#46;endurance_integer_attribute = 100\nplayer&#46;dexterity_integer_attribute = 100\nplayer&#46;agility_integer_attribute = 100\nplayer&#46;speed_integer_attribute = 100\nplayer&#46;luck_integer_attribute = 100\nplayer&#46;intelligence_integer_attribute = 100\nplayer&#46;spirituality_integer_attribute = 100\nplayer&#46;mentality_integer_attribute = 100\nplayer&#46;personality_integer_attribute = 100\n\nmonster_1&#46;strength_integer_attribute = 10\nmonster_1&#46;endurance_integer_attribute = 10\nmonster_1&#46;dexterity_integer_attribute = 10\nmonster_1&#46;agility_integer_attribute = 10\nmonster_1&#46;speed_integer_attribute = 10\nmonster_1&#46;luck_integer_attribute = 10\nmonster_1&#46;intelligence_integer_attribute = 10\nmonster_1&#46;spirituality_integer_attribute = 10\nmonster_1&#46;mentality_integer_attribute = 10\nmonster_1&#46;personality_integer_attribute = 10\n\norc (hostile)\n*/[/code:2auwz9zx]\n\n---------\n\nmaybe this is what you want/are asking for, an example:\n\nyou set your desired (changing/dynamic) Object's name and Attribute's name to the 'object_name_variable' and 'attribute_name_variable' Variables, and then you can use them in the 'set' Script/Function, possibly/probably needing the 'GetObject' Script/Function:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getobject.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m -->\n\n(I'm not sure if the below will work, as I've not gone that deep into this type of stuff yet)\n\n[code:2auwz9zx]object_name_variable = player // or&#58; &quot;HK&quot;, &quot;Playinful&quot;, &quot;monster_1&quot;, &quot;etc etc etc&quot;\nattribute_name_variable = &quot;strength&quot; // or&#58; &quot;endurance&quot;, &quot;dexterity&quot;, &quot;etc etc etc&quot;\n\nset (GetObject(object_name_variable), attribute_name_variable, 50)[/code:2auwz9zx]",
      "EditableFormat": "bbcode",
      "HTML": "I'm not quite understanding this/what you're saying (I'm having trouble due to not understanding the terminology you're using), sighs, but I'll give some guesses:<br/><br/>my terminology/understanding:<br/><br/>VARIABLE<br/>-&gt; Variable<br/>-&gt; Attribute<br/>-&gt; Parameter<br/><br/>Value<br/>-&gt; simple expression<br/>-&gt; complex expression<br/><br/>Variable:<br/><br/>these are erased (NOT preserved/saved) once the scripting that contains them is finished; Variables are temporary/local VARIABLES<br/><br/>Variable_name = Value<br/><br/>result = &quot;HK&quot;<br/>result = x + 5<br/>handled = false<br/>handled = true<br/>you_go_first = true<br/>you_go_first = false<br/>primary_pigment_color_list = split (&quot;red;blue;yellow&quot;, &quot;;&quot;)<br/>right_hand = sword // 'sword' has to exist (be an actual/existing Object)<br/>damage = 5 * (x + 4) / (x - 7)<br/>damage = weapon_damage + weapon_damage * (strength / 100)<br/>damage = strength<br/>damage = strength + endurance<br/><br/>Attribute:<br/><br/>these are preserved/saved as they're attached/connected/contained/held to/by an Object (so long as the Object exists/still exists of course), and thus you can use/reuse them anywhere in your game (in other/any scripting); Attributes are permanent*/global VARIABLES<br/><br/>*again, so long as the Object exists/still exists<br/><br/>Attribute_name.Attribute_name = Value<br/><br/>game.state = 0<br/>game.state = 1<br/>game.state = 7<br/>game.state = &quot;0&quot;<br/>game.state = &quot;1&quot;<br/>game.state = &quot;7&quot;<br/>player.alias = &quot;HK&quot;<br/>player.alias = &quot;Playinful&quot;<br/>player.strength = 100<br/>orc.dead = true<br/>orc.dead = false<br/>game.sex_list = split (&quot;male;female&quot;, &quot;;&quot;)<br/>player.right_hand = sword // 'sword' has to exist (be an actual/existing Object)<br/>player.damage = player.weapon.damage + player.weapon.damage * (player.strength / 100) - (orc.armor.defense + orc.armor.defense * (orc.endurance / 100))<br/>player.damage = player.strength<br/>player.damage = player.strength + player.endurance<br/><br/>------------------<br/><br/>the 'set' and 'do' Scripts/Functions are very powerful (you can concatenate):<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/set.html\">http://docs.textadventures.co.uk/quest/scripts/set.html</a><!-- m --><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/scripts/do.html\">http://docs.textadventures.co.uk/quest/scripts/do.html</a><!-- m --><br/><br/>for an example:<br/><br/><pre><code>// game&#46;primary_attribute_list = split (&quot;strength;endurance;dexterity;agility;speed;luck;intelligence;spirituality;mentality;personality&quot;, &quot;;&quot;)<br/>foreach (primary_attribute, game&#46;primary_attribute_list) {<br/>  set (player, primary_attribute + &quot;_integer_attribute&quot;, 100)<br/>  set (monster_1, primary_attribute + &quot;_integer_attribute&quot;, 10)<br/>}<br/><br/>// monster_1&#46;alias = orc<br/>Set (monster_1, &quot;alias&quot;, monster_1&#46;alias + &quot; (hostile)&quot;)<br/><br/>/*<br/>result(s)&#58;<br/><br/>(I like my names describing what something is, I prefer 'player&#46;strength_integer_attribute' over 'player&#46;strength', as this let's me easily organize and keep them unique, for example, I can have this too along with the other attribute&#58; player&#46;strength_string_attribute = &quot;strong/average/weak&quot;, whereas I couldn't do this obviously&#58; player&#46;strength = 100 and player&#46;strength = &quot;strong&quot;, and as I also don't like using upper case, and all the other standard conventions, either as they just confuse me)<br/><br/>player&#46;strength_integer_attribute = 100<br/>player&#46;endurance_integer_attribute = 100<br/>player&#46;dexterity_integer_attribute = 100<br/>player&#46;agility_integer_attribute = 100<br/>player&#46;speed_integer_attribute = 100<br/>player&#46;luck_integer_attribute = 100<br/>player&#46;intelligence_integer_attribute = 100<br/>player&#46;spirituality_integer_attribute = 100<br/>player&#46;mentality_integer_attribute = 100<br/>player&#46;personality_integer_attribute = 100<br/><br/>monster_1&#46;strength_integer_attribute = 10<br/>monster_1&#46;endurance_integer_attribute = 10<br/>monster_1&#46;dexterity_integer_attribute = 10<br/>monster_1&#46;agility_integer_attribute = 10<br/>monster_1&#46;speed_integer_attribute = 10<br/>monster_1&#46;luck_integer_attribute = 10<br/>monster_1&#46;intelligence_integer_attribute = 10<br/>monster_1&#46;spirituality_integer_attribute = 10<br/>monster_1&#46;mentality_integer_attribute = 10<br/>monster_1&#46;personality_integer_attribute = 10<br/><br/>orc (hostile)<br/>*/</code></pre><br/><br/>---------<br/><br/>maybe this is what you want/are asking for, an example:<br/><br/>you set your desired (changing/dynamic) Object's name and Attribute's name to the 'object_name_variable' and 'attribute_name_variable' Variables, and then you can use them in the 'set' Script/Function, possibly/probably needing the 'GetObject' Script/Function:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/getobject.html\">http://docs.textadventures.co.uk/quest/ ... bject.html</a><!-- m --><br/><br/>(I'm not sure if the below will work, as I've not gone that deep into this type of stuff yet)<br/><br/><pre><code>object_name_variable = player // or&#58; &quot;HK&quot;, &quot;Playinful&quot;, &quot;monster_1&quot;, &quot;etc etc etc&quot;<br/>attribute_name_variable = &quot;strength&quot; // or&#58; &quot;endurance&quot;, &quot;dexterity&quot;, &quot;etc etc etc&quot;<br/><br/>set (GetObject(object_name_variable), attribute_name_variable, 50)</code></pre>",
      "PostDate": "2016-06-14T00:01:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43425",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "I see what you mean, I was admittedly being very confusing in that last post. What i mean is, in functions such as GetBoolean, the function is used as follows: GetBoolean(object, string attribute name); for instance, GetBoolean(monster, &quot;dead&quot;). The advantages to having the object and attribute be separate values is that the string attribute name can be derived from multiple parts-- GetBoolean(monster, &quot;de&quot; + &quot;ad&quot;) --or using another variable-- attribute = &quot;dead&quot;; GetBoolean(monster, attribute). I know there are several functions that work like this, but is there a function to return the attribute's value, as is? For instance, function(monster, &quot;righthand&quot;) returning object: club?",
      "EditableFormat": "bbcode",
      "HTML": "I see what you mean, I was admittedly being very confusing in that last post. What i mean is, in functions such as GetBoolean, the function is used as follows: GetBoolean(object, string attribute name); for instance, GetBoolean(monster, &quot;dead&quot;). The advantages to having the object and attribute be separate values is that the string attribute name can be derived from multiple parts-- GetBoolean(monster, &quot;de&quot; + &quot;ad&quot;) --or using another variable-- attribute = &quot;dead&quot;; GetBoolean(monster, attribute). I know there are several functions that work like this, but is there a function to return the attribute's value, as is? For instance, function(monster, &quot;righthand&quot;) returning object: club?",
      "PostDate": "2016-06-14T00:51:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43426",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "The 'GetXXX' Scripts/Functions will return the Value of an Attribute, if that Attribute and its Value exists (which includes it having to be the correct Attribute/Value Type), and if that Attribute doesn't exist, then it returns either 'false' or 'null' (not sure which).\n\nwhereas, the 'HasXXX' Scripts/Functions only return whether the Attribute exists ('true'), else it returns 'false'\n\n---------------\n\nAttribute Types ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> ):\n\nString Attribute:\n\nplayer.alias = &quot;HK&quot;\ngame.state = &quot;0&quot;\nnpc.greeting = &quot;Hi, what is your name?&quot;\nHK.favorite_color = &quot;black&quot;\netc etc etc\n\nBoolean Attribute:\n\norc.dead = false\norc.dead = true // this is often (for more code efficiency/possibly less confusion), shortened to or understood by quest, as this: orc.dead\nplayer.flying = false\nplayer.flying = true\ngame.dragon_killed_mission_completed = false\ngame.dragon_killed_mission_completed = true\nplayer.poisoned = true\nplayer.poisoned = false\netc etc tc\n\nInteger Attribute:\n\nplayer.strength = 100\ngame.state = 0\norc.damage = 10\nkatana.damage = 50\n\nDouble Attribute:\n\nplayer.damage = 37.291018\n// I don't think it uses double quotes, as that should/would turn it into a String Attribute/Value (any Value/thing in double quotes is a String), I'm assuming anyways\n\nObject Attribute:\n\nthe Value does/can NOT have double quotes, as double quotes turns it (the Value) into a String, instead of an Object\n\n***********************************\nbut has two conditions:\n1. the Value can't be: 'true' nor 'false', as these are special/reserved keywords for the Boolean Attribute's Values\n2. the Value has to be (the name of) an actual/existing Object (see below)\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n&lt;object name=&quot;sword&quot;&gt;\n&lt;/object&gt;\nplayer.right_hand = sword\n// NO error\n\nVS\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\nplayer.right_hand = sword\n// ERROR, as there's no existing 'sword' Object\n*************************************\n\nList Attribute:\n\ngame.sex_list = split (&quot;male;female&quot;, &quot;;&quot;)\ngame.condition_list = split (&quot;normal;poisoned;paralyzed;petrified;stunned;asleep;dead;unconscious;silenced&quot;, &quot;;&quot;)\nplayer.condition_list = split (&quot;poisoned;petrified&quot;, &quot;;&quot;)\nHK.favorite_color_list = split (&quot;black;red&quot;, &quot;;&quot;)\n\nand the other (less main) Attribute Types... I'm getting lazy and/or they're outside of my knowledge of them\n\n--------------------------------------------------------\n\nso, how does the 'GetXXX' and 'HasXXX' work?\n\n(I'm not sure if they return 'false' or 'null', not sure which it is, so that's why I use 'false/null' below, but you got to use either 'false' or 'null', and see which one works)\n\nHAS:\n\nit does NOT care at all about the Value of the Attribute; it only checks (true/false) if the Attribute exists.\n\nthe 'HasAttribute()' Script Function has internal coding that determines/parses what the Attribute Type it is, that it is checking for existance, so this is probably less efficient code-wise than using the specific Attribute Type 'HasSpecific_Attribute_Type()' Scripts/Functions, however, this means that the 'HasAttribute()' Script/Function is more powerful/useful, as it can be used when you don't know what Attribute Type you're using, and/or if you're using multiple Types of Attributes. Also, the 'HasAttribute()' works for List and Dictionary Attributes too (I think it's the only method... but I could be wrong).\n\nHasSpecific_Attribute_Type: HasObject(), HasInt(), HasDouble(), HasString(), HasBoolean(), etc?\n\n[code:xb67cm3x]player&#46;strength = 100\nif (HasAttribute (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasAttribute (player, &quot;strength&quot;)) {\n  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)\n} else if (HasAttribute (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasAttribute (player, &quot;strength&quot;)) {\n  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)\n}\n// output&#58; The 'player' Player Object indeed has a 'strength' Attribute\n\n// or, since we specifically have/know that 'player&#46;strength' is an Integer Attribute, we can use the 'GetInt()' Script/Function instead&#58;\n\nplayer&#46;strength = 100\nif (HasInt (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasInt (player, &quot;strength&quot;)) {\n  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)\n} else if (HasInt (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasInt (player, &quot;strength&quot;)) {\n  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)\n}\n// output&#58; The 'player' Player Object indeed has a 'strength' Attribute\n\n// vs&#58;\n\nplayer&#46;endurance = 100\nif (HasAttribute (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasAttribute (player, &quot;strength&quot;)) {\n  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)\n} else if (HasAttribute (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasAttribute (player, &quot;strength&quot;)) {\n  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)\n}\n// output&#58; Sorry, but there is no 'player&#46;strength' Attribute\n\n// or, since we specifically have/know that 'player&#46;strength' is an Integer Attribute, we can use the 'GetInt()' Script/Function instead&#58;\n\nplayer&#46;endurance = 100\nif (HasInt (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasInt (player, &quot;strength&quot;)) {\n  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)\n} else if (HasInt (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasInt (player, &quot;strength&quot;)) {\n  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)\n}\n// output&#58; Sorry, but there is no 'player&#46;strength' Attribute\n\n// hopefully, you can understand how the other 'HasSpecific_Attribute_Type' work too, and now understanding how all the 'HasXXX' works&#46;&#46;&#46;[/code:xb67cm3x]\n\n-----------------\n\nGET:\n\nthis DOES care about the Value of the Attribute. It is the 'HasXXX' as it checks if the Attribute exists, but it ALSO checks if its Value matches up too. So there's two checks/conditions: (1) does the Attribute exist and (2) does its Value match up, if both checks/conditions are true, then it is TRUE, doing that script of yours, if one or both checks/conditions are false, then it is FALSE, doing that script of yours\n\n(I'm just using the 'GetInt()' for this example)\n\n[code:xb67cm3x]player&#46;strength = 100\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah1\n\n// vs&#58;\n\nplayer&#46;strength = 70\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah2\n\n// vs&#58;\n\nplayer&#46;strength = 30\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah3\n\n// vs&#58;\n\nplayer&#46;strength = 10\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah4\n\n// vs&#58;\n\nplayer&#46;endurance = 100\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah5\n\n// vs&#58;\n\nplayer&#46;strength = &quot;100&quot;\nif (GetInt (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah1&quot;)\n} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {\n  msg(&quot;blah2&quot;)\n} else if (GetInt (player, &quot;strength&quot;) = 30) {\n  msg (&quot;blah3&quot;)\n} else if (not Getint (player, &quot;strength&quot;) = 100) {\n  msg (&quot;blah4&quot;)\n} else {\n  msg (&quot;blah5&quot;)\n}\n// output&#58; blah5[/code:xb67cm3x]",
      "EditableFormat": "bbcode",
      "HTML": "The 'GetXXX' Scripts/Functions will return the Value of an Attribute, if that Attribute and its Value exists (which includes it having to be the correct Attribute/Value Type), and if that Attribute doesn't exist, then it returns either 'false' or 'null' (not sure which).<br/><br/>whereas, the 'HasXXX' Scripts/Functions only return whether the Attribute exists ('true'), else it returns 'false'<br/><br/>---------------<br/><br/>Attribute Types ( <!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/types/\">http://docs.textadventures.co.uk/quest/types/</a><!-- m --> ):<br/><br/>String Attribute:<br/><br/>player.alias = &quot;HK&quot;<br/>game.state = &quot;0&quot;<br/>npc.greeting = &quot;Hi, what is your name?&quot;<br/>HK.favorite_color = &quot;black&quot;<br/>etc etc etc<br/><br/>Boolean Attribute:<br/><br/>orc.dead = false<br/>orc.dead = true // this is often (for more code efficiency/possibly less confusion), shortened to or understood by quest, as this: orc.dead<br/>player.flying = false<br/>player.flying = true<br/>game.dragon_killed_mission_completed = false<br/>game.dragon_killed_mission_completed = true<br/>player.poisoned = true<br/>player.poisoned = false<br/>etc etc tc<br/><br/>Integer Attribute:<br/><br/>player.strength = 100<br/>game.state = 0<br/>orc.damage = 10<br/>katana.damage = 50<br/><br/>Double Attribute:<br/><br/>player.damage = 37.291018<br/>// I don't think it uses double quotes, as that should/would turn it into a String Attribute/Value (any Value/thing in double quotes is a String), I'm assuming anyways<br/><br/>Object Attribute:<br/><br/>the Value does/can NOT have double quotes, as double quotes turns it (the Value) into a String, instead of an Object<br/><br/>***********************************<br/>but has two conditions:<br/>1. the Value can't be: 'true' nor 'false', as these are special/reserved keywords for the Boolean Attribute's Values<br/>2. the Value has to be (the name of) an actual/existing Object (see below)<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/>&lt;object name=&quot;sword&quot;&gt;<br/>&lt;/object&gt;<br/>player.right_hand = sword<br/>// NO error<br/><br/>VS<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/>player.right_hand = sword<br/>// ERROR, as there's no existing 'sword' Object<br/>*************************************<br/><br/>List Attribute:<br/><br/>game.sex_list = split (&quot;male;female&quot;, &quot;;&quot;)<br/>game.condition_list = split (&quot;normal;poisoned;paralyzed;petrified;stunned;asleep;dead;unconscious;silenced&quot;, &quot;;&quot;)<br/>player.condition_list = split (&quot;poisoned;petrified&quot;, &quot;;&quot;)<br/>HK.favorite_color_list = split (&quot;black;red&quot;, &quot;;&quot;)<br/><br/>and the other (less main) Attribute Types... I'm getting lazy and/or they're outside of my knowledge of them<br/><br/>--------------------------------------------------------<br/><br/>so, how does the 'GetXXX' and 'HasXXX' work?<br/><br/>(I'm not sure if they return 'false' or 'null', not sure which it is, so that's why I use 'false/null' below, but you got to use either 'false' or 'null', and see which one works)<br/><br/>HAS:<br/><br/>it does NOT care at all about the Value of the Attribute; it only checks (true/false) if the Attribute exists.<br/><br/>the 'HasAttribute()' Script Function has internal coding that determines/parses what the Attribute Type it is, that it is checking for existance, so this is probably less efficient code-wise than using the specific Attribute Type 'HasSpecific_Attribute_Type()' Scripts/Functions, however, this means that the 'HasAttribute()' Script/Function is more powerful/useful, as it can be used when you don't know what Attribute Type you're using, and/or if you're using multiple Types of Attributes. Also, the 'HasAttribute()' works for List and Dictionary Attributes too (I think it's the only method... but I could be wrong).<br/><br/>HasSpecific_Attribute_Type: HasObject(), HasInt(), HasDouble(), HasString(), HasBoolean(), etc?<br/><br/><pre><code>player&#46;strength = 100<br/>if (HasAttribute (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasAttribute (player, &quot;strength&quot;)) {<br/>  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)<br/>} else if (HasAttribute (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasAttribute (player, &quot;strength&quot;)) {<br/>  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)<br/>}<br/>// output&#58; The 'player' Player Object indeed has a 'strength' Attribute<br/><br/>// or, since we specifically have/know that 'player&#46;strength' is an Integer Attribute, we can use the 'GetInt()' Script/Function instead&#58;<br/><br/>player&#46;strength = 100<br/>if (HasInt (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasInt (player, &quot;strength&quot;)) {<br/>  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)<br/>} else if (HasInt (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasInt (player, &quot;strength&quot;)) {<br/>  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)<br/>}<br/>// output&#58; The 'player' Player Object indeed has a 'strength' Attribute<br/><br/>// vs&#58;<br/><br/>player&#46;endurance = 100<br/>if (HasAttribute (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasAttribute (player, &quot;strength&quot;)) {<br/>  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)<br/>} else if (HasAttribute (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasAttribute (player, &quot;strength&quot;)) {<br/>  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)<br/>}<br/>// output&#58; Sorry, but there is no 'player&#46;strength' Attribute<br/><br/>// or, since we specifically have/know that 'player&#46;strength' is an Integer Attribute, we can use the 'GetInt()' Script/Function instead&#58;<br/><br/>player&#46;endurance = 100<br/>if (HasInt (player, &quot;strength&quot;) = true) { // or shortened/efficient form&#58; if (HasInt (player, &quot;strength&quot;)) {<br/>  msg (&quot;The 'player' Player Object indeed has a 'strength' Attribute&quot;)<br/>} else if (HasInt (player, &quot;strength&quot;) = false/null) { // or alternate/shortened/efficient form&#58; if (not HasInt (player, &quot;strength&quot;)) {<br/>  msg (&quot;Sorry, but there is no 'player&#46;strength' Attribute&quot;)<br/>}<br/>// output&#58; Sorry, but there is no 'player&#46;strength' Attribute<br/><br/>// hopefully, you can understand how the other 'HasSpecific_Attribute_Type' work too, and now understanding how all the 'HasXXX' works&#46;&#46;&#46;</code></pre><br/><br/>-----------------<br/><br/>GET:<br/><br/>this DOES care about the Value of the Attribute. It is the 'HasXXX' as it checks if the Attribute exists, but it ALSO checks if its Value matches up too. So there's two checks/conditions: (1) does the Attribute exist and (2) does its Value match up, if both checks/conditions are true, then it is TRUE, doing that script of yours, if one or both checks/conditions are false, then it is FALSE, doing that script of yours<br/><br/>(I'm just using the 'GetInt()' for this example)<br/><br/><pre><code>player&#46;strength = 100<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah1<br/><br/>// vs&#58;<br/><br/>player&#46;strength = 70<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah2<br/><br/>// vs&#58;<br/><br/>player&#46;strength = 30<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah3<br/><br/>// vs&#58;<br/><br/>player&#46;strength = 10<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah4<br/><br/>// vs&#58;<br/><br/>player&#46;endurance = 100<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah5<br/><br/>// vs&#58;<br/><br/>player&#46;strength = &quot;100&quot;<br/>if (GetInt (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah1&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) &gt;= 50) {<br/>  msg(&quot;blah2&quot;)<br/>} else if (GetInt (player, &quot;strength&quot;) = 30) {<br/>  msg (&quot;blah3&quot;)<br/>} else if (not Getint (player, &quot;strength&quot;) = 100) {<br/>  msg (&quot;blah4&quot;)<br/>} else {<br/>  msg (&quot;blah5&quot;)<br/>}<br/>// output&#58; blah5</code></pre>",
      "PostDate": "2016-06-14T04:31:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43427",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;playinful&quot;:yblbddw3] is there a function to return the attribute's value, as is? For instance, function(monster, &quot;righthand&quot;) returning object: club?[/quote:yblbddw3]\n\nyes:\n\n// these just return the Attribute's Value (if it can), so these code lines can NOT exist by themselves:\nGetObject (Object_name, &quot;Object_Attribute_name&quot;)\n~or~\nGetAttribute (Object_name, &quot;Object_attribute_name&quot;)\n\n// these are for checking them, as to whether to do something or not:\nif (GetObject (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }\n~or~\nif (GetAttribute (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }\n~or~\nif (not GetObject (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }\n~or~\nif (not GetAttribute (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }\n\n--------\n\nexamples:\n\n[code:yblbddw3]&lt;object name=&quot;club&quot;&gt;\n&lt;/object&gt;\nmonster&#46;righthand = club\nplayer&#46;righthand = GetObject (monster, &quot;righthand&quot;)\n// you're looting the monster's corpse, (conceptually equipping) the monster's weapon (club) into your right hand\n// you can NOT just have 'GetObject()' as it is returning that Value (an Object), thus, you must be putting/storing that returned Value into something (usually an Attribute), which is why I am putting/storing it into the 'player&#46;righthand' Attribute[/code:yblbddw3]\n\nor:\n\n[code:yblbddw3]&lt;object name=&quot;club&quot;&gt;\n&lt;/object&gt;\nmonster&#46;righthand = club\nif (GetObject (monster, &quot;righthand&quot;) = club) {\n  player&#46;righthand = GetObject (monster, &quot;righthand&quot;) // or, in this case, you could jsut do this&#58; player&#46;righthand = club\n} else if (GetObject (monster, &quot;righthand&quot;) = evil_spell_book\n  destroy (GetObject (monster, &quot;righthand&quot;)) // or, in this case, you could just do this&#58; destroy (evil_spell_book)\n  // as the 'evil_spell_book' is an evil upon the in-game world, so you need to destroy it via in code, in order to save the in-game world! lolololol\n}[/code:yblbddw3]",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>playinful wrote:</cite> is there a function to return the attribute's value, as is? For instance, function(monster, &quot;righthand&quot;) returning object: club?</blockquote><br/><br/>yes:<br/><br/>// these just return the Attribute's Value (if it can), so these code lines can NOT exist by themselves:<br/>GetObject (Object_name, &quot;Object_Attribute_name&quot;)<br/>~or~<br/>GetAttribute (Object_name, &quot;Object_attribute_name&quot;)<br/><br/>// these are for checking them, as to whether to do something or not:<br/>if (GetObject (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }<br/>~or~<br/>if (GetAttribute (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }<br/>~or~<br/>if (not GetObject (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }<br/>~or~<br/>if (not GetAttribute (Object_name, &quot;Object_Attribute_name&quot;) OPERATOR your_specified_value_for_matching) { /* script(s) */ }<br/><br/>--------<br/><br/>examples:<br/><br/><pre><code>&lt;object name=&quot;club&quot;&gt;<br/>&lt;/object&gt;<br/>monster&#46;righthand = club<br/>player&#46;righthand = GetObject (monster, &quot;righthand&quot;)<br/>// you're looting the monster's corpse, (conceptually equipping) the monster's weapon (club) into your right hand<br/>// you can NOT just have 'GetObject()' as it is returning that Value (an Object), thus, you must be putting/storing that returned Value into something (usually an Attribute), which is why I am putting/storing it into the 'player&#46;righthand' Attribute</code></pre><br/><br/>or:<br/><br/><pre><code>&lt;object name=&quot;club&quot;&gt;<br/>&lt;/object&gt;<br/>monster&#46;righthand = club<br/>if (GetObject (monster, &quot;righthand&quot;) = club) {<br/>  player&#46;righthand = GetObject (monster, &quot;righthand&quot;) // or, in this case, you could jsut do this&#58; player&#46;righthand = club<br/>} else if (GetObject (monster, &quot;righthand&quot;) = evil_spell_book<br/>  destroy (GetObject (monster, &quot;righthand&quot;)) // or, in this case, you could just do this&#58; destroy (evil_spell_book)<br/>  // as the 'evil_spell_book' is an evil upon the in-game world, so you need to destroy it via in code, in order to save the in-game world! lolololol<br/>}</code></pre>",
      "PostDate": "2016-06-14T04:43:25+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43428",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "So, if I'm looking for a list, would I use GetList()?",
      "EditableFormat": "bbcode",
      "HTML": "So, if I'm looking for a list, would I use GetList()?",
      "PostDate": "2016-06-14T04:46:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43429",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "there is no 'GetList()' Script/function:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)\n\nand I made a huge mistake in my previous posts:\n\nyou can NOT use 'GetAttribute()' for getting an item from a List Attribute, as which item is it to get? ERROR!\n\nI think you can still use the 'HasAttribute()' for/with a List Attribute, as it's just checking if the Attribute exists or not.\n\ninstead, for checking if something is an item in a List/Dictionary Attribute, there's the:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)\n\nGot()\nContains()\nListContains()\nDictionaryContains()\n\nand for getting an item from the List Attribute, there's:\n\n<!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m -->\n\nListItem ()\nStringListItem ()\nObjectListItem ()\nDictionaryItem ()\nStringDictionaryItem ()\nObjectDictionaryItem ()\nScriptDictionaryItem ()\n\nand there's the other mentioned ways of getting stuff, once you determine what you want to get from the list\n\nyou can use iteration to get/act upon the items in a List too\n\n-------------\n\nList/Dictionary Attributes are a bit more confusing/advanced... they work a bit differently, as you can iterate through their items and etc stuff with them, and do a bunch of really cool and other stuff with them:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5137\">viewtopic.php?f=18&amp;t=5137</a><!-- l --> (HK's List/Dictionary guide)\n\nif you're interested, you can try to make sense out of my attempted guide on them in the link above",
      "EditableFormat": "bbcode",
      "HTML": "there is no 'GetList()' Script/function:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)<br/><br/>and I made a huge mistake in my previous posts:<br/><br/>you can NOT use 'GetAttribute()' for getting an item from a List Attribute, as which item is it to get? ERROR!<br/><br/>I think you can still use the 'HasAttribute()' for/with a List Attribute, as it's just checking if the Attribute exists or not.<br/><br/>instead, for checking if something is an item in a List/Dictionary Attribute, there's the:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --> (alphabetical order)<br/><br/>Got()<br/>Contains()<br/>ListContains()<br/>DictionaryContains()<br/><br/>and for getting an item from the List Attribute, there's:<br/><br/><!-- m --><a class=\"postlink\" href=\"http://docs.textadventures.co.uk/quest/functions/index_allfunctions.html\">http://docs.textadventures.co.uk/quest/ ... tions.html</a><!-- m --><br/><br/>ListItem ()<br/>StringListItem ()<br/>ObjectListItem ()<br/>DictionaryItem ()<br/>StringDictionaryItem ()<br/>ObjectDictionaryItem ()<br/>ScriptDictionaryItem ()<br/><br/>and there's the other mentioned ways of getting stuff, once you determine what you want to get from the list<br/><br/>you can use iteration to get/act upon the items in a List too<br/><br/>-------------<br/><br/>List/Dictionary Attributes are a bit more confusing/advanced... they work a bit differently, as you can iterate through their items and etc stuff with them, and do a bunch of really cool and other stuff with them:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=18&amp;t=5137\">viewtopic.php?f=18&amp;t=5137</a><!-- l --> (HK's List/Dictionary guide)<br/><br/>if you're interested, you can try to make sense out of my attempted guide on them in the link above",
      "PostDate": "2016-06-14T05:03:57+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43430",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "Thank you, GetAttribute() is indeed the function I was looking for. I apologise for being so hard to understand. Thank you for all of your help, HegemonKhan!",
      "EditableFormat": "bbcode",
      "HTML": "Thank you, GetAttribute() is indeed the function I was looking for. I apologise for being so hard to understand. Thank you for all of your help, HegemonKhan!",
      "PostDate": "2016-06-14T05:39:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43431",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "(using a pseudo Diablo 2 game's drop/treasure_chest_class) example for you:\n\nusing an ObjectList Attribute:\n\n[code:23u0bqnh]&lt;object name=&quot;katana&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;claymore&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;swortsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;longsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;broadsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;rapier&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;scimitar&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;cutlass&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;saber&quot;&gt;&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;monster&quot;&gt;&lt;/object&gt;\n\nmonster&#46;sword_drop_treasure_chest_class_objectlist_attribute = NewObjectList ()\nlist add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, katana) // they may need the double quotes (&quot;katana&quot;), I'm not sure\nlist add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, claymore) // they may need the double quotes (&quot;claymore&quot;), I'm not sure\nlist add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, shortsword) // they may need the double quotes (&quot;shortsword&quot;), I'm not sure\n// etc etc etc 'list adds'\nrandom_selected_item_object_variable = ObjectListItem (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, GetRandomInt (0, ListCount (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute) - 1))\nMoveObject (random_selected_item_object_variable, player) // this actually puts the Object inside of the 'player' Player Object\nplayer&#46;right_hand = random_selected_item_object_variable // this just stores the name of the X Object into the 'player&#46;right_hand' Attribute, which can be used to do actions upon/with it (the Object)[/code:23u0bqnh]\n\nusing a Stringlist Attribute:\n\n[code:23u0bqnh]&lt;object name=&quot;katana&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;claymore&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;swortsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;longsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;broadsword&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;rapier&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;scimitar&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;cutlass&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;saber&quot;&gt;&lt;/object&gt;\n\n&lt;object name=&quot;player&quot;&gt;&lt;/object&gt;\n&lt;object name=&quot;monster&quot;&gt;&lt;/object&gt;\n\nmonster&#46;sword_drop_treasure_chest_class_stringlist_attribute = NewStringList ()\nlist add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;katana&quot;)\nlist add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;claymore&quot;)\nlist add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;shortsword&quot;)\n// etc etc etc 'list adds'\nrandom_selected_item_object_variable = GetObject (StringListItem (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, GetRandomInt (0, ListCount (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute) - 1)))\nMoveObject (random_selected_item_object_variable, player) // this actually puts the Object inside of the 'player' Player Object\nplayer&#46;right_hand = random_selected_item_object_variable // this just stores the name of the X Object into the 'player&#46;right_hand' Attribute, which can be used to do actions upon/with it (the Object)[/code:23u0bqnh]",
      "EditableFormat": "bbcode",
      "HTML": "(using a pseudo Diablo 2 game's drop/treasure_chest_class) example for you:<br/><br/>using an ObjectList Attribute:<br/><br/><pre><code>&lt;object name=&quot;katana&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;claymore&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;swortsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;longsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;broadsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;rapier&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;scimitar&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;cutlass&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;saber&quot;&gt;&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;monster&quot;&gt;&lt;/object&gt;<br/><br/>monster&#46;sword_drop_treasure_chest_class_objectlist_attribute = NewObjectList ()<br/>list add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, katana) // they may need the double quotes (&quot;katana&quot;), I'm not sure<br/>list add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, claymore) // they may need the double quotes (&quot;claymore&quot;), I'm not sure<br/>list add (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, shortsword) // they may need the double quotes (&quot;shortsword&quot;), I'm not sure<br/>// etc etc etc 'list adds'<br/>random_selected_item_object_variable = ObjectListItem (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute, GetRandomInt (0, ListCount (monster&#46;sword_drop_treasure_chest_class_objectlist_attribute) - 1))<br/>MoveObject (random_selected_item_object_variable, player) // this actually puts the Object inside of the 'player' Player Object<br/>player&#46;right_hand = random_selected_item_object_variable // this just stores the name of the X Object into the 'player&#46;right_hand' Attribute, which can be used to do actions upon/with it (the Object)</code></pre><br/><br/>using a Stringlist Attribute:<br/><br/><pre><code>&lt;object name=&quot;katana&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;claymore&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;swortsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;longsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;broadsword&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;rapier&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;scimitar&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;cutlass&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;saber&quot;&gt;&lt;/object&gt;<br/><br/>&lt;object name=&quot;player&quot;&gt;&lt;/object&gt;<br/>&lt;object name=&quot;monster&quot;&gt;&lt;/object&gt;<br/><br/>monster&#46;sword_drop_treasure_chest_class_stringlist_attribute = NewStringList ()<br/>list add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;katana&quot;)<br/>list add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;claymore&quot;)<br/>list add (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, &quot;shortsword&quot;)<br/>// etc etc etc 'list adds'<br/>random_selected_item_object_variable = GetObject (StringListItem (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute, GetRandomInt (0, ListCount (monster&#46;sword_drop_treasure_chest_class_stringlist_attribute) - 1)))<br/>MoveObject (random_selected_item_object_variable, player) // this actually puts the Object inside of the 'player' Player Object<br/>player&#46;right_hand = random_selected_item_object_variable // this just stores the name of the X Object into the 'player&#46;right_hand' Attribute, which can be used to do actions upon/with it (the Object)</code></pre>",
      "PostDate": "2016-06-14T05:50:39+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43432",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "[quote=&quot;playinful&quot;:3vufcv1c]Thank you, GetAttribute() is indeed the function I was looking for. I apologise for being so hard to understand. Thank you for all of your help, HegemonKhan![/quote:3vufcv1c]\n\nif you're working with List Attributes, then the 'GetAttribute()' should not work for you. Or, does it? (I've no idea if it works or not, lol. If it does work, then it'd return the entire list itself, as it doesn't allow you to select a specific item from the list)\n\nyou'll need to use:\n\nif (), etc\nGot (), Contains (), ListContains (), foreach (), for (), etc\nListItem (), StringListItem (), ObjectListItem (), GetObject (), NewStringList (), NewObjectList (), list add (), list remove (), etc\netc etc etc List Scripts/Functions",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>playinful wrote:</cite>Thank you, GetAttribute() is indeed the function I was looking for. I apologise for being so hard to understand. Thank you for all of your help, HegemonKhan!</blockquote><br/><br/>if you're working with List Attributes, then the 'GetAttribute()' should not work for you. Or, does it? (I've no idea if it works or not, lol. If it does work, then it'd return the entire list itself, as it doesn't allow you to select a specific item from the list)<br/><br/>you'll need to use:<br/><br/>if (), etc<br/>Got (), Contains (), ListContains (), foreach (), for (), etc<br/>ListItem (), StringListItem (), ObjectListItem (), GetObject (), NewStringList (), NewObjectList (), list add (), list remove (), etc<br/>etc etc etc List Scripts/Functions",
      "PostDate": "2016-06-14T05:55:06+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43435",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "P.S.\n\nnot a problem about the terminology... as the (&quot;proper/standard&quot;) programming terminology (like all terminologies, lol) takes time to learn, as you're likely overwhelmed by it all if you're new to quest and/or especially progrmaming, as you can see, I too had extreme difficulty with it when I started out:\n\n<!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;p=22015#p22015\">viewtopic.php?f=10&amp;t=3348&amp;p=22015#p22015</a><!-- l -->\n\n--------\n\nAlso, I think your terminology was coming from the GUI~Editor's 'add new script -&gt; [xxx] Script's options stuff', which I could never make much sense of, and thus being one of the reasons I moved to learning to code, and away from using the GUI~Editor, lol. So, that's why I was so confused by your post's terminology as well.\n\n---------\n\nI was just having trouble following along and/or making sense of what you were saying in your post.\n\nthe fault is mine (I was having difficulty in understanding you/your post), that is not your fault. If I can't understand the chinese language, that's MY fault, not the chinese-speaking person's fault. If I can't understand a dog's barking/sounds/language, that's MY fault, not the dog's fault, I'm the stupid one, not the dog. If I can't understand body languge, that's MY fault, not theirs. If I can't understand Einstein's papers on Relativity, that's MY fault, not Einstein's, I'm the stupid one, not Einstein. etc etc etc. If I can't understand a post, that's MY fault, not the poster's fault.",
      "EditableFormat": "bbcode",
      "HTML": "P.S.<br/><br/>not a problem about the terminology... as the (&quot;proper/standard&quot;) programming terminology (like all terminologies, lol) takes time to learn, as you're likely overwhelmed by it all if you're new to quest and/or especially progrmaming, as you can see, I too had extreme difficulty with it when I started out:<br/><br/><!-- l --><a class=\"postlink-local\" href=\"http://forum.textadventures.co.uk/viewtopic.php?f=10&amp;t=3348&amp;p=22015#p22015\">viewtopic.php?f=10&amp;t=3348&amp;p=22015#p22015</a><!-- l --><br/><br/>--------<br/><br/>Also, I think your terminology was coming from the GUI~Editor's 'add new script -&gt; [xxx] Script's options stuff', which I could never make much sense of, and thus being one of the reasons I moved to learning to code, and away from using the GUI~Editor, lol. So, that's why I was so confused by your post's terminology as well.<br/><br/>---------<br/><br/>I was just having trouble following along and/or making sense of what you were saying in your post.<br/><br/>the fault is mine (I was having difficulty in understanding you/your post), that is not your fault. If I can't understand the chinese language, that's MY fault, not the chinese-speaking person's fault. If I can't understand a dog's barking/sounds/language, that's MY fault, not the dog's fault, I'm the stupid one, not the dog. If I can't understand body languge, that's MY fault, not theirs. If I can't understand Einstein's papers on Relativity, that's MY fault, not Einstein's, I'm the stupid one, not Einstein. etc etc etc. If I can't understand a post, that's MY fault, not the poster's fault.",
      "PostDate": "2016-06-14T06:31:10+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43436",
      "UserId": 0,
      "Username": "playinful",
      "UserAvatar": null,
      "UserGravatar": "f97b72e0f59dc7319d7021a2e7639297",
      "EditableText": "I needed to use ListCount(), and GetAttribute() does return the entire list, so GetAttribute() is the one I was looking for.",
      "EditableFormat": "bbcode",
      "HTML": "I needed to use ListCount(), and GetAttribute() does return the entire list, so GetAttribute() is the one I was looking for.",
      "PostDate": "2016-06-14T06:33:56+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43437",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah... that's really cool to know!\n\nthe &quot;normal&quot; way of finding the quantity of items in a list (using quest's code/programming):\n\n[code:2jgbeozo]&lt;function name=&quot;my_ListCount_function&quot; type=&quot;int&quot;&gt;\n  sum = 0\n  foreach (item_variable, my_object&#46;my_list) {\n    sum = sum + 1\n  }\n  return (sum)\n&lt;/function&gt;[/code:2jgbeozo]\n\nor\n\nusing 'for ()' Script/Function --- but I'm not familiar with how quest has it set up... I'm not sure how quest's 'for ()' Script/Function works/syntax, as it seems to be a bit different than the 'for()' in C++/Java Languages for example... as there's usually not (at least so far for me, lol) a need for using it in quest.",
      "EditableFormat": "bbcode",
      "HTML": "ah... that's really cool to know!<br/><br/>the &quot;normal&quot; way of finding the quantity of items in a list (using quest's code/programming):<br/><br/><pre><code>&lt;function name=&quot;my_ListCount_function&quot; type=&quot;int&quot;&gt;<br/>  sum = 0<br/>  foreach (item_variable, my_object&#46;my_list) {<br/>    sum = sum + 1<br/>  }<br/>  return (sum)<br/>&lt;/function&gt;</code></pre><br/><br/>or<br/><br/>using 'for ()' Script/Function --- but I'm not familiar with how quest has it set up... I'm not sure how quest's 'for ()' Script/Function works/syntax, as it seems to be a bit different than the 'for()' in C++/Java Languages for example... as there's usually not (at least so far for me, lol) a need for using it in quest.",
      "PostDate": "2016-06-14T06:42:31+01:00",
      "LastEditDate": null
    }
  ]
}
