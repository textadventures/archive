{
  "Topic": {
    "TopicId": "qrsu191esemqphxlahco4g",
    "ForumId": "15",
    "Title": "Quest 6:  A request concerning disambiguation  (not really a big deal)",
    "LastUpdated": "2020-12-11T17:37:18.3413601Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3035de0f-5c05-447e-9572-373938ea5eaa",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Let's say I enter **X TV**, and the parser finds two reachable objects which could be referred to as \"TV\".\r\n\r\nI will get something like this:\r\n\r\n> Which do you mean?\r\n> &nbsp;&nbsp;the new TV\r\n> &nbsp;&nbsp;the old TV\r\n\r\n---\r\nI'd prefer this:\r\n\r\n> Which do you mean?\r\n> &nbsp;&nbsp;1\\. the new TV\r\n> &nbsp;&nbsp;2\\. the old TV\r\n\r\nFrom there, I could type either \"new TV\" or \"old TV\", or \"new\" or \"old\", or enter 1 or 2.\r\n\r\nThat is my dream.",
      "EditableFormat": "markdown",
      "HTML": "<p>Let's say I enter <strong>X TV</strong>, and the parser finds two reachable objects which could be referred to as \"TV\".</p>\n<p>I will get something like this:</p>\n<blockquote>\n<p>Which do you mean?<br>\n&nbsp;&nbsp;the new TV<br>\n&nbsp;&nbsp;the old TV</p>\n</blockquote>\n<hr>\n<p>I'd prefer this:</p>\n<blockquote>\n<p>Which do you mean?<br>\n&nbsp;&nbsp;1. the new TV<br>\n&nbsp;&nbsp;2. the old TV</p>\n</blockquote>\n<p>From there, I could type either \"new TV\" or \"old TV\", or \"new\" or \"old\", or enter 1 or 2.</p>\n<p>That is my dream.</p>\n\n",
      "PostDate": "2020-12-11T17:37:18.3413601Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "04c45e5a-47a4-4c12-b32f-7fd707bd448e",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Getting close . . .\r\n\r\n```js\r\nfunction showMenu(title, options, fn) {\r\n  const opts = {article:DEFINITE, capital:true}\r\n  parser.overrideWith(fn) // KV added this line so the player can type the answer if that's preferable.\r\n  io.input(title, options, fn, function(options) {\r\n    for (let i = 0; i < options.length; i++) {\r\n      let s = parseInt(i+1) + '.<a class=\"menu-option\" onclick=\"io.menuResponse(' + i + ');$(\\'.menu-option\\').hide();\">' //KV added to onclick to hide the menu\r\n      s += (typeof options[i] === 'string' ? options[i] : lang.getName(options[i], opts))\r\n      s += '</a>';\r\n      msg(s);\r\n    }\r\n  })\r\n}\r\n```\r\n\r\n---\r\nNow:\r\n\r\n- The player can click or manually enter a response (thanks to parser.overrideWith).\r\n- The menu will disappear after clicking, but I have to figure out how to make it disappear when the response is entered via parser.\r\n- Hopefully, I'll figure out how to let the player manually enter the number of the choice as an extra option.",
      "EditableFormat": "markdown",
      "HTML": "<p>Getting close . . .</p>\n<pre><code>function showMenu(title, options, fn) {\n  const opts = {article:DEFINITE, capital:true}\n  parser.overrideWith(fn) // KV added this line so the player can type the answer if that's preferable.\n  io.input(title, options, fn, function(options) {\n    for (let i = 0; i &lt; options.length; i++) {\n      let s = parseInt(i+1) + '.&lt;a class=\"menu-option\" onclick=\"io.menuResponse(' + i + ');$(\\'.menu-option\\').hide();\"&gt;' //KV added to onclick to hide the menu\n      s += (typeof options[i] === 'string' ? options[i] : lang.getName(options[i], opts))\n      s += '&lt;/a&gt;';\n      msg(s);\n    }\n  })\n}\n</code></pre>\n<hr>\n<p>Now:</p>\n<ul>\n<li>The player can click or manually enter a response (thanks to parser.overrideWith).</li>\n<li>The menu will disappear after clicking, but I have to figure out how to make it disappear when the response is entered via parser.</li>\n<li>Hopefully, I'll figure out how to let the player manually enter the number of the choice as an extra option.</li>\n</ul>\n\n",
      "PostDate": "2020-12-12T13:23:59.9767042Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "563fff84-8ec9-446c-8cbd-02ca288c8f28",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This code does not work with the disambiguation menu.\r\n\r\n(I just learned this fact.)",
      "EditableFormat": "markdown",
      "HTML": "<p>This code does not work with the disambiguation menu.</p>\n<p>(I just learned this fact.)</p>\n\n",
      "PostDate": "2020-12-14T20:39:24.2171806Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "59a37589-5974-49de-a578-c2432eb7853c",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I've given up trying to make the parser work with showMenu,.\r\n\r\nNow, I just really want to learn how to make the input element disappear during the process and reappear afterwards.  I can make it happen with a setTimeout, but it's sloppy.",
      "EditableFormat": "markdown",
      "HTML": "<p>I've given up trying to make the parser work with showMenu,.</p>\n<p>Now, I just really want to learn how to make the input element disappear during the process and reappear afterwards.  I can make it happen with a setTimeout, but it's sloppy.</p>\n\n",
      "PostDate": "2020-12-15T03:04:38.1352476Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0a0ac5e3-e90d-4896-bd2c-04425a39791c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I have had a look, and this is not trivial. I have got it to work, but hit other related issues with output, so still in progress.\r\n\r\n_ETA:_ I have uploaded to Github. It does what you want, plus you can also type in \"old\" to pick the old TV.\r\n\r\nIt has screwed up the text effects, so that is still a work in progress.",
      "EditableFormat": "markdown",
      "HTML": "<p>I have had a look, and this is not trivial. I have got it to work, but hit other related issues with output, so still in progress.</p>\n<p><em>ETA:</em> I have uploaded to Github. It does what you want, plus you can also type in \"old\" to pick the old TV.</p>\n<p>It has screwed up the text effects, so that is still a work in progress.</p>\n\n",
      "PostDate": "2020-12-15T13:33:38.1957515Z",
      "LastEditDate": "2020-12-15T14:17:23.5255242Z",
      "link": null
    },
    {
      "PostId": "a103b011-9388-457e-945b-c4ee57575b8f",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> I have had a look, and this is not trivial. I have got it to work, but hit other related issues with output, so still in progress.\r\n\r\nYay!\r\n\r\n---\r\nNote that I thought I was smart adding the code to \"onclick\" that hides the menu after a selection, but I recently found out that is not good when nesting showMenus.  With onclick hiding the menu element, the second showMenu has no menu.  (Probably something simple I messed up.)\r\n\r\nAlso, maybe disabling showMenu links when the ui finishes the turn would keep the player from clicking a showMenu after it has been ignored?",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>I have had a look, and this is not trivial. I have got it to work, but hit other related issues with output, so still in progress.</p>\n</blockquote>\n<p>Yay!</p>\n<hr>\n<p>Note that I thought I was smart adding the code to \"onclick\" that hides the menu after a selection, but I recently found out that is not good when nesting showMenus.  With onclick hiding the menu element, the second showMenu has no menu.  (Probably something simple I messed up.)</p>\n<p>Also, maybe disabling showMenu links when the ui finishes the turn would keep the player from clicking a showMenu after it has been ignored?</p>\n\n",
      "PostDate": "2020-12-15T13:44:38.5958706Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6f877780-1aec-4688-80bd-4a6a53926c02",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Printing text to the screen is surprisingly complex. This has prompted me to start documenting it better.\r\nhttps://github.com/ThePix/QuestJS/wiki/The-Output-Queue",
      "EditableFormat": "markdown",
      "HTML": "<p>Printing text to the screen is surprisingly complex. This has prompted me to start documenting it better.<br>\nhttps://github.com/ThePix/QuestJS/wiki/The-Output-Queue</p>\n\n",
      "PostDate": "2020-12-15T14:19:31.9771604Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "82654f0d-52dd-40fe-8fa7-97224fcb67eb",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Note that I thought I was smart adding the code to \"onclick\" that hides the menu after a selection, but I recently found out that is not good when nesting showMenus. With onclick hiding the menu element, the second showMenu has no menu. (Probably something simple I messed up.)\r\n\r\nOrder of execution, I think.\r\n\r\nYou're running `menuResponse`, which I would assume handles the response (such as displaying a submenu), and then hides all menu options on the screen.\r\n\r\nYou might need to swap the order of those instructions  in the 'onclick' attribute, so the options are hidden before displaying the second menu.\r\n\r\nOr even better, put the hide instruction inside the `menuResponse` method (assuming it's equivalent to Quest5.8's `ShowMenuResponse`), so that if you can get the parser working the options will still disappear.\r\n\r\n(If I were doing it using the method you showed, I'd likely change it to: `onclick=\"$(\\'.menu-option\\').not($(this).removeProp(\\'onclick\\')).hide();io.menuResponse(' + i + ');\"` - maybe not for disambiguation menus, but I often find games confusing when a menu disappears. I prefer the version that disables the option they clicked on (so they can't click it again), and removes all the others)",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Note that I thought I was smart adding the code to \"onclick\" that hides the menu after a selection, but I recently found out that is not good when nesting showMenus. With onclick hiding the menu element, the second showMenu has no menu. (Probably something simple I messed up.)</p>\n</blockquote>\n<p>Order of execution, I think.</p>\n<p>You're running <code>menuResponse</code>, which I would assume handles the response (such as displaying a submenu), and then hides all menu options on the screen.</p>\n<p>You might need to swap the order of those instructions  in the 'onclick' attribute, so the options are hidden before displaying the second menu.</p>\n<p>Or even better, put the hide instruction inside the <code>menuResponse</code> method (assuming it's equivalent to Quest5.8's <code>ShowMenuResponse</code>), so that if you can get the parser working the options will still disappear.</p>\n<p>(If I were doing it using the method you showed, I'd likely change it to: <code>onclick=\"$(\\'.menu-option\\').not($(this).removeProp(\\'onclick\\')).hide();io.menuResponse(' + i + ');\"</code> - maybe not for disambiguation menus, but I often find games confusing when a menu disappears. I prefer the version that disables the option they clicked on (so they can't click it again), and removes all the others)</p>\n\n",
      "PostDate": "2020-12-15T14:48:27.4818254Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d1dea464-a674-4746-bffe-81996d90f765",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> Printing text to the screen is surprisingly complex. This has prompted me to start documenting it better.\r\n\r\nRock on!\r\n\r\nI was just gave up trying to get ```msg```, ```_msg```, or ```printRaw``` to do what I wanted (which was, admittedly, something weird) about three minutes ago, to no avail.\r\n\r\n---\r\n> I often find games confusing when a menu disappears. I prefer the version that disables the option they clicked on (so they can't click it again), and removes all the others)\r\n\r\nThis is a good point.  Now that you mention it, I do prefer this behavior.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>Printing text to the screen is surprisingly complex. This has prompted me to start documenting it better.</p>\n</blockquote>\n<p>Rock on!</p>\n<p>I was just gave up trying to get <code>msg</code>, <code>_msg</code>, or <code>printRaw</code> to do what I wanted (which was, admittedly, something weird) about three minutes ago, to no avail.</p>\n<hr>\n<blockquote>\n<p>I often find games confusing when a menu disappears. I prefer the version that disables the option they clicked on (so they can't click it again), and removes all the others)</p>\n</blockquote>\n<p>This is a good point.  Now that you mention it, I do prefer this behavior.</p>\n\n",
      "PostDate": "2020-12-15T14:55:50.9717612Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "66852e14-5c89-474c-85d4-e381747dd292",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This disables existing showMenu links:\r\n\r\n```js\r\n$(\".menu-option\").attr('onclick','').attr('style','color:inherit')\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>This disables existing showMenu links:</p>\n<pre><code>$(\".menu-option\").attr('onclick','').attr('style','color:inherit')\n</code></pre>\n\n",
      "PostDate": "2020-12-15T19:30:45.7517581Z",
      "LastEditDate": "2020-12-15T19:31:05.8047662Z",
      "link": null
    },
    {
      "PostId": "26a87eef-3fd0-45bb-98fa-db8f5278770b",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Think I got this right:\r\n`.attr('onclick','')` or `.removeAttr('onclick')` has no effect in Internet Explorer 6, 7, or 8.\r\n\r\n`.prop('onclick', null)` or `.removeProp('onclick')` is the usual way to do this (\"attr\" is only guaranteed to affect the text attribute stored in the HTML tree; \"prop\" affects the JS in the DOM even if it's already been compiled)\r\n\r\n`.prop('onclick', null).off('click')` is the recommended method which is supposed to work with any browser and version; but I've never seen anyone use it in the real world because it's overkill.\r\n\r\nThough I doubt anyone's using IE 8 anymore, so using whichever you're used to is probably just as good.",
      "EditableFormat": "markdown",
      "HTML": "<p>Think I got this right:<br>\n<code>.attr('onclick','')</code> or <code>.removeAttr('onclick')</code> has no effect in Internet Explorer 6, 7, or 8.</p>\n<p><code>.prop('onclick', null)</code> or <code>.removeProp('onclick')</code> is the usual way to do this (\"attr\" is only guaranteed to affect the text attribute stored in the HTML tree; \"prop\" affects the JS in the DOM even if it's already been compiled)</p>\n<p><code>.prop('onclick', null).off('click')</code> is the recommended method which is supposed to work with any browser and version; but I've never seen anyone use it in the real world because it's overkill.</p>\n<p>Though I doubt anyone's using IE 8 anymore, so using whichever you're used to is probably just as good.</p>\n\n",
      "PostDate": "2020-12-15T21:51:48.269283Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2482268b-4207-46b7-92a4-06e392b9b519",
      "UserId": 301690,
      "Username": "Richard Headkid",
      "AvatarUrl": "http://i.imgur.com/WUGXS8yb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh, that cross-browser compatibility . . .\r\n\r\nIt's very discouraging at times.",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh, that cross-browser compatibility . . .</p>\n<p>It's very discouraging at times.</p>\n\n",
      "PostDate": "2020-12-16T01:24:20.8209613Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
