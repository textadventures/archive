{
  "Topic": {
    "TopicId": "5094",
    "ForumId": "10",
    "Title": "Return to previous room",
    "LastUpdated": "2015-03-09T19:30:55+00:00",
    "ReplyCount": 5
  },
  "Posts": [
    {
      "PostId": "35198",
      "UserId": 0,
      "Username": "Stinky",
      "UserAvatar": null,
      "UserGravatar": "cbc08375d3512a1d036c744147338c35",
      "EditableText": "Hi all, was searching for a workaround to this without much luck.  Say if you had a room named &quot;Constant&quot;.  Is it possible to have exits into Constant from multiple rooms but some how flag the one you entered Constant from so that when you exit constant you return to the correct location?  \n\nRoom 1 &gt;&gt; Constant, Constant Exits to Room1\n\nRoom 2 &gt;&gt; Constant, Constant Exits to Room2 \n\nRoom 3 &gt;&gt; Constant, Constant Exits to Room3\n\nAnd so on....  \n\nNew to quest, trying to apply my excel knowledge here with pitiful results lol.",
      "EditableFormat": "bbcode",
      "HTML": "Hi all, was searching for a workaround to this without much luck.  Say if you had a room named &quot;Constant&quot;.  Is it possible to have exits into Constant from multiple rooms but some how flag the one you entered Constant from so that when you exit constant you return to the correct location?  <br/><br/>Room 1 &gt;&gt; Constant, Constant Exits to Room1<br/><br/>Room 2 &gt;&gt; Constant, Constant Exits to Room2 <br/><br/>Room 3 &gt;&gt; Constant, Constant Exits to Room3<br/><br/>And so on....  <br/><br/>New to quest, trying to apply my excel knowledge here with pitiful results lol.",
      "PostDate": "2015-03-09T02:24:34+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35201",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I can think of two ways to do this.\n\n1) Customize the &quot;go&quot; command to store the old room value somewhere (e.g. &quot;player.lastroom&quot;). I did this in a game I was working, as I wanted to know which exit I traversed last so I could have different descriptions based on which way the player had come into the room. This will apply to all movement in the game.\n\n2) For each exit that leads into &quot;constant&quot;, check the box that say &quot;Run a script (instead of moving the player automatically)&quot; and then in your script save the current player parent before setting the new one. This will apply only to the exits you modify.\n\nIf either of these sounds acceptable, I can provide code later.",
      "EditableFormat": "bbcode",
      "HTML": "I can think of two ways to do this.<br/><br/>1) Customize the &quot;go&quot; command to store the old room value somewhere (e.g. &quot;player.lastroom&quot;). I did this in a game I was working, as I wanted to know which exit I traversed last so I could have different descriptions based on which way the player had come into the room. This will apply to all movement in the game.<br/><br/>2) For each exit that leads into &quot;constant&quot;, check the box that say &quot;Run a script (instead of moving the player automatically)&quot; and then in your script save the current player parent before setting the new one. This will apply only to the exits you modify.<br/><br/>If either of these sounds acceptable, I can provide code later.",
      "PostDate": "2015-03-09T07:52:44+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35221",
      "UserId": 0,
      "Username": "Stinky",
      "UserAvatar": null,
      "UserGravatar": "cbc08375d3512a1d036c744147338c35",
      "EditableText": "Thanks Jaynabonne, I think the second would work better for me here as there will probably be some moving around within constant that would alter my player.lastroom.  \n\nWhen I was searching for a solution I ran across this:\n\n[url:11a1sef5]http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3063&amp;p=20749&amp;hilit=return+to+previous+room#p20749[/url:11a1sef5]\n\nAnd was curious if I should turn the mapping function off if I do this to avoid problems.\n\nOr alternatively say if I wanted to be able to access constant from everywhere (which I'm not dead set on if not possible) could I add a script to save the .parent location of previous room in the &quot;before entering room&quot; section in the scripts tab on the constant room?\n\nEntering constant from the main map will always be from the in exit and exiting constant to the main map will always be from the out exit so I was thinking I may be able to throw an if statement into the script that only recorded the .parent name if entering constant through an &quot;in&quot; exit since there would be moving around within &quot;constant&quot; that would overwrite the saved location upon entering constant from N,S,E,W etc..",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Jaynabonne, I think the second would work better for me here as there will probably be some moving around within constant that would alter my player.lastroom.  <br/><br/>When I was searching for a solution I ran across this:<br/><br/><a href=\"http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3063&amp;p=20749&amp;hilit=return+to+previous+room#p20749\" rel=\"nofollow\">http&#58;//forum&#46;textadventures&#46;co&#46;uk/viewtopic&#46;php?f=10&amp;t=3063&amp;p=20749&amp;hilit=return+to+previous+room#p20749</a><br/><br/>And was curious if I should turn the mapping function off if I do this to avoid problems.<br/><br/>Or alternatively say if I wanted to be able to access constant from everywhere (which I'm not dead set on if not possible) could I add a script to save the .parent location of previous room in the &quot;before entering room&quot; section in the scripts tab on the constant room?<br/><br/>Entering constant from the main map will always be from the in exit and exiting constant to the main map will always be from the out exit so I was thinking I may be able to throw an if statement into the script that only recorded the .parent name if entering constant through an &quot;in&quot; exit since there would be moving around within &quot;constant&quot; that would overwrite the saved location upon entering constant from N,S,E,W etc..",
      "PostDate": "2015-03-09T11:54:54+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35222",
      "UserId": 0,
      "Username": "Silver",
      "UserAvatar": null,
      "UserGravatar": "13024be5ccbb463906b024d5bd3cb5e8",
      "EditableText": "The only way I can think of doing this is to create rooms between the exit rooms and constant which sets the flag which an if script looks for when you return to the exit room. Which is probably using a sledgehammer to crack a nut and wouldn't work at all with the map switched on. Or not without showing your magician's hand.",
      "EditableFormat": "bbcode",
      "HTML": "The only way I can think of doing this is to create rooms between the exit rooms and constant which sets the flag which an if script looks for when you return to the exit room. Which is probably using a sledgehammer to crack a nut and wouldn't work at all with the map switched on. Or not without showing your magician's hand.",
      "PostDate": "2015-03-09T13:01:08+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35224",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Using Exits is completely optional, you can move (any Object) to anywhere (any Object) that you want to, due to the structure of the quest engine using:\n\nParent~Child (Containment) Object Heirarchy (Object Oriented Programming):\n\nObjects:\n\n(outermost ~ more parent)\nHK\n-&gt; pants with pockets\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; $1\n(innermost ~ more child)\n\n'HK' is the main (Root) 'parent' of 'pants with pockets', 'wallet', and '$1'\n'HK' is the direct parent of 'pants with pockets'\n'HK' is the indirect parent of 'wallet' and '$1'\n'pants with pockets' is the direct child of 'HK'\n'pants with pockets' is the direct parent of 'wallet'\n'pants with pockets' is the indirect parent of '$1'\n'wallet' is the indirect child of 'HK'\n'wallet' is the direct child of 'pants with pockets'\n'wallet' is the direct parent of '$1'\n'$1' is the indrect child of 'HK' and 'pants with pockets'\n'$1' is the direct child of 'wallet'\n\n------\n\nother examples of such heirarchies:\n\nC:\n-&gt; programs\n-&gt;-&gt; quest\n\nuniverse\n-&gt; 'whatever' galaxy cluster\n-&gt;-&gt; Milkyway Galaxy\n-&gt;-&gt;-&gt; 'our sun' (a star in one of the tendrils of the Milky Galaxy: a star in the outer part of the Milkyway Galaxy)\n-&gt;-&gt;-&gt;-&gt; Earth planet (3rd from the sun)\n-&gt;-&gt;-&gt;-&gt;-&gt; NA (North America continent)\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; U.S. (United States country)\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; CA (California state)\n-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; HK (hehe)\n\n------\n\nso, instead of using Exits, all we got to do is to set the 'parent' Object Attribute of our (moving) Object to our (destination) Object, for examples:\n\nObject_name.Attribute_name = Value_or_Expression\n\nAttribute Types: Strings, Booleans, Objects, Integers (int), Doubles (Floats ~ Floating Points ~ decimal numbers), Scripts, String Lists, Object Lists, String Dictionaries, Object Dictionaries, Script Dictionaries, and etc\n\nAttribute Type: Object ~ Object (Type) Attribute\n(this means that your Value, does NOT have quotes on it, as the quotes would change the value~text from being an Object to being a String)\n\n(moving Object).parent = (destination Object)\n\nmoving Object: player\n\nplayer.parent = (destination Object)\n\n------\n\nas a creation tag:\n\n[code:2pcmo0lc]&lt;object name=&quot;xxx&quot;&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;(Value&#58;destination Object_name)&lt;/attr&gt;\n&lt;/object&gt;\n\n// for Example&#58;\n\n&lt;object name=&quot;player&quot;&gt;\n&lt;/object&gt;\n\n&lt;object name=&quot;wooden_sword&quot;&gt;\n  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;player&lt;/attr&gt;\n&lt;/object&gt;\n\n// the above example is the same as this&#58;\n\n&lt;object name=&quot;player&quot;&gt;\n  &lt;object name=&quot;wooden_sword&quot;&gt;\n  &lt;/object&gt;\n&lt;/object&gt;[/code:2pcmo0lc]\n\n-----\n\nplayer.parent = HK\n\nwould move the 'player' to this spot (only the indecting~nesting level matters):\n\n(outermost ~ more parent)\nHK\n-&gt; player\n-&gt; pants with pockets\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; $1\n-&gt; // or player can be here, it's the same spot, as its indented~nested at the same level ... hopefully you understand this... as I don't want to show examples of for every spot it can be placed in the following additional examples below, lol\n(innermost ~ more child)\n\n-------\n\nplayer.parent = pants with pockets\n\n(outermost ~ more parent)\nHK\n-&gt; pants with pockets\n-&gt;-&gt; player\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; $1\n(innermost ~ more child)\n\n-----\n\nplayer.parent = wallet\n\n(outermost ~ more parent)\nHK\n-&gt; pants with pockets\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; player\n-&gt;-&gt;-&gt; $1\n(innermost ~ more child)\n\n------\n\nplayer.parent = $1\n\n(outermost ~ more parent)\nHK\n-&gt; pants with pockets\n-&gt;-&gt; wallet\n-&gt;-&gt;-&gt; $1\n-&gt;-&gt;-&gt;-&gt; player\n(innermost ~ more child)\n\n--------\n\nso, you jsut need to save your current room~object location first, example:\n\n'parent_old' would be a custom Object Attribute that we created~added to the 'player' Object (either via the GUI~Editor's 'player' Object's Attribute Tab, or merely as scripting, as seen below)\n\nplayer.parent_old = room1\n\nthen we move to the new room:\n\nplayer.parent = room2\n\nand if we wanted to go back to the old room, we'd just 'load' that 'parent_old' Object Attribute, via:\n\nplayer.parent = player.parent_old\n(conceptually: player.parent = player.parent_old = room1)\n\n-------\n\nif you want to see movement without Exits, here's an example, my (HK's) 'explore' and 'travel' code:\n\n(it's unrefined, but it's functional, but not sure if it'll work with the current quest version, as it's old code)\n\n(it's probably a bit advanced for you, if you're new to coding, and to quest's coding, as it uses lists, but maybe you can at least follow along ~ understand it in concept at least, and if not, just ask me, and I can, will gladly, help explain it)\n\n[code:2pcmo0lc]&lt;asl version=&quot;540&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Testing Game Stuff&quot;&gt;\n    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;\n    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;\n    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;\n   &lt;start type=&quot;script&quot;&gt;\n     msg (&quot;Important Note&#58;&quot;)\n     msg (&quot;Type in&#58; help&quot;)\n   &lt;/start&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;homeland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;grassland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;plains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;desert&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;tundra&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;swampland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;mountains&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;forest&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;wasteland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;coastland&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;hills&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;help_command&quot;&gt;\n    &lt;pattern&gt;help&lt;/pattern&gt;\n   &lt;script&gt;\n     help_function\n   &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;explore_command&quot;&gt;\n    &lt;pattern&gt;explore&lt;/pattern&gt;\n    &lt;script&gt;\n      explore_function\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;command name=&quot;travel_command&quot;&gt;\n    &lt;pattern&gt;travel&lt;/pattern&gt;\n   &lt;script&gt;\n     travel_function\n   &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;object name=&quot;data_object&quot;&gt;\n    &lt;inherit name=&quot;editor_object&quot; /&gt;\n   &lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;\n    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;\n    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;\n     &lt;item key=&quot;grassland_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;grassland&quot;)\n      msg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;plains_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;plains&quot;)\n      msg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;desert_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;desert&quot;)\n      msg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;tundra_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;tundra&quot;)\n      msg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;swampland_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;swampland&quot;)\n      msg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;forest_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;forest&quot;)\n      msg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;mountains_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;mountains&quot;)\n      msg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;hills_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;hills&quot;)\n      msg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;wasteland_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)\n      msg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)\n     &lt;/item&gt;\n     &lt;item key=&quot;coastland_discovery&quot;&gt;\n       list add (data_object&#46;travel_string_list, &quot;coastland&quot;)\n      msg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)\n     &lt;/item&gt;\n   &lt;/homeland_events_script_dictionary&gt;\n  &lt;/object&gt;\n  &lt;turnscript name=&quot;global_turnscript&quot;&gt;\n    &lt;enabled /&gt;\n    &lt;script&gt;\n      game&#46;turns = game&#46;turns + 1\n    &lt;/script&gt;\n  &lt;/turnscript&gt;\n  &lt;function name=&quot;help_function&quot;&gt;\n    msg (&quot;Type 'explore' to explore your area&#46;&quot;)\n   msg (&quot;Type 'travel' to travel to different areas&#46;&quot;)\n  &lt;/function&gt;\n  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;\n    switch (game&#46;pov&#46;parent) {\n     case (homeland) {\n      result_1 = ListCount (data_object&#46;homeland_events_string_list) - 1\n      if (result_1 &gt;= 0) {\n          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))\n          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))\n        on ready {\n          foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {\n            if (result_2 = item_x) {\n             list remove (data_object&#46;homeland_events_string_list, result_2)\n           }\n         }\n        }\n      } else {\n        msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)\n      }\n     }\n    }\n  &#93;&#93;&gt;&lt;/function&gt;\n  &lt;function name=&quot;travel_function&quot;&gt;\n    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {\n     if (not game&#46;pov&#46;parent = GetObject (result)) {\n       game&#46;pov&#46;parent = GetObject (result)\n     } else {\n       msg (&quot;You are already at this area&#46;&quot;)\n      ask (&quot;Try again?&quot;) {\n        if (result=true) {\n          travel_function\n        } else {\n          msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)\n        }\n      }\n     }\n   }\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:2pcmo0lc]",
      "EditableFormat": "bbcode",
      "HTML": "Using Exits is completely optional, you can move (any Object) to anywhere (any Object) that you want to, due to the structure of the quest engine using:<br/><br/>Parent~Child (Containment) Object Heirarchy (Object Oriented Programming):<br/><br/>Objects:<br/><br/>(outermost ~ more parent)<br/>HK<br/>-&gt; pants with pockets<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; $1<br/>(innermost ~ more child)<br/><br/>'HK' is the main (Root) 'parent' of 'pants with pockets', 'wallet', and '$1'<br/>'HK' is the direct parent of 'pants with pockets'<br/>'HK' is the indirect parent of 'wallet' and '$1'<br/>'pants with pockets' is the direct child of 'HK'<br/>'pants with pockets' is the direct parent of 'wallet'<br/>'pants with pockets' is the indirect parent of '$1'<br/>'wallet' is the indirect child of 'HK'<br/>'wallet' is the direct child of 'pants with pockets'<br/>'wallet' is the direct parent of '$1'<br/>'$1' is the indrect child of 'HK' and 'pants with pockets'<br/>'$1' is the direct child of 'wallet'<br/><br/>------<br/><br/>other examples of such heirarchies:<br/><br/>C:<br/>-&gt; programs<br/>-&gt;-&gt; quest<br/><br/>universe<br/>-&gt; 'whatever' galaxy cluster<br/>-&gt;-&gt; Milkyway Galaxy<br/>-&gt;-&gt;-&gt; 'our sun' (a star in one of the tendrils of the Milky Galaxy: a star in the outer part of the Milkyway Galaxy)<br/>-&gt;-&gt;-&gt;-&gt; Earth planet (3rd from the sun)<br/>-&gt;-&gt;-&gt;-&gt;-&gt; NA (North America continent)<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; U.S. (United States country)<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; CA (California state)<br/>-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt;-&gt; HK (hehe)<br/><br/>------<br/><br/>so, instead of using Exits, all we got to do is to set the 'parent' Object Attribute of our (moving) Object to our (destination) Object, for examples:<br/><br/>Object_name.Attribute_name = Value_or_Expression<br/><br/>Attribute Types: Strings, Booleans, Objects, Integers (int), Doubles (Floats ~ Floating Points ~ decimal numbers), Scripts, String Lists, Object Lists, String Dictionaries, Object Dictionaries, Script Dictionaries, and etc<br/><br/>Attribute Type: Object ~ Object (Type) Attribute<br/>(this means that your Value, does NOT have quotes on it, as the quotes would change the value~text from being an Object to being a String)<br/><br/>(moving Object).parent = (destination Object)<br/><br/>moving Object: player<br/><br/>player.parent = (destination Object)<br/><br/>------<br/><br/>as a creation tag:<br/><br/><pre><code>&lt;object name=&quot;xxx&quot;&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;(Value&#58;destination Object_name)&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// for Example&#58;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>&lt;/object&gt;<br/><br/>&lt;object name=&quot;wooden_sword&quot;&gt;<br/>  &lt;attr name=&quot;parent&quot; type=&quot;object&quot;&gt;player&lt;/attr&gt;<br/>&lt;/object&gt;<br/><br/>// the above example is the same as this&#58;<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>  &lt;object name=&quot;wooden_sword&quot;&gt;<br/>  &lt;/object&gt;<br/>&lt;/object&gt;</code></pre><br/><br/>-----<br/><br/>player.parent = HK<br/><br/>would move the 'player' to this spot (only the indecting~nesting level matters):<br/><br/>(outermost ~ more parent)<br/>HK<br/>-&gt; player<br/>-&gt; pants with pockets<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; $1<br/>-&gt; // or player can be here, it's the same spot, as its indented~nested at the same level ... hopefully you understand this... as I don't want to show examples of for every spot it can be placed in the following additional examples below, lol<br/>(innermost ~ more child)<br/><br/>-------<br/><br/>player.parent = pants with pockets<br/><br/>(outermost ~ more parent)<br/>HK<br/>-&gt; pants with pockets<br/>-&gt;-&gt; player<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; $1<br/>(innermost ~ more child)<br/><br/>-----<br/><br/>player.parent = wallet<br/><br/>(outermost ~ more parent)<br/>HK<br/>-&gt; pants with pockets<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; player<br/>-&gt;-&gt;-&gt; $1<br/>(innermost ~ more child)<br/><br/>------<br/><br/>player.parent = $1<br/><br/>(outermost ~ more parent)<br/>HK<br/>-&gt; pants with pockets<br/>-&gt;-&gt; wallet<br/>-&gt;-&gt;-&gt; $1<br/>-&gt;-&gt;-&gt;-&gt; player<br/>(innermost ~ more child)<br/><br/>--------<br/><br/>so, you jsut need to save your current room~object location first, example:<br/><br/>'parent_old' would be a custom Object Attribute that we created~added to the 'player' Object (either via the GUI~Editor's 'player' Object's Attribute Tab, or merely as scripting, as seen below)<br/><br/>player.parent_old = room1<br/><br/>then we move to the new room:<br/><br/>player.parent = room2<br/><br/>and if we wanted to go back to the old room, we'd just 'load' that 'parent_old' Object Attribute, via:<br/><br/>player.parent = player.parent_old<br/>(conceptually: player.parent = player.parent_old = room1)<br/><br/>-------<br/><br/>if you want to see movement without Exits, here's an example, my (HK's) 'explore' and 'travel' code:<br/><br/>(it's unrefined, but it's functional, but not sure if it'll work with the current quest version, as it's old code)<br/><br/>(it's probably a bit advanced for you, if you're new to coding, and to quest's coding, as it uses lists, but maybe you can at least follow along ~ understand it in concept at least, and if not, just ask me, and I can, will gladly, help explain it)<br/><br/><pre><code>&lt;asl version=&quot;540&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Testing Game Stuff&quot;&gt;<br/>    &lt;gameid&gt;eef801a1-4e6b-4b0a-bdbf-8f3ecfa8389c&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2013&lt;/firstpublished&gt;<br/>    &lt;turns type=&quot;int&quot;&gt;0&lt;/turns&gt;<br/>    &lt;statusattributes type=&quot;simplestringdictionary&quot;&gt;turns=&lt;/statusattributes&gt;<br/>   &lt;start type=&quot;script&quot;&gt;<br/>     msg (&quot;Important Note&#58;&quot;)<br/>     msg (&quot;Type in&#58; help&quot;)<br/>   &lt;/start&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;homeland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;grassland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;plains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;desert&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;tundra&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;swampland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;mountains&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;forest&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;wasteland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;coastland&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;hills&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;help_command&quot;&gt;<br/>    &lt;pattern&gt;help&lt;/pattern&gt;<br/>   &lt;script&gt;<br/>     help_function<br/>   &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;explore_command&quot;&gt;<br/>    &lt;pattern&gt;explore&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      explore_function<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;command name=&quot;travel_command&quot;&gt;<br/>    &lt;pattern&gt;travel&lt;/pattern&gt;<br/>   &lt;script&gt;<br/>     travel_function<br/>   &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;object name=&quot;data_object&quot;&gt;<br/>    &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>   &lt;travel_string_list type=&quot;simplestringlist&quot;&gt;homeland&lt;/travel_string_list&gt;<br/>    &lt;homeland_events_string_list type=&quot;simplestringlist&quot;&gt;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&lt;/homeland_events_string_list&gt;<br/>    &lt;homeland_events_script_dictionary type=&quot;scriptdictionary&quot;&gt;<br/>     &lt;item key=&quot;grassland_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;grassland&quot;)<br/>      msg (&quot;You've discovered the grassland! Now, you can travel to the grassland and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;plains_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;plains&quot;)<br/>      msg (&quot;You've discovered the plains! Now, you can travel to the plains and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;desert_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;desert&quot;)<br/>      msg (&quot;You've discovered the desert! Now, you can travel to the desert and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;tundra_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;tundra&quot;)<br/>      msg (&quot;You've discovered the tundra! Now, you can travel to the tundra and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;swampland_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;swampland&quot;)<br/>      msg (&quot;You've discovered the swampland! Now, you can travel to the swampland and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;forest_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;forest&quot;)<br/>      msg (&quot;You've discovered the forest! Now, you can travel to the forest and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;mountains_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;mountains&quot;)<br/>      msg (&quot;You've discovered the mountains! Now, you can travel to the mountains and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;hills_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;hills&quot;)<br/>      msg (&quot;You've discovered the hills! Now, you can travel to the hills and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;wasteland_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;wasteland&quot;)<br/>      msg (&quot;You've discovered the wasteland! Now, you can travel to the wasteland and explore it!&quot;)<br/>     &lt;/item&gt;<br/>     &lt;item key=&quot;coastland_discovery&quot;&gt;<br/>       list add (data_object&#46;travel_string_list, &quot;coastland&quot;)<br/>      msg (&quot;You've discovered the coastland! Now, you can travel to the coastland and explore it!&quot;)<br/>     &lt;/item&gt;<br/>   &lt;/homeland_events_script_dictionary&gt;<br/>  &lt;/object&gt;<br/>  &lt;turnscript name=&quot;global_turnscript&quot;&gt;<br/>    &lt;enabled /&gt;<br/>    &lt;script&gt;<br/>      game&#46;turns = game&#46;turns + 1<br/>    &lt;/script&gt;<br/>  &lt;/turnscript&gt;<br/>  &lt;function name=&quot;help_function&quot;&gt;<br/>    msg (&quot;Type 'explore' to explore your area&#46;&quot;)<br/>   msg (&quot;Type 'travel' to travel to different areas&#46;&quot;)<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;explore_function&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    switch (game&#46;pov&#46;parent) {<br/>     case (homeland) {<br/>      result_1 = ListCount (data_object&#46;homeland_events_string_list) - 1<br/>      if (result_1 &gt;= 0) {<br/>          result_2 = StringListItem (data_object&#46;homeland_events_string_list,GetRandomInt(0,result_1))<br/>          invoke (ScriptDictionaryItem (data_object&#46;homeland_events_script_dictionary,result_2))<br/>        on ready {<br/>          foreach (item_x, split (&quot;grassland_discovery;plains_discovery;desert_discovery;tundra_discovery;swampland_discovery;forest_discovery;mountains_discovery;hills_discovery;wasteland_discovery;coastland_discovery&quot;,&quot;;&quot;)) {<br/>            if (result_2 = item_x) {<br/>             list remove (data_object&#46;homeland_events_string_list, result_2)<br/>           }<br/>         }<br/>        }<br/>      } else {<br/>        msg (&quot;There seemingly is nothing left to explore in this area&#46;&quot;)<br/>      }<br/>     }<br/>    }<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>  &lt;function name=&quot;travel_function&quot;&gt;<br/>    show menu (&quot;Where do you wish to travel?&quot;,data_object&#46;travel_string_list,false) {<br/>     if (not game&#46;pov&#46;parent = GetObject (result)) {<br/>       game&#46;pov&#46;parent = GetObject (result)<br/>     } else {<br/>       msg (&quot;You are already at this area&#46;&quot;)<br/>      ask (&quot;Try again?&quot;) {<br/>        if (result=true) {<br/>          travel_function<br/>        } else {<br/>          msg (&quot;You realize that you need to discover a new area to travel to first, before you can travel to that place&#46;&quot;)<br/>        }<br/>      }<br/>     }<br/>   }<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre>",
      "PostDate": "2015-03-09T17:26:03+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "35228",
      "UserId": 0,
      "Username": "Stinky",
      "UserAvatar": null,
      "UserGravatar": "cbc08375d3512a1d036c744147338c35",
      "EditableText": "You guys are awesome, I'll toy around with this for a while",
      "EditableFormat": "bbcode",
      "HTML": "You guys are awesome, I'll toy around with this for a while",
      "PostDate": "2015-03-09T19:30:55+00:00",
      "LastEditDate": null
    }
  ]
}
