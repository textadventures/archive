{
  "Topic": {
    "TopicId": "lvpix4iggeu2zkimnsasuq",
    "ForumId": "10",
    "Title": "Change a room according to an object. ",
    "LastUpdated": "2021-04-11T14:16:03.2185856Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e52b2e4c-cb33-4686-b4a6-02937eb0ff00",
      "UserId": 541544,
      "Username": "cadders1990",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4abb00948f6dd48ea84133d77778165c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So, \r\n\r\nI have a machine in my first room that I’m hoping will allow the player to change the weather outside in a garden room. \r\n\r\nThe change of weather will also change objects completely. \r\n\r\nI am assuming I will need to create a different room for each weather condition. \r\n\r\nBut my question is... how do I make the correct rooms all appear to the east in accordance to the position of a dial on my machine? ",
      "EditableFormat": "markdown",
      "HTML": "<p>So,</p>\n<p>I have a machine in my first room that I’m hoping will allow the player to change the weather outside in a garden room.</p>\n<p>The change of weather will also change objects completely.</p>\n<p>I am assuming I will need to create a different room for each weather condition.</p>\n<p>But my question is... how do I make the correct rooms all appear to the east in accordance to the position of a dial on my machine?</p>\n\n",
      "PostDate": "2021-04-11T14:16:03.2185856Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a438a3c4-a8f5-41ea-9f22-3b8025051c3f",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hopefully there aren’t a TON of objects Or weather types in the garden room.  Keep the room, just use an if then script on each object in the garden room to alter its description.  Set flags for each weather type.\r\n\r\nIt’s been a while since I’ve been on the pc.  If this doesn’t make sense I’ll add a better description.  Let us know.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hopefully there aren’t a TON of objects Or weather types in the garden room.  Keep the room, just use an if then script on each object in the garden room to alter its description.  Set flags for each weather type.</p>\n<p>It’s been a while since I’ve been on the pc.  If this doesn’t make sense I’ll add a better description.  Let us know.</p>\n\n",
      "PostDate": "2021-04-11T17:45:52.8672162Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e542b3ef-cf3f-4e7d-b1fa-4cd6ad2dfd40",
      "UserId": 541544,
      "Username": "cadders1990",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4abb00948f6dd48ea84133d77778165c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great that it’s possible! But if you wouldn’t mind explaining a little more please? Complete novice at this! Thank you so much for your help! \r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>Great that it’s possible! But if you wouldn’t mind explaining a little more please? Complete novice at this! Thank you so much for your help!</p>\n\n",
      "PostDate": "2021-04-11T18:32:18.6283312Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a5f2023b-f05c-4d34-968d-e89119f51f33",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Below is the code and the \"game\" link.  It might be easier to download the game or copy and paste that bit of code in a new game rather than me stumbling over an explanation.  \r\n\r\nEDIT:  I probably should have asked before now, but I assume you are using the downloaded version and NOT the online version... (if you are using the online version, download the offline version - so much more control and reliability)\r\n\r\nAnd here is a link to the \"game\".  \r\n\r\nhttp://textadventures.co.uk/games/view/dzcwo7gnu02uyyhxjdgztw/changing-room-descriptions-with-flags\r\n\r\nAsk if you have questions!\r\n\r\n```\r\n<asl version=\"580\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"Changing Room Descriptions with Flags\">\r\n    <gameid>07d8ca77-42c9-4859-8731-ca522641dae9</gameid>\r\n    <version>1.0</version>\r\n    <firstpublished>2021</firstpublished>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <isroom />\r\n  </object>\r\n  <object name=\"Garden Room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description type=\"script\"><![CDATA[\r\n      msg (\"This is a garden room.  You see a small pond and a flower on a small square patch of ground.<br/>\")\r\n      if (GetBoolean(Control Room, \"wpushed\")) {\r\n        msg (\"It is quite cold in here and a light snow seems to be falling.\")\r\n      }\r\n      else if (GetBoolean(Control Room, \"ypushed\")) {\r\n        msg (\"It is really hot in here and the sun is blazing overhead.\")\r\n      }\r\n      else if (GetBoolean(Control Room, \"bpushed\")) {\r\n        msg (\"It is nice and cool in here but a steady rain is falling.\")\r\n      }\r\n      else {\r\n        msg (\"There is nothing remarkable about anything in this room!\")\r\n      }\r\n    ]]></description>\r\n    <exit alias=\"south\" to=\"Control Room\">\r\n      <inherit name=\"southdirection\" />\r\n    </exit>\r\n    <object name=\"flower\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        if (GetBoolean(Control Room, \"wpushed\")) {\r\n          msg (\"The flower appears to be shivering under the light coating of snow.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"ypushed\")) {\r\n          msg (\"The flower is standing fully erect stretching up toward the sun.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"bpushed\")) {\r\n          msg (\"The flower is clinging desparately to a few drops of water falling from the sky.\")\r\n        }\r\n        else {\r\n          msg (\"Boring little flower standing comfortably still.\")\r\n        }\r\n      </look>\r\n    </object>\r\n    <object name=\"ground\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        if (GetBoolean(Control Room, \"wpushed\")) {\r\n          msg (\"The ground is covered in a light dusting of snow.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"ypushed\")) {\r\n          msg (\"The ground is dry and cracked desparate for a bit of moisture.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"bpushed\")) {\r\n          msg (\"The ground is slick with the newly falling rain.\")\r\n        }\r\n        else {\r\n          msg (\"Lame ground.  not much remarkable.\")\r\n        }\r\n      </look>\r\n    </object>\r\n    <object name=\"pond\">\r\n      <inherit name=\"editor_object\" />\r\n      <look type=\"script\">\r\n        if (GetBoolean(Control Room, \"wpushed\")) {\r\n          msg (\"The pond is frozen solid under a light dust of snow.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"ypushed\")) {\r\n          msg (\"The pond looks more like a drying puddle of mud.  Sad little pond.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"bpushed\")) {\r\n          msg (\"The banks of the pond are nearly overflowing with water as the rain pushing its limits.\")\r\n        }\r\n        else {\r\n          msg (\"Normal pond.\")\r\n        }\r\n      </look>\r\n      <swinin type=\"script\">\r\n        if (GetBoolean(Control Room, \"wpushed\")) {\r\n          msg (\"You slip around on the ice like Bambi before retreating back to the shore line.\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"ypushed\")) {\r\n          msg (\"You'd rather not get in.  Looks like you'd just get all muddy!\")\r\n        }\r\n        else if (GetBoolean(Control Room, \"bpushed\")) {\r\n          msg (\"Nah.  You're afraid you'd drown with all that water in there!\")\r\n        }\r\n        else {\r\n          msg (\"You jump in and swim around for a bit before hopping back out.\")\r\n        }\r\n      </swinin>\r\n    </object>\r\n  </object>\r\n  <object name=\"Control Room\">\r\n    <inherit name=\"editor_room\" />\r\n    <description type=\"script\"><![CDATA[\r\n      msg (\"This is your basic control room.<br/><br/>On the wall there are three buttons - a yellow one, a white one, and a blue one.  Each can be pushed.<br/>\")\r\n      if (GetBoolean(Control Room, \"wpushed\")) {\r\n        msg (\"It appears that the white button is pushed.\")\r\n      }\r\n      else if (GetBoolean(Control Room, \"ypushed\")) {\r\n        msg (\"It appears that the yellow button is pushed.\")\r\n      }\r\n      else if (GetBoolean(Control Room, \"bpushed\")) {\r\n        msg (\"It appears that the blue button is pushed.\")\r\n      }\r\n      else {\r\n        msg (\"It appears none of the buttons have been pushed.\")\r\n      }\r\n    ]]></description>\r\n    <exit alias=\"north\" to=\"Garden Room\">\r\n      <inherit name=\"northdirection\" />\r\n    </exit>\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n    <object name=\"yellow button\">\r\n      <inherit name=\"editor_object\" />\r\n      <look>It is a yellow button.  Go on... you know you want to push it.</look>\r\n      <push type=\"script\">\r\n        SetObjectFlagOn (Control Room, \"ypushed\")\r\n        SetObjectFlagOff (Control Room, \"bpushed\")\r\n        SetObjectFlagOff (Control Room, \"wpushed\")\r\n        msg (\"You hear a faint click when you push the yellow button and a distant mechanical voice claims \\\"Yellow pushed.\\\"\")\r\n      </push>\r\n    </object>\r\n    <object name=\"blue button\">\r\n      <inherit name=\"editor_object\" />\r\n      <look>It's a blue button.  Dare you to push it.</look>\r\n      <push type=\"script\">\r\n        SetObjectFlagOn (Control Room, \"bpushed\")\r\n        SetObjectFlagOff (Control Room, \"ypushed\")\r\n        SetObjectFlagOff (Control Room, \"wpushed\")\r\n        msg (\"You hear a faint click and a mechanical voice says \\\"Blue pushed.\\\"\")\r\n      </push>\r\n    </object>\r\n    <object name=\"white button\">\r\n      <inherit name=\"editor_object\" />\r\n      <look>It's a white button.  It looks like it wants to be pushed.</look>\r\n      <push type=\"script\">\r\n        SetObjectFlagOn (Control Room, \"wpushed\")\r\n        SetObjectFlagOff (Control Room, \"ypushed\")\r\n        SetObjectFlagOff (Control Room, \"bpushed\")\r\n        msg (\"Click.  \\\"White has been pushed.\\\"\")\r\n      </push>\r\n    </object>\r\n  </object>\r\n  <verb>\r\n    <property>swinin</property>\r\n    <pattern>swim in; get in</pattern>\r\n    <defaultexpression>\"You can't swin in; get in \" + object.article + \".\"</defaultexpression>\r\n  </verb>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>Below is the code and the \"game\" link.  It might be easier to download the game or copy and paste that bit of code in a new game rather than me stumbling over an explanation.</p>\n<p>EDIT:  I probably should have asked before now, but I assume you are using the downloaded version and NOT the online version... (if you are using the online version, download the offline version - so much more control and reliability)</p>\n<p>And here is a link to the \"game\".</p>\n<p>http://textadventures.co.uk/games/view/dzcwo7gnu02uyyhxjdgztw/changing-room-descriptions-with-flags</p>\n<p>Ask if you have questions!</p>\n<pre><code>&lt;asl version=\"580\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"Changing Room Descriptions with Flags\"&gt;\n    &lt;gameid&gt;07d8ca77-42c9-4859-8731-ca522641dae9&lt;/gameid&gt;\n    &lt;version&gt;1.0&lt;/version&gt;\n    &lt;firstpublished&gt;2021&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;isroom /&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Garden Room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description type=\"script\"&gt;&lt;![CDATA[\n      msg (\"This is a garden room.  You see a small pond and a flower on a small square patch of ground.&lt;br/&gt;\")\n      if (GetBoolean(Control Room, \"wpushed\")) {\n        msg (\"It is quite cold in here and a light snow seems to be falling.\")\n      }\n      else if (GetBoolean(Control Room, \"ypushed\")) {\n        msg (\"It is really hot in here and the sun is blazing overhead.\")\n      }\n      else if (GetBoolean(Control Room, \"bpushed\")) {\n        msg (\"It is nice and cool in here but a steady rain is falling.\")\n      }\n      else {\n        msg (\"There is nothing remarkable about anything in this room!\")\n      }\n    ]]&gt;&lt;/description&gt;\n    &lt;exit alias=\"south\" to=\"Control Room\"&gt;\n      &lt;inherit name=\"southdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"flower\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        if (GetBoolean(Control Room, \"wpushed\")) {\n          msg (\"The flower appears to be shivering under the light coating of snow.\")\n        }\n        else if (GetBoolean(Control Room, \"ypushed\")) {\n          msg (\"The flower is standing fully erect stretching up toward the sun.\")\n        }\n        else if (GetBoolean(Control Room, \"bpushed\")) {\n          msg (\"The flower is clinging desparately to a few drops of water falling from the sky.\")\n        }\n        else {\n          msg (\"Boring little flower standing comfortably still.\")\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=\"ground\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        if (GetBoolean(Control Room, \"wpushed\")) {\n          msg (\"The ground is covered in a light dusting of snow.\")\n        }\n        else if (GetBoolean(Control Room, \"ypushed\")) {\n          msg (\"The ground is dry and cracked desparate for a bit of moisture.\")\n        }\n        else if (GetBoolean(Control Room, \"bpushed\")) {\n          msg (\"The ground is slick with the newly falling rain.\")\n        }\n        else {\n          msg (\"Lame ground.  not much remarkable.\")\n        }\n      &lt;/look&gt;\n    &lt;/object&gt;\n    &lt;object name=\"pond\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look type=\"script\"&gt;\n        if (GetBoolean(Control Room, \"wpushed\")) {\n          msg (\"The pond is frozen solid under a light dust of snow.\")\n        }\n        else if (GetBoolean(Control Room, \"ypushed\")) {\n          msg (\"The pond looks more like a drying puddle of mud.  Sad little pond.\")\n        }\n        else if (GetBoolean(Control Room, \"bpushed\")) {\n          msg (\"The banks of the pond are nearly overflowing with water as the rain pushing its limits.\")\n        }\n        else {\n          msg (\"Normal pond.\")\n        }\n      &lt;/look&gt;\n      &lt;swinin type=\"script\"&gt;\n        if (GetBoolean(Control Room, \"wpushed\")) {\n          msg (\"You slip around on the ice like Bambi before retreating back to the shore line.\")\n        }\n        else if (GetBoolean(Control Room, \"ypushed\")) {\n          msg (\"You'd rather not get in.  Looks like you'd just get all muddy!\")\n        }\n        else if (GetBoolean(Control Room, \"bpushed\")) {\n          msg (\"Nah.  You're afraid you'd drown with all that water in there!\")\n        }\n        else {\n          msg (\"You jump in and swim around for a bit before hopping back out.\")\n        }\n      &lt;/swinin&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;object name=\"Control Room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;description type=\"script\"&gt;&lt;![CDATA[\n      msg (\"This is your basic control room.&lt;br/&gt;&lt;br/&gt;On the wall there are three buttons - a yellow one, a white one, and a blue one.  Each can be pushed.&lt;br/&gt;\")\n      if (GetBoolean(Control Room, \"wpushed\")) {\n        msg (\"It appears that the white button is pushed.\")\n      }\n      else if (GetBoolean(Control Room, \"ypushed\")) {\n        msg (\"It appears that the yellow button is pushed.\")\n      }\n      else if (GetBoolean(Control Room, \"bpushed\")) {\n        msg (\"It appears that the blue button is pushed.\")\n      }\n      else {\n        msg (\"It appears none of the buttons have been pushed.\")\n      }\n    ]]&gt;&lt;/description&gt;\n    &lt;exit alias=\"north\" to=\"Garden Room\"&gt;\n      &lt;inherit name=\"northdirection\" /&gt;\n    &lt;/exit&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n    &lt;object name=\"yellow button\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look&gt;It is a yellow button.  Go on... you know you want to push it.&lt;/look&gt;\n      &lt;push type=\"script\"&gt;\n        SetObjectFlagOn (Control Room, \"ypushed\")\n        SetObjectFlagOff (Control Room, \"bpushed\")\n        SetObjectFlagOff (Control Room, \"wpushed\")\n        msg (\"You hear a faint click when you push the yellow button and a distant mechanical voice claims \\\"Yellow pushed.\\\"\")\n      &lt;/push&gt;\n    &lt;/object&gt;\n    &lt;object name=\"blue button\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look&gt;It's a blue button.  Dare you to push it.&lt;/look&gt;\n      &lt;push type=\"script\"&gt;\n        SetObjectFlagOn (Control Room, \"bpushed\")\n        SetObjectFlagOff (Control Room, \"ypushed\")\n        SetObjectFlagOff (Control Room, \"wpushed\")\n        msg (\"You hear a faint click and a mechanical voice says \\\"Blue pushed.\\\"\")\n      &lt;/push&gt;\n    &lt;/object&gt;\n    &lt;object name=\"white button\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;look&gt;It's a white button.  It looks like it wants to be pushed.&lt;/look&gt;\n      &lt;push type=\"script\"&gt;\n        SetObjectFlagOn (Control Room, \"wpushed\")\n        SetObjectFlagOff (Control Room, \"ypushed\")\n        SetObjectFlagOff (Control Room, \"bpushed\")\n        msg (\"Click.  \\\"White has been pushed.\\\"\")\n      &lt;/push&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;swinin&lt;/property&gt;\n    &lt;pattern&gt;swim in; get in&lt;/pattern&gt;\n    &lt;defaultexpression&gt;\"You can't swin in; get in \" + object.article + \".\"&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2021-04-11T23:17:26.0765121Z",
      "LastEditDate": "2021-04-11T23:19:15.7702999Z",
      "link": null
    },
    {
      "PostId": "ecd1bc8b-25e4-4bd4-8046-0957f695a94c",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Oh... you may (or likely may not) find this helpful.  I basically created a tutorial for myself whenever I learned new things with Quest.  I refer to it quite bit still if I stumble.  I made it available to everyone kind of as a tutorial for all.  Again, this was written almost entirely for me and how I go about solving problems/getting things accomplished.  It is very code light.  Others here probably have WAY easier, or at least different solutions to the same problems as I, but this is how MY brain works.  I won't be offended if this makes little or no sense to anyone.  Just thought I'd make it available just in case.  Happy gaming.\r\n\r\nhttp://textadventures.co.uk/games/view/azkg8ntdweivkndr5j-ycg/quest-text-adventure-tutorials-and-templates",
      "EditableFormat": "markdown",
      "HTML": "<p>Oh... you may (or likely may not) find this helpful.  I basically created a tutorial for myself whenever I learned new things with Quest.  I refer to it quite bit still if I stumble.  I made it available to everyone kind of as a tutorial for all.  Again, this was written almost entirely for me and how I go about solving problems/getting things accomplished.  It is very code light.  Others here probably have WAY easier, or at least different solutions to the same problems as I, but this is how MY brain works.  I won't be offended if this makes little or no sense to anyone.  Just thought I'd make it available just in case.  Happy gaming.</p>\n<p>http://textadventures.co.uk/games/view/azkg8ntdweivkndr5j-ycg/quest-text-adventure-tutorials-and-templates</p>\n\n",
      "PostDate": "2021-04-11T23:25:04.6936492Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "94324e2d-ae19-4756-bd9a-e666f825812b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "An alternative approach is to use the \"select\" text processor directive. If the \"state\" attribute of your machine is a number, from 0 to 3, say:\r\n\r\n> You look at the sky. {select:weathermachine.state:It is pouring with rain:It is sunny:It is foggy:It is snowing}.",
      "EditableFormat": "markdown",
      "HTML": "<p>An alternative approach is to use the \"select\" text processor directive. If the \"state\" attribute of your machine is a number, from 0 to 3, say:</p>\n<blockquote>\n<p>You look at the sky. {select:weathermachine.state:It is pouring with rain:It is sunny:It is foggy:It is snowing}.</p>\n</blockquote>\n\n",
      "PostDate": "2021-04-12T08:19:17.1903872Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "23f4e444-2541-4783-b7b5-9428e9fab02e",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Depending on how complex it is, you could use attributes to store the current weather.\r\nFor example, the weather machine could have a string attribute into which you put lines like \"The sun beats down on the ground.\" or \"There is rain splashing down all around you.\" - and then you can just include those in the room description by using <code>{<i style=\"color: blue\">name-of-object</i>.<i style=\"color: purple\">name-of-attribute</i>}</code> in the room description.\r\n\r\nHowever, if it's more complex (with objects disappearing and appearing, or different complex puzzles in the outdoor space, for example) it may be easier to create separate copies of the room. In this case, you would need to give the exit that leads there a \"name\" in the editor (for example I would call it `outside_door`). Then on the script when you push the button, you could do something like:\r\n<pre><code>msg (\"You push the 'sun' button, and you see the weather outside get brighter.\")\r\n<i style=\"font-family: initial; color: green\">outside_door</i>.to = <i style=\"font-family: initial; color: blue\">sunny_garden</i></code></pre>\r\n\r\nWhich method is easier will depend on how many  things you need to change :)",
      "EditableFormat": "markdown",
      "HTML": "<p>Depending on how complex it is, you could use attributes to store the current weather.<br>\nFor example, the weather machine could have a string attribute into which you put lines like \"The sun beats down on the ground.\" or \"There is rain splashing down all around you.\" - and then you can just include those in the room description by using <code>{<i style=\"color: blue\">name-of-object</i>.<i style=\"color: purple\">name-of-attribute</i>}</code> in the room description.</p>\n<p>However, if it's more complex (with objects disappearing and appearing, or different complex puzzles in the outdoor space, for example) it may be easier to create separate copies of the room. In this case, you would need to give the exit that leads there a \"name\" in the editor (for example I would call it <code>outside_door</code>). Then on the script when you push the button, you could do something like:</p>\n<pre><code>msg (\"You push the 'sun' button, and you see the weather outside get brighter.\")\n<i style=\"font-family: initial; color: green\">outside_door</i>.to = <i style=\"font-family: initial; color: blue\">sunny_garden</i></code></pre>\n<p>Which method is easier will depend on how many  things you need to change :)</p>\n\n",
      "PostDate": "2021-04-12T08:54:12.376721Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a23bc5a2-ac88-4e86-8b12-a9c6f467f684",
      "UserId": 8429,
      "Username": "TriangleGames",
      "AvatarUrl": "https://i.imgur.com/gL0gQHeb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "As someone who has made a similar project before, I agree with everything the others said. All of those are viable methods depending on how many objects need to change, and how many versions are needed. From experience, I can say that IF THEN is simple and clear, but it will get tedious if there are too many objects. While there are many ways to achieve similar effects in writing code, one of the benefits of brevity is that fewer lines of code means less opportunities for mistakes and typos!\r\n\r\nI would also advise you to choose whether you are going to\r\nA: make each item complete one at a time, including all weather effects for that item\r\n(this will feel like less work, but you can't really test everything until all the work is done), or\r\nB: make the basic version of all the items, then go back and add one weather change at a time to each item\r\n(this will feel more tedious, but you'll be able to test each version of the room as you go along), or in the case of multiple rooms\r\nC: make each room one at a time, complete with all items\r\n\r\nTry to avoid mixing up these methods, because that will make it very easy to lose track of where you are in the process,\r\nand that will make bug checking and fixes a nightmare.\r\nFor instance, I _would not_ make three empty rooms, then ask myself,\r\n\"Which rooms have a fountain? This one and this one.\r\nWhich rooms have a birdbath? This one and that one...\"\r\nas I think that would lead to making mistakes and getting lost in the process.\r\n\r\nNOTE: from here I basically summarize/compare what the others said, and I am partly writing this to help me think, because I'm considering doing an expanded remake of a similar game I made before.\r\n\r\nThis sounds similar to what I did for _Day Of Honor_, and I believe I used the IF THEN method, as XanMag suggested. In my case, what changed was the player's perspective/awareness. Therefore, all of the objects remained in place, and every single object in the game needed two sets of names, descriptions, and in some cases available verbs. It was quite a lot to do that way, but it was designed to be a short game from the start, so that worked for me. I would not have wanted to do that for more than two versions of things, and I wouldn't want to do it for a larger game.\r\n\r\nWith that said, any of the options suggested above would work. If I had to do _Day Of Honor_ over again, I would probably want to make it bigger, and I would probably use a different method for that reason. It's a little unclear what your final plan will look like, so my advice is this:\r\n\r\nIf all the objects remain present but look and function differently, AND there's not too many of them:\r\nIF THEN should work fine. It will mean laying everything out in clear detail, so you won't lose track of what's what.\r\n\r\nIf there are a lot of objects, or more than two weather conditions:\r\nI would use one of the more concise methods, like the \"select\" text processor The Pixie proposed.\r\n\r\nIf the entire contents of the room are changed, with new objects appearing and old objects disappearing:\r\nthen I would go with separate rooms, just like mrangel said. If some of the objects exist in more than one version of the garden, consider including the relevant weather in the name of the objects, it'll help you keep track of what you're looking at as you work (i.e.: SprBirdbath, SmrBirdbath, FalBirdbath, WntBirdBath), and give them all the same alias (so they all say \"birdbath\" instead of \"SmrBirdbath\" etc.).",
      "EditableFormat": "markdown",
      "HTML": "<p>As someone who has made a similar project before, I agree with everything the others said. All of those are viable methods depending on how many objects need to change, and how many versions are needed. From experience, I can say that IF THEN is simple and clear, but it will get tedious if there are too many objects. While there are many ways to achieve similar effects in writing code, one of the benefits of brevity is that fewer lines of code means less opportunities for mistakes and typos!</p>\n<p>I would also advise you to choose whether you are going to<br>\nA: make each item complete one at a time, including all weather effects for that item<br>\n(this will feel like less work, but you can't really test everything until all the work is done), or<br>\nB: make the basic version of all the items, then go back and add one weather change at a time to each item<br>\n(this will feel more tedious, but you'll be able to test each version of the room as you go along), or in the case of multiple rooms<br>\nC: make each room one at a time, complete with all items</p>\n<p>Try to avoid mixing up these methods, because that will make it very easy to lose track of where you are in the process,<br>\nand that will make bug checking and fixes a nightmare.<br>\nFor instance, I <em>would not</em> make three empty rooms, then ask myself,<br>\n\"Which rooms have a fountain? This one and this one.<br>\nWhich rooms have a birdbath? This one and that one...\"<br>\nas I think that would lead to making mistakes and getting lost in the process.</p>\n<p>NOTE: from here I basically summarize/compare what the others said, and I am partly writing this to help me think, because I'm considering doing an expanded remake of a similar game I made before.</p>\n<p>This sounds similar to what I did for <em>Day Of Honor</em>, and I believe I used the IF THEN method, as XanMag suggested. In my case, what changed was the player's perspective/awareness. Therefore, all of the objects remained in place, and every single object in the game needed two sets of names, descriptions, and in some cases available verbs. It was quite a lot to do that way, but it was designed to be a short game from the start, so that worked for me. I would not have wanted to do that for more than two versions of things, and I wouldn't want to do it for a larger game.</p>\n<p>With that said, any of the options suggested above would work. If I had to do <em>Day Of Honor</em> over again, I would probably want to make it bigger, and I would probably use a different method for that reason. It's a little unclear what your final plan will look like, so my advice is this:</p>\n<p>If all the objects remain present but look and function differently, AND there's not too many of them:<br>\nIF THEN should work fine. It will mean laying everything out in clear detail, so you won't lose track of what's what.</p>\n<p>If there are a lot of objects, or more than two weather conditions:<br>\nI would use one of the more concise methods, like the \"select\" text processor The Pixie proposed.</p>\n<p>If the entire contents of the room are changed, with new objects appearing and old objects disappearing:<br>\nthen I would go with separate rooms, just like mrangel said. If some of the objects exist in more than one version of the garden, consider including the relevant weather in the name of the objects, it'll help you keep track of what you're looking at as you work (i.e.: SprBirdbath, SmrBirdbath, FalBirdbath, WntBirdBath), and give them all the same alias (so they all say \"birdbath\" instead of \"SmrBirdbath\" etc.).</p>\n\n",
      "PostDate": "2021-04-12T14:10:20.4687583Z",
      "LastEditDate": "2021-04-12T14:11:34.623677Z",
      "link": null
    },
    {
      "PostId": "659d7404-fb59-4bb2-9ede-20c6cc0988f4",
      "UserId": 541544,
      "Username": "cadders1990",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4abb00948f6dd48ea84133d77778165c?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks so much for all of your help! \r\nThis is exactly what I need. I’ve just got to make sense of it all. I’m VERY new to this 😂 \r\n\r\nThanks so much!",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks so much for all of your help!<br>\nThis is exactly what I need. I’ve just got to make sense of it all. I’m VERY new to this 😂</p>\n<p>Thanks so much!</p>\n\n",
      "PostDate": "2021-04-12T20:10:59.3844725Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
