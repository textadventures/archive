{
  "Topic": {
    "TopicId": "5370",
    "ForumId": "10",
    "Title": "Don't have to say GO.",
    "LastUpdated": "2015-07-22T08:18:49+01:00",
    "ReplyCount": 19
  },
  "Posts": [
    {
      "PostId": "37238",
      "UserId": 0,
      "Username": "Diorm",
      "UserAvatar": null,
      "UserGravatar": "d93ee3a1a28387c74c6344ac8ba132cd",
      "EditableText": "Hello!\nI want to know if there is any way to remove the fact that you have to say &quot;go&quot; before a direction. If I write one word, I want to be able to to teleport to that place without saying GO before the word.",
      "EditableFormat": "bbcode",
      "HTML": "Hello!<br/>I want to know if there is any way to remove the fact that you have to say &quot;go&quot; before a direction. If I write one word, I want to be able to to teleport to that place without saying GO before the word.",
      "PostDate": "2015-07-21T19:10:27+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37239",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "it's more work to not use 'go' (or whatever activator word for in your Command's Pattern for your Command), as you'd have to use the individual places~areas~locations (rooms) as your activator word, which means you need to create a Command for each such place~area~location (room) you want to go to...\n\n(Maybe there's a really advanced way to do this, with using only a single Command), but that would be far beyond my knowledge and ability, lol)\n\nwell... here's how you'd make your individual Commands (again, I'd recommend just using the 'go' or whatever activator word, so you only need to make~use one single Command, but whatever):\n\n'game' Game Object -&gt; 'Commands' -&gt; Add -&gt; (see below, repeat as needed)\n\n(this is just a basic~simple example, if you want more complex scripting: add new scripts, then let me know)\n\nreplace my 'xxx_#' with the names of your place~areas~locations (rooms)\n\nCommand Name: town_1_command\nCommand Pattern: town_1\nCommand Script&#058; MoveObject (player,town_1)\n\nCommand Name: town_2_command\nCommand Pattern: town_2\nCommand Script&#058; MoveObject (player,town_2)\n\nCommand Name: land_1_command\nCommand Pattern: land_1\nCommand Script&#058; MoveObject (player,land_1)\n\nCommand Name: land_2_command\nCommand Pattern: land_2\nCommand Script&#058; MoveObject (player,land_2)\n\nCommand Name: dungeon_1_command\nCommand Pattern: dungeon_1\nCommand Script&#058; MoveObject (player,dungeon_1)\n\nCommand Name: dungeon_2_command\nCommand Pattern: dungeon_2\nCommand Script&#058; MoveObject (player,dungeon_2)\n\netc etc etc\n\n-----------------------\n\nactually... maybe you don't even need the activator word (I haven't worked that fully with testing~studying Commands, lol).... which would then make it really easy to do a single Command:\n\n(this is just a basic~simple example, if you want more complex scripting: add new scripts, then let me know. for example, you probably don't want to teleport inside of a locked chest Object, especially if you don't have a key for it, lol. Or, you don't want to be teleporting inside of a 'wall' Object or into a 'sun' Object ~ the dangers of teleportation~warp travel, lol, or onto the top~'surface' of a 'table' Object, lol)\n\nCommand Name: teleport_command\nCommand Pattern: #object#\nCommand Script&#058; MoveObject (player, object.name)\n\nI should test this, if it works, lol...",
      "EditableFormat": "bbcode",
      "HTML": "it's more work to not use 'go' (or whatever activator word for in your Command's Pattern for your Command), as you'd have to use the individual places~areas~locations (rooms) as your activator word, which means you need to create a Command for each such place~area~location (room) you want to go to...<br/><br/>(Maybe there's a really advanced way to do this, with using only a single Command), but that would be far beyond my knowledge and ability, lol)<br/><br/>well... here's how you'd make your individual Commands (again, I'd recommend just using the 'go' or whatever activator word, so you only need to make~use one single Command, but whatever):<br/><br/>'game' Game Object -&gt; 'Commands' -&gt; Add -&gt; (see below, repeat as needed)<br/><br/>(this is just a basic~simple example, if you want more complex scripting: add new scripts, then let me know)<br/><br/>replace my 'xxx_#' with the names of your place~areas~locations (rooms)<br/><br/>Command Name: town_1_command<br/>Command Pattern: town_1<br/>Command Script&#058; MoveObject (player,town_1)<br/><br/>Command Name: town_2_command<br/>Command Pattern: town_2<br/>Command Script&#058; MoveObject (player,town_2)<br/><br/>Command Name: land_1_command<br/>Command Pattern: land_1<br/>Command Script&#058; MoveObject (player,land_1)<br/><br/>Command Name: land_2_command<br/>Command Pattern: land_2<br/>Command Script&#058; MoveObject (player,land_2)<br/><br/>Command Name: dungeon_1_command<br/>Command Pattern: dungeon_1<br/>Command Script&#058; MoveObject (player,dungeon_1)<br/><br/>Command Name: dungeon_2_command<br/>Command Pattern: dungeon_2<br/>Command Script&#058; MoveObject (player,dungeon_2)<br/><br/>etc etc etc<br/><br/>-----------------------<br/><br/>actually... maybe you don't even need the activator word (I haven't worked that fully with testing~studying Commands, lol).... which would then make it really easy to do a single Command:<br/><br/>(this is just a basic~simple example, if you want more complex scripting: add new scripts, then let me know. for example, you probably don't want to teleport inside of a locked chest Object, especially if you don't have a key for it, lol. Or, you don't want to be teleporting inside of a 'wall' Object or into a 'sun' Object ~ the dangers of teleportation~warp travel, lol, or onto the top~'surface' of a 'table' Object, lol)<br/><br/>Command Name: teleport_command<br/>Command Pattern: #object#<br/>Command Script&#058; MoveObject (player, object.name)<br/><br/>I should test this, if it works, lol...",
      "PostDate": "2015-07-21T19:30:21+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37240",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;HegemonKhan&quot;:304b68u4]...\nactually... maybe you don't even need the activator word (I haven't worked that fully with testing~studying Commands, lol).... which would then make it really easy to do a single Command:\n\nCommand Name: teleport_command\nCommand Pattern: #object#\nCommand Script&#058; MoveObject (player, object.name)\n\nI should test this, if it works, lol...[/quote:304b68u4]\nQuest will only match #object# to objects that are present, so this will not work.\n\nI would do it with a command for each room as you originally said.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>HegemonKhan wrote:</cite>...<br/>actually... maybe you don't even need the activator word (I haven't worked that fully with testing~studying Commands, lol).... which would then make it really easy to do a single Command:<br/><br/>Command Name: teleport_command<br/>Command Pattern: #object#<br/>Command Script&#058; MoveObject (player, object.name)<br/><br/>I should test this, if it works, lol...</blockquote><br/>Quest will only match #object# to objects that are present, so this will not work.<br/><br/>I would do it with a command for each room as you originally said.",
      "PostDate": "2015-07-21T19:41:12+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37241",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "Err (I keep forgetting that ~ why I like using #text# always, lol), then I should've said to use the #text# VARIABLE instead, and, thus, you're saying that Commands don't require an 'activator word' at the beginning of its Command Pattern, right? So if we just used the #text# (and adjusted scripting) instead, then the Command would work?\n\nCommand Name: teleport_command\nCommand Pattern: #text#\nCommand Scripting:\n\nobject_variable = ToString (GetObject (text))\nMoveObject (player, object_variable.name)\n\nwill this work [ I'm not sure if I can do: ToString (GetObject(xxx)) ] ?\n\nI have a bit of trouble using VARIABLE.Attribute_name, in getting it to work... if it can even be done, lol.\n\n-------\n\nor we could probably use #object#, but we'd just need additional scripting:\n\nCommand Name: teleport_command\nCommand Pattern: #object#\nCommand Scripting: (see below)\n\n[code:o4e143kw]if (object = null) {\n  foreach (obj, AllObjects ()) {\n    if (obj&#46;name = ToString (object)) {\n      MoveObject (player, object&#46;name)\n    } else {\n      if (obj&#46;alias = ToString (object)) {\n        MoveObject (player, object&#46;name)\n      }\n    }\n  }\n} else {\n  MoveObject (player, object&#46;name)\n}[/code:o4e143kw]\n\nright ???",
      "EditableFormat": "bbcode",
      "HTML": "Err (I keep forgetting that ~ why I like using #text# always, lol), then I should've said to use the #text# VARIABLE instead, and, thus, you're saying that Commands don't require an 'activator word' at the beginning of its Command Pattern, right? So if we just used the #text# (and adjusted scripting) instead, then the Command would work?<br/><br/>Command Name: teleport_command<br/>Command Pattern: #text#<br/>Command Scripting:<br/><br/>object_variable = ToString (GetObject (text))<br/>MoveObject (player, object_variable.name)<br/><br/>will this work [ I'm not sure if I can do: ToString (GetObject(xxx)) ] ?<br/><br/>I have a bit of trouble using VARIABLE.Attribute_name, in getting it to work... if it can even be done, lol.<br/><br/>-------<br/><br/>or we could probably use #object#, but we'd just need additional scripting:<br/><br/>Command Name: teleport_command<br/>Command Pattern: #object#<br/>Command Scripting: (see below)<br/><br/><pre><code>if (object = null) {<br/>  foreach (obj, AllObjects ()) {<br/>    if (obj&#46;name = ToString (object)) {<br/>      MoveObject (player, object&#46;name)<br/>    } else {<br/>      if (obj&#46;alias = ToString (object)) {<br/>        MoveObject (player, object&#46;name)<br/>      }<br/>    }<br/>  }<br/>} else {<br/>  MoveObject (player, object&#46;name)<br/>}</code></pre><br/><br/>right ???",
      "PostDate": "2015-07-21T19:43:26+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37244",
      "UserId": 0,
      "Username": "Diorm",
      "UserAvatar": null,
      "UserGravatar": "d93ee3a1a28387c74c6344ac8ba132cd",
      "EditableText": "Well it's simple. I want to make my game like a computer. In a room (or page for the computer) I use a command (one word) to do something that only work on that room (page) The more you advance in the game, the more words you can use to advance in the game.",
      "EditableFormat": "bbcode",
      "HTML": "Well it's simple. I want to make my game like a computer. In a room (or page for the computer) I use a command (one word) to do something that only work on that room (page) The more you advance in the game, the more words you can use to advance in the game.",
      "PostDate": "2015-07-21T20:39:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37245",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "I personally would not use #text# in such an open way (and as The Pixie said, you can't use #object#). All the player has to do is type &quot;player&quot; to move themselves to themselves, and that would make the known universe fold in on itself. Beyond that somewhat tongue-in-cheek thought, you don't want to have a &quot;back door&quot; in your game that allows the player to move to any object. It's just too dangerous. \n\nYou *could* use such a technique if you have some sort of validation. And the fact that you want the list of commands to grow over time would fold in nicely with having a string list of valid targets, which you append to as the list needs to grow. Then in the command, you'd see if the text is in the target list. If it is then, you would move. If not, you'd print out some sort of error. You'd have to have an error like &quot;I don't understand that&quot;, since #text# will match everything under the sun that doesn't correspond to a valid command (e.g. if you type &quot;n&quot; when there is no exit, if you type &quot;x&quot; with no object, if you type &quot;fizzbinn&quot;).\n\nWhich gets back to that I probably wouldn't use #text# in general as a command pattern! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> You're just going to cause yourself all sorts of grief.",
      "EditableFormat": "bbcode",
      "HTML": "I personally would not use #text# in such an open way (and as The Pixie said, you can't use #object#). All the player has to do is type &quot;player&quot; to move themselves to themselves, and that would make the known universe fold in on itself. Beyond that somewhat tongue-in-cheek thought, you don't want to have a &quot;back door&quot; in your game that allows the player to move to any object. It's just too dangerous. <br/><br/>You *could* use such a technique if you have some sort of validation. And the fact that you want the list of commands to grow over time would fold in nicely with having a string list of valid targets, which you append to as the list needs to grow. Then in the command, you'd see if the text is in the target list. If it is then, you would move. If not, you'd print out some sort of error. You'd have to have an error like &quot;I don't understand that&quot;, since #text# will match everything under the sun that doesn't correspond to a valid command (e.g. if you type &quot;n&quot; when there is no exit, if you type &quot;x&quot; with no object, if you type &quot;fizzbinn&quot;).<br/><br/>Which gets back to that I probably wouldn't use #text# in general as a command pattern! <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> You're just going to cause yourself all sorts of grief.",
      "PostDate": "2015-07-21T21:01:44+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37246",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here's another thought about the &quot;ever growing list of commands&quot;.\n\nCommands can be global, or commands can be specific to a room. As it turns out (as I just explored), commands can have a parent just like other Quest objects. What that means is that you can keep your collection of commands in a hidden room, and then as each command becomes available, you can set its parent to null. That will move it into the global space, and it will be accessible to the player from then on. This allows the set of commands available to the player to grow over time.\n\nBe aware that if you want to set the parent of a command in script, then you need to give the command a name. Otherwise, Quest will assign one, and you won't know what it is. If you have a sample command with name &quot;samplecommand&quot;, then you can move it from a room to the global command space with\n\n[code:1y850k8i]samplecommand&#46;parent = null[/code:1y850k8i]",
      "EditableFormat": "bbcode",
      "HTML": "Here's another thought about the &quot;ever growing list of commands&quot;.<br/><br/>Commands can be global, or commands can be specific to a room. As it turns out (as I just explored), commands can have a parent just like other Quest objects. What that means is that you can keep your collection of commands in a hidden room, and then as each command becomes available, you can set its parent to null. That will move it into the global space, and it will be accessible to the player from then on. This allows the set of commands available to the player to grow over time.<br/><br/>Be aware that if you want to set the parent of a command in script, then you need to give the command a name. Otherwise, Quest will assign one, and you won't know what it is. If you have a sample command with name &quot;samplecommand&quot;, then you can move it from a room to the global command space with<br/><br/><pre><code>samplecommand&#46;parent = null</code></pre>",
      "PostDate": "2015-07-21T21:21:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37247",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "oh definately... they'd need lots of checks~validations, but I didn't want to confuse them with that stuff.\n\nand, I forgot to touch upon that design issue of game-wise command availability-checking, so thank you Jay for covering that issue.\n\n-------\n\nwould any of my code stuff work in my previous posts ???\n(as I'm having a bit of trouble with some similiar syntax~format designs, in trying to get them to work)\n\n------\n\n[quote=&quot;Pixie and Jay&quot;:f7mf2w00]~ &quot;you can use #object#&quot;[/quote:f7mf2w00]\n\ncouldn't you use the #object#, if you add in the additional scripting that I have (or similiar to if mine isn't quite fully correct) in my previous post?\n\nhere's the contents of my previous post:\n\nCommand Name: teleport_command\nCommand Pattern: #object#\nCommand Scripting: (see below)\n\n[code:f7mf2w00]if (object = null) {\n  foreach (obj, AllObjects ()) {\n    if (obj&#46;name = ToString (object)) {\n      MoveObject (player, object&#46;name)\n    } else {\n      if (obj&#46;alias = ToString (object)) {\n        MoveObject (player, object&#46;name)\n      }\n    }\n  }\n} else {\n  MoveObject (player, object&#46;name)\n}[/code:f7mf2w00]\n\nI left out the needed checking~validation of (type of) Objects, just to make it a quick posting, but am well-aware it (and any other types of checking~validation) is quite needed.",
      "EditableFormat": "bbcode",
      "HTML": "oh definately... they'd need lots of checks~validations, but I didn't want to confuse them with that stuff.<br/><br/>and, I forgot to touch upon that design issue of game-wise command availability-checking, so thank you Jay for covering that issue.<br/><br/>-------<br/><br/>would any of my code stuff work in my previous posts ???<br/>(as I'm having a bit of trouble with some similiar syntax~format designs, in trying to get them to work)<br/><br/>------<br/><br/><blockquote><cite>Pixie and Jay wrote:</cite>~ &quot;you can use #object#&quot;</blockquote><br/><br/>couldn't you use the #object#, if you add in the additional scripting that I have (or similiar to if mine isn't quite fully correct) in my previous post?<br/><br/>here's the contents of my previous post:<br/><br/>Command Name: teleport_command<br/>Command Pattern: #object#<br/>Command Scripting: (see below)<br/><br/><pre><code>if (object = null) {<br/>  foreach (obj, AllObjects ()) {<br/>    if (obj&#46;name = ToString (object)) {<br/>      MoveObject (player, object&#46;name)<br/>    } else {<br/>      if (obj&#46;alias = ToString (object)) {<br/>        MoveObject (player, object&#46;name)<br/>      }<br/>    }<br/>  }<br/>} else {<br/>  MoveObject (player, object&#46;name)<br/>}</code></pre><br/><br/>I left out the needed checking~validation of (type of) Objects, just to make it a quick posting, but am well-aware it (and any other types of checking~validation) is quite needed.",
      "PostDate": "2015-07-21T21:45:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37248",
      "UserId": 0,
      "Username": "XanMag",
      "UserAvatar": "7161_1436827710.jpg",
      "UserGravatar": "4b45a3afd18077f76f6569225c422bdb",
      "EditableText": "This sounds dumb probably, but...\n\nYou obviously have to have some command before you use the teleporter, yes?  So... The player enters the teleporter... The player types 'use teleporter... The player enters a room... Can't you just set the previous command to a switch script?\n\nIf you want a totally open environment to jump to room to room... Say you want to jump from home to grocery store by simply typing grocery store, I'd still use a letter, like 'T', to open up a numbered menu with rooms that can be teleported to.\n\n'T', show menu, 1. Home, 2. Grocery, 3. Library, 4. Bar, 5. Etc...\n\nCould you make a universal game command to open a menu like that?  Then you could simplify transport to two buttons:  'T', '2'",
      "EditableFormat": "bbcode",
      "HTML": "This sounds dumb probably, but...<br/><br/>You obviously have to have some command before you use the teleporter, yes?  So... The player enters the teleporter... The player types 'use teleporter... The player enters a room... Can't you just set the previous command to a switch script?<br/><br/>If you want a totally open environment to jump to room to room... Say you want to jump from home to grocery store by simply typing grocery store, I'd still use a letter, like 'T', to open up a numbered menu with rooms that can be teleported to.<br/><br/>'T', show menu, 1. Home, 2. Grocery, 3. Library, 4. Bar, 5. Etc...<br/><br/>Could you make a universal game command to open a menu like that?  Then you could simplify transport to two buttons:  'T', '2'",
      "PostDate": "2015-07-21T21:55:22+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37249",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "#object# only matches an object. You will *never* see &quot;object&quot; equalling null in the command, because if there is no object to match, then the command will not fire. It simply will not match. #object# is not a catch-call - it means &quot;there must be an object in view with that name/alias to match&quot;.\n\nAs far as your code working, the only one I'd go with (and The Pixie has already said this as well) is the multiple commands one. While the #text# command would work to a point, it would be unusable in a game as is due to numerous problems (false matches, etc), and so I don't think I'd say it would &quot;work&quot; as far as being a real solution.\n\n[quote:1bik0njz]they'd need lots of checks~validations, but I didn't want to confuse them with that stuff.[/quote:1bik0njz]\nThen they'll just be confused down the road when all the problems show up. It's an interesting approach, and I have experimented with something similar myself, but it's not workable (in my opinion) even with the validation. It would be easier just to create commands.",
      "EditableFormat": "bbcode",
      "HTML": "#object# only matches an object. You will *never* see &quot;object&quot; equalling null in the command, because if there is no object to match, then the command will not fire. It simply will not match. #object# is not a catch-call - it means &quot;there must be an object in view with that name/alias to match&quot;.<br/><br/>As far as your code working, the only one I'd go with (and The Pixie has already said this as well) is the multiple commands one. While the #text# command would work to a point, it would be unusable in a game as is due to numerous problems (false matches, etc), and so I don't think I'd say it would &quot;work&quot; as far as being a real solution.<br/><br/><blockquote><p>they'd need lots of checks~validations, but I didn't want to confuse them with that stuff.</p></blockquote><br/>Then they'll just be confused down the road when all the problems show up. It's an interesting approach, and I have experimented with something similar myself, but it's not workable (in my opinion) even with the validation. It would be easier just to create commands.",
      "PostDate": "2015-07-21T21:57:13+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37250",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah... laughs... thanks Jay, I get it now:\n\nif you only got:\n\nCommand Pattern: #object#\n\nthe command will never fire... I wasn't thinking about this... too used to having~using:\n\nCommand Pattern: activator_word #text~object#\n\nwhere then you can have: if (object = null), as the command will still fire due to the rest of the Command Pattern syntax (the 'activator word' as I call it wrongly, lol)\n\n----------\n\nand thanks for all the advice about best practice in code designs~methods, as I'm still a total noob with it.\n\nI like the #text# because I understand how to put all the checks~validations in for it (as I had problems using #object# as I didn't understood how it works until now, thanks to your posts just now hehe... if only I can remember now... actually... I better bookmark~favorite your posts, as I don't trust my memory for good reason, lol), though indeed it is quite cumbersome and confusing~complicated to get it fully working correctly, especially as your game grows and etc.",
      "EditableFormat": "bbcode",
      "HTML": "ah... laughs... thanks Jay, I get it now:<br/><br/>if you only got:<br/><br/>Command Pattern: #object#<br/><br/>the command will never fire... I wasn't thinking about this... too used to having~using:<br/><br/>Command Pattern: activator_word #text~object#<br/><br/>where then you can have: if (object = null), as the command will still fire due to the rest of the Command Pattern syntax (the 'activator word' as I call it wrongly, lol)<br/><br/>----------<br/><br/>and thanks for all the advice about best practice in code designs~methods, as I'm still a total noob with it.<br/><br/>I like the #text# because I understand how to put all the checks~validations in for it (as I had problems using #object# as I didn't understood how it works until now, thanks to your posts just now hehe... if only I can remember now... actually... I better bookmark~favorite your posts, as I don't trust my memory for good reason, lol), though indeed it is quite cumbersome and confusing~complicated to get it fully working correctly, especially as your game grows and etc.",
      "PostDate": "2015-07-21T21:59:55+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37251",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "It will fire - if there is an object that matches what you type. If you have an apple in the room, and you type &quot;apple&quot;, then it will fire. But if the apple is in another room or a global object, it won't.\n\nAnd no, the activator word won't work with #object# either. But it will with #text#.\n\nI'll say again: if you have #object# in your pattern. it will NEVER be null in the script. The command will only ever execute if it has matched an actual present object. Otherwise, Quest will have already said something like &quot;I can't see that&quot; since it couldn't resolve the object. That's true even if you have an &quot;activator&quot; word.",
      "EditableFormat": "bbcode",
      "HTML": "It will fire - if there is an object that matches what you type. If you have an apple in the room, and you type &quot;apple&quot;, then it will fire. But if the apple is in another room or a global object, it won't.<br/><br/>And no, the activator word won't work with #object# either. But it will with #text#.<br/><br/>I'll say again: if you have #object# in your pattern. it will NEVER be null in the script. The command will only ever execute if it has matched an actual present object. Otherwise, Quest will have already said something like &quot;I can't see that&quot; since it couldn't resolve the object. That's true even if you have an &quot;activator&quot; word.",
      "PostDate": "2015-07-21T22:02:31+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37252",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "ah okay, so, due to the #object# itself in how it works, it just won't work no matter what, if the person's input isn't an actual Object within the same room~object~parent as the player.\n\nokay, now I understand #object# fully... laughs <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> (I spoke to soon in my previous post, doh!)\n\n--------\n\nanyways... more reason for me to continue to like using #text# despite all of its issues (at least it can~will always work), lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "EditableFormat": "bbcode",
      "HTML": "ah okay, so, due to the #object# itself in how it works, it just won't work no matter what, if the person's input isn't an actual Object within the same room~object~parent as the player.<br/><br/>okay, now I understand #object# fully... laughs <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --> (I spoke to soon in my previous post, doh!)<br/><br/>--------<br/><br/>anyways... more reason for me to continue to like using #text# despite all of its issues (at least it can~will always work), lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->",
      "PostDate": "2015-07-21T22:09:33+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37253",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "And again, the problem with #text# isn't the validation. The problem is that it will suck up all invalid input, making some commands return incorrect error messages, unless you re-parse the entire input again to find out what should have happened. For example, if you're in a room without a north exit, and you type 'n', and you have a command that is only #text#, then it will execute your command when you type 'n'. So instead of printing out &quot;You can't go that way&quot;, it will print out whatever error you have in your command, which probably won't make as much sense.\n\nI would suggest trying it out - you'll see all sorts of behavior that you'd have to try to compensate for. Definitely not worth the effort for such a small gain!\n\n#text# definitely works better with an activator word, to limit its effect.",
      "EditableFormat": "bbcode",
      "HTML": "And again, the problem with #text# isn't the validation. The problem is that it will suck up all invalid input, making some commands return incorrect error messages, unless you re-parse the entire input again to find out what should have happened. For example, if you're in a room without a north exit, and you type 'n', and you have a command that is only #text#, then it will execute your command when you type 'n'. So instead of printing out &quot;You can't go that way&quot;, it will print out whatever error you have in your command, which probably won't make as much sense.<br/><br/>I would suggest trying it out - you'll see all sorts of behavior that you'd have to try to compensate for. Definitely not worth the effort for such a small gain!<br/><br/>#text# definitely works better with an activator word, to limit its effect.",
      "PostDate": "2015-07-21T22:10:28+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37254",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "err... maybe this stuff is just a bit too advanced for me to understand, as I seem to keep failing to understand what you're trying to explain to me, arg.\n\nMy apologizes for having trouble with understanding this stuff that you're trying to explain to me... I think I'm kinda getting it... as I read each of your new posts... sorry for being a bit slow~stupid on this stuff... sighs.\n\nthis level of stuff is a bit 'too much into the code weeds' for my basic knowledge of coding at this point, as I'm not aware of all of this stuff you're trying to point out to me. My brain doesn't yet think about this deeper code stuff, that will cause all of these issues.\n\n-------\n\nya, I definately wouldn't use a Command Pattern of only: #text# (as you point out, it will over-ride all of the built-in quest commands~stuff, so no correct default responses~expressions of those over-ridden built-in quest commands~stuff), as I see~understand (I hope) now at what you're getting at.\n\nbasically (if I'm finally getting this stuff you're trying to explain to me):\n\njust do NOT use:\n\nCommand Pattern: #text~object#\n\nEVER! lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nI never even thought about not needing what I wrongly called an 'activator' for Command's Patterns (aka using just #object~text# for the Command Pattern), until this poster's thread.\n\nI've always used:\n\nCommand Pattern: say #text#\nCommand Pattern: say #text# to #object#\nCommand Pattern: say #text1# to #text2#\nCommand Pattern: equip #text#\nCommand Pattern: cast #text#\netc etc etc\n\nand using no VARIABLES too (letting the scripting itself handle VARIABLES and~or checking~validation stuff):\n\nCommand Pattern: info\nCommand Pattern: equip\netc etc etc\n\nbut never did I even think of using just VARIABLS for the Command Pattern:\n\nCommand Pattern: #text#\nCommand Pattern: #object#\n\nuntil this poster's thread\n\nwhich is~was a good thing, due to all the issues of using only a VARIABLE (#text# or #object#) for the Command Pattern.",
      "EditableFormat": "bbcode",
      "HTML": "err... maybe this stuff is just a bit too advanced for me to understand, as I seem to keep failing to understand what you're trying to explain to me, arg.<br/><br/>My apologizes for having trouble with understanding this stuff that you're trying to explain to me... I think I'm kinda getting it... as I read each of your new posts... sorry for being a bit slow~stupid on this stuff... sighs.<br/><br/>this level of stuff is a bit 'too much into the code weeds' for my basic knowledge of coding at this point, as I'm not aware of all of this stuff you're trying to point out to me. My brain doesn't yet think about this deeper code stuff, that will cause all of these issues.<br/><br/>-------<br/><br/>ya, I definately wouldn't use a Command Pattern of only: #text# (as you point out, it will over-ride all of the built-in quest commands~stuff, so no correct default responses~expressions of those over-ridden built-in quest commands~stuff), as I see~understand (I hope) now at what you're getting at.<br/><br/>basically (if I'm finally getting this stuff you're trying to explain to me):<br/><br/>just do NOT use:<br/><br/>Command Pattern: #text~object#<br/><br/>EVER! lol <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>I never even thought about not needing what I wrongly called an 'activator' for Command's Patterns (aka using just #object~text# for the Command Pattern), until this poster's thread.<br/><br/>I've always used:<br/><br/>Command Pattern: say #text#<br/>Command Pattern: say #text# to #object#<br/>Command Pattern: say #text1# to #text2#<br/>Command Pattern: equip #text#<br/>Command Pattern: cast #text#<br/>etc etc etc<br/><br/>and using no VARIABLES too (letting the scripting itself handle VARIABLES and~or checking~validation stuff):<br/><br/>Command Pattern: info<br/>Command Pattern: equip<br/>etc etc etc<br/><br/>but never did I even think of using just VARIABLS for the Command Pattern:<br/><br/>Command Pattern: #text#<br/>Command Pattern: #object#<br/><br/>until this poster's thread<br/><br/>which is~was a good thing, due to all the issues of using only a VARIABLE (#text# or #object#) for the Command Pattern.",
      "PostDate": "2015-07-21T22:18:51+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37255",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2q1g3b68]And again, the problem with #text# isn't the validation. The problem is that it will suck up all invalid input, making some commands return incorrect error messages, unless you re-parse the entire input again to find out what should have happened. For example, if you're in a room without a north exit, and you type 'n', and you have a command that is only #text#, then it will execute your command when you type 'n'. So instead of printing out &quot;You can't go that way&quot;, it will print out whatever error you have in your command, which probably won't make as much sense.\n\nI would suggest trying it out - you'll see all sorts of behavior that you'd have to try to compensate for. Definitely not worth the effort for such a small gain!\n\n#text# definitely works better with an activator word, to limit its effect.[/quote:2q1g3b68]\nI think it is worse than that (though I have not tested it). I think it will suck up [i:2q1g3b68]all [/i:2q1g3b68]input. As I understand it, Quest goes through the list of commands until it finds a match, starting with room specific, then your custom commands. #text# is going to match &quot;north&quot;, &quot;look&quot;, etc. so will override those built in commands  even when valid.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>And again, the problem with #text# isn't the validation. The problem is that it will suck up all invalid input, making some commands return incorrect error messages, unless you re-parse the entire input again to find out what should have happened. For example, if you're in a room without a north exit, and you type 'n', and you have a command that is only #text#, then it will execute your command when you type 'n'. So instead of printing out &quot;You can't go that way&quot;, it will print out whatever error you have in your command, which probably won't make as much sense.<br/><br/>I would suggest trying it out - you'll see all sorts of behavior that you'd have to try to compensate for. Definitely not worth the effort for such a small gain!<br/><br/>#text# definitely works better with an activator word, to limit its effect.</blockquote><br/>I think it is worse than that (though I have not tested it). I think it will suck up <span style=\"font-style:italic;\">all </span>input. As I understand it, Quest goes through the list of commands until it finds a match, starting with room specific, then your custom commands. #text# is going to match &quot;north&quot;, &quot;look&quot;, etc. so will override those built in commands  even when valid.",
      "PostDate": "2015-07-21T22:29:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37256",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "In my test, it didn't do that. (I had a similar fear.) I'm not totally sure why, to be honest.\n\nI agree that room-specific commands take precedence, but I'm not sure if Quest can know the difference between the standard commands and the ones you create. I think they all look the same (one just happens to live in the core file). So maybe it just finds the standard one first by chance. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nBut then, Quest keeps evolving, and I don't always keep up, so I might be wrong about that.",
      "EditableFormat": "bbcode",
      "HTML": "In my test, it didn't do that. (I had a similar fear.) I'm not totally sure why, to be honest.<br/><br/>I agree that room-specific commands take precedence, but I'm not sure if Quest can know the difference between the standard commands and the ones you create. I think they all look the same (one just happens to live in the core file). So maybe it just finds the standard one first by chance. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>But then, Quest keeps evolving, and I don't always keep up, so I might be wrong about that.",
      "PostDate": "2015-07-21T22:37:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37257",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "so... the take away is:\n\nalways use an 'activator' either by itself or with VARIABLES (#object# or #text#) for your Command Patterns\n\n-----------\n\nI'm sorry for my coming up with using just #object# or #text# from trying to help this thread's poster, I had no idea of the 'can of PARASITIC worms' I was opening up, I had no idea of the catasphrofic issues that creating a Command that would over-ride (possibly even worse) ALL input (as Pixie just posted as a possibly worse isue~outcome than Jay's issues~outcomes), lol.\n\nwell... despite my trouble in finally understanding what Pixie and Jay were trying to explain to me, I've now learnt a lot into the deeper working of quest's code, so at least I was able to finally learn from Jay's and Pixie's troubles in trying to explain this stuff to me.",
      "EditableFormat": "bbcode",
      "HTML": "so... the take away is:<br/><br/>always use an 'activator' either by itself or with VARIABLES (#object# or #text#) for your Command Patterns<br/><br/>-----------<br/><br/>I'm sorry for my coming up with using just #object# or #text# from trying to help this thread's poster, I had no idea of the 'can of PARASITIC worms' I was opening up, I had no idea of the catasphrofic issues that creating a Command that would over-ride (possibly even worse) ALL input (as Pixie just posted as a possibly worse isue~outcome than Jay's issues~outcomes), lol.<br/><br/>well... despite my trouble in finally understanding what Pixie and Jay were trying to explain to me, I've now learnt a lot into the deeper working of quest's code, so at least I was able to finally learn from Jay's and Pixie's troubles in trying to explain this stuff to me.",
      "PostDate": "2015-07-21T22:42:42+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37259",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well, they are reasonable and (actually) creative ideas - they just have ramifications that make them a bit unworkable.\n\nI had a similar idea once in a different situation. I had a pattern like this:\n\n&quot;#text#&quot;\n\nThat was meant to be an input method for dialogue. Where you could just type something like\n\n&quot;How are you today?&quot;\n\n to indicate conversation. It worked as far as matching went, but I had no idea what to do with the text once it got to my command. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I still like that, conceptually, as a mechnism for inputting conversation, but there's more heavy lifting to parse natural language like that than I feel qualified to attempt. lol",
      "EditableFormat": "bbcode",
      "HTML": "Well, they are reasonable and (actually) creative ideas - they just have ramifications that make them a bit unworkable.<br/><br/>I had a similar idea once in a different situation. I had a pattern like this:<br/><br/>&quot;#text#&quot;<br/><br/>That was meant to be an input method for dialogue. Where you could just type something like<br/><br/>&quot;How are you today?&quot;<br/><br/> to indicate conversation. It worked as far as matching went, but I had no idea what to do with the text once it got to my command. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I still like that, conceptually, as a mechnism for inputting conversation, but there's more heavy lifting to parse natural language like that than I feel qualified to attempt. lol",
      "PostDate": "2015-07-21T23:18:03+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "37272",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "[quote=&quot;jaynabonne&quot;:m1zkx6gw]In my test, it didn't do that. (I had a similar fear.) I'm not totally sure why, to be honest.\n\nI agree that room-specific commands take precedence, but I'm not sure if Quest can know the difference between the standard commands and the ones you create. I think they all look the same (one just happens to live in the core file). So maybe it just finds the standard one first by chance. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nBut then, Quest keeps evolving, and I don't always keep up, so I might be wrong about that.[/quote:m1zkx6gw]\nOkay, just tested it myself, and as you say, it does not do that. Quest does give precedence to commands that are defined later in the code, which your custom commands will be (if you put custom commands before the library includes, the original commands are used). It looks like it gives lower precedence to commands that do not include #text# (or the RegEx equivalent).",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>In my test, it didn't do that. (I had a similar fear.) I'm not totally sure why, to be honest.<br/><br/>I agree that room-specific commands take precedence, but I'm not sure if Quest can know the difference between the standard commands and the ones you create. I think they all look the same (one just happens to live in the core file). So maybe it just finds the standard one first by chance. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>But then, Quest keeps evolving, and I don't always keep up, so I might be wrong about that.</blockquote><br/>Okay, just tested it myself, and as you say, it does not do that. Quest does give precedence to commands that are defined later in the code, which your custom commands will be (if you put custom commands before the library includes, the original commands are used). It looks like it gives lower precedence to commands that do not include #text# (or the RegEx equivalent).",
      "PostDate": "2015-07-22T08:18:49+01:00",
      "LastEditDate": null
    }
  ]
}
