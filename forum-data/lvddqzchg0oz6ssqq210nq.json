{
  "Topic": {
    "TopicId": "lvddqzchg0oz6ssqq210nq",
    "ForumId": "10",
    "Title": "Clone item when using Pixies StackLib",
    "LastUpdated": "2020-04-15T14:58:10.970599Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "ae9e61c6-dbef-42c1-985a-b211fbae9b6b",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The last line on the page of the instructions says the library would work with clonable items too and that's it. I assume I will have to change the Take script for the item I want to take and clone, as the library has no mention of clones. \r\n\r\nso I use:```CloneObjectAndMove (flower, player)``` but it just keeps putting the item in my inventory.\r\nif I use:```CloneObjectAndMove (flower, Stackable Container)``` It does not show in inventory.\r\nif I use:```CloneObjectAndMove (flower, flower_container )```which is in the Stackable Container, nothing shows.\r\n\r\nWhere do I send the clone? \r\nTo the Stack Container?\r\nTo the named stack container in the Stack Container?\r\nTo the player?\r\n\r\nI made the main Stack Container a room by itself away from player access.\r\n\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>The last line on the page of the instructions says the library would work with clonable items too and that's it. I assume I will have to change the Take script for the item I want to take and clone, as the library has no mention of clones.</p>\n<p>so I use:<code>CloneObjectAndMove (flower, player)</code> but it just keeps putting the item in my inventory.<br>\nif I use:<code>CloneObjectAndMove (flower, Stackable Container)</code> It does not show in inventory.<br>\nif I use:<code>CloneObjectAndMove (flower, flower_container )</code>which is in the Stackable Container, nothing shows.</p>\n<p>Where do I send the clone?<br>\nTo the Stack Container?<br>\nTo the named stack container in the Stack Container?<br>\nTo the player?</p>\n<p>I made the main Stack Container a room by itself away from player access.</p>\n\n",
      "PostDate": "2020-04-15T14:58:10.970599Z",
      "LastEditDate": "2020-04-15T15:15:20.3646768Z",
      "link": null
    },
    {
      "PostId": "7932ed47-bcc5-4e7a-aa2b-793668a81164",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "For some reason, this stack library uses the `take` and `drop` commands to add and remove stuff from the library, rather than `changedparent`. Therefore it will ignore the stacking functionality if an object is added to the inventory by a script, or by any means other than the default stacking script.\r\n\r\nI assume you have an object which is trying to give the player a flower; I think there's two different ways to do this, based on skim-reading the code.\r\n\r\n**Method 1:**\r\n* `CloneObjectAndMove (flower, flower.stackparent)` - adds the new flower to the stack\r\n* `SetStack (flower.stackparent)` - updates the container so it knows an item has been added\r\n\r\n**Method 2:**\r\n* `newflower = CloneObjectAndMove (flower, player.parent)` - create a clone in the room\r\n* `DoTake (newflower, false)` - have the player take it\r\n\r\n**Method 3:**\r\n* `newflower = CloneObject (flower)`\r\n* `do (newflower, \"take\")` - as above, but a little faster\r\n\r\nYou could shorten this to: `do (CloneObject (flower), \"take\")`\r\n\r\n\r\n<hr/>\r\n\r\nThis is why my stack systems are always built into the `changedparent` script - so that you don't need to separately deal with it in every situation where an object is moved.",
      "EditableFormat": "markdown",
      "HTML": "<p>For some reason, this stack library uses the <code>take</code> and <code>drop</code> commands to add and remove stuff from the library, rather than <code>changedparent</code>. Therefore it will ignore the stacking functionality if an object is added to the inventory by a script, or by any means other than the default stacking script.</p>\n<p>I assume you have an object which is trying to give the player a flower; I think there's two different ways to do this, based on skim-reading the code.</p>\n<p><strong>Method 1:</strong></p>\n<ul>\n<li><code>CloneObjectAndMove (flower, flower.stackparent)</code> - adds the new flower to the stack</li>\n<li><code>SetStack (flower.stackparent)</code> - updates the container so it knows an item has been added</li>\n</ul>\n<p><strong>Method 2:</strong></p>\n<ul>\n<li><code>newflower = CloneObjectAndMove (flower, player.parent)</code> - create a clone in the room</li>\n<li><code>DoTake (newflower, false)</code> - have the player take it</li>\n</ul>\n<p><strong>Method 3:</strong></p>\n<ul>\n<li><code>newflower = CloneObject (flower)</code></li>\n<li><code>do (newflower, \"take\")</code> - as above, but a little faster</li>\n</ul>\n<p>You could shorten this to: <code>do (CloneObject (flower), \"take\")</code></p>\n<hr>\n<p>This is why my stack systems are always built into the <code>changedparent</code> script - so that you don't need to separately deal with it in every situation where an object is moved.</p>\n\n",
      "PostDate": "2020-04-15T16:21:38.3918979Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c3c2a04b-eea2-4b0f-ae16-c4bd46c3278b",
      "UserId": 142763,
      "Username": "Forgewright",
      "AvatarUrl": "http://i.imgur.com/Ea6HecZb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Method 2 and 3 are looping copy, take, copy, take. As the clone will have the same take script. Won't they?\r\nAnyways they freeze the game.\r\nMethod one results:\r\n:1\r\nflower\r\nin the inventory pane\r\n\r\nIs flower the object or the alias in your scripts?\r\n[Latest Game link](http://textadventures.co.uk/games/view/5owqery9le61dbct_nndra/the-adventures-of-william-vanallen)\r\n\r\nAlso: These codes you are posting go in the Take script...Right?",
      "EditableFormat": "markdown",
      "HTML": "<p>Method 2 and 3 are looping copy, take, copy, take. As the clone will have the same take script. Won't they?<br>\nAnyways they freeze the game.<br>\nMethod one results:<br>\n:1<br>\nflower<br>\nin the inventory pane</p>\n<p>Is flower the object or the alias in your scripts?<br>\n<a href=\"http://textadventures.co.uk/games/view/5owqery9le61dbct_nndra/the-adventures-of-william-vanallen\">Latest Game link</a></p>\n<p>Also: These codes you are posting go in the Take script...Right?</p>\n\n",
      "PostDate": "2020-04-15T17:30:45.0275996Z",
      "LastEditDate": "2020-04-15T17:58:35.4668576Z",
      "link": null
    },
    {
      "PostId": "66b109d7-a0c6-41a1-b110-05120938cb3d",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ah, I assumed you would have an object 'flowers' which clones a single flower from elsewhere when the player attempts to take it; in which case the flower's own take script would be the one provided by the stack library. Having a flower which clones itself seems an odd design choice.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ah, I assumed you would have an object 'flowers' which clones a single flower from elsewhere when the player attempts to take it; in which case the flower's own take script would be the one provided by the stack library. Having a flower which clones itself seems an odd design choice.</p>\n\n",
      "PostDate": "2020-04-15T18:37:18.2075439Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
