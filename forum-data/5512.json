{
  "Topic": {
    "TopicId": "5512",
    "ForumId": "18",
    "Title": "Creating content from a text file.",
    "LastUpdated": "2015-10-01T22:37:32+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "38120",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "This is kind of a proof of concept; I am not at all convinced it is a good idea, but it does show that you can load a file during play, and use that file to add to and change the game world. This example game has two rooms, with exits between them. If you use the UPDATE command, the file is loaded, adding a new room to the north, with exits to and from it, plus a few objects. The description of the first room is also updated.\n[code:3e20h0ss]&lt;!--Saved by Quest 5&#46;6&#46;5621&#46;18142--&gt;\n&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;Files&quot;&gt;\n    &lt;gameid&gt;c60b599f-eee2-4a05-85d5-50b35c7bb08b&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;\n    &lt;start type=&quot;script&quot;&gt;\n    &lt;/start&gt;\n    &lt;publishfileextensions&gt;*&#46;jpg;*&#46;jpeg;*&#46;png;*&#46;gif;*&#46;js;*&#46;wav;*&#46;mp3;*&#46;htm;*&#46;html;*&#46;svg;*&#46;txt&lt;/publishfileextensions&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;The first room is white&#46;&lt;/description&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;hat&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;look&gt;A top hat, like they use to wear back in the day&#46;&lt;/look&gt;\n    &lt;/object&gt;\n    &lt;exit alias=&quot;east&quot; to=&quot;otherroom&quot;&gt;\n      &lt;inherit name=&quot;eastdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;otherroom&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;This room looks very neat&#46;&lt;/description&gt;\n    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;westdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;command name=&quot;update&quot;&gt;\n    &lt;pattern&gt;update&lt;/pattern&gt;\n    &lt;script&gt;\n      LoadFile (&quot;file&#46;txt&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;type name=&quot;readable&quot;&gt;\n    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;\n      &lt;value&gt;Look at&lt;/value&gt;\n      &lt;value&gt;Drop&lt;/value&gt;\n      &lt;value&gt;Read&lt;/value&gt;\n    &lt;/inventoryverbs&gt;\n  &lt;/type&gt;\n  &lt;function name=&quot;LoadFile&quot; parameters=&quot;filename&quot;&gt;\n    s = GetFileData (filename)\n    current_object = null\n    foreach (line, Split(s, &quot;\\n&quot;)) {\n      line = Crop(line)\n      if (not line = &quot;&quot; and not StartsWith(line, &quot;#&quot;)) {\n        bits = Split(line, &quot;=&quot;)\n        if (StringListItem(bits, 0) = &quot;new&quot;) {\n          if (ListCount(bits) = 2) {\n            create (StringListItem(bits, 1))\n            current_object = GetObject(StringListItem(bits, 1))\n          }\n          else {\n            create (StringListItem(bits, 2), StringListItem(bits, 1))\n            current_object = GetObject(StringListItem(bits, 2))\n          }\n        }\n        else if (StringListItem(bits, 0) = &quot;find&quot;) {\n          current_object = GetObject(StringListItem(bits, 1))\n          if (current_object = null) {\n            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)\n          }\n        }\n        else if (StringListItem(bits, 0) = &quot;exit&quot;) {\n          create exit (StringListItem(bits, 2), null, null, null, StringListItem(bits, 1))\n          current_object = GetObject(StringListItem(bits, 2))\n        }\n        else if (StringListItem(bits, 0) = &quot;parent&quot;) {\n          current_object&#46;parent = GetObject(StringListItem(bits, 1))\n          if (current_object&#46;parent = null) {\n            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)\n          }\n        }\n        else if (StringListItem(bits, 0) = &quot;to&quot;) {\n          current_object&#46;to = GetObject(StringListItem(bits, 1))\n          if (current_object&#46;to = null) {\n            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)\n          }\n        }\n        else {\n          if (LCase(StringListItem(bits, 1)) = &quot;false&quot;) {\n            set (current_object, StringListItem(bits, 0), false)\n          }\n          else if (LCase(StringListItem(bits, 1)) = &quot;true&quot;) {\n            set (current_object, StringListItem(bits, 0), true)\n          }\n          else if (IsInt(StringListItem(bits, 1))) {\n            set (current_object, StringListItem(bits, 0), ToInt(StringListItem(bits, 1)))\n          }\n          set (current_object, StringListItem(bits, 0), StringListItem(bits, 1))\n        }\n      }\n    }\n  &lt;/function&gt;\n  &lt;function name=&quot;Crop&quot; parameters=&quot;s&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;\n    start = 1\n    end = LengthOf(s)\n    for (i, 1, LengthOf(s)) {\n      if (Asc(Mid(s, i, 1)) &lt; 33) {\n        if (start = i) {\n          start = i + 1\n        }\n      }\n      else {\n        end = i\n      }\n    }\n    return (Mid(s, start, end - start + 1))\n  &#93;&#93;&gt;&lt;/function&gt;\n&lt;/asl&gt;[/code:3e20h0ss]\nHere is the file that is loaded. You will need to save it as &quot;file.txt&quot; in the same directory to get it to work.\n[code:3e20h0ss]new=teapot\nalias=A teapot\nparent=room\nlook=A blue teapot\n\nnew=bowtie\nalias=A spotted bowtie\nparent=room\nlook=Just a bowtie\n\n# create a new room\nnew=secondroom\nalias=A second room\ndescription=This is the next room, it looks very new&#46;\n\n# Connect it with exits to and from\nexit=northdirection=exittonorth\nparent=room\nto=secondroom\n\nexit=southdirection=exittosouth\nparent=secondroom\nto=room\n\n#Add an item to the room\n#This is of the type &quot;readable&quot;\nnew=readable=newspaper\nalias=An old news paper\nlook=The paper dates from 1967\nparent=secondroom\nread=You spend a few minutes catching up on the events of the 23rd of May, 1967&#46;\n\n#Now try to change the existing world\nfind=room\ndescription=The first room is black&#46;[/code:3e20h0ss]\nAbout the data file format... This is something I devised to be relatively easy for Quest and humans to understand.\n\nBlank lines (without even spaces) and lines starting with a hash are ignored\n\nUse find= to find an existing object, to change an attribute. Use new= to create new objects and exit= to create new exits. For exits you must have the type of the exit, eg (where exittosouth is the name):\nexit=southdirection=exittosouth\nFor objects you can set a type if you want, eg:\nnew=readable=newspaper\nnew=secondroom\n\nThe &quot;parent&quot; and &quot;to&quot; attributes are converted to objects. Any attribute set to &quot;true&quot; or &quot;false&quot; will be Boolean, and any set to a number will be an integer. Everything else will be a string. It should be possible to modify it to handle objects, string lists, object lists. I think it would be impossible to set a script this way however (you would have to set them up in advance with types or something).\n\nIt does some minor sanity testing, but nevertheless it is easy to make mistakes that are hard to track down, which is, I think, the big problem with the system. If you are going to make big changes to existing content, the opportunities for errors will multiply...\n\nBy the way, if you want to publish your game, you have to tell Quest to include .txt files by modifying the game.publishfileextensions attribute, as seen above.",
      "EditableFormat": "bbcode",
      "HTML": "This is kind of a proof of concept; I am not at all convinced it is a good idea, but it does show that you can load a file during play, and use that file to add to and change the game world. This example game has two rooms, with exits between them. If you use the UPDATE command, the file is loaded, adding a new room to the north, with exits to and from it, plus a few objects. The description of the first room is also updated.<br/><pre><code>&lt;!--Saved by Quest 5&#46;6&#46;5621&#46;18142--&gt;<br/>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;Files&quot;&gt;<br/>    &lt;gameid&gt;c60b599f-eee2-4a05-85d5-50b35c7bb08b&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;<br/>    &lt;start type=&quot;script&quot;&gt;<br/>    &lt;/start&gt;<br/>    &lt;publishfileextensions&gt;*&#46;jpg;*&#46;jpeg;*&#46;png;*&#46;gif;*&#46;js;*&#46;wav;*&#46;mp3;*&#46;htm;*&#46;html;*&#46;svg;*&#46;txt&lt;/publishfileextensions&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;The first room is white&#46;&lt;/description&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;hat&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;look&gt;A top hat, like they use to wear back in the day&#46;&lt;/look&gt;<br/>    &lt;/object&gt;<br/>    &lt;exit alias=&quot;east&quot; to=&quot;otherroom&quot;&gt;<br/>      &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;otherroom&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;This room looks very neat&#46;&lt;/description&gt;<br/>    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;command name=&quot;update&quot;&gt;<br/>    &lt;pattern&gt;update&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      LoadFile (&quot;file&#46;txt&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/>  &lt;type name=&quot;readable&quot;&gt;<br/>    &lt;inventoryverbs type=&quot;stringlist&quot;&gt;<br/>      &lt;value&gt;Look at&lt;/value&gt;<br/>      &lt;value&gt;Drop&lt;/value&gt;<br/>      &lt;value&gt;Read&lt;/value&gt;<br/>    &lt;/inventoryverbs&gt;<br/>  &lt;/type&gt;<br/>  &lt;function name=&quot;LoadFile&quot; parameters=&quot;filename&quot;&gt;<br/>    s = GetFileData (filename)<br/>    current_object = null<br/>    foreach (line, Split(s, &quot;\\n&quot;)) {<br/>      line = Crop(line)<br/>      if (not line = &quot;&quot; and not StartsWith(line, &quot;#&quot;)) {<br/>        bits = Split(line, &quot;=&quot;)<br/>        if (StringListItem(bits, 0) = &quot;new&quot;) {<br/>          if (ListCount(bits) = 2) {<br/>            create (StringListItem(bits, 1))<br/>            current_object = GetObject(StringListItem(bits, 1))<br/>          }<br/>          else {<br/>            create (StringListItem(bits, 2), StringListItem(bits, 1))<br/>            current_object = GetObject(StringListItem(bits, 2))<br/>          }<br/>        }<br/>        else if (StringListItem(bits, 0) = &quot;find&quot;) {<br/>          current_object = GetObject(StringListItem(bits, 1))<br/>          if (current_object = null) {<br/>            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)<br/>          }<br/>        }<br/>        else if (StringListItem(bits, 0) = &quot;exit&quot;) {<br/>          create exit (StringListItem(bits, 2), null, null, null, StringListItem(bits, 1))<br/>          current_object = GetObject(StringListItem(bits, 2))<br/>        }<br/>        else if (StringListItem(bits, 0) = &quot;parent&quot;) {<br/>          current_object&#46;parent = GetObject(StringListItem(bits, 1))<br/>          if (current_object&#46;parent = null) {<br/>            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)<br/>          }<br/>        }<br/>        else if (StringListItem(bits, 0) = &quot;to&quot;) {<br/>          current_object&#46;to = GetObject(StringListItem(bits, 1))<br/>          if (current_object&#46;to = null) {<br/>            error (&quot;Failed to find &quot; + StringListItem(bits, 1) + &quot; in the game world&#46; Things will go badly&#46;&#46;&#46;&quot;)<br/>          }<br/>        }<br/>        else {<br/>          if (LCase(StringListItem(bits, 1)) = &quot;false&quot;) {<br/>            set (current_object, StringListItem(bits, 0), false)<br/>          }<br/>          else if (LCase(StringListItem(bits, 1)) = &quot;true&quot;) {<br/>            set (current_object, StringListItem(bits, 0), true)<br/>          }<br/>          else if (IsInt(StringListItem(bits, 1))) {<br/>            set (current_object, StringListItem(bits, 0), ToInt(StringListItem(bits, 1)))<br/>          }<br/>          set (current_object, StringListItem(bits, 0), StringListItem(bits, 1))<br/>        }<br/>      }<br/>    }<br/>  &lt;/function&gt;<br/>  &lt;function name=&quot;Crop&quot; parameters=&quot;s&quot; type=&quot;string&quot;&gt;&lt;!&#91;CDATA&#91;<br/>    start = 1<br/>    end = LengthOf(s)<br/>    for (i, 1, LengthOf(s)) {<br/>      if (Asc(Mid(s, i, 1)) &lt; 33) {<br/>        if (start = i) {<br/>          start = i + 1<br/>        }<br/>      }<br/>      else {<br/>        end = i<br/>      }<br/>    }<br/>    return (Mid(s, start, end - start + 1))<br/>  &#93;&#93;&gt;&lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><br/>Here is the file that is loaded. You will need to save it as &quot;file.txt&quot; in the same directory to get it to work.<br/><pre><code>new=teapot<br/>alias=A teapot<br/>parent=room<br/>look=A blue teapot<br/><br/>new=bowtie<br/>alias=A spotted bowtie<br/>parent=room<br/>look=Just a bowtie<br/><br/># create a new room<br/>new=secondroom<br/>alias=A second room<br/>description=This is the next room, it looks very new&#46;<br/><br/># Connect it with exits to and from<br/>exit=northdirection=exittonorth<br/>parent=room<br/>to=secondroom<br/><br/>exit=southdirection=exittosouth<br/>parent=secondroom<br/>to=room<br/><br/>#Add an item to the room<br/>#This is of the type &quot;readable&quot;<br/>new=readable=newspaper<br/>alias=An old news paper<br/>look=The paper dates from 1967<br/>parent=secondroom<br/>read=You spend a few minutes catching up on the events of the 23rd of May, 1967&#46;<br/><br/>#Now try to change the existing world<br/>find=room<br/>description=The first room is black&#46;</code></pre><br/>About the data file format... This is something I devised to be relatively easy for Quest and humans to understand.<br/><br/>Blank lines (without even spaces) and lines starting with a hash are ignored<br/><br/>Use find= to find an existing object, to change an attribute. Use new= to create new objects and exit= to create new exits. For exits you must have the type of the exit, eg (where exittosouth is the name):<br/>exit=southdirection=exittosouth<br/>For objects you can set a type if you want, eg:<br/>new=readable=newspaper<br/>new=secondroom<br/><br/>The &quot;parent&quot; and &quot;to&quot; attributes are converted to objects. Any attribute set to &quot;true&quot; or &quot;false&quot; will be Boolean, and any set to a number will be an integer. Everything else will be a string. It should be possible to modify it to handle objects, string lists, object lists. I think it would be impossible to set a script this way however (you would have to set them up in advance with types or something).<br/><br/>It does some minor sanity testing, but nevertheless it is easy to make mistakes that are hard to track down, which is, I think, the big problem with the system. If you are going to make big changes to existing content, the opportunities for errors will multiply...<br/><br/>By the way, if you want to publish your game, you have to tell Quest to include .txt files by modifying the game.publishfileextensions attribute, as seen above.",
      "PostDate": "2015-10-01T21:03:40+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38122",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "OMG!  This is magical, I take it we can borrow your code as long as proper credit is given.\nHowever, I think this would be good for add-ons to Quest games like DLC...",
      "EditableFormat": "bbcode",
      "HTML": "OMG!  This is magical, I take it we can borrow your code as long as proper credit is given.<br/>However, I think this would be good for add-ons to Quest games like DLC...",
      "PostDate": "2015-10-01T21:15:47+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38124",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I posted it here to get used. Do what you want with it.\n\nFor DLCs, I would have a DLc command that asks the player for the file name. You can upload a new version with an extra file, then tell the players to load the DLC. A mechanism to ensure it only happens once would be good (keep a string list of files loaded).",
      "EditableFormat": "bbcode",
      "HTML": "I posted it here to get used. Do what you want with it.<br/><br/>For DLCs, I would have a DLc command that asks the player for the file name. You can upload a new version with an extra file, then tell the players to load the DLC. A mechanism to ensure it only happens once would be good (keep a string list of files loaded).",
      "PostDate": "2015-10-01T22:37:32+01:00",
      "LastEditDate": null
    }
  ]
}
