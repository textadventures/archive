{
  "Topic": {
    "TopicId": "3bwq7ppqquslgsrj7kynwa",
    "ForumId": "10",
    "Title": "Question About Sound",
    "LastUpdated": "2018-11-06T01:28:14.9852238Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "3cf8496a-b95c-4c2e-b81c-c8810cb86381",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm looking for a way to activate a flag every time a sound is played, without having to script it in for every instance in a game.  So my question is this:\r\n\r\nIs there a script that can be modified that runs every time a sound is played?\r\n\r\nOr...\r\n\r\nIs there an attribute/variable that changes every time a sound is played?\r\n\r\nThanks in advance.",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm looking for a way to activate a flag every time a sound is played, without having to script it in for every instance in a game.  So my question is this:</p>\n<p>Is there a script that can be modified that runs every time a sound is played?</p>\n<p>Or...</p>\n<p>Is there an attribute/variable that changes every time a sound is played?</p>\n<p>Thanks in advance.</p>\n\n",
      "PostDate": "2018-11-06T01:28:14.9852238Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cb3ae987-f8da-44f9-984f-41c60aeeb630",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ignore this.  I was being silly.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ignore this.  I was being silly.</p>\n\n",
      "PostDate": "2018-11-06T01:52:27.6432316Z",
      "LastEditDate": "2018-11-06T01:53:37.4479134Z",
      "link": null
    },
    {
      "PostId": "554c0382-6e6f-4a7b-b9bc-bf612c49402f",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Your silliness is overpowering though!",
      "EditableFormat": "markdown",
      "HTML": "<p>Your silliness is overpowering though!</p>\n\n",
      "PostDate": "2018-11-06T02:32:58.6040131Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "c51b548c-4988-4cfc-a949-5a03f0e0f979",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well, I had posted some code . . .\r\n\r\n. . . but it would have set the flag in a newly created function which also called the ```play sound``` script.  Then, there was another newly created function which disabled the flag and called the ```stop sound``` script.\r\n\r\nThe problem was there was no simple way to have Quest disable the flag itself once the sound had finished playing.\r\n\r\nIf that doesn't matter:\r\n\r\nCreate ```PlaySound``` function.\r\n\r\nParameters:  ```filename```, ```wait```, ```loop```\r\n\r\n```\r\ngame.playingsound = true\r\nplay sound (filename, wait, loop)\r\n```\r\n\r\n\r\nCreate ```StopSound``` function.\r\n\r\n(No parameters.)\r\n\r\n```\r\ngame.playingsound = false\r\nstop sound\r\n```\r\n\r\n---\r\nThat could fail to do what you want it to do for many reasons.\r\n\r\nJavascript would probably be a better way to handle it, but that can get complicated when setting Quest attributes (unless you're using Quest 5.8).\r\n\r\nMy AudioVideoLib should allow you to do anything you want.\r\n\r\nStart with the WARNINGS page:\r\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/warnings.html\r\n\r\nHere's the documentation:\r\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/documentation.html\r\n\r\nInstructions with screenshots:\r\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/AudioVideoLibInstructions.html\r\n\r\nHow to add a library to a game (just for completion's sake):\r\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/addingthelibrary.html\r\n\r\nAnd, finally, the library:\r\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/AudioVideoLib.aslx\r\n\r\n\r\n---\r\nPS\r\n\r\nA link to the main page, just in case something gets updated and one (or more) of the above links dies:\r\n\r\nhttp://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib",
      "EditableFormat": "markdown",
      "HTML": "<p>Well, I had posted some code . . .</p>\n<p>. . . but it would have set the flag in a newly created function which also called the <code>play sound</code> script.  Then, there was another newly created function which disabled the flag and called the <code>stop sound</code> script.</p>\n<p>The problem was there was no simple way to have Quest disable the flag itself once the sound had finished playing.</p>\n<p>If that doesn't matter:</p>\n<p>Create <code>PlaySound</code> function.</p>\n<p>Parameters:  <code>filename</code>, <code>wait</code>, <code>loop</code></p>\n<pre><code>game.playingsound = true\nplay sound (filename, wait, loop)\n</code></pre>\n<p>Create <code>StopSound</code> function.</p>\n<p>(No parameters.)</p>\n<pre><code>game.playingsound = false\nstop sound\n</code></pre>\n<hr>\n<p>That could fail to do what you want it to do for many reasons.</p>\n<p>Javascript would probably be a better way to handle it, but that can get complicated when setting Quest attributes (unless you're using Quest 5.8).</p>\n<p>My AudioVideoLib should allow you to do anything you want.</p>\n<p>Start with the WARNINGS page:<br>\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/warnings.html</p>\n<p>Here's the documentation:<br>\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/documentation.html</p>\n<p>Instructions with screenshots:<br>\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/AudioVideoLibInstructions.html</p>\n<p>How to add a library to a game (just for completion's sake):<br>\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/addingthelibrary.html</p>\n<p>And, finally, the library:<br>\nhttp://media.textadventures.co.uk/games/PHVys9dICUiMSSpr_m9WYQ/AudioVideoLib.aslx</p>\n<hr>\n<p>PS</p>\n<p>A link to the main page, just in case something gets updated and one (or more) of the above links dies:</p>\n<p>http://textadventures.co.uk/games/view/phvys9dicuimsspr_m9wyq/audiovideolib</p>\n\n",
      "PostDate": "2018-11-06T03:35:36.3496441Z",
      "LastEditDate": "2018-11-06T03:53:03.1497175Z",
      "link": null
    },
    {
      "PostId": "28ec714e-f87d-4014-8075-07c506ea89e1",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I guess I should explain what I was trying to accomplish more thoroughly:\r\n\r\nMy game plays a lot of sound effects (that wait, but don't loop).  Most of my rooms also play a background sound (that doesn't wait, but does loop).  If a sound effect plays, it will silence the ongoing, looping background sound.  I want a flag to be set every time a sound effect plays, so that a turnscript can decide, at the end of the turn, whether to restart the background sound (because flag is set), or to just allow the ongoing background sound to continue without interruption (because flag is not set).  Right now the game is set up to just restart the background sound every turn, but having the background sound loop from turn to turn, whenever possible, would be more immersive and less distracting.\r\n\r\nThere must be at least a hundred instances where a sound effect is played (hence my searching for a more automated solution).  This game does use Quest 5.8, by the way.  I could try your AudioLib, KV, but it would require a major overhaul of my game, and I was trying to avoid that (sorry).",
      "EditableFormat": "markdown",
      "HTML": "<p>I guess I should explain what I was trying to accomplish more thoroughly:</p>\n<p>My game plays a lot of sound effects (that wait, but don't loop).  Most of my rooms also play a background sound (that doesn't wait, but does loop).  If a sound effect plays, it will silence the ongoing, looping background sound.  I want a flag to be set every time a sound effect plays, so that a turnscript can decide, at the end of the turn, whether to restart the background sound (because flag is set), or to just allow the ongoing background sound to continue without interruption (because flag is not set).  Right now the game is set up to just restart the background sound every turn, but having the background sound loop from turn to turn, whenever possible, would be more immersive and less distracting.</p>\n<p>There must be at least a hundred instances where a sound effect is played (hence my searching for a more automated solution).  This game does use Quest 5.8, by the way.  I could try your AudioLib, KV, but it would require a major overhaul of my game, and I was trying to avoid that (sorry).</p>\n\n",
      "PostDate": "2018-11-06T09:50:58.8038192Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f28cceec-ab30-4da4-863c-e4d38871d4a7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I think in that case, it would make more sense to have a javascript function restart the background sound, rather than a turnscript. Or to create a JS function which plays a sound unless it is already playing.",
      "EditableFormat": "markdown",
      "HTML": "<p>I think in that case, it would make more sense to have a javascript function restart the background sound, rather than a turnscript. Or to create a JS function which plays a sound unless it is already playing.</p>\n\n",
      "PostDate": "2018-11-06T10:31:39.2420375Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "a0358dbb-cf70-49e8-b1cb-c235cebe7971",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "It seems like there is a way to check if any sound at all is currently playing via JS, but I can't remember what it is...\r\n\r\nI shall research this and return.",
      "EditableFormat": "markdown",
      "HTML": "<p>It seems like there is a way to check if any sound at all is currently playing via JS, but I can't remember what it is...</p>\n<p>I shall research this and return.</p>\n\n",
      "PostDate": "2018-11-06T15:51:34.3385257Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "94a539e1-864a-44bf-ab69-e8c77fa26106",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I found this:\r\n\r\nhttps://www.w3schools.com/tags/av_prop_ended.asp\r\n\r\nBut this only checks if a specific element has ended, not all sounds.",
      "EditableFormat": "markdown",
      "HTML": "<p>I found this:</p>\n<p>https://www.w3schools.com/tags/av_prop_ended.asp</p>\n<p>But this only checks if a specific element has ended, not all sounds.</p>\n\n",
      "PostDate": "2018-11-06T18:57:15.140897Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "575d65af-2d5b-4b5c-ae1b-1de18a24fc51",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "What about using the two functions I posted above and adding ```game.playingsound = false``` to the script to run after the sound is finished playing?\r\n\r\nThen, you could check the game.playingsound boolean, but I don't know what that would accomplish when using the \"wait\" during ```play sound```.\r\n\r\nHere's a silly example (you'll have to substitute my audio file with one of your own to test it):\r\n\r\n```\r\n<!--Saved by Quest 5.7.6606.27193-->\r\n<asl version=\"550\">\r\n  <include ref=\"English.aslx\" />\r\n  <include ref=\"Core.aslx\" />\r\n  <game name=\"SoundCheck\">\r\n    <gameid>bed3b089-d406-4330-a522-bd10fc946cca</gameid>\r\n    <version>1.2</version>\r\n    <firstpublished>2018</firstpublished>\r\n    <commandpane />\r\n    <feature_advancedscripts />\r\n    <inituserinterface type=\"script\">\r\n      JS.setCommands (\"test\")\r\n    </inituserinterface>\r\n  </game>\r\n  <object name=\"room\">\r\n    <inherit name=\"editor_room\" />\r\n    <object name=\"player\">\r\n      <inherit name=\"editor_object\" />\r\n      <inherit name=\"editor_player\" />\r\n    </object>\r\n  </object>\r\n  <command name=\"test_cmd\">\r\n    <pattern>test</pattern>\r\n    <script>\r\n      PlaySoundCustom (\"themp3.mp3\", true, false)\r\n    </script>\r\n  </command>\r\n  <function name=\"PlaySoundCustom\" parameters=\"filename, wait, loop\">\r\n    game.playingsound = true\r\n    msg (\"DEBUGGING:  Sound playing: \" + GetBoolean (game, \"playingsound\"))\r\n    play sound (filename, wait, loop)\r\n    game.playingsound = false\r\n    msg (\"DEBUGGING:  Sound playing: \" + GetBoolean (game, \"playingsound\"))\r\n  </function>\r\n  <function name=\"StopSound\">\r\n    game.playingsound = false\r\n    stop sound\r\n  </function>\r\n</asl>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>What about using the two functions I posted above and adding <code>game.playingsound = false</code> to the script to run after the sound is finished playing?</p>\n<p>Then, you could check the game.playingsound boolean, but I don't know what that would accomplish when using the \"wait\" during <code>play sound</code>.</p>\n<p>Here's a silly example (you'll have to substitute my audio file with one of your own to test it):</p>\n<pre><code>&lt;!--Saved by Quest 5.7.6606.27193--&gt;\n&lt;asl version=\"550\"&gt;\n  &lt;include ref=\"English.aslx\" /&gt;\n  &lt;include ref=\"Core.aslx\" /&gt;\n  &lt;game name=\"SoundCheck\"&gt;\n    &lt;gameid&gt;bed3b089-d406-4330-a522-bd10fc946cca&lt;/gameid&gt;\n    &lt;version&gt;1.2&lt;/version&gt;\n    &lt;firstpublished&gt;2018&lt;/firstpublished&gt;\n    &lt;commandpane /&gt;\n    &lt;feature_advancedscripts /&gt;\n    &lt;inituserinterface type=\"script\"&gt;\n      JS.setCommands (\"test\")\n    &lt;/inituserinterface&gt;\n  &lt;/game&gt;\n  &lt;object name=\"room\"&gt;\n    &lt;inherit name=\"editor_room\" /&gt;\n    &lt;object name=\"player\"&gt;\n      &lt;inherit name=\"editor_object\" /&gt;\n      &lt;inherit name=\"editor_player\" /&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command name=\"test_cmd\"&gt;\n    &lt;pattern&gt;test&lt;/pattern&gt;\n    &lt;script&gt;\n      PlaySoundCustom (\"themp3.mp3\", true, false)\n    &lt;/script&gt;\n  &lt;/command&gt;\n  &lt;function name=\"PlaySoundCustom\" parameters=\"filename, wait, loop\"&gt;\n    game.playingsound = true\n    msg (\"DEBUGGING:  Sound playing: \" + GetBoolean (game, \"playingsound\"))\n    play sound (filename, wait, loop)\n    game.playingsound = false\n    msg (\"DEBUGGING:  Sound playing: \" + GetBoolean (game, \"playingsound\"))\n  &lt;/function&gt;\n  &lt;function name=\"StopSound\"&gt;\n    game.playingsound = false\n    stop sound\n  &lt;/function&gt;\n&lt;/asl&gt;\n</code></pre>\n\n",
      "PostDate": "2018-11-06T22:51:31.6673016Z",
      "LastEditDate": "2018-11-06T23:45:37.1279592Z",
      "link": null
    },
    {
      "PostId": "2b7db6c2-f482-4e55-be8f-14221bb3d8d1",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You see, I may as well just set a flag after every sound effect is played, then my turnscript will restart background sounds or not, depending on the state of the flag.  Ideally, my turnscript could first call a JS function to check if any sound is currently playing or not, instead of depending on flags to signify this.  If JS is not feasible, I'll just set flags then.",
      "EditableFormat": "markdown",
      "HTML": "<p>You see, I may as well just set a flag after every sound effect is played, then my turnscript will restart background sounds or not, depending on the state of the flag.  Ideally, my turnscript could first call a JS function to check if any sound is currently playing or not, instead of depending on flags to signify this.  If JS is not feasible, I'll just set flags then.</p>\n\n",
      "PostDate": "2018-11-06T23:50:34.8035406Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "baf6c746-97b9-4669-b68c-73ca4b80e0b7",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can do that for online players, but not for desktop users.  I don't really know how the desktop player uses Chromium to play the audio with the ```play sound``` script (and I tried really hard to learn for a long time), but I'm pretty sure you can't access it from within the game.\r\n\r\n...but, if you use HTML to load the audio rather then the ```play sound``` script, you can do damned near anything you want using Javascript.  (This is also the case with my library, which uses HTML and JS, but has it all set up for you to use the GUI to do everything.)",
      "EditableFormat": "markdown",
      "HTML": "<p>You can do that for online players, but not for desktop users.  I don't really know how the desktop player uses Chromium to play the audio with the <code>play sound</code> script (and I tried really hard to learn for a long time), but I'm pretty sure you can't access it from within the game.</p>\n<p>...but, if you use HTML to load the audio rather then the <code>play sound</code> script, you can do damned near anything you want using Javascript.  (This is also the case with my library, which uses HTML and JS, but has it all set up for you to use the GUI to do everything.)</p>\n\n",
      "PostDate": "2018-11-07T00:39:42.0122015Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9b65d1e8-3d96-4fbe-b262-e21d3603a4dc",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Ok, the next game I make, I will use your audio/vid library, KV.  Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>Ok, the next game I make, I will use your audio/vid library, KV.  Thanks.</p>\n\n",
      "PostDate": "2018-11-07T10:33:00.1992838Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8aeabc3a-a11f-496b-9f30-b4644b4257d7",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I didn't mean to sound glib : )",
      "EditableFormat": "markdown",
      "HTML": "<p>I didn't mean to sound glib : )</p>\n\n",
      "PostDate": "2018-11-07T19:02:11.1689052Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "abe1c035-8e46-41b7-801e-085c072f6956",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Well... you did.\r\n\r\nJust kidding!  I wouldn't add a library to a game unless I was in the early stages of writing.  You're cool (and the gang).",
      "EditableFormat": "markdown",
      "HTML": "<p>Well... you did.</p>\n<p>Just kidding!  I wouldn't add a library to a game unless I was in the early stages of writing.  You're cool (and the gang).</p>\n\n",
      "PostDate": "2018-11-07T23:14:22.8129525Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
