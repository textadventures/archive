{
  "Topic": {
    "TopicId": "t8xartaankydcgxudvh0zg",
    "ForumId": "10",
    "Title": "Rookie trying to figure an eating issue out. ",
    "LastUpdated": "2018-10-04T21:01:36.8830372Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "2e9cb01a-3096-46e1-af22-3c5a7702dc81",
      "UserId": 372959,
      "Username": "MrNichols",
      "AvatarUrl": "https://secure.gravatar.com/avatar/1d69c314d414d9a6e7562bb6cd36a91d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello all, I'm a teacher trying to make a simulation for my students. I'm a total rookie to this program and struggling my way through some issues.  Most of them, I've figured out.  However, this one has stumped me for a week now.\r\n\r\nIn my game, when someone \"hunts\", \"digs\", or \"fishes\" for an item, I have programed an item in an \"offset\" room to clone itself and place itself in the inventory.  When a character eats an item, then the next time they try to hunt, dig, or fish I get this message: \r\n\r\nError running script: Unknown object or variable 'oysters'\r\n\r\nI suspect that my character is eating the object in the \"offset\" room and not the one in inventory, but I can't figure out how to confirm that.  \r\n\r\nAny help would be greatly appreciated.  However, please remember that I am very new to this.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello all, I'm a teacher trying to make a simulation for my students. I'm a total rookie to this program and struggling my way through some issues.  Most of them, I've figured out.  However, this one has stumped me for a week now.</p>\n<p>In my game, when someone \"hunts\", \"digs\", or \"fishes\" for an item, I have programed an item in an \"offset\" room to clone itself and place itself in the inventory.  When a character eats an item, then the next time they try to hunt, dig, or fish I get this message:</p>\n<p>Error running script: Unknown object or variable 'oysters'</p>\n<p>I suspect that my character is eating the object in the \"offset\" room and not the one in inventory, but I can't figure out how to confirm that.</p>\n<p>Any help would be greatly appreciated.  However, please remember that I am very new to this.</p>\n\n",
      "PostDate": "2018-10-04T21:01:36.8830372Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b0f72556-6e12-42cb-a3d8-16b4095d0cd0",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "A possible very simple solution is to skip cloning altogether and just move the object into the other room when “eaten”.  Players will never know the difference.\r\n\r\nLet me know if that works.",
      "EditableFormat": "markdown",
      "HTML": "<p>A possible very simple solution is to skip cloning altogether and just move the object into the other room when “eaten”.  Players will never know the difference.</p>\n<p>Let me know if that works.</p>\n\n",
      "PostDate": "2018-10-05T04:11:39.4934017Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "02e014af-b322-416a-a648-80941e6abd77",
      "UserId": 277074,
      "Username": "Dcoder",
      "AvatarUrl": "http://i.imgur.com/d9UrZ6lb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Maybe you're moving the original object (presumably \"oysters\") into the inventory (and then eating that), rather than the clone (\"oysters1\")?\r\n\r\nYou can put in a temporary script to print an expression (oysters.parent) after the action happens.  This will tell you which object contains \"oysters\".  If \"oysters\" is removed/destroyed, the parent should be \"null\".  And, of course, if the parent is the player, then the oysters are in the inventory.",
      "EditableFormat": "markdown",
      "HTML": "<p>Maybe you're moving the original object (presumably \"oysters\") into the inventory (and then eating that), rather than the clone (\"oysters1\")?</p>\n<p>You can put in a temporary script to print an expression (oysters.parent) after the action happens.  This will tell you which object contains \"oysters\".  If \"oysters\" is removed/destroyed, the parent should be \"null\".  And, of course, if the parent is the player, then the oysters are in the inventory.</p>\n\n",
      "PostDate": "2018-10-05T06:38:36.9191917Z",
      "LastEditDate": "2018-10-05T06:53:45.2256769Z",
      "link": null
    },
    {
      "PostId": "f2f1f3f8-f23f-4ece-90f9-2b0c7bda3845",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "That should work. Can you post the cloning code so we can see why it isn't? (And the eat code if you're not using the standard consumable feature)\r\n\r\nYou can copy the script in code view, and paste on the forum by placing it between two lines of three backticks:\r\n````\r\n```\r\nCode goes here\r\n```\r\n````",
      "EditableFormat": "markdown",
      "HTML": "<p>That should work. Can you post the cloning code so we can see why it isn't? (And the eat code if you're not using the standard consumable feature)</p>\n<p>You can copy the script in code view, and paste on the forum by placing it between two lines of three backticks:</p>\n<pre><code>```\nCode goes here\n```\n</code></pre>\n\n",
      "PostDate": "2018-10-05T08:03:51.03348Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b3f89971-ace7-4fa6-b3c6-57643cf7e15a",
      "UserId": 372959,
      "Username": "MrNichols",
      "AvatarUrl": "https://secure.gravatar.com/avatar/1d69c314d414d9a6e7562bb6cd36a91d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm using the standard consumable feature.  I'm using the web based program.  \r\n\r\nHere's what the code looks like:\r\n\r\nCloneObject (Venison)\r\nAddToInventory (Venison)\r\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm using the standard consumable feature.  I'm using the web based program.</p>\n<p>Here's what the code looks like:</p>\n<p>CloneObject (Venison)<br>\nAddToInventory (Venison)<br>\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")</p>\n\n",
      "PostDate": "2018-10-07T17:36:24.9386627Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "6698dd6f-7101-4e83-835a-26678c7bd723",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yeah; CloneObject creates a new object (probably named `Venison1`) with the alias Venison.\r\nAddToInventory moves the object named `Venison` (the original) to the player's inventory.\r\n\r\nThat code should be:\r\n```\r\nnewVenison = CloneObject (Venison)\r\nAddToInventory (newVenison)\r\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")\r\n```\r\n\r\n(`newVenison` in this case is a variable containing the name of the clone)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yeah; CloneObject creates a new object (probably named <code>Venison1</code>) with the alias Venison.<br>\nAddToInventory moves the object named <code>Venison</code> (the original) to the player's inventory.</p>\n<p>That code should be:</p>\n<pre><code>newVenison = CloneObject (Venison)\nAddToInventory (newVenison)\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")\n</code></pre>\n<p>(<code>newVenison</code> in this case is a variable containing the name of the clone)</p>\n\n",
      "PostDate": "2018-10-07T17:40:26.8471512Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1e3f4e7d-ee96-488f-8934-8dc377cc49f8",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Alternatively, you could use:\r\n```\r\nCloneObjectAndMove (Venison, game.pov)\r\n```\r\n(`game.pov` is an object attribute containing the name of the player object. Moving an object there places it in the inventory)",
      "EditableFormat": "markdown",
      "HTML": "<p>Alternatively, you could use:</p>\n<pre><code>CloneObjectAndMove (Venison, game.pov)\n</code></pre>\n<p>(<code>game.pov</code> is an object attribute containing the name of the player object. Moving an object there places it in the inventory)</p>\n\n",
      "PostDate": "2018-10-07T17:42:27.5098034Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "edaa596b-9431-4196-b11d-2ab97911a90c",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, updated/posted)\r\n\r\n-------------\r\n\r\nthe 'name' String Attribute of an Object is its ID, so the 'name' of Objects must be unique (just like DNA, no two Objects can have the same 'name' String Attribute)\r\n\r\nso, when you clone an Object:\r\n\r\noriginal Object's 'name' String Attribute: deer\r\n\r\ncloned Objects' 'name' String Attributes: deer2, deer3, deer4, etc etc etc\r\n\r\nso, your code:\r\n\r\n```\r\nCloneObject (Venison)\r\nAddToInventory (Venison)\r\n```\r\n\r\nthe 'CloneObject (OBJECT)' Function clones the 'Venison' (original) Object (each time you clone it): Venison2, Venison3, etc etc etc\r\n\r\nbut your 'AddToInventory (OBJECT)' Function, is moving your original Object 'Venison', into your inventory, and not your cloned Objects 'Venison2, Venison3, etc etc etc'\r\n\r\nassuming, everything else with the code of your game is correct for what and how you're trying to do what you want, then we just need to make a simple change to the code you provided us:\r\n\r\n```\r\nCloneObjectAndMove (Venison, player) // this is assuming you're using and didn't change the name of the default 'player' Player Object), otherwise, change the 'player' to whatever you renamed it as, or you can use this too: CloneObjectAndMove (Venison, game.pov)\r\n\r\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")\r\n```\r\n\r\nas seen above, there's already a built-in helper Function to move the cloned Object:\r\n\r\nhttp://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobjectandmove.html\r\n\r\nif you want to generally see how the 'CloneObjectAndMove (OBJECT)' helper Function works:\r\n\r\n```\r\nobject_variable = CloneObject (Venison)\r\nAddToInventory (object_variable)\r\n```\r\n\r\nas we create our cloned Object, it ('s location/address) is being stored into an Object (pointer/reference) Variable, as then we can use that Object (pointer/reference) Variable, to do whatever, in this case, to move the cloned Object to our inventory\r\n\r\n-----\r\n\r\nsomething a bit more fancy that is usually useful when working with cloned Objects, is being able to know/reference back to the cloned Objects' original Object, which can be done via the same coding trick above:\r\n\r\n```\r\n// this = Venison\r\n\r\nobject_variable = CloneObject (this)\r\nobject_variable.original_object = this\r\n\r\nmsg (\"Cloned Object: \" + object_variable.name)\r\nmsg (\"Original Object: \" + object_variable.original_object.name)\r\n\r\n// output:\r\n\r\nCloned Object: Venison2 // for the first time its cloned\r\nOriginal Object: Venison\r\n```\r\n\r\nthe 'object_variable.original_object = this' creates an Object (reference/pointer) Attribute (which I named it as 'original_object') on the cloned Objects, storing a pointer/reference (the location/address) of/to the cloned Object's original Object ('Venison')",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, updated/posted)</p>\n<hr>\n<p>the 'name' String Attribute of an Object is its ID, so the 'name' of Objects must be unique (just like DNA, no two Objects can have the same 'name' String Attribute)</p>\n<p>so, when you clone an Object:</p>\n<p>original Object's 'name' String Attribute: deer</p>\n<p>cloned Objects' 'name' String Attributes: deer2, deer3, deer4, etc etc etc</p>\n<p>so, your code:</p>\n<pre><code>CloneObject (Venison)\nAddToInventory (Venison)\n</code></pre>\n<p>the 'CloneObject (OBJECT)' Function clones the 'Venison' (original) Object (each time you clone it): Venison2, Venison3, etc etc etc</p>\n<p>but your 'AddToInventory (OBJECT)' Function, is moving your original Object 'Venison', into your inventory, and not your cloned Objects 'Venison2, Venison3, etc etc etc'</p>\n<p>assuming, everything else with the code of your game is correct for what and how you're trying to do what you want, then we just need to make a simple change to the code you provided us:</p>\n<pre><code>CloneObjectAndMove (Venison, player) // this is assuming you're using and didn't change the name of the default 'player' Player Object), otherwise, change the 'player' to whatever you renamed it as, or you can use this too: CloneObjectAndMove (Venison, game.pov)\n\nmsg (\"You have found some deer. They should be helpful in feeding the colony. \")\n</code></pre>\n<p>as seen above, there's already a built-in helper Function to move the cloned Object:</p>\n<p>http://docs.textadventures.co.uk/quest/functions/corelibrary/cloneobjectandmove.html</p>\n<p>if you want to generally see how the 'CloneObjectAndMove (OBJECT)' helper Function works:</p>\n<pre><code>object_variable = CloneObject (Venison)\nAddToInventory (object_variable)\n</code></pre>\n<p>as we create our cloned Object, it ('s location/address) is being stored into an Object (pointer/reference) Variable, as then we can use that Object (pointer/reference) Variable, to do whatever, in this case, to move the cloned Object to our inventory</p>\n<hr>\n<p>something a bit more fancy that is usually useful when working with cloned Objects, is being able to know/reference back to the cloned Objects' original Object, which can be done via the same coding trick above:</p>\n<pre><code>// this = Venison\n\nobject_variable = CloneObject (this)\nobject_variable.original_object = this\n\nmsg (\"Cloned Object: \" + object_variable.name)\nmsg (\"Original Object: \" + object_variable.original_object.name)\n\n// output:\n\nCloned Object: Venison2 // for the first time its cloned\nOriginal Object: Venison\n</code></pre>\n<p>the 'object_variable.original_object = this' creates an Object (reference/pointer) Attribute (which I named it as 'original_object') on the cloned Objects, storing a pointer/reference (the location/address) of/to the cloned Object's original Object ('Venison')</p>\n\n",
      "PostDate": "2018-10-07T18:16:08.2994832Z",
      "LastEditDate": "2018-10-07T18:19:55.7621681Z",
      "link": null
    },
    {
      "PostId": "fa8e65b6-9f63-428c-b5e6-7ec884fcaea1",
      "UserId": 372959,
      "Username": "MrNichols",
      "AvatarUrl": "https://secure.gravatar.com/avatar/1d69c314d414d9a6e7562bb6cd36a91d?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thank you all very much.  I used the CloneObjectAndMove (Venison, game.pov) option and it worked like a charm.  Thank you for explaining everything so clearly.  Not only did it fix the issue, but I have a better understanding of the mechanics.  I am very grateful. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Thank you all very much.  I used the CloneObjectAndMove (Venison, game.pov) option and it worked like a charm.  Thank you for explaining everything so clearly.  Not only did it fix the issue, but I have a better understanding of the mechanics.  I am very grateful.</p>\n\n",
      "PostDate": "2018-10-09T01:56:11.1237104Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
