{
  "Topic": {
    "TopicId": "iez1hfc7euefft6bgko9xq",
    "ForumId": "10",
    "Title": "How can I change the attributes of a character object through object scripts? ",
    "LastUpdated": "2020-05-14T14:47:48.8938041Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "48c02278-e6e2-4170-be3e-74f5ffa7b12f",
      "UserId": 481633,
      "Username": "Formesta",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "How can I change character object actions/room descriptions,  \"look at\" descriptions, and other things, such as creating new verbs for characters, using object scripts alone?  Is that possible? Or will I have to clone characters, put them in limbo, and wait for a script to switch them out for a carbon copy with new verbs and descriptions? ",
      "EditableFormat": "markdown",
      "HTML": "<p>How can I change character object actions/room descriptions,  \"look at\" descriptions, and other things, such as creating new verbs for characters, using object scripts alone?  Is that possible? Or will I have to clone characters, put them in limbo, and wait for a script to switch them out for a carbon copy with new verbs and descriptions?</p>\n\n",
      "PostDate": "2020-05-14T14:47:48.8938041Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "186c2f83-00f2-48f4-9e37-02be33be528f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can easily change an object's attributes in script. It looks something like:\r\n```\r\nobject.attribute = new value\r\n```\r\nFor example, to change an object's \"look at\" description after it's been burned, you would do:\r\n```\r\nteddybear.look = \"A badly burned mass of fur that could once have been a teddy bear.\"\r\n```\r\n\r\nObjects' \"look at\" descriptions are stored in the `look` attribute. The verbs that display when they are clicked on are in a stringlist attribute called `displayverbs` (or `inventoryverbs` when the object is held). A room's description is the `description` attribute, and the name that appears for an object is the `alias` attribute.\r\n\r\nCreating verbs isn't so easy; but that's rarely a good idea anyway. Instead, set an attribute to store what state the object is in. Within the verb's script, check the value of that attribute, and use that to either do the verb or display a message telling the player why they can't. You can also remove the verb from `displayverbs` or from `generatedverbslist` to stop it from displaying; but it's a good idea to also have the verb check, just in case the player types it anyway.\r\n\r\nYou *can* change what a verb does by setting an attribute with the same name as the verb (it can either be a scriptdictionary, a script, or a string). But adding or removing a verb by this method won't change the menus or verb buttons that are displayed.\r\n\r\nHope that covers everything.",
      "EditableFormat": "markdown",
      "HTML": "<p>You can easily change an object's attributes in script. It looks something like:</p>\n<pre><code>object.attribute = new value\n</code></pre>\n<p>For example, to change an object's \"look at\" description after it's been burned, you would do:</p>\n<pre><code>teddybear.look = \"A badly burned mass of fur that could once have been a teddy bear.\"\n</code></pre>\n<p>Objects' \"look at\" descriptions are stored in the <code>look</code> attribute. The verbs that display when they are clicked on are in a stringlist attribute called <code>displayverbs</code> (or <code>inventoryverbs</code> when the object is held). A room's description is the <code>description</code> attribute, and the name that appears for an object is the <code>alias</code> attribute.</p>\n<p>Creating verbs isn't so easy; but that's rarely a good idea anyway. Instead, set an attribute to store what state the object is in. Within the verb's script, check the value of that attribute, and use that to either do the verb or display a message telling the player why they can't. You can also remove the verb from <code>displayverbs</code> or from <code>generatedverbslist</code> to stop it from displaying; but it's a good idea to also have the verb check, just in case the player types it anyway.</p>\n<p>You <em>can</em> change what a verb does by setting an attribute with the same name as the verb (it can either be a scriptdictionary, a script, or a string). But adding or removing a verb by this method won't change the menus or verb buttons that are displayed.</p>\n<p>Hope that covers everything.</p>\n\n",
      "PostDate": "2020-05-14T16:42:39.555654Z",
      "LastEditDate": "2020-05-14T16:44:28.3857547Z",
      "link": null
    },
    {
      "PostId": "47a7236f-5a2a-4047-ab61-1ad82d167d28",
      "UserId": 481633,
      "Username": "Formesta",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Unfortunately I only know how to use the non-code version of Quest, so much interpretation must be done. ",
      "EditableFormat": "markdown",
      "HTML": "<p>Unfortunately I only know how to use the non-code version of Quest, so much interpretation must be done.</p>\n\n",
      "PostDate": "2020-05-15T06:18:48.0706487Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8402a244-2440-4630-ab66-6c3d6c59ea57",
      "UserId": 481633,
      "Username": "Formesta",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@mrangel This actually ended up creating more questions than answers ;(\r\n\r\n",
      "EditableFormat": "markdown",
      "HTML": "<p>@mrangel This actually ended up creating more questions than answers ;(</p>\n\n",
      "PostDate": "2020-05-16T03:37:19.2202716Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
