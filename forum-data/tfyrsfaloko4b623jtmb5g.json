{
  "Topic": {
    "TopicId": "tfyrsfaloko4b623jtmb5g",
    "ForumId": "10",
    "Title": "If options in text?",
    "LastUpdated": "2017-06-24T13:27:28.3223928Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "6ab92bcb-f921-4fb2-9108-cfbf5cbb97a4",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Heya \r\n\r\nJust wondering if there's a way to use an If style command in messages. My issue is more trying to call say, player attributes but not necessarily just have the word come up. Like I have player.sex \"female\" but when I use  \"you are a {player.sex}\" it's going to come up with female rather than say \"woman\". ",
      "EditableFormat": "markdown",
      "HTML": "<p>Heya</p>\n<p>Just wondering if there's a way to use an If style command in messages. My issue is more trying to call say, player attributes but not necessarily just have the word come up. Like I have player.sex \"female\" but when I use  \"you are a {player.sex}\" it's going to come up with female rather than say \"woman\".</p>\n\n",
      "PostDate": "2017-06-24T13:27:28.3223928Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b897a876-fec8-4b62-a517-31136bd5c075",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "there's the built-in 'gender' and 'article' String Attributes for handling 'he/she/it' and 'him/her/it', and here's the links of it:\r\n\r\nhttp://docs.textadventures.co.uk/quest/attributes/gender.html\r\nhttp://docs.textadventures.co.uk/quest/attributes/article.html\r\n\r\nwhich is controlled by the built-in 'male' and 'female' (and etc, see link below) Object Types:\r\n\r\nhttp://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom: object types defined by the core.aslx)\r\n\r\n(there's a lot of coding involved, which I don't know, so there's a lot more going on than what I'm just trying to demonstrate and in giving an example of it)\r\n\r\n```\r\n<type name=\"male\">\r\n</type>\r\n\r\n<type name=\"female\">\r\n</type>\r\n\r\n<object name=\"joe\">\r\n  <inherit name=\"male\" />\r\n</object>\r\n\r\n<object name=\"jane\">\r\n  <inherit name=\"female\" />\r\n</object>\r\n\r\n// ----------------\r\n\r\nmsg (\"Joe is a {joe.gender}.\")\r\n// output: Joe is a he.\r\n\r\nmsg (\"Joe is a {joe.article}.\")\r\n// output: Joe is a him.\r\n\r\nmsg (\"Jane is a {jane.gender}.\")\r\n// output: Jane is a she.\r\n\r\nmsg (\"Jane is a {jane.article}.\")\r\n// output: Jane is a her.\r\n```\r\n\r\n---------\r\n\r\nhowever... I don't think there's any built-in stuff for doing 'man/woman/lady/gentleman/lord/mister/misses/mistress/etc/ma'am/boy/girl' and/or other such/like stuff\r\n\r\nand to try to code in the handling of this stuff is very advanced coding... when/how do you tell quest/computer to use 'man' vs 'woman' ??? This is advanced coding stuff, beyond my ability. Alex and co coded in this advanced coding stuff for handling 'he/she/him/her/it' for us, but unless we're good programmers too, we can't program in our own handling for other such stuff (well probably Pixie and the other good programmers here can... but that's not me, lol).\r\n\r\ngrammer parsing coding, for example (I think this is true for the latin/romantic languages and maybe more languages too):\r\n\r\nif name/word ends in an 'o', it's/return: \"male\"\r\nif name/word ends in an 'a', it's/return: \"female\"\r\n\r\netc... though trying to code the parsing english grammer... is some complex stuff... lol\r\n\r\nhow would you tell quest to return \"male\" for \"joe or joel\" and \"female\" for \"jane or joelle\" for an example ???\r\n\r\nwell, maybe if you're an English Major and/or linguist, crafting the grammer parsing coding would be easy, lol... meh\r\n\r\n----------\r\n\r\nso.... the easiest thing to do would to just make additional String Attribute(s) for each of them:\r\n\r\nplayer.sex = \"(male/female)\"\r\nplayer.adult_gender = \"(man/woman)\" // we don't want to use 'gender' as we'd be wiping out  the built-in 'gender' that handles for us: he/she/it\r\nplayer.minor_gender = \"(boy/girl)\" // we don't want to use 'gender' as we'd be wiping out  the built-in 'gender' that handles for us: he/she/it\r\netc etc etc\r\n\r\nan example:\r\n\r\nplayer.alias = \"HK\"\r\nplayer.sex = \"male\"\r\n// player.gender = (quest's built-in coding sets it automatically for you, once you have the 'male' Object Type be an Inherited Attribute of the 'player' Player Object, either via code or through the GUI/Editor's options/controls)\r\n// same as the above for 'player.article'\r\nplayer.adult_gender = \"man\"\r\nplayer.minor_gender = \"boy\"\r\n\r\nmsg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.adult_gender} and a {player.article}.\")\r\n// output example: HK is a male. He is a man and a him.\r\n\r\nmsg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.minor_gender} and a {player.article}.\")\r\n// output example: HK is a male. He is a boy and a him.\r\n\r\n----------\r\n\r\nplayer.alias = \"HK\"\r\nplayer.sex = \"female\"\r\n// player.gender = (quest's built-in coding sets it automatically for you, once you have the 'female' Object Type be an Inherited Attribute of the 'player' Player Object, either via code or through the GUI/Editor's options/controls)\r\n// same as the above for 'player.article'\r\nplayer.adult_gender = \"woman\"\r\nplayer.minor_gender = \"girl\"\r\n\r\nmsg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.adult_gender} and a {player.article}.\")\r\n// output example: HK is a female. She is a woman and a her.\r\n\r\nmsg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.minor_gender} and a {player.article}.\")\r\n// output example: HK is a female. She is a girl and a her.\r\n\r\n--------\r\n\r\nif you need help with anything, I'll try as best as I can, but I don't really know too much into this built-in handling of this type of stuff as it's probably beyond my ability.",
      "EditableFormat": "markdown",
      "HTML": "<p>there's the built-in 'gender' and 'article' String Attributes for handling 'he/she/it' and 'him/her/it', and here's the links of it:</p>\n<p>http://docs.textadventures.co.uk/quest/attributes/gender.html<br>\nhttp://docs.textadventures.co.uk/quest/attributes/article.html</p>\n<p>which is controlled by the built-in 'male' and 'female' (and etc, see link below) Object Types:</p>\n<p>http://docs.textadventures.co.uk/quest/elements/object.html (scroll down to the very bottom: object types defined by the core.aslx)</p>\n<p>(there's a lot of coding involved, which I don't know, so there's a lot more going on than what I'm just trying to demonstrate and in giving an example of it)</p>\n<pre><code>&lt;type name=\"male\"&gt;\n&lt;/type&gt;\n\n&lt;type name=\"female\"&gt;\n&lt;/type&gt;\n\n&lt;object name=\"joe\"&gt;\n  &lt;inherit name=\"male\" /&gt;\n&lt;/object&gt;\n\n&lt;object name=\"jane\"&gt;\n  &lt;inherit name=\"female\" /&gt;\n&lt;/object&gt;\n\n// ----------------\n\nmsg (\"Joe is a {joe.gender}.\")\n// output: Joe is a he.\n\nmsg (\"Joe is a {joe.article}.\")\n// output: Joe is a him.\n\nmsg (\"Jane is a {jane.gender}.\")\n// output: Jane is a she.\n\nmsg (\"Jane is a {jane.article}.\")\n// output: Jane is a her.\n</code></pre>\n<hr>\n<p>however... I don't think there's any built-in stuff for doing 'man/woman/lady/gentleman/lord/mister/misses/mistress/etc/ma'am/boy/girl' and/or other such/like stuff</p>\n<p>and to try to code in the handling of this stuff is very advanced coding... when/how do you tell quest/computer to use 'man' vs 'woman' ??? This is advanced coding stuff, beyond my ability. Alex and co coded in this advanced coding stuff for handling 'he/she/him/her/it' for us, but unless we're good programmers too, we can't program in our own handling for other such stuff (well probably Pixie and the other good programmers here can... but that's not me, lol).</p>\n<p>grammer parsing coding, for example (I think this is true for the latin/romantic languages and maybe more languages too):</p>\n<p>if name/word ends in an 'o', it's/return: \"male\"<br>\nif name/word ends in an 'a', it's/return: \"female\"</p>\n<p>etc... though trying to code the parsing english grammer... is some complex stuff... lol</p>\n<p>how would you tell quest to return \"male\" for \"joe or joel\" and \"female\" for \"jane or joelle\" for an example ???</p>\n<p>well, maybe if you're an English Major and/or linguist, crafting the grammer parsing coding would be easy, lol... meh</p>\n<hr>\n<p>so.... the easiest thing to do would to just make additional String Attribute(s) for each of them:</p>\n<p>player.sex = \"(male/female)\"<br>\nplayer.adult_gender = \"(man/woman)\" // we don't want to use 'gender' as we'd be wiping out  the built-in 'gender' that handles for us: he/she/it<br>\nplayer.minor_gender = \"(boy/girl)\" // we don't want to use 'gender' as we'd be wiping out  the built-in 'gender' that handles for us: he/she/it<br>\netc etc etc</p>\n<p>an example:</p>\n<p>player.alias = \"HK\"<br>\nplayer.sex = \"male\"<br>\n// player.gender = (quest's built-in coding sets it automatically for you, once you have the 'male' Object Type be an Inherited Attribute of the 'player' Player Object, either via code or through the GUI/Editor's options/controls)<br>\n// same as the above for 'player.article'<br>\nplayer.adult_gender = \"man\"<br>\nplayer.minor_gender = \"boy\"</p>\n<p>msg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.adult_gender} and a {player.article}.\")<br>\n// output example: HK is a male. He is a man and a him.</p>\n<p>msg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.minor_gender} and a {player.article}.\")<br>\n// output example: HK is a male. He is a boy and a him.</p>\n<hr>\n<p>player.alias = \"HK\"<br>\nplayer.sex = \"female\"<br>\n// player.gender = (quest's built-in coding sets it automatically for you, once you have the 'female' Object Type be an Inherited Attribute of the 'player' Player Object, either via code or through the GUI/Editor's options/controls)<br>\n// same as the above for 'player.article'<br>\nplayer.adult_gender = \"woman\"<br>\nplayer.minor_gender = \"girl\"</p>\n<p>msg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.adult_gender} and a {player.article}.\")<br>\n// output example: HK is a female. She is a woman and a her.</p>\n<p>msg (\"{player.alias} is a {player.sex}. {player.gender} is a {player.minor_gender} and a {player.article}.\")<br>\n// output example: HK is a female. She is a girl and a her.</p>\n<hr>\n<p>if you need help with anything, I'll try as best as I can, but I don't really know too much into this built-in handling of this type of stuff as it's probably beyond my ability.</p>\n\n",
      "PostDate": "2017-06-24T14:22:50.787288Z",
      "LastEditDate": "2017-06-24T14:53:29.1922232Z",
      "link": null
    },
    {
      "PostId": "27e800e0-9fa8-490a-b50f-f8a217b4b8ef",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "P.S.\r\n\r\nalso, in the GUI/Editor (obviously can be done in code too... but this is actually a situation where I know how to do something in the GUI/Editor, but NOT how to do it in code, lol), you got the text boxes for adding a 'prefix' and/or a 'suffix' for a quick way of doing 'woman/female/man/male/boy/girl/etc'\r\n\r\n-------\r\n\r\nand once you created your own/custom String Attributes:\r\n\r\nplayer.sex = \"(male/female)\"\r\nplayer.adult_gender = \"(man/woman)\"\r\nplayer.minor_gender = \"(boy/girl)\"\r\n\r\nyou can then use them with the 'if' (normal or the text process commands) scripting:\r\n\r\n(my example is using the normal scripting, but you can do the same with the text processor commands too)\r\n\r\n```\r\nif (player.sex = \"male\") {\r\n  msg (\"You are a male\")\r\n} else if (player.sex = \"female\") {\r\n  msg (\"You are a female\")\r\n} else {\r\n  msg (\"You are an it\")\r\n}\r\n\r\nif (player.adult_gender = \"man\") {\r\n  msg (\"You are a man\")\r\n} else if (player.adult_gender = \"woman\") {\r\n  msg (\"You are a woman\")\r\n} else {\r\n  msg (\"You are an it\")\r\n}\r\n\r\nif (player.minor_gender = \"boy\") {\r\n  msg (\"You are a boy\")\r\n} else if (player.minor_gender = \"girl\") {\r\n  msg (\"You are a girl\")\r\n} else {\r\n  msg (\"You are an it\")\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>P.S.</p>\n<p>also, in the GUI/Editor (obviously can be done in code too... but this is actually a situation where I know how to do something in the GUI/Editor, but NOT how to do it in code, lol), you got the text boxes for adding a 'prefix' and/or a 'suffix' for a quick way of doing 'woman/female/man/male/boy/girl/etc'</p>\n<hr>\n<p>and once you created your own/custom String Attributes:</p>\n<p>player.sex = \"(male/female)\"<br>\nplayer.adult_gender = \"(man/woman)\"<br>\nplayer.minor_gender = \"(boy/girl)\"</p>\n<p>you can then use them with the 'if' (normal or the text process commands) scripting:</p>\n<p>(my example is using the normal scripting, but you can do the same with the text processor commands too)</p>\n<pre><code>if (player.sex = \"male\") {\n  msg (\"You are a male\")\n} else if (player.sex = \"female\") {\n  msg (\"You are a female\")\n} else {\n  msg (\"You are an it\")\n}\n\nif (player.adult_gender = \"man\") {\n  msg (\"You are a man\")\n} else if (player.adult_gender = \"woman\") {\n  msg (\"You are a woman\")\n} else {\n  msg (\"You are an it\")\n}\n\nif (player.minor_gender = \"boy\") {\n  msg (\"You are a boy\")\n} else if (player.minor_gender = \"girl\") {\n  msg (\"You are a girl\")\n} else {\n  msg (\"You are an it\")\n}\n</code></pre>\n\n",
      "PostDate": "2017-06-24T14:32:36.3525736Z",
      "LastEditDate": "2017-06-24T14:42:37.7973504Z",
      "link": null
    },
    {
      "PostId": "16f06a0f-1969-433f-af38-8116921c687b",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "here's a link on trying to parse the grammer of human/\"natural\" languages with computers and/or coding (game making) software like quest:\r\n\r\nhttps://en.wikipedia.org/wiki/Natural_language_processing\r\n\r\nYIKES !!!! I got sooooo much more to learn... sighs...",
      "EditableFormat": "markdown",
      "HTML": "<p>here's a link on trying to parse the grammer of human/\"natural\" languages with computers and/or coding (game making) software like quest:</p>\n<p>https://en.wikipedia.org/wiki/Natural_language_processing</p>\n<p>YIKES !!!! I got sooooo much more to learn... sighs...</p>\n\n",
      "PostDate": "2017-06-24T15:02:51.7100731Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f3678daf-897f-4a62-b932-3167c6e4f473",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Like this:\r\n\r\n>  \"You are a {if player.sex=female:woman}{if player.sex<>female:man}.\"",
      "EditableFormat": "markdown",
      "HTML": "<p>Like this:</p>\n<blockquote>\n<p>\"You are a {if player.sex=female:woman}{if player.sex&lt;&gt;female:man}.\"</p>\n</blockquote>\n\n",
      "PostDate": "2017-06-24T15:16:54.1270778Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9efecc0-a7e5-4075-92e6-5db5306de6d5",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "wow... was I over-thinking this stuff... laughs. Going straight to trying to craft a parsing system for the human english language, lol",
      "EditableFormat": "markdown",
      "HTML": "<p>wow... was I over-thinking this stuff... laughs. Going straight to trying to craft a parsing system for the human english language, lol</p>\n\n",
      "PostDate": "2017-06-24T20:23:57.6455884Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cbde4376-1d8f-43c3-8ac5-6114d505af9f",
      "UserId": 160782,
      "Username": "JenniferKline",
      "AvatarUrl": "https://secure.gravatar.com/avatar/577a4cda5f04217fc7c986ba5b2da370?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yep, Pixie got it sorted! Great, thanks! But it's still an interesting read HK.\r\n\r\nAnother question that just came to my mind: is there a way to embed verbs in text like there is with {Command: Do this}? ",
      "EditableFormat": "markdown",
      "HTML": "<p>Yep, Pixie got it sorted! Great, thanks! But it's still an interesting read HK.</p>\n<p>Another question that just came to my mind: is there a way to embed verbs in text like there is with {Command: Do this}?</p>\n\n",
      "PostDate": "2017-06-24T23:12:14.9496645Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "9bb335a2-9880-44ba-9976-9bebcaf33e7c",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The `command` directive just sends the text to the Quest parser, so it will handle verbs too. As long as Quest understands \"Do this\" when you type at thecommand bar, it can be used as you have.",
      "EditableFormat": "markdown",
      "HTML": "<p>The <code>command</code> directive just sends the text to the Quest parser, so it will handle verbs too. As long as Quest understands \"Do this\" when you type at thecommand bar, it can be used as you have.</p>\n\n",
      "PostDate": "2017-06-25T07:37:41.688283Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7fa3ade4-7f18-41e2-b962-3da6efc2d286",
      "UserId": 304102,
      "Username": "Doctor Agon",
      "AvatarUrl": "http://i.imgur.com/Lzd3mOwb.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hi, trying to set this up as an alias for the 'object:log', but it doesn't seem to be working\r\n\r\n{if log.quantity=1:1 log} {if log.quantity<>1: {log.quantity} logs}\r\n\r\n{log.quantity} logs   //this works\r\n{if log.quantity=1:1 log}  // this works\r\n{if log.quantity=1: {log.quantity} logs}  // this works\r\n\r\nquantity is an attribute of the object with a maximum of 4. \r\n\r\nBasically, I want to be at a location, and you see '1 log' or you see '2 logs'. Taking a log will reduce the figure by 1, you'll only be able to carry one log at a time due to weight. Cloning the object might be the way to go, but not sure about dropping the object at 4 different locations. Or integrating them back together at one place. \r\n\r\nJust realised it doesn't print a number in the 'Inventory' or 'Places and Objects' panes.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hi, trying to set this up as an alias for the 'object:log', but it doesn't seem to be working</p>\n<p>{if log.quantity=1:1 log} {if log.quantity&lt;&gt;1: {log.quantity} logs}</p>\n<p>{log.quantity} logs   //this works<br>\n{if log.quantity=1:1 log}  // this works<br>\n{if log.quantity=1: {log.quantity} logs}  // this works</p>\n<p>quantity is an attribute of the object with a maximum of 4.</p>\n<p>Basically, I want to be at a location, and you see '1 log' or you see '2 logs'. Taking a log will reduce the figure by 1, you'll only be able to carry one log at a time due to weight. Cloning the object might be the way to go, but not sure about dropping the object at 4 different locations. Or integrating them back together at one place.</p>\n<p>Just realised it doesn't print a number in the 'Inventory' or 'Places and Objects' panes.</p>\n\n",
      "PostDate": "2017-07-05T21:56:58.5433848Z",
      "LastEditDate": "2017-07-05T23:50:47.635361Z",
      "link": null
    },
    {
      "PostId": "03173b54-7a33-426b-ae6e-22a22ea48305",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "When it displays an alias in the list of objects for a room, Quest does some trickery to be able to display links and verb menus, and I would guess that gets messed up if you put text processor directives in the alias. And as you say, the text processor is not even used for the panes on the right.\r\n\r\nBetter to change the alias as the number of logs changes (perhaps with a change script).",
      "EditableFormat": "markdown",
      "HTML": "<p>When it displays an alias in the list of objects for a room, Quest does some trickery to be able to display links and verb menus, and I would guess that gets messed up if you put text processor directives in the alias. And as you say, the text processor is not even used for the panes on the right.</p>\n<p>Better to change the alias as the number of logs changes (perhaps with a change script).</p>\n\n",
      "PostDate": "2017-07-06T07:04:03.1662909Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
