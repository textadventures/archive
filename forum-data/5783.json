{
  "Topic": {
    "TopicId": "5783",
    "ForumId": "10",
    "Title": "Listing Contents of a Pseudo-Container",
    "LastUpdated": "2015-12-27T18:37:26+00:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "40074",
      "UserId": 0,
      "Username": "Fyrdraca",
      "UserAvatar": null,
      "UserGravatar": "01acea3b88b789c3d4a884c2acaf8a53",
      "EditableText": "So I have an object with several integer attributes; let's say, for argument's sake, object “treasure_chest”, with integer attributes “doubloons”, “jewels”, “ingots”, “artifacts”, and “idols”. I want to list the attributes like this:\n“The treasure chest has 230 doubloons and 6 ingots,” or “The treasure chest has 17 jewels, 2 artifacts,  and 1 idol.” \nI want to create an algorithm where \n1) it won't list the attribute if it doesn't have a value above zero, \n2) it will adjust to the singular if the value is one, \n3) it will print a comma after the attribute in question UNLESS it's the LAST attribute to have a value above zero, in which case it will \n4) print a period after the attribute in question, and \n5) print an “and” before the number UNLESS it's the ONLY attribute to have a value above zero. \n6) Also, I've implemented a feature where it won't place a comma if two and only two attributes have values above zero.\nMy game has several of these pseudo-containers; I'll spare you the explanation for why they work with the dynamics of the game, sate to say that they do. This is what I have right now (which I assign to a command), and it does technically work, but it doesn't feel very elegant. My own code is hurting my eyes. Add onto that that some of these pseudo-containers will have dozens of these attributes, and you're looking at a lot of work. If anyone has a clever alternate approach, I'm all ears.\n\n[code:rvt8a2f5]// set to command &quot;check&quot;\nif ((treasure_chest&#46;doubloons = 0) and (treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n  msg (&quot;The treasure chest is empty&#46; Poor, disappointed pirate!&quot;)\n}\nelse {\n  inv_count = 0\n  if (treasure_chest&#46;doubloons &gt; 0) {\n    inv_count = inv_count + 1\n  }\n  if (treasure_chest&#46;jewels &gt; 0) {\n    inv_count = inv_count + 1\n  }\n  if (treasure_chest&#46;ingots &gt; 0) {\n    inv_count = inv_count + 1\n  }\n  if (treasure_chest&#46;artifacts &gt; 0) {\n    inv_count = inv_count + 1\n  }\n  if (treasure_chest&#46;idols &gt; 0) {\n    inv_count = inv_count + 1\n  }\n  OutputTextNoBr (&quot;Inside the chest you see &quot;)\n  if (treasure_chest&#46;doubloons &gt; 0) {\n    if (treasure_chest&#46;doubloons = 1) {\n      OutputTextNoBr (&quot;1 doubloon&quot;)\n      if ((treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n    else {\n      OutputTextNoBr (treasure_chest&#46;doubloons + &quot; doubloons&quot;)\n      if ((treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n  }\n  if (treasure_chest&#46;jewels &gt; 0) {\n    if (treasure_chest&#46;jewels = 1) {\n      if ((treasure_chest&#46;doubloons &gt; 0) and ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (&quot;1 jewel&quot;)\n      if ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n    else {\n      if ((treasure_chest&#46;doubloons &gt; 0) and ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (treasure_chest&#46;jewels + &quot; jewels&quot;)\n      if ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n  }\n  if (treasure_chest&#46;ingots &gt; 0) {\n    if (treasure_chest&#46;ingots = 1) {\n      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0)) and ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (&quot;1 ingot&quot;)\n      if ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n    else {\n      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0)) and ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (treasure_chest&#46;ingots + &quot; ingots&quot;)\n      if ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n  }\n  if (treasure_chest&#46;artifacts &gt; 0) {\n    if (treasure_chest&#46;artifacts = 1) {\n      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0)) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (&quot;1 artifact&quot;)\n      if (treasure_chest&#46;idols = 0) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n    else {\n      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0)) and (treasure_chest&#46;idols = 0)) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (treasure_chest&#46;artifacts + &quot; artifacts&quot;)\n      if (treasure_chest&#46;idols = 0) {\n        OutputTextNoBr (&quot;&#46;&quot;)\n      }\n      else {\n        if (inv_count &lt;&gt; 2) {\n          OutputTextNoBr (&quot;, &quot;)\n        }\n      }\n    }\n  }\n  if (treasure_chest&#46;idols &gt; 0) {\n    if (treasure_chest&#46;idols = 1) {\n      if ((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0) or (treasure_chest&#46;artifacts &gt; 0)) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (&quot;1 idol&#46;&quot;)\n    }\n    else {\n      if ((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0) or (treasure_chest&#46;artifacts &gt; 0)) {\n        OutputTextNoBr (&quot; and &quot;)\n      }\n      OutputTextNoBr (treasure_chest&#46;idols + &quot; idols&#46;&quot;)\n    }\n  }\n}[/code:rvt8a2f5]\n\nI'm including for you the bit of code I run at the beginning of this game to test this algorithm, which I also assign to a command.\n\n[code:rvt8a2f5]// set to command &quot;reroll&quot;\ndoubloons_dice = DiceRoll(&quot;1d5&quot;)\njewels_dice = DiceRoll(&quot;1d5&quot;)\ningots_dice = DiceRoll(&quot;1d5&quot;)\nartifacts_dice = DiceRoll(&quot;1d5&quot;)\nidols_dice = DiceRoll(&quot;1d5&quot;)\nif (doubloons_dice = 5){\n\ttreasure_chest&#46;doubloons = DiceRoll(&quot;1d5&quot;) + 1\n}\nelse if (doubloons_dice = 4){\n\ttreasure_chest&#46;doubloons = 1\n}\nelse{\n\ttreasure_chest&#46;doubloons = 0\n}\nif (jewels_dice = 5){\n\ttreasure_chest&#46;jewels = DiceRoll(&quot;1d5&quot;) + 1\n}\nelse if (jewels_dice = 4){\n\ttreasure_chest&#46;jewels = 1\n}\nelse{\n\ttreasure_chest&#46;jewels = 0\n}\nif (ingots_dice = 5){\n\ttreasure_chest&#46;ingots = DiceRoll(&quot;1d5&quot;) + 1\n}\nelse if (ingots_dice = 4){\n\ttreasure_chest&#46;ingots = 1\n}\nelse{\n\ttreasure_chest&#46;ingots = 0\n}\nif (artifacts_dice = 5){\n\ttreasure_chest&#46;artifacts = DiceRoll(&quot;1d5&quot;) + 1\n}\nelse if (artifacts_dice = 4){\n\ttreasure_chest&#46;artifacts = 1\n}\nelse{\n\ttreasure_chest&#46;artifacts = 0\n}\nif (idols_dice = 5){\n\ttreasure_chest&#46;idols = DiceRoll(&quot;1d5&quot;) + 1\n}\nelse if (idols_dice = 4){\n\ttreasure_chest&#46;idols = 1\n}\nelse{\n\ttreasure_chest&#46;idols = 0\n}[/code:rvt8a2f5]",
      "EditableFormat": "bbcode",
      "HTML": "So I have an object with several integer attributes; let's say, for argument's sake, object “treasure_chest”, with integer attributes “doubloons”, “jewels”, “ingots”, “artifacts”, and “idols”. I want to list the attributes like this:<br/>“The treasure chest has 230 doubloons and 6 ingots,” or “The treasure chest has 17 jewels, 2 artifacts,  and 1 idol.” <br/>I want to create an algorithm where <br/>1) it won't list the attribute if it doesn't have a value above zero, <br/>2) it will adjust to the singular if the value is one, <br/>3) it will print a comma after the attribute in question UNLESS it's the LAST attribute to have a value above zero, in which case it will <br/>4) print a period after the attribute in question, and <br/>5) print an “and” before the number UNLESS it's the ONLY attribute to have a value above zero. <br/>6) Also, I've implemented a feature where it won't place a comma if two and only two attributes have values above zero.<br/>My game has several of these pseudo-containers; I'll spare you the explanation for why they work with the dynamics of the game, sate to say that they do. This is what I have right now (which I assign to a command), and it does technically work, but it doesn't feel very elegant. My own code is hurting my eyes. Add onto that that some of these pseudo-containers will have dozens of these attributes, and you're looking at a lot of work. If anyone has a clever alternate approach, I'm all ears.<br/><br/><pre><code>// set to command &quot;check&quot;<br/>if ((treasure_chest&#46;doubloons = 0) and (treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>  msg (&quot;The treasure chest is empty&#46; Poor, disappointed pirate!&quot;)<br/>}<br/>else {<br/>  inv_count = 0<br/>  if (treasure_chest&#46;doubloons &gt; 0) {<br/>    inv_count = inv_count + 1<br/>  }<br/>  if (treasure_chest&#46;jewels &gt; 0) {<br/>    inv_count = inv_count + 1<br/>  }<br/>  if (treasure_chest&#46;ingots &gt; 0) {<br/>    inv_count = inv_count + 1<br/>  }<br/>  if (treasure_chest&#46;artifacts &gt; 0) {<br/>    inv_count = inv_count + 1<br/>  }<br/>  if (treasure_chest&#46;idols &gt; 0) {<br/>    inv_count = inv_count + 1<br/>  }<br/>  OutputTextNoBr (&quot;Inside the chest you see &quot;)<br/>  if (treasure_chest&#46;doubloons &gt; 0) {<br/>    if (treasure_chest&#46;doubloons = 1) {<br/>      OutputTextNoBr (&quot;1 doubloon&quot;)<br/>      if ((treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>    else {<br/>      OutputTextNoBr (treasure_chest&#46;doubloons + &quot; doubloons&quot;)<br/>      if ((treasure_chest&#46;jewels = 0) and (treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (treasure_chest&#46;jewels &gt; 0) {<br/>    if (treasure_chest&#46;jewels = 1) {<br/>      if ((treasure_chest&#46;doubloons &gt; 0) and ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (&quot;1 jewel&quot;)<br/>      if ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>    else {<br/>      if ((treasure_chest&#46;doubloons &gt; 0) and ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (treasure_chest&#46;jewels + &quot; jewels&quot;)<br/>      if ((treasure_chest&#46;ingots = 0) and (treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (treasure_chest&#46;ingots &gt; 0) {<br/>    if (treasure_chest&#46;ingots = 1) {<br/>      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0)) and ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (&quot;1 ingot&quot;)<br/>      if ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>    else {<br/>      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0)) and ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0))) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (treasure_chest&#46;ingots + &quot; ingots&quot;)<br/>      if ((treasure_chest&#46;artifacts = 0) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (treasure_chest&#46;artifacts &gt; 0) {<br/>    if (treasure_chest&#46;artifacts = 1) {<br/>      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0)) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (&quot;1 artifact&quot;)<br/>      if (treasure_chest&#46;idols = 0) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>    else {<br/>      if (((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0)) and (treasure_chest&#46;idols = 0)) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (treasure_chest&#46;artifacts + &quot; artifacts&quot;)<br/>      if (treasure_chest&#46;idols = 0) {<br/>        OutputTextNoBr (&quot;&#46;&quot;)<br/>      }<br/>      else {<br/>        if (inv_count &lt;&gt; 2) {<br/>          OutputTextNoBr (&quot;, &quot;)<br/>        }<br/>      }<br/>    }<br/>  }<br/>  if (treasure_chest&#46;idols &gt; 0) {<br/>    if (treasure_chest&#46;idols = 1) {<br/>      if ((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0) or (treasure_chest&#46;artifacts &gt; 0)) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (&quot;1 idol&#46;&quot;)<br/>    }<br/>    else {<br/>      if ((treasure_chest&#46;doubloons &gt; 0) or (treasure_chest&#46;jewels &gt; 0) or (treasure_chest&#46;ingots &gt; 0) or (treasure_chest&#46;artifacts &gt; 0)) {<br/>        OutputTextNoBr (&quot; and &quot;)<br/>      }<br/>      OutputTextNoBr (treasure_chest&#46;idols + &quot; idols&#46;&quot;)<br/>    }<br/>  }<br/>}</code></pre><br/><br/>I'm including for you the bit of code I run at the beginning of this game to test this algorithm, which I also assign to a command.<br/><br/><pre><code>// set to command &quot;reroll&quot;<br/>doubloons_dice = DiceRoll(&quot;1d5&quot;)<br/>jewels_dice = DiceRoll(&quot;1d5&quot;)<br/>ingots_dice = DiceRoll(&quot;1d5&quot;)<br/>artifacts_dice = DiceRoll(&quot;1d5&quot;)<br/>idols_dice = DiceRoll(&quot;1d5&quot;)<br/>if (doubloons_dice = 5){<br/>\ttreasure_chest&#46;doubloons = DiceRoll(&quot;1d5&quot;) + 1<br/>}<br/>else if (doubloons_dice = 4){<br/>\ttreasure_chest&#46;doubloons = 1<br/>}<br/>else{<br/>\ttreasure_chest&#46;doubloons = 0<br/>}<br/>if (jewels_dice = 5){<br/>\ttreasure_chest&#46;jewels = DiceRoll(&quot;1d5&quot;) + 1<br/>}<br/>else if (jewels_dice = 4){<br/>\ttreasure_chest&#46;jewels = 1<br/>}<br/>else{<br/>\ttreasure_chest&#46;jewels = 0<br/>}<br/>if (ingots_dice = 5){<br/>\ttreasure_chest&#46;ingots = DiceRoll(&quot;1d5&quot;) + 1<br/>}<br/>else if (ingots_dice = 4){<br/>\ttreasure_chest&#46;ingots = 1<br/>}<br/>else{<br/>\ttreasure_chest&#46;ingots = 0<br/>}<br/>if (artifacts_dice = 5){<br/>\ttreasure_chest&#46;artifacts = DiceRoll(&quot;1d5&quot;) + 1<br/>}<br/>else if (artifacts_dice = 4){<br/>\ttreasure_chest&#46;artifacts = 1<br/>}<br/>else{<br/>\ttreasure_chest&#46;artifacts = 0<br/>}<br/>if (idols_dice = 5){<br/>\ttreasure_chest&#46;idols = DiceRoll(&quot;1d5&quot;) + 1<br/>}<br/>else if (idols_dice = 4){<br/>\ttreasure_chest&#46;idols = 1<br/>}<br/>else{<br/>\ttreasure_chest&#46;idols = 0<br/>}</code></pre>",
      "PostDate": "2015-12-27T07:32:28+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40079",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Here's one way to do it (attached and inline below).\n\nTo use this code, you must add an attribute named &quot;contents&quot; to your pseudo-container which is a string list of attributes, without the &quot;s&quot; on each. For example, if you have &quot;doubloons&quot;, &quot;ingots&quot;, and &quot;idols&quot; in your container, then you would have a list with elements &quot;doubloon&quot;, &quot;ingot&quot; and &quot;idol&quot;. It will append the &quot;s&quot; as needed to lookup the attribute and to make plurals. (See the &quot;treasure_chest&quot; object for an example.)\n\nThere are three added functions. The only one you need to worry about calling is GetPseudoObjectContents. But the other two are used by GetPseudoObjectContents and must be included as well.\n\nI hope this code makes your eyes hurt a bit less. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->\n\nThe code works by first building a dictionary of values to include in the output, with the key being the type (e.g. &quot;doubloon&quot;) and the value being the current count. Only existing, non-zero values end up in the dictionary. (That code is in the function GetPseudoObjectDisplayValues.) Then the rest of the code is just formatting the output string. The function GetPseudoValueString takes the dictionary and a key and returns a single string for that key, handling plurals (e.g. &quot;1 doubloon&quot;, &quot;2 ingots&quot;, etc).\n\n[code:5kyhm99x]&lt;!--Saved by Quest 5&#46;6&#46;5783&#46;24153--&gt;\n&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;psuedotest&quot;&gt;\n    &lt;gameid&gt;8a93393e-a1df-4067-8e35-f3fc09f6ea27&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n    &lt;/object&gt;\n    &lt;object name=&quot;treasure_chest&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n        &lt;contents type=&quot;stringlist&quot;&gt;\n          &lt;value&gt;doubloon&lt;/value&gt;\n          &lt;value&gt;jewel&lt;/value&gt;\n          &lt;value&gt;ingot&lt;/value&gt;\n          &lt;value&gt;artifact&lt;/value&gt;\n          &lt;value&gt;idol&lt;/value&gt;\n        &lt;/contents&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;command&gt;\n    &lt;pattern&gt;reroll&lt;/pattern&gt;\n    &lt;script&gt;\n      doubloons_dice = DiceRoll(&quot;1d5&quot;)\n      jewels_dice = DiceRoll(&quot;1d5&quot;)\n      ingots_dice = DiceRoll(&quot;1d5&quot;)\n      artifacts_dice = DiceRoll(&quot;1d5&quot;)\n      idols_dice = DiceRoll(&quot;1d5&quot;)\n      if (doubloons_dice = 5) {\n        treasure_chest&#46;doubloons = DiceRoll(&quot;1d5&quot;) + 1\n      }\n      else if (doubloons_dice = 4) {\n        treasure_chest&#46;doubloons = 1\n      }\n      else {\n        treasure_chest&#46;doubloons = 0\n      }\n      if (jewels_dice = 5) {\n        treasure_chest&#46;jewels = DiceRoll(&quot;1d5&quot;) + 1\n      }\n      else if (jewels_dice = 4) {\n        treasure_chest&#46;jewels = 1\n      }\n      else {\n        treasure_chest&#46;jewels = 0\n      }\n      if (ingots_dice = 5) {\n        treasure_chest&#46;ingots = DiceRoll(&quot;1d5&quot;) + 1\n      }\n      else if (ingots_dice = 4) {\n        treasure_chest&#46;ingots = 1\n      }\n      else {\n        treasure_chest&#46;ingots = 0\n      }\n      if (artifacts_dice = 5) {\n        treasure_chest&#46;artifacts = DiceRoll(&quot;1d5&quot;) + 1\n      }\n      else if (artifacts_dice = 4) {\n        treasure_chest&#46;artifacts = 1\n      }\n      else {\n        treasure_chest&#46;artifacts = 0\n      }\n      if (idols_dice = 5) {\n        treasure_chest&#46;idols = DiceRoll(&quot;1d5&quot;) + 1\n      }\n      else if (idols_dice = 4) {\n        treasure_chest&#46;idols = 1\n      }\n      else {\n        treasure_chest&#46;idols = 0\n      }\n      msg (&quot;The treasure chest contains &quot; + GetPseudoObjectContents(treasure_chest) + &quot;&#46;&quot;)\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;function name=&quot;GetPseudoObjectDisplayValues&quot; parameters=&quot;object&quot; type=&quot;dictionary&quot;&gt;\n\tvalues = NewDictionary()\n\tcontents = object&#46;contents\n\tforeach(item, contents) {\n\t    attribute = item + &quot;s&quot;\n\t    if (HasAttribute(object, attribute)) {\n\t        value = GetAttribute(object,attribute)\n\t        if (value &gt; 0) {\n\t            dictionary add(values, item, value)\n\t        }\n\t    }\n\t}\n\treturn(values)\n  &lt;/function&gt;\n\n  &lt;function name=&quot;GetPseudoValueString&quot; parameters=&quot;values, value&quot; type=&quot;string&quot;&gt;\n     &lt;!&#91;CDATA&#91;\n        item_count = DictionaryItem(values, value)\n        item_s = item_count + &quot; &quot; + value\n        if (item_count &lt;&gt; 1) {\n            item_s = item_s + &quot;s&quot;\n        }\n        return(item_s)\n     &#93;&#93;&gt;\n  &lt;/function&gt;\n\n  &lt;function name=&quot;GetPseudoObjectContents&quot; parameters=&quot;object&quot; type=&quot;string&quot;&gt;\n  &lt;!&#91;CDATA&#91;\n    values = GetPseudoObjectDisplayValues(object)\n    count = DictionaryCount(values)\n    if (count = 0) {\n        return(&quot;nothing&quot;)\n    }\n\n    s = &quot;&quot;\n    index = 0\n    foreach (value, values) {\n        item_s = GetPseudoValueString(values, value)\n        if (index &gt; 0) {\n            if (index = count-1) {\n                s = s + &quot; and &quot;\n            } else {\n                s = s + &quot;, &quot;\n            }\n        }\n        s = s + item_s\n        index = index + 1\n    }\n    return (s)\n    &#93;&#93;&gt;\n  &lt;/function&gt;\n&lt;/asl&gt;[/code:5kyhm99x]",
      "EditableFormat": "bbcode",
      "HTML": "Here's one way to do it (attached and inline below).<br/><br/>To use this code, you must add an attribute named &quot;contents&quot; to your pseudo-container which is a string list of attributes, without the &quot;s&quot; on each. For example, if you have &quot;doubloons&quot;, &quot;ingots&quot;, and &quot;idols&quot; in your container, then you would have a list with elements &quot;doubloon&quot;, &quot;ingot&quot; and &quot;idol&quot;. It will append the &quot;s&quot; as needed to lookup the attribute and to make plurals. (See the &quot;treasure_chest&quot; object for an example.)<br/><br/>There are three added functions. The only one you need to worry about calling is GetPseudoObjectContents. But the other two are used by GetPseudoObjectContents and must be included as well.<br/><br/>I hope this code makes your eyes hurt a bit less. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><br/><br/>The code works by first building a dictionary of values to include in the output, with the key being the type (e.g. &quot;doubloon&quot;) and the value being the current count. Only existing, non-zero values end up in the dictionary. (That code is in the function GetPseudoObjectDisplayValues.) Then the rest of the code is just formatting the output string. The function GetPseudoValueString takes the dictionary and a key and returns a single string for that key, handling plurals (e.g. &quot;1 doubloon&quot;, &quot;2 ingots&quot;, etc).<br/><br/><pre><code>&lt;!--Saved by Quest 5&#46;6&#46;5783&#46;24153--&gt;<br/>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;psuedotest&quot;&gt;<br/>    &lt;gameid&gt;8a93393e-a1df-4067-8e35-f3fc09f6ea27&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2015&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>    &lt;/object&gt;<br/>    &lt;object name=&quot;treasure_chest&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>        &lt;contents type=&quot;stringlist&quot;&gt;<br/>          &lt;value&gt;doubloon&lt;/value&gt;<br/>          &lt;value&gt;jewel&lt;/value&gt;<br/>          &lt;value&gt;ingot&lt;/value&gt;<br/>          &lt;value&gt;artifact&lt;/value&gt;<br/>          &lt;value&gt;idol&lt;/value&gt;<br/>        &lt;/contents&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;command&gt;<br/>    &lt;pattern&gt;reroll&lt;/pattern&gt;<br/>    &lt;script&gt;<br/>      doubloons_dice = DiceRoll(&quot;1d5&quot;)<br/>      jewels_dice = DiceRoll(&quot;1d5&quot;)<br/>      ingots_dice = DiceRoll(&quot;1d5&quot;)<br/>      artifacts_dice = DiceRoll(&quot;1d5&quot;)<br/>      idols_dice = DiceRoll(&quot;1d5&quot;)<br/>      if (doubloons_dice = 5) {<br/>        treasure_chest&#46;doubloons = DiceRoll(&quot;1d5&quot;) + 1<br/>      }<br/>      else if (doubloons_dice = 4) {<br/>        treasure_chest&#46;doubloons = 1<br/>      }<br/>      else {<br/>        treasure_chest&#46;doubloons = 0<br/>      }<br/>      if (jewels_dice = 5) {<br/>        treasure_chest&#46;jewels = DiceRoll(&quot;1d5&quot;) + 1<br/>      }<br/>      else if (jewels_dice = 4) {<br/>        treasure_chest&#46;jewels = 1<br/>      }<br/>      else {<br/>        treasure_chest&#46;jewels = 0<br/>      }<br/>      if (ingots_dice = 5) {<br/>        treasure_chest&#46;ingots = DiceRoll(&quot;1d5&quot;) + 1<br/>      }<br/>      else if (ingots_dice = 4) {<br/>        treasure_chest&#46;ingots = 1<br/>      }<br/>      else {<br/>        treasure_chest&#46;ingots = 0<br/>      }<br/>      if (artifacts_dice = 5) {<br/>        treasure_chest&#46;artifacts = DiceRoll(&quot;1d5&quot;) + 1<br/>      }<br/>      else if (artifacts_dice = 4) {<br/>        treasure_chest&#46;artifacts = 1<br/>      }<br/>      else {<br/>        treasure_chest&#46;artifacts = 0<br/>      }<br/>      if (idols_dice = 5) {<br/>        treasure_chest&#46;idols = DiceRoll(&quot;1d5&quot;) + 1<br/>      }<br/>      else if (idols_dice = 4) {<br/>        treasure_chest&#46;idols = 1<br/>      }<br/>      else {<br/>        treasure_chest&#46;idols = 0<br/>      }<br/>      msg (&quot;The treasure chest contains &quot; + GetPseudoObjectContents(treasure_chest) + &quot;&#46;&quot;)<br/>    &lt;/script&gt;<br/>  &lt;/command&gt;<br/><br/>  &lt;function name=&quot;GetPseudoObjectDisplayValues&quot; parameters=&quot;object&quot; type=&quot;dictionary&quot;&gt;<br/>\tvalues = NewDictionary()<br/>\tcontents = object&#46;contents<br/>\tforeach(item, contents) {<br/>\t    attribute = item + &quot;s&quot;<br/>\t    if (HasAttribute(object, attribute)) {<br/>\t        value = GetAttribute(object,attribute)<br/>\t        if (value &gt; 0) {<br/>\t            dictionary add(values, item, value)<br/>\t        }<br/>\t    }<br/>\t}<br/>\treturn(values)<br/>  &lt;/function&gt;<br/><br/>  &lt;function name=&quot;GetPseudoValueString&quot; parameters=&quot;values, value&quot; type=&quot;string&quot;&gt;<br/>     &lt;!&#91;CDATA&#91;<br/>        item_count = DictionaryItem(values, value)<br/>        item_s = item_count + &quot; &quot; + value<br/>        if (item_count &lt;&gt; 1) {<br/>            item_s = item_s + &quot;s&quot;<br/>        }<br/>        return(item_s)<br/>     &#93;&#93;&gt;<br/>  &lt;/function&gt;<br/><br/>  &lt;function name=&quot;GetPseudoObjectContents&quot; parameters=&quot;object&quot; type=&quot;string&quot;&gt;<br/>  &lt;!&#91;CDATA&#91;<br/>    values = GetPseudoObjectDisplayValues(object)<br/>    count = DictionaryCount(values)<br/>    if (count = 0) {<br/>        return(&quot;nothing&quot;)<br/>    }<br/><br/>    s = &quot;&quot;<br/>    index = 0<br/>    foreach (value, values) {<br/>        item_s = GetPseudoValueString(values, value)<br/>        if (index &gt; 0) {<br/>            if (index = count-1) {<br/>                s = s + &quot; and &quot;<br/>            } else {<br/>                s = s + &quot;, &quot;<br/>            }<br/>        }<br/>        s = s + item_s<br/>        index = index + 1<br/>    }<br/>    return (s)<br/>    &#93;&#93;&gt;<br/>  &lt;/function&gt;<br/>&lt;/asl&gt;</code></pre><div><a href=\"/attachment/1440\">psuedotest.aslx</a></div>",
      "PostDate": "2015-12-27T11:44:36+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "40082",
      "UserId": 0,
      "Username": "Fyrdraca",
      "UserAvatar": null,
      "UserGravatar": "01acea3b88b789c3d4a884c2acaf8a53",
      "EditableText": "Thanks Jay, I appreciate you taking the time.",
      "EditableFormat": "bbcode",
      "HTML": "Thanks Jay, I appreciate you taking the time.",
      "PostDate": "2015-12-27T18:37:26+00:00",
      "LastEditDate": null
    }
  ]
}
