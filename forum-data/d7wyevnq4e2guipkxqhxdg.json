{
  "Topic": {
    "TopicId": "d7wyevnq4e2guipkxqhxdg",
    "ForumId": "10",
    "Title": "ScrolltoEnd fix Reversal",
    "LastUpdated": "2020-04-15T06:39:20.0063877Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "e77548f5-9e2f-4082-a45a-f5d97734671a",
      "UserId": 476183,
      "Username": "RedBenny",
      "AvatarUrl": "https://secure.gravatar.com/avatar/07f5b3e1b5a4893e648c363b62b008b3?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "tl;dr:  \r\nHow do I turn scrolltoend back on after having turned it off with this:\r\n\r\n    JS.eval (\"scrollToEnd = function () {}\")\r\n\r\n\r\nts;dc:\r\nHi. I, like many posting here (specifically on the topic of the annoying \"scrolltoend\" function Quest weirdly makes default {and frustratingly neglects to add an option to disable}) am new to this. \r\n\r\nI have been working on a GameBook style because the TextAdventure style looks too scary, complicated, and overall to spoopy for me. I have the 'clearscreen' function active in Quests native options, but as I absolutely do not want to watch every page try to leave me as soon as I say hello, I wanted to find a way to disable the function. \r\n\r\nSo I went digging through elgoog and found this wonderful little copy/paste script from Pykrete:\r\n\r\n\r\n    JS.eval (\"scrollToEnd = function () {}\")\r\n\r\n\r\nThis does exactly what I want it to. However, I do not know how to reverse it ingame once it has been enacted. \r\n\r\nEssentially, I want to create an option ingame so that players can choose whether or not Auto-Scroll is enabled, operating by way of switch. I want this because Auto-Scroll makes testing game path options a breeze, and because not everyone wants to read everything, and because I want to include an element of replayability with multiple ends (meaning experienced players won't wish to remove their devastated dexterous digits {likely with an axe} for want of an Auto-Scroll feature that I have disabled from game start [while still allowing players to save and reload a game and not be stuck scrolling themselves if they don't want to})   .\r\n\r\nThere are undoubtedly many ways of accomplishing this that are very clever indeed, but considering my only experience in coding comes from the WarCraft 3 WorldEditor and two years of playing minesweeper in highschool software, I only want something simple that turns the function on from being off, and allows it to then be switched off if they so choose.\r\n\r\nI've already got an option that switches from night mode to day mode, so I can implement the switch operation. I just can't reverse that lovely line of code. \r\n\r\nIf you can help, cool. If not, all g, I'm sure I'll live. Unless this:\r\n\r\n     )\"}{ )( noiɈɔnυʇ = bnƎoTlloɿɔƨ\"( lɒvɘ.ƧႱ\r\n\r\nSomehow summons a Hellish creature from deep within Quest when it is evoked. \r\n\r\nThanks in advance,\r\nRed\r\n\r\nP.S. Thanks to Pykrete for the lovely line.  ",
      "EditableFormat": "markdown",
      "HTML": "<p>tl;dr:<br>\nHow do I turn scrolltoend back on after having turned it off with this:</p>\n<pre><code>JS.eval (\"scrollToEnd = function () {}\")\n</code></pre>\n<p>ts;dc:<br>\nHi. I, like many posting here (specifically on the topic of the annoying \"scrolltoend\" function Quest weirdly makes default {and frustratingly neglects to add an option to disable}) am new to this.</p>\n<p>I have been working on a GameBook style because the TextAdventure style looks too scary, complicated, and overall to spoopy for me. I have the 'clearscreen' function active in Quests native options, but as I absolutely do not want to watch every page try to leave me as soon as I say hello, I wanted to find a way to disable the function.</p>\n<p>So I went digging through elgoog and found this wonderful little copy/paste script from Pykrete:</p>\n<pre><code>JS.eval (\"scrollToEnd = function () {}\")\n</code></pre>\n<p>This does exactly what I want it to. However, I do not know how to reverse it ingame once it has been enacted.</p>\n<p>Essentially, I want to create an option ingame so that players can choose whether or not Auto-Scroll is enabled, operating by way of switch. I want this because Auto-Scroll makes testing game path options a breeze, and because not everyone wants to read everything, and because I want to include an element of replayability with multiple ends (meaning experienced players won't wish to remove their devastated dexterous digits {likely with an axe} for want of an Auto-Scroll feature that I have disabled from game start [while still allowing players to save and reload a game and not be stuck scrolling themselves if they don't want to})   .</p>\n<p>There are undoubtedly many ways of accomplishing this that are very clever indeed, but considering my only experience in coding comes from the WarCraft 3 WorldEditor and two years of playing minesweeper in highschool software, I only want something simple that turns the function on from being off, and allows it to then be switched off if they so choose.</p>\n<p>I've already got an option that switches from night mode to day mode, so I can implement the switch operation. I just can't reverse that lovely line of code.</p>\n<p>If you can help, cool. If not, all g, I'm sure I'll live. Unless this:</p>\n<pre><code> )\"}{ )( noiɈɔnυʇ = bnƎoTlloɿɔƨ\"( lɒvɘ.ƧႱ\n</code></pre>\n<p>Somehow summons a Hellish creature from deep within Quest when it is evoked.</p>\n<p>Thanks in advance,<br>\nRed</p>\n<p>P.S. Thanks to Pykrete for the lovely line.</p>\n\n",
      "PostDate": "2020-04-15T06:39:20.0063877Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bc99ff2c-b66a-4147-96b5-f6ddbb20be0f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "```\r\nJS.eval(\"scrollToEnd = function () { $('html,body').animate({ scrollTop: document.body.scrollHeight }); };\")\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<pre><code>JS.eval(\"scrollToEnd = function () { $('html,body').animate({ scrollTop: document.body.scrollHeight }); };\")\n</code></pre>\n\n",
      "PostDate": "2020-04-15T09:36:52.2213006Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "61b5899e-67d8-44ee-9d79-1f4de5b0f148",
      "UserId": 476183,
      "Username": "RedBenny",
      "AvatarUrl": "https://secure.gravatar.com/avatar/07f5b3e1b5a4893e648c363b62b008b3?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Perfect, works as needed. Much appreciated, mrangel.\r\n\r\nFor those in need, this prevents auto-scroll / scrolltoend :\r\n\r\n    JS.eval (\"scrollToEnd = function () {}\")\r\n\r\nThis reinstates it after it has been disabblled by the first:\r\n\r\n    JS.eval(\"scrollToEnd = function () { $('html,body').animate({ scrollTop: document.body.scrollHeight }); };\")\r\n\r\nAgain, thanks to both Pykrete and mrangel for their respective lines of code. I hope this can help others out there starting out and struggling with these simple problems, as it did me.",
      "EditableFormat": "markdown",
      "HTML": "<p>Perfect, works as needed. Much appreciated, mrangel.</p>\n<p>For those in need, this prevents auto-scroll / scrolltoend :</p>\n<pre><code>JS.eval (\"scrollToEnd = function () {}\")\n</code></pre>\n<p>This reinstates it after it has been disabblled by the first:</p>\n<pre><code>JS.eval(\"scrollToEnd = function () { $('html,body').animate({ scrollTop: document.body.scrollHeight }); };\")\n</code></pre>\n<p>Again, thanks to both Pykrete and mrangel for their respective lines of code. I hope this can help others out there starting out and struggling with these simple problems, as it did me.</p>\n\n",
      "PostDate": "2020-04-15T23:27:52.2248942Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "2bb05187-3343-46b1-a641-1e15245775a4",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you're turning it on and off often, you could create a frame to hold the function. More efficient than compiling it every time. The script would look like this:\r\n```\r\nJS.eval(\"$(function () {var a=ScrollToEnd;var b=x=>x;EnableAutoscroll=function() {ScrollToEnd=a};DisableAutoscroll=function() {ScrollToEnd=b;};});\")\r\n```\r\n\r\nIf you put that in your UI Initialisation script, then you can just do:\r\n```\r\nJS.EnableAutoscroll()\r\n```\r\nor\r\n```\r\nJS.DisableAutoscroll()\r\n```\r\neach time you need them.\r\n\r\n<hr/>\r\n\r\nIt's probably worth pointing out that – as with all the `JS.` functions in Quest – these changes will not be saved with a saved game. So if you disable automatic scrolling and the player saves the game, it will be saving again when they reload unless the UI Initialisation script disables it. If you're turning ScrollToEnd off and on again, you should have a script in the UI Initialisation that checks what its current state should be, and turns it off if necessary.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you're turning it on and off often, you could create a frame to hold the function. More efficient than compiling it every time. The script would look like this:</p>\n<pre><code>JS.eval(\"$(function () {var a=ScrollToEnd;var b=x=&gt;x;EnableAutoscroll=function() {ScrollToEnd=a};DisableAutoscroll=function() {ScrollToEnd=b;};});\")\n</code></pre>\n<p>If you put that in your UI Initialisation script, then you can just do:</p>\n<pre><code>JS.EnableAutoscroll()\n</code></pre>\n<p>or</p>\n<pre><code>JS.DisableAutoscroll()\n</code></pre>\n<p>each time you need them.</p>\n<hr>\n<p>It's probably worth pointing out that – as with all the <code>JS.</code> functions in Quest – these changes will not be saved with a saved game. So if you disable automatic scrolling and the player saves the game, it will be saving again when they reload unless the UI Initialisation script disables it. If you're turning ScrollToEnd off and on again, you should have a script in the UI Initialisation that checks what its current state should be, and turns it off if necessary.</p>\n\n",
      "PostDate": "2020-04-16T00:18:35.609464Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8d865c77-6152-4a7d-95ba-7d5dd89f0dbf",
      "UserId": 163617,
      "Username": "Deckrect ",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great! It has been a big issue for me sinve long time! Thank you guys! ",
      "EditableFormat": "markdown",
      "HTML": "<p>Great! It has been a big issue for me sinve long time! Thank you guys!</p>\n\n",
      "PostDate": "2020-04-16T13:29:12.6609742Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
