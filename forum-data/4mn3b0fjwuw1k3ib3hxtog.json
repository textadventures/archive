{
  "Topic": {
    "TopicId": "4mn3b0fjwuw1k3ib3hxtog",
    "ForumId": "24",
    "Title": "Arrays in squiffy",
    "LastUpdated": "2021-08-10T22:15:29.2222071Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a7af5197-5c13-4342-ba6e-ac6ce9cce096",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I seem to recall this discussed earlier but there are no arrays in squiffy. Are there any in JS that survive going from section to section? Or am I just SOL... \r\n\r\nThanks in advance.",
      "EditableFormat": "markdown",
      "HTML": "<p>I seem to recall this discussed earlier but there are no arrays in squiffy. Are there any in JS that survive going from section to section? Or am I just SOL...</p>\n<p>Thanks in advance.</p>\n\n",
      "PostDate": "2021-08-10T22:15:29.2222071Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1859ccc9-426a-4c09-9b07-38fbf17cc497",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hello.\r\n\r\nI would bet you can use JSON.\r\n\r\n```\r\n    var arr1 = [1,2,3];\r\n    squiffy.set(\"arr1\", JSON.stringify(arr1))\r\n```\r\n\r\n---\r\nTo get it back:\r\n\r\n```\r\n    var arr1 = JSON.parse(squiffy.get(\"arr1\"))\r\n```\r\n\r\n---\r\nEXAMPLE\r\n\r\n```\r\n@title Array\r\n\r\n[[test one]]\r\n\r\n[[test one]]:\r\n    var arr1 = [1,2,3];\r\n    squiffy.set(\"arr1\", JSON.stringify(arr1));\r\n\r\nDone.\r\n\r\n[[test two]]\r\n\r\n[[test two]]:\r\n    var arr1 = JSON.parse(squiffy.get(\"arr1\"));\r\n    arr1.push(4);\r\n    squiffy.set(\"arr1\",JSON.stringify(arr1));\r\n    \r\narr1: {arr1}\r\n```\r\n\r\n---\r\nThat seems to work when I test it online.",
      "EditableFormat": "markdown",
      "HTML": "<p>Hello.</p>\n<p>I would bet you can use JSON.</p>\n<pre><code>    var arr1 = [1,2,3];\n    squiffy.set(\"arr1\", JSON.stringify(arr1))\n</code></pre>\n<hr>\n<p>To get it back:</p>\n<pre><code>    var arr1 = JSON.parse(squiffy.get(\"arr1\"))\n</code></pre>\n<hr>\n<p>EXAMPLE</p>\n<pre><code>@title Array\n\n[[test one]]\n\n[[test one]]:\n    var arr1 = [1,2,3];\n    squiffy.set(\"arr1\", JSON.stringify(arr1));\n\nDone.\n\n[[test two]]\n\n[[test two]]:\n    var arr1 = JSON.parse(squiffy.get(\"arr1\"));\n    arr1.push(4);\n    squiffy.set(\"arr1\",JSON.stringify(arr1));\n    \narr1: {arr1}\n</code></pre>\n<hr>\n<p>That seems to work when I test it online.</p>\n\n",
      "PostDate": "2021-08-10T22:36:41.2059582Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "0327606f-e0c0-4cf9-b382-9ad6cc8fb5bf",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This looks interesting. I'll give it a try tonight or tomorrow.\r\n\r\nWhat does the push command do?",
      "EditableFormat": "markdown",
      "HTML": "<p>This looks interesting. I'll give it a try tonight or tomorrow.</p>\n<p>What does the push command do?</p>\n\n",
      "PostDate": "2021-08-10T23:59:59.2857989Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f8f41c5-3e89-4ecb-a591-e71e9580ae25",
      "UserId": 518866,
      "Username": "K.V.",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a97688aadc8152436180b511021e94a7?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> What does the push command do?\r\n\r\nOh, I was just adding (pushing) a ```4``` to the array, to make sure it worked as expected.\r\n\r\n---\r\n```arr1``` begins as ```[ 1, 2, 3 ]```.\r\n\r\nThen, I push ```4``` to it, making it ```[ 1, 2, 3, 4 ]```.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>What does the push command do?</p>\n</blockquote>\n<p>Oh, I was just adding (pushing) a <code>4</code> to the array, to make sure it worked as expected.</p>\n<hr>\n<p><code>arr1</code> begins as <code>[ 1, 2, 3 ]</code>.</p>\n<p>Then, I push <code>4</code> to it, making it <code>[ 1, 2, 3, 4 ]</code>.</p>\n\n",
      "PostDate": "2021-08-11T00:10:50.6807527Z",
      "LastEditDate": "2021-08-11T00:13:12.9328635Z",
      "link": null
    },
    {
      "PostId": "9022372a-afa9-4f64-be35-6f4f1a5ae037",
      "UserId": 251768,
      "Username": "Bluevoss",
      "AvatarUrl": "https://i.imgur.com/6mfIIbhb.gif",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Okay, a couple of questions:\r\n\r\nHow do I read a specific element (say, the second value)?\r\n\r\nHow to I write to a specfic element (again, we'll say the second value)?",
      "EditableFormat": "markdown",
      "HTML": "<p>Okay, a couple of questions:</p>\n<p>How do I read a specific element (say, the second value)?</p>\n<p>How to I write to a specfic element (again, we'll say the second value)?</p>\n\n",
      "PostDate": "2021-08-11T01:40:47.7914015Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "cebd2b25-44ba-42ae-97bc-d73982ed029f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> How do I read a specific element (say, the second value)?\r\n>\r\n> How to I write to a specfic element (again, we'll say the second value)?\r\n\r\nBracket notation.\r\n\r\n```\r\nmyarray[0] = 6;\r\nsquiffy.sections['output section'].text = \"The 3rd array element is \" + myarray[2];\r\n```\r\nYou can use `array[index]` like any other variable. I think in most cases you'll end up extracting an element and putting it into a single Squiffy attribute so you can display it:\r\n```\r\n[[somesection]]:\r\n    var arr1 = JSON.parse(squiffy.get(\"arr1\"));\r\n    squiffy.set(\"fifthelement\", arr1[4]);\r\n\r\nThe fifth element of arr1 is {fifthelement}.\r\n```\r\n\r\nYou can also use `pop` to get the last element of the array, and `shift` to get the first. These functions both return the specified element, and remove it from the array, so they're good if you want to process the next item in an NPCs \"to do list\" or something like that.",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>How do I read a specific element (say, the second value)?</p>\n<p>How to I write to a specfic element (again, we'll say the second value)?</p>\n</blockquote>\n<p>Bracket notation.</p>\n<pre><code>myarray[0] = 6;\nsquiffy.sections['output section'].text = \"The 3rd array element is \" + myarray[2];\n</code></pre>\n<p>You can use <code>array[index]</code> like any other variable. I think in most cases you'll end up extracting an element and putting it into a single Squiffy attribute so you can display it:</p>\n<pre><code>[[somesection]]:\n    var arr1 = JSON.parse(squiffy.get(\"arr1\"));\n    squiffy.set(\"fifthelement\", arr1[4]);\n\nThe fifth element of arr1 is {fifthelement}.\n</code></pre>\n<p>You can also use <code>pop</code> to get the last element of the array, and <code>shift</code> to get the first. These functions both return the specified element, and remove it from the array, so they're good if you want to process the next item in an NPCs \"to do list\" or something like that.</p>\n\n",
      "PostDate": "2021-08-11T09:48:30.6936622Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
