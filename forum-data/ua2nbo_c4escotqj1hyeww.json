{
  "Topic": {
    "TopicId": "ua2nbo_c4escotqj1hyeww",
    "ForumId": "10",
    "Title": "Multiple Answers with Different Outcomes",
    "LastUpdated": "2019-08-20T00:47:34.2172666Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "a3f0c330-0aad-4e74-9688-a2a62451ba17",
      "UserId": 262169,
      "Username": "Laraqua",
      "AvatarUrl": "https://secure.gravatar.com/avatar/62e7b4391dc6f205a4820699c027a564?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I want to use the Quest program to represent something in a LARP (Live Action Role Play) with an Escape Room bent.  So basically I want the players to go out in the real world, locate a bunch of numbered nodes, jot down those numbers and return to type them in to prove they found them.  Once they've found them all, and all nodes are switched on, then another option will appear (basically just going to make a Scenery Object visible).\r\n\r\nThe trick is, how do I nest the script / write the script in such a way that they can put in multiple correct answers that will each then run their own script and turn on their own node.\r\n\r\n      <repair type=\"script\">\r\n        msg (\"'Which nodes have you repaired?  Please input the node numbers so that the connection can be re-established.'\")\r\n        get input {\r\n          if (result = \"1986\") {\r\n            msg (\"'Connection established.'\")\r\n            SwitchOn (Node 1986)\r\n          }\r\n          else if (result = \"8370\") {\r\n            msg (\"'Connection established.'\")\r\n            SwitchOn (Node 8370)\r\n          }\r\n          else {\r\n            msg (\"'Is it \\\"\" + result + \"\\\"?' you ask.\")\r\n            msg (\"'Unknown node.'\")\r\n          }\r\n        }",
      "EditableFormat": "markdown",
      "HTML": "<p>I want to use the Quest program to represent something in a LARP (Live Action Role Play) with an Escape Room bent.  So basically I want the players to go out in the real world, locate a bunch of numbered nodes, jot down those numbers and return to type them in to prove they found them.  Once they've found them all, and all nodes are switched on, then another option will appear (basically just going to make a Scenery Object visible).</p>\n<p>The trick is, how do I nest the script / write the script in such a way that they can put in multiple correct answers that will each then run their own script and turn on their own node.</p>\n<pre><code>  &lt;repair type=\"script\"&gt;\n    msg (\"'Which nodes have you repaired?  Please input the node numbers so that the connection can be re-established.'\")\n    get input {\n      if (result = \"1986\") {\n        msg (\"'Connection established.'\")\n        SwitchOn (Node 1986)\n      }\n      else if (result = \"8370\") {\n        msg (\"'Connection established.'\")\n        SwitchOn (Node 8370)\n      }\n      else {\n        msg (\"'Is it \\\"\" + result + \"\\\"?' you ask.\")\n        msg (\"'Unknown node.'\")\n      }\n    }\n</code></pre>\n\n",
      "PostDate": "2019-08-20T00:47:34.2172666Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1ebbfdc1-7797-47e6-ae3d-d1a73671062a",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "would you prefer a single input that holds/stores/gets all of the number inputs? (each node number is separated by a space in this example/case of mine, but you can change it to something else if you want)\r\n\r\nfor example:\r\ninput iteration 1: 100 200 300 400\r\n\r\n```\r\n<attr name=\"repair\" type=\"script\">\r\n  msg (\"Which nodes have you repaired?  Please input the node numbers (separated by a space) so that the connection can be re-established\")\r\n  get input {\r\n    input_string_variable = result\r\n    stringlist_variable = Split (input_string_variable, \" \")\r\n    foreach (string_variable, stringlist_variable) {\r\n      switch (string_variable) {\r\n        case (\"100\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"200\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"300\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"400\") {\r\n          // WHATEVER scripting\r\n        }\r\n        default {\r\n          // WHATEVER scripting\r\n        }\r\n      }\r\n    }\r\n  }\r\n</attr>\r\n```\r\n\r\n------------------------\r\n\r\nor, would you prefer multiple inputs for each number input?\r\n\r\nfor example:\r\ninput iteration 1: 100\r\ninput iteration 2: 200\r\ninput iteration 3: 300\r\ninput iteration 4: 400\r\n\r\n```\r\n<attr name=\"repair\" type=\"script\">\r\n  msg (\"Which nodes have you repaired?  Please input a single node number so that the connection can be re-established\")\r\n  get input {\r\n    if (IsInt (result)) {\r\n      input_string_variable = result\r\n      switch (input_string_variable) {\r\n        case (\"100\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"200\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"300\") {\r\n          // WHATEVER scripting\r\n        }\r\n        case (\"400\") {\r\n          // WHATEVER scripting\r\n        }\r\n        default {\r\n          // WHATEVER scripting\r\n        }\r\n      }\r\n    } else {\r\n            msg (\"Error: wrong input: type in a number next time\")\r\n    }\r\n  }\r\n</attr>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>would you prefer a single input that holds/stores/gets all of the number inputs? (each node number is separated by a space in this example/case of mine, but you can change it to something else if you want)</p>\n<p>for example:<br>\ninput iteration 1: 100 200 300 400</p>\n<pre><code>&lt;attr name=\"repair\" type=\"script\"&gt;\n  msg (\"Which nodes have you repaired?  Please input the node numbers (separated by a space) so that the connection can be re-established\")\n  get input {\n    input_string_variable = result\n    stringlist_variable = Split (input_string_variable, \" \")\n    foreach (string_variable, stringlist_variable) {\n      switch (string_variable) {\n        case (\"100\") {\n          // WHATEVER scripting\n        }\n        case (\"200\") {\n          // WHATEVER scripting\n        }\n        case (\"300\") {\n          // WHATEVER scripting\n        }\n        case (\"400\") {\n          // WHATEVER scripting\n        }\n        default {\n          // WHATEVER scripting\n        }\n      }\n    }\n  }\n&lt;/attr&gt;\n</code></pre>\n<hr>\n<p>or, would you prefer multiple inputs for each number input?</p>\n<p>for example:<br>\ninput iteration 1: 100<br>\ninput iteration 2: 200<br>\ninput iteration 3: 300<br>\ninput iteration 4: 400</p>\n<pre><code>&lt;attr name=\"repair\" type=\"script\"&gt;\n  msg (\"Which nodes have you repaired?  Please input a single node number so that the connection can be re-established\")\n  get input {\n    if (IsInt (result)) {\n      input_string_variable = result\n      switch (input_string_variable) {\n        case (\"100\") {\n          // WHATEVER scripting\n        }\n        case (\"200\") {\n          // WHATEVER scripting\n        }\n        case (\"300\") {\n          // WHATEVER scripting\n        }\n        case (\"400\") {\n          // WHATEVER scripting\n        }\n        default {\n          // WHATEVER scripting\n        }\n      }\n    } else {\n            msg (\"Error: wrong input: type in a number next time\")\n    }\n  }\n&lt;/attr&gt;\n</code></pre>\n\n",
      "PostDate": "2019-08-20T01:54:56.0419352Z",
      "LastEditDate": "2019-08-20T02:15:55.6923045Z",
      "link": null
    },
    {
      "PostId": "3a658719-e75c-4783-9fad-485b04afdee3",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The Show Menu function is good for that sort of thing.\r\n\r\nThis is an example.\r\n\r\n```\r\nitems = Split(\"Oran Berry (100);Pokeball (500);Power Points (50)\", \";\")\r\nShowMenu (\"Purchase\", items, true) {\r\n  switch (result) {\r\n    case (\"Pokeball (500)\") {\r\n      if (player.pokedollar >= 500) {\r\n        player.pokedollar = player.pokedollar - 500\r\n        player.pokeballs = player.pokeballs + 1\r\n        msg (\"You bought a pokeball.\")\r\n      }\r\n      else {\r\n        msg (\"You don't have enough Pokedollars.\")\r\n      }\r\n    }\r\n    case (\"Oran Berry (100)\") {\r\n      if (player.pokedollar >= 100) {\r\n        player.pokedollar = player.pokedollar - 100\r\n        player.potion = player.potion + 1\r\n        msg (\"You bought an Oran Berry.\")\r\n      }\r\n      else {\r\n        msg (\"You don't have enough Pokedollars.\")\r\n      }\r\n    }\r\n    case (\"Power Points (50)\") {\r\n      if (player.pokedollar > 50) {\r\n        msg (\"You bought 50 Power Points.\")\r\n      }\r\n      else {\r\n        msg (\"You don't have enough Pokedollars.\")\r\n      }\r\n    }\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>The Show Menu function is good for that sort of thing.</p>\n<p>This is an example.</p>\n<pre><code>items = Split(\"Oran Berry (100);Pokeball (500);Power Points (50)\", \";\")\nShowMenu (\"Purchase\", items, true) {\n  switch (result) {\n    case (\"Pokeball (500)\") {\n      if (player.pokedollar &gt;= 500) {\n        player.pokedollar = player.pokedollar - 500\n        player.pokeballs = player.pokeballs + 1\n        msg (\"You bought a pokeball.\")\n      }\n      else {\n        msg (\"You don't have enough Pokedollars.\")\n      }\n    }\n    case (\"Oran Berry (100)\") {\n      if (player.pokedollar &gt;= 100) {\n        player.pokedollar = player.pokedollar - 100\n        player.potion = player.potion + 1\n        msg (\"You bought an Oran Berry.\")\n      }\n      else {\n        msg (\"You don't have enough Pokedollars.\")\n      }\n    }\n    case (\"Power Points (50)\") {\n      if (player.pokedollar &gt; 50) {\n        msg (\"You bought 50 Power Points.\")\n      }\n      else {\n        msg (\"You don't have enough Pokedollars.\")\n      }\n    }\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2019-08-20T02:39:08.0607004Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
