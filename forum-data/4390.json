{
  "Topic": {
    "TopicId": "4390",
    "ForumId": "10",
    "Title": "How to get very specific responses for unresolved objects?",
    "LastUpdated": "2014-06-07T02:43:24+01:00",
    "ReplyCount": 12
  },
  "Posts": [
    {
      "PostId": "29024",
      "UserId": 0,
      "Username": "Mareus",
      "UserAvatar": null,
      "UserGravatar": "8b9df2e9edea8ac3419d60d8fb226b70",
      "EditableText": "I just tried playing The Hitchhikers Guide to the Galaxy and I was impressed at very specific responses one gets for unresolved objects. Look at these 3 examples:\n\nIf I write something that does not make sense like PICK UP HOUSE, I get a response: Nice try.\nIf I write PICK UP SHIT, I get a response: I don't know the word &quot;shit&quot;.\nIf I write SMELL SOUTH, I get a response: You used the word &quot;south&quot; in a way that I don't understand.\n\nSo it looks like the author made a code which literally understands the difference between unknown words that do not exist in the game, and ones that do. How does one do that?\n\nPS. I have managed to find a command &quot;UnresolvedObject&quot;, and when I type in &quot;I don't know the word&quot;  I get a response: I don't know the word (shit) - which is fine btw, but how do I then achieve the response: &quot;You used the word &quot;south&quot; in a way that I don't understand.&quot; Can somebody please decipher the code and tell me which things to change in the hidden library to what to be able to achieve the same result as from The Hitchhikers Guide to the Galaxy game? That guy must have been an amazing coder.",
      "EditableFormat": "bbcode",
      "HTML": "I just tried playing The Hitchhikers Guide to the Galaxy and I was impressed at very specific responses one gets for unresolved objects. Look at these 3 examples:<br/><br/>If I write something that does not make sense like PICK UP HOUSE, I get a response: Nice try.<br/>If I write PICK UP SHIT, I get a response: I don't know the word &quot;shit&quot;.<br/>If I write SMELL SOUTH, I get a response: You used the word &quot;south&quot; in a way that I don't understand.<br/><br/>So it looks like the author made a code which literally understands the difference between unknown words that do not exist in the game, and ones that do. How does one do that?<br/><br/>PS. I have managed to find a command &quot;UnresolvedObject&quot;, and when I type in &quot;I don't know the word&quot;  I get a response: I don't know the word (shit) - which is fine btw, but how do I then achieve the response: &quot;You used the word &quot;south&quot; in a way that I don't understand.&quot; Can somebody please decipher the code and tell me which things to change in the hidden library to what to be able to achieve the same result as from The Hitchhikers Guide to the Galaxy game? That guy must have been an amazing coder.",
      "PostDate": "2014-06-06T14:15:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29025",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Well, basically, they're completely different parsers with different strategies. I don't think there's a simple solution for what you want (but who knows - I haven't looked totally yet!).\n\nThe Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that. Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb. So then you have to search through all the verbs and commands as well, and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.\n\nQuest is based on pattern matching, not on knowing what various words mean. I think to get the responses you list, you'd have to change the fundamental way the parser is put together, unless you want to create numerous hacks. It's an interesting problem, and I'll think about it some more, but it might not be as easy a change as some others have been!",
      "EditableFormat": "bbcode",
      "HTML": "Well, basically, they're completely different parsers with different strategies. I don't think there's a simple solution for what you want (but who knows - I haven't looked totally yet!).<br/><br/>The Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that. Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb. So then you have to search through all the verbs and commands as well, and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.<br/><br/>Quest is based on pattern matching, not on knowing what various words mean. I think to get the responses you list, you'd have to change the fundamental way the parser is put together, unless you want to create numerous hacks. It's an interesting problem, and I'll think about it some more, but it might not be as easy a change as some others have been!",
      "PostDate": "2014-06-06T14:37:32+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29026",
      "UserId": 0,
      "Username": "Mareus",
      "UserAvatar": null,
      "UserGravatar": "8b9df2e9edea8ac3419d60d8fb226b70",
      "EditableText": "[quote=&quot;jaynabonne&quot;:3hjwcduz]Well, basically, they're completely different parsers with different strategies. I don't think there's a simple solution for what you want (but who knows - I haven't looked totally yet!).\n\nThe Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that.\n\nQuest is based on pattern matching, not on knowing what various words mean. I think to get the responses you list, you'd have to change the fundamental way the parser is put together, unless you want to create numerous hacks. It's an interesting problem, and I'll think about it some more, but it might not be as easy a change as some others have been![/quote:3hjwcduz]\n\nOk, what about a compromise solution then? How do I make it so that the (word) appears in the middle of the text and not at the end? This would allow me to form the sentence which is more universal to various situations. For example I want the unresolved response to be: You used the word (X) in a way that I don't understand. Or another universal response could be: I don't know how to use the word (X) in such a way.\n\nPS. I also noticed that the author from the game I mentioned uses words that are directly taken from the text I write and problematic words are marked behind &quot;&quot;. Whereas mine are in (). The problem is that sometimes I get a response: I do not know the word (X) and sometimes just I do not know the word \n\nSo it looks like the word is missing and I don't know why.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Well, basically, they're completely different parsers with different strategies. I don't think there's a simple solution for what you want (but who knows - I haven't looked totally yet!).<br/><br/>The Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that.<br/><br/>Quest is based on pattern matching, not on knowing what various words mean. I think to get the responses you list, you'd have to change the fundamental way the parser is put together, unless you want to create numerous hacks. It's an interesting problem, and I'll think about it some more, but it might not be as easy a change as some others have been!</blockquote><br/><br/>Ok, what about a compromise solution then? How do I make it so that the (word) appears in the middle of the text and not at the end? This would allow me to form the sentence which is more universal to various situations. For example I want the unresolved response to be: You used the word (X) in a way that I don't understand. Or another universal response could be: I don't know how to use the word (X) in such a way.<br/><br/>PS. I also noticed that the author from the game I mentioned uses words that are directly taken from the text I write and problematic words are marked behind &quot;&quot;. Whereas mine are in (). The problem is that sometimes I get a response: I do not know the word (X) and sometimes just I do not know the word <br/><br/>So it looks like the word is missing and I don't know why.",
      "PostDate": "2014-06-06T14:44:30+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29027",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "This function is where it is printed:\n[code:33dn8k0v]  &lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;\n    // TO DO&#58; Update names below, we don't need these two variables\n    unresolvedobject = objectname\n    unresolvedkey = varname\n    \n    if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {\n      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n      }\n      else {\n        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)\n      }\n    }\n    else {\n      // Start replacing here&#46;\n      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n        msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n      }\n      else {\n        msg (Template(&quot;UnresolvedObject&quot;))\n      }\n      // End replacing here&#46;\n    }\n    game&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern\n    game&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist\n    game&#46;unresolvedcommandkey = unresolvedkey\n  &lt;/function&gt;[/code:33dn8k0v]\nWhat you can do (untested!) is to replace the code I have delimited by comments with this:\n\n[code:33dn8k0v]msg(&quot;You used the word &quot; + unresolvedobject  + &quot; in a way I didn't understand&#46;&quot;)[/code:33dn8k0v]\nThere is no way to do it without hacking the code. To do that, either paste the above code into your game and modify it, or you can check &quot;Show Library Elements&quot; under &quot;Filter&quot; at the bottom left and then find the function &quot;UnresolvedCommand&quot; and copy it into your game using the button at the top right. Then you can modify it.\n\n[Relatively unimportant note: if you got the message &quot;I don't know the word (s***)&quot;, then (if I read the code right), it was in a context where there was more than one object, and it printed out the object name to disambiguate. If you replace as I said above, it will cover both cases, but I was wondering what you had typed to get that. Normally it just prints the text without th word in question. But don't worry about that too much. It's not that important to me. lol]",
      "EditableFormat": "bbcode",
      "HTML": "This function is where it is printed:<br/><pre><code>  &lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;<br/>    // TO DO&#58; Update names below, we don't need these two variables<br/>    unresolvedobject = objectname<br/>    unresolvedkey = varname<br/>    <br/>    if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {<br/>      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>      }<br/>      else {<br/>        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)<br/>      }<br/>    }<br/>    else {<br/>      // Start replacing here&#46;<br/>      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>        msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>      }<br/>      else {<br/>        msg (Template(&quot;UnresolvedObject&quot;))<br/>      }<br/>      // End replacing here&#46;<br/>    }<br/>    game&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern<br/>    game&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist<br/>    game&#46;unresolvedcommandkey = unresolvedkey<br/>  &lt;/function&gt;</code></pre><br/>What you can do (untested!) is to replace the code I have delimited by comments with this:<br/><br/><pre><code>msg(&quot;You used the word &quot; + unresolvedobject  + &quot; in a way I didn't understand&#46;&quot;)</code></pre><br/>There is no way to do it without hacking the code. To do that, either paste the above code into your game and modify it, or you can check &quot;Show Library Elements&quot; under &quot;Filter&quot; at the bottom left and then find the function &quot;UnresolvedCommand&quot; and copy it into your game using the button at the top right. Then you can modify it.<br/><br/>[Relatively unimportant note: if you got the message &quot;I don't know the word (s***)&quot;, then (if I read the code right), it was in a context where there was more than one object, and it printed out the object name to disambiguate. If you replace as I said above, it will cover both cases, but I was wondering what you had typed to get that. Normally it just prints the text without th word in question. But don't worry about that too much. It's not that important to me. lol]",
      "PostDate": "2014-06-06T19:56:07+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29028",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "I'll leave Jay to help you with unresolved responses, as he knows more of how quest's core coding works than I do, but I'll offer this help as well (Credit to Pertex for this stuff):\n\nyou can use parameters, so you can then place the variable, ' Attribute (Object.Attribute) ', where you want into the text message, ' print message [EXPRESSION] '\n\nalso, when you check text, you have the issues of:\n\n1. does the Object even exist (regardless of #2 and #3 below) ?\n2. does the Object's 'NAME (ID)' Attribute match up with what is the typed-in (during game play by an user) input ?\n3. does the Object's 'ALIAS' Attribute match up with what is the typed-in (during game play by an user) input ?\n\nan explanation:\n\ntyped-in input during game play: HK\n\n&lt;object name=&quot;player&quot;&gt;\n-&gt; &lt;alias&gt;HK&lt;/object&gt;\n&lt;/object&gt;\n\nquest: &quot; is there an Object.Name = HK, ??? &quot;, Answer: No, therefore ( &lt;command&gt;#text# or #object#&lt;/command&gt; or ' get input ' Script) the: Variable = null\n\nyou would have to type-in ' player ', for it to work.\n\nhowever, you can get it to work, via these checks, and check-matching-up all the object's (in the entire game) ALIAS with whether one of them matches up with your typed-in input, as example'd below:\n\nfor an example:\n\n&lt;command name=&quot;fight_command&quot;&gt;\n-&gt; &lt;pattern&gt;fight #text#&lt;/pattern&gt;\n-&gt; &lt;script&gt;\n-&gt;-&gt; fight_function (game.pov,text)\n-&gt; &lt;/script\n&lt;/command&gt;\n\n// game.pov -&gt; self // (game.pov = self)\n// text -&gt; text_x // (text = text_x)\n\n&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text_x&quot;&gt;\n-&gt; enemy = GetObject (text_x)\n-&gt; if (enemy = null) {\n-&gt;-&gt; foreach (object_x, AllObjects () ) {\n-&gt;-&gt;-&gt; if (object_x.alias = text_x) {\n-&gt;-&gt;-&gt;-&gt; enemy = object_x\n-&gt;-&gt;-&gt; }\n-&gt;-&gt; }\n-&gt; }\n-&gt; if (enemy = null) {\n-&gt;-&gt; msg (&quot;Bad input, try again.&quot;)\n-&gt; } else if (not enemy = null) {\n-&gt;-&gt; battle_function (self, enemy)\n-&gt; }\n&lt;/function&gt;\n\n// self -&gt; self // (self = self)\n// enemy -&gt; enemy // (enemy = enemy)\n\n&lt;function name=&quot;battle_function&quot; parameters=&quot;self,enemy&quot;&gt;\n-&gt; you_go_first_variable = false\n-&gt; if (self.speed_integer &gt; enemy.speed_integer) {\n-&gt;-&gt; you_go_first_variable = true\n-&gt; } else if (self.speed_integer = enemy.speed_integer) {\n-&gt;-&gt; if (RandomChance (50) = true) {\n-&gt;-&gt;-&gt; you_go_first_variable = true\n-&gt;-&gt; }\n-&gt; }\n-&gt; if (you_go_first_variable = false) {\n-&gt;-&gt; enemy_battle_turn_function (self, enemy)\n-&gt; } else if (you_go_first_variable = true) {\n-&gt;-&gt; self_battle_turn_function (self, enemy)\n-&gt; }\n&lt;/function&gt;\n\n// self -&gt; self // (self = self)\n// enemy -&gt; enemy // (enemy = enemy)\n\n&lt;function name=&quot;self_battle_function&quot; parameters=&quot;self, enemy&quot;&gt;\n-&gt; // scripts\n&lt;/function&gt;\n\n&lt;function name=&quot;enemy_battle_function&quot; parameters=&quot;self, enemy&quot;&gt;\n-&gt; // scripts\n&lt;/function&gt;",
      "EditableFormat": "bbcode",
      "HTML": "I'll leave Jay to help you with unresolved responses, as he knows more of how quest's core coding works than I do, but I'll offer this help as well (Credit to Pertex for this stuff):<br/><br/>you can use parameters, so you can then place the variable, ' Attribute (Object.Attribute) ', where you want into the text message, ' print message [EXPRESSION] '<br/><br/>also, when you check text, you have the issues of:<br/><br/>1. does the Object even exist (regardless of #2 and #3 below) ?<br/>2. does the Object's 'NAME (ID)' Attribute match up with what is the typed-in (during game play by an user) input ?<br/>3. does the Object's 'ALIAS' Attribute match up with what is the typed-in (during game play by an user) input ?<br/><br/>an explanation:<br/><br/>typed-in input during game play: HK<br/><br/>&lt;object name=&quot;player&quot;&gt;<br/>-&gt; &lt;alias&gt;HK&lt;/object&gt;<br/>&lt;/object&gt;<br/><br/>quest: &quot; is there an Object.Name = HK, ??? &quot;, Answer: No, therefore ( &lt;command&gt;#text# or #object#&lt;/command&gt; or ' get input ' Script) the: Variable = null<br/><br/>you would have to type-in ' player ', for it to work.<br/><br/>however, you can get it to work, via these checks, and check-matching-up all the object's (in the entire game) ALIAS with whether one of them matches up with your typed-in input, as example'd below:<br/><br/>for an example:<br/><br/>&lt;command name=&quot;fight_command&quot;&gt;<br/>-&gt; &lt;pattern&gt;fight #text#&lt;/pattern&gt;<br/>-&gt; &lt;script&gt;<br/>-&gt;-&gt; fight_function (game.pov,text)<br/>-&gt; &lt;/script<br/>&lt;/command&gt;<br/><br/>// game.pov -&gt; self // (game.pov = self)<br/>// text -&gt; text_x // (text = text_x)<br/><br/>&lt;function name=&quot;fight_function&quot; parameters=&quot;self,text_x&quot;&gt;<br/>-&gt; enemy = GetObject (text_x)<br/>-&gt; if (enemy = null) {<br/>-&gt;-&gt; foreach (object_x, AllObjects () ) {<br/>-&gt;-&gt;-&gt; if (object_x.alias = text_x) {<br/>-&gt;-&gt;-&gt;-&gt; enemy = object_x<br/>-&gt;-&gt;-&gt; }<br/>-&gt;-&gt; }<br/>-&gt; }<br/>-&gt; if (enemy = null) {<br/>-&gt;-&gt; msg (&quot;Bad input, try again.&quot;)<br/>-&gt; } else if (not enemy = null) {<br/>-&gt;-&gt; battle_function (self, enemy)<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>// self -&gt; self // (self = self)<br/>// enemy -&gt; enemy // (enemy = enemy)<br/><br/>&lt;function name=&quot;battle_function&quot; parameters=&quot;self,enemy&quot;&gt;<br/>-&gt; you_go_first_variable = false<br/>-&gt; if (self.speed_integer &gt; enemy.speed_integer) {<br/>-&gt;-&gt; you_go_first_variable = true<br/>-&gt; } else if (self.speed_integer = enemy.speed_integer) {<br/>-&gt;-&gt; if (RandomChance (50) = true) {<br/>-&gt;-&gt;-&gt; you_go_first_variable = true<br/>-&gt;-&gt; }<br/>-&gt; }<br/>-&gt; if (you_go_first_variable = false) {<br/>-&gt;-&gt; enemy_battle_turn_function (self, enemy)<br/>-&gt; } else if (you_go_first_variable = true) {<br/>-&gt;-&gt; self_battle_turn_function (self, enemy)<br/>-&gt; }<br/>&lt;/function&gt;<br/><br/>// self -&gt; self // (self = self)<br/>// enemy -&gt; enemy // (enemy = enemy)<br/><br/>&lt;function name=&quot;self_battle_function&quot; parameters=&quot;self, enemy&quot;&gt;<br/>-&gt; // scripts<br/>&lt;/function&gt;<br/><br/>&lt;function name=&quot;enemy_battle_function&quot; parameters=&quot;self, enemy&quot;&gt;<br/>-&gt; // scripts<br/>&lt;/function&gt;",
      "PostDate": "2014-06-06T21:00:17+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29029",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "HK, did you respond to the wrong thread?",
      "EditableFormat": "bbcode",
      "HTML": "HK, did you respond to the wrong thread?",
      "PostDate": "2014-06-06T21:07:14+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29030",
      "UserId": 0,
      "Username": "Mareus",
      "UserAvatar": null,
      "UserGravatar": "8b9df2e9edea8ac3419d60d8fb226b70",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2c4igksk]This function is where it is printed:\n[code:2c4igksk]  &lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;\n    // TO DO&#58; Update names below, we don't need these two variables\n    unresolvedobject = objectname\n    unresolvedkey = varname\n    \n    if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {\n      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n      }\n      else {\n        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)\n      }\n    }\n    else {\n      // Start replacing here&#46;\n      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {\n        msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)\n      }\n      else {\n        msg (Template(&quot;UnresolvedObject&quot;))\n      }\n      // End replacing here&#46;\n    }\n    game&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern\n    game&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist\n    game&#46;unresolvedcommandkey = unresolvedkey\n  &lt;/function&gt;[/code:2c4igksk]\nWhat you can do (untested!) is to replace the code I have delimited by comments with this:\n\n[code:2c4igksk]msg(&quot;You used the word &quot; + unresolvedobject  + &quot; in a way I didn't understand&#46;&quot;)[/code:2c4igksk]\nThere is no way to do it without hacking the code. To do that, either paste the above code into your game and modify it, or you can check &quot;Show Library Elements&quot; under &quot;Filter&quot; at the bottom left and then find the function &quot;UnresolvedCommand&quot; and copy it into your game using the button at the top right. Then you can modify it.\n\n[Relatively unimportant note: if you got the message &quot;I don't know the word (s***)&quot;, then (if I read the code right), it was in a context where there was more than one object, and it printed out the object name to disambiguate. If you replace as I said above, it will cover both cases, but I was wondering what you had typed to get that. Normally it just prints the text without th word in question. But don't worry about that too much. It's not that important to me. lol][/quote:2c4igksk]\n\nThanks for this, but I don't want to mess up the coding. This just feels a bit more than I can handle atm, since I don't really understand the instructions on how to do what you are suggesting. I'll just use the response: &quot;I don't understand your command. Try rephrasing.&quot;, and sometimes I will get the unresolved object in the the () and sometimes not. Its not ideal, but it works from the testing I've done. The only thing that bothers me is the &quot;full stop&quot;  before (unresolved object) - and if I erase the full stop, then when the (unresolved object) doesn't show up, then the full stop is missing. Still, its small issue really.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>This function is where it is printed:<br/><pre><code>  &lt;function name=&quot;UnresolvedCommand&quot; parameters=&quot;objectname, varname&quot;&gt;<br/>    // TO DO&#58; Update names below, we don't need these two variables<br/>    unresolvedobject = objectname<br/>    unresolvedkey = varname<br/>    <br/>    if (HasString(game&#46;pov&#46;currentcommandpattern, &quot;unresolved&quot;)) {<br/>      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>      }<br/>      else {<br/>        msg (game&#46;pov&#46;currentcommandpattern&#46;unresolved)<br/>      }<br/>    }<br/>    else {<br/>      // Start replacing here&#46;<br/>      if (ListCount(game&#46;pov&#46;currentcommandvarlist) &gt; 1) {<br/>        msg (Template(&quot;UnresolvedObject&quot;) + &quot; (&quot; + unresolvedobject + &quot;)&quot;)<br/>      }<br/>      else {<br/>        msg (Template(&quot;UnresolvedObject&quot;))<br/>      }<br/>      // End replacing here&#46;<br/>    }<br/>    game&#46;unresolvedcommand = game&#46;pov&#46;currentcommandpattern<br/>    game&#46;unresolvedcommandvarlist = game&#46;pov&#46;currentcommandvarlist<br/>    game&#46;unresolvedcommandkey = unresolvedkey<br/>  &lt;/function&gt;</code></pre><br/>What you can do (untested!) is to replace the code I have delimited by comments with this:<br/><br/><pre><code>msg(&quot;You used the word &quot; + unresolvedobject  + &quot; in a way I didn't understand&#46;&quot;)</code></pre><br/>There is no way to do it without hacking the code. To do that, either paste the above code into your game and modify it, or you can check &quot;Show Library Elements&quot; under &quot;Filter&quot; at the bottom left and then find the function &quot;UnresolvedCommand&quot; and copy it into your game using the button at the top right. Then you can modify it.<br/><br/>[Relatively unimportant note: if you got the message &quot;I don't know the word (s***)&quot;, then (if I read the code right), it was in a context where there was more than one object, and it printed out the object name to disambiguate. If you replace as I said above, it will cover both cases, but I was wondering what you had typed to get that. Normally it just prints the text without th word in question. But don't worry about that too much. It's not that important to me. lol]</blockquote><br/><br/>Thanks for this, but I don't want to mess up the coding. This just feels a bit more than I can handle atm, since I don't really understand the instructions on how to do what you are suggesting. I'll just use the response: &quot;I don't understand your command. Try rephrasing.&quot;, and sometimes I will get the unresolved object in the the () and sometimes not. Its not ideal, but it works from the testing I've done. The only thing that bothers me is the &quot;full stop&quot;  before (unresolved object) - and if I erase the full stop, then when the (unresolved object) doesn't show up, then the full stop is missing. Still, its small issue really.",
      "PostDate": "2014-06-06T21:16:41+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29031",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "No. I responded correctly to this thread.\n\nI was added in the coding that you suggested might be needed on top of unsolved responses:\n\n[quote=&quot;Jay&quot;:7caj1ewh]The Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that. Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb. So then you have to search through all the verbs and commands as well, and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.[/quote:7caj1ewh]\n\n&quot;I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that.&quot;\n\n(see my previous post)\n\n&quot; Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb.&quot;\n\nyou could further expand 'my' (Credit to Pertex) previous post's coding, to include checking for if it's a 'verb' or 'command'\n\n&quot; and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.&quot;\n\nand again, you could further expand 'my' (Credit to Pertex) previous post's coding, to include checking for if it's an 'exit' or whatever else, too.\n\n----------\n\nsorry, Mareus, I forgot to explain how parameters will allow you to put your input into the middle of a message:\n\n&lt;command name=&quot;message_command&quot;&gt;\n-&gt; &lt;pattern&gt;greetings&lt;/pattern&gt;\n-&gt; &lt;script&gt;\n-&gt;-&gt; msg (&quot;Who do you want to say 'hello' to?&quot;)\n-&gt;-&gt; get input {\n-&gt;-&gt;-&gt; text = result\n-&gt;-&gt;-&gt; message_function (text)\n-&gt;-&gt; }\n-&gt; &lt;/script&gt;\n&lt;/command&gt;\n\n&lt;function name=&quot;message_function&quot; parameters=&quot;text&quot;&gt;\n-&gt; object_x = GetObject (text)\n-&gt; if (object_x = null) {\n-&gt;-&gt; msg (&quot;You can't say 'hello' to &quot; + text + &quot;, because it doesn't exist, silly.&quot;)\n-&gt; }\n&lt;/function&gt;",
      "EditableFormat": "bbcode",
      "HTML": "No. I responded correctly to this thread.<br/><br/>I was added in the coding that you suggested might be needed on top of unsolved responses:<br/><br/><blockquote><cite>Jay wrote:</cite>The Quest parser handles an &quot;unresolved object&quot; with something like &quot;I don't see that.&quot; The reason why is that the parser makes no distinction between an object (or word for an object) that doesn't exist at all vs one which just doesn't happen to be in the current scope. I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that. Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb. So then you have to search through all the verbs and commands as well, and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.</blockquote><br/><br/>&quot;I suspect that you want it where, if you have an apple in the game but not a banana, if you're in an empty room and type &quot;x apple&quot;, it will say, &quot;I can't see that.&quot; whereas if you type &quot;x banana&quot;, it will response with &quot;I don't know the word 'banana'.&quot; You could probably code for that contingency by trying to do a match on all the objects in the game to see if there is one that satisfies the text, but Quest was not coded for that.&quot;<br/><br/>(see my previous post)<br/><br/>&quot; Though, upon further thought, that won't work either, as you could type &quot;take eat&quot;, and it would not find an object called &quot;eat&quot; and so say it doesn't know the word, when it does - as a verb.&quot;<br/><br/>you could further expand 'my' (Credit to Pertex) previous post's coding, to include checking for if it's a 'verb' or 'command'<br/><br/>&quot; and all the exits names, and... It's just not made to do that. If you designed it to do that, it would be easier to code.&quot;<br/><br/>and again, you could further expand 'my' (Credit to Pertex) previous post's coding, to include checking for if it's an 'exit' or whatever else, too.<br/><br/>----------<br/><br/>sorry, Mareus, I forgot to explain how parameters will allow you to put your input into the middle of a message:<br/><br/>&lt;command name=&quot;message_command&quot;&gt;<br/>-&gt; &lt;pattern&gt;greetings&lt;/pattern&gt;<br/>-&gt; &lt;script&gt;<br/>-&gt;-&gt; msg (&quot;Who do you want to say 'hello' to?&quot;)<br/>-&gt;-&gt; get input {<br/>-&gt;-&gt;-&gt; text = result<br/>-&gt;-&gt;-&gt; message_function (text)<br/>-&gt;-&gt; }<br/>-&gt; &lt;/script&gt;<br/>&lt;/command&gt;<br/><br/>&lt;function name=&quot;message_function&quot; parameters=&quot;text&quot;&gt;<br/>-&gt; object_x = GetObject (text)<br/>-&gt; if (object_x = null) {<br/>-&gt;-&gt; msg (&quot;You can't say 'hello' to &quot; + text + &quot;, because it doesn't exist, silly.&quot;)<br/>-&gt; }<br/>&lt;/function&gt;",
      "PostDate": "2014-06-06T21:20:38+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29032",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Ok, I see now. I had no idea where you were suggesting that code you posted would actually go. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Ok, I see now. I had no idea where you were suggesting that code you posted would actually go. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "PostDate": "2014-06-06T21:30:48+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29033",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Mareus, would you be able to post what you have, along with the commands to see what you're seeing? I could modify your doc and post it back to you as well. (If you don't want to do so here for any reason, you could always email me.)",
      "EditableFormat": "bbcode",
      "HTML": "Mareus, would you be able to post what you have, along with the commands to see what you're seeing? I could modify your doc and post it back to you as well. (If you don't want to do so here for any reason, you could always email me.)",
      "PostDate": "2014-06-06T21:32:08+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29034",
      "UserId": 0,
      "Username": "Mareus",
      "UserAvatar": null,
      "UserGravatar": "8b9df2e9edea8ac3419d60d8fb226b70",
      "EditableText": "[quote=&quot;jaynabonne&quot;:f33vdpu2]Mareus, would you be able to post what you have, along with the commands to see what you're seeing? I could modify your doc and post it back to you as well. (If you don't want to do so here for any reason, you could always email me.)[/quote:f33vdpu2]\n\nHey, that is very nice of you. Sure <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I would gladly do that. Here you are.\n\nPS. If you notice anything is off, you can change that too. I don't mind as long as it improves the game.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Mareus, would you be able to post what you have, along with the commands to see what you're seeing? I could modify your doc and post it back to you as well. (If you don't want to do so here for any reason, you could always email me.)</blockquote><br/><br/>Hey, that is very nice of you. Sure <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --> I would gladly do that. Here you are.<br/><br/>PS. If you notice anything is off, you can change that too. I don't mind as long as it improves the game.<div><a href=\"/attachment/915\">The Horror Within.aslx</a></div>",
      "PostDate": "2014-06-06T21:36:43+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29035",
      "UserId": 0,
      "Username": "jaynabonne",
      "UserAvatar": "6579_1344778256.jpg",
      "UserGravatar": "379859a7f1952a65399fc63997e68f0b",
      "EditableText": "Attached is your file with the above change made to it (with some minor tweaks like the wrong wording I had and some quotes added around the word). See if it works the way you want. And don't overwrite your original game file until you're sure. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->",
      "EditableFormat": "bbcode",
      "HTML": "Attached is your file with the above change made to it (with some minor tweaks like the wrong wording I had and some quotes added around the word). See if it works the way you want. And don't overwrite your original game file until you're sure. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --><div><a href=\"/attachment/916\">The Horror Within.aslx</a></div>",
      "PostDate": "2014-06-06T22:17:16+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "29037",
      "UserId": 0,
      "Username": "Mareus",
      "UserAvatar": null,
      "UserGravatar": "8b9df2e9edea8ac3419d60d8fb226b70",
      "EditableText": "[quote=&quot;jaynabonne&quot;:2r4quayg]Attached is your file with the above change made to it (with some minor tweaks like the wrong wording I had and some quotes added around the word). See if it works the way you want. And don't overwrite your original game file until you're sure. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) -->[/quote:2r4quayg]\n\nI am really grateful for your effort Jay. It works, perfectly. Btw, if you tried out my game and you have any suggestions, I am all ears.",
      "EditableFormat": "bbcode",
      "HTML": "<blockquote><cite>jaynabonne wrote:</cite>Attached is your file with the above change made to it (with some minor tweaks like the wrong wording I had and some quotes added around the word). See if it works the way you want. And don't overwrite your original game file until you're sure. <!-- s:) --><img src=\"{SMILIES_PATH}/icon_smile.gif\" alt=\":)\" title=\"Smile\" /><!-- s:) --></blockquote><br/><br/>I am really grateful for your effort Jay. It works, perfectly. Btw, if you tried out my game and you have any suggestions, I am all ears.",
      "PostDate": "2014-06-07T02:43:24+01:00",
      "LastEditDate": null
    }
  ]
}
