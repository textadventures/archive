{
  "Topic": {
    "TopicId": "l0x8cicxdkus_hzg3z70hg",
    "ForumId": "10",
    "Title": "Is there an easier way to do this? (set_withut_changedscript() function)",
    "LastUpdated": "2017-09-18T15:24:00.4657542Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "940e1d79-a52c-473e-af1c-7808951c89cf",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Hey;\r\nJust found myself wanting to move the player without calling any OnExit or OnBeforeEnter scripts. Then I realised there's a few cases where I might want to ignore things that are triggered by a changedscript. So I threw this together.\r\n\r\nIs there an easier way to do it?\r\n```\r\n<function name=\"set_without_changedscript\" parameters=\"object, attribute, value\">\r\n  if( HasScript(object, \"changed\"+attribute)) {\r\n    changedscript = GetAttribute(object, \"changed\"+attribute)\r\n    set_without_changedscript (object, \"changed\"+attribute) {\r\n      // do nothing\r\n    }\r\n    set (object, attribute, value)\r\n    set_without_changedscript (object, \"changed\"+attribute, changedscript)\r\n  }\r\n  else {\r\n    set (object, attribute, value)\r\n  }\r\n</function>\r\n```\r\n\r\nAnd have I messed something up there, or has the server just gone down again?",
      "EditableFormat": "markdown",
      "HTML": "<p>Hey;<br>\nJust found myself wanting to move the player without calling any OnExit or OnBeforeEnter scripts. Then I realised there's a few cases where I might want to ignore things that are triggered by a changedscript. So I threw this together.</p>\n<p>Is there an easier way to do it?</p>\n<pre><code>&lt;function name=\"set_without_changedscript\" parameters=\"object, attribute, value\"&gt;\n  if( HasScript(object, \"changed\"+attribute)) {\n    changedscript = GetAttribute(object, \"changed\"+attribute)\n    set_without_changedscript (object, \"changed\"+attribute) {\n      // do nothing\n    }\n    set (object, attribute, value)\n    set_without_changedscript (object, \"changed\"+attribute, changedscript)\n  }\n  else {\n    set (object, attribute, value)\n  }\n&lt;/function&gt;\n</code></pre>\n<p>And have I messed something up there, or has the server just gone down again?</p>\n\n",
      "PostDate": "2017-09-18T15:24:00.4657542Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "ff9adaf4-3960-40db-bda4-297b7877dffd",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "This is how I teleport.\r\n\r\nMake an object. Name it \"Teleport 1.\"\r\nCheck the take feature.\r\nEdit the use command. (It seems simpler to me.)\r\nRun script.\r\nType this;\r\n```\r\nMoveObject (player, Battle Room)\r\n```\r\nIt moves player to the battle room.\r\nI also have a teleport system from hegemankhan that works like this. Link. Scoll down to 3/4 way. http://textadventures.co.uk/forum/samples/topic/vg6jtjrayesr4e5kqqytig/simple-combat-code-update-working-on-a-new-system\r\n\r\nI don't know anything about changed scripts.",
      "EditableFormat": "markdown",
      "HTML": "<p>This is how I teleport.</p>\n<p>Make an object. Name it \"Teleport 1.\"<br>\nCheck the take feature.<br>\nEdit the use command. (It seems simpler to me.)<br>\nRun script.<br>\nType this;</p>\n<pre><code>MoveObject (player, Battle Room)\n</code></pre>\n<p>It moves player to the battle room.<br>\nI also have a teleport system from hegemankhan that works like this. Link. Scoll down to 3/4 way. http://textadventures.co.uk/forum/samples/topic/vg6jtjrayesr4e5kqqytig/simple-combat-code-update-working-on-a-new-system</p>\n<p>I don't know anything about changed scripts.</p>\n\n",
      "PostDate": "2017-09-18T20:30:00.8698069Z",
      "LastEditDate": "2017-09-18T20:33:02.4019664Z",
      "link": null
    },
    {
      "PostId": "61835be2-bc7f-46b6-9d85-ab1747169c8a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Update: It appears this works for other attributes, but not for parent. I don't know why not.\r\n\r\njmnevil54: Does using `MoveObject()` not trigger the OnExit script for the room you're currently in? Looking at the code I'd expect it to, but I haven't actually tried it in this case.",
      "EditableFormat": "markdown",
      "HTML": "<p>Update: It appears this works for other attributes, but not for parent. I don't know why not.</p>\n<p>jmnevil54: Does using <code>MoveObject()</code> not trigger the OnExit script for the room you're currently in? Looking at the code I'd expect it to, but I haven't actually tried it in this case.</p>\n\n",
      "PostDate": "2017-09-18T20:39:49.5366315Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "3840f1ce-9b7a-4ca3-bf6c-e1725ac30057",
      "UserId": 267336,
      "Username": "jmnevil54",
      "AvatarUrl": "https://secure.gravatar.com/avatar/5d73d7ec1dbe20a5cb46f02a6d53f187?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I don't use OnExit, but I assume it works like the after leaving the room script. The script still works. Everything works fine.\r\n\r\nCorrect me if I'm wrong, though.",
      "EditableFormat": "markdown",
      "HTML": "<p>I don't use OnExit, but I assume it works like the after leaving the room script. The script still works. Everything works fine.</p>\n<p>Correct me if I'm wrong, though.</p>\n\n",
      "PostDate": "2017-09-18T20:48:32.50901Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f9919d53-255b-4f70-96e2-aa05c008c626",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "On further investigation, I can add the following ugly bodge:\r\n\r\n```\r\n<function name=\"set_without_changedscript\" parameters=\"object, attribute, value\">\r\n  if ( object = game.pov and attribute = \"parent\") {\r\n    // Yes, I know that the game.changedpov script will assign 'this' a load of irrelevant attributes,\r\n    // but as far as I can tell that won't break anything, or matter in future\r\n    game.pov = this\r\n    object.parent = value\r\n    game.pov = object\r\n  }\r\n  else if( HasScript(object, \"changed\"+attribute)) {\r\n    changedscript = GetAttribute(object, \"changed\"+attribute)\r\n    set_without_changedscript (object, \"changed\"+attribute) {\r\n      // do nothing\r\n    }\r\n    set (object, attribute, value)\r\n    set_without_changedscript (object, \"changed\"+attribute, changedscript)\r\n  }\r\n  else {\r\n    set (object, attribute, value)\r\n  }\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>On further investigation, I can add the following ugly bodge:</p>\n<pre><code>&lt;function name=\"set_without_changedscript\" parameters=\"object, attribute, value\"&gt;\n  if ( object = game.pov and attribute = \"parent\") {\n    // Yes, I know that the game.changedpov script will assign 'this' a load of irrelevant attributes,\n    // but as far as I can tell that won't break anything, or matter in future\n    game.pov = this\n    object.parent = value\n    game.pov = object\n  }\n  else if( HasScript(object, \"changed\"+attribute)) {\n    changedscript = GetAttribute(object, \"changed\"+attribute)\n    set_without_changedscript (object, \"changed\"+attribute) {\n      // do nothing\n    }\n    set (object, attribute, value)\n    set_without_changedscript (object, \"changed\"+attribute, changedscript)\n  }\n  else {\n    set (object, attribute, value)\n  }\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2017-09-18T20:50:03.9808368Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "1696b86a-00ea-458a-b726-3f31246bf3e2",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "jmnevil54\r\n`OnExit` **IS** the after-leaving-room script.\r\n\r\nI specifically said in the first post, I want to move the player **without** triggering the on-leave or on-enter scripts for the rooms they're moving between.\r\n\r\nIf the script \"works fine\", I assume that means that it's not a good way to stop that script from being called.",
      "EditableFormat": "markdown",
      "HTML": "<p>jmnevil54<br>\n<code>OnExit</code> <strong>IS</strong> the after-leaving-room script.</p>\n<p>I specifically said in the first post, I want to move the player <strong>without</strong> triggering the on-leave or on-enter scripts for the rooms they're moving between.</p>\n<p>If the script \"works fine\", I assume that means that it's not a good way to stop that script from being called.</p>\n\n",
      "PostDate": "2017-09-18T20:56:33.0787453Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "bd7a3483-74a3-4c5d-b9f4-2f752a5cfc5f",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "The containment heirarchy is actually controlled by the built-in 'parent' Object (reference/pointer) Attribute:\r\n\r\n```\r\nplayer.parent = room\r\n// or\r\nset (player, \"parent\", room)\r\n// or\r\nMoveObject (player, room) // this is just a helper Function, which just does: player.parent = room // or: set (player, \"parent\", room)\r\n//\r\n// are the same as this:\r\n\r\n<object name=\"room\">\r\n  // not shown by default (due its parent being the 'asl' GAME OBJECT, which is expressed as 'null'): <attr name=\"parent\" type=\"object\">null</attr>\r\n  <object name=\"player\">\r\n    // not shown by default (due to being nested), but this is what it is: <attr name=\"parent\" type=\"object\">room</attr>\r\n  </object>\r\n</object>\r\n\r\n// or:\r\n\r\n<object name=\"room\">\r\n  // not shown by default (due its parent being the 'asl' GAME OBJECT, which is expressed as 'null'): <attr name=\"parent\" type=\"object\">null</attr>\r\n</object>\r\n\r\n<object name=\"player\">\r\n  <attr name=\"parent\" type=\"object\">room</attr>\r\n</object>\r\n```\r\n\r\n-------------------------\r\n\r\nbut, I do believe that all of these methods activate the various other scripts... as they're all ultimate controlled by the 'parent' Object (reference/pointer) Attribute, which is likely programmed to handle all of those other scripts\r\n\r\n-----------------------\r\n\r\nthus, you'd need to edit the built-in code for handling the 'parent' Object (reference/pointer) Attribute, to add in code that controls whether those other scripts are fired/activated/run/executed or not.",
      "EditableFormat": "markdown",
      "HTML": "<p>The containment heirarchy is actually controlled by the built-in 'parent' Object (reference/pointer) Attribute:</p>\n<pre><code>player.parent = room\n// or\nset (player, \"parent\", room)\n// or\nMoveObject (player, room) // this is just a helper Function, which just does: player.parent = room // or: set (player, \"parent\", room)\n//\n// are the same as this:\n\n&lt;object name=\"room\"&gt;\n  // not shown by default (due its parent being the 'asl' GAME OBJECT, which is expressed as 'null'): &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n  &lt;object name=\"player\"&gt;\n    // not shown by default (due to being nested), but this is what it is: &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n  &lt;/object&gt;\n&lt;/object&gt;\n\n// or:\n\n&lt;object name=\"room\"&gt;\n  // not shown by default (due its parent being the 'asl' GAME OBJECT, which is expressed as 'null'): &lt;attr name=\"parent\" type=\"object\"&gt;null&lt;/attr&gt;\n&lt;/object&gt;\n\n&lt;object name=\"player\"&gt;\n  &lt;attr name=\"parent\" type=\"object\"&gt;room&lt;/attr&gt;\n&lt;/object&gt;\n</code></pre>\n<hr>\n<p>but, I do believe that all of these methods activate the various other scripts... as they're all ultimate controlled by the 'parent' Object (reference/pointer) Attribute, which is likely programmed to handle all of those other scripts</p>\n<hr>\n<p>thus, you'd need to edit the built-in code for handling the 'parent' Object (reference/pointer) Attribute, to add in code that controls whether those other scripts are fired/activated/run/executed or not.</p>\n\n",
      "PostDate": "2017-09-18T21:16:57.5979659Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d071b2d0-ed11-4419-bd70-9bf0e7007c5a",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan\r\n> The containment heirarchy is actually controlled by the built-in 'parent' Object (reference/pointer) Attribute:\r\n> MoveObject (player, room) // this is just a helper Function, which just does: player.parent = room\r\n\r\nYes; I know.\r\nThis is why in the first post, I was moving the player by changing `game.pov.parent`\r\n\r\n> but, I do believe that all of these methods activate the various other scripts\r\n\r\nYes.\r\nWhen you change `player.parent`, it automatically runs the script `player.changedparent`, which calls all the other scripts (including the OnExit, BeforeEnter, ShowRoomDescription, OnEnter, and changing the grid/map for your new location.\r\n\r\nThis is why in the first post I have a function which removes the script named `\"changed\"+attribute`, changes the attribute, and then puts that script back where it was.\r\n\r\nUnfortunately, this doesn't seem to work for `parent`. It seems that this one attribute is special somehow. Still trying to figure out why. Currently trying to pull myself out of a panic attack, so my reasoning may not be quite sound right now, or I might have missed something.\r\n\r\nMight try again in the morning.\r\nStill, at least I have a workaround. Just temporarily change which object is the player object, to one that won't be moving and doesn't have a `changedparent` script for another reason. Making the player temporarily be a function seems to work fine.",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan</p>\n<blockquote>\n<p>The containment heirarchy is actually controlled by the built-in 'parent' Object (reference/pointer) Attribute:<br>\nMoveObject (player, room) // this is just a helper Function, which just does: player.parent = room</p>\n</blockquote>\n<p>Yes; I know.<br>\nThis is why in the first post, I was moving the player by changing <code>game.pov.parent</code></p>\n<blockquote>\n<p>but, I do believe that all of these methods activate the various other scripts</p>\n</blockquote>\n<p>Yes.<br>\nWhen you change <code>player.parent</code>, it automatically runs the script <code>player.changedparent</code>, which calls all the other scripts (including the OnExit, BeforeEnter, ShowRoomDescription, OnEnter, and changing the grid/map for your new location.</p>\n<p>This is why in the first post I have a function which removes the script named <code>\"changed\"+attribute</code>, changes the attribute, and then puts that script back where it was.</p>\n<p>Unfortunately, this doesn't seem to work for <code>parent</code>. It seems that this one attribute is special somehow. Still trying to figure out why. Currently trying to pull myself out of a panic attack, so my reasoning may not be quite sound right now, or I might have missed something.</p>\n<p>Might try again in the morning.<br>\nStill, at least I have a workaround. Just temporarily change which object is the player object, to one that won't be moving and doesn't have a <code>changedparent</code> script for another reason. Making the player temporarily be a function seems to work fine.</p>\n\n",
      "PostDate": "2017-09-18T22:08:16.0208567Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "8f5bc63b-069c-47ee-a03c-d0039365b959",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I'm sure somewhere in the built-in (user-level) code (or the underlying source code), you can modify this behavior of the 'parent' Object (reference/pointer) Attribute.... but... you got to find (dig for) it... of course... lol:\r\n\r\nbuilt-in code:\r\n\r\nGUI/Editor: (lower left corner) Filter -> Show Library Elements -> (toggle it on / check in the box) -> light-grey text in the \"tree of stuff\" above) -> Copy (right side) -> modify the code to what you want it as\r\n\r\nor, just go into the 'quest 5' folder and its sub folders (mainly the 'core' sub folder), and right click on the files, opening them with a text editor software (notepad, wordpad, Apple: text editor, notepad++, etc)\r\n\r\nunderlying source code:\r\n\r\nhttps://github.com/textadventures/quest\r\n^^^^^^^^^^^^^^^^\r\nhttps://github.com/textadventures/",
      "EditableFormat": "markdown",
      "HTML": "<p>I'm sure somewhere in the built-in (user-level) code (or the underlying source code), you can modify this behavior of the 'parent' Object (reference/pointer) Attribute.... but... you got to find (dig for) it... of course... lol:</p>\n<p>built-in code:</p>\n<p>GUI/Editor: (lower left corner) Filter -&gt; Show Library Elements -&gt; (toggle it on / check in the box) -&gt; light-grey text in the \"tree of stuff\" above) -&gt; Copy (right side) -&gt; modify the code to what you want it as</p>\n<p>or, just go into the 'quest 5' folder and its sub folders (mainly the 'core' sub folder), and right click on the files, opening them with a text editor software (notepad, wordpad, Apple: text editor, notepad++, etc)</p>\n<p>underlying source code:</p>\n<p>https://github.com/textadventures/quest<br>\n^^^^^^^^^^^^^^^^<br>\nhttps://github.com/textadventures/</p>\n\n",
      "PostDate": "2017-09-19T02:16:26.8428916Z",
      "LastEditDate": "2017-09-19T02:26:41.0346131Z",
      "link": null
    },
    {
      "PostId": "f46f8d55-ed7e-422e-ac54-278160e7553e",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Is this because you are using it in the start script? Quest calls `OnEnterRoom` after running the start script, just like the change script does.\r\n\r\nI have just been trying this out, and it looks like your original function works, it just looks like it doesn't if used in game.start!",
      "EditableFormat": "markdown",
      "HTML": "<p>Is this because you are using it in the start script? Quest calls <code>OnEnterRoom</code> after running the start script, just like the change script does.</p>\n<p>I have just been trying this out, and it looks like your original function works, it just looks like it doesn't if used in game.start!</p>\n\n",
      "PostDate": "2017-09-19T08:36:45.4405498Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7bc3fe1a-9f8c-4442-b504-a89208b24878",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Weird…\r\nI thought it should work, I can walk through the code in the Core functions manually.\r\n\r\nIn the end I had a different solution to this particular problem; realising that the exit scripts I was having trouble blocking weren't actually necessary.\r\n\r\nNow the thing that's confusing me is room descriptions. I've got a BeforeEnter script that prints a message and bounces the player to a random room.\r\n\r\nSo my BeforeEnter script is:\r\n```\r\nmsg (\"You get lost\")\r\nmsg (\"DEBUG: Redirecting to room \"+this.targetroom.name)\r\nset_without_changedscripts (game.pov, \"parent\", this.targetroom)\r\nmsg (\"DEBUG: The enter/exit scripts shouldn't have fired?\")\r\n```\r\n\r\nNow that I've removed the offending exit script, the output is simply:\r\n```\r\nYou get lost\r\nDEBUG: Redirecting to room woods_C1\r\nYou are in a woods_C1.\r\nYou can go east, south or north.\r\nDEBUG: The enter/exit scripts shouldn't have fired?\r\n\r\nYou are in a woods_C1.\r\nYou can go north, east or south.\r\n```\r\n\r\nI've also tried using `game.pov.parent = this.targetroom` bracketed by temporarily setting `game.showdescriptiononenter` to false and restoring it afterwards, which I'm absolutely sure should work, but it doesn't. I must be missing something really obvious.\r\nOr there's a typo somewhere that I completely missed. Or I'm misunderstanding the flow of control that gets to ShowRoomDescription. Or there's a difference between the Core scripts I've downloaded and the ones used by the online editor. Or the online editor manages to cache some bits of the script, so when I hit 'play' I get a bizarre mix of old and new code… I really hope that's not the case.\r\n\r\n\r\nNow my brain's back on form (I hope), I might go back to playing with this. Or work on actual code.\r\n\r\nOh… an aside. In the course of poking through the code I came across something that looks like it might be a gotcha for some game creators. (Unless I'm misreading it) In Core.aslx, line 356:\r\n```\r\n      if (game.showhealth) {\r\n        newPOV.health = 100\r\n        newPOV.changedhealth => {\r\n          ... etc ...\r\n```\r\nThis means that if you're using the default health system, a playable object's health attribute will be set to 100 the first time it is used as the player object. A designer who wants to have the player start with less than full health (whether it's your normal player object, or having a flashback to being a legendary hero in the middle of a battle so you can learn firsthand about the game world's history) ... they might try setting the 'health' attribute for a player object in the editor, and then be surprised that it doesn't work. I can imagine that would be really confusing for someone to debug.\r\n\r\nI would suggest that these lines should be guarded by `if (not HasInt (newPOV, \"health\")) {` and `if (not HasScript (newPOV, \"changedhealth\")) {` respectively; allowing the user to override them in the same way they can most attributes.\r\n\r\n(I was previously working on a game where a part of the gameplay was the ability to possess NPCs, and different people could get into different places. I would have been rather confused if I added the ability to possess an enemy during a battle, only to find that doing so mysteriously heals any damage they've taken, but only if it's a person you haven't been before)",
      "EditableFormat": "markdown",
      "HTML": "<p>Weird…<br>\nI thought it should work, I can walk through the code in the Core functions manually.</p>\n<p>In the end I had a different solution to this particular problem; realising that the exit scripts I was having trouble blocking weren't actually necessary.</p>\n<p>Now the thing that's confusing me is room descriptions. I've got a BeforeEnter script that prints a message and bounces the player to a random room.</p>\n<p>So my BeforeEnter script is:</p>\n<pre><code>msg (\"You get lost\")\nmsg (\"DEBUG: Redirecting to room \"+this.targetroom.name)\nset_without_changedscripts (game.pov, \"parent\", this.targetroom)\nmsg (\"DEBUG: The enter/exit scripts shouldn't have fired?\")\n</code></pre>\n<p>Now that I've removed the offending exit script, the output is simply:</p>\n<pre><code>You get lost\nDEBUG: Redirecting to room woods_C1\nYou are in a woods_C1.\nYou can go east, south or north.\nDEBUG: The enter/exit scripts shouldn't have fired?\n\nYou are in a woods_C1.\nYou can go north, east or south.\n</code></pre>\n<p>I've also tried using <code>game.pov.parent = this.targetroom</code> bracketed by temporarily setting <code>game.showdescriptiononenter</code> to false and restoring it afterwards, which I'm absolutely sure should work, but it doesn't. I must be missing something really obvious.<br>\nOr there's a typo somewhere that I completely missed. Or I'm misunderstanding the flow of control that gets to ShowRoomDescription. Or there's a difference between the Core scripts I've downloaded and the ones used by the online editor. Or the online editor manages to cache some bits of the script, so when I hit 'play' I get a bizarre mix of old and new code… I really hope that's not the case.</p>\n<p>Now my brain's back on form (I hope), I might go back to playing with this. Or work on actual code.</p>\n<p>Oh… an aside. In the course of poking through the code I came across something that looks like it might be a gotcha for some game creators. (Unless I'm misreading it) In Core.aslx, line 356:</p>\n<pre><code>      if (game.showhealth) {\n        newPOV.health = 100\n        newPOV.changedhealth =&gt; {\n          ... etc ...\n</code></pre>\n<p>This means that if you're using the default health system, a playable object's health attribute will be set to 100 the first time it is used as the player object. A designer who wants to have the player start with less than full health (whether it's your normal player object, or having a flashback to being a legendary hero in the middle of a battle so you can learn firsthand about the game world's history) ... they might try setting the 'health' attribute for a player object in the editor, and then be surprised that it doesn't work. I can imagine that would be really confusing for someone to debug.</p>\n<p>I would suggest that these lines should be guarded by <code>if (not HasInt (newPOV, \"health\")) {</code> and <code>if (not HasScript (newPOV, \"changedhealth\")) {</code> respectively; allowing the user to override them in the same way they can most attributes.</p>\n<p>(I was previously working on a game where a part of the gameplay was the ability to possess NPCs, and different people could get into different places. I would have been rather confused if I added the ability to possess an enemy during a battle, only to find that doing so mysteriously heals any damage they've taken, but only if it's a person you haven't been before)</p>\n\n",
      "PostDate": "2017-09-19T09:57:29.8711311Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "f40ebbb0-8b93-418f-b5dc-0c73179761ca",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you move the player in the `enter` script of a room...\r\n\r\nWhen you enter the first room, Quest will run `OnEnterRoom`, which will invoke the script that moves the player to the second room, and then will run the `OnEnterRoom` script for the new room, which will print the description of the current room. Then Quest goes back to the first `OnEnterRoom, which will print the description of the current room.\r\n\r\nSo you end up with the description of the second room twice, and no description from the first.",
      "EditableFormat": "markdown",
      "HTML": "<p>If you move the player in the <code>enter</code> script of a room...</p>\n<p>When you enter the first room, Quest will run <code>OnEnterRoom</code>, which will invoke the script that moves the player to the second room, and then will run the <code>OnEnterRoom</code> script for the new room, which will print the description of the current room. Then Quest goes back to the first `OnEnterRoom, which will print the description of the current room.</p>\n<p>So you end up with the description of the second room twice, and no description from the first.</p>\n\n",
      "PostDate": "2017-09-19T10:14:18.9301225Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "272beaea-7d5b-469a-a435-ba5f3ebfe704",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Pixie: Yep, that was my interpretation.\r\nBut why does my set_without_changedscript function not prevent OnExit, ShowRoomDescription, OnEnter for the second move?\r\n\r\nI would think that it should run the before-enter script for the room in the middle, which moves you to the new one but doesn't invoke `changedparent`. Then control returns to the changedparent script that was run by the _initial_ move, which calls the OnEnter and ShowDescription scripts 9but not BeforeEnter, because it's already done that) for the new room.\r\n\r\n\r\nWait ... is it a problem with assigning a new value to a script object that's currently running?\r\n\r\nHave previously used (in different circumstances): a script which when run, changes itself to a different script. The script that's running carries on running to the end, but any subsequent calls to the same script will execute the new one. This is exactly what I'd expect to happen.\r\n\r\nBut this time, I'm doing: a script which, when run, replaces the script attribute with a different script, _then calls that script_. And appears to still call the previous version.\r\n\r\nAm I running into some code-cache issues? Like… if I call `set_without_changedscripts(obj, att, value)` from within the changedatt script, will Quest use the same changedatt script again and not notice that it's been removed?\r\nTrying to think of a simple testcase for that is making my brain hurt.",
      "EditableFormat": "markdown",
      "HTML": "<p>Pixie: Yep, that was my interpretation.<br>\nBut why does my set_without_changedscript function not prevent OnExit, ShowRoomDescription, OnEnter for the second move?</p>\n<p>I would think that it should run the before-enter script for the room in the middle, which moves you to the new one but doesn't invoke <code>changedparent</code>. Then control returns to the changedparent script that was run by the <em>initial</em> move, which calls the OnEnter and ShowDescription scripts 9but not BeforeEnter, because it's already done that) for the new room.</p>\n<p>Wait ... is it a problem with assigning a new value to a script object that's currently running?</p>\n<p>Have previously used (in different circumstances): a script which when run, changes itself to a different script. The script that's running carries on running to the end, but any subsequent calls to the same script will execute the new one. This is exactly what I'd expect to happen.</p>\n<p>But this time, I'm doing: a script which, when run, replaces the script attribute with a different script, <em>then calls that script</em>. And appears to still call the previous version.</p>\n<p>Am I running into some code-cache issues? Like… if I call <code>set_without_changedscripts(obj, att, value)</code> from within the changedatt script, will Quest use the same changedatt script again and not notice that it's been removed?<br>\nTrying to think of a simple testcase for that is making my brain hurt.</p>\n\n",
      "PostDate": "2017-09-19T10:33:53.3731856Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d3afdb98-6bee-46be-9f4f-69692c3213e7",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "OK, got it.\r\nIt's recursion that's the problem. The function shown in my first post works, _unless_ you are calling from within the changedscript for the same attribute. This means that you can use this function to change player.parent, and doing so suppresses the OnExit, OnEnter, ShowDescription, etc... but it fails if you use it within one of those scripts.\r\n\r\nThat's a weird behaviour.\r\n\r\nEdit: No, something weird is going on. The editor game me \"an internal error has occurred\" and reloaded itself three times in a row; and then my original code suddenly works as intended.\r\n(very, very confused)",
      "EditableFormat": "markdown",
      "HTML": "<p>OK, got it.<br>\nIt's recursion that's the problem. The function shown in my first post works, <em>unless</em> you are calling from within the changedscript for the same attribute. This means that you can use this function to change player.parent, and doing so suppresses the OnExit, OnEnter, ShowDescription, etc... but it fails if you use it within one of those scripts.</p>\n<p>That's a weird behaviour.</p>\n<p>Edit: No, something weird is going on. The editor game me \"an internal error has occurred\" and reloaded itself three times in a row; and then my original code suddenly works as intended.<br>\n(very, very confused)</p>\n\n",
      "PostDate": "2017-09-19T11:08:28.4469685Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "298694fd-6d5d-4a3c-a6b0-cbb63a6ef2c3",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(there's a couple of rooms that were having this issue. While testing different theories I just kept changing one of them. Can confirm that they all now seem to work. So... when I was testing last night and earlier this morning, it was just the editor being weird at me?)",
      "EditableFormat": "markdown",
      "HTML": "<p>(there's a couple of rooms that were having this issue. While testing different theories I just kept changing one of them. Can confirm that they all now seem to work. So... when I was testing last night and earlier this morning, it was just the editor being weird at me?)</p>\n\n",
      "PostDate": "2017-09-19T11:23:53.4452524Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
