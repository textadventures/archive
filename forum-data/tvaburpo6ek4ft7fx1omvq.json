{
  "Topic": {
    "TopicId": "tvaburpo6ek4ft7fx1omvq",
    "ForumId": "10",
    "Title": "Silly question about player.alias",
    "LastUpdated": "2018-04-03T15:35:03.1499776Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f7ec2a26-ca4c-4dbc-982f-20c1a1c94c16",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I can put some text into the player's \"alias\" attribute; but whenever I refer to ```player.alias``` into any script, it gives me the text it finds into the attribute ```player.pov_alias```. How could I make it NOT override the main \"alias\" attribute? Besides setting the \"pov_alias\" attribute, I mean.",
      "EditableFormat": "markdown",
      "HTML": "<p>I can put some text into the player's \"alias\" attribute; but whenever I refer to <code>player.alias</code> into any script, it gives me the text it finds into the attribute <code>player.pov_alias</code>. How could I make it NOT override the main \"alias\" attribute? Besides setting the \"pov_alias\" attribute, I mean.</p>\n\n",
      "PostDate": "2018-04-03T15:35:03.1499776Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "7cc13ea3-818a-4307-805f-ca53d566d120",
      "UserId": 318253,
      "Username": "K.V.",
      "AvatarUrl": "https://i.imgur.com/mBf7TBeb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "If you are playing as an object, its alias is the pov_alias.\r\n\r\nYou can set all sorts of things under the 'Player' tab:\r\n\r\n![image](https://user-images.githubusercontent.com/30656341/38260039-2f253b28-372c-11e8-9304-8384c13e7197.png)",
      "EditableFormat": "markdown",
      "HTML": "<p>If you are playing as an object, its alias is the pov_alias.</p>\n<p>You can set all sorts of things under the 'Player' tab:</p>\n<p><img src=\"https://user-images.githubusercontent.com/30656341/38260039-2f253b28-372c-11e8-9304-8384c13e7197.png\" alt=\"image\"></p>\n\n",
      "PostDate": "2018-04-03T15:46:31.7949902Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b349ccb3-0582-435b-9545-ebf7765482e7",
      "UserId": 348994,
      "Username": "CheeseMyBaby",
      "AvatarUrl": "https://i.imgur.com/c5nBbAgb.png",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "< offtopic >\r\n/me thoroughly investigates that screenshot.\r\n\r\nThere is a cave?! I did not find that yet =(\r\n\r\n< /offtopic >",
      "EditableFormat": "markdown",
      "HTML": "<p>&lt; offtopic &gt;<br>\n/me thoroughly investigates that screenshot.</p>\n<p>There is a cave?! I did not find that yet =(</p>\n<p>&lt; /offtopic &gt;</p>\n\n",
      "PostDate": "2018-04-03T17:37:23.0827341Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "b5beb6c8-d8d6-4c15-abd2-91db306c3a45",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "`pov_alias` is copied over the `alias` attribute when an object becomes the player. So you could either put the text you want into pov_alias, as KV suggested. Or you could change `player.alias` after the player object has been set; for example in the game's start script.\r\nOr you could use `player.external_alias`, which contains the value that you originally entered in the `alias` box. (This is used so that if you allow the player to control a different character later on, it can restore the original alias)\r\n\r\nIf you want to switch player object during the game without pov_alias overwriting alias, then you could do that by temporarily removing the script `game.changedpov`. This probably isn't a good idea, though.",
      "EditableFormat": "markdown",
      "HTML": "<p><code>pov_alias</code> is copied over the <code>alias</code> attribute when an object becomes the player. So you could either put the text you want into pov_alias, as KV suggested. Or you could change <code>player.alias</code> after the player object has been set; for example in the game's start script.<br>\nOr you could use <code>player.external_alias</code>, which contains the value that you originally entered in the <code>alias</code> box. (This is used so that if you allow the player to control a different character later on, it can restore the original alias)</p>\n<p>If you want to switch player object during the game without pov_alias overwriting alias, then you could do that by temporarily removing the script <code>game.changedpov</code>. This probably isn't a good idea, though.</p>\n\n",
      "PostDate": "2018-04-03T17:43:43.1734918Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "e9380a97-aeb9-496d-802c-e729df9b97f1",
      "UserId": 317380,
      "Username": "Skarnisk",
      "AvatarUrl": "https://secure.gravatar.com/avatar/8f75fa016b0e53ef53921491413be161?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Thanks. I have to stick with ```pov_alias```, I suppose.",
      "EditableFormat": "markdown",
      "HTML": "<p>Thanks. I have to stick with <code>pov_alias</code>, I suppose.</p>\n\n",
      "PostDate": "2018-04-03T17:53:53.7495784Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "99dba931-ebf3-43f6-9ab6-9db2febe5c43",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "it's also the same with the 'look' vs 'pov_look', as this confuses a lot of people:\r\n\r\nthey put in their description for their Object's 'look' String/Script Attribute, but since this Object is also a Player Object, they don't see that description and are confused, not realizing that while you're controlling that Object, it's using the 'pov_look' String/Script  Attribute, and so they don't have any look description, but while NOT controlling that Object, they'll then see the look description\r\n\r\n----------\r\n\r\nwhile controlling an Object, it uses the 'pov_NAME_OF_ATTRIBUTE' Attributes, and while NOT controlling an Object, it just uses the 'NAME_OF_ATTRIBUTE' Attributes.\r\n\r\nso, for example, in the GUI/Editor, there's two locations for the look descriptions: under the 'setup' Tab (for when NOT controlling the Object) and under the 'player' Tab (for when controlling the Object)\r\n\r\n--------\r\n\r\nfor the 'look/description' Attributes:\r\n\r\nRoom Objects use the 'description' String/Script Attribute\r\n\r\nPlayer Objects have (can use) both the 'look' (when NOT controlled) and 'pov_look' (when controlled) String/Script Attributes\r\n\r\n(non-room and non-player) Objects use the 'look' String/Script Attribute",
      "EditableFormat": "markdown",
      "HTML": "<p>it's also the same with the 'look' vs 'pov_look', as this confuses a lot of people:</p>\n<p>they put in their description for their Object's 'look' String/Script Attribute, but since this Object is also a Player Object, they don't see that description and are confused, not realizing that while you're controlling that Object, it's using the 'pov_look' String/Script  Attribute, and so they don't have any look description, but while NOT controlling that Object, they'll then see the look description</p>\n<hr>\n<p>while controlling an Object, it uses the 'pov_NAME_OF_ATTRIBUTE' Attributes, and while NOT controlling an Object, it just uses the 'NAME_OF_ATTRIBUTE' Attributes.</p>\n<p>so, for example, in the GUI/Editor, there's two locations for the look descriptions: under the 'setup' Tab (for when NOT controlling the Object) and under the 'player' Tab (for when controlling the Object)</p>\n<hr>\n<p>for the 'look/description' Attributes:</p>\n<p>Room Objects use the 'description' String/Script Attribute</p>\n<p>Player Objects have (can use) both the 'look' (when NOT controlled) and 'pov_look' (when controlled) String/Script Attributes</p>\n<p>(non-room and non-player) Objects use the 'look' String/Script Attribute</p>\n\n",
      "PostDate": "2018-04-03T19:24:29.7066439Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
