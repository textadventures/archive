{
  "Topic": {
    "TopicId": "5pccbr-wz0muz0ecl2gj2q",
    "ForumId": "10",
    "Title": "UI idea",
    "LastUpdated": "2017-09-10T12:50:15.1954429Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "f98f4242-96d7-4093-8565-690e05999324",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Yes, I know I'm coming up with a lot of ideas that involve changing the behaviour of the core libraries. This one, I'm just throwing out there because I hate working with CSS.\r\n\r\nI was playing someone else's game, and found myself often scrolling back to revisit the room description. I recall on my first encounter with text adventures (on the Commodore 16), there was no real scroll feature, but the description of the current room was always visible. If you go to a new room, the screen clears, and the description appears at the top, with the prompt underneath it. Once there's enough text on screen, the lower pane scrolls, but the room description remains at the top (complete with a dynamic list of objects and exits).\r\n\r\nObviously, we've got the objects and exits/compass in the sidebar now. And it would presumably be possible to get the room name+description to stick in a pane across the top, with the remainder of the text scrolling \"behind\" it. That shouldn't be too hard. The only slight wrinkle is if you do some action that displays a response you need, and then moves you to another room. But if I remember correctly, those old games had an answer to that as well: if a room description appears without a clear-screen before it, it follows behaviour which roughly follows the behaviour of the CSS `position: sticky` property. The description appears inline, until it scrolls to the top of the screen at which point it pushes the previous room's description off.\r\n\r\nI think this wouldn't be too hard to implement; assuming the player's browser supports sticky. I don't like to play with CSS though; so just offering the thought in case it's not been done yet. I suspect this could be done in a library; you'd probably need to override `ShowRoomDescription` (though you could probably just get it to wrap a named class around the description, and do the rest in JS)",
      "EditableFormat": "markdown",
      "HTML": "<p>Yes, I know I'm coming up with a lot of ideas that involve changing the behaviour of the core libraries. This one, I'm just throwing out there because I hate working with CSS.</p>\n<p>I was playing someone else's game, and found myself often scrolling back to revisit the room description. I recall on my first encounter with text adventures (on the Commodore 16), there was no real scroll feature, but the description of the current room was always visible. If you go to a new room, the screen clears, and the description appears at the top, with the prompt underneath it. Once there's enough text on screen, the lower pane scrolls, but the room description remains at the top (complete with a dynamic list of objects and exits).</p>\n<p>Obviously, we've got the objects and exits/compass in the sidebar now. And it would presumably be possible to get the room name+description to stick in a pane across the top, with the remainder of the text scrolling \"behind\" it. That shouldn't be too hard. The only slight wrinkle is if you do some action that displays a response you need, and then moves you to another room. But if I remember correctly, those old games had an answer to that as well: if a room description appears without a clear-screen before it, it follows behaviour which roughly follows the behaviour of the CSS <code>position: sticky</code> property. The description appears inline, until it scrolls to the top of the screen at which point it pushes the previous room's description off.</p>\n<p>I think this wouldn't be too hard to implement; assuming the player's browser supports sticky. I don't like to play with CSS though; so just offering the thought in case it's not been done yet. I suspect this could be done in a library; you'd probably need to override <code>ShowRoomDescription</code> (though you could probably just get it to wrap a named class around the description, and do the rest in JS)</p>\n\n",
      "PostDate": "2017-09-10T12:50:15.1954429Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
