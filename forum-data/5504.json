{
  "Topic": {
    "TopicId": "5504",
    "ForumId": "10",
    "Title": "How do I increase attribute by more than 1",
    "LastUpdated": "2015-09-25T21:30:46+01:00",
    "ReplyCount": 2
  },
  "Posts": [
    {
      "PostId": "38086",
      "UserId": 0,
      "Username": "Erikweiss4",
      "UserAvatar": null,
      "UserGravatar": "6ab4de68dfdb2194a3351813040eab4a",
      "EditableText": "I've figured out how to increase my attributes by 1 using the &quot;increase object counter&quot; but how can I increase them by more than 1??",
      "EditableFormat": "bbcode",
      "HTML": "I've figured out how to increase my attributes by 1 using the &quot;increase object counter&quot; but how can I increase them by more than 1??",
      "PostDate": "2015-09-25T20:57:36+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38087",
      "UserId": 0,
      "Username": "lightwriter",
      "UserAvatar": null,
      "UserGravatar": "4361dea0f293c64bea42cb1253ce25d4",
      "EditableText": "let's say the attribute is health of the player, you simply do the following:\n[code:uax1cn47]player&#46;health = player&#46;health + 25\n//you can even add variables together\nplayer&#46;mana = player&#46;mana - player&#46;manaused[/code:uax1cn47]",
      "EditableFormat": "bbcode",
      "HTML": "let's say the attribute is health of the player, you simply do the following:<br/><pre><code>player&#46;health = player&#46;health + 25<br/>//you can even add variables together<br/>player&#46;mana = player&#46;mana - player&#46;manaused</code></pre>",
      "PostDate": "2015-09-25T21:10:58+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "38088",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "in GUI~Editor:\n\nrun as script -&gt; add new script -&gt; variables -&gt; 'set a variable or attribute' -&gt; (see below)\n\n[code:3fgwtpev]set variable Object_name&#46;Attribute_name = &#91;expression&#93; Object_name&#46;Attribute_name OPERATOR Value[/code:3fgwtpev]\n\n*(Math) OPERATORS:\n\n[code:3fgwtpev]Programming's Assignment (as there is no math's &quot;equals&quot; in programming)&#58; =\n\nAddition&#58; +\nSubtraction&#58; -\nMultiplication&#58; *\n\nDivision (division&#58; returns the Quotient only)&#58; /\nModulus (division, but it returns the Remainder only, instead of the quotient)&#58; %\n\nExponents&#58; I'm not sure actually haven't needed to work with them yet&#46;&#46;&#46; but it's probably&#58; **, ^, or there's a 'pow' Function\nRoots&#58; see exponents, for example of a square root&#58; ** 0&#46;5, ^ 0&#46;5, or a 'sqrt' Function[/code:3fgwtpev]\n\n**(Math) Relational Operators (used with~in the ' if ' and like Scripts):\n\n[code:3fgwtpev]Equals (comparing)&#58; =\nNot Equals (contrasting) A&#58; &lt;&gt;\nNot Equals (contrasting) B&#58; not xxx = xxx\nGreater Than&#58; &gt;\nLesser Than&#58; &lt;\nGreater Than or Equal To&#58; &gt;=\nLesser Than or Equal To&#58; &lt;=[/code:3fgwtpev]\n\nfor example:\n\n'game' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)\n\nAttribute Name: turns\nAttribute Type: int (integer: non-decimal numbers)\nAttribute Value_or_Expression: 0\n~OR~\nAttribute Name: turns\nAttribute Type: double (decimal numbers)\nAttribute Value_or_Expression: 0.0\n\nObject Name: game\nAttribute Name: turns\n\nfor my ' Value ', let's say we'll use: 5\n\nreplace my ' Object_name ' with ' game ' and ' Attribute_name ' with ' turns ' and ' Value ' with ' 5 '\n\nso, for example:\n\nset variable game.turns = [expression] game.turns + 5\n\n----------------------\n\nin scripting code:\n\nObject_name.Attribute_name = Object_name.Attribute_name OPERATOR Value\n\nfor example:\n\ngame.turns = game.turns + 5\n\n------------------\n\nCONCEPTUALLY, how programming's *ASSIGNMENT* (not math's equals) works:\n\n[code:3fgwtpev]initial (old) value&#58; game&#46;turns = 0\n\nequation (expression)&#58; game&#46;turns = game&#46;turns + 5\n\n--\n\nold value&#58; game&#46;turns = 0\n\ngame&#46;turns (new) = game&#46;turns (old&#58; 0) + 5\ngame&#46;turns (new) = (0) + 5\n\nnew value&#58; game&#46;turns = 5\n\n--\n\nold value&#58; game&#46;turns = 5\n\ngame&#46;turns (new) = game&#46;turns (old&#58; 5) + 5\ngame&#46;turns (new) = (5) + 5\n\nnew value&#58; game&#46;turns = 10\n\n--\n\nold value&#58; game&#46;turns = 10\n\ngame&#46;turns (new) = game&#46;turns (old&#58; 10) + 5\ngame&#46;turns (new) = (10) + 5\n\nnew value&#58; game&#46;turns = 15\n\n--\n\netc etc etc[/code:3fgwtpev]",
      "EditableFormat": "bbcode",
      "HTML": "in GUI~Editor:<br/><br/>run as script -&gt; add new script -&gt; variables -&gt; 'set a variable or attribute' -&gt; (see below)<br/><br/><pre><code>set variable Object_name&#46;Attribute_name = &#91;expression&#93; Object_name&#46;Attribute_name OPERATOR Value</code></pre><br/><br/>*(Math) OPERATORS:<br/><br/><pre><code>Programming's Assignment (as there is no math's &quot;equals&quot; in programming)&#58; =<br/><br/>Addition&#58; +<br/>Subtraction&#58; -<br/>Multiplication&#58; *<br/><br/>Division (division&#58; returns the Quotient only)&#58; /<br/>Modulus (division, but it returns the Remainder only, instead of the quotient)&#58; %<br/><br/>Exponents&#58; I'm not sure actually haven't needed to work with them yet&#46;&#46;&#46; but it's probably&#58; **, ^, or there's a 'pow' Function<br/>Roots&#58; see exponents, for example of a square root&#58; ** 0&#46;5, ^ 0&#46;5, or a 'sqrt' Function</code></pre><br/><br/>**(Math) Relational Operators (used with~in the ' if ' and like Scripts):<br/><br/><pre><code>Equals (comparing)&#58; =<br/>Not Equals (contrasting) A&#58; &lt;&gt;<br/>Not Equals (contrasting) B&#58; not xxx = xxx<br/>Greater Than&#58; &gt;<br/>Lesser Than&#58; &lt;<br/>Greater Than or Equal To&#58; &gt;=<br/>Lesser Than or Equal To&#58; &lt;=</code></pre><br/><br/>for example:<br/><br/>'game' Object -&gt; 'Attributes' Tab -&gt; Attributes -&gt; Add -&gt; (see below)<br/><br/>Attribute Name: turns<br/>Attribute Type: int (integer: non-decimal numbers)<br/>Attribute Value_or_Expression: 0<br/>~OR~<br/>Attribute Name: turns<br/>Attribute Type: double (decimal numbers)<br/>Attribute Value_or_Expression: 0.0<br/><br/>Object Name: game<br/>Attribute Name: turns<br/><br/>for my ' Value ', let's say we'll use: 5<br/><br/>replace my ' Object_name ' with ' game ' and ' Attribute_name ' with ' turns ' and ' Value ' with ' 5 '<br/><br/>so, for example:<br/><br/>set variable game.turns = [expression] game.turns + 5<br/><br/>----------------------<br/><br/>in scripting code:<br/><br/>Object_name.Attribute_name = Object_name.Attribute_name OPERATOR Value<br/><br/>for example:<br/><br/>game.turns = game.turns + 5<br/><br/>------------------<br/><br/>CONCEPTUALLY, how programming's *ASSIGNMENT* (not math's equals) works:<br/><br/><pre><code>initial (old) value&#58; game&#46;turns = 0<br/><br/>equation (expression)&#58; game&#46;turns = game&#46;turns + 5<br/><br/>--<br/><br/>old value&#58; game&#46;turns = 0<br/><br/>game&#46;turns (new) = game&#46;turns (old&#58; 0) + 5<br/>game&#46;turns (new) = (0) + 5<br/><br/>new value&#58; game&#46;turns = 5<br/><br/>--<br/><br/>old value&#58; game&#46;turns = 5<br/><br/>game&#46;turns (new) = game&#46;turns (old&#58; 5) + 5<br/>game&#46;turns (new) = (5) + 5<br/><br/>new value&#58; game&#46;turns = 10<br/><br/>--<br/><br/>old value&#58; game&#46;turns = 10<br/><br/>game&#46;turns (new) = game&#46;turns (old&#58; 10) + 5<br/>game&#46;turns (new) = (10) + 5<br/><br/>new value&#58; game&#46;turns = 15<br/><br/>--<br/><br/>etc etc etc</code></pre>",
      "PostDate": "2015-09-25T21:30:46+01:00",
      "LastEditDate": null
    }
  ]
}
