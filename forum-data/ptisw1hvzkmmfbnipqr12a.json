{
  "Topic": {
    "TopicId": "ptisw1hvzkmmfbnipqr12a",
    "ForumId": "10",
    "Title": "Thoughts on wearables",
    "LastUpdated": "2018-08-25T22:19:27.3574879Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "9a491127-878c-4d0a-b94e-21487c956956",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just been looking at the wearables code, and it seems a bit clunky. It would be easy for a naive user to change the 'worn' flag directly, not realising that they need to use functions to ensure that any bonuses from a garment are applied correctly.\r\n\r\nWouldn't it be neater to have something like:\r\n\r\n```\r\n<function name=\"SetBonuses\" parameters=\"garment, wearflag\">\r\n  // This function provided for backwards compatibility\r\n  //   in case any scripts call it manually. In most cases it will do nothing,\r\n  //   but the existing wearables library advises users to call it, so it's better to replace it\r\n  //   with a do-nothing function rather than break any libraries that call it\r\n\r\n  // Small piece of code so that this function will behave sanely if called for some reason on a non-garment\r\n  if (not DoesInherit (garment, \"wearable\")) {\r\n    if (HasString (garment, \"bonusatts\")) {\r\n      ApplyBonuses (game.pov, garment.bonusatts, not wearflag)\r\n    }\r\n  }\r\n</function>\r\n\r\n<function name=\"ApplyBonuses\" parameters=\"character, bonuses, remove\">\r\n  foreach (att, Split(bonuses, \";\")) {\r\n    bonus = 1\r\n    plusarray = Split(att, \"+\")\r\n    minusarray = Split(att, \"-\")\r\n    if (ListCount(plusarray) = 2) {\r\n      att = StringListitem(plusarray, 0)\r\n      if (not IsInt(StringListitem(plusarray, 1))) error (\"Bonus attribute not properly formatted: \" + att)\r\n      bonus = ToInt(StringListitem(plusarray, 1))\r\n    }\r\n    if (ListCount(minusarray) = 2) {\r\n      att = StringListitem(minusarray, 0)\r\n      if (not IsInt(StringListitem(minusarray, 1))) error (\"Negative bonus attribute not properly formatted: \" + att)\r\n      bonus = -ToInt(StringListitem(minusarray, 1))\r\n    }\r\n    if (remove) {\r\n      bonus = -bonus\r\n    }\r\n    bonus = ClothingBonusMultiplier() * bonus\r\n    n = GetInt(character, att) + bonus\r\n    set (character, att, n)\r\n  }\r\n</function>\r\n\r\n<type name=\"wearable\">\r\n  <changedworn type=\"script\">\r\n    if (HasString (this, \"bonusatts\")) {\r\n      ApplyBonuses (this.parent, this.bonusatts, this.worn)\r\n    }\r\n    _SetGarmentAlias (this)\r\n  </changedworn>\r\n\r\n  <changedbonusatts type=\"script\">\r\n    if (GetBoolean (this, \"worn\")) {\r\n      if (TypeOf (oldvalue) = \"string\") {\r\n        ApplyBonuses (this.parent, oldvalue, false)\r\n      }\r\n      if (TypeOf (this, \"bonusatts\") = \"string\") {\r\n        ApplyBonuses (this.parent, this.bonusatts, true)\r\n      }\r\n    }\r\n  </changedbonusatts>\r\n\r\n  <changedparent type=\"script\">\r\n    if (GetBoolean (this, \"worn\") and HasString (this, \"bonusatts\")) {\r\n      if (TypeOf(oldvalue) = \"object\") {\r\n        ApplyBonuses (oldvalue, this.bonusatts, false)\r\n      }\r\n      if (TypeOf(this, \"parent\") = \"object\") {\r\n        ApplyBonuses (this.parent, this.bonusatts, true)\r\n      }\r\n    }\r\n    this.worn = false\r\n  </changedparent>\r\n</type>\r\n```\r\n\r\n(this would make garments work more easily when worn by NPCs. Wearing / removing / multistate changes would work elegantly; as would any other script that changes a garment's bonuses while the player is wearing it. The only thing that wouldn't be accounted for is a script calling `destroy()` on a garment, which I think we can't check for.)",
      "EditableFormat": "markdown",
      "HTML": "<p>Just been looking at the wearables code, and it seems a bit clunky. It would be easy for a naive user to change the 'worn' flag directly, not realising that they need to use functions to ensure that any bonuses from a garment are applied correctly.</p>\n<p>Wouldn't it be neater to have something like:</p>\n<pre><code>&lt;function name=\"SetBonuses\" parameters=\"garment, wearflag\"&gt;\n  // This function provided for backwards compatibility\n  //   in case any scripts call it manually. In most cases it will do nothing,\n  //   but the existing wearables library advises users to call it, so it's better to replace it\n  //   with a do-nothing function rather than break any libraries that call it\n\n  // Small piece of code so that this function will behave sanely if called for some reason on a non-garment\n  if (not DoesInherit (garment, \"wearable\")) {\n    if (HasString (garment, \"bonusatts\")) {\n      ApplyBonuses (game.pov, garment.bonusatts, not wearflag)\n    }\n  }\n&lt;/function&gt;\n\n&lt;function name=\"ApplyBonuses\" parameters=\"character, bonuses, remove\"&gt;\n  foreach (att, Split(bonuses, \";\")) {\n    bonus = 1\n    plusarray = Split(att, \"+\")\n    minusarray = Split(att, \"-\")\n    if (ListCount(plusarray) = 2) {\n      att = StringListitem(plusarray, 0)\n      if (not IsInt(StringListitem(plusarray, 1))) error (\"Bonus attribute not properly formatted: \" + att)\n      bonus = ToInt(StringListitem(plusarray, 1))\n    }\n    if (ListCount(minusarray) = 2) {\n      att = StringListitem(minusarray, 0)\n      if (not IsInt(StringListitem(minusarray, 1))) error (\"Negative bonus attribute not properly formatted: \" + att)\n      bonus = -ToInt(StringListitem(minusarray, 1))\n    }\n    if (remove) {\n      bonus = -bonus\n    }\n    bonus = ClothingBonusMultiplier() * bonus\n    n = GetInt(character, att) + bonus\n    set (character, att, n)\n  }\n&lt;/function&gt;\n\n&lt;type name=\"wearable\"&gt;\n  &lt;changedworn type=\"script\"&gt;\n    if (HasString (this, \"bonusatts\")) {\n      ApplyBonuses (this.parent, this.bonusatts, this.worn)\n    }\n    _SetGarmentAlias (this)\n  &lt;/changedworn&gt;\n\n  &lt;changedbonusatts type=\"script\"&gt;\n    if (GetBoolean (this, \"worn\")) {\n      if (TypeOf (oldvalue) = \"string\") {\n        ApplyBonuses (this.parent, oldvalue, false)\n      }\n      if (TypeOf (this, \"bonusatts\") = \"string\") {\n        ApplyBonuses (this.parent, this.bonusatts, true)\n      }\n    }\n  &lt;/changedbonusatts&gt;\n\n  &lt;changedparent type=\"script\"&gt;\n    if (GetBoolean (this, \"worn\") and HasString (this, \"bonusatts\")) {\n      if (TypeOf(oldvalue) = \"object\") {\n        ApplyBonuses (oldvalue, this.bonusatts, false)\n      }\n      if (TypeOf(this, \"parent\") = \"object\") {\n        ApplyBonuses (this.parent, this.bonusatts, true)\n      }\n    }\n    this.worn = false\n  &lt;/changedparent&gt;\n&lt;/type&gt;\n</code></pre>\n<p>(this would make garments work more easily when worn by NPCs. Wearing / removing / multistate changes would work elegantly; as would any other script that changes a garment's bonuses while the player is wearing it. The only thing that wouldn't be accounted for is a script calling <code>destroy()</code> on a garment, which I think we can't check for.)</p>\n\n",
      "PostDate": "2018-08-25T22:19:27.3574879Z",
      "LastEditDate": "2018-08-26T19:13:45.2493318Z",
      "link": null
    },
    {
      "PostId": "93f7881c-e791-4d72-8698-0781025211b1",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(Also, I think a lot of the functionality from `WearGarment` and `RemoveGarment` could be moved into the `changedworn` script; which guards against a naïve user changing the `worn` attribute rather than calling the functions. Not sure if that's essential, though)",
      "EditableFormat": "markdown",
      "HTML": "<p>(Also, I think a lot of the functionality from <code>WearGarment</code> and <code>RemoveGarment</code> could be moved into the <code>changedworn</code> script; which guards against a naïve user changing the <code>worn</code> attribute rather than calling the functions. Not sure if that's essential, though)</p>\n\n",
      "PostDate": "2018-08-26T19:25:25.0371868Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "d01e653a-3db2-4b0d-8996-5e19679de723",
      "UserId": 368953,
      "Username": "ahmed11",
      "AvatarUrl": "https://secure.gravatar.com/avatar/0a097a3fcc40ceba609e7533166cf1c1?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Great ",
      "EditableFormat": "markdown",
      "HTML": "<p>Great</p>\n\n",
      "PostDate": "2018-08-27T09:13:24.0041814Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
