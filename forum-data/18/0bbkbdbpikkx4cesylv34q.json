{
  "Topic": {
    "TopicId": "0bbkbdbpikkx4cesylv34q",
    "ForumId": "18",
    "Title": "Pixies Journal Library",
    "LastUpdated": "2016-09-17T07:38:10.817699Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "001d2926-b81d-454b-adbd-64950b07c9d3",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "First of all I wanted to say thank you again Pixie for the great work and help you give us all. All credit goes to Pixie as it is his/her Library just changed somethings.\r\n\r\nOk so I had the library in game working with my object journal then I changed characters and was no longer able to take notes no matter which way I went in editor. So I thought it must be some thing in the library so opened up lib with notepad++ and bam there it was marked as 'player' when I was looking for 'game.pov' so I changed the 3 spots where it called for 'player' into 'game.pov' and works great. So I wanted to share for newbies that might have trouble with that as I did heres the new library\r\n\r\n```\r\n<library>\r\n  <!--\r\n\r\nA very simple module that lets the writer easily put a journal into the game.\r\nTo use:\r\n\r\n1. Create at item to be used as a journal as normal\r\n2. In the start script on the game item, set up the journal\r\n  a. Call the SetJournalObject with the item you created in\r\n     step 1 as the parameter (as an object)\r\n  b. Optionally, call the SetJournalFont to define how the\r\n     journal text will be displayed. There are three parameters.\r\n     SetJournalFont(font name as string, font size as integer, colour as string)\r\n3. Anywhere in you game where you want an event noted (if the player\r\n   is carrying her journal), invoke the AddToJournal command, with\r\n   the string to be added as a parameter.\r\n\r\nFeel free to modify this code as you wish.\r\n\r\nThe Pixie\r\nthe_pix at hotmail dot com\r\n\r\n  -->\r\n\r\n  <template name=\"ReadJournal\">You read your journal:</template>\r\n  \r\n  <template name=\"WriteInJournal\">You add the following text to your journal:</template>\r\n  \r\n  <dynamictemplate name=\"JournalNotHeld\">\"You're not holding your \" + object.alias</dynamictemplate>\r\n  \r\n  <object name=\"journal_object\">\r\n    <inherit name=\"editor_object\" />\r\n    <entries type=\"list\"></entries>\r\n    <alias type=\"string\"></alias>\r\n    <held_object type=\"object\">journal_object</held_object>\r\n  </object>\r\n\r\n  <command name=\"append\">\r\n    <pattern>-#text#</pattern>\r\n    <script>\r\n      AddToJournal (text)\r\n    </script>\r\n  </command>\r\n\r\n  <command name=\"note\">\r\n    <pattern>note</pattern>\r\n    <script>\r\n      msg (Template(\"WriteInJournal\"))\r\n      get input {\r\n\t    s = result\r\n        UserAddToJournal (s)\r\n        msg (s)\r\n\t  }\r\n    </script>\r\n  </command>\r\n\r\n  <command name=\"journal_command\">\r\n    <pattern>journal</pattern>\r\n    <script>\r\n      ReadJournal\r\n    </script>\r\n  </command>\r\n\r\n  <function name=\"SetJournalFont\" parameters=\"font, size, colour\">\r\n    journal_object.font = font\r\n    journal_object.size = size\r\n    journal_object.colour = colour\r\n  </function>\r\n  \r\n  <function name=\"AddToJournal\" parameters=\"entry\">\r\n    if (journal_object.held_object.parent = game.pov) {\r\n      list add (journal_object.entries, entry)\r\n    }\r\n  </function>\r\n  \r\n  <function name=\"UserAddToJournal\" parameters=\"entry\"><![CDATA[\r\n    if (journal_object.held_object.parent <> game.pov) {\r\n      msg (DynamicTemplate(\"JournalNotHeld\", journal_object.held_object))\r\n    }\r\n    else {\r\n      list add (journal_object.entries, entry)\r\n    }\r\n  ]]></function>\r\n  \r\n  <function name=\"ReadJournal\"><![CDATA[\r\n    if (journal_object.held_object.parent <> game.pov) {\r\n      msg (DynamicTemplate(\"JournalNotHeld\", journal_object.held_object))\r\n    }\r\n    else {\r\n      msg (Template(\"ReadJournal\"))\r\n      if (HasString(journal_object, \"font\")) {\r\n        SetFontName (journal_object.font)\r\n        SetForegroundColour (journal_object.colour)\r\n        SetFontSize (journal_object.size)\r\n      }\r\n      else {\r\n        SetFontName (\"Comic Sans MS\")\r\n        SetForegroundColour (\"Blue\")\r\n      }\r\n      foreach (s, journal_object.entries) {\r\n        msg (s)\r\n      }\r\n      SetFontName (journal_object.defaultfont)\r\n      SetFontSize (journal_object.defaultfontsize)\r\n      SetForegroundColour (journal_object.defaultforeground)\r\n    }\r\n  ]]></function>\r\n  \r\n  <function name=\"SetJournalObject\" parameters=\"obj\">\r\n    journal_object.held_object = obj\r\n    journal_object.defaultforeground = game.defaultforeground\r\n    journal_object.defaultfontsize = game.defaultfontsize\r\n    journal_object.defaultfont = game.defaultfont\r\n  </function>\r\n</library>\r\n```\r\n\r\nSo now when you change your character you can still use your journal :) \r\nHope it helps some one like it did me\r\n\r\nMike",
      "EditableFormat": "markdown",
      "HTML": "<p>First of all I wanted to say thank you again Pixie for the great work and help you give us all. All credit goes to Pixie as it is his/her Library just changed somethings.</p>\n<p>Ok so I had the library in game working with my object journal then I changed characters and was no longer able to take notes no matter which way I went in editor. So I thought it must be some thing in the library so opened up lib with notepad++ and bam there it was marked as 'player' when I was looking for 'game.pov' so I changed the 3 spots where it called for 'player' into 'game.pov' and works great. So I wanted to share for newbies that might have trouble with that as I did heres the new library</p>\n<pre><code>&lt;library&gt;\n  &lt;!--\n\nA very simple module that lets the writer easily put a journal into the game.\nTo use:\n\n1. Create at item to be used as a journal as normal\n2. In the start script on the game item, set up the journal\n  a. Call the SetJournalObject with the item you created in\n     step 1 as the parameter (as an object)\n  b. Optionally, call the SetJournalFont to define how the\n     journal text will be displayed. There are three parameters.\n     SetJournalFont(font name as string, font size as integer, colour as string)\n3. Anywhere in you game where you want an event noted (if the player\n   is carrying her journal), invoke the AddToJournal command, with\n   the string to be added as a parameter.\n\nFeel free to modify this code as you wish.\n\nThe Pixie\nthe_pix at hotmail dot com\n\n  --&gt;\n\n  &lt;template name=\"ReadJournal\"&gt;You read your journal:&lt;/template&gt;\n  \n  &lt;template name=\"WriteInJournal\"&gt;You add the following text to your journal:&lt;/template&gt;\n  \n  &lt;dynamictemplate name=\"JournalNotHeld\"&gt;\"You're not holding your \" + object.alias&lt;/dynamictemplate&gt;\n  \n  &lt;object name=\"journal_object\"&gt;\n    &lt;inherit name=\"editor_object\" /&gt;\n    &lt;entries type=\"list\"&gt;&lt;/entries&gt;\n    &lt;alias type=\"string\"&gt;&lt;/alias&gt;\n    &lt;held_object type=\"object\"&gt;journal_object&lt;/held_object&gt;\n  &lt;/object&gt;\n\n  &lt;command name=\"append\"&gt;\n    &lt;pattern&gt;-#text#&lt;/pattern&gt;\n    &lt;script&gt;\n      AddToJournal (text)\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;command name=\"note\"&gt;\n    &lt;pattern&gt;note&lt;/pattern&gt;\n    &lt;script&gt;\n      msg (Template(\"WriteInJournal\"))\n      get input {\n\t    s = result\n        UserAddToJournal (s)\n        msg (s)\n\t  }\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;command name=\"journal_command\"&gt;\n    &lt;pattern&gt;journal&lt;/pattern&gt;\n    &lt;script&gt;\n      ReadJournal\n    &lt;/script&gt;\n  &lt;/command&gt;\n\n  &lt;function name=\"SetJournalFont\" parameters=\"font, size, colour\"&gt;\n    journal_object.font = font\n    journal_object.size = size\n    journal_object.colour = colour\n  &lt;/function&gt;\n  \n  &lt;function name=\"AddToJournal\" parameters=\"entry\"&gt;\n    if (journal_object.held_object.parent = game.pov) {\n      list add (journal_object.entries, entry)\n    }\n  &lt;/function&gt;\n  \n  &lt;function name=\"UserAddToJournal\" parameters=\"entry\"&gt;&lt;![CDATA[\n    if (journal_object.held_object.parent &lt;&gt; game.pov) {\n      msg (DynamicTemplate(\"JournalNotHeld\", journal_object.held_object))\n    }\n    else {\n      list add (journal_object.entries, entry)\n    }\n  ]]&gt;&lt;/function&gt;\n  \n  &lt;function name=\"ReadJournal\"&gt;&lt;![CDATA[\n    if (journal_object.held_object.parent &lt;&gt; game.pov) {\n      msg (DynamicTemplate(\"JournalNotHeld\", journal_object.held_object))\n    }\n    else {\n      msg (Template(\"ReadJournal\"))\n      if (HasString(journal_object, \"font\")) {\n        SetFontName (journal_object.font)\n        SetForegroundColour (journal_object.colour)\n        SetFontSize (journal_object.size)\n      }\n      else {\n        SetFontName (\"Comic Sans MS\")\n        SetForegroundColour (\"Blue\")\n      }\n      foreach (s, journal_object.entries) {\n        msg (s)\n      }\n      SetFontName (journal_object.defaultfont)\n      SetFontSize (journal_object.defaultfontsize)\n      SetForegroundColour (journal_object.defaultforeground)\n    }\n  ]]&gt;&lt;/function&gt;\n  \n  &lt;function name=\"SetJournalObject\" parameters=\"obj\"&gt;\n    journal_object.held_object = obj\n    journal_object.defaultforeground = game.defaultforeground\n    journal_object.defaultfontsize = game.defaultfontsize\n    journal_object.defaultfont = game.defaultfont\n  &lt;/function&gt;\n&lt;/library&gt;\n</code></pre>\n<p>So now when you change your character you can still use your journal :)<br>\nHope it helps some one like it did me</p>\n<p>Mike</p>\n\n",
      "PostDate": "2016-09-17T07:38:10.817699Z",
      "LastEditDate": "2016-09-18T19:42:32.4498072Z"
    },
    {
      "PostId": "71c6c48c-19bd-4a58-b95b-65aee6c99d50",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "just a quick note:\r\n\r\nyou have to be careful with using 'game.pov' as it will apply the whatever stuff you're using it for, to whoever is your currently controlled Player Object (pov: game.pov). For example, if I have a quest/mission that I only want its reward to be given to a specific Player Object, then I don't want to use the 'game.pov' as it would give that reward to whoever is my currently controlled Player Object, instead of giving the reward only for the specific Player Object (which would have to be referenced/checked for specifically, in place of using 'game.pov')\r\n\r\n--------\r\n\r\ndon't use 'game.pov' when you want to keep stuff in regards to your Player Objects separated/individualized/unique\r\n\r\n-----\r\n\r\nif you don't care about your Player Objects sharing stuff, then use 'game.pov'",
      "EditableFormat": "markdown",
      "HTML": "<p>just a quick note:</p>\n<p>you have to be careful with using 'game.pov' as it will apply the whatever stuff you're using it for, to whoever is your currently controlled Player Object (pov: game.pov). For example, if I have a quest/mission that I only want its reward to be given to a specific Player Object, then I don't want to use the 'game.pov' as it would give that reward to whoever is my currently controlled Player Object, instead of giving the reward only for the specific Player Object (which would have to be referenced/checked for specifically, in place of using 'game.pov')</p>\n<hr>\n<p>don't use 'game.pov' when you want to keep stuff in regards to your Player Objects separated/individualized/unique</p>\n<hr>\n<p>if you don't care about your Player Objects sharing stuff, then use 'game.pov'</p>\n\n",
      "PostDate": "2016-09-17T21:19:14.7842176Z",
      "LastEditDate": "2016-09-17T21:21:58.0295197Z"
    },
    {
      "PostId": "3a8b061c-1f2c-4277-8d2e-3952ac2f5cc3",
      "UserId": 9112,
      "Username": "Jay Nabonne",
      "AvatarUrl": "https://secure.gravatar.com/avatar/379859a7f1952a65399fc63997e68f0b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "Just to clarify, what HK is referring to is the *logic* of the code, not the actual data, settings, etc. It could be argued that the entire point of having separate POV objects is to not share state - objects held, descriptions, locations, etc. would all be different, unique and separate for each POV. So the \"don't use game.pov\" line is a bit misleading, in that \"stuff\" is too vague to be accurate. If you want to keep separate state for different povs, then game.pov is the way to go, as you will be operating on the current pov's state, independently of the others. So that \"stuff\" would be separate.\r\n\r\nIf you have logic that is specific to a pov, then you have to implement it for that pov, and there are different ways to do that. In the case that HK relates above - where one POV could solve a mission but another gets the reward - then you obviously would have to write the code targeting that object. That is not a deficiency of game.pov. It would be the same if you only had one POV but wanted to give the reward to \"Billy\". You would clearly not use game.pov in that case (or even \"player\") because neither is what you want. You would just give it to Billy. If you have specific requirements, you implement specific logic. \r\n\r\nSo if you want to treat your POVs the same (shared high-level logic), then use the game.pov reference. If you want to treat your POVs differently, then you have to code that logic specificially - or better yet, if possible, use script attributes on the various POVs so that you can call the same script in all cases, but then each POV can handle the behavior separately.\r\n\r\nBut the rest of the POV's \"stuff\" (the data, state, location, etc) are separate and distinct. That's where using scripts on the POVs is a good way to go, if you can do it, as it allows your *logic* to work with the POVs the same, but the POV itself decides what will happen based on the attribute script being run.\r\n\r\n(I just wanted this to be clear in case people took away from the previous post that using \"game.pov\" would somehow end up applying the same state to all the different POVs (the\"if you don't care about your Player Objects sharing stuff, then use 'game.pov'\"). It can mean the exact opposite, depending on how you mean \"stuff\".)",
      "EditableFormat": "markdown",
      "HTML": "<p>Just to clarify, what HK is referring to is the <em>logic</em> of the code, not the actual data, settings, etc. It could be argued that the entire point of having separate POV objects is to not share state - objects held, descriptions, locations, etc. would all be different, unique and separate for each POV. So the \"don't use game.pov\" line is a bit misleading, in that \"stuff\" is too vague to be accurate. If you want to keep separate state for different povs, then game.pov is the way to go, as you will be operating on the current pov's state, independently of the others. So that \"stuff\" would be separate.</p>\n<p>If you have logic that is specific to a pov, then you have to implement it for that pov, and there are different ways to do that. In the case that HK relates above - where one POV could solve a mission but another gets the reward - then you obviously would have to write the code targeting that object. That is not a deficiency of game.pov. It would be the same if you only had one POV but wanted to give the reward to \"Billy\". You would clearly not use game.pov in that case (or even \"player\") because neither is what you want. You would just give it to Billy. If you have specific requirements, you implement specific logic.</p>\n<p>So if you want to treat your POVs the same (shared high-level logic), then use the game.pov reference. If you want to treat your POVs differently, then you have to code that logic specificially - or better yet, if possible, use script attributes on the various POVs so that you can call the same script in all cases, but then each POV can handle the behavior separately.</p>\n<p>But the rest of the POV's \"stuff\" (the data, state, location, etc) are separate and distinct. That's where using scripts on the POVs is a good way to go, if you can do it, as it allows your <em>logic</em> to work with the POVs the same, but the POV itself decides what will happen based on the attribute script being run.</p>\n<p>(I just wanted this to be clear in case people took away from the previous post that using \"game.pov\" would somehow end up applying the same state to all the different POVs (the\"if you don't care about your Player Objects sharing stuff, then use 'game.pov'\"). It can mean the exact opposite, depending on how you mean \"stuff\".)</p>\n\n",
      "PostDate": "2016-09-18T10:53:27.3128108Z",
      "LastEditDate": "2016-09-18T10:57:56.9969607Z"
    },
    {
      "PostId": "7df1d429-d949-454f-894a-778923725a9b",
      "UserId": 1346,
      "Username": "The Pixie",
      "AvatarUrl": "https://secure.gravatar.com/avatar/cfa37e927f96177bcf6053ae8f108f77?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I wrote the library before `game.pov` was a thing, so it was not an issue back then.\r\n\r\nBy the way, onimike, could you edit your post so my e-mail address is not in or is disguised for bots (the_pix at hotmail dot com)? Thanks.",
      "EditableFormat": "markdown",
      "HTML": "<p>I wrote the library before <code>game.pov</code> was a thing, so it was not an issue back then.</p>\n<p>By the way, onimike, could you edit your post so my e-mail address is not in or is disguised for bots (the_pix at hotmail dot com)? Thanks.</p>\n\n",
      "PostDate": "2016-09-18T11:51:16.4802444Z",
      "LastEditDate": "2016-09-18T11:52:06.0747733Z"
    },
    {
      "PostId": "b3a9e2ac-eb6c-4e3e-b9f4-611c0686e065",
      "UserId": 26011,
      "Username": "onimike",
      "AvatarUrl": "http://i.imgur.com/yL1GRWab.jpg",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@HK yes I do understand what you mean as I did the same thing with a flag set to game.pov then changed player and flag was no longer reading :) But in my instance I have 2 different characters you can be(because their 2 different stories and multiple outcomes) and the 'player' character is in a main menu, so by setting the journal to game.pov i was able to switch characters and still use the journal. I just posted this for beginners having this problem as I did and really had no idea what to do lol. \r\n\r\n@Jay Yes like I was saying to HK I understand when giving rewards or different out comes which is why used a flag after changing character so I could run certain scripts with certain players. Good idea on the attribute script I do like that idea :) and yes good looking out to both you Jay and HK because I did not think about that until yesterday when I ran into a problem with game.pov until I set my flag the right way.\r\n\r\n@Pixie Sorry bout that I edited it out and hope it was ok for me to post this up. I just know as a non coder I have troubles with somethings and been diving into it a little more and was excited I got this working the way I needed it to.\r\n\r\nThanks again all of you and sorry if I messed anything up!\r\n\r\nMike  ",
      "EditableFormat": "markdown",
      "HTML": "<p>@HK yes I do understand what you mean as I did the same thing with a flag set to game.pov then changed player and flag was no longer reading :) But in my instance I have 2 different characters you can be(because their 2 different stories and multiple outcomes) and the 'player' character is in a main menu, so by setting the journal to game.pov i was able to switch characters and still use the journal. I just posted this for beginners having this problem as I did and really had no idea what to do lol.</p>\n<p>@Jay Yes like I was saying to HK I understand when giving rewards or different out comes which is why used a flag after changing character so I could run certain scripts with certain players. Good idea on the attribute script I do like that idea :) and yes good looking out to both you Jay and HK because I did not think about that until yesterday when I ran into a problem with game.pov until I set my flag the right way.</p>\n<p>@Pixie Sorry bout that I edited it out and hope it was ok for me to post this up. I just know as a non coder I have troubles with somethings and been diving into it a little more and was excited I got this working the way I needed it to.</p>\n<p>Thanks again all of you and sorry if I messed anything up!</p>\n<p>Mike</p>\n\n",
      "PostDate": "2016-09-18T19:54:03.354411Z",
      "LastEditDate": null
    },
    {
      "PostId": "9827624a-2302-45aa-b1c6-b369238320bf",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "my apologies for the use of the ambigious usage of 'stuff' and not explaning it as accurately as Jay, as my brain was going blank, and I wasn't able to think of better words to use, and not having Jay's level of understanding of coding/quest (or I'm not able to remember/memorize/retain/recall something accurately, if I do have that accurate knowledge stored in my brain, lol, grr).\r\n\r\nThank you Jay for clarifying up my misleading post, and helping me and others understand this 'stuff' (sorry, lol) better (whether I can retain and recall this knowledge for the future if this comes up with/from anothernew person ... is another matter, sighs)\r\n\r\n-------\r\n\r\nmy brain's 'memory storage and retrieval' seems to be more faulty than computer chips, lol. I need my brain to be cyberized, replaced by a computer chip/cyber-brain, lol. Hurry up man-machine integration technology (and hope I don't suffer from \"cyber brain scireosis\" / cyberization rejection, lol. Referencing, Ghost in the Shell: Stand Alone Complex: https://www.youtube.com/watch?v=Aqbk0HiLYOU ) !!!!\r\n\r\n(well... the storage may require organic material... due to the amount of data within a human brain. Just 4 grams of DNA can store the data of the entire human race / the internet: every single electronic device in the world !!! http://blogs.discovermagazine.com/d-brief/2016/04/08/dna-data-storage/#.V-CGvhwyy2k )",
      "EditableFormat": "markdown",
      "HTML": "<p>my apologies for the use of the ambigious usage of 'stuff' and not explaning it as accurately as Jay, as my brain was going blank, and I wasn't able to think of better words to use, and not having Jay's level of understanding of coding/quest (or I'm not able to remember/memorize/retain/recall something accurately, if I do have that accurate knowledge stored in my brain, lol, grr).</p>\n<p>Thank you Jay for clarifying up my misleading post, and helping me and others understand this 'stuff' (sorry, lol) better (whether I can retain and recall this knowledge for the future if this comes up with/from anothernew person ... is another matter, sighs)</p>\n<hr>\n<p>my brain's 'memory storage and retrieval' seems to be more faulty than computer chips, lol. I need my brain to be cyberized, replaced by a computer chip/cyber-brain, lol. Hurry up man-machine integration technology (and hope I don't suffer from \"cyber brain scireosis\" / cyberization rejection, lol. Referencing, Ghost in the Shell: Stand Alone Complex: https://www.youtube.com/watch?v=Aqbk0HiLYOU ) !!!!</p>\n<p>(well... the storage may require organic material... due to the amount of data within a human brain. Just 4 grams of DNA can store the data of the entire human race / the internet: every single electronic device in the world !!! http://blogs.discovermagazine.com/d-brief/2016/04/08/dna-data-storage/#.V-CGvhwyy2k )</p>\n\n",
      "PostDate": "2016-09-20T00:29:19.753431Z",
      "LastEditDate": "2016-09-20T00:46:25.7101566Z"
    }
  ]
}
