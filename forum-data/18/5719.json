{
  "Topic": {
    "TopicId": "5719",
    "ForumId": "18",
    "Title": "Guide: Remaking the default custom map.",
    "LastUpdated": "2015-12-11T23:41:12+00:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "39466",
      "UserId": 0,
      "Username": "Duodecimus",
      "UserAvatar": null,
      "UserGravatar": "ae3f281e26433dc73dff95b41f231818",
      "EditableText": "Over the last couple of months I but together a game [url=https&#58;//textadventures&#46;co&#46;uk/games/view/lcjtznvimec1owrpwnidrq/bobby-the-fisher:2gaeeoy1](found here)[/url:2gaeeoy1] using the Map and drawing grid, and I figured it out.\nI figured out weird exits, I figured out teleporting, I figured out how to stop it doing anything automatically at all.\n\nSo lets start.\n\nfirst, any room you're going to be fancy with needs to have this:\n\nBefore entering the room:\n[code:2gaeeoy1]this&#46;grid_render = False[/code:2gaeeoy1]\n\nThis will stop it from automatically drawing the room, drawing the player, centering the map, and auto-generating the exits.\nSo we'll need to replace those functions\n\n\n\nFirst, drawing the room, the exits and the player\nAfter entering a room:\n[code:2gaeeoy1]\n//game&#46;pov is the name for where the player is on the map&#46; This is the top left corner of the room&#46;\n//this is how the room sees itself&#46;\n//Grid_GetGridCoordinateForPlayer() returns an integer for the x, y or z&#46; You don't NEED to do this line, but it may be difficult to keep track otherwise&#46;\n\nplayer_x = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;x&quot;) \nplayer_y = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;y&quot;)\nplayer_z = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;z&quot;)\n//Grid_AddNewShapePoint(x ,y) will mark a point on the grid for Grid_DrawShape\n//Grid_Drawshape(shapeid, linecolor, fillcolor, transparency) will draw a line from the first shapepoint to the second, second to third, etc\n//and from last to first, then it will be filled and made transparent&#46; There is no max on shapepoints&#46; You can use both hex codes and certain\n// names as colors&#46;  Reusing shapeid will cause the old shape to vanish&#46; I couldn't find a way to just remove shapes&#46;\n//+1 is one towards the bottom or the right of the screen&#46; -1 would be left or top&#46; The code below creates the same box as the automatic mapper&#46;\nGrid_AddNewShapePoint (player_x+1, player_y)\nGrid_AddNewShapePoint (player_x+1, player_y+1)\nGrid_AddNewShapePoint (player_x, player_y+1)\nGrid_AddNewShapePoint (player_x, player_y)\nGrid_DrawShape (&quot;00131&quot;, &quot;Black&quot;, &quot;#ffffff&quot;, 1)\n//Grid_DrawLine(x1, y1, x2, y2, color, thickness)  Code below draws an exit to the north, with length 1&#46;\nGrid_DrawLine (player_x+&#46;5, player_y, player_x+&#46;5, player_y-1, &quot;#000000&quot;, 3)\n//JS&#46;Grid_DrawPlayer(x, y, z, radius, border, borderWidth, fill)\n//I'm not exactly sure what occurs in this function&#46; It draws a circle with an outline of border and the color of fill, and centers the map for you&#46; It is not required, and you can remove it if you want&#46; I keep it around because the map centering is much smoother than the other option&#58; Grid_SetCentre (x, y)\nJS&#46;Grid_DrawPlayer (player_x+&#46;5, player_y+&#46;5, player_z, 5, &quot;black&quot;, 2, &quot;yellow&quot;)[/code:2gaeeoy1]\n\n\nNext, Making a weird exit:\nPick an exit, it doesn't matter what type it originally was, it can lead anywhere.\ncheck &quot;Run a script (instead of moving the player automatically)&quot;\n[code:2gaeeoy1]\n  // getObject(objectname) returns the object named&#46;\n  plyr = GetObject (&quot;player&quot;)\n  currentRoom = plyr&#46;parent\n  // If you are using an exit for this script you can also use newRoom = this&#46;to \n  newRoom = getObject(&quot;Destination room name&quot;)\n  //where is the destination room? north is -y, east is +x, south is +y, and west is -x\n  //If you like, you can derive these from the exit direction and this&#46;grid_length to mimic the auto mapper&#46;\n  offset_x = 1\n  offset_y = -2\n  offset_z = 0\n  //this set() is to make the default mapper know that it needs to draw this new room you're going to&#46; If you rewrote the drawing code don't worry about it&#46;\n  set (newRoom, &quot;grid_render&quot;, true)\n  //this boils down to 'get the current room and offset it' x+1 and y-2 is one right and two up&#46;\n  newx = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;x&quot;)+offset_y\n  newy = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;y&quot;)+offset_x\n  newz = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;z&quot;)+offset_z\n  //Tell the internal map logic what the coordinates of the new room are&#46;\n  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;x&quot;, newx)\n  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;y&quot;, newy)\n  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;z&quot;, newz)\n  //move the player to the destination&#46;\n  MoveObject (plyr, newRoom)\n  //center the grid&#46; optional\n  \n//I don't know what Grid_CalculateMapCoordinates does, but you have to call it last&#46;\n  Grid_CalculateMapCoordinates (newRoom, plyr)[/code:2gaeeoy1]\n\nWeird exit code also doubles as teleporting code, you just need to know where things are. \n\nI covered the basics here, but questions are welcome. \nNever wrote a coding guide, so advice on that is also appreciated.",
      "EditableFormat": "bbcode",
      "HTML": "Over the last couple of months I but together a game <a href=\"https&#58;//textadventures&#46;co&#46;uk/games/view/lcjtznvimec1owrpwnidrq/bobby-the-fisher\" rel=\"nofollow\">(found here)</a> using the Map and drawing grid, and I figured it out.<br/>I figured out weird exits, I figured out teleporting, I figured out how to stop it doing anything automatically at all.<br/><br/>So lets start.<br/><br/>first, any room you're going to be fancy with needs to have this:<br/><br/>Before entering the room:<br/><pre><code>this&#46;grid_render = False</code></pre><br/><br/>This will stop it from automatically drawing the room, drawing the player, centering the map, and auto-generating the exits.<br/>So we'll need to replace those functions<br/><br/><br/><br/>First, drawing the room, the exits and the player<br/>After entering a room:<br/><pre><code><br/>//game&#46;pov is the name for where the player is on the map&#46; This is the top left corner of the room&#46;<br/>//this is how the room sees itself&#46;<br/>//Grid_GetGridCoordinateForPlayer() returns an integer for the x, y or z&#46; You don't NEED to do this line, but it may be difficult to keep track otherwise&#46;<br/><br/>player_x = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;x&quot;) <br/>player_y = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;y&quot;)<br/>player_z = Grid_GetGridCoordinateForPlayer(game&#46;pov, this, &quot;z&quot;)<br/>//Grid_AddNewShapePoint(x ,y) will mark a point on the grid for Grid_DrawShape<br/>//Grid_Drawshape(shapeid, linecolor, fillcolor, transparency) will draw a line from the first shapepoint to the second, second to third, etc<br/>//and from last to first, then it will be filled and made transparent&#46; There is no max on shapepoints&#46; You can use both hex codes and certain<br/>// names as colors&#46;  Reusing shapeid will cause the old shape to vanish&#46; I couldn't find a way to just remove shapes&#46;<br/>//+1 is one towards the bottom or the right of the screen&#46; -1 would be left or top&#46; The code below creates the same box as the automatic mapper&#46;<br/>Grid_AddNewShapePoint (player_x+1, player_y)<br/>Grid_AddNewShapePoint (player_x+1, player_y+1)<br/>Grid_AddNewShapePoint (player_x, player_y+1)<br/>Grid_AddNewShapePoint (player_x, player_y)<br/>Grid_DrawShape (&quot;00131&quot;, &quot;Black&quot;, &quot;#ffffff&quot;, 1)<br/>//Grid_DrawLine(x1, y1, x2, y2, color, thickness)  Code below draws an exit to the north, with length 1&#46;<br/>Grid_DrawLine (player_x+&#46;5, player_y, player_x+&#46;5, player_y-1, &quot;#000000&quot;, 3)<br/>//JS&#46;Grid_DrawPlayer(x, y, z, radius, border, borderWidth, fill)<br/>//I'm not exactly sure what occurs in this function&#46; It draws a circle with an outline of border and the color of fill, and centers the map for you&#46; It is not required, and you can remove it if you want&#46; I keep it around because the map centering is much smoother than the other option&#58; Grid_SetCentre (x, y)<br/>JS&#46;Grid_DrawPlayer (player_x+&#46;5, player_y+&#46;5, player_z, 5, &quot;black&quot;, 2, &quot;yellow&quot;)</code></pre><br/><br/><br/>Next, Making a weird exit:<br/>Pick an exit, it doesn't matter what type it originally was, it can lead anywhere.<br/>check &quot;Run a script (instead of moving the player automatically)&quot;<br/><pre><code><br/>  // getObject(objectname) returns the object named&#46;<br/>  plyr = GetObject (&quot;player&quot;)<br/>  currentRoom = plyr&#46;parent<br/>  // If you are using an exit for this script you can also use newRoom = this&#46;to <br/>  newRoom = getObject(&quot;Destination room name&quot;)<br/>  //where is the destination room? north is -y, east is +x, south is +y, and west is -x<br/>  //If you like, you can derive these from the exit direction and this&#46;grid_length to mimic the auto mapper&#46;<br/>  offset_x = 1<br/>  offset_y = -2<br/>  offset_z = 0<br/>  //this set() is to make the default mapper know that it needs to draw this new room you're going to&#46; If you rewrote the drawing code don't worry about it&#46;<br/>  set (newRoom, &quot;grid_render&quot;, true)<br/>  //this boils down to 'get the current room and offset it' x+1 and y-2 is one right and two up&#46;<br/>  newx = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;x&quot;)+offset_y<br/>  newy = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;y&quot;)+offset_x<br/>  newz = Grid_GetGridCoordinateForPlayer(plyr, currentRoom, &quot;z&quot;)+offset_z<br/>  //Tell the internal map logic what the coordinates of the new room are&#46;<br/>  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;x&quot;, newx)<br/>  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;y&quot;, newy)<br/>  Grid_SetGridCoordinateForPlayer (plyr, newRoom, &quot;z&quot;, newz)<br/>  //move the player to the destination&#46;<br/>  MoveObject (plyr, newRoom)<br/>  //center the grid&#46; optional<br/>  <br/>//I don't know what Grid_CalculateMapCoordinates does, but you have to call it last&#46;<br/>  Grid_CalculateMapCoordinates (newRoom, plyr)</code></pre><br/><br/>Weird exit code also doubles as teleporting code, you just need to know where things are. <br/><br/>I covered the basics here, but questions are welcome. <br/>Never wrote a coding guide, so advice on that is also appreciated.",
      "PostDate": "2015-12-11T04:41:27+00:00",
      "LastEditDate": null
    },
    {
      "PostId": "39477",
      "UserId": 0,
      "Username": "HegemonKhan",
      "UserAvatar": null,
      "UserGravatar": "a96cf34d8d97c57de38f54ee22b1759b",
      "EditableText": "nice grid~coordinate~map~graphics guide, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D -->\n\nI covered this basic stuff of graphing in my Python and Java school classes just recently (last thing before our finals), and we used the same concepts:\n\n(0,0) ....................(ROW,0)\n__________________ \n|.........................|\n|.........................|\n|.........................|\n|.........................|\n|________________|\n(0,COL).............(ROW,COL)\n\nmake points (X,Y), use them to draw lines, and the lines can draw angular shapes\n\ncircle is done by finding its center (X,Y), and the radius via: radius = (height - 2*offset) / 2",
      "EditableFormat": "bbcode",
      "HTML": "nice grid~coordinate~map~graphics guide, hehe <!-- s:D --><img src=\"{SMILIES_PATH}/icon_biggrin.gif\" alt=\":D\" title=\"Very Happy\" /><!-- s:D --><br/><br/>I covered this basic stuff of graphing in my Python and Java school classes just recently (last thing before our finals), and we used the same concepts:<br/><br/>(0,0) ....................(ROW,0)<br/>__________________ <br/>|.........................|<br/>|.........................|<br/>|.........................|<br/>|.........................|<br/>|________________|<br/>(0,COL).............(ROW,COL)<br/><br/>make points (X,Y), use them to draw lines, and the lines can draw angular shapes<br/><br/>circle is done by finding its center (X,Y), and the radius via: radius = (height - 2*offset) / 2",
      "PostDate": "2015-12-11T23:41:12+00:00",
      "LastEditDate": null
    }
  ]
}
