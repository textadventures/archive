{
  "Topic": {
    "TopicId": "6430",
    "ForumId": "18",
    "Title": "Handling water",
    "LastUpdated": "2016-06-18T12:42:01+01:00",
    "ReplyCount": 1
  },
  "Posts": [
    {
      "PostId": "43537",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "There is more than one way to do this, but this is what I recommend. This will involve setting attributes, so you will struggle with the on-line editor.\n\nWhat we will do is to create a waterskin that can be filled and drunk from, and then set up a room with a pool of water and another with a tap.\n\n\n[b:3ioholxs][i:3ioholxs]The waterskin[/i:3ioholxs][/b:3ioholxs]\n\nSo first create the waterskin, in the normal way. Give it two integer attributes, &quot;full&quot; and &quot;capacity&quot;. Set them to 0 and 10 respectively. The full attribute will track how much water is in the waterskin, the capacity will be the maximum. You may want to play around with these values.\n\nThen go to the verbs tab, and create a new verb,  &quot;fill&quot;. Paste in this code:\n[code:3ioholxs]if (this&#46;full = this&#46;capacity) {\n  msg (&quot;It is already full&#46;&quot;)\n}\nelse if (not GetBoolean(game&#46;pov&#46;parent, &quot;watersource&quot;)) {\n  msg (&quot;No water here&#46;&quot;)\n}\nelse {\n  msg (&quot;You fill it&#46;&quot;)\n  this&#46;full = this&#46;capacity\n}[/code:3ioholxs]\nAll this does is check if the waterskin is already full, then check if there is water. If all is okay, the waterskin gets filled.\n\nYou might want to give it a description like this:\n[code:3ioholxs]The waterskin {if waterskin&#46;full=0&#58;is empty}{if waterskin&#46;full&lt;&gt;0&#58;contains some water}&#46;[/code:3ioholxs]\nThe text processor is a bit limited, and you might prefer to use a script so you can say how full it is.\n[code:3ioholxs]if (this&#46;full = 0) {\n  msg (&quot;The waterskin&#46;&quot;)\n}\nelse if (this&#46;full = this&#46;capacity) {\n  msg (&quot;The waterskin is full&#46;&quot;)\n}\nelse {\n  msg (&quot;The waterskin is about &quot; + (waterskin&#46;full  * 10) + &quot;% full&#46;&quot;)\n}[/code:3ioholxs]\n\n[b:3ioholxs][i:3ioholxs]A Source of Water[/i:3ioholxs][/b:3ioholxs]\n\nNow we will do a room with a pool of clear, fresh water. Create a room, give it a Boolean attribute, &quot;watersource&quot;, and set it to true.\n\nNow you should be able to go in-game and fill the waterskin with water.\n\nFor a room with a tap, create the room, then create the tap as an object in it. For the tap, on the Features tab tick Switchable. On the Switchable tab set it to &quot;Can be switched...&quot;. Fill in the text boxes as you like. For the first script, paste in this:\n[code:3ioholxs]this&#46;parent&#46;watersource = true[/code:3ioholxs]\nAnd for the second:\n[code:3ioholxs]this&#46;parent&#46;watersource = false[/code:3ioholxs]\n\n[b:3ioholxs][i:3ioholxs]Playing With water[/i:3ioholxs][/b:3ioholxs]\n\nWhat else do you want to do? Well, you could empty it. Create an &quot;empty&quot; verb, and paste this in.\n[code:3ioholxs]if (this&#46;full = 0) {\n  msg (&quot;It is already empty&#46;&quot;)\n}\nelse {\n  msg (&quot;You empty it&#46;&quot;)\n  this&#46;full = 0\n}[/code:3ioholxs]\nIs there some point to emptying it? Perhaps there is a room with a fire, and emptying the waterskin will put the fire out. You could do that like this:\n[code:3ioholxs]if (this&#46;full = 0) {\n  msg (&quot;It is already empty&#46;&quot;)\n}\nelse if (game&#46;pov&#46;parent = room_with_fire) {\n  msg (&quot;You empty it over the fire, which sizzles and spits, then dies&#46;&quot;)\n  this&#46;full = 0\n  room_with_fire&#46;fireout = true\n}\nelse {\n  msg (&quot;You empty it&#46;&quot;)\n  this&#46;full = 0\n}[/code:3ioholxs]\n\nYou might want to drink from the waterskin. Add a &quot;drink from&quot; verb, and paste this in:\n[code:3ioholxs]if (this&#46;full = 0) {\n  msg (&quot;It is empty&#46;&quot;)\n}\nelse {\n  msg (&quot;You take a drink from it&#46;&quot;)\n  this&#46;full = this&#46;full - 1\n}[/code:3ioholxs]\nWater is does is check the waterskin is not empty, and if not reduces its contents by 1. You might want to do some other things in the second block, if the player is going to die of thirst; that is up to you to sort out!\n\nYou might want to use the waterskin, i.e., (I guess) drink from it. Use is kind of built-in, so takes a bit of setting up. Go to the Features tab, and tick Use/Give. Then go to the Use/Give tab, and at the top, for &quot;Use (on its own)&quot;, set the action to &quot;Run script&quot;. This does the same thing as &quot;drink from&quot;, so we can use that script (note that spaces are removed from the verb to make the attribute name).\n[code:3ioholxs]do(this, &quot;drinkfrom&quot;)[/code:3ioholxs]\nYou could have pasted the script from &quot;drink from&quot; in here, but this way is better in the long term. If you later decide you want to change the effects of drinking water, you only have to change it in one place, rather than remember to do both. This is a principle in software engineering called DRY (Don't Repeat Yourself).\n\n\n[b:3ioholxs][i:3ioholxs]A Working Example[/i:3ioholxs][/b:3ioholxs]\n\nHere is a full game code that does all that, to prove it really works.\n[code:3ioholxs]&lt;!--Saved by Quest 5&#46;6&#46;5783&#46;24153--&gt;\n&lt;asl version=&quot;550&quot;&gt;\n  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;\n  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;\n  &lt;game name=&quot;water&quot;&gt;\n    &lt;gameid&gt;ceb08755-71c8-4656-b83f-e2003aebc0b9&lt;/gameid&gt;\n    &lt;version&gt;1&#46;0&lt;/version&gt;\n    &lt;firstpublished&gt;2016&lt;/firstpublished&gt;\n  &lt;/game&gt;\n  &lt;object name=&quot;room&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;object name=&quot;player&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;editor_player&quot; /&gt;\n      &lt;object name=&quot;waterskin&quot;&gt;\n        &lt;inherit name=&quot;editor_object&quot; /&gt;\n        &lt;full type=&quot;int&quot;&gt;0&lt;/full&gt;\n        &lt;capacity type=&quot;int&quot;&gt;10&lt;/capacity&gt;\n        &lt;fill type=&quot;script&quot;&gt;\n          if (this&#46;full = this&#46;capacity) {\n            msg (&quot;It is already full&#46;&quot;)\n          }\n          else if (not GetBoolean(game&#46;pov&#46;parent, &quot;watersource&quot;)) {\n            msg (&quot;No water here&#46;&quot;)\n          }\n          else {\n            msg (&quot;You fill it&#46;&quot;)\n            this&#46;full = this&#46;capacity\n          }\n        &lt;/fill&gt;\n        &lt;look type=&quot;script&quot;&gt;\n          if (this&#46;full = 0) {\n            msg (&quot;The waterskin is empty&#46;&quot;)\n          }\n          else if (this&#46;full = this&#46;capacity) {\n            msg (&quot;The waterskin is full&#46;&quot;)\n          }\n          else {\n            msg (&quot;The waterskin is about &quot; + (waterskin&#46;full  * 10) + &quot;% full&#46;&quot;)\n          }\n        &lt;/look&gt;\n        &lt;empty type=&quot;script&quot;&gt;\n          if (this&#46;full = 0) {\n            msg (&quot;It is already empty&#46;&quot;)\n          }\n          else if (game&#46;pov&#46;parent = room_with_fire) {\n            msg (&quot;You empty it over the fire, which sizzles and spits, then dies&#46;&quot;)\n            this&#46;full = 0\n            room_with_fire&#46;fireout = true\n          }\n          else {\n            msg (&quot;You empty it&#46;&quot;)\n            this&#46;full = 0\n          }\n        &lt;/empty&gt;\n        &lt;feature_usegive /&gt;\n        &lt;givesingle /&gt;\n        &lt;use type=&quot;script&quot;&gt;\n          do (this, &quot;drinkfrom&quot;)\n        &lt;/use&gt;\n        &lt;drinkfrom type=&quot;script&quot;&gt;\n          if (this&#46;full = 0) {\n            msg (&quot;It is empty&#46;&quot;)\n          }\n          else {\n            msg (&quot;You take a drink from it&#46;&quot;)\n            this&#46;full = this&#46;full - 1\n          }\n        &lt;/drinkfrom&gt;\n      &lt;/object&gt;\n    &lt;/object&gt;\n    &lt;exit alias=&quot;south&quot; to=&quot;room_with_pool&quot;&gt;\n      &lt;inherit name=&quot;southdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=&quot;east&quot; to=&quot;room_with_tap&quot;&gt;\n      &lt;inherit name=&quot;eastdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;fill&lt;/property&gt;\n    &lt;pattern&gt;fill&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't fill &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;object name=&quot;room_with_pool&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;description&gt;There is a pool of water&#46;&lt;/description&gt;\n    &lt;watersource /&gt;\n    &lt;exit alias=&quot;north&quot; to=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;northdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=&quot;east&quot; to=&quot;room_with_fire&quot;&gt;\n      &lt;inherit name=&quot;eastdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;empty&lt;/property&gt;\n    &lt;pattern&gt;empty&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't empty &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n  &lt;object name=&quot;room_with_fire&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;fireout type=&quot;boolean&quot;&gt;false&lt;/fireout&gt;\n    &lt;description&gt;{if room_with_fire&#46;fireout&#58;The fire is out}{if not room_with_fire&#46;fireout&#58;There is a fire burning}&#46;&lt;/description&gt;\n    &lt;exit alias=&quot;west&quot; to=&quot;room_with_pool&quot;&gt;\n      &lt;inherit name=&quot;westdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=&quot;north&quot; to=&quot;room_with_tap&quot;&gt;\n      &lt;inherit name=&quot;northdirection&quot; /&gt;\n    &lt;/exit&gt;\n  &lt;/object&gt;\n  &lt;object name=&quot;room_with_tap&quot;&gt;\n    &lt;inherit name=&quot;editor_room&quot; /&gt;\n    &lt;exit alias=&quot;south&quot; to=&quot;room_with_fire&quot;&gt;\n      &lt;inherit name=&quot;southdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;\n      &lt;inherit name=&quot;westdirection&quot; /&gt;\n    &lt;/exit&gt;\n    &lt;object name=&quot;tap&quot;&gt;\n      &lt;inherit name=&quot;editor_object&quot; /&gt;\n      &lt;inherit name=&quot;switchable&quot; /&gt;\n      &lt;feature_switchable /&gt;\n      &lt;switchonmsg&gt;You turn on the tap, Water flows into the sink and down the plug hole&#46;&lt;/switchonmsg&gt;\n      &lt;switchoffmsg&gt;You turn it off&#46;&lt;/switchoffmsg&gt;\n      &lt;onswitchon type=&quot;script&quot;&gt;\n        this&#46;parent&#46;watersource = true\n      &lt;/onswitchon&gt;\n      &lt;switchedondesc&gt;Water is flowing from it&#46;&lt;/switchedondesc&gt;\n      &lt;onswitchoff type=&quot;script&quot;&gt;\n        this&#46;parent&#46;watersource = false\n      &lt;/onswitchoff&gt;\n    &lt;/object&gt;\n  &lt;/object&gt;\n  &lt;verb&gt;\n    &lt;property&gt;drinkfrom&lt;/property&gt;\n    &lt;pattern&gt;drink from&lt;/pattern&gt;\n    &lt;defaultexpression&gt;&quot;You can't drink from &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;\n  &lt;/verb&gt;\n&lt;/asl&gt;[/code:3ioholxs]\n\n[b:3ioholxs][i:3ioholxs]What next?[/i:3ioholxs]\n[/b:3ioholxs]\nIf you have several water containers, you might want to create a watercontainer type. This again follows the DRY principle.\n\nWhat about different liquids? Is there a contaminated water source? A vial of poison that can be added to water? Perhaps a source of oil that does not mix with the water. Just remember, it will get complicated, and you are on your own!",
      "EditableFormat": "bbcode",
      "HTML": "There is more than one way to do this, but this is what I recommend. This will involve setting attributes, so you will struggle with the on-line editor.<br/><br/>What we will do is to create a waterskin that can be filled and drunk from, and then set up a room with a pool of water and another with a tap.<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">The waterskin</span></span><br/><br/>So first create the waterskin, in the normal way. Give it two integer attributes, &quot;full&quot; and &quot;capacity&quot;. Set them to 0 and 10 respectively. The full attribute will track how much water is in the waterskin, the capacity will be the maximum. You may want to play around with these values.<br/><br/>Then go to the verbs tab, and create a new verb,  &quot;fill&quot;. Paste in this code:<br/><pre><code>if (this&#46;full = this&#46;capacity) {<br/>  msg (&quot;It is already full&#46;&quot;)<br/>}<br/>else if (not GetBoolean(game&#46;pov&#46;parent, &quot;watersource&quot;)) {<br/>  msg (&quot;No water here&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;You fill it&#46;&quot;)<br/>  this&#46;full = this&#46;capacity<br/>}</code></pre><br/>All this does is check if the waterskin is already full, then check if there is water. If all is okay, the waterskin gets filled.<br/><br/>You might want to give it a description like this:<br/><pre><code>The waterskin {if waterskin&#46;full=0&#58;is empty}{if waterskin&#46;full&lt;&gt;0&#58;contains some water}&#46;</code></pre><br/>The text processor is a bit limited, and you might prefer to use a script so you can say how full it is.<br/><pre><code>if (this&#46;full = 0) {<br/>  msg (&quot;The waterskin&#46;&quot;)<br/>}<br/>else if (this&#46;full = this&#46;capacity) {<br/>  msg (&quot;The waterskin is full&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;The waterskin is about &quot; + (waterskin&#46;full  * 10) + &quot;% full&#46;&quot;)<br/>}</code></pre><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">A Source of Water</span></span><br/><br/>Now we will do a room with a pool of clear, fresh water. Create a room, give it a Boolean attribute, &quot;watersource&quot;, and set it to true.<br/><br/>Now you should be able to go in-game and fill the waterskin with water.<br/><br/>For a room with a tap, create the room, then create the tap as an object in it. For the tap, on the Features tab tick Switchable. On the Switchable tab set it to &quot;Can be switched...&quot;. Fill in the text boxes as you like. For the first script, paste in this:<br/><pre><code>this&#46;parent&#46;watersource = true</code></pre><br/>And for the second:<br/><pre><code>this&#46;parent&#46;watersource = false</code></pre><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">Playing With water</span></span><br/><br/>What else do you want to do? Well, you could empty it. Create an &quot;empty&quot; verb, and paste this in.<br/><pre><code>if (this&#46;full = 0) {<br/>  msg (&quot;It is already empty&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;You empty it&#46;&quot;)<br/>  this&#46;full = 0<br/>}</code></pre><br/>Is there some point to emptying it? Perhaps there is a room with a fire, and emptying the waterskin will put the fire out. You could do that like this:<br/><pre><code>if (this&#46;full = 0) {<br/>  msg (&quot;It is already empty&#46;&quot;)<br/>}<br/>else if (game&#46;pov&#46;parent = room_with_fire) {<br/>  msg (&quot;You empty it over the fire, which sizzles and spits, then dies&#46;&quot;)<br/>  this&#46;full = 0<br/>  room_with_fire&#46;fireout = true<br/>}<br/>else {<br/>  msg (&quot;You empty it&#46;&quot;)<br/>  this&#46;full = 0<br/>}</code></pre><br/><br/>You might want to drink from the waterskin. Add a &quot;drink from&quot; verb, and paste this in:<br/><pre><code>if (this&#46;full = 0) {<br/>  msg (&quot;It is empty&#46;&quot;)<br/>}<br/>else {<br/>  msg (&quot;You take a drink from it&#46;&quot;)<br/>  this&#46;full = this&#46;full - 1<br/>}</code></pre><br/>Water is does is check the waterskin is not empty, and if not reduces its contents by 1. You might want to do some other things in the second block, if the player is going to die of thirst; that is up to you to sort out!<br/><br/>You might want to use the waterskin, i.e., (I guess) drink from it. Use is kind of built-in, so takes a bit of setting up. Go to the Features tab, and tick Use/Give. Then go to the Use/Give tab, and at the top, for &quot;Use (on its own)&quot;, set the action to &quot;Run script&quot;. This does the same thing as &quot;drink from&quot;, so we can use that script (note that spaces are removed from the verb to make the attribute name).<br/><pre><code>do(this, &quot;drinkfrom&quot;)</code></pre><br/>You could have pasted the script from &quot;drink from&quot; in here, but this way is better in the long term. If you later decide you want to change the effects of drinking water, you only have to change it in one place, rather than remember to do both. This is a principle in software engineering called DRY (Don't Repeat Yourself).<br/><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">A Working Example</span></span><br/><br/>Here is a full game code that does all that, to prove it really works.<br/><pre><code>&lt;!--Saved by Quest 5&#46;6&#46;5783&#46;24153--&gt;<br/>&lt;asl version=&quot;550&quot;&gt;<br/>  &lt;include ref=&quot;English&#46;aslx&quot; /&gt;<br/>  &lt;include ref=&quot;Core&#46;aslx&quot; /&gt;<br/>  &lt;game name=&quot;water&quot;&gt;<br/>    &lt;gameid&gt;ceb08755-71c8-4656-b83f-e2003aebc0b9&lt;/gameid&gt;<br/>    &lt;version&gt;1&#46;0&lt;/version&gt;<br/>    &lt;firstpublished&gt;2016&lt;/firstpublished&gt;<br/>  &lt;/game&gt;<br/>  &lt;object name=&quot;room&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;object name=&quot;player&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;editor_player&quot; /&gt;<br/>      &lt;object name=&quot;waterskin&quot;&gt;<br/>        &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>        &lt;full type=&quot;int&quot;&gt;0&lt;/full&gt;<br/>        &lt;capacity type=&quot;int&quot;&gt;10&lt;/capacity&gt;<br/>        &lt;fill type=&quot;script&quot;&gt;<br/>          if (this&#46;full = this&#46;capacity) {<br/>            msg (&quot;It is already full&#46;&quot;)<br/>          }<br/>          else if (not GetBoolean(game&#46;pov&#46;parent, &quot;watersource&quot;)) {<br/>            msg (&quot;No water here&#46;&quot;)<br/>          }<br/>          else {<br/>            msg (&quot;You fill it&#46;&quot;)<br/>            this&#46;full = this&#46;capacity<br/>          }<br/>        &lt;/fill&gt;<br/>        &lt;look type=&quot;script&quot;&gt;<br/>          if (this&#46;full = 0) {<br/>            msg (&quot;The waterskin is empty&#46;&quot;)<br/>          }<br/>          else if (this&#46;full = this&#46;capacity) {<br/>            msg (&quot;The waterskin is full&#46;&quot;)<br/>          }<br/>          else {<br/>            msg (&quot;The waterskin is about &quot; + (waterskin&#46;full  * 10) + &quot;% full&#46;&quot;)<br/>          }<br/>        &lt;/look&gt;<br/>        &lt;empty type=&quot;script&quot;&gt;<br/>          if (this&#46;full = 0) {<br/>            msg (&quot;It is already empty&#46;&quot;)<br/>          }<br/>          else if (game&#46;pov&#46;parent = room_with_fire) {<br/>            msg (&quot;You empty it over the fire, which sizzles and spits, then dies&#46;&quot;)<br/>            this&#46;full = 0<br/>            room_with_fire&#46;fireout = true<br/>          }<br/>          else {<br/>            msg (&quot;You empty it&#46;&quot;)<br/>            this&#46;full = 0<br/>          }<br/>        &lt;/empty&gt;<br/>        &lt;feature_usegive /&gt;<br/>        &lt;givesingle /&gt;<br/>        &lt;use type=&quot;script&quot;&gt;<br/>          do (this, &quot;drinkfrom&quot;)<br/>        &lt;/use&gt;<br/>        &lt;drinkfrom type=&quot;script&quot;&gt;<br/>          if (this&#46;full = 0) {<br/>            msg (&quot;It is empty&#46;&quot;)<br/>          }<br/>          else {<br/>            msg (&quot;You take a drink from it&#46;&quot;)<br/>            this&#46;full = this&#46;full - 1<br/>          }<br/>        &lt;/drinkfrom&gt;<br/>      &lt;/object&gt;<br/>    &lt;/object&gt;<br/>    &lt;exit alias=&quot;south&quot; to=&quot;room_with_pool&quot;&gt;<br/>      &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;exit alias=&quot;east&quot; to=&quot;room_with_tap&quot;&gt;<br/>      &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;fill&lt;/property&gt;<br/>    &lt;pattern&gt;fill&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't fill &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;object name=&quot;room_with_pool&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;description&gt;There is a pool of water&#46;&lt;/description&gt;<br/>    &lt;watersource /&gt;<br/>    &lt;exit alias=&quot;north&quot; to=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;exit alias=&quot;east&quot; to=&quot;room_with_fire&quot;&gt;<br/>      &lt;inherit name=&quot;eastdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;empty&lt;/property&gt;<br/>    &lt;pattern&gt;empty&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't empty &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>  &lt;object name=&quot;room_with_fire&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;fireout type=&quot;boolean&quot;&gt;false&lt;/fireout&gt;<br/>    &lt;description&gt;{if room_with_fire&#46;fireout&#58;The fire is out}{if not room_with_fire&#46;fireout&#58;There is a fire burning}&#46;&lt;/description&gt;<br/>    &lt;exit alias=&quot;west&quot; to=&quot;room_with_pool&quot;&gt;<br/>      &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;exit alias=&quot;north&quot; to=&quot;room_with_tap&quot;&gt;<br/>      &lt;inherit name=&quot;northdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>  &lt;/object&gt;<br/>  &lt;object name=&quot;room_with_tap&quot;&gt;<br/>    &lt;inherit name=&quot;editor_room&quot; /&gt;<br/>    &lt;exit alias=&quot;south&quot; to=&quot;room_with_fire&quot;&gt;<br/>      &lt;inherit name=&quot;southdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;exit alias=&quot;west&quot; to=&quot;room&quot;&gt;<br/>      &lt;inherit name=&quot;westdirection&quot; /&gt;<br/>    &lt;/exit&gt;<br/>    &lt;object name=&quot;tap&quot;&gt;<br/>      &lt;inherit name=&quot;editor_object&quot; /&gt;<br/>      &lt;inherit name=&quot;switchable&quot; /&gt;<br/>      &lt;feature_switchable /&gt;<br/>      &lt;switchonmsg&gt;You turn on the tap, Water flows into the sink and down the plug hole&#46;&lt;/switchonmsg&gt;<br/>      &lt;switchoffmsg&gt;You turn it off&#46;&lt;/switchoffmsg&gt;<br/>      &lt;onswitchon type=&quot;script&quot;&gt;<br/>        this&#46;parent&#46;watersource = true<br/>      &lt;/onswitchon&gt;<br/>      &lt;switchedondesc&gt;Water is flowing from it&#46;&lt;/switchedondesc&gt;<br/>      &lt;onswitchoff type=&quot;script&quot;&gt;<br/>        this&#46;parent&#46;watersource = false<br/>      &lt;/onswitchoff&gt;<br/>    &lt;/object&gt;<br/>  &lt;/object&gt;<br/>  &lt;verb&gt;<br/>    &lt;property&gt;drinkfrom&lt;/property&gt;<br/>    &lt;pattern&gt;drink from&lt;/pattern&gt;<br/>    &lt;defaultexpression&gt;&quot;You can't drink from &quot; + object&#46;article + &quot;&#46;&quot;&lt;/defaultexpression&gt;<br/>  &lt;/verb&gt;<br/>&lt;/asl&gt;</code></pre><br/><br/><span style=\"font-weight:bold;\"><span style=\"font-style:italic;\">What next?</span><br/></span><br/>If you have several water containers, you might want to create a watercontainer type. This again follows the DRY principle.<br/><br/>What about different liquids? Is there a contaminated water source? A vial of poison that can be added to water? Perhaps a source of oil that does not mix with the water. Just remember, it will get complicated, and you are on your own!",
      "PostDate": "2016-06-17T20:32:05+01:00",
      "LastEditDate": null
    },
    {
      "PostId": "43550",
      "UserId": 0,
      "Username": "The Pixie",
      "UserAvatar": null,
      "UserGravatar": "cfa37e927f96177bcf6053ae8f108f77",
      "EditableText": "I have turned this into a library, and made a demo game. Once you have added the library, you will see a new tab appears, Liquids. It can now handle different liquids too!\n\n[i:whxo0wgg]For Rooms:[/i:whxo0wgg]\nYou can set a room to be a source of a certain liquid, and specific what that is. You can also add a script that will be run if a container is emptied in the room.\n\n[i:whxo0wgg]For objects:[/i:whxo0wgg]\nYou can set them to be containers (of liquids) and given them a capacity and starting volume and liquid.\n\nThere are two functions you may want to add to your game to determine what happens if the player mixes two liquids together in a container, and what happens when she drinks from a container.\n[i:whxo0wgg]\nMixLiquid (object container, string liquidtype)[/i:whxo0wgg]\n\nThis function needs to set the liquidtype of container, based on what is already in it, and what you are adding to it. It should also print a message. The function is only used if the container was not already full or empty.\n\n[i:whxo0wgg]DrinkLiquid (string liquidtype)[/i:whxo0wgg]\n\nThis function determines what happens when the given liquid is drunk. The volume in the container will be automatically reduced, but you do need to print a message.\n\nLibrary: [attachment=1:whxo0wgg]<!-- ia1 -->LiquidLib.aslx<!-- ia1 -->[/attachment:whxo0wgg]\nDemo: [attachment=0:whxo0wgg]<!-- ia0 -->water.aslx<!-- ia0 -->[/attachment:whxo0wgg]",
      "EditableFormat": "bbcode",
      "HTML": "I have turned this into a library, and made a demo game. Once you have added the library, you will see a new tab appears, Liquids. It can now handle different liquids too!<br/><br/><span style=\"font-style:italic;\">For Rooms:</span><br/>You can set a room to be a source of a certain liquid, and specific what that is. You can also add a script that will be run if a container is emptied in the room.<br/><br/><span style=\"font-style:italic;\">For objects:</span><br/>You can set them to be containers (of liquids) and given them a capacity and starting volume and liquid.<br/><br/>There are two functions you may want to add to your game to determine what happens if the player mixes two liquids together in a container, and what happens when she drinks from a container.<br/><span style=\"font-style:italic;\"><br/>MixLiquid (object container, string liquidtype)</span><br/><br/>This function needs to set the liquidtype of container, based on what is already in it, and what you are adding to it. It should also print a message. The function is only used if the container was not already full or empty.<br/><br/><span style=\"font-style:italic;\">DrinkLiquid (string liquidtype)</span><br/><br/>This function determines what happens when the given liquid is drunk. The volume in the container will be automatically reduced, but you do need to print a message.<br/><br/>Library: <div><a href=\"/attachment/1600\">LiquidLib.aslx</a></div><br/>Demo: <div><a href=\"/attachment/1601\">water.aslx</a></div>",
      "PostDate": "2016-06-18T12:42:01+01:00",
      "LastEditDate": null
    }
  ]
}
