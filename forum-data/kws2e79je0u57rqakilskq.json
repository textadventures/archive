{
  "Topic": {
    "TopicId": "kws2e79je0u57rqakilskq",
    "ForumId": "10",
    "Title": "yes/no question function",
    "LastUpdated": "2019-04-22T01:36:55.575919Z",
    "ReplyCount": 0
  },
  "Posts": [
    {
      "PostId": "35463f7a-1de5-419d-9df2-67eb3b5fc01e",
      "UserId": 215030,
      "Username": "shakey2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "I got a game here that I don't want to write the same yes/no prompt every time. I'm finding there is no global variables, and people are saying to use attributes instead. But I can't figure out how to call an attribute from another object to make a yes/no prompt. So I think \"well I should just write a function\" right? The problem is if/else expressions try to evaluate immediately so if the function doesn't evaluate immediately then the whole thing falls apart. Is there a way to make this work without having to write the same line of code every time I want to make a yes/no prompt?\r\n\r\n<code>            if (yesnoF() = \"yes\") {\r\n              msg (\"Yes placeholder\")\r\n            }\r\n            else {\r\n              msg (\"No placeholder\")\r\n            }</code>\r\n<details>\r\n\r\n![alt text](https://i.imgur.com/CdoDqsF.png)\r\n\r\n![alt text](https://i.imgur.com/itYAitL.png)</details>",
      "EditableFormat": "markdown",
      "HTML": "<p>I got a game here that I don't want to write the same yes/no prompt every time. I'm finding there is no global variables, and people are saying to use attributes instead. But I can't figure out how to call an attribute from another object to make a yes/no prompt. So I think \"well I should just write a function\" right? The problem is if/else expressions try to evaluate immediately so if the function doesn't evaluate immediately then the whole thing falls apart. Is there a way to make this work without having to write the same line of code every time I want to make a yes/no prompt?</p>\n<p><code>            if (yesnoF() = \"yes\") {<br>\nmsg (\"Yes placeholder\")<br>\n}<br>\nelse {<br>\nmsg (\"No placeholder\")<br>\n}</code></p>\n<details>\n<p><img src=\"https://i.imgur.com/CdoDqsF.png\" alt=\"alt text\"></p>\n<p><img src=\"https://i.imgur.com/itYAitL.png\" alt=\"alt text\"></p></details><p></p>\n\n",
      "PostDate": "2019-04-22T01:36:55.575919Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "de8b1970-2898-4db7-acc9-1cbd086ea07f",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You can't do that, because it's asynchronous. Your function `yesnoF` finishes as soon as the menu has been *displayed*, it doesn't wait for an answer.\r\n\r\nWhat you probably want is something like the core function `Ask`.\r\nSo you can do something like:\r\n```\r\nAsk (\"Some question here\") {\r\n  if (result) {\r\n    msg (\"Yes placeholder\")\r\n  }\r\n  else {\r\n    msg (\"No placeholder\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>You can't do that, because it's asynchronous. Your function <code>yesnoF</code> finishes as soon as the menu has been <em>displayed</em>, it doesn't wait for an answer.</p>\n<p>What you probably want is something like the core function <code>Ask</code>.<br>\nSo you can do something like:</p>\n<pre><code>Ask (\"Some question here\") {\n  if (result) {\n    msg (\"Yes placeholder\")\n  }\n  else {\n    msg (\"No placeholder\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2019-04-22T02:57:55.1847921Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "213c57ae-f2cb-4af7-a04b-07b6592ef565",
      "UserId": 215030,
      "Username": "shakey2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "So thats how ask works, thanks for that. But this is going to be annoying when I want to ask anything repeatedly that's not a yes or no question. What if I use await?",
      "EditableFormat": "markdown",
      "HTML": "<p>So thats how ask works, thanks for that. But this is going to be annoying when I want to ask anything repeatedly that's not a yes or no question. What if I use await?</p>\n\n",
      "PostDate": "2019-04-22T04:33:17.9917042Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "af9ca165-3f7d-45ff-88ec-c13a23ab9c93",
      "UserId": 56551,
      "Username": "XanMag",
      "AvatarUrl": "https://secure.gravatar.com/avatar/4b45a3afd18077f76f6569225c422bdb?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "You could use a switch/case?",
      "EditableFormat": "markdown",
      "HTML": "<p>You could use a switch/case?</p>\n\n",
      "PostDate": "2019-04-22T06:11:54.2728073Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "663ac387-bafa-4b3e-b99d-20b8b0452682",
      "UserId": 247325,
      "Username": "hegemonkhan",
      "AvatarUrl": "https://secure.gravatar.com/avatar/a96cf34d8d97c57de38f54ee22b1759b?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "(filler for getting my edited post, udpated/posted)\r\n\r\n--------------\r\n\r\nthe 'ask/Ask' is a built-in Function for asking a 'yes/no' question\r\n\r\n--------------\r\n\r\nfor a normal question, you can use the built-in 'show menu / ShowMenu' Functions:\r\n\r\n(in example below, I use a 'ask' Function for whether to re-do/loop/repeat the race selection or not)\r\n\r\n(you need some form of check in whether to loop or not, else you've got an endless/infinite loop, which crashes quest, as the computer's resources/memory isn't infinite, whereas the endless/infinite loop uses infinite resources/memory)\r\n\r\n```\r\n<game name=\"NAME_OF_GAME\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    create (\"character_data_object\")\r\n\r\n    character_data_object.race_stringlist_attribute = NewStringList ()\r\n    list add (character_data_object.race_stringlist_attribute, \"human\")\r\n    list add (character_data_object.race_stringlist_attribute, \"dwarf\")\r\n    list add (character_data_object.race_stringlist_attribute, \"elf\")\r\n    list add (character_data_object.race_stringlist_attribute, \"gnome\")\r\n    list add (character_data_object.race_stringlist_attribute, \"halfling\")\r\n    list add (character_data_object.race_stringlist_attribute, \"giant\")\r\n\r\n    race_function\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<function name=\"race_function\">\r\n\r\n  ClearScreen\r\n  show menu (\"Race?\", character_data_object.race_stringlist_attribute, false) {\r\n    player.race_string_attribute = result\r\n    msg (\"Your selected race: \" + player.race_string_attribute)\r\n    ask (\"Correct?\") {\r\n      if (not result) {\r\n        race_function\r\n      }\r\n    }\r\n  }\r\n\r\n</function>\r\n```\r\n\r\n--------\r\n\r\nexample of an infinite/endless loop:\r\n\r\n(there's no displayment/output for you to see, so all you'll experience is quest crashing \"without warning\")\r\n\r\n```\r\n<game name=\"NAME_OF_GAME\">\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    infinite_loop_function\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<function name=\"infinite_loop_function\">\r\n\r\n  infinite_loop_function\r\n\r\n</function>\r\n```\r\n\r\n----------\r\n\r\nexample of an infinite/endless loop:\r\n\r\n(this time I've added in displayment/output/tracking, so you can see it in action, and not just experience quest crashing on you with \"no warning\"  like above in the previous example)\r\n\r\n```\r\n<game name=\"NAME_OF_GAME\">\r\n\r\n  <attr name=\"counter\" type=\"int\">0</attr>\r\n\r\n  <attr name=\"start\" type=\"script\">\r\n\r\n    infinite_loop_function\r\n\r\n  </attr>\r\n\r\n</game>\r\n\r\n<function name=\"infinite_loop_function\">\r\n\r\n  msg (\"Counter: \" + game.counter)\r\n  game.counter = game.counter + 1\r\n  infinite_loop_function\r\n\r\n</function>\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<p>(filler for getting my edited post, udpated/posted)</p>\n<hr>\n<p>the 'ask/Ask' is a built-in Function for asking a 'yes/no' question</p>\n<hr>\n<p>for a normal question, you can use the built-in 'show menu / ShowMenu' Functions:</p>\n<p>(in example below, I use a 'ask' Function for whether to re-do/loop/repeat the race selection or not)</p>\n<p>(you need some form of check in whether to loop or not, else you've got an endless/infinite loop, which crashes quest, as the computer's resources/memory isn't infinite, whereas the endless/infinite loop uses infinite resources/memory)</p>\n<pre><code>&lt;game name=\"NAME_OF_GAME\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    create (\"character_data_object\")\n\n    character_data_object.race_stringlist_attribute = NewStringList ()\n    list add (character_data_object.race_stringlist_attribute, \"human\")\n    list add (character_data_object.race_stringlist_attribute, \"dwarf\")\n    list add (character_data_object.race_stringlist_attribute, \"elf\")\n    list add (character_data_object.race_stringlist_attribute, \"gnome\")\n    list add (character_data_object.race_stringlist_attribute, \"halfling\")\n    list add (character_data_object.race_stringlist_attribute, \"giant\")\n\n    race_function\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;function name=\"race_function\"&gt;\n\n  ClearScreen\n  show menu (\"Race?\", character_data_object.race_stringlist_attribute, false) {\n    player.race_string_attribute = result\n    msg (\"Your selected race: \" + player.race_string_attribute)\n    ask (\"Correct?\") {\n      if (not result) {\n        race_function\n      }\n    }\n  }\n\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>example of an infinite/endless loop:</p>\n<p>(there's no displayment/output for you to see, so all you'll experience is quest crashing \"without warning\")</p>\n<pre><code>&lt;game name=\"NAME_OF_GAME\"&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    infinite_loop_function\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;function name=\"infinite_loop_function\"&gt;\n\n  infinite_loop_function\n\n&lt;/function&gt;\n</code></pre>\n<hr>\n<p>example of an infinite/endless loop:</p>\n<p>(this time I've added in displayment/output/tracking, so you can see it in action, and not just experience quest crashing on you with \"no warning\"  like above in the previous example)</p>\n<pre><code>&lt;game name=\"NAME_OF_GAME\"&gt;\n\n  &lt;attr name=\"counter\" type=\"int\"&gt;0&lt;/attr&gt;\n\n  &lt;attr name=\"start\" type=\"script\"&gt;\n\n    infinite_loop_function\n\n  &lt;/attr&gt;\n\n&lt;/game&gt;\n\n&lt;function name=\"infinite_loop_function\"&gt;\n\n  msg (\"Counter: \" + game.counter)\n  game.counter = game.counter + 1\n  infinite_loop_function\n\n&lt;/function&gt;\n</code></pre>\n\n",
      "PostDate": "2019-04-22T07:04:30.4306428Z",
      "LastEditDate": "2019-04-22T07:20:23.665348Z",
      "link": null
    },
    {
      "PostId": "f785454a-750d-4658-9a7a-24b11183d866",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "> What if I use await?\r\n\r\nNo, wait just waits for the game engine to not be doing anything.\r\n\r\nThe `Ask` and `ShowMenu` functions display a menu, and make a note of some code to be run when the player clicks on that menu. As far as Quest's concerned, it isn't \"doing\" anything.\r\n\r\n> But this is going to be annoying when I want to ask anything repeatedly that's not a yes or no question.\r\n\r\nYou could make a function that works the same way Ask does: its parameter is a callback script.\r\nFor example, I create a function called \"`RockPaperScissors`\", with a parameter named `script`.\r\nI give it the contents:\r\n```\r\noptions = Split(\"Rock;Paper;Scissors\")\r\ngame.rpscallback = script\r\nShowMenu (\"\", options, false) {\r\n  NPCthrows = PickOneString (Split (\"Rock;Paper;Scissors\"))\r\n  if (NPCthrows = result) {\r\n    msg (\"You both picked \"+result+\"! Go again?\")\r\n    Ask (\"Play again?\") {\r\n      if (result) {\r\n        RockPaperScissors (game.rpscallback)\r\n      }\r\n      else {\r\n        msg (\"You resign\")\r\n        params = QuickParams (\"playerthrow\", result, \"npcthrow\", NPCthrows, \"win\", false)\r\n        do (game, \"rpscallback\", params)\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    msg (\"You say \"+result+\" and the other guy says \"+NPCthrows+\".\")\r\n    params = QuickParams (\"playerthrow\", result, \"npcthrow\", NPCthrows)\r\n    switch (result + NPCthrows) {\r\n      case (\"RockPaper\", \"PaperScissors\", \"ScissorsRock\") {\r\n        msg (\"You lose!\")\r\n        dictionary add (params, \"win\", false)\r\n      }\r\n      case (\"PaperRock\", \"ScissorsPaper\", \"RockScissors\") {\r\n        msg (\"You win!\")\r\n        dictionary add (params, \"win\", true)\r\n      }\r\n    }\r\n    do (game, \"rpscallback\", params)\r\n  }\r\n}\r\n```\r\nThis is a bit more complex than the `Ask` example; but in this case the function is doing a little more than just asking a question.\r\nIf you're just asking the same question lots of times, then checking the result from a function you've written is about as complex as checking the result from ShowMenu, so there's little time saving.\r\n\r\nThe function above could be used like:\r\n```\r\nmsg (\"Bob challenges you to play rock/paper/scissors to decide who gets the treasure chest.\")\r\nRockPaperScissors() {\r\n  if (win) {\r\n    msg (\"“Awww,” Bob sulks. “Fine, you take it!”\")\r\n    AddToInventory (TreasureChest)\r\n  }\r\n  else {\r\n    msg (\"“Heh,” Bob sneers. “You got a tell!”\")\r\n  }\r\n}\r\n```",
      "EditableFormat": "markdown",
      "HTML": "<blockquote>\n<p>What if I use await?</p>\n</blockquote>\n<p>No, wait just waits for the game engine to not be doing anything.</p>\n<p>The <code>Ask</code> and <code>ShowMenu</code> functions display a menu, and make a note of some code to be run when the player clicks on that menu. As far as Quest's concerned, it isn't \"doing\" anything.</p>\n<blockquote>\n<p>But this is going to be annoying when I want to ask anything repeatedly that's not a yes or no question.</p>\n</blockquote>\n<p>You could make a function that works the same way Ask does: its parameter is a callback script.<br>\nFor example, I create a function called \"<code>RockPaperScissors</code>\", with a parameter named <code>script</code>.<br>\nI give it the contents:</p>\n<pre><code>options = Split(\"Rock;Paper;Scissors\")\ngame.rpscallback = script\nShowMenu (\"\", options, false) {\n  NPCthrows = PickOneString (Split (\"Rock;Paper;Scissors\"))\n  if (NPCthrows = result) {\n    msg (\"You both picked \"+result+\"! Go again?\")\n    Ask (\"Play again?\") {\n      if (result) {\n        RockPaperScissors (game.rpscallback)\n      }\n      else {\n        msg (\"You resign\")\n        params = QuickParams (\"playerthrow\", result, \"npcthrow\", NPCthrows, \"win\", false)\n        do (game, \"rpscallback\", params)\n      }\n    }\n  }\n  else {\n    msg (\"You say \"+result+\" and the other guy says \"+NPCthrows+\".\")\n    params = QuickParams (\"playerthrow\", result, \"npcthrow\", NPCthrows)\n    switch (result + NPCthrows) {\n      case (\"RockPaper\", \"PaperScissors\", \"ScissorsRock\") {\n        msg (\"You lose!\")\n        dictionary add (params, \"win\", false)\n      }\n      case (\"PaperRock\", \"ScissorsPaper\", \"RockScissors\") {\n        msg (\"You win!\")\n        dictionary add (params, \"win\", true)\n      }\n    }\n    do (game, \"rpscallback\", params)\n  }\n}\n</code></pre>\n<p>This is a bit more complex than the <code>Ask</code> example; but in this case the function is doing a little more than just asking a question.<br>\nIf you're just asking the same question lots of times, then checking the result from a function you've written is about as complex as checking the result from ShowMenu, so there's little time saving.</p>\n<p>The function above could be used like:</p>\n<pre><code>msg (\"Bob challenges you to play rock/paper/scissors to decide who gets the treasure chest.\")\nRockPaperScissors() {\n  if (win) {\n    msg (\"“Awww,” Bob sulks. “Fine, you take it!”\")\n    AddToInventory (TreasureChest)\n  }\n  else {\n    msg (\"“Heh,” Bob sneers. “You got a tell!”\")\n  }\n}\n</code></pre>\n\n",
      "PostDate": "2019-04-22T10:49:08.3474368Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "eeed71b8-b415-45bb-a707-b4f97f86d744",
      "UserId": 215030,
      "Username": "shakey2",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "@hegemonkhan Thanks, that was really helpful. Now I understand how to reference attributes of other objects, which is what I couldn't figure out. Truth be told I'm using the visual editor rather than script but the only help given out is for scripting. But I've realized something that probably should have been obvious. In the future I'm gonna just start using the quest docs and copy pasting the scripts from examples to see how they translate when switching to the visual editor.\r\n\r\n@mrangel I was referring to javascript \"await\" which pauses asynchronous functions. Though maybe I'm misunderstanding how await works. But the script you posted is helpful, I'll use it as a reference going forward thanks!\r\n\r\nWith this my problems are solved, thanks again for all the help both of you.",
      "EditableFormat": "markdown",
      "HTML": "<p>@hegemonkhan Thanks, that was really helpful. Now I understand how to reference attributes of other objects, which is what I couldn't figure out. Truth be told I'm using the visual editor rather than script but the only help given out is for scripting. But I've realized something that probably should have been obvious. In the future I'm gonna just start using the quest docs and copy pasting the scripts from examples to see how they translate when switching to the visual editor.</p>\n<p>@mrangel I was referring to javascript \"await\" which pauses asynchronous functions. Though maybe I'm misunderstanding how await works. But the script you posted is helpful, I'll use it as a reference going forward thanks!</p>\n<p>With this my problems are solved, thanks again for all the help both of you.</p>\n\n",
      "PostDate": "2019-04-22T17:14:19.7898178Z",
      "LastEditDate": null,
      "link": null
    },
    {
      "PostId": "5cfaf46d-07b5-4bc4-b4f2-d9a42b90b4cd",
      "UserId": 319917,
      "Username": "mrangel",
      "AvatarUrl": "https://secure.gravatar.com/avatar/?d=retro",
      "UserAvatar": null,
      "UserGravatar": null,
      "EditableText": "There is no `await` or equivalent in Quest script.\r\n\r\nYou could maybe use await to make your javascript code pause until it gets a response from Quest (although this would be difficult, as I don't think Quest provides promises for its state changes in any useful way); but there is no corresponding way to make the backend code on the Quest side wait for a response from your javascript.",
      "EditableFormat": "markdown",
      "HTML": "<p>There is no <code>await</code> or equivalent in Quest script.</p>\n<p>You could maybe use await to make your javascript code pause until it gets a response from Quest (although this would be difficult, as I don't think Quest provides promises for its state changes in any useful way); but there is no corresponding way to make the backend code on the Quest side wait for a response from your javascript.</p>\n\n",
      "PostDate": "2019-04-23T08:42:29.2204901Z",
      "LastEditDate": null,
      "link": null
    }
  ]
}
